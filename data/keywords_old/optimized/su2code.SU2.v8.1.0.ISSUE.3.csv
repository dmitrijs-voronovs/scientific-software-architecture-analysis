quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance,"## Motivation; Fundamental bottlenecks exist for industrial adoption of high-fidelity physics codes with fully coupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the deve",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:27,bottleneck,bottlenecks,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,3,"['bottleneck', 'optimiz']","['bottlenecks', 'optimization']"
Performance,"## Proposed Changes. Changes the loading of zlib and szip libraries from static (.a) to dynamic (.so).; Suggested by @aa-g at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. ## Related Work. None. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:33,load,loading,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['load'],['loading']
Performance,"## Proposed Changes. I have refactored some of the viscous residual calculation. This should not change any of the underlying numerics. + The stress tensor due to molecular viscosity and turbulence is now separated out from the residual calculation. This removes the implicit assumption that eddy-viscosity models are used. Now other models, such as explicit algebraic stress models, can be added.; + The ""heat flux vector"" was also separated out from the residual calculation.; + The Jacobian calculation for `CAvgGrad_Flow` has been rewritten so as to be more readable.; + The three main viscous numerics classes (`CAvgGrad_Flow`, `CGeneralAvgGrad_Flow`, and `CAvgGradInc_Flow`) are now all children of a base class, `CAvgGrad_Base`.; + Instead of two sets of classes for the viscous residual, normal and ""corrected"", I made a boolean switch in the constructor. This eliminates the duplication between normal and ""corrected"" viscous numerics. There's definitely some more work that could be done to generalize the base class and optimize the speed, but I'm content with the code for now. ## Related Work. This piggybacks off of PR #612, though the two PRs are separate and distinct. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:1031,optimiz,optimize,1031,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['optimiz'],['optimize']
Performance,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:21,Optimiz,Optimize,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,2,"['Optimiz', 'optimiz']","['Optimize', 'optimized']"
Performance,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:676,Perform,Performance,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,2,"['Perform', 'optimiz']","['Performance', 'optimizations']"
Performance,"## Proposed Changes. This PR adds the following features:; - New pressure inlet BC (specify total pressure) for the incompressible solver; - New mass flow outlet BC (specify target mass flow) for the incompressible solver; - Added outlet BC values to multipoint optimization options in python. It is now required to specify the type for each inlet and outlet BC in the incompressible solver. A descriptive error is thrown if this is not the case. For two inlet and outlets with different types, you would specify it as:. INC_INLET_TYPE= PRESSURE_INLET VELOCITY_INLET; INC_OUTLET_TYPE= MASS_FLOW_OUTLET PRESSURE_OUTLET. and the type order corresponds to the order of the markers given in MARKER_INLET and MARKER_OUTLET, respectively. An inviscid nozzle test case has been added to demonstrate the new features. Will update residuals in regressions once reported. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/621:262,optimiz,optimization,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/621,1,['optimiz'],['optimization']
Performance,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:100,optimiz,optimization,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,8,['optimiz'],"['optimization', 'optimize']"
Performance,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:322,perform,perform,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['perform'],['perform']
Performance,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:616,perform,performance,616,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['perform'],['performance']
Performance,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964:128,optimiz,optimization,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/964,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - During time-averaging, the weighted sum over previous timesteps is re-used to quickly update the time-average during inner iterations.; - Square-windowing now does not save the entire sample history, which should eliminate performance degradation when time-averaging is performed over many timesteps. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1545 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. (UnitTest); - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:317,perform,performance,317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,2,['perform'],"['performance', 'performed']"
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:273,load,loader,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,2,['load'],['loader']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:319,tune,tune,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,1,['tune'],['tune']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:734,optimiz,optimization,734,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:198,perform,performance,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['perform'],['performance']
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:714,optimiz,optimizations,714,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,3,"['optimiz', 'perform', 'scalab']","['optimizations', 'performance', 'scalability']"
Performance,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:991,optimiz,optimization,991,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:197,perform,performance,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,2,['perform'],['performance']
Performance,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294:299,optimiz,optimizations,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294,1,['optimiz'],['optimizations']
Performance,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:113,race condition,race conditions,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,1,['race condition'],['race conditions']
Performance,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:69,optimiz,optimization,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:117,optimiz,optimization,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:75,load,load,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['load'],['load']
Performance,"## Proposed Changes; Adds epistemic uncertainty quantification capabilities for the SST turbulence model. Details on methodology, implementation, and performance on test cases, are available here: https://arxiv.org/abs/1803.00725; . ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570:150,perform,performance,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/570,1,['perform'],['performance']
Performance,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:198,perform,performance,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,1,['perform'],['performance']
Performance,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:198,perform,performance,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,1,['perform'],['performance']
Performance,"## Proposed Changes; Couple efficiency/functionality improvements to the topology optimization implementation as detailed in TestCases/fea_topology/config.cfg. Edit: This requires c++11 so it will have to go after the PR that enables it. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:82,optimiz,optimization,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:44,perform,perform,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,2,"['optimiz', 'perform']","['optimization', 'perform']"
Performance,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/900:458,perform,performed,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/900,1,['perform'],['performed']
Performance,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:1350,scalab,scalability,1350,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,1,['scalab'],['scalability']
Performance,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1030:39,optimiz,optimization,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:96,load,load,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,1,['load'],['load']
Performance,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:116,Load,Load,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Load'],['Load']
Performance,"## Proposed Changes; Hi Folks,; I would like your views on something. Many of the convective schemes we have are small variations of each other, and so I was thinking we can maybe have some intermediate numerics classes to make things a bit easier to maintain, quicker to compile etc.; So far I experimented with having a base class for central schemes, the ComputeResidual method is moved to this class and the children classes (Lax, JST, and JST_KE) only implement the artificial dissipation part specific to them.; Similarly AUSM+up(1/2) and SLAU(1/2) only differ in how the mass and pressure fluxes are computed so again a common base for these 4 could be devised. Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way (currently the Roe Jacobian is used).; There is a very small performance penalty (maybe 1-2% for explicit solution methods) but my reason to be looking at the numerics in the first place is that with some small tweaks to the Jacobians we can probably run most schemes at higher CFL (namely increase the dissipative part of the Jacobian to make the system matrix more diagonal dominant) so for implicit solution methods there would be a speedup.; So, what do you think?; Cheers,; Pedro. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691:870,perform,performance,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/691,1,['perform'],['performance']
Performance,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:198,Load,LoadRestart,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,1,['Load'],['LoadRestart']
Performance,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:59,load,loading,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,4,['load'],"['loaded', 'loading']"
Performance,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:90,optimiz,optimization,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,3,['optimiz'],['optimization']
Performance,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:277,optimiz,optimization,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,2,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:186,perform,performance,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,3,"['Perform', 'optimiz', 'perform']","['Performance', 'optimizations', 'performance']"
Performance,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:674,load,load,674,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['load'],['load']
Performance,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:485,optimiz,optimized,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,3,['optimiz'],['optimized']
Performance,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:75,perform,perform,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,2,['perform'],['perform']
Performance,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:325,multi-thread,multi-thread,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['multi-thread'],['multi-thread']
Performance,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:216,perform,perform,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,1,['perform'],['perform']
Performance,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:157,optimiz,optimization,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:21,Optimiz,Optimization,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,2,"['Optimiz', 'Perform']","['Optimization', 'Performed']"
Performance,"## Proposed Changes; Plain vanilla approach to topology optimization, element-wise constant density parameterization and SIMP interpolation scheme. It is working nicely for 2D cases of moderate size (10 to 100k elements), over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:56,optimiz,optimization,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,3,"['Scalab', 'optimiz']","['Scalability', 'optimization', 'optimizer']"
Performance,"## Proposed Changes; Problem: If a given displacement boundary was cut during partitioning the solver would give wrong results.; Reason: When ""de-singularizing"" the stiffness matrix the column was only being deleted by the rank that owned the corresponding node.; Fix: All ranks delete the column (and update the load vector). Before:; ![image](https://user-images.githubusercontent.com/38071223/53267067-619d9b00-36da-11e9-8feb-5e77d5c7f3ef.png). After:; ![image](https://user-images.githubusercontent.com/38071223/53267075-695d3f80-36da-11e9-93bf-2e18e2e649dc.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/658:313,load,load,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/658,1,['load'],['load']
Performance,"## Proposed Changes; Recompute rho and h instead of reconstructing (for performance). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2356:72,perform,performance,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2356,1,['perform'],['performance']
Performance,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:158,perform,performs,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['perform'],['performs']
Performance,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1020:345,optimiz,optimization,345,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/975:647,scalab,scalability,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/975,1,['scalab'],['scalability']
Performance,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1070:70,load,load,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070,2,['load'],['load']
Performance,"## Proposed Changes; The flags 'WRT_VOLUME_OVERWRITE', 'WRT_SURFACE_OVERWRITE', and 'WRT_RESTART_OVERWRITE' are not working correctly. This commit fixes this.; ; The expected behavior is this:; The user specifies what kind of output files should be written using the OUTPUT_FILES flag. These output files can be volume or surface files for visualization like Tecplot or Paraview files, volumetric restart files to be used as initial conditions for another SU2 run, or mesh format files like CGNS or STL files.; Furthermore, the user can choose to not overwrite these files, but rather add the current iteration number to the file name and keep dumping such files during the calculation. This is done using the three WRT_*_OVERWRITE flags mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1008,perform,performed,1008,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['perform'],['performed']
Performance,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:103,race condition,race conditions,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,2,"['perform', 'race condition']","['performance', 'race conditions']"
Performance,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022:115,perform,performance,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022,4,"['optimiz', 'perform']","['optimization', 'optimizations', 'performance']"
Performance,"## Proposed Changes; There has been talk about using external solvers in SU2. I am especially interested in this as due to the ill-conditioned matrices I get in structural topology optimization a direct sparse solver will probably be required.; One tricky issue with using external solvers is their compatibility with the discrete adjoint. Luckily in the reverse mode we do not differentiate the solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:181,optimiz,optimization,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:1010,perform,performed,1010,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['perform'],['performed']
Performance,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:822,Perform,Performance,822,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,2,"['Optimiz', 'Perform']","['Optimization', 'Performance']"
Performance,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:227,optimiz,optimize,227,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,4,"['optimiz', 'perform']","['optimize', 'performance']"
Performance,"## Proposed Changes; This PR adds the capability to simulate the AIR-7 gas model using SU2TCLib for viscous problems. Specific contributions include:; - Fix Gupta-Yos transport models for all flows (including ionized); - inclusion of Coulomb interaction cross sections for ion-ion collisions. Following the implementation detailed in Scalabrin's thesis. ## Related Work; PRs #1497 #1555 . Update to NEMO documentation includes description of GY model, see: https://github.com/su2code/su2code.github.io/pull/116. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887:334,Scalab,Scalabrin,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887,1,['Scalab'],['Scalabrin']
Performance,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:266,optimiz,optimize,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['optimiz'],['optimize']
Performance,## Proposed Changes; This PR will add heat flux to the values that are checked in the regression testing. This should help capture more of the code performance. . ## Related Work; @jtneedels noticed a possible issue of changes made in #1417. This will help avoid any potential unwanted changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698:148,perform,performance,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698,1,['perform'],['performance']
Performance,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:190,perform,performance,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['perform'],['performance']
Performance,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:192,perform,performance,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['perform'],['performance']
Performance,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:901,perform,performance,901,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,1,['perform'],['performance']
Performance,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:66,optimiz,optimization,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,3,"['optimiz', 'queue']","['optimization', 'queue', 'queue-type']"
Performance,"## Proposed Changes; This is a little improvement to the multipoint optimization setup. Currently if you want to run multipoint optimization with restarts, the python scripts only keep track of one restart file (the first of the multipoint conditions). This is acceptable when the multipoint conditions are similar, but does not work when the conditions are very different. For example, if one point is supersonic and the other is subsonic, and the subsonic case is restarted from the supersonic solution, it immediately diverges. . This PR allows the python scripts to keep track of restarts for each point in the multipoint set up. It is robust in the sense that you can start with 0 restart files or some subset of restart files. For example, if you are running a 3 point optimization but only have the restart for one of the points, this will handle that case by starting the other two points from scratch, but keeping track of the restart files after the first design iteration. There is a naming convention that is presumed. The restarts get 'point#' added to its base name. So for example, if the SOLUTION_FILENAME= solution_flow.dat then it will look for files named solution_flow_point0.dat, solution_flow_point1.dat and so on. For adjoints this is solution_adj_point0_cd.dat etc. This naming convention can be tweaked according to comments. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:68,optimiz,optimization,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,3,['optimiz'],['optimization']
Performance,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:415,perform,performance,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['perform'],['performance']
Performance,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:489,optimiz,optimization,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['optimiz'],['optimization']
Performance,"## Proposed Changes; This pull request is the first of a series of improvements I plan to do in the code, which aim to improve the code readibility and remove some bottlenecks in terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:164,bottleneck,bottlenecks,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['bottleneck'],['bottlenecks']
Performance,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:686,Perform,Performance,686,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,2,"['Optimiz', 'Perform']","['Optimization', 'Performance']"
Performance,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:129,bottleneck,bottleneck,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['bottleneck'],['bottleneck']
Performance,"## Proposed Changes; `JacobianIndex`, one of the `codi-tape` build options, was prone to misunderstandings since it was not clear whether or not the underlying type supports copy optimizations. There are two options now, `JacobianReuse`, which does not support copy optimizations and is similar to the hybrid AD type in that regard, and `JacobianMultiUse`, which does support copy optimizations and is similar to the default type with linear management in that regard.; ; I took the opportunity to also add options for primal value tapes in a consistent manner, they were there previously but less detailed and commented out. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:179,optimiz,optimizations,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,3,['optimiz'],['optimizations']
Performance,"## Scope; Elasticity problems can be quite demanding linear solver wise as your typical case will have very few Dirichlet boundaries.; Common iterative methods can only go so far, and pseudo time strategies to improve conditioning do not work as well as for fluid problems due to the elliptic nature of the equations.; Scalability is also an issue since most preconditioners get weaker as the problem gets partitioned.; Direct sparse solvers handle these problems just fine, so life is good again, until you run out of RAM that is (which only ever happens in 3D). Time complexity is about O(N^2) and storage O(N^1.5). ## Proposed Changes; Wrapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:319,Scalab,Scalability,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['Scalab'],['Scalability']
Performance,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:272,Optimiz,Optimization,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,2,['Optimiz'],['Optimization']
Performance,"### Discussed in https://github.com/su2code/SU2/discussions/1715. <div type='discussions-op-text'>. <sup>Originally posted by **AbhijithMoni** July 18, 2022</sup>; Hi,. I'm running the inverse design case available in _`TestCases/optimization_euler/steady_inverse_design`_. While executing `python C:\SU2\bin\shape_optimization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:866,optimiz,optimize,866,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,2,['optimiz'],['optimize']
Performance,"### Preamble. I am moving the discussion about SIMD that started in #716 here and adding hybrid parallelization.; The two topics go hand in hand since both (SPMD and SIMD) consist of processing multiple data (MD) elements simultaneous, either by a single program (SP) that is run by multiple threads (generally with shared view of memory), or by a single instruction (SI) run by a single core.; The reason SIMD came up in #716 is that, as I will demonstrate, vectorization needs to be supported by data structures. On the other hand SPMD needs to be supported by algorithms designed to avoid race conditions, two or more threads modifying the same memory location. Instead of continuing #716 I think it is better to let that become documentation for #753.; I did not add **without loss of readability** to the title because it is long as is, that requirement is present nonetheless.; I open these issues in the hope that people participate (I am not a fast writer so this is actually a lot of work) and so far great comments and insights have come from those with experience in these topics (kudos to @economon and @vdweide). But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...). My (ambitious) goal with this work is to lay down an architecture for performance, i.e. not just to improve the performance of a few key numerical schemes but to create mechanisms applicable to all existing and future ones. Moreover I want that to be possible with minimal changes to the way those bits of code are currently written.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789:592,race condition,race conditions,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/789,3,"['perform', 'race condition']","['performance', 'race conditions']"
Performance,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/516:876,load,load,876,https://su2code.github.io,https://github.com/su2code/SU2/pull/516,1,['load'],['load']
Performance,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:182,perform,perform,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['perform'],['perform']
Performance,"**Describe the bug**. I am unable to complete the compilation of SU2 v7.3.0 on Fedora 35 using the GCC compiler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Bu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:632,load,load,632,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,3,"['load', 'optimiz']","['load', 'optimization']"
Performance,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. As I used SU2 develop version for shape optimization, it gave a keyerror in TestCase ; disc_adj_rans/naca0012, ; shape_optimization.py -f turb_NACA0012_sa.cfg; and disc_adj_rans/cylinder,; shape_optimization.py -f cylinder_Windowing.cfg. I have compiled SU2 with AD enabled. ; Also try disc_adj_turbomachinery/transonic_stator_2d, gave the same error.; I would like to know if I make some mistakes to run the testcases. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Found: mesh_cylinder.su2; New Project: ./; Traceback (most recent call last):; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 164, in __getitem__; return super(Config,self).__getitem__(k); KeyError: 'OPT_OBJECTIVE'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/wkholy/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/home/wkholy/su2/bin/SU2/opt/project.py"", line 114, in __init__; def_objs = config['OPT_OBJECTIVE']; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 166, in __getitem__; raise KeyError('Config parameter not found: %s' % k); KeyError: 'Config parameter not found: OPT_OBJECTIVE'. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Ubuntu 20.04; C++ gcc version 9.4.0; SU2 version 7.3.1 develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:225,optimiz,optimization,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,1,['optimiz'],['optimization']
Performance,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:680,optimiz,optimization,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['optimiz'],['optimization']
Performance,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:528,perform,performed,528,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['perform'],['performed']
Performance,"**Describe the bug**; After defining the FFD box correctly, using SU2_DEF, the *shape_optimization.py* script was launched to perform adjoint optimization of an internal flow over airfoil. The following error is printed out by SU2:; [SU2_error.txt](https://github.com/su2code/SU2/files/10999828/SU2_error.txt). The .cfg file attached below is largely inspired by the Onera test case already published in the tutorial collection. ; However, I checked the code looking for some issues that my configuration might have caused and I couldn't find any (to my knowledge). It seems the solver has issues converting to float-type variable my text indications for DV_PARAM option. Moreover, I tried to ""play"" with the values related to DV_PARAM and no difference was noted. The same issue was experienced both in version 7.5.0 and 7.5.1 regardless of running a pre-compiled version (Microsoft) or the built-from-source version (Ubuntu). **To reproduce**. [airfoil.txt](https://github.com/su2code/SU2/files/10999881/airfoil.txt); *Mesh file extension is not supported for upload*. **Bug report checklist**. - [ ✓] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.0 & Microsoft; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: v7.5.1 & v7.5.0. *Thank you in advance for your help.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1970:126,perform,perform,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/1970,2,"['optimiz', 'perform']","['optimization', 'perform']"
Performance,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:611,cache,cached,611,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['cache'],['cached']
Performance,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:90,load,loaded,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,1,['load'],['loaded']
Performance,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:52,optimiz,optimization,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,2,['optimiz'],['optimization']
Performance,"**Describe the bug**; I'm reading the python codes of SU2-7.3.1 to figure out the whole framework of shape optimization. Here, I find a small irrational point in the definition of evalution of constraint gradients. (in SU2_PY/SU2/eval/design.py). For example, we may add a weight coefficient to each equality/inequality constraint in the .cfg file. So in the python framework, the weight will be stored in <config['OPT_CONSTRAINT']['EQUALITY']['SCALE']>, right? When we compute the constraint as well as its gradients using SU2_CFD solver, the python code will get the constraint and gradients from the history files, and then multiple them with the weight (or SCALE), and then return the results to scipy_tools.py for optimization. Look at line 429 in the function ""con_ceq"" in file ""design.py"", the resulted constraint is scaled by the SCALE parameter, which is no problem. Then look at line 477 in the gradient function ""con_dceq"", the resulted gradients are not scaled by the SCALE parameter, that I think it is irrational. The same problem also happens in the function ""con_dcieq"", the gradients of inequality constraints. I think that the two gradients function for constraints should be scaled with the SCALE parameter, because at line 386 in the objective gradient function ""obj_df"", the computed objective gradients are indeed scaled. **Desktop (please complete the following information):**; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1653:107,optimiz,optimization,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/1653,2,['optimiz'],['optimization']
Performance,"**Describe the bug**; Symmetry boundary condition does not work properly. In particular, the values on the symmetry plane are wrong with respect to a computation performed on the complete mesh. In the images you can see the pressure coefficient and the skin friction coefficient magnitude for both the simulations. For each image, the upper half is the solution on the complete mesh whereas the lower portion is the solution on the halved mesh with the symmetry plane. I am performing an incompressible RANS simulation with SST turbulence model. I am attaching the files needed to perform both the simulations. The branch I used is the develop one. I also tried with the main branch but the error persists. ![PressureCoefficient](https://user-images.githubusercontent.com/43813346/180821411-9978c962-b3c0-42d0-b631-35a5b0c71b29.png); ![SFC_Error](https://user-images.githubusercontent.com/43813346/180821429-f476bb80-1ac1-4fad-b55b-f5ea05f3a604.png). **To Reproduce**; Please find the config and mesh file at the following link. https://we.tl/t-nmjBv7HJv0. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810 (Core); - C++ compiler and version: gcc 11.2.0; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1723:162,perform,performed,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/1723,3,['perform'],"['perform', 'performed', 'performing']"
Performance,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345:27,load,loading,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345,4,['load'],"['loaded', 'loading']"
Performance,"**Describe the bug**; While doing shape optimization for drag minimization with the Euler solver, I received a negative drag for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:40,optimiz,optimization,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,4,"['Load', 'optimiz']","['Load', 'optimization', 'optimized']"
Performance,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:51,optimiz,optimization,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,6,['optimiz'],"['optimization', 'optimized']"
Performance,**Desktop (please complete the following information):**; - OS: WSL (Ubuntu22.04); - C++ compiler and version: g++ 11.3.0; - MPI implementation and version: 4.0; - SU2 Version: v7.5.1. Hello：; My computer have 2 epyc cpus，when I run QuickyStart ，; it warns：SU2 was not compiled for an AVX-capable architecture. Performance could be better。; My compile configuration：; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true . How can I solve it？; Thanks！,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1939:311,Perform,Performance,311,https://su2code.github.io,https://github.com/su2code/SU2/issues/1939,1,['Perform'],['Performance']
Performance,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:700,perform,performance,700,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,2,['perform'],"['performance', 'performed']"
Performance,"**Is your feature request related to a problem? Please describe.**; ""The knowledge of a steady base-flow solution of the governing Navier-Stokes equations is fundamental to instability studies and flow control. "" [1]. I work in stability analysis of super- and hypersonic flows. To perform such analysis, I need to firstly obtain a steady-state solution of the Navier-Stokes equations. This is not a problem when a physical steady-state exists but becomes cumbersome otherwise. In the latter case, I need to drive the flow to a steady-state numerically such that the flow becomes steady and linear stability analysis can be performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:282,perform,perform,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,3,['perform'],"['perform', 'performed']"
Performance,"**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. I would like to know if SU2 can run the discrete adjoint case for multizone problem of turbomachinery. I found; "" if (nZone != 1); SU2_MPI::Error(""The required solver doesn't support multizone simulations"", CURRENT_FUNCTION);"" in the code. I am currently working on the optimization of axial turbine stage. I have revised the code for ENTROPY_GENERATION and Total toal efficiency output in the history output file and run the tutorial case ""transonic_stator_2D"" using ""shape_optimization.py"" successfully. But I failed to run ""discrete_adjoint.py -f xxx.cfg"" for turbiens stage optimization, whist the flow simulation using ""SU2_CFD xxx.cfg"" runs successfully. Seem the currect develop version is not applicable to the problem. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. May I ask for the implementation of multizone discrete adjoint solve for turbomachinery? Or if there is any solution for it.; I found the work from Vitale's paper in 2020 includes such capability in SU2 at https://github.com/su2code/SU2/tree/ feature_turbomachinery, yet I fail to run the multizone case. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. I would like to try FADO for alternatives and may concern about the solver of the discrete adjoint for multizone problems in turbomachinery will still be needed. . **Additional context**; *Add any other context or screenshots about the feature request here.*. Here is the function I have added for turbo coeffcient output in CFlowOutput.cpp:. void CFlowOutput::AddTurbomachineryCoefficients(const CConfig* config) {; ; if (!config->GetBoolTurbomachinery()) return;; /// BEGIN_GROUP: AERO_COEFF, DESCRIPTION: Sum of the aerodynamic coefficients and forces on all s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:434,optimiz,optimization,434,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,2,['optimiz'],['optimization']
Performance,"**Is your feature request related to a problem? Please describe.**; I want to use SU2 in my project. My project is implemented by Visual Studio.; After successfully build su2, I can not find lib/dll. And I can not load su2 in my vs project. **Describe the solution you'd like**; Is it possible to provide a cmake file so that I can find the su2 package by find_package?. **Describe alternatives you've considered**; Or is it possible to provide a demo for how to use it in a vs project?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1572:214,load,load,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/1572,1,['load'],['load']
Performance,"**Is your feature request related to a problem? Please describe.**; I'm going to build SU2 with PaStiX, which requires BLAS built in serial mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX. However, SU2 also makes use of BLAS... but... what kind of build for OpenBLAS, sequential or parallel?. It's not a subtle thing, because things can go wrong (or lose a lot of performance) if it's built in a way different to what SU2 expects. **Describe the solution you'd like**; Just mention it in the build instructions where you mention that OpenBLAS can be used by SU2.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/869:388,perform,performance,388,https://su2code.github.io,https://github.com/su2code/SU2/issues/869,1,['perform'],['performance']
Performance,"**Is your feature request related to a problem? Please describe.**; In my transient cases I would like to average the flow-field over many time-iterations, in order to filter out highly dynamic effects. For me the volumentric time-averages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data over",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:348,perform,performance,348,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['perform'],['performance']
Performance,"**Is your feature request related to a problem? Please describe.**; Under high aerothermal loads heat fluxes over walls are an important design aspect of many components. In my specific case a wall temperature distribution is known from experiments. I would like to apply this spacial temperature distribution as boundary condition to one or more isothermal walls. In my case the heat flux is then used for validation purposes. **Describe the solution you'd like**; I would like to specify the temperature of an isothermal wall with respect to the x/y/z coordinate. I believe something similar is already possible with the structural load boundaries:; `MARKER_DISPLACEMENT = (surface, multiplier, magnitude [m], x component, y component, z component)`. For temperature this could possibly look like this:; `MARKER_ISOTHERMAL_PROFILE = (surface, temperature[0...N], x[0...N], y[0...N],z[0...N])`. In order to keep the config file cleaner a better solution may be to specify an external file, from which the locations and temperatures are read. This seems to be already possible for inlet boundaries:; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/config_template.cfg#L812-L816; However, I could not find any example actually using this functionality. If this is implemented, extending the functionality to also work with isothermal walls is probably the least intrusive modification. **Describe alternatives you've considered**; A possible, but cumbersome solution could be to split the respective walls into many markers and specify piecewise-constant wall temperatures for each marker.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553:91,load,loads,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553,2,['load'],"['load', 'loads']"
Performance,"**Is your feature request related to a problem? Please describe.**; When installing software on a high performance computing cluster, we typically want to reuse existing dependencies. SU2 seems to download a *lot* of things which we already have: autotools, catch2, cgns, metis, ninja, parmetis, ... . It will very likely *not* compile those correctly for our system. . **Describe the solution you'd like**; Give a flag to disable all download and fail when dependencies are not found. Give corresponding flags to point to the dependencies' folders, and use those. . **Describe alternatives you've considered**; Reverse engineering SU2's meson/ninja build to patch it to use existing dependencies.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:103,perform,performance,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,1,['perform'],['performance']
Performance,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378:242,load,load,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378,2,['load'],['load']
Performance,", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][func_name]; KeyError: 'INVERSE_DESIGN_PRESSURE' ; ```. SU2 version - 7.2.0 ; OS - Windows-11. I have also tried the latest version 7.3.1 on a Linux machine, I get the same error. Please help me understand this error and fix it. Thanks in advance. ; </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1812,optimiz,optimize,1812,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_comma",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:1692,optimiz,optimize,1692,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,2,['optimiz'],['optimize']
Performance,". Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1117,cache,cache,1117,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,".0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment var",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5787,cache,cache,5787,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,".05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in functio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:3400,optimiz,optimize,3400,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['optimiz'],['optimize']
Performance,".3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4912,cache,cache,4912,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,".5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5912,cache,cache,5912,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,".dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e94",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6765,cache,cache,6765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"//github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5293,cache,cache,5293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"//github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-auto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8521,cache,cache,8521,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dep",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9622,cache,cache,9622,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2781,perform,performance,2781,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['perform'],['performance']
Performance,"/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redire",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4478,cache,cache,4478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"/h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1569,Cache,Cache,1569,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Cache'],['Cache']
Performance,"/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <bl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5091,cache,cache,5091,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"/summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.de",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5654,cache,cache,5654,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a hr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4731,cache,cache,4731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converge",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1276,tune,tune,1276,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,1,['tune'],['tune']
Performance,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:3218,Optimiz,Optimization,3218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,2,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:3572,optimiz,optimize,3572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['optimiz'],['optimize']
Performance,"1e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8937,cache,cache,8937,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"2d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9942,cache,cache,9942,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1781,cache,cache-file,1781,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['cache'],['cache-file']
Performance,"7fffcbebfb60); Debug: Off; Modified Time: 1456; Reference Count: 1; Registered Events: (none); Request: REQUEST_INFORMATION; ALGORITHM_AFTER_FORWARD: 1; FORWARD_DIRECTION: 0. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); Cell In[9], line 5; 2 from paraflow.simulation.su2 import Su2SimulationConfig ; 4 flasher = get_flasher(""air"", ""gas""); ----> 5 sim_results = run_simulation(; 6 axial_turbo_passage,; 7 params=SimulationParams(; 8 inlet_total_state=flasher.flash(P=87909, T=276, mach_number=0.4098), ; 9 target_outlet_static_state=flasher.flash(P=108932, T=296),; 10 translation=[; 11 np.array([0.0, 266, 0.0]),; 12 None; 13 ]; 14 ),; 15 working_directory=""./simulation_out"", ; 16 id=""1"",; 17 auto_delete=True,; 18 verbose=True,; 19 # num_procs=9,; 20 cfg=Su2SimulationConfig(; 21 custom_repo_url= ""https://github.com/su2code/SU2/tree/master"",; 22 version= ""8.0.0""; 23 ); 24 ); 25 sim_results.to_file(""./simulation_out/cached.pkl""); 27 # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/simulation.py:21, in run_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 19 if isinstance(cfg, Su2SimulationConfig):; 20 from paraflow.simulation.su2 import run_su2_simulation; ---> 21 sim_results = run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 23 return sim_results. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/su2.py:161, in run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 158 vtu_filename = vtu_filename.replace(""."", f""_{i}.""); 160 grids += [read_vtu_data(vtu_filename)]; --> 161 eval_values = pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadque",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:2825,cache,cached,2825,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['cache'],['cached']
Performance,"9d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9743,cache,cache,9743,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8049,cache,cache,8049,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8366,cache,cache,8366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7229,cache,cache,7229,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"; File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][fu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1514,optimiz,optimize,1514,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"<a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4522,cache,cache,4522,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3671,cache,cache,3671,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,">3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6561,cache,cache,6561,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,">3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8109,cache,cache,8109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,">; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1303,cache,cache,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1233,cache,cache,1233,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6058,cache,cache,6058,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245:227,optimiz,optimization,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/245,1,['optimiz'],['optimization']
Performance,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/297:347,optimiz,optimization,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/297,2,['optimiz'],['optimization']
Performance,Aerodynamic Shape Optimization: Solution restarting procedure & Exporting the final shape as 3D CAD model,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:18,Optimiz,Optimization,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,1,['Optimiz'],['Optimization']
Performance,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:434,optimiz,optimization,434,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['optimiz'],['optimization']
Performance,Alternative time-averaging for rectangular window to avoid performance degradation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:59,perform,performance,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['perform'],['performance']
Performance,"Although I am minimizing my objective function, its value appears to rise in some designs while running a shape optimization. I look at my objective function value from the history_project.dat file. It makes sense for it to move in only one direction because that's what the adjoint gradients will ask it to do, however, I don't know if this rule is actually always satisfied in shape optimization.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984:112,optimiz,optimization,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/984,2,['optimiz'],['optimization']
Performance,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352:81,optimiz,optimization,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/352,1,['optimiz'],['optimization']
Performance,"Based on paper - . ## Proposed Changes. - AUSM+ -up2 scheme has been implemented. - Likely to perform better for high speed flows (author claims - Robustness against shock anomalies as good as Van leer scheme (less carbuncle prone) while it resolves contact discontinuity/boundary layer sharply/accurately. Smooth representation of heating etc.). - Reference- ""Towards a shock-stable and accurate hypersonic heating computations: A new pressure flux for AUSM scheme, authors- Kitamura, Shima, JCP 245 2013"". ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631:94,perform,perform,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/631,1,['perform'],['perform']
Performance,"Being able to produce a deformed mesh in cgns rather than SU2 format would be useful for:; - transferring geometries resulting from optimization cases to other simulation tools (whether another fluid solver or for multiphysics simulations); - editting meshes when the files used to generate the mesh have been lost or are unavailable (currently there is no way to load an su2 mesh into pointwise, for example). ; - general compatibility with external tools: 3rd party mesh deformation & generation, CAD, etc. . Since we can already read CGNS format hopefully that won't be too burdensome.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/287:132,optimiz,optimization,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/287,2,"['load', 'optimiz']","['load', 'optimization']"
Performance,Bug in unsteady optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296:16,optimiz,optimization,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/296,1,['optimiz'],['optimization']
Performance,Bump actions/cache from 1 to 3,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:13,cache,cache,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,Bump actions/cache from 3 to 4,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:13,cache,cache,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:15,cache,cache,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,6,['cache'],['cache']
Performance,"Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/download-artifact/releases"">actions/download-artifact's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>; <p>ℹ️ However, this is a major update that includes breaking changes. Artifacts created with versions v3 and below are not compatible with the v4 actions. Uploads and downloads <em>must</em> use the same major actions versions. There are also key differences from previous versions that may require updates to your workflows.</p>; <p>For more information, please see:</p>; <ol>; <li>The <a href=""https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/"">changelog</a> post.</li>; <li>The <a href=""https://github.com/actions/download-artifact/blob/main/README.md"">README</a>.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/bflad""><code>@​bflad</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/download-artifact/pull/194"">actions/download-artifact#194</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/download-artifact/compare/v3...v4.0.0"">https://github.com/actions/download-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.0.2</h2>; <ul>; <li>Bump <code>@actions/artifact</code> to v1.1.1 - <a href=""https://redirect.github.com/actions/dow",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:472,perform,performance,472,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['perform'],['performance']
Performance,"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>; <p>ℹ️ However, this is a major update that includes breaking changes. Artifacts created with versions v3 and below are not compatible with the v4 actions. Uploads and downloads <em>must</em> use the same major actions versions. There are also key differences from previous versions that may require updates to your workflows.</p>; <p>For more information, please see:</p>; <ol>; <li>The <a href=""https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/"">changelog</a> post.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/README.md"">README</a>.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vmjoseph""><code>@​vmjoseph</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/upload-artifact/pull/464"">actions/upload-artifact#464</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:464,perform,performance,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['perform'],['performance']
Performance,CSysMatrix cleanup and performance improvements,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:23,perform,performance,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,1,['perform'],['performance']
Performance,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:58,optimiz,optimization,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,1,['optimiz'],['optimization']
Performance,Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimizatio…,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:58,optimiz,optimizatio,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,1,['optimiz'],['optimizatio']
Performance,Changed time-averaging algorithm to reduce performance impact.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:43,perform,performance,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,1,['perform'],['performance']
Performance,Check shape_optimization.py and http://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.fmin_slsqp.html,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/49:97,optimiz,optimize,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/49,1,['optimiz'],['optimize']
Performance,Check that GEOMETRY EVALUATION PARAMETERS section is in place when running an optimization problem.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/104:78,optimiz,optimization,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/104,1,['optimiz'],['optimization']
Performance,Clean LoadRestart for Flow/Turb/Heat,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:6,Load,LoadRestart,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['Load'],['LoadRestart']
Performance,"Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7884,cache,cache,7884,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,Correct the output in the load distribution file.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/106:26,load,load,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/106,1,['load'],['load']
Performance,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:249,load,loads,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['load'],['loads']
Performance,"Currently, we output all CFD evaluations during shape design, which will include calculations as part of line searches. We should tag the subset of candidate designs that represent the major optimization iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108:191,optimiz,optimization,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/108,1,['optimiz'],['optimization']
Performance,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:111,optimiz,optimization,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,3,['optimiz'],"['optimization', 'optimized']"
Performance,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909:44,optimiz,optimize,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/909,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:864,cache,cached,864,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,1,['cache'],['cached']
Performance,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:38,optimiz,optimize,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,1,['optimiz'],['optimize']
Performance,"Description:; With our current mesh, on an 8 node, 32 intel cores per node system, our average CPU utilization per node ranges between 31% and 86%. The interconnect fabric is far from fully utilized in terms of throughput. Memory utilization is not nearly that inconsistent (differences of 2-3x). On a different system, 4 node 128 AMD cores per node, the average CPU utilization per node ranges between 54% and 95%. The same mesh is used in both instances. To Reproduce:; Run a mesh on a multi-node system with different core counts and I expect that you will see varied CPU utilization per node depending on how ParMETIS decided to partition the mesh. System Software Environment:; OS: CentOS7; GCC 7.3.1; MPI: openMPI 3.1.2; SU2 7.0.1 (with modifications so that it can write files and to correct the fixed CL issue). Do you have recommendations on how to improve the decomposition?; Or, if parmetis does not give sufficient options to improve the decomposition result, perhaps change this to a feature request to add ptscotch and/or zoltan support?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307:211,throughput,throughput,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307,1,['throughput'],['throughput']
Performance,Divergence optimization NACA0012 inviscid test-cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:11,optimiz,optimization,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['optimiz'],['optimization']
Performance,Efficiency improvements for sorting + loading of grid information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:38,load,loading,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['load'],['loading']
Performance,Enhancement for multipoint optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:27,optimiz,optimization,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['optimiz'],['optimization']
Performance,Errors when running Shape Optimization Tutorial 1 - NACA0012,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:26,Optimiz,Optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['Optimiz'],['Optimization']
Performance,"Expose design variable bounds, max optimizer iterations, and optimization tolerance to the user in shape_optimization.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107:35,optimiz,optimizer,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/107,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:1657,Perform,Performing,1657,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['Perform'],['Performing']
Performance,Feature actuator disk with variable load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:36,load,load,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['load'],['load']
Performance,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:58,load,load,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,6,['load'],"['load', 'loading']"
Performance,"Fetched developed branch and ran serial_regression.py. Got case FAILED with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; With INTEL compiler on same platform get passed for ls89_sa, centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are the differences for naca0012_def and most of the brick-tests with intel. They converge in significant fewer steps and are marked FAILED.; Is it worthwhile to investigate the differences between GCC and Intel for the brick-cases?; I'am asking, because I'm gone look to fasten calculations up with optimizations in the existing code for single core and perhaps MPI. Far goal, but really far, may be using GPUs as well. Currently I have a 15% improvement single core for RANS from the Comp&Fluids_129 paper. But of course the calculations should not only be faster but correct as well.; Regards, Josef",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347:565,optimiz,optimizations,565,https://su2code.github.io,https://github.com/su2code/SU2/issues/347,1,['optimiz'],['optimizations']
Performance,Fix #1667 Potential crash for the OpenMP multi-thread running.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:41,multi-thread,multi-thread,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['multi-thread'],['multi-thread']
Performance,Fix bugs when restarting a shape optimization problem,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:33,optimiz,optimization,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['optimiz'],['optimization']
Performance,Fix inlet profile file loading when not restarting unsteady problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1264:23,load,loading,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264,1,['load'],['loading']
Performance,"Fix to multi-functional optimization, addition of regression test. ; This re-introduces functionality that was previously added in https://github.com/su2code/SU2/pull/385. . (it was accidentally effected by someone else's pull request that appears to have been based on an outdated version of develop - if work you merged ~Feb-July has mysteriously disappeared I can privately point you to the relevant pull request to aid in fixing that)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494:24,optimiz,optimization,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/494,1,['optimiz'],['optimization']
Performance,Fixes #1568 - Prefer loading zlib and szip libraries dynamically,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:21,load,loading,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['load'],['loading']
Performance,"Gauss-Elimination with reciprocal values, some optimization in limiter calc. ...; A suspected bug in Line 230 solver_structure.cpp fixed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386:47,optimiz,optimization,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/386,1,['optimiz'],['optimization']
Performance,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:191,perform,performance,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,"['bottleneck', 'latency', 'perform']","['bottleneck', 'latency', 'performance']"
Performance,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017:461,perform,performed,461,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017,4,"['optimiz', 'perform']","['optimization', 'perform', 'performed']"
Performance,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409:98,optimiz,optimization,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/409,4,['optimiz'],"['optimization', 'optimizer']"
Performance,"Hello and thanks for doing great work for this software!. I don't know for sure, but it seems the Optimal Shape Design of a Transonic Airfoil tutorial has a typo?:. 2. Execute the shape optimization script by entering `$ python shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line. where it should be(?):. 2. Execute the shape optimization script by entering `$ shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/418:186,optimiz,optimization,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/418,2,['optimiz'],['optimization']
Performance,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:187,perform,performed,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,1,['perform'],['performed']
Performance,"Hello guys,. Currently, I am optimizing an 2D airfoil in an incompressible flow, using a 2D FFD box. First I searched for help at the CFD-online.com website; https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. However, people recommend me to get help from the developers group. In short the optimizer process returns to initial shape after a couple of new designs. The first design is quite deformed, however not as much as expected. However in the line search process the shape is deforming back to the initial shape and the optimizer stops succesfully. For input files/ adjoint files/ deformation files, I would like to refer you to : https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. I would appriciate any help;)!. Thanks in advance,. Floris",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/370:29,optimiz,optimizing,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/370,3,['optimiz'],"['optimizer', 'optimizing']"
Performance,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:48,optimiz,optimize,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,4,['optimiz'],"['optimization', 'optimize']"
Performance,"Hello!. I have a simple question about the Riemann type for the boundary condition. I would use the type ""TOTAL_SUPERSONIC_INFLOW"" for the MARKER_RIEMANN but the warning ""Invalid Riemann input!"" comes out. I have controlled in the SU2/Common/include/option_structure.hpp and this option is present. How could I do to use it?. this is the boundary defined:; `; MARKER_RIEMANN= (stage1_inflow, TOTAL_SUPERSONIC_INFLOW , 101325.0, 288.15, 400.0, 0.0, 0.0)`. and this is the error:. ```; ------------------------------ Begin Solver -----------------------------. Simulation Run using the Multizone Driver. Setting translational grid velocities.; Non-dim. translational velocity: (0, 296.633, 0).; WARNING: SU2 was not compiled for an AVX-capable architecture. Performance could be better,; see https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#compiler-optimizations. Error in ""virtual void CEulerSolver::BC_TurboRiemann(CGeometry*, CSolver**, CNumerics*, CNumerics*, CConfig*, short unsigned int)"": ; -------------------------------------------------------------------------; Invalid Riemann input!; ------------------------------ Error Exit -------------------------------; ```. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2305:756,Perform,Performance,756,https://su2code.github.io,https://github.com/su2code/SU2/issues/2305,2,"['Perform', 'optimiz']","['Performance', 'optimizations']"
Performance,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/395:26,optimiz,optimizing,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/395,5,['optimiz'],"['optimized', 'optimizer', 'optimizing']"
Performance,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:866,load,load,866,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,2,['load'],['load']
Performance,"Hello, ; ; I am trying to run SU2 in parallel on a cluster using SLURM. But when I submit my shell script there are two possible errors. ; I used the turb ONERAM6 example from the tutorials. 1. When I run ""srun parallel_computation.py -n 128 -f turb_ONERAM6.cfg"" I get the following error: FileNotFoundError: [Errno 2] No such file or directory: 'config_CFD.cfg_tmp'; I addition to that the file config_CFD.cfg which SU2 creates, appears but is completely empty. . 2. When I run ""parallel_computation.py -n 128 -f turb_ONERAM6.cfg"" SU2 just runs 128 times and I get multiple outputs. . I can't include my whole shell script which I use to execute SU2, but here are the important parts: . #!/bin/bash; #SBATCH --nodes=2; #SBATCH --ntasks-per-node=64; #SBATCH --ntasks-per-core=1; #SBATCH --time=01:00:00 ; #SBATCH --output=[..]/Output-%j.out ; #SBATCH --error=[..]/Error-%j.err. module load su2; module load py-numpy/1.23.4; module load openmpi/4.1.5. export PATH=[...]/bin:$PATH; export SU2_RUN=[...]/bin; export PYTHONPATH=$SU2_RUN:$PYTHONPATH. srun parallel_computation.py -n 128 -f turb_ONERAM6.cfg. I already tried to find a solution to my problem everywhere, but I just don't understand it completely. Thanks in advance; Ole",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2247:885,load,load,885,https://su2code.github.io,https://github.com/su2code/SU2/issues/2247,3,['load'],['load']
Performance,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1459:44,perform,perform,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459,3,['perform'],"['perform', 'performing']"
Performance,"Hello, I am new to SU2 and trying to install it on cluster locally. I am facing issue in compilation and installation step. I used following command to build:; `./meson.py -Dwith-mpi=enabled -Dcustom-mpi=true -Dextra-deps=mpich -Denable-cgns=false --prefix=$HOME/SU2/SU2-Install build`. After which I tried to compile and install:; `./ninja -C build install`. However I am getting an error:; `ninja: Entering directory build; [1/463] Compiling C object externals/metis/libmetis.a.p/GKlib_htable.c.o; FAILED: externals/metis/libmetis.a.p/GKlib_htable.c.o ; cc -Iexternals/metis/libmetis.a.p -Iexternals/metis -I../externals/metis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -std=c99 -O3 -fPIC -D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DUSE_GKREGEX -Wno-implicit-function-declaration -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-sign-compare -Wno-clobbered -Wno-empty-body -Wno-unused-label -Wno-misleading-indentation -Wno-maybe-uninitialized -Wno-pedantic -Wno-error=absolute-value -MD -MQ externals/metis/libmetis.a.p/GKlib_htable.c.o -MF externals/metis/libmetis.a.p/GKlib_htable.c.o.d -o externals/metis/libmetis.a.p/GKlib_htable.c.o -c ../externals/metis/GKlib/htable.c; cc1: error: -Werror=absolute-value: no option -Wabsolute-value; cc1: warning: unrecognized command line option ""-Wno-misleading-indentation"" [enabled by default]`. I am unable to understand if its an issue with GCC compiler of the HPC cluster or something else. Would be a great help if someone can guide me on this. Thanks in advance!. **Cluster Information**; - OS: [CentOS Linux 7]; - C++ compiler and version: [g++ (GCC) 13.2.0] (Loaded as module); - MPI implementation and version: [mpich 4.1.2] (Loaded as module); - SU2 Version: [8.0.0 ""Harrier""]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2182:1739,Load,Loaded,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/2182,2,['Load'],['Loaded']
Performance,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1289:245,perform,perform,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289,1,['perform'],['perform']
Performance,"Hello,; I'm using SU2 for DOE sampling right now. My current process is to change the values of the relevant variables in FFD, then use the `SU2_DEF` module to deform the mesh, it will output the mesh. Then I use `SU2_CFD` read mesh to calculate. My question is, is it possible to deform the mesh without exporting the mesh (keep it in the computer memory) and then use `SU2_CFD` directly to perform the calculation, eliminating the need to export and read the mesh. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2254:392,perform,perform,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/2254,1,['perform'],['perform']
Performance,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/163:173,optimiz,optimization,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/163,1,['optimiz'],['optimization']
Performance,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:196,perform,performance,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,3,['perform'],['performance']
Performance,"Hey everyone,. I have been taking a deep dive into the shape optimization features in SU2 and have resurfaced with some observations, suggestions, and questions. First, the bug:; Even though the config_template, and option structure have changed the numbering of the DEFINITION_DV (for example, FFD_CONTROL_POINT went from being 7 to 11), this has not been reflected in the SU2_PY/SU2/io/tools.py, or any of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:61,optimiz,optimization,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523:18,perform,performing,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/523,1,['perform'],['performing']
Performance,"Hi all, hi @rsanfer,. I get a segfault when running SU2_SOL on problems with multiple Zones for the develop branch. Specifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:424,Load,LoadRestart,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,2,['Load'],['LoadRestart']
Performance,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:24,optimiz,optimization,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['optimiz'],['optimization']
Performance,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/337:20,optimiz,optimizing,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/337,3,['optimiz'],"['optimization', 'optimizer', 'optimizing']"
Performance,"Hi, ; I'm new to CFD and SU2. I would like to ask if its possible to perform an axisymmetric flow simulation? I cannot find AXISYMMETRIC tag in the config_template, so I'm wondering if that option still exists. . Thanks for reply",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/404:69,perform,perform,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/404,1,['perform'],['perform']
Performance,"Hi, I'm in trouble with the shape_optimization.py. I'm following the instructions of the tutorial for unsteady shape optimization for naca0012 but got an error:. ```; Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 166, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eva",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:117,optimiz,optimization,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Hi, I'm trying to run SU2 in parallel but an error with the mpi always keeps showing. [hcogollo@localhost QuickStart]$ SU2_CFD inv_NACA0012.cfg ; SU2_CFD: error while loading shared libraries: libmpi.so.40: cannot open shared object file: No such file or directory. Does anyone know how to fix it? thanks a lot.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/968:167,load,loading,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/968,1,['load'],['loading']
Performance,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208:34,perform,performed,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/208,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:24,optimiz,optimization,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,1,['optimiz'],['optimization']
Performance,"Hi,. I want to use SU2 to do adjoint optimization on a geometry that is accelerating. I haven't been able to find anything about implementing time varying inlet BC's, and I was wondering if this is a feature in SU2/what would be the best way for me to implement this. Thanks!; Dean",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690:37,optimiz,optimization,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/690,1,['optimiz'],['optimization']
Performance,"Hi,. I've been trying to build SU2 with its Python bindings, but have sadly been unable to link the targets `SU2_PY/pySU2/_pysu2.so` and `SU2_PY/pySU2/_pysu2ad.so`. I have attempted the compilation & linking from both the master branch, and the latest release with the same result. The steps I followed here were:. 1. Meson configuration:; ```bash; ./meson.py build -Denable-autodiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=/local/temp/DifferentiableProgramming/SU2/python-build --optimization=3 --buildtype=release; ```. 2. Building with ninja:; ```bash; cd build && ninja; ```. 3. Getting an error at the linking stage (the full command is at the bottom of the issue):4. ; ```bash; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(zutil.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; ```; But looking at the linking command `-fPIC` is already used, so I am a little lost for advice here. . Does anyone have any intuition or suggestions what this could be due to?. **Desktop:**; - OS: Ubuntu 22.04; - C++ compiler and version: g++ 11.2.0; - MPI implementation and version: OpenMPI v4.1.4; - SU2 Version: master & v7.3.1. ### Full linking command. ```bash; Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so ; g++ -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1707:498,optimiz,optimization,498,https://su2code.github.io,https://github.com/su2code/SU2/issues/1707,1,['optimiz'],['optimization']
Performance,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:218,optimiz,optimization,218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:411,Optimiz,Optimization,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['Optimiz'],['Optimization']
Performance,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:45,Load,LoadRestart,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['Load'],['LoadRestart']
Performance,"Hi,; I want to processes a multipoint optimization with constraints. The problem I encountered is that, if I set the geometry based constraint is given to OPT_CONSTRAINT(e.g. OPT_CONSTRAINT=( AIRFOIL_THICKNESS>0)*0.001 like onepoint problem ), the error will occur as below. ; Traceback (most recent call last):; File ""/home/star/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/star/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", lin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:38,optimiz,optimization,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/343:21,optimiz,optimize,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/343,2,"['load', 'optimiz']","['loading', 'optimize']"
Performance,How to check the optimization objective is minimize OPT_OBJECTIVE,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:17,optimiz,optimization,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,1,['optimiz'],['optimization']
Performance,How to load su2 in vs?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1572:7,load,load,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1572,1,['load'],['load']
Performance,Hybrid Parallel (AD): Fix Race Conditions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:26,Race Condition,Race Conditions,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,1,['Race Condition'],['Race Conditions']
Performance,Hybrid Parallel AD Performance Improvements,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:19,Perform,Performance,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['Perform'],['Performance']
Performance,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278:147,load,loading,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278,1,['load'],['loading']
Performance,"I am exploring the use of SU2's adjoint capability for solving an inverse problem. I wish to know if it is possible to use this to optimize a spatially varying parameter (e.g., spatially varying viscosity). I have measured values of the velocity field in the flow domain, and below is the process I wish to follow for the inference.; 1. Guess viscosity values at grid points.; 2. Run a RANS solution; 3. Compare the RANS velocity field with the measured field; 4. Use loss function = (u_rans-u_measure)^2; 5. Use adjoint optimization to get the updated viscosity field; 6. Repeat 1-5 until convergence (Loss<set_threshold)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1623:131,optimiz,optimize,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1623,2,['optimiz'],"['optimization', 'optimize']"
Performance,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:69,optimiz,optimize,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,2,"['Optimiz', 'optimiz']","['Optimization', 'optimize']"
Performance,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:943,perform,performance,943,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['perform'],['performance']
Performance,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:1058,perform,performance,1058,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,1,['perform'],['performance']
Performance,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:638,perform,performance,638,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,1,['perform'],['performance']
Performance,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:727,Load,Loaded,727,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['Load'],['Loaded']
Performance,"I have same problem. In cluster, I can run normal analysis (not optimization) without any issue. When I try to run optimization on nodes of HPC, it gives same error at random stage. For example sometimes at DNS2 Defrom or DSN1 adjoint. [error.txt](https://github.com/su2code/SU2/files/12063848/error.txt). Could you suggest any solution?. _Originally posted by @mardar572 in https://github.com/su2code/SU2/issues/1666#issuecomment-1637055845_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2082:64,optimiz,optimization,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/2082,2,['optimiz'],['optimization']
Performance,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:44,optimiz,optimization,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['optimiz'],['optimization']
Performance,"I tried running the shape optimization tutorial 1: Unconstrained shape design of a transonic inviscid airfoil at a cte. AoA using the given cfg and mesh file. But it seems the process only goes for 4 steps and stop. No matter I use python2 or python3, it is the same. What could cause the problem here? Thank you very much!. when using python2:. ```; NIT FC OBJFUN GNORM; 1 1 2.946447E-08 6.646259E-06; 2 3 2.927194E-08 5.513828E-06; 3 4 2.037004E-08 4.516896E-06; 4 6 1.769283E-08 5.893302E-06; Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 118, in main; options.nzones ); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 163, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 143, in scipy_slsqp; epsilon = eps ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 207, in fmin_slsqp; constraints=cons, **opts); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:26,optimiz,optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,2,['optimiz'],"['optimization', 'optimize']"
Performance,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:79,optimiz,optimization,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,4,['optimiz'],"['optimization', 'optimizations']"
Performance,"I've tried to follow some convention for naming the functions. We were using ""SetMarkerCustomXX"" for CHT-type boundary conditions, so I extended that to other applications.; ""Custom"" means that the values set this way act as boundary conditions. Whereas the other accessors allow manipulating the state (e.g. for initialization) but do not change the final solution.; I also tried to disambiguate the terms for Flow loads of the flow solver vs FEA solver and mesh deformation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:416,load,loads,416,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['load'],['loads']
Performance,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204:398,optimiz,optimization,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/204,1,['optimiz'],['optimization']
Performance,If the optimization problem has geometrical constraints and the section GEOMETRY EVALUATION PARAMETERS is incomplete SU2 (shape_optimization) will work but the result is going to be wrong.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/104:7,optimiz,optimization,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/104,1,['optimiz'],['optimization']
Performance,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/349:19,optimiz,optimization,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/349,1,['optimiz'],['optimization']
Performance,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/293:753,optimiz,optimization,753,https://su2code.github.io,https://github.com/su2code/SU2/issues/293,1,['optimiz'],['optimization']
Performance,Improve parallel preacc performance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2092:24,perform,performance,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/2092,1,['perform'],['performance']
Performance,Improve partitioning load balance for hybrid grids and add advanced ParMETIS controls,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059:21,load,load,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059,1,['load'],['load']
Performance,Improvements for Topology Optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:26,Optimiz,Optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,1,['Optimiz'],['Optimization']
Performance,Increased performance of the discrete adjoint solver by using Templates for Linear Solvers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:10,perform,performance,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['perform'],['performance']
Performance,Integrate MKL option for performance improvement on Intel Architectures.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:25,perform,performance,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['perform'],['performance']
Performance,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003:65,perform,perform,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003,2,"['Optimiz', 'perform']","['Optimization', 'perform']"
Performance,Lower bounds of the design variables are violated by optimizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/795:53,optimiz,optimizer,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/795,1,['optimiz'],['optimizer']
Performance,Mesh type used in optimization and numerical simulation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:18,optimiz,optimization,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,1,['optimiz'],['optimization']
Performance,"Method described below.; No config options needed.; Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; May or may not add OpenMP to this which would improve scalability.; Restarts are read twice for RANS problems, which is not great for this type of feature...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277:188,scalab,scalability,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277,1,['scalab'],['scalability']
Performance,More arm64 updates and fix a race condition in a test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2076:29,race condition,race condition,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2076,1,['race condition'],['race condition']
Performance,Move all restart reading from solver constructors to dedicated LoadRestart() routines.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:63,Load,LoadRestart,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['Load'],['LoadRestart']
Performance,Multipoint 2D Optimization Key Error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:14,Optimiz,Optimization,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['Optimiz'],['Optimization']
Performance,Multipoint Optimization not running under Windows 10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:11,Optimiz,Optimization,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['Optimiz'],['Optimization']
Performance,Multipoint optimization for INC_RANS,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912:11,optimiz,optimization,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/912,1,['optimiz'],['optimization']
Performance,NELEM incorrect after mesh deformation during shape optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/972:52,optimiz,optimization,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/972,1,['optimiz'],['optimization']
Performance,New CGNS Mesh Reader for improved performance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:34,perform,performance,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['perform'],['performance']
Performance,"OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I prop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1866,optimiz,optimizer,1866,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,"['Optimiz', 'optimiz']","['Optimization', 'optimizer']"
Performance,"ORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | MAIN_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 0, 0.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 1, 0.0, 1.0 ); . ```. Thank you for your help. - OS: [Linux (Ubuntu 20)]; - SU2 Version: [v5.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:2395,Optimiz,Optimization,2395,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['Optimiz'],['Optimization']
Performance,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166:281,optimiz,optimization,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/166,1,['optimiz'],['optimization']
Performance,Optimization improvements,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/421:0,Optimiz,Optimization,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/421,1,['Optimiz'],['Optimization']
Performance,Optimization of helicopter rotor blade,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/343:0,Optimiz,Optimization,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/343,1,['Optimiz'],['Optimization']
Performance,Optimization of wall distance computation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282:0,Optimiz,Optimization,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/282,1,['Optimiz'],['Optimization']
Performance,Optimize data structures for performance without losing readability/flexibility.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:0,Optimiz,Optimize,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['Optimiz', 'perform']","['Optimize', 'performance']"
Performance,Optimizing efficiency (bug?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/395:0,Optimiz,Optimizing,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395,1,['Optimiz'],['Optimizing']
Performance,"Output file writing was taking long time in NFS based cluster for huge grids (40 millions case). This change fixes this issue. . End of line output is changed to **\n** from **endl**. **endl** forces a flush to the stream and hence incurs a performance penalty. For a small case with 13000 points, backup time _reduced_ from 7 seconds to 0.5 seconds after this fix.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281:241,perform,performance,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/281,1,['perform'],['performance']
Performance,Potential crash for the OpenMP multi-thread running,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1667:31,multi-thread,multi-thread,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1667,1,['multi-thread'],['multi-thread']
Performance,"Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1075,cache,cache,1075,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,Repeat the LM1021 optimization. Focus on the constraints and using a larger FFD box.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/64:18,optimiz,optimization,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/64,1,['optimiz'],['optimization']
Performance,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17:106,load,load,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/17,3,['load'],"['load', 'loads']"
Performance,Running Optimization with FFD and Periodic Boundaries,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:8,Optimiz,Optimization,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['Optimiz'],['Optimization']
Performance,SU2 optimization does not work correctly with CGNS format,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/270:4,optimiz,optimization,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/270,1,['optimiz'],['optimization']
Performance,"SU2 optimization does not work correctly with CGNS format. Direct computation with CGNS format work correctly. First step of optimization is correct (DSN_001).; On second step (DSN_002) the program write the mesh_airfoil_deform.cgns.; The extension is correct, but internal format is SU2 format.; The command CONVERT_TO_SU2= YES does not work also. May be I do not know something. . Help me!. MESH_FILENAME= mesh_airfoil.cgns; MESH_FORMAT= CGNS; %CGNS_TO_SU2= YES; MESH_OUT_FILENAME= mesh_out.cgns or MESH_OUT_FILENAME= mesh_out.su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/270:4,optimiz,optimization,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/270,2,['optimiz'],['optimization']
Performance,SU2-NEMO - Optimize initialization time,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:11,Optimiz,Optimize,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,1,['Optimiz'],['Optimize']
Performance,Separate loading restart file and solution file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17:9,load,loading,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/17,1,['load'],['loading']
Performance,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:707,perform,performed,707,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['perform'],['performed']
Performance,Shape Optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:6,Optimiz,Optimization,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['Optimiz'],['Optimization']
Performance,Shape Optimization Issues,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:6,Optimiz,Optimization,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['Optimiz'],['Optimization']
Performance,Shape optimization returns to initial shape after a couple of deformed shapes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/370:6,optimiz,optimization,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/370,1,['optimiz'],['optimization']
Performance,Should the objective function value move in one direction only in shape optimization?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984:72,optimiz,optimization,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/984,1,['optimiz'],['optimization']
Performance,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1389:89,optimiz,optimization,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389,1,['optimiz'],['optimization']
Performance,Structural Modal Analysis (Eigenfreqencies) & Adjoint Shape Optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003:60,Optimiz,Optimization,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003,1,['Optimiz'],['Optimization']
Performance,"Structural stress penalty function for optimization, fix some CConfig problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:39,optimiz,optimization,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['optimiz'],['optimization']
Performance,Structural topology optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:20,optimiz,optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,1,['optimiz'],['optimization']
Performance,"TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks different, as can be seen in the upper part of this figure:~~. In the history file, actually the last Time(sec) value of each time-itera",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1817,perform,performance,1817,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['perform'],['performance']
Performance,TOTAL_HEATFLUX keyword not working as objective function with python optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/946:69,optimiz,optimization,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/946,1,['optimiz'],['optimization']
Performance,"T_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:2201,optimiz,optimizer,2201,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,2,['optimiz'],"['optimizer', 'optimizers']"
Performance,Tag the major optimization iterations among the full set of shape design output,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108:14,optimiz,optimization,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/108,1,['optimiz'],['optimization']
Performance,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/972:65,optimiz,optimization,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/972,2,['optimiz'],['optimization']
Performance,The NS continuous adjoint solver tries to load a restart even with RESTART_SOL = NO,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1477:42,load,load,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1477,1,['load'],['load']
Performance,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:52,optimiz,optimizations,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,1,['optimiz'],['optimizations']
Performance,"The [description of SU2][1] says. >The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. Are there any examples of how [SU2][2] ""has been extended to treat more general equations such as electrodynamics""?. [1]: https://github.com/su2code/SU2#su2-introduction; [2]: https://github.com/su2code/SU2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/655:115,optimiz,optimization,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/655,1,['optimiz'],['optimization']
Performance,"The discussion in #643 revealed that this (the performance of the linear solvers) is a concern for a lot of us.; I am opening this issue so we can discuss each issue separately, I will quote relevant comments from #643 below.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648:47,perform,performance,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/648,1,['perform'],['performance']
Performance,The inlet profile file does not get copied/linked to the directories DIRECT and ADJOINT_* during a shape optimization. Which python scripts need to be changed to resolve this?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970:105,optimiz,optimization,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/970,1,['optimiz'],['optimization']
Performance,The inlet.dat file does not get copied during a shape optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970:54,optimiz,optimization,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/970,1,['optimiz'],['optimization']
Performance,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075:173,optimiz,optimization,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075,1,['optimiz'],['optimization']
Performance,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303:385,multi-thread,multi-thread,385,https://su2code.github.io,https://github.com/su2code/SU2/issues/303,1,['multi-thread'],['multi-thread']
Performance,The title says it already. Apparently projection was called twice (and info was overwritten). This fix should solve the problem. Maybe we should add some optimization to the CI.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/223:154,optimiz,optimization,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/223,1,['optimiz'],['optimization']
Performance,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:209,perform,performance-wise,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['perform'],['performance-wise']
Performance,"There seems to potentially be a bug with doing an unsteady dual-timestepping simulation without a provided initial condition (restart file):. When no restart file is provided, the first inner iterations have Time_Iter=0 and Cur_Time=0 (the state **before** these inner iterations). After completion of this time iteration, a file `flow_00000.vtu` and all others are outputted. These files are _not_ the initial condition as specified by the configuration file -- they seem to actually be the solution after the first time step. This can be reproduced easily in the config file I have attached to this issue (an updated version of TestCases/plunging_naca0012 for SU2 v8). The `flow_00000.vtu` file has non-uniform flowfields, which doesn't make sense. For simulations where a restart file like `restart_00000.dat` is provided, the Time_Iter=1 and Cur_Time=dt (the state **after** these inner iterations), and the subsequently outputted files have the correct time iteration appended to it. I think that for non-restart unsteady simulations, the IC should be outputted as solely just the initialization before any inner iterations are completed, Time_Iter++ and Cur_Time+=dt, and THEN inner iterations performed. [plunging_NACA0012.cfg.txt](https://github.com/user-attachments/files/16912625/plunging_NACA0012.cfg.txt). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 22.04); - C++ compiler and version: GNU; - MPI implementation and version: MPICH; - SU2 Version: v8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2353:1200,perform,performed,1200,https://su2code.github.io,https://github.com/su2code/SU2/issues/2353,1,['perform'],['performed']
Performance,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:59,perform,performance,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,4,['perform'],['performance']
Performance,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:203,bottleneck,bottlenecks,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,2,"['bottleneck', 'perform']","['bottlenecks', 'performance']"
Performance,"This is a SU2 user using Linux system. When simulating the a testcase of shape optimisation simulation in parallel, an error occured after the first set of DIRECT solution calculated, which is shown below:. ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Aerodynamic Shape Optimization Script |; | |; -------------------------------------------------------------------------; | SU2 Project Website: https://su2code.github.io |; | |; | The SU2 Project is maintained by the SU2 Foundation |; | (http://su2foundation.org) |; -------------------------------------------------------------------------; | Copyright 2012-2022, SU2 Contributors (cf. AUTHORS.md) |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:406,Optimiz,Optimization,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['Optimiz'],['Optimization']
Performance,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241:124,optimiz,optimization,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/241,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:129,perform,performing,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['perform'],['performing']
Performance,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:596,optimiz,optimization,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,1,['optimiz'],['optimization']
Performance,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:100,optimiz,optimization,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,3,['optimiz'],['optimization']
Performance,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:102,bottleneck,bottleneck,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,3,"['bottleneck', 'load']","['bottleneck', 'loaders', 'loading']"
Performance,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:41,load,loading,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,5,"['Load', 'load']","['LoadRestart', 'loaded', 'loading']"
Performance,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/292:295,optimiz,optimization,295,https://su2code.github.io,https://github.com/su2code/SU2/pull/292,1,['optimiz'],['optimization']
Performance,"Ubuntu 12.04.3; OpenMPI 1.4.3 (repo). OpenMPI runs well on my system with other applications, but fails 100% of the time with SU2 compiled for mpi. Specific example:. shape_optimization.py -f inv_ONERAM6.cfg -p 4. Error:. ------------------------- Solver Preprocessing --------------------------; Area projection in the z-plane = 0.758602.; Traceback (most recent call last):; File ""../SU2_PY/shape_optimization.py"", line 124, in <module>; main(); File ""../SU2_PY/shape_optimization.py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:774,optimiz,optimize,774,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,3,['optimiz'],['optimize']
Performance,Unsteady optimization in V5.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/377:9,optimiz,optimization,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/377,1,['optimiz'],['optimization']
Performance,"Unsteady optimization in V5.0 has some issues. The problem is that after direct iterations SU2 cannot calculate adjoint for each time step properly.; It just keep calculating adjoint equation for one time step. For example a part of the log_adjoint file for NACA64A010 optimization is as follow:. Loading flow solution from direct iteration 250.; Begin direct solver to store flow data (single iteration).; Compute residuals to check the convergence of the direct problem.; log10[Maximum residual]: -2.77153, located at point 1018.; End direct solver, begin adjoint problem. Min DT: 0.000323558.Max DT: 1.20067.Dual Time step: 0.677451.; log10[Maximum residual]: -3.34769.; Maximum residual point 134, located at (0.63649, 0.0371117). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -4.444881 -4.159977 4.4996e+00 -6.5737e-04; 10 0 -4.488648 -4.764869 4.4053e+00 -6.5737e-04; 20 0 -4.433964 -4.864120 2.7194e+00 -6.5737e-04; 30 0 -4.449170 -4.851557 1.7148e+00 -6.5737e-04; 40 0 -4.669063 -4.954710 1.1593e+00 -6.5737e-04; 50 0 -4.689637 -5.116023 9.2103e-01 -6.5737e-04; 60 0 -4.797857 -5.289007 8.5846e-01 -6.5737e-04; 70 0 -4.922113 -5.428807 8.9570e-01 -6.5737e-04; 80 0 -5.021316 -5.534515 9.5224e-01 -6.5737e-04; 90 0 -5.102257 -5.604468 9.9700e-01 -6.5737e-04; 100 0 -5.169358 -5.654203 1.0424e+00 -6.5737e-04. Min DT: 0.0003236.Max DT: 1.201.Dual Time step: 0.6775.; log10[Maximum residual]: -4.172.; Maximum residual point 693, located at (0.03989, -0.0254). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -5.221491 -5.704096 1.0838e+00 -6.5737e-04; 10 0 -5.262729 -5.764520 1.1144e+00 -6.5737e-04; 20 0 -5.306548 -5.835208 1.1305e+00 -6.5737e-04; 30 0 -5.363881 -5.911928 1.1291e+00 -6.5737e-04; 40 0 -5.436887 -5.991739 1.1172e+00 -6.5737e-04; 50 0 -5.521833 -6.072162 1.1056e+00 -6.5737e-04; 60 0 -5.611948 -6.152996 1.0993e+00 -6.5737e-04; 70 0 -5.701126 -6.235540 1.0974e+00 -6.5737e-04; ........... the ExtIter is locked to 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/377:9,optimiz,optimization,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/377,3,"['Load', 'optimiz']","['Loading', 'optimization']"
Performance,"Using MARKER_INLET applies the inlet profile correctly. Using:. `MARKER_GILES= (inlet, TOTAL_CONDITIONS_PT, 85E+03, 273.15, 1.0, 0.0, 0.0, 1.0, 1.0, outlet, RADIAL_EQUILIBRIUM, 69E+03, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)`; `SPECIFIED_INLET_PROFILE=YES`. does say,; `Reading inlet profile from file: inlet_728-self.dat; `; but the inlet profiles are not correctly applied. It should also say something about whether interpolation is being used or not so my guess is that the LoadInletProfile subroutine is not being called. Has anyone used inlet profiles with MARKER GILES? My understanding is using GILES will have the benefit of using non-reflecting boundary conditions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1002:468,Load,LoadInletProfile,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/1002,1,['Load'],['LoadInletProfile']
Performance,Using SU2's Adjoint Optimization For Inverse Problem,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1623:20,Optimiz,Optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1623,1,['Optimiz'],['Optimization']
Performance,"Wall distance computation is SU2 right now seems to be doing brute force search along the wall boundaries to find the nearest wall vertex. One performance optimization here would be to use k-d search tree to find the nearest neighbor. Is it necessary to have a internal k-d tree code or can I use a third party library (like pointcloud). Since I was not sure, I have raised this as an issue and not a pull request.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282:143,perform,performance,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/282,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912:43,optimiz,optimization,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/912,2,['optimiz'],['optimization']
Performance,"What should the default value of RefElemLength in the code below be? The comment says it is 0.1 but the code says 1.0, which are inconsistent. ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; if (SystemMeasurements == US) RefElemLength /= 0.3048;; ```; https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/Common/src/CConfig.cpp#L4696. For shape optimization, when I set ADJ_SHARP_LIMITER_COEFF to default (3.0) and set SENS_REMOVE_SHARP to YES, surface sensitivity becomes zero within fairly large distance from the sharp edges. The cutoff distance is defined by the product of ADJ_SHARP_LIMITER_COEFF (AdjSharp_LimiterCoeff) and RefElemLength, so RefElemLength seems to be too large. https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/SU2_CFD/src/solvers/CDiscAdjSolver.cpp#L488. Because of this, I'm assuming that the default value of RefElemLength should have been 0.1 instead of 1.0. However, I realized that RefElemLength is used by the slope limiters as well, and I'm currently not sure about the impact of changing this variable. I am investigating myself but if someone knows the intent of this variable or the implementation of the slope limiters, I would like to ask for your help before I open PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1830:436,optimiz,optimization,436,https://su2code.github.io,https://github.com/su2code/SU2/issues/1830,1,['optimiz'],['optimization']
Performance,"When I was applying a multizone simulation with a single physics, I encountered the following problem:; When MULTIZONE_MESH = YES, the merged xxx.su2 file cannot be read. I didn't find any formatting errors also marked IZONE=1 and IZONE=2. The details of the problem are as follows:. ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Error in ""void CSU2ASCIIMeshReaderFVM::ReadMetadata()"":; -------------------------------------------------- -----------------------; Could not find the IZONE= keyword or the zone contents.; Check the SU2 ASCII file format.; ------------------------------ Error Exit ------------------ -------------; ```. When MULTIZONE_MESH = NO, I don't know if it is the problem of file reading again. An unexpected failure occurred when the solution process reached the following step:. ```; ---------------------------------------- Begin Solver ------------------ -------------; Simulation Run using the Multizone Driver; The simulation will run for 100 time steps.; Performing rigid mesh transformation.; New physical time: 0 seconds.; Translational velocity: (0, 0, 0) m/s.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) m.; Pitching frequency: (0, 0, 62.8) rad/s.; Pitching amplitude: (0, 0, 30) degrees.; Pitching phase lag: (0, 0, 0) degrees.; Angular velocity: (0, 0, 0) rad/s.; Segmentation fault (core dumped); ```. I followed every step of the tutorial exactly, but still can't achieve multizone simulation. . - Ubuntu: 20.04; - SU2 Version: 7.0.4 Linux Version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1594:1019,Perform,Performing,1019,https://su2code.github.io,https://github.com/su2code/SU2/issues/1594,1,['Perform'],['Performing']
Performance,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:472,load,load,472,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['load'],['load']
Performance,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252:1098,perform,performance,1098,https://su2code.github.io,https://github.com/su2code/SU2/issues/252,1,['perform'],['performance']
Performance,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207:222,perform,performances,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/207,2,['perform'],"['performance', 'performances']"
Performance,Would be good to support the newer Vulkan compute api as this is showing greater performance and lower overheads. Vulkan is also the prefered api for Aarch64.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/381:81,perform,performance,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/381,1,['perform'],['performance']
Performance,"Would it be possible to add a 3D example of RANS, SST model with wind tunnel (6 walls) and an obstacle to simulate wind flow?. Ultimately I'd like to see how to retrieve resulting pressures on a surface from the model, after providing inlet flow. I've tried adapting Multiphysics FSI 2D model with no luck, too many possible input issues on my end, and the SU2_CFD executable reports no errors when loading config, just finishes with no output or results. Meshes I've tried were generated from GMSH (tets for wind tunnel volume and tri for obstacle as a planar surface). I'm a new user so please excuse my lack of knowledge using SU2. An example would be great help! Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2261:399,load,loading,399,https://su2code.github.io,https://github.com/su2code/SU2/issues/2261,1,['load'],['loading']
Performance,Wrong deformation in shape optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:27,optimiz,optimization,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,1,['optimiz'],['optimization']
Performance,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:290,cache,cache,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,8,['cache'],['cache']
Performance,[WIP] Enable the hover simulation for the Actuator Disk with Variable Load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:70,Load,Load,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Load'],['Load']
Performance,[WIP] Shape optimization overhaul,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:12,optimiz,optimization,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:94,optimiz,optimization,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,2,['optimiz'],['optimization']
Performance,[case728.txt](https://github.com/su2code/SU2/files/4794021/case728.txt); Is there any way to set max ITER for adjoint solution separately during shape optimization? My direct solution takes a lot of iterations to converge but adjoint converges quickly. The adjoint solution also does not stop after the convergence criteria is satisfied. It appears that there is no convergence criteria set for adjoint set in the solver. Thanks in advance.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024:151,optimiz,optimization,151,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024,1,['optimiz'],['optimization']
Performance,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:973,optimiz,optimization,973,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,1,['optimiz'],['optimization']
Performance,"_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CNEMOGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CMutationTCLib.cpp.o SU2_CFD/src/libSU2core_AD.a.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:2074,optimiz,optimization,2074,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['optimiz'],['optimization']
Performance,"__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:1539,perform,performed,1539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['perform'],['performed']
Performance,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:1527,optimiz,optimization,1527,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['optimiz'],['optimization']
Performance,a possible bug for loading grid points for a zone,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345:19,load,loading,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345,1,['load'],['loading']
Performance,"a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v3.5.3"">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>; <h2>v3.5.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Use correct API url / endpoint in GHES by <a href=""https://github.com/fhammerl""><code>@​fhammerl</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1289"">actions/checkout#1289</a> based on <a href=""https://redirect.github.com/actions/checkout/issues/1286"">#1286</a> by <a href=""https://github.com/1newsr""><code>@​1newsr</code></a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.1...v3.5.2"">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>; <h2>v3.5.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20<",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:5359,perform,performance,5359,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['perform'],['performance']
Performance,"ache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/updat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6648,cache,cache,6648,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5677,cache,cache,5677,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7603,cache,cache,7603,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdot",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2116,cache,cache,2116,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8970,cache,cache,8970,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data overhead is considerable. **Additional context**; I performed my tests so far with the RANS solver, employing SST turbulence and SLAU2 scheme. Time-averaging started at around time-iteration 160k and cintinous for another 200k iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:1528,perform,performance,1528,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,2,['perform'],"['performance', 'performed']"
Performance,"all last):; File ""/usr/local/bin/shape_optimization.py"", line 166, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; gra",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1185,optimiz,optimize,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"ape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:1581,optimiz,optimize,1581,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['optimiz'],['optimize']
Performance,"ape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1456,optimiz,optimize,1456,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3766,cache,cache,3766,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"at a cte. AoA using the given cfg and mesh file. But it seems the process only goes for 4 steps and stop. No matter I use python2 or python3, it is the same. What could cause the problem here? Thank you very much!. when using python2:. ```; NIT FC OBJFUN GNORM; 1 1 2.946447E-08 6.646259E-06; 2 3 2.927194E-08 5.513828E-06; 3 4 2.037004E-08 4.516896E-06; 4 6 1.769283E-08 5.893302E-06; Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 118, in main; options.nzones ); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 163, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 143, in scipy_slsqp; epsilon = eps ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 207, in fmin_slsqp; constraints=cons, **opts); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:1114,optimiz,optimize,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['optimiz'],['optimize']
Performance,"ator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop br",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1243,perform,performing,1243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['perform'],['performing']
Performance,"ave resurfaced with some observations, suggestions, and questions. First, the bug:; Even though the config_template, and option structure have changed the numbering of the DEFINITION_DV (for example, FFD_CONTROL_POINT went from being 7 to 11), this has not been reflected in the SU2_PY/SU2/io/tools.py, or any of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1012,Optimiz,Optimization,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['Optimiz'],['Optimization']
Performance,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2997,optimiz,optimization,2997,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance,"ble with the shape_optimization.py. I'm following the instructions of the tutorial for unsteady shape optimization for naca0012 but got an error:. ```; Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 166, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = desig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1017,optimiz,optimize,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8534,cache,cache,8534,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"burger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/acti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4324,cache,cache,4324,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9478,cache,cache,9478,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4111,cache,cache,4111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,compute_polar.py error when optimization objective is not defined,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545:28,optimiz,optimization,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/545,1,['optimiz'],['optimization']
Performance,"ctions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5538,cache,cache,5538,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"d to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:1318,load,load,1318,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['load'],['load']
Performance,"d"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10549,load,load,10549,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['load'],['load']
Performance,"d, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., Henningson, D.S., Hœpffner, J., Marxen, O. and Schlatter, P., 2006. Steady solutions of the Navier-Stokes equations by selective frequency damping. Physics of fluids, 18(6), p.068102.; [2] Citro, V., Luchini, P., Giannetti, F. and Auteri, F., 2017. Efficient stabilization and acceleration of numerical simulation of fluid flows by residual recombination. Journal of Computational Physics, 344, pp.234-246.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:2553,perform,performance,2553,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['perform'],['performance']
Performance,"d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9079,cache,cache,9079,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"de their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5793,cache,cache,5793,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"e 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][func_name]; KeyError: 'INVERSE_DESIGN_PRESSURE' ; ```. SU2 version - 7.2.0 ; OS - Windows-11. I have also tried the latest version 7.3.1 on a Linu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1661,optimiz,optimize,1661,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"e running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1116,optimiz,optimization,1116,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['optimiz'],['optimization']
Performance,"e will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operato",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4943,perform,performance,4943,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['perform'],['performance']
Performance,"e without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7872,cache,cache,7872,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"econditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible for the discrete adjoint but I have not made them available yet.; Branch *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:1967,optimiz,optimizations,1967,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['optimiz'],['optimizations']
Performance,"ect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed ca",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2536,cache,cache,2536,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"edirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cach",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7155,cache,cache,7155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5100,cache,cache,5100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,er works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4289,cache,cached,4289,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['cache'],['cached']
Performance,"es that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint scaling is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:3458,perform,performing,3458,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,"['optimiz', 'perform']","['optimization', 'optimizer', 'performing']"
Performance,"es</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1482,cache,cache,1482,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"esult and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calcula",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1363,optimiz,optimization,1363,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['optimiz'],['optimization']
Performance,"ew segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3180,cache,cache,3180,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"f=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9335,cache,cache,9335,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"f=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3440,cache,cache,3440,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1438,perform,performance,1438,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['perform'],['performance']
Performance,"fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJE",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1560,optimiz,optimizer,1560,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['optimiz'],['optimizer']
Performance,forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| Tria-1-Bndry|; | | Tria-8-Bndry|; | | Tria-9-Bndry|; | | Tria-10-Bndry|; | | Tria-11-Bndry|; | | Tria-12-Bndry|; | | Tria-13-Bndry|; | | Tria-14-Bndry|; | | Tria-15-Bndry|; | | Tria-16-Bndry|; | | Tria-17-Bndry|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 2405969 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 5820762 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 16 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| Tria-1-Bndry| 14188|; | 1| Tria-2-Bndry| 188|; | 2| Tria-3-Bndry| 6421|; | 3| Tria-4-Bndry| 188|; | 4| Tria-5-Bndry| 612|; | 5| Tria-8-Bndry| 46107|; | 6| Tria-9-Bndry| 45354|; | 7| Tria-10-Bndry| 4922|; | 8| Tria-11-Bndry| 11414|; | 9| Tria-12-Bndry| 32010|; | 10| Tria-13-Bndry| 2486|; | 11| Tria-14-Bndry| 31513|; | 12| Tria-15-Bndry| 921|; | 13| Tria-16-Bndry| 82|; | 14| Tria-17-Bndry| 990|; | 15| Quad-6-Bndry| 9204|; +------------------------------------+; Calling ParMETIS... graph partitioning complete (52152 edge cuts).; Distributing ParMETIS coloring.; Rebalancing vertices.; Rebalancing volume element connectivity.; Rebalancing markers and surface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:3345,Perform,Performing,3345,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Perform'],['Performing']
Performance,"g can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contrib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1419,optimiz,optimization,1419,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,['optimiz'],['optimization']
Performance,"g template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1719,Optimiz,Optimization,1719,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['Optimiz'],['Optimization']
Performance,"github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""htt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6235,cache,cache,6235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6352,cache,cache,6352,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2651,perform,performance,2651,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"hanges. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Ga",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1023,optimiz,optimization,1023,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance,"he tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:3238,perform,performance,3238,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['perform'],['performance']
Performance,"heir first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5655,cache,cache,5655,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"herley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​ch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2767,cache,cache,2767,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7448,cache,cache,7448,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/ac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5484,cache,cache,5484,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"hub.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1428,cache,cache,1428,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6054,cache,cache,6054,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1575,OPTIMIZ,OPTIMIZER,1575,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,2,"['OPTIMIZ', 'Optimiz']","['OPTIMIZER', 'Optimization']"
Performance,"in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3295,cache,cache,3295,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLU",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:1243,perform,performance,1243,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['perform'],['performance']
Performance,"irectories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3084,cache,cache,3084,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['cache'],['cache']
Performance,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2294,load,load,2294,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['load'],['load']
Performance,"issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7000,cache,cache,7000,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ithub.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8786,cache,cache,8786,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ithub.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6817,cache,cache,6817,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"lease</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3916,cache,cache,3916,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.gith",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1701,cache,cache,1701,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"m/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6021,cache,cache,6021,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7728,cache,cache,7728,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"mization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1375,optimiz,optimize,1375,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"mulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the ar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:1476,perform,perform,1476,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['perform'],['perform']
Performance,"n feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8271,cache,cache,8271,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"n to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3490,cache,cache,3490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"n3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1630,optimiz,optimize,1630,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"nd fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4714,cache,cache,4714,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"ng is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scaling",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4224,optimiz,optimizer,4224,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['optimiz'],['optimizer']
Performance,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1527:1457,optimiz,optimized,1457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527,1,['optimiz'],['optimized']
Performance,"ngential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1359,load,load,1359,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['load'],['load']
Performance,"ns and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2864,optimiz,optimizations,2864,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimizations']
Performance,"nstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/scipy/optimize/optimize.py"", line 292, in function_wrapper; return function(*(wrapper_args + args)); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 393, in obj_f; obj_list = project.obj_f(x); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 236, in obj_f; return self._eval(konfig, func,dvs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 205, in _eval; vals = design._eval(func,*args); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 150, in _eval; save_data(filename,self); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 253, in __exit__; os.chdir(origin); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 118, in main; options.nzones ); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 163, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 143, in scipy_slsqp; epsilon = eps ); File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 207, in fmin_slsqp; constraints=cons, **opts); File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:4514,optimiz,optimize,4514,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,2,['optimiz'],['optimize']
Performance,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7243,perform,performance,7243,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['perform'],['performance']
Performance,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1816,perform,performance,1816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['perform'],['performance']
Performance,"ocess to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7278,cache,cache,7278,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"ome/star/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/star/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1315,optimiz,optimize,1315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"ommit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8679,cache,cache,8679,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"oni** July 18, 2022</sup>; Hi,. I'm running the inverse design case available in _`TestCases/optimization_euler/steady_inverse_design`_. While executing `python C:\SU2\bin\shape_optimization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1210,optimiz,optimize,1210,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,2,['optimiz'],['optimize']
Performance,"ons-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks different, as can be seen in the upper part of this figure:~~. In the history file, actually the last Time(sec) value of each time-iteration is printed, which also tends to increase, but not monotonically. Additionally, it seems to get reset to 0 each time output is written:. ![grafik](https://user-images.githubusercontent.com/42602495/153232596-f815ff83-b0e8-49b8-9ee3-2bb1f176e2df.png). ~~What does this value in the history output actually mean? Is it time/iteration? I've noticed a performance degradation over time, but not to this extent (I've monitored the actual runtime only sporadically, though).; If the performance degradation is in fact so severe, what could be the cause?~~. I'd really be happy if one of the veterans could chip in their ideas here!</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:3226,perform,performance,3226,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,2,['perform'],['performance']
Performance,"ons/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9223,cache,cache,9223,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ons/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8823,cache,cache,8823,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"or end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are ac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4875,perform,performance,4875,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['perform'],['performance']
Performance,out of bounds in optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:17,optimiz,optimization,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,1,['optimiz'],['optimization']
Performance,"ove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed wit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:1437,perform,performed,1437,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['perform'],['performed']
Performance,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1393,optimiz,optimization,1393,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance,"r that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2479,cache,cache,2479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"r upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3269,cache,cache,3269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,4,"['cache', 'perform']","['cache', 'performance']"
Performance,"rbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2721,cache,cache,2721,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ref=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4088,cache,cache,4088,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"ression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4352,cache,cache,4352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"rff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path argu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5359,cache,cache,5359,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"rise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1577,cache,cache,1577,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"rom <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10795,multi-thread,multi-threaded,10795,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,"['multi-thread', 'perform']","['multi-threaded', 'performance']"
Performance,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:1090,Load,LoadRestart,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,2,"['Load', 'load']","['LoadRestart', 'loading']"
Performance,"s given to OPT_CONSTRAINT(e.g. OPT_CONSTRAINT=( AIRFOIL_THICKNESS>0)*0.001 like onepoint problem ), the error will occur as below. ; Traceback (most recent call last):; File ""/home/star/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/star/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1146,optimiz,optimize,1146,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"s**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLUSTER**; - OS: CentOS release 6.5; - C++ compiler and version: GCC/7.3.0-2.30; - MPI implementation and version: compiler/intel/2018.0.1 intelmpi/2018.0.1/64 mkl/2018.0.1; - SU2 Version: [v7.1 and 7.1.1]; Thanks; Ashvin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:1730,perform,performance,1730,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['perform'],['performance']
Performance,"s</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/che",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8502,perform,perform,8502,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['perform'],['perform']
Performance,"shal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3888,cache,cache,3888,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"sitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1055,optimiz,optimization,1055,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance,"source : https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/Common/include/code_config.hpp#L42. is this a mistake?. this won't crash the code, but will most likely increase binary size when the purpose of NEVERINLINE is to prevent inlining. might cause performance degradation due to increasing binary size and causing instruction cache misses,. NEVERINLINE is being used in 2 places in the code base, one of them being in the simd numerics library : https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/include/numerics_simd/flow/diffusion/common.hpp#L98. i didn't do any further tests. thanks",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1584:279,perform,performance,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1584,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"t makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:2088,optimiz,optimizer,2088,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['optimiz'],['optimizer']
Performance,"thon could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2905,optimiz,optimization,2905,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance,"thub.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9169,cache,cache,9169,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"thub.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jor",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2541,cache,cache,2541,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"tion geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. If you see in Paraview that they are pointing inwards, the sign of the drag result must be swapped; - Compute the SU2 drag result by multiplying CD and the non-dimensional factor that can be found in the forces_breakdown.dat file; - You should get the forces that I mentioned in the text above. To reproduce the optimization itself, use the .cfg and the mesh file attached. Furthermore, the .geo file was used to create the mesh file with gmsh. You can find the files here:; [issue.zip](https://github.com/su2code/SU2/files/9138486/issue.zip). **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: g++ (GCC) 8.2.0; - MPI implementation and versi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:2236,load,load,2236,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['load'],['load']
Performance,"tion in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2062,cache,cache,2062,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"tion related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1088,perform,performed,1088,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['perform'],['performed']
Performance,"tion; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/scipy/optimize/optimize.py"", line 292, in function_wrapper; return function(*(wrapper_args + args)); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 393, in obj_f; obj_list = project.obj_f(x); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 236, in obj_f; return self._eval(konfig, func,dvs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 205, in _eval; vals = design._eval(func,*args); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 150, in _eval; save_data(filename,self); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 253, in __exit__; os.chdir(origin); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:3171,optimiz,optimize,3171,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,2,['optimiz'],['optimize']
Performance,"to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a hre",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7407,cache,caches,7407,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['caches']
Performance,"tps://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2990,cache,cache,2990,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"ts,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipoint( config, state ); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 675, in multipoint; func[i+1] = aerodynamics(konfig,ztate); File ""/home/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1605,optimiz,optimize,1605,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"ttps://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8627,cache,cache,8627,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"ttps://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8201,cache,cache,8201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"ttps://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2363,cache,cache,2363,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"ttps://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/action",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1937,cache,cache,1937,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"u2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 98, in function; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/scipy/optimize/optimize.py"", line 292, in function_wrapper; return function(*(wrapper_args + args)); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 393, in obj_f; obj_list = project.obj_f(x); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 236, in obj_f; return self._eval(konfig, func,dvs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 205, in _eval; vals = design._eval(func,*args); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 150, in _eval; save_data(filename,self); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 253, in __exit__; os.chdir(origin); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/'. During handling of the above exception, another exception occurred:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:3045,optimiz,optimize,3045,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['optimiz'],['optimize']
Performance,ude used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking siz,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4215,cache,cached,4215,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['cache'],['cached']
Performance,"ummary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>; <li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>; </ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:957,Optimiz,Optimizations,957,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,"['Optimiz', 'optimiz']","['Optimizations', 'optimizations']"
Performance,"uncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6904,cache,cache,6904,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,updating settings in the _basic config file to match the _adv settings in the oneram6 constrained optimization tutorial folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:98,optimiz,optimization,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['optimiz'],['optimization']
Performance,"usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipoint( config, state ); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 675, in multipoint; func[i+1] = aerodynamics(konfig,ztate); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 313, in aerodynamics; funcs[key] = state['FUNCTIONS'][key]; KeyError: 'AIRFOIL_AREA'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1758,optimiz,optimize,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"vironment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cach",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7720,cache,cache,7720,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"when I use **CST parameters** to deform mesh,; My airfoil mesh has two boundaries (far: farfield, air: airfoil),; and I use the below naca0012.cfg:; ```; ...; DV_KIND= CST; DV_MARKER= ( air ); DV_PARAM= (0, 5, 7); DV_VALUE= 0.6; ...; ```; when I use ```SU2_DEF naca0012.cfg```; the output mesh is same as **original grid**, and the output message is :; ```; ...; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; Design Variable not implemented yet. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; CSysSolve::FGMRES(): system solved by initial guess. ----------------------- Write deformed grid files -----------------------; |SU2 mesh |naca0012.su2 |; |Paraview Multiblock |naca0012.vtm |; Adding any FFD information to the SU2 file. ------------------------- Solver Postprocessing -------------------------; Deleted CGeometry container.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted COutput class. Completed in 0.335274 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. it seems that my cst method didn't work.; How can I use CST method?; Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123:438,Perform,Performing,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123,2,['Perform'],['Performing']
Performance,"when doing unsteady optimization in parallel, SU2 can not compute the gradients. Ive tested this issue on many cases (pitching, plunging, gist simulation, ....) with both SU2v4.0.0 and SU2-4.2.0 but each time the gradients are NaN. ; both flow and adjoint equations converged well and also the results on single possessor is ok.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296:20,optimiz,optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/296,1,['optimiz'],['optimization']
Performance,with SU2_CFD (running in parallel mode and with PARAVIEW output); load_distribution.csv; is saved to disk when writing solution file frequency WRT_SOL_FREQ= xxx is passed; However it is not refreshed when SU2_CFD has found the final solution on Convergence criteria. After using parallel SU2_CFD one must run SU2_SOL to make the flow.vtk and surface_flow.vtk files but this action also does not make the latest version of the load_distribution.csv file. To obtain the final load_distribution.csv you can run SU2_CFD once more with EXT_ITER=1; But it would be nice if this last extra run would not be necessary. Possible related issue: Correct the output in the load distribution file. #106,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/703:661,load,load,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/703,1,['load'],['load']
Performance,"x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1476,optimiz,optimize,1476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"xes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5184,cache,cache,5184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"zure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://gi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3640,cache,cache,3640,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Safety," 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a dimensional issue_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thou",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:2244,avoid,avoid,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['avoid'],['avoid']
Safety, [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.s,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:4655,abort,abort,4655,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['abort'],['abort']
Safety," case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubuser",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1856,detect,detect,1856,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['detect'],['detect']
Safety," exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3089,detect,detected,3089,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['detect'],['detected']
Safety," we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5763,avoid,avoid,5763,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['avoid'],['avoid']
Safety,"# Patching CVE-2007-4559. Hi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html). If you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:623,safe,safely,623,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,1,['safe'],['safely']
Safety,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:343,predict,prediction,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['predict'],['prediction']
Safety,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1170:309,redund,redundant,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170,1,['redund'],['redundant']
Safety,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:299,redund,redundant,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,1,['redund'],['redundant']
Safety,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1200:347,avoid,avoid,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200,1,['avoid'],['avoid']
Safety,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:574,safe,safety,574,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,1,['safe'],['safety']
Safety,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:733,avoid,avoid,733,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,1,['avoid'],['avoid']
Safety,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:682,sanity check,sanity checks,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['sanity check'],['sanity checks']
Safety,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:410,avoid,avoid,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,1,['avoid'],['avoid']
Safety,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:192,redund,redundant,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,2,"['recover', 'redund']","['recovered', 'redundant']"
Safety,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:433,safe,safe,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,1,['safe'],['safe']
Safety,"## Proposed Changes; @rsanfer , @talbring please keep the testcases up to date with the new options you are introducing, avoidable bugs are starting to pass... ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751:121,avoid,avoidable,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/751,1,['avoid'],['avoidable']
Safety,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:123,avoid,avoid,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:162,avoid,avoiding,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['avoid'],['avoiding']
Safety,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:182,detect,detected,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['detect'],['detected']
Safety,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:458,avoid,avoid,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:79,detect,detection,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['detect'],['detection']
Safety,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:69,avoid,avoid,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387:155,avoid,avoid,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:695,safe,safeguarded,695,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,1,['safe'],['safeguarded']
Safety,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:255,avoid,avoiding,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,2,"['avoid', 'safe']","['avoiding', 'safe']"
Safety,"## Proposed Changes; Avoid calls to external functions when compiling in AD and the datatype becomes incompatible.; (The HAVE_LAPACK flag is compatible with AD in the RBF interpolation but not in the HOM feature).; @vdweide please have a look at this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:21,Avoid,Avoid,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['Avoid'],['Avoid']
Safety,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:972,predict,predicted,972,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['predict'],['predicted']
Safety,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:21,Detect,Detect,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,1,['Detect'],['Detect']
Safety,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:85,avoid,avoid,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897:126,avoid,avoided,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/897,1,['avoid'],['avoided']
Safety,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1030:96,detect,detect,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030,1,['detect'],['detect']
Safety,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388:248,sanity check,sanity check,248,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388,1,['sanity check'],['sanity check']
Safety,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129:706,avoid,avoid,706,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:164,predict,prediction,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['predict'],['prediction']
Safety,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:208,avoid,avoid,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:386,redund,redundant,386,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['redund'],['redundant']
Safety,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:150,detect,detect,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,2,['detect'],['detect']
Safety,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1372:135,redund,redundancy,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372,1,['redund'],['redundancy']
Safety,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:55,avoid,avoid,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['avoid'],['avoid']
Safety,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1056:54,predict,predicts,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056,1,['predict'],['predicts']
Safety,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:83,risk,risk,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['risk'],['risk']
Safety,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:1120,Avoid,Avoid,1120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,1,['Avoid'],['Avoid']
Safety,"## Proposed Changes; Plain vanilla approach to topology optimization, element-wise constant density parameterization and SIMP interpolation scheme. It is working nicely for 2D cases of moderate size (10 to 100k elements), over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:542,avoid,avoid,542,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:293,safe,safe,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,1,['safe'],['safe']
Safety,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/975:129,safe,safe,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/975,3,"['avoid', 'safe']","['avoiding', 'safe']"
Safety,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:97,avoid,avoid,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['avoid'],['avoid']
Safety,"## Proposed Changes; These additions will make it possible to let the discrete adjoint run for the heat solver. They do also include; - some bugfixes within the heat solver,; - a discrete adjoint heat iteration so that the solver could be run stand-alone in the future (e.g. for solids or coupled). As there is no general discrete adjoint driver yet, I wanted to avoid another specific one (e.g. 'CDiscAdjHeatDriver') as I could directly go for the generalized version. It is finished up to 90% and a pull request will be opened once we agreed on these changes. So for the test case protecting this functionality, the heat solver runs weakly coupled to an incompressible flow. Sensitivities have been validated. . ## Related Work; Pull requests for a general multizone adjoint driver will be opened hereafter. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619:363,avoid,avoid,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/619,1,['avoid'],['avoid']
Safety,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/873:58,detect,detected,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/873,1,['detect'],['detected']
Safety,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356:236,avoid,avoid,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356,1,['avoid'],['avoid']
Safety,"## Proposed Changes; This PR makes several changes to the NEMO code:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:131,avoid,avoids,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['avoid'],['avoids']
Safety,## Proposed Changes; This PR will add heat flux to the values that are checked in the regression testing. This should help capture more of the code performance. . ## Related Work; @jtneedels noticed a possible issue of changes made in #1417. This will help avoid any potential unwanted changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698:257,avoid,avoid,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698,1,['avoid'],['avoid']
Safety,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:405,avoid,avoid,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,2,['avoid'],['avoid']
Safety,"## Proposed Changes; This is a tiny PR to add a conditional operator in CFlowOutput.cpp to avoid calling to GetNodes() function if the solver is a FEM/DG solver. In one of the early commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:91,avoid,avoid,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['avoid'],['avoid']
Safety,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:105,safe,safe,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,2,['safe'],['safe']
Safety,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:54,detect,detection,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,1,['detect'],['detection']
Safety,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1163:52,avoid,avoid,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163,1,['avoid'],['avoid']
Safety,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:588,detect,detected,588,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['detect'],['detected']
Safety,"### Preamble. I am moving the discussion about SIMD that started in #716 here and adding hybrid parallelization.; The two topics go hand in hand since both (SPMD and SIMD) consist of processing multiple data (MD) elements simultaneous, either by a single program (SP) that is run by multiple threads (generally with shared view of memory), or by a single instruction (SI) run by a single core.; The reason SIMD came up in #716 is that, as I will demonstrate, vectorization needs to be supported by data structures. On the other hand SPMD needs to be supported by algorithms designed to avoid race conditions, two or more threads modifying the same memory location. Instead of continuing #716 I think it is better to let that become documentation for #753.; I did not add **without loss of readability** to the title because it is long as is, that requirement is present nonetheless.; I open these issues in the hope that people participate (I am not a fast writer so this is actually a lot of work) and so far great comments and insights have come from those with experience in these topics (kudos to @economon and @vdweide). But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...). My (ambitious) goal with this work is to lay down an architecture for performance, i.e. not just to improve the performance of a few key numerical schemes but to create mechanisms applicable to all existing and future ones. Moreover I want that to be possible with minimal changes to the way those bits of code are currently written.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789:586,avoid,avoid,586,https://su2code.github.io,https://github.com/su2code/SU2/issues/789,1,['avoid'],['avoid']
Safety,"**Describe the bug**. For optimising a symmetric NACA 0012 airfoil, SU2 does not detect the `AIRFOIL_THICKNESS` automatically as it does for the complete geometry. . When `SU2_GEO` is utilized, it stops at the following stage without evaluating `AIRFOIL_THICKNES`, `AIRFOIL_TOC` and etc. -------------------- Objective function evaluation ----------------------. Station 1. YCoord: 0 m,. Due to this, I can't set an `OPT_CONSTRAINT` for the simulation. Please help me if there is a workaround for this. **Desktop (please complete the following information):**; - OS: WINDOWS; - C++ compiler and version: WINDOWS POWERSHELL; - SU2 Version: 7.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1543:81,detect,detect,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1543,1,['detect'],['detect']
Safety,"**Describe the bug**. In Arch Linux, `ninja` binary detection is wrong. Let's see a minimal extract of [`build_ninja()`](https://github.com/su2code/SU2/blob/v8.1.0/preconfigure.py#L36-L74). ```python; # File located at /tmp/main.py; import sys; import os; import subprocess. try:; subprocess.run(; [sys.path[0] + os.path.sep + ""ninja"", ""--version""], stdout=subprocess.PIPE; ); except OSError:; print(""ninja executable not found. Building ...""); subprocess.run(; args=[; subprocess.run(; args=[""which"", ""ninja""], capture_output=True, text=True; ).stdout.strip(),; ""--version"",; ],; stdout=subprocess.PIPE,; ); subprocess.run([""ninja"", ""--version""]). subprocess.run([""pwd""]); print(sys.path[0]); ```. ```plain; ninja executable not found. Building ...; 1.12.1; /tmp; /tmp; ```. **Desktop**; - OS: Arch Linux; - SU2 Version: v8.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2364:52,detect,detection,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/2364,1,['detect'],['detection']
Safety,"**Describe the bug**. Maybe ""it's not a bug, it's a feature"", but:; I can for example select a field for output; SCREEN_OUTPUT= INNER_ITER ; or use the group,; SCREEN_OUTPUT= ITER; which is equivalent to choosing the fields INNER_ITER, OUTER_ITER, TIME_ITER. But for HISTORY_OUTPUT, I can only choose the group. This leads to a lot of data in the history file if I want to know what happens at a number of markers. So I would like to do this:. HISTORY_OUTPUT= (INNER_ITER, SURFACE_MASSFLOW). to get 2 columns in my history file. Instead I have to do this:. HISTORY_OUTPUT= (ITER, SURFACE_MASSFLOW). which leads to a lot of columns. Is there a reason that only groups are allowed or can this limitation be lifted safely?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1493:712,safe,safely,712,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493,1,['safe'],['safely']
Safety,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. It was brought to our attention that what we currently define as the ""Standard"" SA model is not using the ft2 term in the source implementation:. https://github.com/su2code/SU2/blob/20888f488752e4e8aaa5230e56c5417923c7c344/SU2_CFD/src/numerics/turbulent/turb_sources.cpp#L137. which means it is actually the SA-noft2 variant:. https://turbmodels.larc.nasa.gov/spalart.html#sanoft2. In practice, this should make little difference for most problems, but it can be important for DES/DDES (where the ft2 term is typically avoided). However, it is also important that we be clear about the different variants of the turbulence models to users, since having confidence in the models for V&V, reproducibility, etc., is so critical. I would vote that we reinstate the ""standard"" model and make a new SA variant for SA-noft2 as a separate option (without duplicating a ton of code, if possible). Anyone else feel strongly about this topic?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992:704,avoid,avoided,704,https://su2code.github.io,https://github.com/su2code/SU2/issues/992,1,['avoid'],['avoided']
Safety,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/988:416,Abort,Aborted,416,https://su2code.github.io,https://github.com/su2code/SU2/issues/988,1,['Abort'],['Aborted']
Safety,"**Describe the bug**; During the last weeks of 2021, two different periodic flow scenarios have been investigated ( #1523 ).; While setting the periodic boundary conditions, the 2D-divergent wedge case solution seemed to be negatively affected even after the precious suggestions and corrections received in the quoted discussion. . Consequently, different test cases have been simulated again to avoid any possible mistake.; Scenarios investigated are better explained here below:; - **Rectangular Duct** . _2D case_ ; ![2022-03-13 (3)](https://user-images.githubusercontent.com/96534491/158036413-52921fc0-3ae9-464c-b9f9-1ef6b4075ecf.png). _3D case_ ; ![2022-03-13 (5)](https://user-images.githubusercontent.com/96534491/158036422-9fba20d1-9757-40a2-93f6-e4b05aeac2de.png). - **Divergent Wedge**. _2D case_ ; ![2022-03-13 (2)](https://user-images.githubusercontent.com/96534491/158036446-959ee5d1-f394-48c5-8ce6-383a1dc8d3a6.png). _3D case_ ; ![2022-03-13 (12)](https://user-images.githubusercontent.com/96534491/158036910-39f879f2-3c74-4735-b416-212f17181933.png). Meshes have been realized with ICEM CFD, then correctly converted into .cgns (adf) format. The results obtained are the following:. - 2D Rectangular Duct (Translational Periodicity) --> **Converged**; - 3D Rectangular Duct (Translational Periodicity) --> **Converged**; - 2D Divergent Wedge (Rotational Periodicity) --> _**Diverged**_; - 3D Divergent Wedge (Rotational Periodicity) --> **Converged**. It is suggested that this solution behavior might be traced to a bug.; It has also been observed that the converged simulations are providing consistent results only for the following convective scheme and time discretization settings: . CONV_NUM_METHOD_FLOW = ROE; MUSCL_FLOW = NO; TIME_DISCRE_FLOW = EULER_IMPLICIT. **To Reproduce the simulations**. _2D Rectangular Duct_; [channel2D.txt](https://github.com/su2code/SU2/files/8238476/channel2D.txt). _3D Rectangular Duct_; [channel3D.txt](https://github.com/su2code/SU2/files/8238",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562:397,avoid,avoid,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562,1,['avoid'],['avoid']
Safety,"**Describe the bug**; Hi all, . I noticed some issues with restarts (primal only and for the primal-iteration in the discrete adjoint). I do the following:; 1. Run a simulation with X+1 iterations. The residuals of the X+1st iterations are basically what we try to recreate in the restarted version. This is the ground truth; 2. Run a simulation with X iterations. This gives us a file to restart from. (A good sanity check with the 1. simulation is to diff with the history file to see whether the simulations are deterministic at all); 3. Run a primal restarted simulation from the restart file of 2. with just 1 iteration. The residuals should match the results of 1.; 4. Run an adjoint simulation with the restart file of 2. . The residuals should match the results of 1. What you will see in the following is 3 lines with multiple residual values each. The first line corresponds to the X+1st history entry of simulation 1. (the ground truth). The second line is the restarted primal from simulation 3., also last history line. The third line is from the adjoint-primal-restart, grabbed from the screen output with OUTPUT_PRECISION=12 (see #1394 ); ```; 1.res[1], 1.res[s] ...; 3.res[1] ....; 4.res[1]; ```. Of course the best outcome would be 3 identical lines ... which we dont get :(. ## Pin Array setup 2D - Fluid Only. (p, vx, vy, T, k, w); 200 iterations; ```; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; ```; everythings fine 👍 . ## Pin Array setup 2D - Solid Only. Note that this will only work with the fix in #1394 . 10 iterations (8 Linear Solver Iter); ```; -6.83193258622; -6.83193258622; -6.83193258622; ```. 10 iterations (10 Linear Solver Iter); ```; -7.38737630018; -7.38737630016; -7.38737630016; ```. 10 iterations (20 Linear Solver Iter); ```; -8.927",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:411,sanity check,sanity check,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['sanity check'],['sanity check']
Safety,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:619,avoid,avoid,619,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['avoid'],['avoid']
Safety,"**Desktop (please complete the following information):**; - OS: [e.g., WSL (Mint 21.2)]; - C++ compiler and version: [e.g., g++ (GCC) 11.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.1.2]; - SU2 Version: [e.g., v7.5.1]; ; I compile SU2 with ; ```; export CXXFLAGS=""-march=native -funroll-loops -O2""; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=/opt/su2; ./ninja -C build install; ```. And it compiles successfully. When I run **QuickStart** with ``` mpirun -n 2 SU2_CFD inv_NACA0012.cfg```, it can run sucessfully, but when I run serial with ``` SU2_CFD inv_NACA0012.cfg```, I get a error:; ```; [DESKTOP-7ALPJDS:00356] *** An error occurred in MPI_Win_create; [DESKTOP-7ALPJDS:00356] *** reported by process [235864065,0]; [DESKTOP-7ALPJDS:00356] *** on communicator MPI_COMM_WORLD; [DESKTOP-7ALPJDS:00356] *** MPI_ERR_WIN: invalid window; [DESKTOP-7ALPJDS:00356] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [DESKTOP-7ALPJDS:00356] *** and potentially your MPI job); ```. It seems that SU2 was able to run successfully in parallel, but something went wrong with running serially.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2104:972,abort,abort,972,https://su2code.github.io,https://github.com/su2code/SU2/issues/2104,1,['abort'],['abort']
Safety,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:1198,safe,safely,1198,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,1,['safe'],['safely']
Safety,"**Is your feature request related to a problem? Please describe.**; Per our previous discussion with @pcarruscag, [in this pull request](https://github.com/su2code/su2code.github.io/pull/99), the Barth-Jesperson flux limiter is actually implemented as the Venkat limiter. This ticket is noting the issue so it can be resolved at a later date. **Describe the solution you'd like**; An implementation of the BARTH_JESPERSON limiter. . **Describe alternatives you've considered**; Complete removal of the BARTH_JESPERSON limiter option to avoid confusion in the future. **Additional context**; To demonstrate the issue, we have modified the [flow over a cylinder test case](https://github.com/su2code/SU2/blob/master/TestCases/navierstokes/cylinder/lam_cylinder.cfg). The SLOPE_LIMITER_FLOW option was set to ""VENKATAKRISHNAN"" (VENKAT_LIMITER_COEFF = 0.0), ""BARTH_JESPERSON"", and ""NONE."" The results of these are shown below. Both VENKATAKRISHNAN and BARTH_JESPERSON yielded exactly the same results, and NONE was different. These results demonstrate that the limiters are implemented as described above. Flow over a cylinder test case. Results were extracted along a line at y=0 across the center of the domain:; This issue ticket written in collaboration with @tomtom252525; ![Limiter_Comp](https://user-images.githubusercontent.com/112184708/205416320-c5c45bcd-5157-4e3f-bfd1-2e9849e2a8e4.jpg); ![Momentum_Comp](https://user-images.githubusercontent.com/112184708/205416327-7eb3b01c-2eff-4f5a-953c-80cdc1820ef2.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1841:536,avoid,avoid,536,https://su2code.github.io,https://github.com/su2code/SU2/issues/1841,1,['avoid'],['avoid']
Safety,"**Is your feature request related to a problem?** . At any boundary that is not a Neumann-zero boundary ($\nabla \vec{V} \cdot \hat{n} = 0$) the gradients computed are incorrect, as they are all computed assuming that at boundaries $\vec{q}_i = \vec{q}_j$. . For example, for a Riemann boundary condition we have a certain imposed external state $\vec{q}_e$ but this is not considered in the computation of gradients. In my experience, this issue is exacerbated when using MUSCL reconstruction at corners shared by walls and Riemann boundaries, particularly in NICFD cases, as it can cause divergence of the solver and/or unphysical solutions. . **Describe the solution you'd like**. The solution is not easy as ideally it would require storing all ""external"" states for the computation of gradients. One may need to choose if swapping the order of the computation of boundary residuals and of gradients to avoid double computations, but it may be inefficient for MPI. **Describe alternatives you've considered**. One could also disable MUSCL at corner/boundary nodes which would require saving which points are corners. This is a 1st order approximation locally, but my opinion is that the current assumption that $\vec{q}_i = \vec{q}_j$ is also lower order. Another possibility is correcting boundaries after they have been computed by summation/subtraction, before the upwind residual computations. **Additional context**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285:907,avoid,avoid,907,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285,1,['avoid'],['avoid']
Safety,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; Not really a bug, but compiler warnings that can be avoided easily. In the file SU2_CFD/include/numerics/NEMO/NEMO_diffusion.hpp, class CAvgGradCorrected_NEMO, the variables iDim and iVar are defined, which are used as counters as far as I can tell. First of all I don't think such variables should not be defined as member variables of a class, but if you do then don't define variables with the same name in the implementation of the member functions. In this case in SU2_CFD/src/numerics/NEMO/NEMO_diffusion.cpp. It is causing a lot of compiler warnings in combination with the Intel compiler, which makes it more difficult to see the warnings that actually matter. If you want I can fix this, but maybe it is better if somebody with a NEMO background does it. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04; - C++ compiler and version: Intel compilers version 19.1.0.166; - MPI implementation and version: Intel MPI; - SU2 Version: develop branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1916:182,avoid,avoided,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/1916,1,['avoid'],['avoided']
Safety,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406:251,Detect,Detecting,251,https://su2code.github.io,https://github.com/su2code/SU2/pull/406,1,['Detect'],['Detecting']
Safety,--------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated norm,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:1760,abort,abort,1760,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['abort'],['abort']
Safety,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1575,recover,recovers,1575,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['recover'],['recovers']
Safety,".\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1176,avoid,avoided,1176,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['avoid'],['avoided']
Safety,".dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e94",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6721,timeout,timeout,6721,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['abort', 'timeout']","['aborting', 'timeout']"
Safety,"/user-images.githubusercontent.com/46273732/74617122-a3003500-50f9-11ea-9a0f-1db78a9d4d04.png); ![Tt comparsion](https://user-images.githubusercontent.com/46273732/74617123-a3003500-50f9-11ea-9f86-decee9d097b4.png); ![Turb comparsion](https://user-images.githubusercontent.com/46273732/74617124-a4316200-50f9-11ea-8e10-bc7dcbb0e8c6.png). I am also attaching my python plotting results in case someone wants to reproduce the graphs and/or look at the equations in detail. [plotting_script.txt](https://github.com/su2code/SU2/files/4217388/plotting_script.txt). Please note that the inlet file was created with random fluctuating values to ensure correct inlet interpolation is happening. Some values and patterns may look unrealistic. Additionally, note that Akima can extrapolate values as well but will display a warning if it is doing so. Linear will only do interpolation and will exit if the inlet file does not have the specific radius data. However, it will show on the console which radius data is missing so the user can add it. Also, currently, the flow should be in z-direction only. I don't know how to find the flow direction through any built-in method in SU2 during run. If you can tell me that I can update the code to support any flow direction. During interpolation, it will display that flow direction must be in z-direction to avoid any mistake by the user. Thanks,; Aman. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:4273,avoid,avoid,4273,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['avoid'],['avoid']
Safety,"4138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compile",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:2880,abort,aborted,2880,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['abort'],['aborted']
Safety,"457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedback on this issue. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:5344,abort,aborted,5344,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['abort'],['aborted']
Safety,"67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:1280,timeout,timeout,1280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['timeout'],['timeout']
Safety,"8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1191:1276,timeout,timeout,1276,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191,1,['timeout'],['timeout']
Safety,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:3123,Abort,Aborted,3123,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['Abort'],['Aborted']
Safety,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:6685,Abort,Aborted,6685,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['Abort'],['Aborted']
Safety,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:1752,Timeout,Timeout,1752,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,1,['Timeout'],['Timeout']
Safety,">; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6292,timeout,timeout,6292,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['abort', 'timeout']","['abort', 'timeout']"
Safety,Accurate heat flux predictions require extremely small first cell spacing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2347:19,predict,predictions,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/2347,1,['predict'],['predictions']
Safety,Add the Wtime function to the MPI wrapper (to avoid #ifdefs),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:46,avoid,avoid,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['avoid'],['avoid']
Safety,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:283,redund,redundancy,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['redund'],['redundancy']
Safety,Alternative time-averaging for rectangular window to avoid performance degradation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:53,avoid,avoid,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['avoid'],['avoid']
Safety,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342:0,Avoid,Avoid,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342,1,['Avoid'],['Avoid']
Safety,Changing a short to a long to avoid problems on large periodic markers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/678:30,avoid,avoid,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/678,1,['avoid'],['avoid']
Safety,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:384,avoid,avoid,384,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['avoid'],['avoid']
Safety,"Dear Developers, . I have been trying to run the ""Constrained shape design of a transonic inviscid wing at a cte. CL"" tutorial but am having issues in installing SU2 properly. I realize that the SU2 tools necessary for this tutorial are not included with the binary executables and I have been working on properly configuring and building SU2 to have the necessary tools and to run in parallel by following the compilation guide. Unfortunately, I have yet to install a working parallel version to run this tutorial. A solution to avoiding some of these installation issues would be to set up this environment within a singularity container. I found a singularity container definition for an old version of SU2 in #738 and modified the su2.def file to read:. Bootstrap: docker; From: ubuntu:19.04; ; %post; apt-get -y update; apt-get -y install python3 git build-essential autoconf python-dev libopenmpi3 openmpi-common; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=$PWD; ./ninja -C build install; ; %runscript; exec /SU2/bin/$1 $2 . This code raises the following error after running . FATAL: Unable to build from su2.def: while parsing definition: su2.def: invalid selection(s) specified:. I understand this is an issue stemming from singularity and how I defined the definition file, but I was wondering if there was any supported singularity container for running SU2 that supports AD and parallel computing?. Best",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1626:530,avoid,avoiding,530,https://su2code.github.io,https://github.com/su2code/SU2/issues/1626,1,['avoid'],['avoiding']
Safety,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:629,safe,safe,629,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,1,['safe'],['safe']
Safety,"Error messages are only printed for Rank == 0, see the function CBaseMPIWrapper::Error. inline void CBaseMPIWrapper::Error(std::string ErrorMsg, std::string FunctionName){; if (Rank == 0){; std::cout << std::endl << std::endl;; std::cout << ""Error in \"""" << FunctionName << ""\"": "" << std::endl;; std::cout << ""-------------------------------------------------------------------------"" << std::endl;; std::cout << ErrorMsg << std::endl;; std::cout << ""------------------------------ Error Exit -------------------------------"" << std::endl;; std::cout << std::endl << std::endl;; }; Abort(currentComm, 0);; }. This makes sense when the error handler is called collectively, as this avoids a messy output. However, there are quite a few situations where the error handler is not called collectively and therefore the error message is not printed when Rank != 0. Would it therefore be possible to add an additional argument (possibly default argument) to the error handler to inform whether or the call is collective or not?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564:582,Abort,Abort,582,https://su2code.github.io,https://github.com/su2code/SU2/issues/564,2,"['Abort', 'avoid']","['Abort', 'avoids']"
Safety,"FFD box fix to avoid ambiguous definition of nonplanar faces . ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The FFD box is defined using quadrilateral faces. These faces can in principle be non-planar. To avoid ambiguity, we define a supporting middle node and divide each face into 4 triangles. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742:15,avoid,avoid,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742,2,['avoid'],['avoid']
Safety,Fix bugs detected by the address sanitizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:9,detect,detected,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['detect'],['detected']
Safety,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:918,predict,predictably,918,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['predict'],['predictably']
Safety,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:858,predict,predicts,858,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,2,['predict'],['predicts']
Safety,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409:283,detect,detect,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/409,1,['detect'],['detect']
Safety,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:939,avoid,avoid,939,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,['avoid'],['avoid']
Safety,"Hello, I meet a problem:meson test failed about su2@master on canetos8_aarch64.; ```console; [root@bigdata spack-build]# ls; Common SU2_CFD SU2_DEF SU2_DOT SU2_GEO SU2_PY SU2_SOL UnitTests build.ninja compile_commands.json externals meson-info meson-logs meson-private; [root@bigdata spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver FAIL 0.01s exit status 1; >>> MALLOC_PERTURB_=206 /home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build/meson-logs/testlog.txt; ```; testlog details:; [testlog.txt](https://github.com/su2code/SU2/files/10323737/testlog.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859:714,Timeout,Timeout,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859,1,['Timeout'],['Timeout']
Safety,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:10,detect,detected,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['detect'],['detected']
Safety,"Hello,. I the same issue with v4.1.0 as in #28, which has been closed but does not contain helpful information. The cgns headers and libs (v3.2.1) are correctly detected by `configure`. Here is the output of make V=1:. ```; Making all in externals; make[1]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Nothing to be done for `all-am'.; make[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250:161,detect,detected,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/250,1,['detect'],['detected']
Safety,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/510:192,redund,redundancy,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/510,1,['redund'],['redundancy']
Safety,"Hi all, . I will be opening a number of issues that were raised during the Developers Meeting for discussion, to get things started. One interesting open question is **how many of the branches available in the repo are still active.**. My suggestion is that we all work together in having a list of branches with a short description in order to have an idea of where we stand. I would propose that all of you go through your feature branches and collect the following information about them:. - Branch name; - A two line description on the goal of the branch; - Status of the branch:; - Under active development (we are adding a new feature here); - Complete feature, (not necessarily up-to-date with develop); - In such case, latest compatible release; - Mature feature (not necessarily complete); - Test feature, still under consideration; - Test feature, discontinued; - Old feature / unknown status; - Can the branch be deleted?. This information would be very valuable, as maybe some people would be interested in continuing old developments, some repetitive work would also be avoided, and collaboration between complementary branches would be enhanced. I'm happy to help in collecting this information and later cleaning up the repository. Please let me know of your thoughts, but I think we should get this started asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582:1083,avoid,avoided,1083,https://su2code.github.io,https://github.com/su2code/SU2/issues/582,1,['avoid'],['avoided']
Safety,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:192,safe,safety,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,2,"['redund', 'safe']","['redundant', 'safety']"
Safety,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088:592,abort,aborted,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088,1,['abort'],['aborted']
Safety,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208:241,recover,recover,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/208,1,['recover'],['recover']
Safety,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:284,avoid,avoid,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['avoid'],['avoid']
Safety,"Hi,. The attached project files are trying to solve a transient 3D cylinder model, the geometry is shown below. While the solver returns the error about the NaN value. Could you please guide me how to resolve this NaN value issue? Thank you. ![gui_model](https://github.com/su2code/SU2/assets/106984354/9dbbfe68-abcd-4ec9-926a-688021843a34). ```; Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. To run this model, please remove the "".txt"" suffix after downloading these two files.; [mesh.su2.txt](https://github.com/su2code/SU2/files/13806689/mesh.su2.txt); [su2.cfg.txt](https://github.com/su2code/SU2/files/13806690/su2.cfg.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2191:521,detect,detected,521,https://su2code.github.io,https://github.com/su2code/SU2/issues/2191,1,['detect'],['detected']
Safety,"Hi. I have successfully run the sliding mesh test case for rotating cylinders. However, when I change the simulation type to Navier-Stokes in the cfg file the solution diverges before starting the CFD iterations. Can you please suggest what is going wrong and how to avoid this error. Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401:267,avoid,avoid,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/401,1,['avoid'],['avoid']
Safety,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:453,abort,aborts,453,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,1,['abort'],['aborts']
Safety,"I am trying to compile SU2 for parallel runs using intel compilers. SU2 compiles perfectly when compiled without the --enable-autodiff flag, but throws an error when compiling with it. The error is: . ```; ../../../Common/lib/../src/adt_structure.cpp(1402): internal error: assertion failed at: “shared/cfe/edgcpfe/exprutil.c”, line 7266. const su2double V0x = xc[0] - 0.5*xRel[4][0] - 0.125*(xRel[1][0]+xRel[2][0]+xRel[3][0]);; ^. compilation aborted for ../../../Common/lib/../src/adt_structure.cpp (code 4); make[2]: *** [../src/libSU2_AD_a-adt_structure.o] Error 4; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory `/path/SU2_AD/Common/lib’; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory `/path/SU2_AD’; make: *** [install-SU2_AD] Error 2; ```. Looking for the error online, it seems to be something related to the compiler itself. I was wondering if anyone else had encountered this error message, and how they got around it. . I am using icc and icpc version 18.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/719:444,abort,aborted,444,https://su2code.github.io,https://github.com/su2code/SU2/issues/719,1,['abort'],['aborted']
Safety,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:752,predict,predicted,752,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['predict'],['predicted']
Safety,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:276,avoid,avoid,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['avoid'],['avoid']
Safety,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550:631,abort,aborting,631,https://su2code.github.io,https://github.com/su2code/SU2/issues/550,1,['abort'],['aborting']
Safety,Improve exception safety with smart pointers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:18,safe,safety,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['safe'],['safety']
Safety,Improve ninja system-wide detection,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2364:26,detect,detection,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/2364,1,['detect'],['detection']
Safety,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209:223,predict,predicted,223,https://su2code.github.io,https://github.com/su2code/SU2/pull/209,2,"['predict', 'redund']","['predicted', 'redundancies']"
Safety,Intermediate base class for flow solvers to avoid duplication.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1044:44,avoid,avoid,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1044,1,['avoid'],['avoid']
Safety,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003:260,avoid,avoid,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003,1,['avoid'],['avoid']
Safety,Keeping the solution group together to avoid issues in restarts,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1985:39,avoid,avoid,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1985,1,['avoid'],['avoid']
Safety,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:3142,abort,aborted,3142,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,1,['abort'],['aborted']
Safety,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/484:237,avoid,avoiding,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/484,1,['avoid'],['avoiding']
Safety,"My compiler is detection tens of warnings, I have fixed most of them. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/440:15,detect,detection,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/440,1,['detect'],['detection']
Safety,Need proper error checking to avoid running a CGNS mesh when MESH_FORMAT= SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/54:30,avoid,avoid,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/54,1,['avoid'],['avoid']
Safety,"OW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if neces",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:1382,avoid,avoid,1382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['avoid'],['avoid']
Safety,Proper restart at each sweep member from the previous member; EXT_ITER from the cfg file is used unless overwritten in script command; More careful folders renaming to avoid inconsistencies in parallel run; Listing case details on the polar-sweep concluding file; Semantic and cosmetic fixes to make pylint less verbal,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520:168,avoid,avoid,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/520,1,['avoid'],['avoid']
Safety,Redundant SetVolume_Deformation() calls for DEFORMING mode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/730:0,Redund,Redundant,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/730,1,['Redund'],['Redundant']
Safety,SU2_DEF should automatically detect an existing point inversion and not recompute when setting up the FFD boxes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/116:29,detect,detect,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/116,1,['detect'],['detect']
Safety,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:571,recover,recover,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['recover'],['recover']
Safety,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/265:502,avoid,avoids,502,https://su2code.github.io,https://github.com/su2code/SU2/pull/265,2,"['avoid', 'risk']","['avoids', 'risks']"
Safety,"The Aachen turbine test case added in #2158 needs another look, for two reasons. 1. The test case is subject to a yet unfixed memory access violation, as detected in the address sanitizer tests in #2246. We explored a fix in c97610b02bc1281eb766847e7ef5ed7ac451dfb9, that remedies the address sanitzer detections but also changes the test results notably. It is unclear yet whether this is the correct way to fix it.; 2. @bigfooted observed non-deterministic behaviour in #2260. This might or might not be related to the memory access violation. As soon as the memory access violation is fixed, address sanitizer testing can be re-enabled for the Aachen turbine test case (it was disabled in 0f3fc3ec900f1518c0c3ed26c3e971ae27fb974c). @alecappiello We can continue the discussion from #2246 here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276:154,detect,detected,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276,2,['detect'],"['detected', 'detections']"
Safety,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/926:625,safe,safer,625,https://su2code.github.io,https://github.com/su2code/SU2/issues/926,1,['safe'],['safer']
Safety,"This comes in the sequence of https://www.cfd-online.com/Forums/su2/225090-restart-causes-fgmres-orthogonalization-failed.html. **Describe the bug**; Something goes wrong when restarting a rotating wall case and SU2 diverges. Even when the rotation rate is 0.; The residuals close to the rotating wall shoot up when restarting, it does not seem to be a ""first iteration proble"" I tried setting the initial CFL very low and the solver is not able to recover. Does anyone have any clue why this might happen?. **To Reproduce**; Run TestCases/moving_wall/spinning_cylinder, then restart.; This also happens in 3D.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/915:449,recover,recover,449,https://su2code.github.io,https://github.com/su2code/SU2/issues/915,1,['recover'],['recover']
Safety,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:167,redund,redundant,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['redund'],['redundant']
Safety,Those Set functions need to be called at least for the Get functions in CEulerSolver::Evaluate_ObjFunc unless they are supposed to be called somewhere else. These calls exist in the legacy output and seem to have been removed because SetHistoryOutputPerSurfaceValue is replacing them for the history/screen output. Perhaps this will be redundant when #913 is done,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/935:336,redund,redundant,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/935,1,['redund'],['redundant']
Safety,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:6,safe,safe,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['safe'],['safe']
Safety,Try to detect wrong meson being used to configure SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1615:7,detect,detect,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/1615,1,['detect'],['detect']
Safety,"We have used SU2 and SU2-NEMO to predict the heat flux for various shapes in a high-speed flow. Something we have observed is that SU2 requires an extremely small first cell spacing to get an accurate and grid-independent prediction for heat flux. For example, this first cell space is often 1E-9 to 1E-10 m with SU2; whereas with other codes it is a micrometer. The latter is in line with the general rule of thumb of setting the first cell height so that the first cell Reynold's number is between 0.1 and 1.0. Discussing with @jtneedels and @WallyMaier, we think it may have to do with how the temperature gradient is calculated in CNSSolver.cpp:. /*--- Compute the normal gradient in temperature using Twall ---*/. ` su2double dTdn = -(There - Twall)/dist_ij;`. /*--- Apply a weak boundary condition for the energy equation.; Compute the residual due to the prescribed heat flux. ---*/. ` su2double Res_Conv = 0.0;; su2double Res_Visc = thermal_conductivity * dTdn * Area;`. which may result in a first-order approximation for the temperature gradient causing this requirement for an extremely small cell size to recover the true gradient. I would be interested to see if calculating this gradient similar to CFVMFlowSolverBase.ini. For example,; ` for (iDim = 0; iDim < nDim; iDim++) {; Grad_Temp[iDim] = nodes->GetGradient_Primitive(iPoint, prim_idx.Temperature(), iDim);; }`. `su2double dTdn = -GeometryToolbox::DotProduct(nDim, Grad_Temp, UnitNormal);`. I tried checking this but quickly found out, I am not familiar enough with the code structure to implement.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2347:33,predict,predict,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/2347,3,"['predict', 'recover']","['predict', 'prediction', 'recover']"
Safety,"ate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:3446,abort,abort,3446,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['abort'],['abort']
Safety,avoid calls to blas routines when the data type is not compatible,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:0,avoid,avoid,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['avoid'],['avoid']
Safety,"de></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2233,timeout,timeout,2233,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['timeout'],['timeout']
Safety,"echnique is a proven procedure that helps in reducing numerical diffusion offered by the scheme. Results from the literature shows that using the vorticity confinement technique, a better resolution is achieved in the problems like flow behind bluff bodies, rotors, wings etc. References. J. Steinhoff and D. Underhill, ``Modification of the euler equations for vorticity confinement: Application to the computation of interacting vortex rings,'' Physics of Fluids, vol.6, no.8, pp. 2738--2744, 1994. https://doi.org/10.1063/1.868164. D. A. Caughey and M. M. Hafez, Frontiers of Computational Fluid Dynamics 2006. WORLD SCIENTIFIC, 2005. https://www.worldscientific.com/doi/abs/10.1142/5963. R. Loehner and C. Yang, Vorticity confinement on unstructured grids, 40th AIAA Aerospace Sciences Meeting &amp; Exhibit, 2002. [Online]. Available: https://arc. aiaa.org/doi/abs/10.2514/6.2002-137. A. Povitsky and K. C. Pierson, ``Vorticity confinement applied to accurate prediction of convection of wing tip vortices and induced drag,'' International Journal of Computational Fluid Dynamics, vol. 35, no. 3, pp. 143--156, 2021. https://doi.org/10.1080/10618562.2020.1856822. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Pag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:1611,predict,prediction,1611,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['predict'],['prediction']
Safety,"ef=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:9540,safe,safe-directory,9540,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['safe'],['safe-directory']
Safety,"erodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_term",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:2618,Abort,Aborted,2618,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,3,['Abort'],['Aborted']
Safety,"ers are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:3246,recover,recovered,3246,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['recover'],['recovered']
Safety,"es by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3597,detect,detected,3597,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['detect'],['detected']
Safety,"f overview of your contribution here in a few sentences.*; ; This PR greatly improves the robustness and convergence behavior of the flow solvers by implementing a more sophisticated controller for nonlinear iterations along with several other important modifications. The changes are the following:; - New under-relaxation strategy. Variables such as density and energy are only allowed to change by +/- 20% with each nonlinear iteration by applying an under-relaxation parameter to the updates at each node, which helps with difficult transients, especially at calculation startup. Also applied to turbulence model updates (though threshold is larger).; - CFL adaption via an exponential progression with under-relaxation approach, i.e., changes to CFL are coupled to the under-relaxation parameter (small under-relaxation parameter = decrease, and large = increase). CFL is now locally defined for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:996,avoid,avoid,996,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['avoid'],['avoid']
Safety,"fg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:1533,Abort,Aborted,1533,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['Abort'],['Aborted']
Safety,"for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regres",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2411,recover,recover,2411,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['recover'],['recover']
Safety,"hello,I meet a problem:meson test failed about su2@7.3.1 on centos8_aarch64 but sucesses on centos8_x86_64; ### Steps to reproduce the issue. ```console; aarch64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build'; [2/2] Linking target UnitTests/test_driver; 1/1 Catch2 test driver FAIL 0.04s exit status 1; >>> MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/meson-logs/testlog.txt; logs:; 1/1 Catch2 test driver FAIL 0.04s exit status 1; 07:06:51 MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver; ----------------------------------- output -----------------------------------. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 21 | 20 passed | 1 failed; assertions: 222 | 221 passed | 1 failed. x86_64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver OK 0.05s. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:628,Timeout,Timeout,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,1,['Timeout'],['Timeout']
Safety,"https://github.com/su2code/SU2/blob/f4116f45f80b7360169e3126e58cc17e24f9aaa6/SU2_PY/fsi_computation.py#L109. The base C++ code ~/git/su2/SU2_CFD/src/driver_structure.cpp has five arguments:; ```c++; new CFluidDriver(config_file_name, nZone, nDim, periodic, MPICommunicator); ```; However, the python script fsi_computations.py provides uses four arguments; ```python; FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], comm); ```. # Missing argument error; This gives the following error during execution. ; ```; File ""~/git/su2/bin/pysu2.py"", line 579, in __init__; this = _pysu2.new_CFluidDriver(*args); TypeError: new_CFluidDriver() takes exactly 5 arguments (4 given); ```; I was able to get rid off this error by adding proving the missing argument for periodic BCs. # Order of arguments did not cause any issues. It seems that ; ```python; cfd = pysu2.CFluidDriver(fsi_config['CFD_CONFIG_FILE_NAME'],; 1,; fsi_config['NDIM'],; False,; MPI.COMM_WORLD); ```; and; ```python; cfd = pysu2.CFluidDriver(fsi_config['CFD_CONFIG_FILE_NAME'],; 1,; False,; fsi_config['NDIM'],; MPI.COMM_WORLD); ```; are both valid calls and the simulation runs. I am not sure if this is safe!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642:1185,safe,safe,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/642,1,['safe'],['safe']
Safety,"ib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3061,safe,safe,3061,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['safe'],['safe']
Safety,"ile MPI Version error on Windows. I can build successfully by run ` py .\meson.py build` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1024,avoid,avoided,1024,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['avoid'],['avoided']
Safety,"ithub.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6770,timeout,timeout,6770,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['timeout'],['timeout']
Safety,"k, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:3191,abort,abort,3191,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['abort'],['abort']
Safety,"lf.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:2270,timeout,timeout,2270,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['timeout'],['timeout']
Safety,"loads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:1991,Detect,Detect,1991,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Detect'],['Detect']
Safety,"ne 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:1504,Timeout,TimeoutError,1504,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['Timeout'],['TimeoutError']
Safety,"om/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5222,timeout,timeout,5222,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['timeout'],['timeout']
Safety,"ould have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; Th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6124,recover,recover,6124,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['recover', 'safe']","['recover', 'safe']"
Safety,pack-src/spack-build'; [2/2] Linking target UnitTests/test_driver; 1/1 Catch2 test driver FAIL 0.04s exit status 1; >>> MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/meson-logs/testlog.txt; logs:; 1/1 Catch2 test driver FAIL 0.04s exit status 1; 07:06:51 MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver; ----------------------------------- output -----------------------------------. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 21 | 20 passed | 1 failed; assertions: 222 | 221 passed | 1 failed. x86_64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver OK 0.05s. Ok: 1; Expected Fail: 0; Fail: 0; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build/meson-logs/testlog.txt; ```; I want to know what's causing this difference. Does su2 not support aarch64 testing?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:2067,Timeout,Timeout,2067,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,1,['Timeout'],['Timeout']
Safety,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:3024,abort,aborted,3024,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['abort'],['aborted']
Safety,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1338,recover,recover,1338,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['recover'],['recover']
Safety,"primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6343,recover,recover,6343,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['recover'],['recover']
Safety,"ptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patter",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2207,detect,detected,2207,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['detect'],['detected']
Safety,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1936,recover,recovered,1936,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,2,['recover'],['recovered']
Safety,"t if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a gui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:2784,avoid,avoid,2784,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['avoid'],['avoid']
Safety,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:1999,avoid,avoid,1999,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['avoid'],['avoid']
Safety,"turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3140,detect,detected,3140,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['detect'],['detected']
Safety,"turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surfac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1080,detect,detect,1080,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['detect'],['detect']
Safety,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2153,redund,redundant,2153,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['redund'],['redundant']
Safety,"wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot for SST. The results are not quite as good as SA in general, but I expected that considering some limitations reported in the literature (ex a min y^+ ~ 0.01 and so on). Here is a comparison against experimental data by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed to the SST. 2. Airfoils. If only a part of the wall is rough, as is the case on airfoils with corrosion for ex, we can split the marker definition as follows:. MARKER_HEATFLUX= (wall1, hf1, wall2, hf2 ...); WALL_TYPE= SMOOTH,ROUGH,...; WALL_ROUGHNESS= 0.0, k1... In case there is even a single rough wall, the WALL_TYPE option must speci",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:2612,predict,prediction,2612,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['predict'],['prediction']
Safety,"xes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5169,avoid,avoiding,5169,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['avoid'],['avoiding']
Safety,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:1275,safe,safety,1275,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['safe'],['safety']
Security," #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertic",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:987,validat,validate,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['validat'],['validate']
Security," consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1749,Validat,Validation,1749,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['Validat'],['Validation']
Security," for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1064,validat,validated,1064,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['validat'],['validated']
Security," the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to preven",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1265,validat,validation,1265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['validat'],['validation']
Security," we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5712,access,accessing,5712,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['access'],['accessing']
Security," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2988,secur,security-and-quality,2988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security-and-quality']
Security,"# Patching CVE-2007-4559. Hi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html). If you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:37,secur,security,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,4,"['attack', 'sanitiz', 'secur']","['attack', 'sanitizing', 'secure', 'security']"
Security,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:211,access,accessed,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['access'],['accessed']
Security,"## Proposed Changes. CoDiPack update that fixes out-of-bounds accesses. Those lead to deadlocks in hybrid parallel discrete adjoint test cases. ## Related Work. work on hybrid parallel AD, e. g. #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2153:62,access,accesses,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/2153,1,['access'],['accesses']
Security,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:558,validat,validated,558,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['validat'],['validated']
Security,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:210,validat,validation,210,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['validat'],['validation']
Security,"## Proposed Changes. This pull request is two related changes:. 1. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. Some steps in the calculation were repeated twice. The main purpose of this pull request is to remedy the bug.; 2. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; . ## Related Work. This is a subset of the changes originally proposed in PR #552. The discussion and validation there still apply here. This pull request is not a new set of changes, but rather a smaller portion of PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577:668,validat,validation,668,https://su2code.github.io,https://github.com/su2code/SU2/pull/577,1,['validat'],['validation']
Security,"## Proposed Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:395,validat,validation,395,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,1,['validat'],['validation']
Security,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:194,access,accessed,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['access'],['accessed']
Security,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204:235,validat,validation,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204,1,['validat'],['validation']
Security,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:726,expose,exposed,726,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['expose'],['exposed']
Security,"## Proposed Changes; - Protect `AD::GetDerivative()` call trees by `AD::BeginUseAdjoints()`, `AD::EndUseAdjoints()`.; - `GetAdjointSolution_time_n()` and `GetAdjointSolution_time_n1()` use lock-free adjoints access now. ## Related Work; continues #2146; related to #1984. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:208,access,access,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['access'],['access']
Security,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:77,sanitiz,sanitizer,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,2,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:286,access,access,286,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,2,"['access', 'expose']","['access', 'expose']"
Security,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:666,validat,validation,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['validat'],['validation']
Security,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:235,access,accessed,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,1,['access'],['accessed']
Security,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1290:585,validat,validation,585,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290,1,['validat'],['validation']
Security,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:1172,access,access,1172,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,1,['access'],['access']
Security,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:332,validat,validation,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['validat'],['validation']
Security,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:302,validat,validation,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,['validat'],['validation']
Security,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:279,access,access,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,1,['access'],['access']
Security,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:635,access,accessed,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,1,['access'],['accessed']
Security,"## Proposed Changes; Small follow-on from #2039. Fixes two data races that did not affect the results but polluted the thread sanitizer findings (write-write for value that is not read and read-write for value that is overwritten with itself). ## Related Work; #2039. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2046:126,sanitiz,sanitizer,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/2046,1,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; Some folks are having issues on Windows: https://www.cfd-online.com/Forums/su2/227916-problem-opening-vtu-file-paraview.html; @talbring and I think it might be the classic ""unsigned long is 32bits on Windows"" problem, maybe this fixes it, I do not have access to a Windows machine, if someone could test this it would be great. ## Related Work; #980; Resolves #1060. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055:274,access,access,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055,1,['access'],['access']
Security,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:32,sanitiz,sanitizer,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; These additions will make it possible to let the discrete adjoint run for the heat solver. They do also include; - some bugfixes within the heat solver,; - a discrete adjoint heat iteration so that the solver could be run stand-alone in the future (e.g. for solids or coupled). As there is no general discrete adjoint driver yet, I wanted to avoid another specific one (e.g. 'CDiscAdjHeatDriver') as I could directly go for the generalized version. It is finished up to 90% and a pull request will be opened once we agreed on these changes. So for the test case protecting this functionality, the heat solver runs weakly coupled to an incompressible flow. Sensitivities have been validated. . ## Related Work; Pull requests for a general multizone adjoint driver will be opened hereafter. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619:701,validat,validated,701,https://su2code.github.io,https://github.com/su2code/SU2/pull/619,1,['validat'],['validated']
Security,"## Proposed Changes; This PR automates the address sanitizer analysis that lead to the fixes in #2212. I'll make the additions step by step, to see if things in the CI pipeline work as expected. ## Related Work; https://github.com/su2code/Docker-Builds/pull/24, #2212, #2068, #2213. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:51,sanitiz,sanitizer,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:413,expose,exposed,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['expose'],['exposed']
Security,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:997,validat,validate,997,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['validat'],['validate']
Security,"## Proposed Changes; This address the issue in #1916 to resolve the Intel compiler warnings generated by NEMO. Turns out I don't have access to an intel compiler, but -warnlevel=3 using GCC does not give any issues. @vdweide, @pcarruscag, @bigfooted could you make sure the issue is resolved?. ## Related Work; Issue #1916. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1918:134,access,access,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1918,1,['access'],['access']
Security,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:147,access,access,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['access'],['access']
Security,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:1261,access,accessible,1261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['access'],['accessible']
Security,"## Proposed Changes; To simplify the maintenance of hybrid parallel SU2, we want to run thread sanitizer tests as part of the CI pipeline. We use thread-sanitizer enabled containers for this. This is work in progress and there are things that need testing, so I want to take it step by step while observing the behaviour of the CI pipeline. ## Related Work; https://github.com/su2code/Docker-Builds/pull/17 and follow-on PRs, #1679. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:95,sanitiz,sanitizer,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,2,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132:476,Validat,Validation,476,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132,1,['Validat'],['Validation']
Security,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:26,access,accessing,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['access'],['accessing']
Security,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:69,access,access,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,1,['access'],['access']
Security,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:182,access,access,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,3,['access'],['access']
Security,"### Preamble. I am moving the discussion about SIMD that started in #716 here and adding hybrid parallelization.; The two topics go hand in hand since both (SPMD and SIMD) consist of processing multiple data (MD) elements simultaneous, either by a single program (SP) that is run by multiple threads (generally with shared view of memory), or by a single instruction (SI) run by a single core.; The reason SIMD came up in #716 is that, as I will demonstrate, vectorization needs to be supported by data structures. On the other hand SPMD needs to be supported by algorithms designed to avoid race conditions, two or more threads modifying the same memory location. Instead of continuing #716 I think it is better to let that become documentation for #753.; I did not add **without loss of readability** to the title because it is long as is, that requirement is present nonetheless.; I open these issues in the hope that people participate (I am not a fast writer so this is actually a lot of work) and so far great comments and insights have come from those with experience in these topics (kudos to @economon and @vdweide). But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...). My (ambitious) goal with this work is to lay down an architecture for performance, i.e. not just to improve the performance of a few key numerical schemes but to create mechanisms applicable to all existing and future ones. Moreover I want that to be possible with minimal changes to the way those bits of code are currently written.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789:1301,access,accessible,1301,https://su2code.github.io,https://github.com/su2code/SU2/issues/789,1,['access'],['accessible']
Security,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979:219,access,access,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/979,2,"['access', 'password']","['access', 'password']"
Security,"**Describe the bug**. Hi SU2 developers,. I will consider this as a possible bug until I hear the opinion of the SU2 community. As a validation test case for turbulence models, I am running the NASA Hump test case (https://turbmodels.larc.nasa.gov/nasahump_val.html). However, the results obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hum",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:133,validat,validation,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['validat'],['validation']
Security,"**Describe the bug**. The serial regression test `p1rad`, which runs SU2_CFD on [TestCases/radiation/p1model/configp1.cfg](https://github.com/su2code/SU2/blob/f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af/TestCases/radiation/p1model/configp1.cfg#L50), has a heap-buffer-overflow in [`CConfig::GetWall_Emissivity`](https://github.com/su2code/SU2/blob/f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af/Common/src/CConfig.cpp#L9614) according to Clang's address sanitizer. . According to my printf debugging, `nMarker_Emissivity` is `2` and `Wall_Emissivity` is `{""left"", ""right""}` (matching the cfg file), but `CRadP1Solver::BC_Marshak` calls `GetWall_Emissivity` with the marker string `""upper""`. . **Bug report checklist**; - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; Ubuntu 22.04 with Clang++ 16.0.6, MPI disabled, SU2 at current `develop` branch, commit f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2211:445,sanitiz,sanitizer,445,https://su2code.github.io,https://github.com/su2code/SU2/issues/2211,1,['sanitiz'],['sanitizer']
Security,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:424,firewall,firewall,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,1,['firewall'],['firewall']
Security,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:253,access,access,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,5,"['AUTHENTICAT', 'Authenticat', 'access']","['AUTHENTICATING', 'Authenticating', 'Authentication', 'access']"
Security,"**Describe the bug**; I faced some non determinism in #1892 which I traced back to spurious values of walll roughness.; I tried running UB sanitizer and valgrind, the latter finds one memory error when accessing the flatner, but theres nothing while it's built.; The ndflatner unit test also fails on my machine, both in release and debug builds. Given the complexity of that class, and it only being used in one place, I just wrote alternative code.; @maxaehle can you investigate the issue?. **Desktop (please complete the following information):**; - ubuntu 22 + gcc + mpich (standard packages)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893:139,sanitiz,sanitizer,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893,2,"['access', 'sanitiz']","['accessing', 'sanitizer']"
Security,"**Describe the bug**; If I start SU2_CFD with USE_INLET_PROFILE= YES but the inlet profile does not exist, then an example_profile.dat file will be written for you.; When I start in parallel with mpirun, it crashes for certain choices of nr of nodes. For me, it crashes when I choose n=4,6,7,9,10,12; I have no idea where to look for a solution... [EDIT] So this actually only happens for specific meshes, I could only reproduce it on my turbulent 90 degree pipe bend until now.; [EDIT] a mesh where this happens can be found here (90 degree pipe bend); https://github.com/bigfooted/su2cases/tree/master/validation/sudo_pipe_bend; If you set SPECIFIED_INLET_PROFILE=YES, then for me, it crashes with mpirun and e.g. n=4.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767:604,validat,validation,604,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767,1,['validat'],['validation']
Security,"**Describe the bug**; In CFVMFlowSolverBase<>::Friction_Forces, there is the following piece of code ([permalink](https://github.com/su2code/SU2/blob/641d2544d8958e9c74fbe9e22d9eb16cbc99167f/SU2_CFD/include/solvers/CFVMFlowSolverBase.inl#L2477)):; ```c++; /*--- Loop over the vertices to compute the forces ---*/; ; for (iVertex = 0; iVertex < geometry->nVertex[iMarker]; iVertex++) {; iPoint = geometry->vertex[iMarker][iVertex]->GetNode();; iPointNormal = geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor();; ...; }; ```; However, a normal neighbor exists only for vertices on the domain (see [`CMultiGridGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CMultiGridGeometry.cpp#L1159) and [`CPhysicalGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CPhysicalGeometry.cpp#L8470)), not for halo points. ; **Edit**: The link for `CPhysicalGeometry` was wrong. `CPhysicalGeometry` actually computes the normal neighbors for halo points, `CMultigridGeometry` doesn't. . `iPointNormal` is needed to retrieve `Coord_Normal`, which is needed to compute `WallDist`/`WallDistMod`, which are needed to compute `YPlus`. To fix the above problem, I would therefore suggest to compute `YPlus` only for domain points. Looking for locations where `YPlus` could be accessed (to see whether `YPlus` is needed on non-domain points), I found e.g. [`CTurbSSTSolver::SetTurbVars_WF`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494). However there again the normal neighbor is accessed without checking that we're on a domain point, so likely this should also be changed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430:1415,access,accessed,1415,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430,2,['access'],['accessed']
Security,**Describe the bug**; a primal and adjoint restart with multigrid will not produce the correct residuals for turbulence. **To Reproduce**; Use the restart validation tutorial for species transport. Switch off Species transport and put turbulence model to SST or SA to see different residuals for the turbulence quantities; [species tutorial](https://su2code.github.io/tutorials/Species_Transport/). **Desktop (please complete the following information):**; - OS: linux; - C++ compiler and version: gcc 5.3.0; - MPI implementation and version: OpenMPI 3.1.6; - SU2 Version: current develop,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1549:155,validat,validation,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549,1,['validat'],['validation']
Security,**Is your feature request related to a problem? Please describe.**. A reminder to add some more verification and validation for species transport; verification: ; - analytic solution of laminar scalar transport for 2D planar and axisymmetric cases available for some convection diffusion of 2 streams; validation:; - turbulent species transport (nonreacting turbulent fuel jet),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1789:113,validat,validation,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/1789,2,['validat'],['validation']
Security,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940:251,attack,attack,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/940,1,['attack'],['attack']
Security,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:656,Validat,Validation,656,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"**Is your feature request related to a problem? Please describe.**; Under high aerothermal loads heat fluxes over walls are an important design aspect of many components. In my specific case a wall temperature distribution is known from experiments. I would like to apply this spacial temperature distribution as boundary condition to one or more isothermal walls. In my case the heat flux is then used for validation purposes. **Describe the solution you'd like**; I would like to specify the temperature of an isothermal wall with respect to the x/y/z coordinate. I believe something similar is already possible with the structural load boundaries:; `MARKER_DISPLACEMENT = (surface, multiplier, magnitude [m], x component, y component, z component)`. For temperature this could possibly look like this:; `MARKER_ISOTHERMAL_PROFILE = (surface, temperature[0...N], x[0...N], y[0...N],z[0...N])`. In order to keep the config file cleaner a better solution may be to specify an external file, from which the locations and temperatures are read. This seems to be already possible for inlet boundaries:; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/config_template.cfg#L812-L816; However, I could not find any example actually using this functionality. If this is implemented, extending the functionality to also work with isothermal walls is probably the least intrusive modification. **Describe alternatives you've considered**; A possible, but cumbersome solution could be to split the respective walls into many markers and specify piecewise-constant wall temperatures for each marker.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553:407,validat,validation,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553,1,['validat'],['validation']
Security,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:31,sanitiz,sanitizer,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,3,['sanitiz'],"['sanitizer', 'sanitizers']"
Security,"-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2023,secur,security,2023,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"/558c3c39-c604-402a-87c7-f616b0e6c575); ![image](https://github.com/su2code/SU2/assets/50565314/0bc69766-595d-47f6-8136-1f50cbac07f6); ![image](https://github.com/su2code/SU2/assets/50565314/67a3e69f-ea4e-4f80-a01e-c179d86f989d); The **H** is the Heaviside function.; ![image](https://github.com/su2code/SU2/assets/50565314/cc5e7510-4ce5-4c04-a468-5af0211f2e6d). 2. Sarkar; In the Sarkar's CC, the pressure dilatation(![image](https://github.com/su2code/SU2/assets/50565314/7abcdd0e-c760-47b0-bc62-9ff6b918c28d)) is considered. The k transport equation is :; ![image](https://github.com/su2code/SU2/assets/50565314/c4d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:2121,Validat,Validation,2121,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['Validat'],['Validation']
Security,"0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9284,secur,security-vulnerabilities,9284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:3135,expose,expose,3135,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['expose'],['expose']
Security,"1; continue. if not any(self.FSI_marker in key for key in self.markers.keys()):; raise Exception(""The FSI marker was not found in the available sets""). self.markers[self.FSI_marker].sort(); "". Revisied Version:; ""; pos = line.find(""SET1""); if pos == 30:; line = line.strip(""\r\n""); line = line[37:]; line = line.split(); markerTag = line.pop(0); self.markers[markerTag] = []. # First 7 ID which in the same line with SET1; for _ in range(7):; ID = int(line.pop(0)); print(""ID: "", ID ); for iPoint in range(self.nPoint):; if self.node[iPoint].GetID() == ID:; break; if (iPoint == (self.nPoint - 1)) and (self.node[iPoint].GetID() != ID):; raise Exception(; ""Point {} in the set {} was not found in the mesh"".format(ID, markerTag); ); self.markers[markerTag].append(iPoint). # after SET1 line start to read a new line; while True:; line = meshfile.readline().strip(""\r\n""); if not line:; continue; line = line[30:].strip().split(); # when the SET1 ends, there is a SPC card in .f06 file. this is a break condition ; if ""SPC1"" in line:; break; if ""SPC"" in line:; break; if not line:; continue; if line[0] == ""+"":; line.pop(0); if line[-1]==""+"":; line.pop(-1); while line:; ID = int(line.pop(0)); print(""ID: "", ID ); for iPoint in range(self.nPoint):; if self.node[iPoint].GetID() == ID:; break; if (iPoint == (self.nPoint - 1)) and (self.node[iPoint].GetID() != ID):; raise Exception(; ""Point {} in the set {} was not found in the mesh"".format(ID, markerTag); ); self.markers[markerTag].append(iPoint); else:; continue. self.nMarker += 1; continue; #there is warning part for ""FSI marker check"" in here, i just did not write but that is not important for now; self.markers[self.FSI_marker].sort(); "". I am trying to validate this FSI module on a 3D wing. I hope this works in other cases. I can take help for FSI code structure. I have some problem with validation, wings suction and pressure side collapses and analysis diverges. I dont know that the problem on the structural analysis or the FSI code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2313:5788,validat,validate,5788,https://su2code.github.io,https://github.com/su2code/SU2/issues/2313,2,['validat'],"['validate', 'validation']"
Security,"9236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2547,secur,security-vulnerabilities,2547,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:956,secur,security,956,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li><a href=""https://github.com/timfel""><code>@​timfel</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a></li>; <li><a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:3924,validat,validation,3924,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['validat'],['validation']
Security,"><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5008,secur,security-vulnerabilities,5008,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,Access solution and primitives **at markers** via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1949:0,Access,Access,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1949,1,['Access'],['Access']
Security,Access solution and primitives via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:0,Access,Access,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['Access'],['Access']
Security,Add angle of attack as a design variable (or design in fixed-lift mode),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/109:13,attack,attack,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/109,1,['attack'],['attack']
Security,Address sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:8,sanitiz,sanitizer,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['sanitiz'],['sanitizer']
Security,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342:205,access,access,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342,1,['access'],['access']
Security,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:647,access,access-to-actions-from-githubcom,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['access'],"['access-to-actions-from-githubcom', 'access-to-githubcom-actions-using-github-connect']"
Security,Changing angle of attack from python,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2027:18,attack,attack,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/2027,1,['attack'],['attack']
Security,Compiling SU2 on a linux computer cluster and it asks for root access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:63,access,access,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,1,['access'],['access']
Security,Expose all history outputs via the python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1986:0,Expose,Expose,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1986,1,['Expose'],['Expose']
Security,"Expose design variable bounds, max optimizer iterations, and optimization tolerance to the user in shape_optimization.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107:0,Expose,Expose,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/107,1,['Expose'],['Expose']
Security,Expose mesh deformation (SU2_DEF) and AD gradient projection (SU2_DOT_AD) to the pysu2 Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:0,Expose,Expose,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['Expose'],['Expose']
Security,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:495,attack,attack,495,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['attack'],['attack']
Security,Fix bugs detected by the address sanitizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:33,sanitiz,sanitizer,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['sanitiz'],['sanitizer']
Security,Further Explicit Adjoints Locking and Lock-Free Adjoints Access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:57,Access,Access,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['Access'],['Access']
Security,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:770,access,accessing,770,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['access'],['accessing']
Security,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:159,access,access,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,1,['access'],['access']
Security,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:854,validat,validation,854,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['validat'],['validation']
Security,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523:45,validat,validating,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/523,1,['validat'],['validating']
Security,"Hi `su2code/SU2`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request —",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:276,secur,security,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:139,access,access,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['access'],['access']
Security,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:568,Secur,Security,568,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['Secur'],['Security']
Security,"Hi, all. This PR is resuming the #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid blac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:682,validat,validation,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['validat'],['validation']
Security,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:119,access,access,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,1,['access'],['access']
Security,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:79,access,access,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,1,['access'],['access']
Security,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:69,access,access,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['access'],['access']
Security,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:398,validat,validation,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['validat'],['validation']
Security,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:430,access,accessed,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['access'],['accessed']
Security,"I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:2683,attack,attack,2683,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['attack'],['attack']
Security,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:19,validat,validated,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['validat'],['validated']
Security,"I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their document",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:356,validat,validation,356,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['validat'],['validation']
Security,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:433,attack,attack,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['attack'],['attack']
Security,"I've tried to follow some convention for naming the functions. We were using ""SetMarkerCustomXX"" for CHT-type boundary conditions, so I extended that to other applications.; ""Custom"" means that the values set this way act as boundary conditions. Whereas the other accessors allow manipulating the state (e.g. for initialization) but do not change the final solution.; I also tried to disambiguate the terms for Flow loads of the flow solver vs FEA solver and mesh deformation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:264,access,accessors,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['access'],['accessors']
Security,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204:324,access,accessed,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/204,1,['access'],['accessed']
Security,Illegal access to normal neighbor of halo vertex,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430:8,access,access,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430,1,['access'],['access']
Security,"In keeping with our open-source philosophy, the SU2 webpage should be open and modifiable by all members of the community, just like the rest of the code. This will make it much easier to manage and improve in the long run with distributed effort. As a first step to accomplish this, we are taking advantage of GitHub Pages (https://pages.github.com) in order to host our current SU2 page. A new repository has been created within the SU2 GitHub organization here:. https://github.com/su2code/su2code.github.io. and it contains a copy of the current webpage located at http://su2.stanford.edu with all necessary modifications to links, data, etc. so that it functions correctly and independently. The files on the master branch of that new repository are automatically hosted for us by GitHub here (for free):. https://su2code.github.io. All developers now have access to this repository, and in the future, we can all collaborate together to keep it updated and modernize it. An important note is that GitHub allows for custom domain names to be applied to this website, allowing us to use a "".org"" domain name instead of https://su2code.github.io in the future, once available (https://help.github.com/articles/using-a-custom-domain-with-github-pages/). As for next steps, I would like to use this PR to invite discussion about this. If we are in agreement to approve this PR, then we will add an automatic redirect from http://su2.stanford.edu to https://su2code.github.io and focus solely on the version of the website in the new repo going forward. Please do share any comments or thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/436:862,access,access,862,https://su2code.github.io,https://github.com/su2code/SU2/pull/436,1,['access'],['access']
Security,Installing SU2 on a machine without internet access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:45,access,access,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,2,['access'],['access']
Security,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183:1039,access,accessed,1039,https://su2code.github.io,https://github.com/su2code/SU2/issues/183,1,['access'],['accessed']
Security,Meson build SU2 requires root password on Linux,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979:30,password,password,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/979,1,['password'],['password']
Security,"ROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3, ; % Speed = ft/s, Equiv. Area = ft^2 ); SYSTEM_MEASUREMENTS= US. % -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.7; %; % Angle of attack (degrees, only for compressible flows); AOA= 3.6; %; % Side-slip angle (degrees, only for compressible flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream values); REYNOLDS_NUMBER= 260025.6363; %REYNOLDS_NUMBER= 4260000; %; % Reynolds length (1 in by default); REYNOLDS_LENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:2285,attack,attack,2285,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['attack'],['attack']
Security,"Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much. - Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions. https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs. [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/). Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661:87,attack,attackers,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661,3,"['attack', 'secur']","['attackers', 'secure', 'securitylab']"
Security,"SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. In our use case we need to link the library so that we can efficiently multithread workflows, keep data in memory, and make analysis as efficient as possible. I realize this is a significant request, but a build process with CMake could be so much simpler and would make your codebase much more accessible to the C++ community. Thanks so much for all your excellent work!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711:574,access,accessible,574,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711,1,['access'],['accessible']
Security,"The Aachen turbine test case added in #2158 needs another look, for two reasons. 1. The test case is subject to a yet unfixed memory access violation, as detected in the address sanitizer tests in #2246. We explored a fix in c97610b02bc1281eb766847e7ef5ed7ac451dfb9, that remedies the address sanitzer detections but also changes the test results notably. It is unclear yet whether this is the correct way to fix it.; 2. @bigfooted observed non-deterministic behaviour in #2260. This might or might not be related to the memory access violation. As soon as the memory access violation is fixed, address sanitizer testing can be re-enabled for the Aachen turbine test case (it was disabled in 0f3fc3ec900f1518c0c3ed26c3e971ae27fb974c). @alecappiello We can continue the discussion from #2246 here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276:133,access,access,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276,5,"['access', 'sanitiz']","['access', 'sanitizer']"
Security,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/926:661,access,accessing,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/926,1,['access'],['accessing']
Security,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:730,access,accessing,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['access'],['accessing']
Security,"This pull request fixes a segfault issue in the continuous adjoint solver initialization. Since iMarker is recycled in SetForceProj_Vector, it could be set as nMarker if no matching marker is found for a given Marker_Monitoring, which leads to an out-of-bounds access. A check on the value of iMarker has been moved from the first for loop (where it is unnecessary), to the second for loop where iMarker is recycled and the segfault occurs.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/482:261,access,access,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/482,1,['access'],['access']
Security,This should help with keeping the GitHub actions updated on new releases. This will also help with keeping it secure. Dependabot helps in keeping the supply chain secure https://docs.github.com/en/code-security/dependabot. GitHub actions up to date https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot. https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool; Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:110,secur,secure,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,4,['secur'],"['secure', 'security']"
Security,Thread Sanitizer CI Crashes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:7,Sanitiz,Sanitizer,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['Sanitiz'],['Sanitizer']
Security,Thread sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:7,sanitiz,sanitizer,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,1,['sanitiz'],['sanitizer']
Security,Validation Suite for SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:0,Validat,Validation,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['Validat'],['Validation']
Security,"action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5823,secur,security-vulnerabilities,5823,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,4,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"al value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1341,validat,validation,1341,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['validat'],['validation']
Security,"ariable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6874,access,accessors,6874,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['accessors']
Security,"ase 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10814,secur,security-vulnerabilities,10814,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,4,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ble* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:3635,access,access,3635,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['access']
Security,"c3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5098,secur,security-vulnerabilities,5098,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6284,secur,security-vulnerabilities,6284,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6558,audit,audit,6558,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['audit'],['audit']
Security,"e a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new Vari",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2123,access,access,2123,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['access']
Security,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2322,validat,validated,2322,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['validat'],['validated']
Security,"ef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15530,secur,security-vulnerabilities,15530,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ef=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7647,secur,security-vulnerabilities,7647,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:2277,Validat,Validation,2277,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['Validat'],['Validation']
Security,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4524,access,access,4524,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['access'],['access']
Security,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3055,secur,security,3055,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"he wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1551,access,accessible,1551,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['access'],['accessible']
Security,"his PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1124,access,accessed,1124,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['access'],['accessed']
Security,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:258,integrity,integrity,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['integrity'],['integrity']
Security,"it/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10057,secur,security-vulnerabilities,10057,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ly contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4514,access,accessing,4514,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['accessing']
Security,"mage](https://github.com/su2code/SU2/assets/50565314/558c3c39-c604-402a-87c7-f616b0e6c575); ![image](https://github.com/su2code/SU2/assets/50565314/0bc69766-595d-47f6-8136-1f50cbac07f6); ![image](https://github.com/su2code/SU2/assets/50565314/67a3e69f-ea4e-4f80-a01e-c179d86f989d); The **H** is the Heaviside function.; ![image](https://github.com/su2code/SU2/assets/50565314/cc5e7510-4ce5-4c04-a468-5af0211f2e6d). 2. Sarkar; In the Sarkar's CC, the pressure dilatation(![image](https://github.com/su2code/SU2/assets/50565314/7abcdd0e-c760-47b0-bc62-9ff6b918c28d)) is considered. The k transport equation is :; ![image](https://github.com/su2code/SU2/assets/50565314/c4d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:2104,Validat,Validation,2104,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['Validat'],['Validation']
Security,"n the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete description of the assumptions that have led to the issue and the proposed solution. Please let me know if there are mistakes, or if further detail can be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:3293,access,accessed,3293,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['access'],['accessed']
Security,"n variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:1588,expose,exposes,1588,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['expose'],['exposes']
Security,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1926,validat,validation,1926,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['validat'],['validation']
Security,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7644,access,access,7644,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['access', 'hash']","['access', 'hash']"
Security,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:2023,hash,hash,2023,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,2,['hash'],['hash']
Security,"o now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution va",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:2523,validat,validated,2523,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['validat'],['validated']
Security,"ode ; ```; TablePrinter MGTable(&std::cout);; ; MGTable.AddColumn(""MG Level"", 10);; MGTable.AddColumn(""Presmooth"", 10);; MGTable.AddColumn(""PostSmooth"", 10);; MGTable.AddColumn(""CorrectSmooth"", 10);; MGTable.set_flush_right();; MGTable.PrintHeader();; for (unsigned short iLevel = 0; iLevel < nMGLevels+1; iLevel++) {; MGTable << iLevel << MG_PreSmooth[iLevel] << MG_PostSmooth[iLevel] << MG_CorrecSmooth[iLevel];; }; MGTable.PrintFooter();. ```; An example of the current preprocessing output in the feature_output branch can be found below. Especially the information for the free-stream and non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-l",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:1640,attack,attack,1640,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['attack'],['attack']
Security,"ode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:1448,access,access,1448,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['access'],['access']
Security,"onomon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotoo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1124,validat,validation,1124,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['validat'],['validation']
Security,"ons/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c2f3""><code>5d5d22a</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/515"">#515</a> from actions/eggyhead/update-artifact-v2.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/f1e993d9663a03508e7fc0370c744c4b963f0044""><code>f1e993d</code></a> update artifact license</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4881bfd3f27855c63733d8cfff17721cc0ad611f""><code>4881bfd</code></a> updating dist:</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/a30777e2653648a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:3360,checksum,checksum,3360,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['checksum'],['checksum']
Security,"ouble* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower resp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:3730,access,access,3730,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['access']
Security,"oved most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/src/solvers/../../include/solvers/CFVMFlowSolverBase.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/CIncEulerSolver.hpp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134:1108,secur,security,1108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134,1,['secur'],['security']
Security,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6515,validat,validation,6515,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['validat'],['validation']
Security,"put should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1720,validat,validation,1720,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['validat'],['validation']
Security,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3628,secur,security,3628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"sted it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2210,Secur,Security,2210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['Secur'],['Security']
Security,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1539,secur,security,1539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"t.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_PRESSURE= 101325.0; %; % Free-stream temperature (288.15 K by default); FREESTREAM_TEMPERATURE= 288.15. % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation; REF_ORIGIN_MOMENT_X = 0.25; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; %; % Reference length for pitching, rolling, and yawing non-dimensional moment; REF_LENGTH= 1.0; %; % Reference area for force coefficients (0 implies automatic calculation); REF_AREA= 14.098904. % ----------------------- DYNAMIC MESH DEFINITION -----------------------------%; %; % Type of dynamic mesh (NONE, RIGID_MOTION, DEFORMING, ROTATING_FRAME,; % MOVING_WALL, AEROELASTIC, EXTERNAL); GRID_MOVEMENT= ROTATING_FRAME; %; % Motion mach number (non-dimensional). Used for intitializing a viscous flow; % with the Reynol",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:3479,attack,attack,3479,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['attack'],['attack']
Security,"terature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1421,Validat,Validation,1421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['Validat'],['Validation']
Security,"the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:1390,access,access,1390,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['access'],['access']
Security,"the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1827,attack,attack,1827,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['attack'],['attack']
Security,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1904,validat,validation,1904,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,2,['validat'],['validation']
Security,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:1596,access,access,1596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['access'],['access']
Security,"to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The propos",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:2345,expose,exposed,2345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['expose'],['exposed']
Security,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2318,secur,security,2318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4379,access,access,4379,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['access'],['access']
Security,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2563,Expose,Expose,2563,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['Expose'],['Expose']
Testability," (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.063 0.0035 0.5; 4 0 0 0.08 0.0057 -0.5; 4 0 1 0.08 0.0005 0.5; 4 1 0 0.08 0.0087 -0.5; 4 1 1 0.08 0.0035 0.5; FFD_SURFACE_POINTS= 2822; ...; ```. The deformation was then tested by running SU2_DEF with the two leftmost FFD control points being fixed:. ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); DV_KIND = FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); %%%%%%%%%%%%%% FFD PARAMETERS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_TOLERANCE = 1E-10; FFD_ITERATIONS = 20; FFD_CONTINUITY=USER_INPUT; % DV_PARAM = ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); DV_PARAM = \; (BOX, 2, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 2, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 1, 0, 0.0, 1.0, 0.0); % NOTE: left-most 2 points omitted, to make them fixed; % Value of the shape deformation; % first row: lower row y-direction; % second row: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:2170,test,tested,2170,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['test'],['tested']
Testability," * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:3006,Test,Tested,3006,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['Test'],['Tested']
Testability," 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of contr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3402,test,testcase,3402,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['test'],['testcase']
Testability," Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-relate well",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:1175,test,test,1175,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,2,"['Test', 'test']","['Test', 'test']"
Testability," I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:1292,Test,Test,1292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,1,['Test'],['Test']
Testability," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:4153,test,test,4153,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['test'],['test']
Testability," Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./U",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1822,test,test,1822,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,3,['test'],"['test', 'tests']"
Testability," a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:1398,test,test,1398,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,2,['test'],['test']
Testability," aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:2364,test,test,2364,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['test'],['test']
Testability," for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1114,test,testcases,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['test'],['testcases']
Testability," from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), this is very useful for non linear elasticity.; The fill-in for the ILU is set via PASTIX_FILL_LEVEL, I did not reuse the option we have again to keep CSysMatrix from allocating any more than it needs to.; By default the solvers run silently, but more verbosity can be set via PASTIX_VERBOSITY_LEVEL (0 : silent, 1 : only during major operations, 2 : 1 + on every solve). ## Compilation; _TODO_; This needs linking with another library (Scotch) and with BLAS, I will explain this in detail.; Question: For v7 are we moving exclusively to meson?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:2855,test,test,2855,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['test'],['test']
Testability," just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2618,test,tests,2618,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:2013,test,test,2013,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,1,['test'],['test']
Testability," more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:3202,test,tests,3202,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:2980,test,test,2980,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['test'],['test']
Testability," periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed with SU2_MSH for the previous periodic BC implementation. Resolves #550 ; Resolves #431 ; Resolves #416 ; Resolves #252 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:3080,test,test,3080,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['test'],['test']
Testability," points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1958,test,tests,1958,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['test'],['tests']
Testability," require almost no changes to the solver classes when switching between different solutions by using polymorphism (other than maybe where they get instantiated).; * applicable for any of the following: imposing initial conditions, analytic solutions, or manufactured solutions. There is also now a user-defined solution class that folks can use to prescribe initial conditions as a function of space for any type of calculation. It should be easy to add new solutions to the library by creating new child classes. We are placing a few cases in the regressions, but we will also add full cases with analysis to the V&V repo. It will also be discussed in a presentation at the developers meeting. You will find a few other small bug fixes in the PR as well. As an example, here are some (particularly nice) sample observed order of accuracy results for the compressible FV solver with a laminar N-S MMS (to be fair, not all look this clean):. ![accuracy_rms_rho](https://user-images.githubusercontent.com/4896083/56620511-fc80fb80-65dd-11e9-942f-b7add7edeae8.png); ![slope_rms_rho](https://user-images.githubusercontent.com/4896083/56620512-fd199200-65dd-11e9-97db-537f6bd00114.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Cases to be added as part of the V&V repo discussed in #581 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672:2443,test,test,2443,https://su2code.github.io,https://github.com/su2code/SU2/pull/672,1,['test'],['test']
Testability," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:5382,test,test,5382,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['test'],['test']
Testability," shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:1646,test,tests,1646,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,2,['test'],"['test', 'tests']"
Testability," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:4153,test,test,4153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['test'],['test']
Testability," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2954,test,tests,2954,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,4,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability," then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2464,Test,Tests,2464,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['Test'],['Tests']
Testability," to destabilize after some iterations due to the high speed gradient on the outlet face. To get into more details, there is a vortex forming ring forming near of the outlet creating a inflow at the center. The BC seems to build on this inflow up to a point where the flow destabilizes the solution and diverges or pushes the flow to make a ring around the propeller. *Case setup and context*; To put some context the current case tries to simulate the flow-field generated by a blade/propeller in a hover state in order to compute the thrust. The blade is surrounded by a cylinder. The markers for each surfaces are:; -""inlet"" for the top of the cylinder; -""farfield"" for the sides of the cylinder; -""outlet"" for the bottom of the cylinder. The blade has been divided into 4 surfaces which have the following self explanatory marker names:; - ""propellerUpperSurface""; - ""propellerLowerSurface""; - ""propellerRightTip""; - ""propellerLeftTip"". Many combinations of the possible boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:1455,test,tested,1455,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['tested']
Testability," to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS solver - AUSM scheme). ![image](https://user-images.githubusercontent.com/29612207/105254215-f1734a80-5b78-11eb-939f-46a34f558faf.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168:1850,test,test,1850,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168,1,['test'],['test']
Testability,""" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https://user-images.githubusercontent.com/31306376/53201756-19707100-3625-11e9-9cb6-8a62fcd6787e.JPG). 2. Incompressible half cylinder in channel, navier-stokes, no turb-model, velocity inlet pressure outlet. You see zebra shaded pressure contour lines:; ![p_incomp_2d](https://user-images.githubusercontent.com/31306376/53201787-2e4d0480-3625-11e9-8537-f1ca5ef39f9d.JPG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:1457,test,testing,1457,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['test'],['testing']
Testability,""" for the bottom of the cylinder. The blade has been divided into 4 surfaces which have the following self explanatory marker names:; - ""propellerUpperSurface""; - ""propellerLowerSurface""; - ""propellerRightTip""; - ""propellerLeftTip"". Many combinations of the possible boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVE",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2185,test,tested,2185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['tested']
Testability,"""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20</a></li>; </ul>; <h2>v3.6.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1377"">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/579"">Add option to fetch tags even if fetch-depth &gt; 0</a></li>; </ul>; <h2>v3.5.3</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:6504,test,test,6504,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['test'],['test']
Testability,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:718,test,tests,718,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['test'],['tests']
Testability,"## Disclaimer; This is my first ever contribution to any GitHub project. Please give feedback on what I can Improve if I haven't done something that is expected of me. ## Proposed Changes; Added Velocity output, since I am interested in that and adding it only in the config just gets ignored and no output happens; . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2077:652,test,test,652,https://su2code.github.io,https://github.com/su2code/SU2/pull/2077,1,['test'],['test']
Testability,"## Justification; This is just a minor bug fix for an inconsistency introduced in the recently merged PR #760 by the changes introduced by #756. It shouldn't affect anybody's work as these method have not (yet) been made the default. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/785:544,test,test,544,https://su2code.github.io,https://github.com/su2code/SU2/pull/785,1,['test'],['test']
Testability,"## Proposed Changes & related work; See issue #1928:. The filename of the Paraview multiblock is set to the case name / config filename. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. . This PR aligns the filename handling of the Paraview multiblock output with the other volume outputs, besides calling the `config->GetUnsteady_FileName` function instead of the `config->GetFilename` function which is used for the other volume outputs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1930:1188,test,test,1188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1930,1,['test'],['test']
Testability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:471,test,test,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes. - Added the missing config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]) to CEulerSolver::GetPower_Properties; - Added a new option,BC_EVAL_FREQ for setting the evaluation frequency for the Actuator Disk and Engine Markers, in order to control the stability of the marker. ## Related Work; Fix for issue #2274 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278:1022,test,test,1022,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278,1,['test'],['test']
Testability,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1391:692,test,test,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391,1,['test'],['test']
Testability,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:931,test,test,931,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['test'],['test']
Testability,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:1030,test,test,1030,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['test'],['test']
Testability,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1170:1043,test,test,1043,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170,1,['test'],['test']
Testability,"## Proposed Changes. . ## Related Work. related to Tutorial for composition-dependent model #113 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:656,test,test,656,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,1,['test'],['test']
Testability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:1075,test,test,1075,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['test'],['test']
Testability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:1080,test,test,1080,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['test'],['test']
Testability,"## Proposed Changes. Add `workflow_call` event to `regression.yml` Github Actions workflow. This way it is possible to [re-use](https://docs.github.com/en/actions/using-workflows/reusing-workflows) it from another workflow. Add a new workflow - `scheduled-arm64.yml`. It is a scheduled workflow that just executes `regressions.yml` on a self-hosted runner. ## Related Work. https://github.com/su2code/Docker-Builds/pull/1 - A PR that updates the build and test Docker images to Ubuntu 20.04 so that they could be used on both AMD64 and ARM64. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:456,test,test,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,2,['test'],['test']
Testability,"## Proposed Changes. As promised in #806 , this adds caching to the regression test workflow. This potentially should speed up the compilation. I am not quite sure whether it works as I think it does, but lets see. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/810:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/810,2,['test'],['test']
Testability,"## Proposed Changes. Changes the loading of zlib and szip libraries from static (.a) to dynamic (.so).; Suggested by @aa-g at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. ## Related Work. None. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:569,test,test,569,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['test'],['test']
Testability,"## Proposed Changes. CoDiPack update that fixes out-of-bounds accesses. Those lead to deadlocks in hybrid parallel discrete adjoint test cases. ## Related Work. work on hybrid parallel AD, e. g. #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2153:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/2153,2,['test'],['test']
Testability,"## Proposed Changes. Continuation of previous pull request https://github.com/su2code/SU2/pull/2281. [CHT + flamelet was only working if there was an additional isothermal wall present.] . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2283:877,test,test,877,https://su2code.github.io,https://github.com/su2code/SU2/pull/2283,1,['test'],['test']
Testability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:1270,test,test,1270,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,1,['test'],['test']
Testability,"## Proposed Changes. Even though the website has a style guide and the repo has a `.clang-format` file it has not strictly applied to pull requests. There is no style-checking workflow. As different users use different environment sometimes pull request contains unrelated style changes which makes the PR unreadable. This PR proposes to use [pre-commit-hooks ](https://pre-commit.com/) which are easy to use and enforce the style and adds a workflow check for formatting. There is no formatted/style proposed for python files. This PR additionally proposes a[ black](https://pypi.org/project/black/) based python formatting that ensures the python files are consistent maximum line length is set to 120 to increase readability. Moreover, pre-commit has additional hooks for the style of files. ; The following ones are proposed: ; `trailing-whitespace - trims trailing whitespace.` -> Especially useful for config files.; `mixed-line-ending - replaces or checks mixed line ending.`; `end-of-file-fixer - ensures that a file is either empty or ends with one newline.`. the pre-commit hooks can be easily installed via pip `pip install pre-commit`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948:1705,test,test,1705,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948,1,['test'],['test']
Testability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1663:79,test,tests,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1663,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. . ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1662:79,test,tests,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1662,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes. Fixing the CONSTANT_SCHMIDT diffusivity model and removing the Constant_SchimdtRANS class because it is not needed. Additionally, the class CUnityLewisDiffusivity has been modified to CConstantLewisDiffusivity in order to allow users to use constant Lewis number for each species but different to one, which is the assumption of Unity_Lewis. ; The option UNITY_LEWIS is still available in order to allow users to use that option. New option, CONSTANT_LEWIS, is added for the purpose aforementioned.; I can add a test case for the additional option if it is needed. ## Related Work; This pull request is related to #1762. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1787:533,test,test,533,https://su2code.github.io,https://github.com/su2code/SU2/pull/1787,2,['test'],['test']
Testability,"## Proposed Changes. Follow up of #1987 . Can be merged after, #1986 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988:628,test,test,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988,1,['test'],['test']
Testability,"## Proposed Changes. For 2D problems, the calculation for the magnitude of the rate-of-strain tensor is missing a term. When summing over the diagonal components of the deviatoric rate-of-strain tensor, the code loops over `nDim` diagonal components. In 2D, that means it only adds the first two diagonal components. This creates problems, because the third component is *not* zero, even for 2D flow. While third component of the rate-of-strain tensor in 2D is zero (i.e. S_33 = 0), the deviatoric rate-of-strain tensor has a nonzero third diagonal component. So in 2D, the third diagonal component must be explicitly added. This should only make significant impacts on problems where the divergence of velocity is non-negligible when compared to the diagonal components of the rate-of-strain tensor (i.e. for higher Mach cases). ## Related Work; None that I know of. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670:1178,test,test,1178,https://su2code.github.io,https://github.com/su2code/SU2/pull/670,1,['test'],['test']
Testability,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,3,['test'],['test']
Testability,"## Proposed Changes. I have refactored some of the viscous residual calculation. This should not change any of the underlying numerics. + The stress tensor due to molecular viscosity and turbulence is now separated out from the residual calculation. This removes the implicit assumption that eddy-viscosity models are used. Now other models, such as explicit algebraic stress models, can be added.; + The ""heat flux vector"" was also separated out from the residual calculation.; + The Jacobian calculation for `CAvgGrad_Flow` has been rewritten so as to be more readable.; + The three main viscous numerics classes (`CAvgGrad_Flow`, `CGeneralAvgGrad_Flow`, and `CAvgGradInc_Flow`) are now all children of a base class, `CAvgGrad_Base`.; + Instead of two sets of classes for the viscous residual, normal and ""corrected"", I made a boolean switch in the constructor. This eliminates the duplication between normal and ""corrected"" viscous numerics. There's definitely some more work that could be done to generalize the base class and optimize the speed, but I'm content with the code for now. ## Related Work. This piggybacks off of PR #612, though the two PRs are separate and distinct. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:1495,test,test,1495,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['test'],['test']
Testability,"## Proposed Changes. I used the OptimalPropeller function for another project a saw a lot of code that could be cleanup in order to be a bit more pythonic and easy to read.; ; ## Related Work; - no. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1846:756,test,test,756,https://su2code.github.io,https://github.com/su2code/SU2/pull/1846,1,['test'],['test']
Testability,"## Proposed Changes. In line with what we presented in the hackathon, this PR comes to be the first stage of a major reformatting that we are planning for the Driver structure. The goal is to converge to a structure that is more constant in time and that easily accommodates multi-physics via config file definition, instead on a *case by case* new CDriver class. The goal of this PR is not to be merged immediately, but rather to initiate discussion on the topic. I have created a project in; https://github.com/su2code/SU2/projects/8; where the stages of this process will be done. . ## Related Work. I run a presentation together with @talbring on input/output reformatting during the hackathon that took place at the annual SU2 Developers Meeting. The relevant slides for this PR are shared:. [ReformattingDriver.pdf](https://github.com/su2code/SU2/files/2405682/ReformattingDriver.pdf). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585:1442,test,test,1442,https://su2code.github.io,https://github.com/su2code/SU2/pull/585,1,['test'],['test']
Testability,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1200:716,test,test,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200,1,['test'],['test']
Testability,"## Proposed Changes. In the last developer meeting, there were some mentions of changing the meson build process for some of the executables. . The idea is to use the static libraries su2_cfd_lib and su2_cfd_lib_ad for linking when building SU2_DEF, SU2_DOT, SU2_SOL. This way it is no longer necessary to extract the needed sources for building the executables by hand in the meson.build files of each subdirectory. The linking process should ensure that only the necessary sources are linked and the size of the executables does not change too much. Please feel free to comment on this pull request, whether you think it is a good change to the build process? . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1470:999,test,test,999,https://su2code.github.io,https://github.com/su2code/SU2/pull/1470,1,['test'],['test']
Testability,"## Proposed Changes. In this pull request, we aim to add the option of turbulent intensity and ratio turbulent to laminar viscosity per inlet for the SST model as follows: . MARKER_INLET_TURBULENT= (Inlet_1, TurbIntensity_1, ViscRatio_1, Inlet_2, TurbIntensity_2, ViscRatio_2,......). In the case that the inlet markers are not provided, we aim to keep the current SU2 implementation. ## Related Work. This pull request is related to the previous pull request #1796. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1843:1024,test,test,1024,https://su2code.github.io,https://github.com/su2code/SU2/pull/1843,1,['test'],['test']
Testability,"## Proposed Changes. It would be good to extend the CFL_ADAPT option to include species transport for compressible flows. I can add a test case if it is needed. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:134,test,test,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,2,['test'],['test']
Testability,"## Proposed Changes. Move `radiation/p1adjoint/of_grad_cd.csv.ref` from https://github.com/su2code/TestCases.git to `TestCases/` folder. Discussion: https://su2devteam.slack.com/archives/C2A1JLGDR/p1654254077647149. ## Related Work. https://github.com/su2code/TestCases/pull/102. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1668:99,Test,TestCases,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1668,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:710,test,test,710,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,1,['test'],['test']
Testability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. Some other info was also not communicated like column names and column values. This fixes the issue. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999:1289,test,test,1289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999,1,['test'],['test']
Testability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. This fixes the issue. . [At the moment the code does not crash anymore but still only one profile is being written]. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1997:1303,test,test,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/1997,1,['test'],['test']
Testability,"## Proposed Changes. Small cleaning of CFluidScalar Constructor. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2357:756,test,test,756,https://su2code.github.io,https://github.com/su2code/SU2/pull/2357,1,['test'],['test']
Testability,"## Proposed Changes. Some method names make no sense like `GetNodeDomain` the user/coder has to look explanation and it is also not clear `Get the halo flag of a mesh node.` give no information and also provides no information, whether true indicates halo node or domain node. Python wrapper functions are almost complete in the camel case just a few of them in the snake case. Now all of them are in camel case, consistently. Similarly in the codebase, even inside same class some functions are the snake and others are in the camel case. In terms of the SU2 style guide, it is okay but pretty annoying for a developer. I am changing method names to at least provide some consistency inside the classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:1262,test,test,1262,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,1,['test'],['test']
Testability,"## Proposed Changes. The Boundary conditions in the SST turbulence model are based on the free stream conditions. However if we mix two stream with different fluid properties at the inlets, the Turbulent Kinetic Energy, omega and eddy viscosity at the inlets should be based on these local fluid properties. So in this pull request, we aim to use the known fluid properties at the inlets in order to set the BC for the SST model. ; I can add a test case if it is needed. ## Related Work. This pull request is related to #1784. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796:444,test,test,444,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796,2,['test'],['test']
Testability,"## Proposed Changes. The SU2 logo has been move in #1771 but its path has not been modified in the README. I update it and improve a bit the formatting of the markdown. ## Related Work. No. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1911:29,log,logo,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1911,2,"['log', 'test']","['logo', 'test']"
Testability,"## Proposed Changes. The current work implements the BAY and jBAY vortex generator source-term model using a jBAY cell selection method in the compressible and incompressible solver. The model allows to simulate triangular and rectangular vortex generators. The model is based of [https://doi.org/10.4233/uuid:704d764a-6803-4cad-991f-45dc4ea38f6d](https://doi.org/10.4233/uuid:704d764a-6803-4cad-991f-45dc4ea38f6d; ). . ## PR Checklist. - [ x ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273:855,test,test,855,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273,1,['test'],['test']
Testability,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1067:1377,test,test,1377,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067,1,['test'],['test']
Testability,"## Proposed Changes. The driver method `Postprocessing()` actually frees all the containers and finalizes the driver. As it does not reflect what is actually done and is easy to confuse with the method `Postprocess()`, the PR proposes renaming the method to `Finalize()`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1976:829,test,test,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/1976,1,['test'],['test']
Testability,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:635,Test,Testing,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,2,"['Test', 'test']","['Testing', 'test']"
Testability,"## Proposed Changes. The python wrapper instantiates drivers directly. To ensure that SU2 is initialized properly, also if used from python, some initialization code is already placed in the driver constructor. This PR moves additional initialization code to the driver constructor. ## Related Work; This came up during #1903. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:644,test,test,644,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['test'],['test']
Testability,"## Proposed Changes. There seems to be a sign error in the Jacobian calculation for the viscous flux of ideal gases. This has been checked in two ways. First, the Jacobian was derived by hand and compared to the actual code. Second, the code has been compared with the code for arbitrary equations of state. While the ideal gas law variant adds the inner product of the viscous flux and the velocity, the general gas law variant subtracts this term. ## Related Work. This error has been previously discussed in issue #609. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/612:833,test,test,833,https://su2code.github.io,https://github.com/su2code/SU2/pull/612,1,['test'],['test']
Testability,"## Proposed Changes. This PR adds the following features:; - New pressure inlet BC (specify total pressure) for the incompressible solver; - New mass flow outlet BC (specify target mass flow) for the incompressible solver; - Added outlet BC values to multipoint optimization options in python. It is now required to specify the type for each inlet and outlet BC in the incompressible solver. A descriptive error is thrown if this is not the case. For two inlet and outlets with different types, you would specify it as:. INC_INLET_TYPE= PRESSURE_INLET VELOCITY_INLET; INC_OUTLET_TYPE= MASS_FLOW_OUTLET PRESSURE_OUTLET. and the type order corresponds to the order of the markers given in MARKER_INLET and MARKER_OUTLET, respectively. An inviscid nozzle test case has been added to demonstrate the new features. Will update residuals in regressions once reported. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/621:752,test,test,752,https://su2code.github.io,https://github.com/su2code/SU2/pull/621,2,['test'],['test']
Testability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:588,benchmark,benchmark,588,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"## Proposed Changes. This PR is intended to put some functionality back that was involuntarily removed in #724. . Test cases for discrete adjoint FSI are now re-enabled with split files. They [correctly pass](https://travis-ci.org/su2code/SU2/builds/597983817) the travis tests [when the branch is based in feature_input_output](https://github.com/su2code/SU2/compare/feature_input_output...654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:114,Test,Test,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,3,"['Test', 'test']","['Test', 'tests']"
Testability,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:1792,test,test,1792,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,1,['test'],['test']
Testability,"## Proposed Changes. This PR, created together with @TobiKattmann , makes the necessary changes to obtain time-accurate discrete adjoint gradients for unsteady problems with grid movement. Main changes are for the handling of grid velocities of previous time steps. Regression test case to follow. ## Related Work; depends on #767 unsteady incompressible + ALE. Then a tested discrete adjoint for unsteady incompressible flow can be merged with this. ; Edit @TobiKattmann: PR767 is merged so I remove the dependent label. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766:277,test,test,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/766,3,['test'],"['test', 'tested']"
Testability,"## Proposed Changes. This divides the iteration files and adds a factory class for their creation. A rework of the iteration class is still necessary, but I don't have time to do that at the moment. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1015:896,test,test,896,https://su2code.github.io,https://github.com/su2code/SU2/pull/1015,1,['test'],['test']
Testability,"## Proposed Changes. This is a collection of minor bug-fixes that I've found while working with the codebase. Each is separated into a separate commit, with a description of the purpose of each bug fix in the commit description. ## Related Work. N/A. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649:561,test,test,561,https://su2code.github.io,https://github.com/su2code/SU2/pull/649,1,['test'],['test']
Testability,"## Proposed Changes. This is a fix for travis. Apparently the default channel for anaconda has changed as it was not able to find mpi4py anymore. . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/720:475,test,test,475,https://su2code.github.io,https://github.com/su2code/SU2/pull/720,1,['test'],['test']
Testability,"## Proposed Changes. This is a further effort in automating as much as we can in our development process. It enables the release drafter action (https://github.com/toolmantim/release-drafter) which will automatically keep an release draft with a changelog up to date as soon as there is a push to develop. . The change log entries are categorized depending on the labels `feature`, `fix`, `chore` for new features, bug fixes and maintenance. If you don't want your PR listed, add the label `no_changelog`.; So remember to always add a label to your PR (maybe we will automate that soon)!. Here is the most current draft (https://github.com/su2code/SU2/releases). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813:319,log,log,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/813,2,"['log', 'test']","['log', 'test']"
Testability,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:605,test,test,605,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['test'],['test']
Testability,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1012:57,test,testing,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012,7,['test'],"['test', 'testing', 'tests']"
Testability,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:113,test,tests,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,8,['test'],"['test', 'testing', 'tests']"
Testability,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:318,benchmark,benchmarks,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['benchmark'],['benchmarks']
Testability,"## Proposed Changes. This pull request adds the thermal conductivity, heat capacity and diffusivity as output for the incompressible solver in order to help the process of debugging inside SU2. During this process, we found some bugs regarding the diffusivity and thermal conductivity when the FLUID_MIXTURE model is used. Additionally, unused variables for computing the diffusivity have been removed. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956:977,test,test,977,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956,1,['test'],['test']
Testability,"## Proposed Changes. This pull request is two related changes:. 1. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. Some steps in the calculation were repeated twice. The main purpose of this pull request is to remedy the bug.; 2. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; . ## Related Work. This is a subset of the changes originally proposed in PR #552. The discussion and validation there still apply here. This pull request is not a new set of changes, but rather a smaller portion of PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577:1101,test,test,1101,https://su2code.github.io,https://github.com/su2code/SU2/pull/577,1,['test'],['test']
Testability,"## Proposed Changes. This pull request restricts the use of the FLUID_MIXTURE model only when the KIND_SCALAR_MODEL is SPECIES_TRANSPORT. . ## Related Work. Reported in CDF-Online; https://www.cfd-online.com/Forums/su2/257519-kind_scalar_model-mixture.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2345:932,test,test,932,https://su2code.github.io,https://github.com/su2code/SU2/pull/2345,1,['test'],['test']
Testability,"## Proposed Changes. This request enables unsteady incompressible flow simulation with grid movement. Changes are made as part of the collaboration with @economon and @TobiKattmann to expand the capabilities of the incompressible solver. Arbitrary Lagrangian-Eulerian formulation of the Low-Mach Navier-Stokes equations have been implemented which is suitable for both rigid grid motion and mesh deformation problems. Regression test case to follow. ## Related Work. #766 . ## PR Checklist. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767:429,test,test,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/767,2,['test'],['test']
Testability,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998:703,test,test,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/998,1,['test'],['test']
Testability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:775,test,test,775,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['test'],['test']
Testability,"## Proposed Changes. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. The main purpose of this pull request is to remedy the bug. There's also three other related efforts:. 1. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; 2. I also changed the FD blending function to be consistent with both published literature and the NTS blending. Before, `Roe_Dissipation = 0` meant an upwind scheme for the FD blending function but a central scheme for the NTS blending function, and vice versa for `Roe_Dissipation = 1`. By switching the FD blending function, the code is more consistent and cleaner.; 3. I proceeded with a basic verification of the implementation. I'll follow up later with another comment listing the verification details. ## Related Work. Previous PR: #532 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552:1368,test,test,1368,https://su2code.github.io,https://github.com/su2code/SU2/pull/552,1,['test'],['test']
Testability,"## Proposed Changes. With this pull request, we aim to initialize the fluid models based on the Ideal gas laws for incompressible flows in a standard way using the THERMODYNAMIC_PRESSURE($P_{op}$) and the INC_TEMPERATURE_INIT ($T_{init}$), the initial density is computed based on the ideal gas law :. $\rho_{init}= P_{op} / R T_{init}$. When the FLUID_MODEL is CONSTANT_DENSITY, the constant density must be given in the config file using the option DENSITY_CONSTANT, similar as it is done when viscosity, thermal conductivity and diffusivity models are chosen as constant. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2137:1263,test,test,1263,https://su2code.github.io,https://github.com/su2code/SU2/pull/2137,1,['test'],['test']
Testability,"## Proposed Changes. [clang-tidy ](https://clang.llvm.org/extra/clang-tidy/) is a well-known tool. This PR adds clang-tidy file with common checks and applies to the code base. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1989:494,test,test,494,https://su2code.github.io,https://github.com/su2code/SU2/pull/1989,1,['test'],['test']
Testability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:758,test,test,758,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['test'],['test']
Testability,"## Proposed Changes; ![image](https://github.com/su2code/SU2/assets/38071223/019c08ab-6ef4-44d0-8d6e-302318fa27ab). I'm also working on an unsteady version, but there is something wrong with the unsteady adjoint. ## Related Work; Fixes #2058. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2059:560,test,test,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/2059,1,['test'],['test']
Testability,"## Proposed Changes; #824 was closed when merging #861, this is the new WIP PR for the hybrid work. ## Related Work; #789 #824 #861. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/895:443,test,test,443,https://su2code.github.io,https://github.com/su2code/SU2/pull/895,1,['test'],['test']
Testability,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964:1216,test,test,1216,https://su2code.github.io,https://github.com/su2code/SU2/pull/964,1,['test'],['test']
Testability,"## Proposed Changes; * Fix `mpi4py` include directories when it is installed in python user directory.; * Fix `mkl` dependency when it is installed outside a master directory such as when installing from Ubuntu PPA.; . ## Related Work; Fixes #823. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/826:798,test,test,798,https://su2code.github.io,https://github.com/su2code/SU2/pull/826,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2140:911,test,test,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/2140,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2240:911,test,test,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/2240,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:1313,test,test,1313,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Following to what was done in the pull request #1796 , we aim with this pull request to use the known fluid properties at the inlets in order to set the BC for the SA model. Also, we extent the use of the turbulent marker options for this case as It was done in the previous pull request for SST #1843. ; I can add a test case if it is needed. . ## Related Work. related to pull request #1796 , #1843 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953:409,test,test,409,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:1128,test,test,1128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - During time-averaging, the weighted sum over previous timesteps is re-used to quickly update the time-average during inner iterations.; - Square-windowing now does not save the entire sample history, which should eliminate performance degradation when time-averaging is performed over many timesteps. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1545 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. (UnitTest); - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:1143,test,test,1143,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360:300,test,testcase,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360,3,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1912:799,test,test,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/1912,3,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/616:792,test,test,792,https://su2code.github.io,https://github.com/su2code/SU2/pull/616,4,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/856:792,test,test,792,https://su2code.github.io,https://github.com/su2code/SU2/pull/856,19,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1512:834,test,test,834,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512,4,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:1093,test,test,1093,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; * Bug fix for surface-based objectives so that they are not counted multiple times when multiple surfaces are being designed; * Segfault fix for ParaView binary in serial.; * Fixes so that ParaView binary works properly with SU2_SOL (writing ASCII instead) and the python scripts for gradients and shape design; * Fixes line endings of SU2_PY/SU2/run/mergy.py; * Fixes TecIO typecasting issue found in #339; * Removes y^+ output from laminar Navier-Stokes (now RANS only); * Adjustment to output variables for incompressible flows; * Removes some warnings; * Xcode project file update. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Includes fix from #339, which will be closed.; Resolves #62 ; Resolves #54 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598:1455,test,test,1455,https://su2code.github.io,https://github.com/su2code/SU2/pull/598,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; A couple of memory issues that should be fixed right away in develop. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/517:867,test,test,867,https://su2code.github.io,https://github.com/su2code/SU2/pull/517,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:1532,test,test,1532,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:1252,test,test,1252,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1004:266,test,tests,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/546:924,test,test,924,https://su2code.github.io,https://github.com/su2code/SU2/pull/546,1,['test'],['test']
Testability,## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Experimental branch to test modifications to the scalar/turbulence classes to minimize duplicate code. Will be merged into feature_scalar if successful.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/817:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/817,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204:1074,test,test,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug causing inlet profiles to fail when two adjacent inlets that share a vertex are prescribed with different values by file (especially with MG). Fixed by adding an explicit check on the marker tag for a match. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/560:1017,test,test,1017,https://su2code.github.io,https://github.com/su2code/SU2/pull/560,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:1242,test,test,1242,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Hi, all. This PR is resuming the #1496. I'm not familiar with the git, so the branch is unfortunately disconnected. ## Now working on . [Langtry and Menter model](https://doi.org/10.2514/1.42362). ## Current State . Code is well running. But, the result is not satisfactory. 😂; The LM(Langtry and Menter) model implemented to Su2 is under debugging compared to the results of Fluent's LM model. Transition onset is located upward then Fluent result. But, the good news is that when the correlations are set fixed value, the transition onset location is similar to the Fluent result. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592:1269,test,test,1269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:1658,test,test,1658,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; In this pull request, we extend the previous pull request of the mixing model adding the options of viscosity, thermal conductivity and other properties based on the species mass fractions. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This corresponds to the 2/3 part of the complete mixing model which started with the feature_mixturedensity in the previous pull request. We expect to add the final properties and the mixture specific heat capacity in the next pull request. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1687:1269,test,test,1269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1687,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; More efficient loops/maps for sorting of grid points and connectivity during initial reading/partitioning. This is important for very large meshes when running on limited resources. Due to the changes in the initial ordering of the connectivity, this PR results in minor differences in the residuals for the regressions. They have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:1154,test,test,1154,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Multizone does not work yet for species transport; This is a WIP to discuss the implementation details online. It does not work yet! . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; As mentioned in #1818 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821:958,test,test,958,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Part 2/3 of fluid mixing model. In this part, viscosity, thermal conductivity and other properties based on species mass fractions have been added. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. It is the continuation of the previous pull request of mixing density #1620. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690:1063,test,test,1063,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Preparing for large mesh support by switching from int32 to int64 in the ParMETIS library header. This change causes nearly all of the parallel regressions to fail due to slightly different partitioning behavior, but the final results stay the same. All regressions have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/561:1094,test,test,1094,https://su2code.github.io,https://github.com/su2code/SU2/pull/561,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Quick update for Xcode for the Driver file changes. Minor change in the include paths for each driver .cpp file. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/750:913,test,test,913,https://su2code.github.io,https://github.com/su2code/SU2/pull/750,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The mass flow rate uses AxiFactor. The computation of axifactor in CIncEulerSolver::GetOutletProperties is inconsistent with GetAxiFactor in CFlowOutput.cpp, leading to a different mass flow rate used for the target mass flow rate boundary condition (reported as screen output) compared to the mass flow rate reported in the history file. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1780:1140,test,test,1140,https://su2code.github.io,https://github.com/su2code/SU2/pull/1780,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The thermodynamic pressure influences the density at the inlet boundaries, especially when the mixture consists of more than 2 gases. So, with this pull request, we aim to obtain the pressure_thermodynamic as a user value or a default value, as 101325 [pa]. and based on this value compute the density. This is consistent with the low-mach approximation used in combustion.; I can add a test case if it is needed. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; This is pull request is related to #1826. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1839:481,test,test,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/1839,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds LES capabilities to the compressible Finite Volume solver. It uses the current SGS models implemented for the DG code. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/928:930,test,test,930,https://su2code.github.io,https://github.com/su2code/SU2/pull/928,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds the necessary base classes (solver, numerics, variable) for having an arbitrary number of scalar transport equations added to flow problems in a segregated manner (alongside a turbulence model, if necessary). Most of the numerics is shared with the scalar methods for the turb. solvers to eliminate duplication, and it should be easy now to add child classes for any new scalar transport models. In this PR, only a passive scalar has been implemented, but we are also building on this framework to add a flamelet model for combustion as a child class. A passive scalar test case will be added. It still needs more work, but it is important to have the skeleton merged now to lessen the burden of fixing conflicts with the ongoing restructuring in driver, variable, output, etc. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/777:676,test,test,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/777,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/535:1342,test,test,1342,https://su2code.github.io,https://github.com/su2code/SU2/pull/535,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR integrates the DG-FEM solver in the develop branch. Although still under development this solver is now in a state where other people can start to contribute, if desired. Furthermore, additional functionalities in terms of searching and interpolating are present in the DG solver that can also be used for the FV solver. Especially a true wall distance search instead of a point search to the nearest node on the wall would be possible. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565:1246,test,test,1246,https://su2code.github.io,https://github.com/su2code/SU2/pull/565,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a clean up of the configure options and bindings. I have removed unused bindings: HDF5, ZLIB, SZIP, JSON, and LAPACK. If anyone needs these, just let me know and we can put the necessary bindings back into configure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We can also think about changing the autotools here as discussed in #584. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:1094,test,test,1094,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/540:1102,test,test,1102,https://su2code.github.io,https://github.com/su2code/SU2/pull/540,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:1516,test,test,1516,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:128,test,testing,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['test'],['testing']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/525:212,test,tests,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/525,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:289,test,tests,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; add incompressible turbulent bend to tutorial regression tests. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. https://github.com/su2code/Tutorials/pull/33; https://github.com/su2code/su2code.github.io/pull/111. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1898:151,test,tests,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1898,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1453:941,test,test,941,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Add a probe function in latest SU2. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/553:826,test,test,826,https://su2code.github.io,https://github.com/su2code/SU2/pull/553,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added finite volume discretization for Poisson problem that I am merging into a new branch for the pressure-based system that I will be working on. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Edwin van der Weide at University of Twente. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; Most of the test cases I have are analytical problems and have not added them here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/527:983,test,test,983,https://su2code.github.io,https://github.com/su2code/SU2/pull/527,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added surface analyse options for direct differentiation and fixed a bug for multiple ffd boxes with multiple dv markers.; The feature_directdiff_obj branch in TestCases repo needs to be merged in conjunction with this pull request. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/569:252,Test,TestCases,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/569,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Adds the functionality of reading fluid data from an unstructured triangulated lookup table and interpolating. No coupling with a solver (combustion) yet, at this point we will only add a verification test. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; We split #1223 into smaller chunks. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637:293,test,test,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/547:880,test,test,880,https://su2code.github.io,https://github.com/su2code/SU2/pull/547,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/548:879,test,test,879,https://su2code.github.io,https://github.com/su2code/SU2/pull/548,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Ffor wall functions a warning is issued when y+ < 5, but the value 5 should be the user defined limit obtained from the config option.; Furthermore, some spelling errors are correcred. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:982,test,test,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/945:845,test,test,845,https://su2code.github.io,https://github.com/su2code/SU2/pull/945,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix incompressible inlet when corner nodes are shared by a viscous wall; https://github.com/su2code/SU2/discussions/1613. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1631:954,test,test,954,https://su2code.github.io,https://github.com/su2code/SU2/pull/1631,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/925:889,test,test,889,https://su2code.github.io,https://github.com/su2code/SU2/pull/925,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixing some spelling mistakes. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1586:867,test,test,867,https://su2code.github.io,https://github.com/su2code/SU2/pull/1586,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; INCINLET_USENORMALS= YES will use the normals of the inlet boundary faces instead of the normal from MARKER_INLET.; This was only active for pressure inlets and not for velocity inlets. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1643:1018,test,test,1018,https://su2code.github.io,https://github.com/su2code/SU2/pull/1643,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; My changes allow the changing of moving wall velocities when using the py_wrapper. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; There has been some previous work, where functionality for changing mesh rotation rates was added. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095:982,test,test,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Nodes shared by an inlet and a wall show nonphysical values in the corner node for energy, temperature, pressure, density. This fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266:1056,test,test,1056,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Part 3/3 of fluid mixing model. In this part, Heat capacities and mass diffusivity based on species mass fractions have been added. I am still working in checking the Non-dimensional case, I expect to complete it during this week. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. It is the continuation of the previous pull request of mixing density #1620 and #1690. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1758:1112,test,test,1112,https://su2code.github.io,https://github.com/su2code/SU2/pull/1758,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Part 3/3 of fluid mixing model. In this part, Heat capacities and mass diffusivity based on species mass fractions have been added. I am still working in checking the Non-dimensional case, I expect to complete it during this week. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; It is the continuation of the previous pull request of mixing density #1620 and #1690. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762:1115,test,test,1115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Reimplemented pressure-based solver from feature_Pressure_based into the development branch. . ## Related Work; branch: feature_Pressure_based. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. Euler Solver: Incompressible cylinder case Pressure based (PB) vs Density Based (DB); ![incomp_cylinder](https://github.com/su2code/SU2/assets/22835014/c37cb127-88fe-4945-b712-c0ef450a3c43); ![incomp_cylinder_history](https://github.com/su2code/SU2/assets/22835014/3cf4c72c-445f-4086-87ea-162159d06cb7). Navier Stokes Solver: Incompressible Hydrofoil case Pressure-based (PB) vs Density Based (DB); ![NACA0012_hydrofoil](https://github.com/su2code/SU2/assets/22835014/cab1e73e-a60a-47af-aeef-ba50eb46e0eb); ![NACA0012_hydrofoil_history](https://github.com/su2code/SU2/assets/22835014/d71f09fd-73f9-44bb-861a-8f033408c6ba). Still TODOs; * Fixing RANS: Current CIncPBVariable inherits CVariable instead of CFlowVariable, if this is fixed RANS should work.; * Fixing MPI: The problem is currently unknown; * Fixing ND: non-dimensionalization is different in the two solvers. It should be harmonized.; * Multigrid: A PB multigrid ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210:909,test,test,909,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1320:899,test,test,899,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329:1380,test,test,1380,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The comment and the code are inconsistent regarding RefElemLength. Propose to change the comment from 0.1m to 1.0m.; ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1830. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1831:1049,test,test,1049,https://su2code.github.io,https://github.com/su2code/SU2/pull/1831,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500:946,test,test,946,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The wall function variable y+ was not computed on the halo nodes, leading to visual 'spots' in the solution. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1768 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:916,test,test,916,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:1719,test,test,1719,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames.; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. Additional independent transport equations are optionally solved for the species like NO and CO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917:1251,test,test,1251,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a draft pull request for the implementation of a supersonic inlet profile feature. So far, the only changes made have been in CEulerSolver.cpp, where the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC have been replaced with vertex values (please verify I did this correctly). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; I have been in communication with @bigfooted regarding the first steps for this implementation. I created a feature request for this on 5/25/2022. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652:1300,test,test,1300,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a small update of the lookup table routines to prepare for the implementation of the flamelet model. A bug was fixed and the header file definition changed (keywords in sentences are capitalized). Some small textual changes were made. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the upcoming PR for feature_new_flamelet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:1093,test,test,1093,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465:1304,test,test,1304,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; We need a different treatment of the convective scalar fluxes to improve results for the species solver. ; This PR deals with the specific case of the incompressible species solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; connected to #726 and #721, and discussion #1695. ## my checklist:; [] check residual convergence for old and new testcase (primitive venturi mixer); [] check convergence for turbulence problems, still problematic? Should we implement upwind scheme for species only (for now)?; [] check implementation of inlet/outlet bc; [] compressible flow vs incompressible flow; []. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1697:536,test,testcase,536,https://su2code.github.io,https://github.com/su2code/SU2/pull/1697,2,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When `(Objective < Value ) * Scale` ('<' can be '>') is added to OPT_OBJECTIVE in the configuration file, it is treated as a penalty function. When the constraint is satisfied, the penalty function value should be zero. However, it is currently set to the function value. The same `elif` condition as in `obj_dp` should be used. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1968. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1969:1143,test,test,1143,https://su2code.github.io,https://github.com/su2code/SU2/pull/1969,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When no inlet profile exists, su2 creates one for you. There was a bug where the index of the marker was used to look up the string of column names, instead of the index of the inlet markers. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2267:1105,test,test,1105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2267,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When using wall functions in combination with heat transfer, a thermal law of the wall is needed to accurately solve for velocity as well as temperature. . This is a first implementation, only for isothermal walls, and only for the incompressible solver. During the WIP, this will be generalized. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Improvement of the wall function implementation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1748:1145,test,test,1145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1748,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; change MPI_QUANTITIES to enum class. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2279:543,test,test,543,https://su2code.github.io,https://github.com/su2code/SU2/pull/2279,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1452:901,test,test,901,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; edit:; - Implement the SST2004,SST2004m, SST2003 and SST2003m model according to the NASA website https://turbmodels.larc.nasa.gov/sst.html; - implementation compatible with ongoing work on SA model. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1551 ; #1364 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557:1048,test,test,1048,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1451:919,test,test,919,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1457:872,test,test,872,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; the axisymmetric terms in the production term of the SST model are not correct and the current implementation is prone to error. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1783 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784:936,test,test,936,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; updated catch.hpp from the catchorg github repository. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726:739,test,test,739,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; when using an inlet profile, and the inlet profile does not exist, SU2 will write a profile for you. When you do this when using mpi, this sometimes fails, depending on the number of ranks. This PR fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1767 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1786:1020,test,test,1020,https://su2code.github.io,https://github.com/su2code/SU2/pull/1786,1,['test'],['test']
Testability,"## Proposed Changes; *Implementation of NISHIKAWA Rp Limiters (R3, R4, R5); Reference - ""New Unstructured-Grid Limiter Functions"", Hiroaki Nishikawa, AIAA 2022-1473*; . ## Related Work; *1- Less dissipative in comparison to Venkatakrishnan limiter; 2- Can preserve higher order accuracy (3rd, 4th and 5th with R3, R4 and R5 limiters, probably future proof); 3- May help in better convergence for certain cases with different K.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006:987,test,test,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006,1,['test'],['test']
Testability,"## Proposed Changes; *Implementation of Streamwise periodic Iso-thermal BCs*; . ## Related Work; *This is an add-on to the already existing Streamwise periodic flow solver. As a result, there are new source terms which are accounted for in the solution.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1799:814,test,test,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/1799,1,['test'],['test']
Testability,"## Proposed Changes; *This PR adds the capability of a radiative equilibrium wall boundary condition to the standard air and NEMO solvers. ; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1703:755,test,test,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/1703,1,['test'],['test']
Testability,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:1078,test,test,1078,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,1,['test'],['test']
Testability,"## Proposed Changes; *add Cur_Time column to the default history.csv file for transient analysis*. ## Related Work; *I propose this change mainly for third-party post-processing purposes, the post module can easily acquire the time information from the history file. In addition, the time data in the history file allows the users to know the current simulation time intuitively.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2141:1053,test,test,1053,https://su2code.github.io,https://github.com/su2code/SU2/pull/2141,1,['test'],['test']
Testability,"## Proposed Changes; *in driver_structure.cpp, a few lines have been included to force reading the Target files when running discrete adjoint. I tested it on MacOS El Capitán and OpenSUSE 42.3 with the most recent g++. Under MacOS, the MPI flavour is openmpi; on openSUSE, the MPI flavour is mpich2psm2*; . ## Related Work; This fix forces the reading of Target Files in an inverse design project when using discrete adjoint. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600:145,test,tested,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/600,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; *restoring original testcase repository for regression tests.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371:41,test,testcase,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371,3,['test'],"['test', 'testcase', 'tests']"
Testability,"## Proposed Changes; + remove some obsolete code. This is to make clearer what can be called from python.; ; ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:426,test,test,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,1,['test'],['test']
Testability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:471,test,test,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:1144,test,test,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['test'],['test']
Testability,"## Proposed Changes; - Protect `AD::GetDerivative()` call trees by `AD::BeginUseAdjoints()`, `AD::EndUseAdjoints()`.; - `GetAdjointSolution_time_n()` and `GetAdjointSolution_time_n1()` use lock-free adjoints access now. ## Related Work; continues #2146; related to #1984. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:703,test,test,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['test'],['test']
Testability,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352:991,test,test,991,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352,1,['test'],['test']
Testability,"## Proposed Changes; - The CoDiPack update fixes a rare data race.; - For consistency, the explicit adjoints resizing introduced previously is complemented by explicit adjoints locking. ## Related Work; #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2146:642,test,test,642,https://su2code.github.io,https://github.com/su2code/SU2/pull/2146,1,['test'],['test']
Testability,"## Proposed Changes; - This PR proposes to add CGNS format as a possible writing format for FFD box; . ## Related Work; - This should address #148 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/674:699,test,test,699,https://su2code.github.io,https://github.com/su2code/SU2/pull/674,1,['test'],['test']
Testability,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1238:65,Test,Testcases,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238,2,"['Test', 'test']","['Testcases', 'test']"
Testability,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1396:1055,test,test,1055,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396,1,['test'],['test']
Testability,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326:890,test,test,890,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326,1,['test'],['test']
Testability,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1162:923,test,test,923,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162,1,['test'],['test']
Testability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:808,test,test,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,1,['test'],['test']
Testability,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:595,log,logic,595,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; 1) Modified the BFM input file and source code to cover machines with curved streamlines on the meridional plane. Axial distance replaced by streamwise distance.; 2) During Ray-Casting algorithm enlarged the research zone to include also nodes on curved boundaries that would be excluded by standard procedure. ## Related Work; 1) Modified the BFM input file and source code to cover machines with curved streamlines on the meridional plane. Axial distance replaced by streamwise distance.; 2) During Ray-Casting algorithm enlarged the research zone to include also nodes on curved boundaries that would be excluded by standard procedure. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2328:1331,test,test,1331,https://su2code.github.io,https://github.com/su2code/SU2/pull/2328,1,['test'],['test']
Testability,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981:902,test,test,902,https://su2code.github.io,https://github.com/su2code/SU2/pull/981,2,['test'],['test']
Testability,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294:175,test,tests,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; ; Add execute permission to SU2_PY/fsi_computation.py. This appears to be the intent - installs to $prefix/bin and starts with a shebang. ## Related Work. Resolve sbopkglint complaint when building Slackware package. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2072:795,test,test,795,https://su2code.github.io,https://github.com/su2code/SU2/pull/2072,1,['test'],['test']
Testability,"## Proposed Changes; ; Do not write Z-velocity or temperature when the (adjoint) equations are not solved. . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1920:443,test,test,443,https://su2code.github.io,https://github.com/su2code/SU2/pull/1920,1,['test'],['test']
Testability,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189:1064,test,test,1064,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189,1,['test'],['test']
Testability,"## Proposed Changes; @jtneedels and I have worked on implementing the Air-7 gas model to the NEMO native fluid model. This allows for simulations of inviscid weakly ionized flows with the addition of NO+ and e-. . I am open to adding a test case for this, similar to the thermal bath case, since they run extremely fast, though I am open to idea. Work is ongoing to extend this viscous simulations.; Updates from #1533 are added here as well. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555:236,test,test,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555,2,['test'],['test']
Testability,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:236,test,tests,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; @oleburghardt, according to @talbring this was supposed to go AFTER #653. Is my work a joke around here or what?!; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667:836,test,test,836,https://su2code.github.io,https://github.com/su2code/SU2/pull/667,1,['test'],['test']
Testability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:1366,test,test,1366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['test'],['test']
Testability,"## Proposed Changes; @rsanfer , @talbring please keep the testcases up to date with the new options you are introducing, avoidable bugs are starting to pass... ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751:58,test,testcases,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/751,2,['test'],"['test', 'testcases']"
Testability,"## Proposed Changes; A cout line for debugging purposes was left in the paraview writer. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1491:424,test,test,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/1491,1,['test'],['test']
Testability,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:539,test,test,539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['test'],['test']
Testability,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062:909,test,test,909,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062,3,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; A recent change from #1417, which I merged in had the regression set to feature_cat_wall in the TestCases. This will update and fix that call. I'm sure I will need to check additional fixes associated with this change.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1817:117,Test,TestCases,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1817,1,['Test'],['TestCases']
Testability,"## Proposed Changes; A small typo was causing the eddy viscosity to not be communicated properly.; Thanks @economon for pointing me in the right direction. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/744:466,test,test,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/744,1,['test'],['test']
Testability,"## Proposed Changes; AUSM+ -up scheme of Liou (A sequel to AUSM, Part II: AUSM + -up for all speeds) has been implemented . It is an all speed scheme and is more robust and accurate in comparison to the AUSM scheme. Also It has relatively fewer issues in comparison to the Roe scheme.; (I tried it over a relatively complex geometry (unstructured hybrid mesh), implementation looks fine). . ## Related Work; **. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628:962,test,test,962,https://su2code.github.io,https://github.com/su2code/SU2/pull/628,1,['test'],['test']
Testability,"## Proposed Changes; AUSM+-up scheme of Liou has been implemented (A sequel to AUSM, Part II: AUSM + -up for all speeds).; - This scheme is more robust and accurate in comparison to existing AUSM scheme in the code; - Relatively fewer issues in comparison to Roe scheme; - Proper scaling of numerical dissipation at lower Mach numbers; - I tried it over a relatively complex geometry, implementation seems to be fine. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/629:986,test,test,986,https://su2code.github.io,https://github.com/su2code/SU2/pull/629,1,['test'],['test']
Testability,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1510:874,test,test,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510,1,['test'],['test']
Testability,"## Proposed Changes; Add feature to record a tape for debug purposes (as a tool for AD / discrete adjoint / .. developers), using CoDiPack's `codi::RealReverseTag`. ## Related Work; Supposed to help finding remaining errors in #2317. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2343:905,test,test,905,https://su2code.github.io,https://github.com/su2code/SU2/pull/2343,1,['test'],['test']
Testability,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:761,test,test,761,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['test'],['test']
Testability,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:911,test,test,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['test'],['test']
Testability,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:1119,test,test,1119,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,1,['test'],['test']
Testability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:1328,test,test,1328,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['test'],['test']
Testability,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:397,test,test,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['test'],['test']
Testability,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387:829,test,test,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387,1,['test'],['test']
Testability,"## Proposed Changes; Added `SelectZone` function to `CDriverBase` that dynamically sets the zone index; . ## Example Usage; ```python; import pysu2; from mpi4py import MPI. def execute_su2():; # Import mpi4py for parallel run; comm = MPI.COMM_WORLD; rank = comm.Get_rank(); num_zones = 2; # Initialize the corresponding driver of SU2, this includes solver preprocessing; SU2Driver = pysu2.CMultizoneDriver(config_path, num_zones, comm) # type: ignore. # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(). # Time loop is defined in Python so that we have acces to SU2 functionalities at each time step; comm.Barrier(). # Time iteration preprocessing; SU2Driver.Preprocess(0). # Run one time-step (static: one simulation); SU2Driver.Run(). # Update the solver for the next time iteration; SU2Driver.Update(). # Monitor the solver and output solution to file if required; SU2Driver.Monitor(0). for izone in range(num_zones):; SU2Driver.SelectZone(izone); # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(); print(allMarkerIDs). # Output the solution to file; SU2Driver.Output(0). # Finalize the solver and exit cleanly; SU2Driver.Finalize(); ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:1834,test,test,1834,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,1,['test'],['test']
Testability,"## Proposed Changes; Added a dry run mode (can be enabled by adding -d as flag to the SU2_CFD binary). If this mode is enabled, all of the expensive geometrical preprocessing steps are skipped and no solver is started, but all other steps during the driver construction are executed. This is great to check whether the setup is sane and the physical settings are correct without having to wait until the mesh is read and the partitioning is done. For the implementation I created a dummy geometry class with zero elements and points and a dummy driver which does essentially nothing. Initially I thought it would be more work, but apparently it almost worked out of the box. I also added a table output during the solver preprocessing for the DG solver. Furthermore I moved parts of the Input_Preprocessing() routine dealing with the geometry to the Geometrical_Preprocessing() routine where it should belong. The changes in SU2_CFD.cpp look more complicated then they are. Just hide white space changes. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:1572,test,test,1572,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,1,['test'],['test']
Testability,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:399,Test,Testcases,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,3,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"## Proposed Changes; Added local timestep and local CFL as volume output for both the flow and turbulence variables; . ## Related Work; In relation to #2056. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060:715,test,test,715,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060,1,['test'],['test']
Testability,"## Proposed Changes; Added parallel output of Tecplot binary .szplt files.; Updated TecIO source to the latest version. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656:687,test,test,687,https://su2code.github.io,https://github.com/su2code/SU2/pull/656,1,['test'],['test']
Testability,"## Proposed Changes; Added profiling option through `gprof`. This allows you to profile your SU2 application to see where it spends most of its time and therefore figure out which of your new features could use some better efficiency. . How to enable profiling? Add the flag `-Denable-gprof` to your `meson.py` command and re-configure. . Now you can run SU2 or SU2 AD as normal. However, at the end, a file called `gmon.out` will be generated in your working directory. . In order to get the analysis from the profiling, run `gprof <path/to/SU2/executable> > analysis.txt`. Now, the file `analysis.txt` contains the profiling analysis which you can use to assess the efficiency of your code. Added instructions for enabling and using the gprof option on the su2code.github.io repository under PR #145 ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2243:1235,test,test,1235,https://su2code.github.io,https://github.com/su2code/SU2/pull/2243,1,['test'],['test']
Testability,"## Proposed Changes; Added required files for test case VV sandia jet and changed regression.yml to get residual values required for vandv.py; @bigfooted @Cristopher-Morales. (This PR is created to get the residual values for the vandv.py script.); . ## Related Work; -. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2097:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/2097,2,['test'],['test']
Testability,"## Proposed Changes; Added the new files from a previous commit to the Xcode IDE project file. ; There is also a change to printing_toolbox.cpp in Common/src/toolboxes/; - slight modification to the relative path of a include file. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/634:940,test,test,940,https://su2code.github.io,https://github.com/su2code/SU2/pull/634,1,['test'],['test']
Testability,"## Proposed Changes; Adding a warning if a non-zero Reynolds number is used for NS or RANS simulation. Currently the code will diverge will no explanation. ; ; - [ x] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/669:456,test,test,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/669,1,['test'],['test']
Testability,"## Proposed Changes; Adding an implicit flag to prevent segfault while running Roe scheme explicitly.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/654:680,test,test,680,https://su2code.github.io,https://github.com/su2code/SU2/pull/654,1,['test'],['test']
Testability,"## Proposed Changes; Adding cstdint header to printing_toolbox.hpp. ## Reason; I was building SU2 from source this morning. Running ninja threw an compilation error with a comment to import cstdint in printing_toolbox.hpp since uint8_t is not defined in the scope:. ```; ...; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:240:10: error: ‘uint8_t’ was not declared in this scope; 240 | vector<uint8_t> typeBuf(myElem);; | ^~~~~~~; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:30:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; did you forget to ‘#include <cstdint>’?; 29 | #include ""../../../../Common/include/toolboxes/printing_toolbox.hpp""; +++ |+#include <cstdint>; 30 | ; ...; ```; Adding the header solves the issue. . Here some additional information:; OS: Fedora 38; Configuration: MPI, pythonwrapper, autodiff; Compiler: g++ 13.1.1. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2099:1431,test,test,1431,https://su2code.github.io,https://github.com/su2code/SU2/pull/2099,1,['test'],['test']
Testability,"## Proposed Changes; Adding in history output residuals of species flamelet controlling variables for multizone simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2269:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2269,1,['test'],['test']
Testability,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:565,test,test,565,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006:1041,test,test,1041,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006,2,['test'],['test']
Testability,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:1041,test,test,1041,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,1,['test'],['test']
Testability,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:861,test,test,861,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['test'],['test']
Testability,"## Proposed Changes; Addition of multi-layer perceptron class which can be used to evaluate trained multi-layer perceptrons in processes such as thermodynamic state evaluation in data-driven fluid models.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. In the Tutorials repository, branch feature_multilayer_perceptron, one can find under ""common/multilayer_perceptron"" some python scripts which demonstrate how to translate a model trained through Tensorflow to an input file compatible with the CLookUp_ANN class. The README.md file in that tutorial folder also lists some important information regarding the functionality of the CLookUp_ANN class, datadriven fluid model, and MLP input file format. . Shall I leave those there or should these be uploaded elsewhere?. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757:1299,test,test,1299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757,1,['test'],['test']
Testability,"## Proposed Changes; Addition of preferential diffusion model for modeling of hydrogen-rich reactants.; The new features allow for an additional transported scalar; the mixture fraction. This enables the solution process for partially pre-mixed, laminar flame problems, as well as the implementation of preferential diffusion. . A detailed description of the SU2 FGM solver can be found on the SU2 website repository (https://github.com/su2code/su2code.github.io) under feature_new_flamelet. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2156:1182,test,test,1182,https://su2code.github.io,https://github.com/su2code/SU2/pull/2156,1,['test'],['test']
Testability,"## Proposed Changes; Addresses the compilation time issue (#851) in the way discussed with @talbring in #824.; Plus, I think it is time to bite the bullet and cleanup CConfig, no more .inl, tabs replaced (but the comments still look ok-ish), methods made const when possible.; This will probably cause you issues, but the changes to these files are usually very linear and so, easy to re-apply.; There is no more CCreateMap function, in C++11 braced initialization can be used instead e.g.:; `map<string, string> AverageGroupName = {{""BGS_RES"", ""bgs""},{""RMS_RES"",""rms""},{""MAX_RES"", ""max""}};`. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/853:903,test,test,903,https://su2code.github.io,https://github.com/su2code/SU2/pull/853,1,['test'],['test']
Testability,"## Proposed Changes; Adds epistemic uncertainty quantification capabilities for the SST turbulence model. Details on methodology, implementation, and performance on test cases, are available here: https://arxiv.org/abs/1803.00725; . ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570:165,test,test,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/570,2,['test'],['test']
Testability,"## Proposed Changes; Adds the simplest type of custom output to all solvers. Add coverage for custom functions in some discrete adjoint cases. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2020:460,test,test,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/2020,1,['test'],['test']
Testability,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076:1025,test,test,1025,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076,2,['test'],['test']
Testability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:541,Test,Test,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,5,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"## Proposed Changes; Allows specifying an objective function via a math expression using the history outputs and typical math functions.; General cleanup of dead code and output fixes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1478:537,test,test,537,https://su2code.github.io,https://github.com/su2code/SU2/pull/1478,1,['test'],['test']
Testability,"## Proposed Changes; Allows this type of ""language"" to create new history outputs.; ```; CUSTOM_OUTPUTS= 'mach : Macro{hypot(VELOCITY_X, VELOCITY_Y) / SOUND_SPEED};\; avg_mach : AreaAvg{$mach}[inlet];\; var_mach : AreaAvg{pow($mach - avg_mach, 2)}[inlet];\; dev_mach : Function{sqrt(var_mach)}'; ```. ## Related Work; #1478 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1705:678,test,test,678,https://su2code.github.io,https://github.com/su2code/SU2/pull/1705,1,['test'],['test']
Testability,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/966:718,test,test,718,https://su2code.github.io,https://github.com/su2code/SU2/pull/966,1,['test'],['test']
Testability,"## Proposed Changes; An option of supersonic inlet profile will be added, the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC will be replaced with vertex values. ## Related Work; Modification to related files. ; e.g. CFVMFlowSolverBase.inl, CEulerSolver.cpp, etc.; Recompelling the codes and debugging; Testing using proper cases and doing iterations. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2325:339,Test,Testing,339,https://su2code.github.io,https://github.com/su2code/SU2/pull/2325,2,"['Test', 'test']","['Testing', 'test']"
Testability,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:967,test,test,967,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,1,['test'],['test']
Testability,"## Proposed Changes; As agreed during today's developer's meeting, this PR adds a general square matrix utility to the toolboxes such that it can be used by other people. It is not used in the current source tree of the develop branch and therefore it should not have any affect on current simulations.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1068:881,test,test,881,https://su2code.github.io,https://github.com/su2code/SU2/pull/1068,1,['test'],['test']
Testability,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226:1148,test,test,1148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226,1,['test'],['test']
Testability,"## Proposed Changes; As discussed in today's developers meeting. ## Related Work; #1014. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1044:399,test,test,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1044,1,['test'],['test']
Testability,"## Proposed Changes; Breakup CVariable classes into individual hpp and cpp files, with inlines defined in hpp.; Revise the includes of client classes (CSolver and derived). ## Related Work; Addresses part of #583 ; Preparation for #716. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/725:547,test,test,547,https://su2code.github.io,https://github.com/su2code/SU2/pull/725,1,['test'],['test']
Testability,"## Proposed Changes; Brief update of Xcode; . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1660:641,test,test,641,https://su2code.github.io,https://github.com/su2code/SU2/pull/1660,1,['test'],['test']
Testability,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:527,test,test,527,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,4,['test'],['test']
Testability,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:525,test,test,525,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,4,['test'],['test']
Testability,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/980:601,test,test,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/980,1,['test'],['test']
Testability,"## Proposed Changes; Changes in CoDiPack accelerate parallel preaccumulations.; ; ## Related Work; #2039, previous work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2092:451,test,test,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/2092,1,['test'],['test']
Testability,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105:850,test,test,850,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105,1,['test'],['test']
Testability,"## Proposed Changes; Clean up the turbomachinery functions in CEulerSolver.cpp and apply SU2 coding rules. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2155:795,test,test,795,https://su2code.github.io,https://github.com/su2code/SU2/pull/2155,1,['test'],['test']
Testability,"## Proposed Changes; Cleaned up the Riemann boundary condition in CEulerSolver. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2176:768,test,test,768,https://su2code.github.io,https://github.com/su2code/SU2/pull/2176,1,['test'],['test']
Testability,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1281:188,log,logical,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281,3,"['log', 'test']","['logical', 'test']"
Testability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:1558,test,test,1558,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,1,['test'],['test']
Testability,"## Proposed Changes; Collection of minor improvements including, typos, warnings, better names, etc.; . ## Related Work; Not related with other PRs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/541:699,test,test,699,https://su2code.github.io,https://github.com/su2code/SU2/pull/541,1,['test'],['test']
Testability,"## Proposed Changes; Compile-time option (`-Denable-mixedprec=true`) to have single precision linear solves while keeping all other calculations in double precision. Which means that among other things we get the ILU for the price of LU-SGS (memory wise).; This uses the same type-mixing logic used to have a passive matrix in reverse AD builds (thus this feature is also compatible with reverse AD, but not direct).; For the 3D RANS SST case with about 500k nodes I've been using for benchmarking and profiling this gives a 1.19 speedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/989:288,log,logic,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/989,2,"['benchmark', 'log']","['benchmarking', 'logic']"
Testability,"## Proposed Changes; Compute Green-Gauss gradients and limiters via a point-loop (like we do for Least Squares), in the limit this allows one thread per point of parallelization. Parallel regions are started inside the functions and again only the master thread calls MPI routines. Move these routines out of CSolver and make them general to reduce code duplication (compressible/incompressible, solution/primitives), and to improve test-ability (if key areas of the code depend less on large objects we can more easily treat them as units). Introduce a way to create different limiters by defining small details like the limiter function (and its associated constants), or any geometry-based modification. I don't seem to have ""hard"" failures in the regressions but I need to run tests, especially for periodic cases as I had to change the ""communication model"" for the min / max computed for limiters.; I will start documenting anyway. ## Related Work; #789 #824 ; Depends on #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834:433,test,test-ability,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/834,3,['test'],"['test', 'test-ability', 'tests']"
Testability,"## Proposed Changes; Couple efficiency/functionality improvements to the topology optimization implementation as detailed in TestCases/fea_topology/config.cfg. Edit: This requires c++11 so it will have to go after the PR that enables it. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:125,Test,TestCases,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1464:723,test,test,723,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464,1,['test'],['test']
Testability,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:351,test,test,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['test'],['test']
Testability,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:871,test,test,871,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['test'],['test']
Testability,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1201:214,Test,Testcases,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201,4,"['Test', 'test']","['Testcases', 'test', 'testcases']"
Testability,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,2,['test'],['test']
Testability,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1194:315,test,test,315,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:1123,test,test,1123,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['test'],['test']
Testability,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435:923,test,test,923,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435,1,['test'],['test']
Testability,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:784,test,test,784,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['test'],['test']
Testability,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/900:850,test,test,850,https://su2code.github.io,https://github.com/su2code/SU2/pull/900,1,['test'],['test']
Testability,"## Proposed Changes; Explore a workaround along the lines of https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58 to fix #2241. ## Related Work; #2241. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2242:613,test,test,613,https://su2code.github.io,https://github.com/su2code/SU2/pull/2242,1,['test'],['test']
Testability,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:209,benchmark,benchmark,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:1063,test,test,1063,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,1,['test'],['test']
Testability,"## Proposed Changes; Extends the custom outputs with point probes (nearest point, no interpolation is done). ## Related Work; #1907 cc @DonalMcC. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909:463,test,test,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909,1,['test'],['test']
Testability,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1193:104,log,logic,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; Fix NEMO inlet BC.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882:748,test,test,748,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882,1,['test'],['test']
Testability,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1145:676,test,test,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145,1,['test'],['test']
Testability,"## Proposed Changes; Fix the output of FFD paraview files;; Maybe fix #1123 (@TobiKattmann give it a try if you can); Deprecate VISUALIZE_VOLUME/SURFACE_DEF options for the reasons in #942;; Implements ""HOLD_GRID_FIXED"" for CMeshSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126:589,test,test,589,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126,1,['test'],['test']
Testability,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1187:732,test,test,732,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187,1,['test'],['test']
Testability,"## Proposed Changes; Fixed all the compiler warnings in SU2 itself when using -Wpedantic for GNU and some warnings of the tecio library. The only remaining warnings using -Wpedantic now come from the tecio library and are of the type -Wmisleading-indentation and -Wclass-memaccess, the latter coming from the calls to memcpy. However, I think it is up to Tecplot to resolve those ones.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1092:961,test,test,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/1092,1,['test'],['test']
Testability,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858:513,test,test,513,https://su2code.github.io,https://github.com/su2code/SU2/pull/858,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Fixes AD compilation of parallel Tecplot binary output.; . ## Related Work; AD build failure noted by Tom Economon on Mac w/ configure command:; ./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --enable-autodiff --enable-direct-diff --enable-tecio. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/665:836,test,test,836,https://su2code.github.io,https://github.com/su2code/SU2/pull/665,1,['test'],['test']
Testability,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897:737,test,test,737,https://su2code.github.io,https://github.com/su2code/SU2/pull/897,1,['test'],['test']
Testability,"## Proposed Changes; Fixes bug that causes rotational grid velocity ramp to not be applied correctly if the ramp is specified in a multizone configuration file. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:854,test,test,854,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,1,['test'],['test']
Testability,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:1095,test,test,1095,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,1,['test'],['test']
Testability,"## Proposed Changes; For RIGID_PITCHING movement, add PHASE parameter to angular velocities. Pitching angle: angle=Ampl * sin(Omega * Time + Phase); Original augular velocity: AlphaDot = Omega * Ampl * cos(Omega *Time); Updated angular velocity: AlphaDot = Omega * Ampl * cos(Omega *Time + Phase); . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1656:892,test,test,892,https://su2code.github.io,https://github.com/su2code/SU2/pull/1656,1,['test'],['test']
Testability,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/961:219,test,test,219,https://su2code.github.io,https://github.com/su2code/SU2/pull/961,2,['test'],['test']
Testability,"## Proposed Changes; For pure conjugate heat transfer problems, the temperature at the walls is initialized using the free stream temperature. Using the Isothermal_Temperature[0] for pure CHT problems results in a segmentation fault error. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281:928,test,test,928,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281,1,['test'],['test']
Testability,"## Proposed Changes; For volume names, we assume that the filename is filename.ext and we strip the extension using find_last_of('.'); But:; 1. This can lead to unwanted file stripping when you want the filename or folder to be volume.a; 2. We already mention in the documentation that the volume filename should be given without an extension. I think we should simply remove the find_last_of lines. There are more of those, for now I have simply removed the one connected to #2074 . ## Related Work; Issue: #2074 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2079:833,test,test,833,https://su2code.github.io,https://github.com/su2code/SU2/pull/2079,1,['test'],['test']
Testability,"## Proposed Changes; Found while debugging differences between legacy and new mesh deformation with @Nicola-Fonzi in #1197.; Explained below. ## Related Work; #1197 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199:519,test,test,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199,1,['test'],['test']
Testability,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1030:657,test,test,657,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030,1,['test'],['test']
Testability,"## Proposed Changes; Generalize the variables in the CLookUpTable class for use in general look-up cases (not only progress variable-enthalpy).; Add dimension to CLookUpTable class to allow for quasi-3D interpolation (linear interpolation between two trapezoidal maps stacked in the third dimension).; ; I added a unit test as a test case with the quasi-3D table to show the correct use of syntax for 3D look-up operations. ## Related Work; Can be used in feature_multilayer_perceptron in the CDataDrivenFluid fluid model for look-up operations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825:319,test,test,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825,3,['test'],['test']
Testability,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:172,test,tests,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:1151,test,test,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['test'],['test']
Testability,"## Proposed Changes; Hello to everyone,; my research group and I are working on the implementation of the CGNS output format.; We think that this could be an useful feature. For the moment, in order to provide the output file in CGNS format you should choose `CGNS` in the `OUTPUT_FILES` option.; This is a first implementation that will need some improvements.; We hope that this could be useful. Authors: Ettore Saetta, Lorenzo Russo, Renato Tognaccini.; TAARG (Theoretical and Applied Aerodynamics Research Group), University of Naples Federico II. ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1131:921,test,test,921,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131,1,['test'],['test']
Testability,"## Proposed Changes; Here I am adding Sutherland's law for viscosity and thermal conductivity for NEMO problems using the native library. Experiments for these types of problems often are run using very low temperatures (~65K). Our current models aren't suited well for these temperature ranges. There is also some general clean up work in the still-not-working Gupta-Yos model and viscous numerics. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1702:993,test,test,993,https://su2code.github.io,https://github.com/su2code/SU2/pull/1702,1,['test'],['test']
Testability,"## Proposed Changes; Here is a funny fix. ## Related Work; #939; #789 fixes a deadlock during restart of unsteady cases (two bugs for the price of one). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/941:463,test,test,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/941,1,['test'],['test']
Testability,"## Proposed Changes; Hi Folks,; I would like your views on something. Many of the convective schemes we have are small variations of each other, and so I was thinking we can maybe have some intermediate numerics classes to make things a bit easier to maintain, quicker to compile etc.; So far I experimented with having a base class for central schemes, the ComputeResidual method is moved to this class and the children classes (Lax, JST, and JST_KE) only implement the artificial dissipation part specific to them.; Similarly AUSM+up(1/2) and SLAU(1/2) only differ in how the mass and pressure fluxes are computed so again a common base for these 4 could be devised. Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way (currently the Roe Jacobian is used).; There is a very small performance penalty (maybe 1-2% for explicit solution methods) but my reason to be looking at the numerics in the first place is that with some small tweaks to the Jacobians we can probably run most schemes at higher CFL (namely increase the dissipative part of the Jacobian to make the system matrix more diagonal dominant) so for implicit solution methods there would be a speedup.; So, what do you think?; Cheers,; Pedro. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691:1605,test,test,1605,https://su2code.github.io,https://github.com/su2code/SU2/pull/691,1,['test'],['test']
Testability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:375,test,test,375,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,2,['test'],['test']
Testability,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1290:1195,test,test,1195,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:835,test,testing,835,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['test'],['testing']
Testability,"## Proposed Changes; Hi all,. The title gives it away. I imagine that piece by piece some commits are chipped in to remove more and more enum numbers. Like that it is more obvious if sth breaks because somewhere someone uses builds on knowing the actual number to do some shenanigans. ; Maybe just removing all in a big blow saves time bit #1220 already shows some limitations. I used the following command (for streamwise periodic in this case) and looked over the results whether I notice sth fishy. Not perfect but might help catchin some easy problems.; ```bash; grep -r 'NO_STREAMWISE_PERIODIC\|PRESSURE_DROP\|STREAMWISE_MASSFLOW\|Streamwise_Periodic_Map\|GetKind_Streamwise_Periodic' SU2_CFD SU2_DOT SU2_GEO SU2_DEF Common --include=*cpp --include=*hpp --include=*inl; ```. So feel free to commit your removals in here and if it breaks and one doesn't want to search for it just revert that and mention the specific enum so that no-one repeats that. Happy enum-removal . ## Related Work; @bigfooted mentioned that a couple of times and #1220 discusses some limitations. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242:1428,test,test,1428,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/847:747,test,test,747,https://su2code.github.io,https://github.com/su2code/SU2/pull/847,3,"['Test', 'test']","['Testcases', 'test']"
Testability,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388:1544,test,test,1544,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,. this PR removes all trailing whitespaces from `.cpp` `.hpp` `.inl` `.py` `.build ` files using ; `find . -type f -name '*.cpp' -exec sed --in-place 's/[[:space:]]\+$//' {} \+`; in the code root. and all tabs are replaced by 2 spaces for `.cpp` `.hpp` `.inl` files using; `find . -name '*.cpp' ! -type d -exec bash -c 'expand -t 2 ""$0"" > /tmp/e && mv /tmp/e ""$0""' {} \;`; This step of course can lead some misalignment if the person introducing the tab did not have tabs rendered as 2 spaces (e.g. 4 spaces per tab). This is up of course for discussion and can be seen as a test vehicle to get everyones discussion. One can try to merge this to check if merge conflicts are really that bad to handle. Of course there will be conflicts on lines you touched as well. A possible solution to merge conflicts is to apply the commands to your filebase and then merge... then it is quite likely that your only merge conflicts are the ones you have with develop anyway. The rough plan discussed with @talbring is to include automatic checking of trailing whitespaces, tabs, overlong lines and possibly other stuff. . Cheers 🍾 to @WallyMaier who seemed to have to have that on his agenda for quite some time. . **Edit**: Only the restructured C*cpp C*hpp C*inl files are currently cleaned to keep the commit size down. This could be extended to other file chunks in the future. See externals/utils/replace-tabs...sh for a little shell script to get the receive the same results as in this PR. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style. **-> now it should be a bit more**; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808:603,test,test,603,https://su2code.github.io,https://github.com/su2code/SU2/pull/808,2,['test'],['test']
Testability,"## Proposed Changes; Hi all,. volume heatflux output is not non-dimensional which is inconsistent with how the rest of volume output is handled.; Note that the History outputs (like TOTAL_HEATFLUX over a bunch of surfaces) is re-dimensionalized -> Apparently that hasn't bothered too many people until now but generally that might be sth we/I want to change (?) Let me know. I fixed it in a way that follows the current convention. In CConjugateHeatInteface.cpp the required heat_flux is (re)computed on its own so I do not expect a problem there but I will check manually as well; - [ ] Reminder Checkmark to actually do so; If there is other places which might be affected let me know. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109:1005,test,test,1005,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:503,test,testcase,503,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,6,"['Test', 'test']","['Testcase', 'test', 'testcase', 'testcases', 'tested']"
Testability,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129:1103,test,tests,1103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:1275,test,test,1275,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:603,test,test,603,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,5,"['Test', 'test']","['TestCases', 'Testcase', 'Testcases', 'test']"
Testability,"## Proposed Changes; Hi everyone! I am starting to implement the Simplified version of the Langtry-Menter transition model following the work in https://doi.org/10.2514/6.2012-672. More updates will follow. ## Related Work; This follows the implementation of the LM model as #1751. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901:582,test,test,582,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901,1,['test'],['test']
Testability,"## Proposed Changes; Hi everyone, . I have found some inconsistencies with respect to the literature on the implementation of the Menter's SST model. I would like to use this branch as test bench for any corrections/improvements made to the SST model. Implementation errors found:; - Use of production limiter constant in the clipping of the cross-diffusion term for the computation of the F1 blending function in CTurbSSTVariable.cpp. ; - SST naming conventions (V in V2003m should stay for Vorticity production term.). Not yet assessed.; - Wrong cross-diffusion term included into the residual of w in turb_sources.hpp. It should not be only the positive value as considered in the computation of the F1 blending function. As stated in https://doi.org/10.2514/3.12149. ""CDkw is the; positive portion of the cross-diffusion term in Eq (A2)"" pag. 1604. Moreover, a clipping has been introduced for large negative values of this term, as suggested in Peng, Shia-Hui, Peter Eliasson, and Lars Davidson. ""Examination of the shear stress transport assumption with a low-Reynolds number k-omega model for aerodynamic flows."" Eq 17.; - Boundary conditions errors at inlets, following the Issue #1851. A fix has been proposed following @pcarruscag suggestions for the supersonic inlet BC.; - Boundary conditions definitions are different than the ones proposed in TMR. Maybe give the user the choice to use the BCs implemented in SU2 or the ones from TMR. Changes to SST model proposed:; - Inclusion of non modified versions of SST. In this case I think that more work is needed to be sure that the correct terms are taken into account everywhere in the code.; - Give the user the possibility of changing the production limiter for TKE (not essential).; - Change values of default turbulent to laminar viscosity to 1e-2 (NASA TMR reports that it should be in the range of 1e-2 to 1e-5, but in SU2 this is set to 10 as default). . I've seen the proposed changes to the lower limits of k and w in #2323 and I t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329:185,test,test,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329,1,['test'],['test']
Testability,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:451,test,test,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,1,['test'],['test']
Testability,"## Proposed Changes; Hi, . A small one: For 1 zone heat equation, the primal restart for the adjoint run was missing the solution reset after the CLEAR_INDICES run. Additionally I added a output_precision to the primal Residual Table for the adjoint. My recommendation is to set OUTPUT_PRECISION= 12 (because that is the fixed field Width of the table) and compare those screen residuals to the history output of the comparing primal simulations. I noticed this problem while looking at non-perfect restarts for CHT cases, which I am currently still debugging. I will make an issue for that soon (Edit #1395 ). Note though that the discrepancies seem subtle and a gradient comparison with FD shows and showed good agreement in the past. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1394:1089,test,test,1089,https://su2code.github.io,https://github.com/su2code/SU2/pull/1394,1,['test'],['test']
Testability,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:1231,test,test,1231,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,1,['test'],['test']
Testability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:460,test,tested,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:1818,test,test,1818,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,1,['test'],['test']
Testability,"## Proposed Changes; I am going through the CConfig.cpp file and adding all the options to config_template.cfg that are not there yet.; I have found some options that do not seem to be used in the code, I will remove them.; There are probably also options in config_template.cfg that do not exist anymore, I will remove them as well. ; ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1934:670,test,test,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1934,1,['test'],['test']
Testability,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/924:918,test,test,918,https://su2code.github.io,https://github.com/su2code/SU2/pull/924,1,['test'],['test']
Testability,"## Proposed Changes; I discovered that the Aachen regression test was actually on its way to divergence. I think this explains why the regression test was behaving inconsistently, although I'm not sure about what caused this problem. I made a new mesh, introduced wall functions as suggested by @joshkellyjak, and switched to second order directly. ; The convergence history is good. See the attached convergence histories obtained with JST starting from scratch with outlet pressure ramp.; ![conv_hist_rotor1](https://github.com/user-attachments/assets/ec30422a-2d31-474e-8b1f-808b95f50599); ![conv_hist_stator1](https://github.com/user-attachments/assets/5f4b27d4-f849-47ef-9ae3-474e18bbd5ce); ![conv_hist_stator2](https://github.com/user-attachments/assets/4f89a191-45bd-47d0-acfc-a384409528c8). I have finally updated the restart files accordingly. ## Related Work; I think these small changes could fix the issues encountered in the past with this test case. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2367:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/2367,4,['test'],['test']
Testability,"## Proposed Changes; I got carried away after the bit I did on #818 (against which this PR should be compared) so I opened a separate PR (I have develop as target branch just to run the tests). @rsanfer I moved, separated, completed the doxy comments, cleaned, etc. all the elasticity numerics classes. I also revised which methods of it are declared in CNumerics and which are for internal use of the CFEAElasticity hierarchy only, let me know what you think. ## Related Work; #583. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/821:186,test,tests,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/821,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:1442,test,test,1442,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,1,['test'],['test']
Testability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:1748,test,test,1748,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['test'],['test']
Testability,"## Proposed Changes; I just added a new folder in the Turbomachinery test cases, containing the configuration files for the Aachen turbine test case. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:69,test,test,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,3,['test'],['test']
Testability,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:1495,benchmark,benchmarks,1495,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"## Proposed Changes; I never found this scheme to be useful (not an improvement in either accuracy or robustness) and it is not used in any tests. MUSCL_FLOW= YES is currently ignored for centered schemes, if we ever want to change that it would lead to backward compatibility issues, since we now have a chance to break it, I'm disallowing setting MUSCL_FLOW= YES with centered schemes. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1990:140,test,tests,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/1990,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1386:918,test,test,918,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386,1,['test'],['test']
Testability,"## Proposed Changes; I stumbled upon three things, one is a fix, the other two I have questions.; @talbring and someone familiar with the SA and SST solvers please have a look at my comments below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/718:508,test,test,508,https://su2code.github.io,https://github.com/su2code/SU2/pull/718,1,['test'],['test']
Testability,"## Proposed Changes; I think one sign was flipped in the Jacobian of the CHT boundary.; I replaced the isothermal BC for a stronger(?) alternative (flying by the seat of my pants here, if it's wrong let me know, but the solver converges better like this).; Fixes issues with deforming heat domains by generalising CDiscAdjMeshSolver::SetSensitivity to accept any solver as ""target"" (instead of considering always the ADJFLOW_SOL position in the solver container). ## Related Work; #951 ; #1061 ; (third time lucky I hope...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107:878,test,test,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107,1,['test'],['test']
Testability,"## Proposed Changes; I tried to do something about the OF's that are not working with the python scripts.; If I got it right, the OF string needs to match the name used for history/screen output, at least to allow the automatically generated history map to be used. ## Related Work; #1075. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1167:642,test,test,642,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167,1,['test'],['test']
Testability,"## Proposed Changes; I will use this draft PR for the work proposed in #789, the idea is to open small (non draft) PR's along the way for major milestones. ## Related Work; #789. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824:489,test,test,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/824,1,['test'],['test']
Testability,"## Proposed Changes; Implemented updated turboperformance methods and adds improved history ouput of turboperformance variables to match screen output. ## Related Work; Follows on from removal of legacy output - https://github.com/su2code/SU2/pull/2003. Implements improved turboperformance calculations used in feature_turbomachinery_restruct_singlezone - https://github.com/su2code/SU2/pull/1316. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2011:830,test,test,830,https://su2code.github.io,https://github.com/su2code/SU2/pull/2011,1,['test'],['test']
Testability,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:1060,test,test,1060,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['test'],['test']
Testability,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,3,['test'],['test']
Testability,"## Proposed Changes; Improvements in CoDiPack make hybrid AD tape evaluations slightly faster. ## Related Work; follow-on PR for #2208 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2228:568,test,test,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/2228,1,['test'],['test']
Testability,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259:156,log,logic,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259,4,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532:1130,test,test,1130,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532,1,['test'],['test']
Testability,"## Proposed Changes; In a joint collaboration with @rsanfer we discovered that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consiste",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:942,test,tests,942,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['test'],['tests']
Testability,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905:354,test,tests,354,https://su2code.github.io,https://github.com/su2code/SU2/pull/905,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; In both [the original paper on DDES](https://doi.org/10.1007/s00162-006-0015-0) and [the paper](https://doi.org/10.2514/6.2017-4284) by @EduardoMolina on hybrid RANS/LES in SU2, the calculation for `r_d` uses kinematic viscosity. In SU2, the dynamic viscosity is currently used. This leads to poor behavior if density is not close to 1. This PR exchanges the dynamic viscosity for the kinematic viscosity. ## Related Work; This is part of the changes originally proposed in PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/575:814,test,test,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/575,1,['test'],['test']
Testability,"## Proposed Changes; In current release of SU2, having, for example, a `MARKER_ISOTHERMAL=(marker, 300)` and `MARKER_PYTHON_CUSTOM=(marker)` causes the BC temperature to be set to a _nondimensional_ value of 300, which is inconsistent with what that marker's value is supposed to mean. This can be seen being set here:. https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/Common/src/geometry/CGeometry.cpp#L2441-L2461. and called for example here:. https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/src/solvers/CNSSolver.cpp#L712-L714. This PR nondimensionalizes any custom boundary temperatures or heat fluxes appropriately so that any setting of them does not need to be nondimensionalized manually before, both in `MARKER_ISOTHERMAL` and `MARKER_HEATFLUX` **and** in any Python code setting values of them. ## Related Work; None that I am aware of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078:1469,test,test,1469,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078,1,['test'],['test']
Testability,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:1493,test,test,1493,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,1,['test'],['test']
Testability,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:1545,test,test,1545,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,1,['test'],['test']
Testability,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1372:314,test,test,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372,1,['test'],['test']
Testability,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:939,test,test,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['test'],['test']
Testability,"## Proposed Changes; Instead of computing transposed matrix vector products, which are harder to parallelize with OpenMP, and having special handling for transposed preconditioners, the matrix is transposed in place, then any preconditioner can be applied.; Some tweaks to support better Krylov discrete adjoint. ## Related Work; #1214. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1228:689,test,test,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/1228,1,['test'],['test']
Testability,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:484,test,test,484,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['test'],['test']
Testability,"## Proposed Changes; Introduction of mixture fraction transport equation to flamelet species solver. This allows for solving partially premixed, laminar combustion problems with heat transfer. The controlling variable names are generalized and have to be specified in the configuration file, such that they can be matched to the controlling variable names in the table. ; Additionally, the output writing for the flamelet variables has been generalized such that it can generate all the necessary outputs for any number of controlling variables.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057:1123,test,test,1123,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057,1,['test'],['test']
Testability,"## Proposed Changes; It had mpi problems and others: https://www.cfd-online.com/Forums/su2/236677-mpi-returns-wrong-objective-function-values.html. The target Cp file was also not formatted correctly, the residuals will change because of that. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1311:596,test,test,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1311,1,['test'],['test']
Testability,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1056:492,test,test,492,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056,1,['test'],['test']
Testability,"## Proposed Changes; Just a small update of the `Makefile.am` to keep the older build system up to date with the new changes.; ; ## Related Work; Meson is a pretty great build system but as long as we are supporting the older build system (`make`), it needs to be kept updated. This happens fairly often and @pcarruscag brought this to my attention some time ago. Not a big deal, but also would be good practice to check PRs to make sure they still support the older build system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/898:791,test,test,791,https://su2code.github.io,https://github.com/su2code/SU2/pull/898,1,['test'],['test']
Testability,"## Proposed Changes; Just small changes suggested by @TobiKattmann (Thank you) in #1357. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1359:441,test,test,441,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359,1,['test'],['test']
Testability,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1535:702,test,test,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535,1,['test'],['test']
Testability,"## Proposed Changes; Keep track of which points have been moved. ## Related Work; closes #2215 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2216:768,test,test,768,https://su2code.github.io,https://github.com/su2code/SU2/pull/2216,1,['test'],['test']
Testability,"## Proposed Changes; Latest develop: in SU2_CFD/obj/Makefile.am line 113 it needs to be `../src/transfer/physics/CTransfer_BoundaryDisplacements.cpp` instead of `../src/transfer/CTransfer_BoundaryDisplacements.cpp`. ; As travis uses the meson build, the autotools build is not checked anymore. ## Related Work; Introduced by #760 and #769 will fix it but I guess that should be merged quickly as everyone who merges develop and uses autotools will get this error. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/782:774,test,test,774,https://su2code.github.io,https://github.com/su2code/SU2/pull/782,1,['test'],['test']
Testability,"## Proposed Changes; Leaks and stuff, @WallyMaier I did not check if the method is implemented correctly, looked decent on the naca0012. ## Related Work; fix #1161. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1166:517,test,test,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/1166,1,['test'],['test']
Testability,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:389,test,test,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,2,['test'],['test']
Testability,"## Proposed Changes; Like for any other command in this file, build_command will add a quote on the left hand side of our command path. So we'll always need another quote on the right hand side. For some reason SOL_FSI, SOL and GEO were missing them, resulting in Errors when attempting to execute them. ## Related Work; Same as #578 but now against develop branch. Sorry for creating a PR against master... ## PR Checklist. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/579:721,test,test,721,https://su2code.github.io,https://github.com/su2code/SU2/pull/579,1,['test'],['test']
Testability,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/959:733,test,test,733,https://su2code.github.io,https://github.com/su2code/SU2/pull/959,1,['test'],['test']
Testability,"## Proposed Changes; Merge feature_input_output into feature_contiguous_cvariable_PR.; There are some issues to address, I will point them out tomorrow. ## Related Work; #724; #753 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/786:493,test,test,493,https://su2code.github.io,https://github.com/su2code/SU2/pull/786,1,['test'],['test']
Testability,"## Proposed Changes; Minor revision on the header file path. ; ; ## Related Work; May resolve a building issue at building SU2_GEO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2084:690,test,test,690,https://su2code.github.io,https://github.com/su2code/SU2/pull/2084,1,['test'],['test']
Testability,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/901:716,test,test,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/901,1,['test'],['test']
Testability,"## Proposed Changes; Move a few files, mainly mpi_structure.hpp, remove the .inl and make the mpi functions const correct according to the modern versions of the MPI standard.; Compilation with ancient MPI will probably need -fpermissive. ## Related Work; #583 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133:615,test,test,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133,1,['test'],['test']
Testability,"## Proposed Changes; Move from CGeometry to an interpolation class (solves the ""numerical recipes problem"", let's not do that again...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1303:489,test,test,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/1303,1,['test'],['test']
Testability,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:147,test,test,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,2,['test'],['test']
Testability,"## Proposed Changes; Multi-passage or full-annulus simulation is very important for turbomachinery case. For example, say one wants to simulate the circumferential features like rotating-stall or inlet distortion effect. Usually one first conducts single-passage RANS computation, then starts multi-passage or even full-annulus URANS from that converged single-passage solution. To do this in SU2, one meets two problems:; 1) Replicate the single-passage grid to user-defined number of passages (including full-annulus); 2) Replicate the single-passage solution. The proposed changes solve the two above mentioned problems.; This function is one of a series of features that enable SU2 to run URANS for turbomachinery cases, which have been shared to the SU2-Turbo group recently. ; This function has been used for my research for almost one year. If necessary, I could add simple test cases as well. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2312:881,test,test,881,https://su2code.github.io,https://github.com/su2code/SU2/pull/2312,2,['test'],['test']
Testability,"## Proposed Changes; New output to visualize the coarse grids.; It is based on coloring nodes, which is a little difficult to visualize with Paraview since it interpolates to elements, anyway:; ![image](https://user-images.githubusercontent.com/38071223/115119619-4ae4ed00-9fa1-11eb-8974-5cd6000c5b21.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1266:659,test,test,659,https://su2code.github.io,https://github.com/su2code/SU2/pull/1266,1,['test'],['test']
Testability,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:393,Test,TestCases,393,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1369:662,test,test,662,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369,1,['test'],['test']
Testability,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:742,test,test,742,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,1,['test'],['test']
Testability,"## Proposed Changes; Pointers are pure evil. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225:397,test,test,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225,1,['test'],['test']
Testability,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:859,test,test,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,1,['test'],['test']
Testability,"## Proposed Changes; Problem: If a given displacement boundary was cut during partitioning the solver would give wrong results.; Reason: When ""de-singularizing"" the stiffness matrix the column was only being deleted by the rank that owned the corresponding node.; Fix: All ranks delete the column (and update the load vector). Before:; ![image](https://user-images.githubusercontent.com/38071223/53267067-619d9b00-36da-11e9-8feb-5e77d5c7f3ef.png). After:; ![image](https://user-images.githubusercontent.com/38071223/53267075-695d3f80-36da-11e9-93bf-2e18e2e649dc.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/658:878,test,test,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/658,1,['test'],['test']
Testability,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127:363,test,tests,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127,4,"['log', 'test']","['logarithmic', 'test', 'tests']"
Testability,"## Proposed Changes; Pruned unnecessary files from the Boost archive included with TecIO; Updated .gitgnores in example folders to ignore .szplt files; Eliminated an unnecessary check for an X11 header file that TecIO no longer relies on. ## Related Work; Fine-tuning to Scott Imlay's TecIO update. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/635:609,test,test,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/635,1,['test'],['test']
Testability,"## Proposed Changes; Quick followup on PR #700 to rename the linear algebra files according to class and move them to a dedicated directory.; Trailing spaces have been stripped and EOL's made consistent.; This does not introduce any code changes. ## Related Work; #583; #700 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/729:587,test,test,587,https://su2code.github.io,https://github.com/su2code/SU2/pull/729,1,['test'],['test']
Testability,"## Proposed Changes; Radial Basis Function interpolation for zone to zone transfer without matching meshes.; Main purpose is to use it with the FSI solvers, direct and adjoint. . ## Related Work; Also:; Adds under-relaxation to the adjoint FSI solver to facilitate convergence of strongly coupled problems.; Fixes missing turbulence solver dependencies.; Adds fluid node sensitivities to the output (before they were not set). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555:977,test,test,977,https://su2code.github.io,https://github.com/su2code/SU2/pull/555,1,['test'],['test']
Testability,"## Proposed Changes; Re-adding required files for test case VV sandia jet and changed regression.yml to get residual values required for vandv.py; @bigfooted @Cristopher-Morales. (This PR is created to get the residual values for the vandv.py script.); . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2100:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2100,2,['test'],['test']
Testability,"## Proposed Changes; Recompute rho and h instead of reconstructing (for performance). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2356:517,test,test,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/2356,1,['test'],['test']
Testability,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1361:401,Test,TestCases,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1374:681,test,test,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374,1,['test'],['test']
Testability,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1203:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:977,test,test,977,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,1,['test'],['test']
Testability,"## Proposed Changes; Remove divergence terms from the source term, use 2003m by default. ## Related Work; Closes #1551. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2062:437,test,test,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/2062,1,['test'],['test']
Testability,"## Proposed Changes; Remove some more duplication, fix some issues, and make the incompressible solvers compatible with OpenMP. ## Related Work; Fix #1175. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1178:508,test,test,508,https://su2code.github.io,https://github.com/su2code/SU2/pull/1178,1,['test'],['test']
Testability,"## Proposed Changes; Remove the legacy output and run turbomachinery cases with the single and multizone drivers.; The special turbomachinery outputs have been lost in the process but folks in the Turbo group are working on re-introducing them under the ""new"" (3 years old already :smile:) output classes. The harmonic balance driver loses very little, it only had one small special output file in the legacy output, we do not have one output per time instance and so the output from all instances is shown on screen and piped to the same history file.; I'm leaving it like this hoping that the vacuum sucks in some new development into HB in SU2.; ; ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2003:968,test,test,968,https://su2code.github.io,https://github.com/su2code/SU2/pull/2003,1,['test'],['test']
Testability,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240:100,test,testcase,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240,3,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1169:726,test,test,726,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169,1,['test'],['test']
Testability,"## Proposed Changes; Remove use of `'U'` mode from Python `open()` function in TestCase.py. . ## Related Work; Issue #2170. Identifies test case that didn't run from `serial_regression.py`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2171:79,Test,TestCase,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/2171,3,"['Test', 'test']","['TestCase', 'test']"
Testability,"## Proposed Changes; Removing a couple unused variables to quash compiler warnings on Mac.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/702:661,test,test,661,https://su2code.github.io,https://github.com/su2code/SU2/pull/702,1,['test'],['test']
Testability,"## Proposed Changes; Reopen #1030 after changes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1038:359,test,test,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1038,1,['test'],['test']
Testability,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180:700,test,test,700,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180,1,['test'],['test']
Testability,"## Proposed Changes; Replacement for a TecIO source file that does not compile with GCC version 9. Functionally identical, just contains shorter lines (more newlines).; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/692:746,test,test,746,https://su2code.github.io,https://github.com/su2code/SU2/pull/692,1,['test'],['test']
Testability,"## Proposed Changes; Restarted FGMRES was running to ""LINEAR_SOLVER_ITER"" once, instead of running to ""LINEAR_SOLVER_RESTART_FREQUENCY"" multiple times. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/557:702,test,test,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/557,1,['test'],['test']
Testability,"## Proposed Changes; Run a bunch of loops to nPoint instead of communicating. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1181:430,test,test,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181,1,['test'],['test']
Testability,"## Proposed Changes; See below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059:342,test,test,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059,1,['test'],['test']
Testability,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428:870,test,test,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428,1,['test'],['test']
Testability,"## Proposed Changes; Should not be multiplied by Roe kappa. ## Related Work; #2198 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2339:516,test,test,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/2339,1,['test'],['test']
Testability,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1237:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237,1,['test'],['test']
Testability,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1188:725,test,test,725,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188,1,['test'],['test']
Testability,"## Proposed Changes; Small change in the way an airfoil section is created when the geometry is evaluated. Previously the slicing of the geometry would fail if there were quads on the surface. This PR fixes that and now geometries are correctly evaluated regardless of the type of element on the surface. . It has been tested on a set of oneraM6 grids with different surface elements. All Triangles:; ![image](https://user-images.githubusercontent.com/30271435/70572050-dbacec80-1b53-11ea-82ea-dcb236c3562d.png). Mix of Quads and Triangles; ![image](https://user-images.githubusercontent.com/30271435/70571972-b61fe300-1b53-11ea-8a14-275e9780eebc.png). Mostly Quads; ![image](https://user-images.githubusercontent.com/30271435/70572104-fb441500-1b53-11ea-8bf4-4990331651c4.png). Taking 25 cuts along the span for each of these meshes, the computed airfoil sections are identical. In the image below, you see the 25 slices of the wing taken from all three meshes. Each airfoil section has 3 lines overlaid lines (one from each mesh): . ![image](https://user-images.githubusercontent.com/30271435/70572309-6a216e00-1b54-11ea-8ea8-65df47f2fd78.png). ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/835:319,test,tested,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/835,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; Small fix to add the rotating frame coefficients (CT, CQ and CMerit) to the output. ; ; ## Related Work; Issue #957 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/962:689,test,test,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/962,1,['test'],['test']
Testability,"## Proposed Changes; Small fixes and replacing the last ** and *** in CEulerSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1224:436,test,test,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/1224,1,['test'],['test']
Testability,"## Proposed Changes; Small fixes for FFD deformation of FSI problem using SU2_DEF. . - SetMesh_Files which writes the output .su2 file was called only for single zone, which has now been changed to the number of zones in the problem. - When writing the output mesh, SetSU2_MeshASCII closes the file after the first zone but it doesn't get reopened for the second zone. This function is only called by SetMesh_Files in COutput, where the the output file is opened and closed by the master node, therefore it is not necessary to the close the output file inside SetSU2_MeshASCII. . - When writing the deformed surface for the structural mesh, the same file name as the original was used thus overwriting the original file. '_def' has been appended to the filename similar to the fluid only case. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/617:1497,test,test,1497,https://su2code.github.io,https://github.com/su2code/SU2/pull/617,1,['test'],['test']
Testability,"## Proposed Changes; Small follow-on from #2039. Fixes two data races that did not affect the results but polluted the thread sanitizer findings (write-write for value that is not read and read-write for value that is overwritten with itself). ## Related Work; #2039. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2046:825,test,test,825,https://su2code.github.io,https://github.com/su2code/SU2/pull/2046,1,['test'],['test']
Testability,"## Proposed Changes; Small update of the Xcode project. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/832:760,test,test,760,https://su2code.github.io,https://github.com/su2code/SU2/pull/832,1,['test'],['test']
Testability,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1436:723,test,test,723,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436,1,['test'],['test']
Testability,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1020:1045,test,test,1045,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020,1,['test'],['test']
Testability,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/975:207,test,tests,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/975,2,['test'],['tests']
Testability,"## Proposed Changes; Some folks are having issues on Windows: https://www.cfd-online.com/Forums/su2/227916-problem-opening-vtu-file-paraview.html; @talbring and I think it might be the classic ""unsigned long is 32bits on Windows"" problem, maybe this fixes it, I do not have access to a Windows machine, if someone could test this it would be great. ## Related Work; #980; Resolves #1060. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055:320,test,test,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055,1,['test'],['test']
Testability,"## Proposed Changes; Some tests in the `parallel_regression.py` was running in serial with the `SU2_CFD` command this PR changes them to default (`mpirun -np 2 SU2_CFD`). . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1977:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1977,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Some tweaks to the new multi-physics discrete adjoint framework plus the beginning of changes required to have FSI adjoints within it. No legacy code has been removed or disabled, yet... All explained below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/809:539,test,test,539,https://su2code.github.io,https://github.com/su2code/SU2/pull/809,1,['test'],['test']
Testability,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:565,test,test,565,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['test'],['test']
Testability,"## Proposed Changes; Special signal handling for SIGTERM. When SIGTERM is sent to the solver, we catch it and simply exit the for-loop for the number of iterations. Files will then automatically be saved. ## Related Work; Related to Github discussion #2094 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110,1,['test'],['test']
Testability,"## Proposed Changes; Split `geometry_structure.cpp/hpp` in one file per class, strip spaces, replace tabs, move inlines to .hpp, etc. This depends on #790, the only open PR affected by this is #773, @TobiKattmann I think it should be an easy merge since you only added new code. ## Related Work; #583. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/825:612,test,test,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/825,1,['test'],['test']
Testability,"## Proposed Changes; Test if the ASLR fix (#2241, #2242) is still needed. ASAN and TSAN tests pass without the fix, the issue has probably been fixed in the GitHub runner. ## Related Work; #2241, #2242. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2341:21,Test,Test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2341,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"## Proposed Changes; The CRot value was set to 1.0 for the HLPW5 but the standard value is 2.0 as suggested in TMR. Plus, there may be some inconsistencies with the negative branch of SA when used with the R variant. $\hat{S}$ should be used in the computation of the production term when $\hat{\nu}>0$. When $\hat{\nu}<0$, instead, the vorticity $\Omega$ should be used together with the $c_{t3}$ constant. Citing TMR:. ""This model is the same as the ""standard"" version (SA), except that the (SA-R) production term becomes: . $c_{b1}(1-f_{t2})[\hat{S}+C_{rot}min(0,S-\Omega)]\hat{\nu}$. ... However, a negative production term is not acceptable for the negative branch ($\hat{\nu} < 0$) of the (SA-neg) model. If coding (SA-neg-R), a possible C0 continuous production term in the negative (SA-neg-R) branch is the following: . $c_{b1}(1-c_{t3})[\hat{\Omega}+C_{rot}min(0,S-\Omega)]\hat{\nu}$. "". I don't understand if the second production term has to be used everytime SA-neg is considered or only at the points where $\hat{\nu}<0$. If it is already taken into account, then I'll modify the PR. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352:1785,test,test,1785,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352,1,['test'],['test']
Testability,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1070:1269,test,test,1269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070,1,['test'],['test']
Testability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:1105,test,test,1105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,1,['test'],['test']
Testability,"## Proposed Changes; The RHS is defined as the residual instead of the force vector, this is required because in Solve_b the adjoints of the Jacobian are tacitly assumed to be 0, this assumption is only valid if the solution of the primal linear system is 0 and that only happens when the RHS is 0 (e.g. the residual of a converged problem).; In a nutshell linear elasticity is now done like nonlinear, i.e. compute 'delta U' instead of 'U' (even if we only need one 'delta U' in the direct solver). This led to changes in how the RHS for time domain problems is computed (I would appreciate a second pair of eyes especially on those changes).; This fix also adds support for multiple materials in linear elasticity simulations.; I will add a regression test for this if the fix is found to be good. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/571:754,test,test,754,https://su2code.github.io,https://github.com/su2code/SU2/pull/571,2,['test'],['test']
Testability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:1302,test,test,1302,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['test'],['test']
Testability,"## Proposed Changes; The computation was done in two loops to account for period comms in between.; When there are no periodic comms one loop is sufficient, better locality, more effective AD accumulation.; To do this the function was split in two, which is also good. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1031:602,test,test,602,https://su2code.github.io,https://github.com/su2code/SU2/pull/1031,1,['test'],['test']
Testability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:615,test,tests,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; The current PR serves two purposes. First, it extends the sliding interface capabilities for multi-zone fluid-fluid interfaces to incompressible flows. Until now, these features were only available for compressible flows. For example, take the following case of a viscous flow enclosed by diathermal walls and discretized using two different zones with a permeable, non-matching interface:. ![testcase](https://user-images.githubusercontent.com/8706821/51894668-b6cee100-23a8-11e9-8ee8-4b3d846417b2.png); ![discretization](https://user-images.githubusercontent.com/8706821/51894939-5e4c1380-23a9-11e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the inc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:414,test,testcase,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['test'],['testcase']
Testability,"## Proposed Changes; The current code only applies the option WINDOW_START_ITER to the history output, but the flow vars are counted from the first step after the restart. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2251:991,test,test,991,https://su2code.github.io,https://github.com/su2code/SU2/pull/2251,2,['test'],['test']
Testability,"## Proposed Changes; The current file comparison that is used for regression tests, does not feature a possibility to specify a tolerance or a threshold. This PR implements such a feature and does not affect the existing regression tests.; . ## Related Work; Currently, there are no regression tests that make use of this feature and the PR does not include a new test that would use it. However, the feature_new_flamelet branch already uses this feature. This branch here is to split off the feature as it is not related to flamelet models but it is a general feature that can used for a variety of regression tests that use a file comparison. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [O] I have added a test case that demonstrates my contribution, if necessary.; - [O] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2031:77,test,tests,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/2031,6,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; The doc for `merge` says the function should be skipped if `NUMBER_PART > 1` . The if statement had a typo in it and my models were error in the function. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1739:750,test,test,750,https://su2code.github.io,https://github.com/su2code/SU2/pull/1739,1,['test'],['test']
Testability,"## Proposed Changes; The files of the external CGNS library included with SU2 are upgraded to 4.4 release.; This will allow reading files generated with recent version of CGNS that are currently rejected because SU2 included version is a bit old. ## Related Work; No issue created yet but some users did comment about it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2179:993,test,test,993,https://su2code.github.io,https://github.com/su2code/SU2/pull/2179,1,['test'],['test']
Testability,"## Proposed Changes; The first work item from #824 is kind of in place code-wise (lots of testing required).; I will use this PR to document the implementation, while continuing the work on the main PR, and to keep the discussion ""encapsulated"". ## Related Work; #789, #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830:90,test,testing,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/830,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256:971,test,test,971,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256,1,['test'],['test']
Testability,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:1639,test,test,1639,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['test'],['test']
Testability,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913:1244,test,test,1244,https://su2code.github.io,https://github.com/su2code/SU2/pull/913,1,['test'],['test']
Testability,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260:515,test,test,515,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260,3,['test'],['test']
Testability,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022:586,test,test,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022,3,"['stub', 'test']","['stubborn', 'test']"
Testability,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:79,test,tests,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,5,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; The velocity component used in the axisymmetric residual is now considered as an input for preaccumulation in the residual computation. When not considered, the use of axisymmetry and the SST model will result in wrong sensitivities when using the discrete adjoint method. I also wanted to note that there does not seem to be any treatment of axisymmetric cases for the SA model. Is this correct or does it make sense to include a warning? We could, for example, do that in the context of this pull request. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571:1125,test,test,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571,1,['test'],['test']
Testability,"## Proposed Changes; The wall function model of Nichols and Nelson was basically implemented in the same way for the compressible and the incompressible solver. But for the incompressible solver, the frictional heating part does not make sense, so it is removed. In the compressible part, some lines have been moved to make comparison between the comp/incomp model easier. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1741:949,test,test,949,https://su2code.github.io,https://github.com/su2code/SU2/pull/1741,1,['test'],['test']
Testability,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:961,test,tests,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; There were some changes to the config_template options for the DV indices which was not reflected in the python code and the TestCases config files. For example, the index for HICKS_HENNE bumps changed from 1 to 30 in the config_template.cfg file. But this change was not reflected in the python scripts or any of the TestCases config files. This PR fixes this issue. ; . ## Related Work; #733 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/757:146,Test,TestCases,146,https://su2code.github.io,https://github.com/su2code/SU2/pull/757,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:1669,test,test,1669,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,1,['test'],['test']
Testability,"## Proposed Changes; These additions will make it possible to let the discrete adjoint run for the heat solver. They do also include; - some bugfixes within the heat solver,; - a discrete adjoint heat iteration so that the solver could be run stand-alone in the future (e.g. for solids or coupled). As there is no general discrete adjoint driver yet, I wanted to avoid another specific one (e.g. 'CDiscAdjHeatDriver') as I could directly go for the generalized version. It is finished up to 90% and a pull request will be opened once we agreed on these changes. So for the test case protecting this functionality, the heat solver runs weakly coupled to an incompressible flow. Sensitivities have been validated. . ## Related Work; Pull requests for a general multizone adjoint driver will be opened hereafter. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619:573,test,test,573,https://su2code.github.io,https://github.com/su2code/SU2/pull/619,2,['test'],['test']
Testability,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/854:128,test,test,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/854,2,['test'],['test']
Testability,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/873:1249,test,test,1249,https://su2code.github.io,https://github.com/su2code/SU2/pull/873,1,['test'],['test']
Testability,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:1090,test,test,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356:135,test,testing,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1120:1170,test,test,1170,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120,1,['test'],['test']
Testability,"## Proposed Changes; This PR adds a regression testing pipeline based on the new Github actions features (https://github.com/su2code/SU2/actions). It uses docker containers for building and running the tests (https://hub.docker.com/r/su2code/build-su2 and https://hub.docker.com/r/su2code/test-su2, respectively, based on Ubuntu18.04/gcc7.4/OpenMPI2). This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:47,test,testing,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,6,['test'],"['test', 'test-', 'testing', 'tests']"
Testability,"## Proposed Changes; This PR adds the capability to simulate the AIR-7 gas model using SU2TCLib for viscous problems. Specific contributions include:; - Fix Gupta-Yos transport models for all flows (including ionized); - inclusion of Coulomb interaction cross sections for ion-ion collisions. Following the implementation detailed in Scalabrin's thesis. ## Related Work; PRs #1497 #1555 . Update to NEMO documentation includes description of GY model, see: https://github.com/su2code/su2code.github.io/pull/116. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887:1069,test,test,1069,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887,1,['test'],['test']
Testability,"## Proposed Changes; This PR adds the new instance layer to SU2_DOT. This is necessary for running it with multiple zones (right now a wrong allocation causes it to crash).; ; ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/613:486,test,test,486,https://su2code.github.io,https://github.com/su2code/SU2/pull/613,1,['test'],['test']
Testability,"## Proposed Changes; This PR adds the non-constant thermal conductivities to the NEMO output. ## Related Work; Discussion #1888 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1889:687,test,test,687,https://su2code.github.io,https://github.com/su2code/SU2/pull/1889,1,['test'],['test']
Testability,"## Proposed Changes; This PR automates the address sanitizer analysis that lead to the fixes in #2212. I'll make the additions step by step, to see if things in the CI pipeline work as expected. ## Related Work; https://github.com/su2code/Docker-Builds/pull/24, #2212, #2068, #2213. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:714,test,test,714,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['test'],['test']
Testability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:908,test,test,908,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['test'],['test']
Testability,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1137:913,test,test,913,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137,1,['test'],['test']
Testability,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1077:827,test,test,827,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077,1,['test'],['test']
Testability,"## Proposed Changes; This PR continues the CoDiPack 2 update #1903 after further testing. Fixes a data race. ## Related Work; #1903 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2009:81,test,testing,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/2009,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This PR fixes a bug in the restart of problems which involve dynamic meshes and turbulence.; Given that the Grid Velocities are written in the restart files after the turbulence variables, the indices must me incremented when the restart file is being read in.; At this moment that does not happen, as the variable index is incremented but later reset, and therefore the GridVel container receives incorrect values. ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/618:1007,test,test,1007,https://su2code.github.io,https://github.com/su2code/SU2/pull/618,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:1750,test,test,1750,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:914,test,test,914,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes a couple of bugs identified in the incompressible solver:; - In the computation of the FDS fluxes, we need to use DensityInc_i and DensityInc_j in the computation of the preconditioner, instead of Density_i/Density_j, which are not initialized in the function.; - The per-surface output for heatflux and max heatflux was receiving information from an incorrect container. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/588:957,test,test,957,https://su2code.github.io,https://github.com/su2code/SU2/pull/588,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes an issue in the discrete adjoint multizone driver where adjoints are seeded before sufficient adjoint vector size is guaranteed, resulting in an objective function gradient of zero. The PR also contains other small fixes.; ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2112:577,test,test,577,https://su2code.github.io,https://github.com/su2code/SU2/pull/2112,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes small issues in the meson build system that I noticed during recent work on SU2.; 1. deprecation warnings about `meson.source_root()`; 2. an incorrectly displayed `ninja` command. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2093:532,test,test,532,https://su2code.github.io,https://github.com/su2code/SU2/pull/2093,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271,3,['test'],['test']
Testability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:1264,test,test,1264,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['test'],['test']
Testability,"## Proposed Changes; This PR includes a fix that will reenable CHT for compressible flow (unintentionally out of service in v7 so far). A regression test was added to protect this functionality together with some general CHT-related cleanups.; ; ## Related Work; Fixes issue #838 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839:149,test,test,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/839,2,['test'],['test']
Testability,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872:1451,test,test,1451,https://su2code.github.io,https://github.com/su2code/SU2/pull/872,1,['test'],['test']
Testability,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:632,test,test,632,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,2,['test'],['test']
Testability,"## Proposed Changes; This PR introduces surface deformation routines in CMeshSolver and enables discrete adjoint calculations for deforming mesh problems. Gradient verification for a pitching airfoil using a deforming mesh is good compared against rigid motion for the same pitching airfoil:. ![image](https://user-images.githubusercontent.com/33747655/70388845-407b1200-19af-11ea-9bf0-e016547197b5.png). ## Related Work; Contains PR #919 which cleaned up legacy FSI and deformation methods ; Builds on work previously discussed in PR #766 ; Includes fix for issue #860 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/833:882,test,test,882,https://su2code.github.io,https://github.com/su2code/SU2/pull/833,1,['test'],['test']
Testability,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1422:1231,test,test,1231,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422,1,['test'],['test']
Testability,"## Proposed Changes; This PR is for fixing #2276. With the observations in #2276 and after discussion with @joshkellyjak, the fix proposed in #2246 is probably the correct one. ## Related Work; #2158, #2246, #2260. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2293:646,test,test,646,https://su2code.github.io,https://github.com/su2code/SU2/pull/2293,1,['test'],['test']
Testability,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:1631,test,test,1631,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['test'],['test']
Testability,"## Proposed Changes; This PR removes `CMultiphysicsZonalDriver` from the legacy `CDriver.cpp` and related config options.; It was part of some initial contributions that went into a major driver structure rework. It's now just a leftover which is fully superseded by the new `CMultizoneDriver` anyway. It's meant just as a quick deletion to tidy up the code before the next release.; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/776:696,test,test,696,https://su2code.github.io,https://github.com/su2code/SU2/pull/776,1,['test'],['test']
Testability,"## Proposed Changes; This PR removes python2.7 from the test matrix in travis. We have a lot of development right now and until we have found a better way to speed up regression tests, this is, I think, the best approach to remove that roadblock at the moment:. - There is no real development done in the python framework at the moment; - Usually the incompatibilities between python 2 and 3 can be resolved quite easily.; - Python 2 is marked as deprecated anyway. If you have other thoughts let me know. There might be other ways like the caching feature of travis, but it takes effort and time to modify our system. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709:56,test,test,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/709,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This PR restructures the CTransfer parent and child classes following discussions in #583 and #725. Given that I already started it in #760, I just went ahead and moved all the remaining classes. It should be compared to `feature_elastic_mesh_solver`. ## Related Work; Depends on #760 and should be merged afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:889,test,test,889,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['test'],['test']
Testability,"## Proposed Changes; This PR started as a collection of small fixes for issues I came across during recent work with SU2, mostly in the build/test system, but then the focus shifted towards general cleanup of the regression tests. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1764:142,test,test,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1764,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This PR updates codi and medi to the newest version. For externally differentiated functions and preaccumulation it now uses the interfaces provided by codi. . ## Related Work; This fixes #659. . PRs #650 and #653 should be merged in before (I will deal with this next week). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:847,test,test,847,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['test'],['test']
Testability,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:888,test,test,888,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['test'],['test']
Testability,## Proposed Changes; This PR will add heat flux to the values that are checked in the regression testing. This should help capture more of the code performance. . ## Related Work; @jtneedels noticed a possible issue of changes made in #1417. This will help avoid any potential unwanted changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698:97,test,testing,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698,1,['test'],['testing']
Testability,"## Proposed Changes; This PR will help address issues seen in SU2 when symmetry planes are applied. These include pressure oscillations at sym plane & solid wall interfaces (i.e. blunt bodies). It will also change the implementation of the sym plane in SU2-NEMO to that used by the rest of the code, the template function in CFVMFlowSolverBase.inl.; . ## Related Work; This PR will largely utilize the work done in #1168 by Fabio Morgado. It is in addition to #657. It will address several open issues #1625 and #1125. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1635:1111,test,test,1111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1635,1,['test'],['test']
Testability,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160:553,test,test,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160,5,"['Test', 'log', 'test']","['TestCases', 'log', 'test']"
Testability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:1134,test,test,1134,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['test'],['test']
Testability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:1133,test,test,1133,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['test'],['test']
Testability,"## Proposed Changes; This adds a check for a non-zero/non-negative reynolds number if running NS or RANS. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/668:402,test,test,402,https://su2code.github.io,https://github.com/su2code/SU2/pull/668,1,['test'],['test']
Testability,"## Proposed Changes; This adds a check to prevent SU2 continuing diverge/reach extremely large residuals. This seems to be a feature request in both the SU2 issues (#38) and on the CFD-Online forum. . This is similiar to the divergence criteria but is activated at residuals greater than 10^12 . This number can change, it was arbitrarily chosen. ; ; - [ x] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/697:647,test,test,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/697,1,['test'],['test']
Testability,"## Proposed Changes; This adds more AUSM family schemes. . ## Related Work; This is a continuation of PR #1773 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1943:670,test,test,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1943,1,['test'],['test']
Testability,"## Proposed Changes; This adds the source term for axisymmetry to the residual computation for species transport. The source term is zero for non-axisymmetric cases. . ## Related Work; This builds upon the closed pull request #1762 and is connected to #card-71271518 as an aspect of feature_flamelet. ; The change uses the implementation by @bigfooted on feature_flamelet. The implemented source term was checked against literature/own derivation by @Cristopher-Morales. ; I would like to set up a regression test as soon as #1784 is merged. ## PR Checklist; - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1785:509,test,test,509,https://su2code.github.io,https://github.com/su2code/SU2/pull/1785,2,['test'],['test']
Testability,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:128,test,testing,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This allows UQ and NICF features to be used with the vectorized centered schemes.; UQ can also be used with the vectorized Roe scheme, but not NICF as that would not be equivalent to the general Roe implementation.; With this the older implementations were removed as they are never used as boundary numerics. ## Related Work; #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1149:707,test,test,707,https://su2code.github.io,https://github.com/su2code/SU2/pull/1149,1,['test'],['test']
Testability,"## Proposed Changes; This allows one to define a triple physics simulation where structural displacements due to fluid forces are also applied to a heat transfer solid domain ; [example.zip](https://github.com/su2code/SU2/files/4541290/example.zip); but where the temperature of that domain does not influence the elastic response (for now),. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/951:653,test,test,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/951,1,['test'],['test']
Testability,"## Proposed Changes; This change makes it easier to use system-wide Meson and Ninja in order to build SU2 from source. ## Related Work; See issue #1945 for more information. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951:731,test,test,731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951,1,['test'],['test']
Testability,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1482:324,test,test,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482,1,['test'],['test']
Testability,"## Proposed Changes; This continues the CoDiPack 2 Update. The multithreading features in CoDiPack have been merged, this PR updates SU2 to the merged CoDiPack version. ## Related Work; #1903 #2009. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2013:516,test,test,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/2013,1,['test'],['test']
Testability,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:1090,test,test,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['test'],['test']
Testability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:1731,test,test,1731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,1,['test'],['test']
Testability,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:1765,test,test,1765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,1,['test'],['test']
Testability,"## Proposed Changes; This fix resolves a problem related to mismatched gradients between the forward and reverse mode of AD when considering EFFICIENCY as the objective function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074:730,test,test,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074,1,['test'],['test']
Testability,"## Proposed Changes; This fixes the update of the dual time step for species transport, enabling transient simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2260:808,test,test,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/2260,1,['test'],['test']
Testability,"## Proposed Changes; This implementation allows the connection of an inlet surface with an outlet surface (e.g. to simulate internal channels inside a model). In order to do so, it has been necessary to create an option OUTLET_TYPE that will be used in the future (e.g. to add a mass flow driver for the outlet - currently only static pressure is implemented - ). To sum up, to connect an inlet with an outlet you should type the following:. % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW, SURFACE_OUTLET); INLET_TYPE= SURFACE_OUTLET; % Outlet boundary type (PRESSURE_OUTLET, SURFACE_INLET); OUTLET_TYPE= SURFACE_INLET. In the future, we should be able to specify pressure losses inside the ""pipe"" that connect the surfaces.; ; ## Related Work; This is a new implementation that solves passive flow control problems where we are not interested in creating a complicated mesh inside the main volume to define the internal channels/pipes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/538:1491,test,test,1491,https://su2code.github.io,https://github.com/su2code/SU2/pull/538,1,['test'],['test']
Testability,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399:1009,test,test,1009,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399,1,['test'],['test']
Testability,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:782,test,test,782,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,1,['test'],['test']
Testability,"## Proposed Changes; This is a bugfix for the mesh writer, which was outputting the wrong number of elements when run in parallel. . ## Related Work; [Post on CFD online](https://www.cfd-online.com/Forums/su2-shape-design/224088-segfault-second-dsn-iteration.html#post757055) that made me aware of that problem. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/862:862,test,test,862,https://su2code.github.io,https://github.com/su2code/SU2/pull/862,1,['test'],['test']
Testability,"## Proposed Changes; This is a chore PR to const variables when allowed and to alter loops to prevent declared iterators. This may be unnecessary/overkill. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923:715,test,test,715,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923,1,['test'],['test']
Testability,"## Proposed Changes; This is a draft pull request for the implementation of a supersonic inlet profile feature. the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC will replaced with vertex values. ## Related Work; Modifications to related codes, recompelling it and doing proper tests using supersonic cases.; Iterations. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2326:315,test,tests,315,https://su2code.github.io,https://github.com/su2code/SU2/pull/2326,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This is a follow-up of #798 for minor changes. ; Feel free to add bug fixes and similar for problems that you might came across during testing. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/807:156,test,testing,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/807,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This is a little improvement to the multipoint optimization setup. Currently if you want to run multipoint optimization with restarts, the python scripts only keep track of one restart file (the first of the multipoint conditions). This is acceptable when the multipoint conditions are similar, but does not work when the conditions are very different. For example, if one point is supersonic and the other is subsonic, and the subsonic case is restarted from the supersonic solution, it immediately diverges. . This PR allows the python scripts to keep track of restarts for each point in the multipoint set up. It is robust in the sense that you can start with 0 restart files or some subset of restart files. For example, if you are running a 3 point optimization but only have the restart for one of the points, this will handle that case by starting the other two points from scratch, but keeping track of the restart files after the first design iteration. There is a naming convention that is presumed. The restarts get 'point#' added to its base name. So for example, if the SOLUTION_FILENAME= solution_flow.dat then it will look for files named solution_flow_point0.dat, solution_flow_point1.dat and so on. For adjoints this is solution_adj_point0_cd.dat etc. This naming convention can be tweaked according to comments. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:1903,test,test,1903,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['test'],['test']
Testability,"## Proposed Changes; This is a preparation for the upcoming release 7 ""Blackbird"". The schedule is planned like this:. - **08/27**: Pull request opening window ends. PRs with **new features** opened after this date will not be considered for v7.0.0.; - **09/01 - 09/29**: Testing phase. Only PRs with **bugfixes** and remaining PRs opened before **08/27** will be merged during that phase. ; - **09/30**: Release date. Note that we will have a stricter policy for new features for this release: Features with no documentation or tutorial(s) will not be advertised. Please also remember to prepare for #724. . If you have any questions, please let me know. Also if you can offer any help with testing/updating documentation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762:272,Test,Testing,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/762,3,"['Test', 'test']","['Testing', 'test', 'testing']"
Testability,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849:1477,test,test,1477,https://su2code.github.io,https://github.com/su2code/SU2/pull/849,1,['test'],['test']
Testability,"## Proposed Changes; This is a simple enhancement of the fixed CL mode. Currently the Fixed CL mode only exits when the specified iteration limit is reached. With these changes, the mode is a little more robust and checks for the specified Residual or Cauchy convergence and additionally checks that the CL is converged to the target CL value to within CAUCHY_EPS. I have currently preserved the Finite Differencing that occurs at the end of the Fixed CL mode. I am not sure why this is required and would like to get rid of it if possible. If there is a reason for the finite differencing to calculate dCL/dAlpha, please let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:1185,test,test,1185,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,2,['test'],['test']
Testability,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:1260,test,test,1260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['test'],['test']
Testability,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1054:335,log,logic,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; This is a small one, just saving some memory in the FEA solver by not allocating some unnecessary double structures outside the boundaries. . ## Related Work; General maintenance and improvements. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663:528,test,test,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/663,1,['test'],['test']
Testability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:1635,test,test,1635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['test'],['test']
Testability,"## Proposed Changes; This is a tiny PR to add a conditional operator in CFlowOutput.cpp to avoid calling to GetNodes() function if the solver is a FEM/DG solver. In one of the early commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:413,assert,assertion,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,2,"['assert', 'test']","['assertion', 'test']"
Testability,"## Proposed Changes; This is a very short PR with two quick fixes. The first is a fix for accurate multizone adjoints when multigrid is enabled. Second fix is to re-enable time-averaged history output for incompressible flows (direct differentiation for unsteady, incompressible flow also works again as a result). ## Related Work; N/A. ## PR Checklist. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/965:650,test,test,650,https://su2code.github.io,https://github.com/su2code/SU2/pull/965,1,['test'],['test']
Testability,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530:1203,test,test,1203,https://su2code.github.io,https://github.com/su2code/SU2/pull/530,1,['test'],['test']
Testability,"## Proposed Changes; This is further step in restructuring the files. In this PR I splitted the primal_grid_structure and dual_grid_structure. Further I moved the mesh readers in to a separate directory. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/848:904,test,test,904,https://su2code.github.io,https://github.com/su2code/SU2/pull/848,1,['test'],['test']
Testability,"## Proposed Changes; This is mainly to address #721 but it may have good side effects in other areas (see comments below).; Every turbulent testcase will fail and so far I only tested SA and SST on a simple airfoil case. ## Related Work; Addresses #721 ; Should help a bit with #594; May help with #711. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/726:140,test,testcase,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/726,3,['test'],"['test', 'testcase', 'tested']"
Testability,"## Proposed Changes; This is one I have been trying to solve for a while and now found a solution that is not a hack.; Under some circumstances that I do not understand (very case dependent) one of the cross terms (structure w.r.t. fluid) creates spurious values, e.g.:; ![image](https://user-images.githubusercontent.com/38071223/48981547-af503a80-f0ce-11e8-9875-1b9a2d5fd50d.png); The fix I found is to change the recording strategy, instead of making 3 recordings of the structural iteration (one for each set of input variables) this is merged into a single recording.; So from this:; ![image](https://user-images.githubusercontent.com/38071223/48981607-aad85180-f0cf-11e8-9740-dd6f51f249c3.png); To this:; ![image](https://user-images.githubusercontent.com/38071223/48981615-bc215e00-f0cf-11e8-8dd1-c2ae00b3a973.png); So far this has fixed the issue for a range of cases, large to small.; [Here](https://github.com/su2code/SU2/files/2613239/spurious_values.zip) you can see the difference between running the case in the example picture with and without the fix.; . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615:1381,test,test,1381,https://su2code.github.io,https://github.com/su2code/SU2/pull/615,1,['test'],['test']
Testability,"## Proposed Changes; This is the beginning of the work proposed in #716 .; Comments will follow as work progresses.; I would appreciate if we could keep the restructuring of files that use CVariable heavily for when this is done. ## Related Work; #716. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753:803,test,test,803,https://su2code.github.io,https://github.com/su2code/SU2/pull/753,1,['test'],['test']
Testability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:681,test,test,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,2,['test'],['test']
Testability,"## Proposed Changes; This new feature aims to get viscosity and conductivity from CoolProp library.; . ## Related Work; This project is an extension of PR #1806. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819:719,test,test,719,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819,1,['test'],['test']
Testability,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929:622,test,test,622,https://su2code.github.io,https://github.com/su2code/SU2/pull/929,1,['test'],['test']
Testability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:1284,test,test,1284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['test'],['test']
Testability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:1284,test,test,1284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,2,['test'],['test']
Testability,"## Proposed Changes; This pull request adds the test case that we used for the Fuel paper. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239,2,['test'],['test']
Testability,"## Proposed Changes; This pull request adds the test case that we used for the Fuel paper. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2237:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/2237,2,['test'],['test']
Testability,"## Proposed Changes; This pull request is the second part of plan (B) described in https://github.com/su2code/su2code.github.io/pull/134#issuecomment-1616012091. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2066:479,test,test,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/2066,1,['test'],['test']
Testability,"## Proposed Changes; This pull request removes the old Poisson and Wave solvers, which are currently unsupported, and replaces the legacy heat solver with the FVM heat solver incorporated in #505. ## Related Work; This is an intermediate step before there is a general restructuring of the input and output, currently under development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/573:887,test,test,887,https://su2code.github.io,https://github.com/su2code/SU2/pull/573,1,['test'],['test']
Testability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:1825,test,test,1825,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['test'],['test']
Testability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:608,test,test,608,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['test'],['test']
Testability,"## Proposed Changes; This replaces the bisection method in NEMO to compute the Tve values. The NR solver should be faster and offer some speed up, I believe the ComputeTemperatures function is the slowest in NEMO. So I have some cases running to highlight the speedup (hopefully not a slowdown). From a quick glance, it seems the iteration time is very sensitive to the scaling factor. . Lastly, this will probably destroy the regression tests for NEMO, since our temperatures will be slightly different now. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1627:438,test,tests,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1627,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1370:736,test,test,736,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370,1,['test'],['test']
Testability,"## Proposed Changes; This small PR fixes a bug in the ADT that occurs in extreme situations. Basically the less than is replaced by less equal than (and similar for greater than); . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/640:755,test,test,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/640,1,['test'],['test']
Testability,"## Proposed Changes; This small PR fixes a number of compiler warnings for g++ 8.2 in full debug mode. It should not change any functionality. Also there is a small bug fix in the ADT, where the Jacobian matrix for the containment search inside a quadrilateral was computed wrongly.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/639:859,test,test,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/639,1,['test'],['test']
Testability,"## Proposed Changes; This small PR fixes the interpolation weights of the function CADTElemClass::CoorInTetrahedron. Thanks @monika1387 for bringing that to our attention.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1016:751,test,test,751,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016,1,['test'],['test']
Testability,"## Proposed Changes; This small PR introduces the SST turbulence model with sustaining terms, such that the model is free-stream preserving. Especially for external flows, where the farfield boundary is far away from the body, the turbulent intensity decays from the prescribed free stream values. This is not too much an issue when the model is run in fully turbulent mode, but it becomes important when it is combined with a transition model. It is the intention to add the transition model later on.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/764:1079,test,test,1079,https://su2code.github.io,https://github.com/su2code/SU2/pull/764,2,['test'],['test']
Testability,"## Proposed Changes; This small PR modifies the error handling, such that the error message is also written when the call to the error handler is not collective. The function CBaseMPIWrapper::Error is not so small anymore, so it may be an idea to move it to the .cpp file instead of inlining it.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:874,test,test,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['test'],['test']
Testability,"## Proposed Changes; This small PR reverses the sequence of y+ and muT for Tecplot output files. Now it is consistent with the paraview sequence as well as the actual output.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/607:753,test,test,753,https://su2code.github.io,https://github.com/su2code/SU2/pull/607,1,['test'],['test']
Testability,"## Proposed Changes; This temporarily disables the compilation of TecIO in travis to reduce the overall runtime of the jobs. We are not checking the tecplot binary output anyway at the moment.; . ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/611:765,test,test,765,https://su2code.github.io,https://github.com/su2code/SU2/pull/611,1,['test'],['test']
Testability,"## Proposed Changes; This updates the version of MPP for use in the NEMO solver. . Is there a way to include a MPP test case for the regressions?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [?] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935:115,test,test,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935,2,['test'],['test']
Testability,"## Proposed Changes; This very small PR fixes the valgrind warning mentioned in issue #1040 ; . ## Related Work; Bug fix for issue #1040 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1041:692,test,test,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/1041,1,['test'],['test']
Testability,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1157:467,test,test,467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157,1,['test'],['test']
Testability,"## Proposed Changes; To simplify the maintenance of hybrid parallel SU2, we want to run thread sanitizer tests as part of the CI pipeline. We use thread-sanitizer enabled containers for this. This is work in progress and there are things that need testing, so I want to take it step by step while observing the behaviour of the CI pipeline. ## Related Work; https://github.com/su2code/Docker-Builds/pull/17 and follow-on PRs, #1679. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:105,test,tests,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,3,['test'],"['test', 'testing', 'tests']"
Testability,"## Proposed Changes; To simulate a gust in CFD, typically the Field Velocity Method is used. This method prescribes a given velocity on each node and neglects any influence of the aircraft on the gust. The Split Velocity Method is an approach that allows to capture the influence of the aircraft on the gust. . As far a I understand, the Split Velocity Method is only partially implemented in SU2 and isn't used for any gust type because all gust derivatives are zero / commented out in the code. This is in line with Padron et al. (https://doi.org/10.2514/6.2014-3013) who report that ""... combining the GCL with the SVM does not work."". This pull request cleans up / removes the unused code. ## Related Work; The issue was identified during the work on pull request #1954. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2051:1332,test,test,1332,https://su2code.github.io,https://github.com/su2code/SU2/pull/2051,1,['test'],['test']
Testability,"## Proposed Changes; Transferring turbomachinery outputs from legacy format to current format; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2001:802,test,test,802,https://su2code.github.io,https://github.com/su2code/SU2/pull/2001,1,['test'],['test']
Testability,"## Proposed Changes; Try to fix #1219 based on Stephan's insight in #990. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1221:426,test,test,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/1221,1,['test'],['test']
Testability,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,1,['test'],['test']
Testability,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:610,test,test,610,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['test'],['test']
Testability,"## Proposed Changes; Two bugs related to CoolProp fluid model are found and solved:; 1.Since there is no solver for two phase flow, then I ask CoolProp to assume the flow is single gas phase if the thermodynamics states are located on the liquid-vapor saturation curve.; 2. CoolProp has some issues to update the thermodynamics states if the input pressure is very close critical pressure Pc, see [here](https://github.com/CoolProp/CoolProp/issues/1678). So I let pressure equal to 0.99 Pc if pressure is very close to Pc. ## Related Work; This work is related to PR #1806. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1947:891,test,test,891,https://su2code.github.io,https://github.com/su2code/SU2/pull/1947,1,['test'],['test']
Testability,"## Proposed Changes; Two small bug fixes that I have encountered.; - One typo that was messing up the` REL_RMS_ADJOINT_*` variables; - One initialization for fixed CL which was missing. ; . ## Related Work; Feel free to add any other bugs to squash. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/816:560,test,test,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/816,1,['test'],['test']
Testability,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/884:516,test,test,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/884,1,['test'],['test']
Testability,"## Proposed Changes; Update CoDiPack, MeDiPack, and OpDiLib. . The CoDiPack updates contains a fix regarding static initialization order in the context of hybrid parallel AD. ## Related Work; previous hybrid AD things. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2206:650,test,test,650,https://su2code.github.io,https://github.com/su2code/SU2/pull/2206,1,['test'],['test']
Testability,"## Proposed Changes; Update CoolProp to v6.5.0 which was recently released. I picked the commit of the release, but newer commits are available. I also ""cleaned up"" a bit the submodule function so that it would become easier to update CoolProp in the future and make the intent of the code clearer. . ## Related Work; CoolProp v6.5.0 has an updated EOS for CO2, with which I am currently playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that ev",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:819,test,tested,819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['test'],['tested']
Testability,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096:675,test,test,675,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096,1,['test'],['test']
Testability,"## Proposed Changes; Update SU2 to a recent version of CoDiPack. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903:382,test,test,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903,1,['test'],['test']
Testability,"## Proposed Changes; Update SU2 to recent versions of CoDiPack, MeDiPack, and OpDiLib. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2351:518,test,test,518,https://su2code.github.io,https://github.com/su2code/SU2/pull/2351,1,['test'],['test']
Testability,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:893,test,test,893,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,3,['test'],['test']
Testability,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1405:788,test,test,788,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405,1,['test'],['test']
Testability,"## Proposed Changes; Updated the MLPCpp submodule which is now able to use different scaling methods ([standard](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html#sklearn.preprocessing.StandardScaler), [robust](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html#sklearn.preprocessing.RobustScaler), and [min-max](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html#sklearn.preprocessing.MinMaxScaler)) for scaling the neural network inputs and outputs. . ## Related Work; This update relates to the parts of SU2 regarding data-driven simulations (CDataDrivenFluid and CFlameletFluid). . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2369:1137,test,test,1137,https://su2code.github.io,https://github.com/su2code/SU2/pull/2369,1,['test'],['test']
Testability,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132:1400,test,test,1400,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132,1,['test'],['test']
Testability,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1163:590,test,test,590,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163,1,['test'],['test']
Testability,"## Proposed Changes; Use TIME_STEP and MAX_TIME in the FEA solver instead of DYN_*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2008:401,test,test,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/2008,1,['test'],['test']
Testability,"## Proposed Changes; Use inlet profile for supersonic inlets.; @ShukaiWang1110 see if this branch works for you. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327:544,test,test,544,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327,1,['test'],['test']
Testability,"## Proposed Changes; V & V testcase for axisymmetric jet (SST and SA); Reproducing the self-similar jet properties reported in Wygnanski & Fiedler (1969) and Hussein, Capp & George (1994). ## Related Work; Related to #2197 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2335:27,test,testcase,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/2335,2,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; WIP of the extension of FSI discrete adjoint to time-domain. This originally started with the legacy FSI drivers but is being migrated to the new multizone drivers in this draft.; . ## Related Work; @oleburghardt mentioned unsteady adjoints to follow PR #854 for CHT which will be closely related to this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/868:877,test,test,877,https://su2code.github.io,https://github.com/su2code/SU2/pull/868,1,['test'],['test']
Testability,"## Proposed Changes; We aim to implement 2 things:; 1. Restart files contain variables that are not necessary for restarts. with the keyword WRT_RESTART_COMPACT= YES we can write compact restart files containing only necessary fields.; 2. Other output contains variables that are not requested (all SOLUTION variables are always written). When WRT_RESTART_COMPACT= YES, we do not automatically write the SOLUTION fields to e.g. paraview.; 3. When WRT_RESTART_COMPACT= NO, we keep the original behavior for backward compatibility. ## Related Work; Mentioned in Issue (request) #2118 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2372:1015,test,test,1015,https://su2code.github.io,https://github.com/su2code/SU2/pull/2372,1,['test'],['test']
Testability,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115:655,test,test,655,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115,1,['test'],['test']
Testability,"## Proposed Changes; We propose to integrate the latest functionalities of the DG solver into the develop branch. The most important one is the parallel binary output functionality for paraview and tecplot, which is needed for the branch feature_input_output. ## Related Work; This PR is needed to complete the overhaul in the output classes (work of @talbring and @rsanfer) in the feature_input_output branch. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676:964,test,test,964,https://su2code.github.io,https://github.com/su2code/SU2/pull/676,1,['test'],['test']
Testability,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:666,test,test,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['test'],['test']
Testability,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1264:106,log,logic,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; While I was writing some documentation on how to set up a basic problem, I noticed that the `PHYSICAL_PROBLEM` had lost its meaning over the the last couple of years and it is hard to explain why it is called like that. It now refers actually to a numerical method that solves a particular problem and not to the physical problem. So I renamed it to `SOLVER`. . Additionally, I removed the `REGIME_TYPE` option and added the incompressible solvers as dedicated values (`INC_EULER`, `INC_RANS`, `INC_NAVIER_STOKES`) for the new `SOLVER` option. The method `GetRegime_Type()` is also removed and it is now explicitly checked for the kind of solvers. This way we remove the implicit assumption that every feature also works with the incompressible solvers. Developers have to deliberately add a check now ... It is a lot of code copy at the moment, but once the restructuring is finished we should be able to remove a lot of it. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756:1645,test,test,1645,https://su2code.github.io,https://github.com/su2code/SU2/pull/756,1,['test'],['test']
Testability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:1394,test,test,1394,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,1,['test'],['test']
Testability,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:1205,test,test,1205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,1,['test'],['test']
Testability,"## Proposed Changes; `JacobianIndex`, one of the `codi-tape` build options, was prone to misunderstandings since it was not clear whether or not the underlying type supports copy optimizations. There are two options now, `JacobianReuse`, which does not support copy optimizations and is similar to the hybrid AD type in that regard, and `JacobianMultiUse`, which does support copy optimizations and is similar to the default type with linear management in that regard.; ; I took the opportunity to also add options for primal value tapes in a consistent manner, they were there previously but less detailed and commented out. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:943,test,test,943,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,1,['test'],['test']
Testability,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:735,test,test,735,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,1,['test'],['test']
Testability,"## Proposed Changes; ```; SetMarkerCustomInletFlowVar0(marker, vertext, val); SetMarkerCustomInletFlowVar1(marker, vertext, val); SetMarkerCustomInletFlowDirection(marker, vertext, xyz); ``` . ## Related Work; #1079 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2296:649,test,test,649,https://su2code.github.io,https://github.com/su2code/SU2/pull/2296,1,['test'],['test']
