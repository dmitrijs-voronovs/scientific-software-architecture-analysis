quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,"'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:232876,energy,energy,232876,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:236281,energy,energy,236281,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:392452,energy,energy,392452,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:245986,energy,energy,245986,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:179211,energy,energy,179211,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229158,energy,energy,229158,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13226,energy,energy,13226,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18484,energy,energy,18484,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229582,energy,energy,229582,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:182957,energy,energy,182957,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86873,energy,energy,86873,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142385,energy,energy,142385,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:25660,energy,energy,25660,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:83666,energy,energy,83666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:339723,energy,energy,339723,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:442065,energy,energy,442065,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:449108,energy,energy,449108,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340834,energy,energy,340834,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443176,energy,energy,443176,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450219,energy,energy,450219,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171978,energy,energy,171978,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:173926,energy,energy,173926,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sds",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:168177,energy,energy,168177,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169315,energy,energy,169315,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363529,energy,energy,363529,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:447092,energy,energy,447092,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified cou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52250,energy,energy,52250,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50097,charge,charges,50097,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['charge'],['charges']
Energy Efficiency,"(as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0.00077279 0.00044621 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it's important to keep in mind that; the values of the vibrational frequencies are a function of the molecular; geometry. Therefore, *it's ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7654,energy,energy,7654,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,") (1 + T_1 + T_2)|\Psi_0\rangle = 0, \\; \langle \Psi_i^a | (H - E) (1 + T_1 + T_2 + T_1T_2)|\Psi_0\rangle = 0, \\; \langle \Psi_{ij}^{ab} | (H - E) (1 + T_1 + T_2 + \frac{1}{2}T_2^2)|\Psi_0\rangle = 0. \\. QCISD is slightly cheaper that CCSD computationally, but it retains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.2314316660",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:6876,energy,energy,6876,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,") IND ENERGY; SAPT2+3 DISP ENERGY; SAPT2+3 ELST ENERGY; SAPT2+3 EXCH ENERGY; SAPT2+3 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory. The sum of these four components yields; the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT0 TOTAL ENERGY; SSAPT0 TOTAL ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+3 TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory. .. psivar:: SAPT2+(CCD) DISP ENERGY; SAPT2+(CCD) ELST ENERGY; SAPT2+(CCD) EXCH ENERGY; SAPT2+(CCD) IND ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+3(CCD) DISP ENERGY; SAPT2+3(CCD) ELST ENERGY; SAPT2+3(CCD) EXCH ENERGY; SAPT2+3(CCD) IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates coupled-cluster dispersion.; The sum of these four components yields the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT2+(CCD) TOTAL ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+3(CCD) TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. .. psivar:: SAPT2+DMP2 DISP ENERGY; SAPT2+DMP2 ELST ENERGY; SAPT2+DMP2 EXCH ENERGY; SAPT2+DMP2 IND ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 IND ENERGY; SAPT2+3DMP2 DISP ENERGY; SAPT2+3DMP2 ELST ENERGY; SAPT2+3DMP2 EXCH ENERGY; SAPT2+3DMP2 IND ENERGY; SAPT2+(CCD)DMP2 DISP ENERGY; SAPT2+(CCD)DMP2 ELST ENERGY; SAPT2+(CCD)DMP2 EXCH ENERGY; SAPT2+(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+3(CCD)DMP2 DISP ENERGY; SAPT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:55715,energy,energy,55715,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,") by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324036,energy,energy,324036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,") by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/q",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:325587,energy,energy,325587,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,") by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50254,energy,energy,50254,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,") by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51646,energy,energy,51646,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,") by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:55836,energy,energy,55836,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,") by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57228,energy,energy,57228,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,") | :math:`-\epsilon_{ij}+\sum_k(\epsilon_{ik}+\epsilon_{jk})` | :math:`-\epsilon_{ii}+2\sum_k \epsilon_{ik}` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+; | acpf | :math:`\frac{2}{N} E_c` | :math:`\frac{2}{N} E_c` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+; | aqcc | :math:`[1-\frac{(N-3)(N-2)}{N(N-1)}]E_c` | :math:`[1-\frac{(N-3)(N-2)}{N(N-1)}]E_c` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+. .. comment | dci | :math:`E_c` | NA |; .. comment +-------------------------+------------------------------------------------------------+----------------------------------------------+. The pair correlation energy, :math:`\epsilon_{ij}`, is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. .. math::; :label: pair_energy. \epsilon_{ij} = \sum_{ab} v_{ij}^{ab} (2 t_{ij}^{ab} - t_{ij}^{ba}). Methods whose shifts (:math:`\Delta_{ij}` and :math:`\Delta_i`) do not; explicitly depend on orbitals :math:`i` or :math:`j` (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Density fitting (DF) [or the resolution of the identity (RI)] and Cholesky; decomposition (CD) techniques are popular in quantum chemistry to avoid; the computation and storage of the 4-index electron repulsion integral; (ERI) tensor and even to reduce the computational scaling of ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:12880,energy,energy,12880,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,")', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487288,energy,energy,487288,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,")-1a, CCSDT(Q)-1a,; up to CC\ *n*\ -1a) level of theory. .. psivar:: CCSDT-1b TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-1b CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CC\ *n*\ -1b) level of theory. .. psivar:: CCSDT-3 TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCn-3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CC\ *n*\ -3) level of theory. .. psivar:: CCSD(T)_L TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(\ *n*\ -1)(\ *n*\ )L level of theory. .. psivar:: CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the modified CCSDT(Q) level of theory. .. psivar:: CEPA(0) DIPOLE. Dipole array [e a0] for the coupled electron pair approximation variant 0 level of theory, (3,). .. psivar:: CEPA(0) QUADRUPOLE. Redundant quadrupole array [e a0^2] for the coupled electron pair approximation variant 0 level of theory, (3, 3). .. psivar:: CEPA(0) TOTAL ENERGY; CEPA(0) CORRELATION ENERGY; CEPA(1) TOTAL ENERGY; CEPA(1) CORRELATION ENERGY; CEPA(2) TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested variant of coupled electron pair approximation level of theory. .. psivar:: CFOUR ERROR COD",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:22565,energy,energy,22565,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3] for atom n, computed using the MBIS charge; partitioning scheme. Free atom densities are computed at the same; level of theory as the parent MBIS calculation, with UHF turned on; as needed. .. psivar:: MBIS RADIAL MOMENTS <R^3>. Per-atom expectation value of r^3 [a0^3], equivalent to the volume; of the MBIS-partitioned density. .. psivar:: MBIS VALENCE WIDTHS. Per-atom density width [a0] of the associated valence charge computed; from an MBIS partitioned density. Equivalent to the inverse of the; linear decay rate of the at",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:37587,charge,charges,37587,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['charge'],['charges']
Energy Efficiency,"). The program; requires manual input of GRAC shift parameter for each monomer through; keywords |sapt__sapt_dft_grac_shift_a| and |sapt__sapt_dft_grac_shift_b|,; which should be equal to the difference of the actual ionization; potential and the corresponding Kohn-Sham HOMO energy. The dispersion; term needs to be computed with orbital response for good accuracy,; and it is recommended to enable |sapt__sapt_dft_do_hybrid| (set to; ``True`` by default). The coupled exchange-dispersion energy is usually; estimated by scaling from the uncoupled value either by a fitted fixed; value (suggested initially by [Hesselmann:2014:094107]_ for a local Hartree--Fock (LHF) formulation and then revised; by [Xie:2022:024801]_ for non-LHF) or; by the ratio of; coupled and uncoupled dispersion energy (suggested by [Podeszwa:2006:400]_ ). ; This can be controlled by keyword |sapt__sapt_dft_exch_disp_scale_scheme|, ; with ``FIXED`` using the Hesselmann/Xie approach (|PSIfours| default prior ; to Nov 2022), ``DISP`` using the Podeszwa approach (|PSIfours| default after Nov 2022),; or ``NONE`` for not scaling and using the uncoupled exchange-dispersion ; energy directly. .. warning:: Since Nov 2022, the defaults of options |sapt__sapt_dft_exch_disp_scale_scheme| and |sapt__sapt_dft_exch_disp_fixed_scale|; have been changed. Before, the former defaulted to ``FIXED`` with Hesselmann value of 0.686 for the latter. Now, the former defaults to ``DISP`` and should you instead select ``FIXED``, the default for the latter is the Xie value of 0.770. This might cause; an older version of |PSIfour| to produce a different value of; exchange-dispersion energy from the latest version. Basic Keywords for SAPT(DFT) ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_dft_grac_shift_a.rst; .. include:: autodir_options_c/sapt__sapt_dft_grac_shift_b.rst; .. include:: autodir_options_c/sapt__sapt_dft_do_dhf.rst; .. include:: autodir_options_c/sapt__sapt_dft_exch_disp_scale_scheme.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:24567,energy,energy,24567,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,")/E_{\rm exch-ind}^{(2)}`, and ; :math:`E_{\rm exch-disp}^{(2)}(S^2)/E_{\rm exch-disp}^{(2)}` are not very similar to; each other. Hence, in 2016 universal scaling of all :math:`S^{2}` approximated terms; was turned off by default. Finally, in 2014 Parker et al. [Parker:2014:094106]_ empirically discovered that ; SAPT0 energies for van der Waals dimers with close contacts benefit from a slightly modified ; recipe that involves an empirically adjusted exponent :math:`\alpha = 3.0`. ; To distinguish it from its unscaled counterpart, this energy is denoted sSAPT0 (see [Parker:2014:094106]_). .. math:: E_{sSAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; p_{EX}(3.0) E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + p_{EX}(3.0) E_{exch-disp}^{(20)} ; + \delta_{HF}^{(2)}; :label: sSAPT0. where :math:`\delta_{HF}^{(2)}` is computed *without* any scaling. Please note that ; sSAPT0 is thus not the same as requesting ``exch_scale_alpha 3.0``, and that the; scaling is automatically performed by requesting ``energy('ssapt0')``. A First Example; ^^^^^^^^^^^^^^^. The following is the simplest possible input that will perform all; available SAPT computations (normally, you would pick one of these methods,; not all of them). ::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis aug-cc-pvdz; 	; 	energy('sapt0'); 	energy('sapt2'); 	energy('sapt2+'); 	energy('sapt2+(3)'); 	energy('sapt2+3'). The SAPT module uses the standard |PSIfour| partitioning of the dimer; into monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:13743,energy,energy,13743,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"); kwargs = kwargs_lower(kwargs). - Case sensitivity for kwargs dictionary values still needs to be handled. The first line below shows how to convert argument values to lowercase for matching. When not matching a whole value such that regular expressions are needed, the second line below performs a case insensitive match. ::. if (kwargs['db_mode'].lower() == 'continuous'):; if re.match(r'^sapt', name, flags=re.IGNORECASE):. - Match boolean keywords (db_cp in the example below) with expressions like the following, which allow case insensitive yes/true/on/1/no/false/off/0 user input. If your argument's value is a derivative level, similarly, use input.der0th, input.der1st, and input.der2nd. ::. if input.yes.match(str(db_cp)):; elif input.no.match(str(db_cp)):. - For keywords that might be used in other functions as well as your own, prepend the argument name with a short representation of your function name. For example, there are keywords cp_func, db_func, and opt_func to request what python function, if not energy(), is called by cp(), database(), and optimize(). - Upon checking in a new python file, edit the file ``psi4/doc/userman/source/index.rst`` and follow the instructions therein that your file may be autodocumented here. - Write docstrings! For a major function intended for use in input files, emulate any docstring in ``psi4/share/python/driver.py``. For a behind-the-scenes function or if you don't want the bother of dealing with `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, just write an ordinary docstring. It will get slurped into the documentation in plain text. - Your python function should follow `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ conventions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:3856,energy,energy,3856,doc/sphinxman/source/attic/bestpractices_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst,1,['energy'],['energy']
Energy Efficiency,")}; :label: SAPTDFT; .. math:: E_{disp,resp}^{(20)} = -\frac{1}{2\pi}\int_0^\infty d\omega \int d\mathbf{r}_A d\mathbf{r}'_A d\mathbf{r}_B d\mathbf{r}'_B \frac{1}{\left|\mathbf{r}_A-\mathbf{r}_B\right|}\frac{1}{\left|\mathbf{r}'_A-\mathbf{r}'_B\right|}\chi^A_{coup}\left(\mathbf{r}_A,\mathbf{r}'_A|i\omega\right)\chi^B_{coup}\left(\mathbf{r}_B,\mathbf{r}'_B|i\omega\right). .. math:: \chi_{coup}\left(\mathbf{r},\mathbf{r}'|\omega\right) = \chi_0\left(\mathbf{r},\mathbf{r}'|\omega\right) + \int d\omega d\mathbf{r}_1 d\mathbf{r}_2 \chi_0\left(\mathbf{r},\mathbf{r}_1|\omega\right)\left[\frac{1}{r_{12}} + f_{xc}\left(\mathbf{r}_1,\mathbf{r}_2,\omega\right)\right]\chi\left(\mathbf{r}_2,\mathbf{r}'|\omega\right). The :math:`\delta_{HF}^{(2)}` and :math:`\delta_{HF}^{(3)}` terms take into; account higher-order induction effects and are included in the definition; of SAPT terms. They are computed from the Hartree--Fock supermolecular interaction energy; :math:`E_{int}^{HF}` and are only available in dimer-centered basis SAPT; computations, which is the default (see below for monomer-centered basis ; computations). They are defined by:. .. math:: \delta_{HF}^{(2)} = E_{int}^{HF} - (E_{elst}^{(10)} + E_{exch}^{(10)} ; + E_{ind,resp}^{(20)} + E_{exch-ind,resp}^{(20)}); :label: dHF2. .. math:: \delta_{HF}^{(3)} = \delta_{HF}^{(2)} - (E_{exch-ind}^{(30)} ; + E_{ind,resp}^{(30)}); :label: dHF3. Additionally, high-order coupling between induction and dispersion can be ; extracted from the supermolecular MP2 interaction energy:. .. math:: \delta_{MP2}^{(2)} = E_{int}^{MP2, corr} - (E_{elst}^{(12)} +; E_{exch}^{(11)} + E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)}; + \; ^{t}\!E_{exch-ind}^{(22)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)}). .. math:: \delta_{MP2}^{(3)} = \delta_{MP2}^{(2)} - (E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}). where :math:`E_{int}^{MP2, corr}` is the correlation part of the supermolecular MP2 ; interaction energy. :math:`\delta_{MP2}^{(2)}` and :math:`\delta_{MP",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:8381,energy,energy,8381,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 -> ROOT n RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state to root *n*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n* within irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (h) -> ROOT n (i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n*, which is in irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 -> ROOT n RIGHT EIGENVECTOR BETA - h TRANSITION. The right alpha and beta spin eigenvectors of the named method; from ground state to root *n*, and the transition is of irrep *h*. DFT; functional labeled if canonical. .. psivar:: THERMAL ENERGY. Total thermal energy E [E_h] at given temperature. .. psivar:: THERMAL ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the thermal energy at given temperature. .. psivar:: TWO-ELECTRON ENERGY. The two-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{2e^-}` in Eq. :eq:`SCFterms`. .. psivar:: UNCP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed without counterpoise correction.; Related variable :psivar:`CP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{unCP}}}. .. psivar:: WIBERG LOWDIN INDICES. Property of Wiberg bond indices using orthogonal L\ |o_dots|\ wdin orbitals, (nat, nat). .. psivar:: ZAPTn TOTAL ENERGY; ZAPTn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled Z-averaged perturbation theory level.; *n* is ZAPT perturbation order",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:68570,energy,energy,68570,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"*Module:* :ref:`Keywords <apdx:mrcc>`, :ref:`PSI Variables <apdx:mrcc_psivar>`, :source:`MRCC <psi4/src/psi4/mrcc>`, :ref:`Samples <apdx:testSuitemrcc>`. |PSIfour| contains code to interface to the MRCC program of M. K\ |a_acute|\ llay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mih\ |a_acute|\ ly K\ |a_acute|\ llay (`https://www.mrcc.hu/ <https://www.mrcc.hu/>`_). Installation; ~~~~~~~~~~~~. Follow the instructions provided with the source to build the MRCC programs.; To be used by |PSIfour|, ensure that the program binary (``dmrcc``) can be; found in your :envvar:`PATH`. If |PSIfour| is unable to execute the binary, an; error will be reported. Running MRCC; ~~~~~~~~~~~~. MRCC can be invoked in similar fashion as other theories provided in |PSIfour|.; To indicate MRCC as the target software, set |globals__qc_module|\ ``=MRCC``.; This is a change as of October 2022; previously, one prefixed the method by ""mr""; to indicate MRCC (e.g., ``energy('mrccsdt')``).; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; qc_module mrcc; }; energy('ccsdt'). ``'ccsdt'`` in the call to :py:func:`~psi4.driver.energy` plus ``qc_module=mrcc`` instructs |PSIfour| to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; Here the ``qc_module=mrcc`` is optional since |PSIfour| has no builtin module; that can perform CCSDT. For a method like CCSD, no specification of |globals__qc_module|; will default to the CCENERGY module, and specification with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically gener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:2270,energy,energy,2270,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['energy'],['energy']
Energy Efficiency,"+----------------------+---------------------+; | SCF of post-HF | energy | 8 | 8 | PK [#f3]_ |; + +--------------------+----------------------+----------------------+ +; | | optimization | 10 | 10 | |; + +--------------------+----------------------+----------------------+ +; | | frequency [#f7]_ | 10 | 10 | |; + +--------------------+----------------------+----------------------+ +; | | CC property [#f2]_ | 10 | 10 | |; +--------------------+--------------------+----------------------+----------------------+---------------------+. .. _`table:conv_corl`:. .. table:: Post-SCF convergence criteria defaults by calculation type [#f4]_. +--------------------+--------------------+----------------------+-------------------------+; | *Ab Initio* Method | Calculation Type | E_CONVERGENCE [#f5]_ | R_CONVERGENCE [#f6]_ |; +====================+====================+======================+=========================+; | post-HF of post-HF | energy | 6 | |; + +--------------------+----------------------+-------------------------+; | | optimization | 8 | |; + +--------------------+----------------------+-------------------------+; | | frequency [#f7]_ | 8 | |; + +--------------------+----------------------+-------------------------+; | | CC property [#f2]_ | 8 | |; +--------------------+--------------------+----------------------+-------------------------+. .. rubric:: Footnotes. .. [#f1] Note that this table applies only the SCF module,; not to the final convergence criteria for post-HF methods or to methods; that use an alternate starting point, like MCSCF. SAPT computations, too,; set tighter values. .. [#f2] This applies to properties computed through the :py:func:`~psi4.driver.properties` function. .. [#f3] Post-HF methods that do not rely upon the usual 4-index AO integrals use a; density-fitted SCF reference. That is, for DF-MP2 and SAPT, the default |globals__scf_type| is DF. .. [#f4] Note that this table applies to the final convergence criteria for; all the post-SCF modules",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:58286,energy,energy,58286,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84753,energy,energy,84753,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:88789,energy,energy,88789,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84929,energy,energy,84929,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:88965,energy,energy,88965,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:366435,energy,energy,366435,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84198,energy,energy,84198,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:203137,energy,energy,203137,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417069,energy,energy,417069,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424036,energy,energy,424036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sds",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:3555,energy,energy,3555,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:467272,energy,energy,467272,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:469835,energy,energy,469835,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:85285,energy,energy,85285,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:89321,energy,energy,89321,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:335662,energy,energy,335662,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:342667,energy,energy,342667,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:419464,energy,energy,419464,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:489132,energy,energy,489132,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:494442,energy,energy,494442,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:496447,energy,energy,496447,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:85461,energy,energy,85461,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:89497,energy,energy,89497,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306637,energy,energy,306637,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:309144,energy,energy,309144,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:365886,energy,energy,365886,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:239528,energy,energy,239528,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:242590,energy,energy,242590,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156832,energy,energy,156832,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162168,energy,energy,162168,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172376,energy,energy,172376,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'not",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331667,energy,energy,331667,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155669,energy,energy,155669,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50872,energy,energy,50872,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:56454,energy,energy,56454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:106238,energy,energy,106238,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:325227,energy,energy,325227,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480674,energy,energy,480674,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526084,energy,energy,526084,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:106990,energy,energy,106990,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367194,energy,energy,367194,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421684,energy,energy,421684,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525080,energy,energy,525080,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sds",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107445,energy,energy,107445,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482310,energy,energy,482310,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''};",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333174,energy,energy,333174,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:415433,energy,energy,415433,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:422400,energy,energy,422400,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:109998,energy,energy,109998,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:112538,energy,energy,112538,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:201497,energy,energy,201497,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:204207,energy,energy,204207,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:208211,energy,energy,208211,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:210736,energy,energy,210736,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159284,energy,energy,159284,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164620,energy,energy,164620,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:182606,energy,energy,182606,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'refere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333604,energy,energy,333604,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:236994,energy,energy,236994,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:243293,energy,energy,243293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:200962,energy,energy,200962,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13013,energy,energy,13013,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18271,energy,energy,18271,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229793,energy,energy,229793,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:364434,energy,energy,364434,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:202430,energy,energy,202430,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:445216,energy,energy,445216,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:110747,energy,energy,110747,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:113287,energy,energy,113287,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499009,energy,energy,499009,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,", 3, 3). .. psivar:: mtd 128-POLE. Redundant 128-pole array [e a0^7] for the named method, (3, 3, 3, 3, 3, 3, 3). .. psivar:: MP2 TOTAL ENERGY; MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2 level of theory. .. psivar:: MP2 TOTAL GRADIENT; The total electronic gradient [E_h/a0] of the MP2 level of theory, ({nat}, 3). .. psivar:: MP2 DIPOLE GRADIENT. The derivative of the MP2 level of theory dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: MP2 TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the MP2 level of theory, (3 * {nat}, 3 * {nat}). .. psivar:: MP2.5 TOTAL ENERGY; MP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2.5 level of theory. .. psivar:: MP3 TOTAL ENERGY; MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3 level of theory. .. psivar:: MP4(T) CORRECTION ENERGY. The MP4 triples component [E_h]. Quantity is second right-hand term in; Eq. :eq:`MP4terms`. .. psivar:: MP4(SDQ) TOTAL ENERGY; MP4(SDQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP4 singles, doubles, quadruples level of theory. Quantity; :psivar:`MP4(SDQ) CORRELATION ENERGY` is; first right-hand term in Eq. :eq:`MP4terms`. .. psivar:: MP4 TOTAL ENERGY; MP4 CORRELATION ENERGY; MP4(SDTQ) TOTAL ENERGY; MP4(SDTQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full MP4 level of theory. Quantity :psivar:`MP4 CORRELATION; ENERGY` / :psivar:`MP4(SDTQ) CORRELATION ENERGY`; is left-hand term in Eq. :eq:`MP4terms`. .. math:: E_{\text{MP4}} = E_{\text{MP4(SDQ)}} + E_{\text{MP4(T)}}; :label: MP4terms. .. psivar:: MPn TOTAL ENERGY; MPn CORRELATION ENERGY. The total electronic energy [E_h] and corre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:40442,energy,energy,40442,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,", ``rhf``, or ``rohf``. An example of the; MCSCF input is given below. PSIMRCC is most commonly used for low-spin cases (singlets or open-shell; singlets). It is capable of performing computations on higher spin states; (*e.g.*, triplets), but in general, not all the required matrix elements have; been coded for high-spin cases, meaning that results will correspond to an; approximate Mk-MRCC computation for high-spin cases. A Simple Example; ________________ . The |psimrcc__corr_wfn| allows you to select one of three methods; Mk-MRPT2 [``PT2``], Mk-MRCCSD [``CCSD``], or Mk-MRCCSD(T) [``CCSD_T``].; The |psimrcc__corr_multp| option allows you to select the Slater; determinants with a particular :math:`M_s` value. The |psimrcc__wfn_sym|; keyword is neccesary if you do not want to compute the energy of the; totally-symmetric state. The |psimrcc__follow_root| option may be used; to follow different roots of the effective Hamiltonian. A value of 1; instructs PSIMRCC to follow the solution with the lowest energy given; a certain set of determinants. ::. molecule o2 {; 0 3; O; O 1 2.265122720724; units au; }; set {; basis cc-pvtz; }; set mcscf {; reference rohf; docc [3,0,0,0,0,2,1,1] # Doubly occupied MOs; socc [0,0,1,1,0,0,0,0] # Singly occupied MOs; }; set psimrcc {; corr_wfn ccsd # Do Mk-MRCCSD ; frozen_docc [1,0,0,0,0,1,0,0] # Frozen MOs; restricted_docc [2,0,0,0,0,1,1,1] # Doubly occupied MOs; active [0,0,1,1,0,0,0,0] # Active MOs; frozen_uocc [0,0,0,0,0,0,0,0] # Frozen virtual MOs; corr_multp 1 # Select the Ms = 0 component; follow_root 1; wfn_sym B1g # Select the B1g state; }; energy('psimrcc'). Note that the oxygen molecule has 16 electrons (including core), while; the ``docc`` array contains only 7 doubly-occupied orbitals (or 14; electrons). Hence, two more electrons are available to place into; the active space (given by ``active``), which consists of 2 orbitals.; Thus there are two active electrons in two orbitals. In this particular; example, we are using stan",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst:6038,energy,energy,6038,doc/sphinxman/source/psimrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst,1,['energy'],['energy']
Energy Efficiency,", external_potentials=external_potentials). The ``external_potentials`` array has three rows for three separate; particles, and it is passed to the SCF code on the last line. The; rows are composed of the atomic charge, x coordinate, y coordinate,; and z coordinate in that order. The atomic charge and coordinates are; specified in atomic units, [e] and [a0]. Add as many particle rows as; needed to describe the full MM region. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, setting an; external potential like the above looked like ::. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834, 1.649232019048, 0.0, -2.356023604706); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -3.799961446760); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -0.912085762652); psi4.set_global_option_python('EXTERN', Chrgfield.extern). gradient('scf'). The main differences are that (1) the specification of; charge locations in the old way used the units of the active; molecule, whereas the new way always uses Bohr and (2) the; specification of the charge and locations in the old way used the; :py:class:`psi4.driver.QMMM` class directly and added one charge; per command, whereas the new way consolidates all into an array and; passes it by keyword argument to the calculation. The successor to the :py:class:`psi4.driver.QMMM` class,; :py:class:`psi4.driver.QMMMbohr`, is operable, but it is discouraged; from being used directly. To run a computation in a constant dipole field, the |scf__perturb_h|,; |scf__perturb_with| and |scf__perturb_dipole| keywords can be used. As an; example, to add a dipole field of magnitude 0.05 a.u. in the y direction and; 0.1 a.u. in the z direction, we can use the following keywords::. set perturb_h true; set perturb_with dipole; set perturb_dipole [ 0, 0.05, 0.1 ]. Note that if any specified fields do not fall along a symmetry axis, the; symmetry of the calculation should be reduced accordingly; if in doubt run the; calculation in C1 s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:55284,charge,charge,55284,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,2,['charge'],['charge']
Energy Efficiency,", we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. .. index:: molecule; multiple in input file; .. _`sec:multipleMolecules`:. .. index::; triple: setting; keywords; molecule; pair: molecule; charge; pair: molecule; multiplicity; pair: molecule; symmetry; pair: molecule; no_reorient; pair: molecule; units; .. _`sec:moleculeKeywords`:. Molecule Keywords; =================. In addition to specifying the geometry, additional information can be; provided in the molecule block :samp:`molecule {optional_molecule_name} \\{...\\}`. **Charge & Multiplicity**; If two integers :samp:`{charge} {multiplicity}` are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (:math:`2 M_s + 1`), respectively. If not specified, the; charge is taken to be zero, and the multiplicity will be taken to be the; lowest multiplicity consistent with that charge. For multi-fragment ; complexes, each fragment can have a :samp:`{charge} {multiplicity}` line.; See :ref:`sec:fragments` for details. **Units**; By default, |Angstrom| units are used; this is changed by adding; a line that reads :samp:`units {spec}`, where :samp:`{spec}` is one; of ``ang``, ``angstrom``, ``a.u.``, ``au``, or ``bohr``. **Orientation**; Certain computations require that the molecule is not reoriented. This ; can be achieved by adding either ``no_reorient`` or ``noreorient``. ; To prevent even recentering of the molecule, add ``no_com`` or ``nocom``. **PubChem**; A line reading :samp:`pubchem:{mol}` fetches the geometry for molecule; :samp:`{mol}` from the PubChem database, where :samp:`{mol}` is either; the IUPAC molecule name or the CID number. See :ref:`sec:pubchem` for; details. **Symmetry**; The symmetry can be specified by a line reading :samp:`symmetry; {symbol}`, where :samp:`{symbol}` is th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:4846,charge,charge,4846,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,2,['charge'],['charge']
Energy Efficiency,", x coordinate, y coordinate,; and z coordinate in that order. The atomic charge and coordinates are; specified in atomic units, [e] and [a0]. Add as many particle rows as; needed to describe the full MM region. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, setting an; external potential like the above looked like ::. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834, 1.649232019048, 0.0, -2.356023604706); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -3.799961446760); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -0.912085762652); psi4.set_global_option_python('EXTERN', Chrgfield.extern). gradient('scf'). The main differences are that (1) the specification of; charge locations in the old way used the units of the active; molecule, whereas the new way always uses Bohr and (2) the; specification of the charge and locations in the old way used the; :py:class:`psi4.driver.QMMM` class directly and added one charge; per command, whereas the new way consolidates all into an array and; passes it by keyword argument to the calculation. The successor to the :py:class:`psi4.driver.QMMM` class,; :py:class:`psi4.driver.QMMMbohr`, is operable, but it is discouraged; from being used directly. To run a computation in a constant dipole field, the |scf__perturb_h|,; |scf__perturb_with| and |scf__perturb_dipole| keywords can be used. As an; example, to add a dipole field of magnitude 0.05 a.u. in the y direction and; 0.1 a.u. in the z direction, we can use the following keywords::. set perturb_h true; set perturb_with dipole; set perturb_dipole [ 0, 0.05, 0.1 ]. Note that if any specified fields do not fall along a symmetry axis, the; symmetry of the calculation should be reduced accordingly; if in doubt run the; calculation in C1 symmetry. For examples of SCF and MP2 calculations in an; external field, see :srcsample:`scf7` and :srcsample:`dfmp2-grad5`. .. _`sec:scfdefault`:. Convergence and Algorithm Defaults; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:55531,charge,charge,55531,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['charge'],['charge']
Energy Efficiency,",). .. psivar:: AQCC QUADRUPOLE. Redundant quadrupole array [e a0^2] for the averaged quadratic coupled-cluster level of theory, (3, 3). .. psivar:: AQCC TOTAL ENERGY; AQCC CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged quadratic coupled-cluster level of theory.; .. psivar:: BRUECKNER CONVERGED. Value 1 (0) when the Brueckner orbitals have (have not) converged. .. psivar:: CBS NUMBER; NBODY NUMBER; FINDIF NUMBER. Number of tasks [] the named procedure performs. These are immediate; tasks, so if procedures are nested, the total number of tasks is; the product. .. psivar:: CBS TOTAL ENERGY; CBS CORRELATION ENERGY; CBS REFERENCE ENERGY. The total electronic energy [E_h] and its breakdown into reference total; energy [E_h] and correlation correction components [E_h] for the compound; method requested through cbs(). .. psivar:: CCname ROOT n TOTAL ENERGY; TD-fctl ROOT n TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) TOTAL ENERGY; TD-fctl ROOT n (IN h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* within irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (h) TOTAL ENERGY; TD-fctl ROOT n (h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n*, which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) COR",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:9855,energy,energy,9855,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46336,energy,energy,46336,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"--+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | pbe, GGA DFT | .. _ss_pbe: | |globals__scf_type| | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | .. _ss_b3lyp: | |globals__scf_type| | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | .. _ss_wb97x: | |globals__scf_type| | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#s12]_ | .. _ss_b2plyp: | |globals__scf_type| | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#s1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#s2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#s3] Methods with no analytic gradients do not have finite difference explicitly marked by ""∷"", but the capability can be gleaned from the energy availability.; .. [#s10] Arbitrary-order *n* through DETCI is inefficient byproduct of CI; .. [#s11] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L; .. [#s12] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_summary.rst:13613,energy,energy,13613,doc/sphinxman/source/preview_capabilities_summary.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_summary.rst,1,['energy'],['energy']
Energy Efficiency,"--+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | .. _dd_b3lyp: | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | | |; | |globals__scf_type| | SCF | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | |; +--------------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | .. _dd_wb97x: | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | | |; | |globals__scf_type| | SCF | ✓̲ ✓̳ | ✓̲ ✓̳ | ✓̲ ✓̳ | ✓̲ ✓̳ | | |; +--------------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#d14]_ | .. _dd_b2plyp: | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | | |; | |globals__scf_type| | SCF | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | |; +--------------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#d1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#d2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#d3] Finite difference gradients are only marked explicitly by ""∷"" for overall (not per-method) lines and when at least one case has analytic gradients implemented, but the capability can be gleaned from the energy availability.; .. [#d10] Also available for DFT references RKS/UKS; .. [#d11] Arbitrary-order *n* through DETCI is inefficient byproduct of CI; .. [#d12] Analytic gradients for conventional all-electron RHF/UHF computations can be requested through |globals__qc_module|\ ``=ccenergy``, but their scaling is best suited to small molecules.; .. [#d13] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L; .. [#d14] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_details.rst:15662,energy,energy,15662,doc/sphinxman/source/preview_capabilities_details.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_details.rst,1,['energy'],['energy']
Energy Efficiency,"--+. The pair correlation energy, :math:`\epsilon_{ij}`, is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. .. math::; :label: pair_energy. \epsilon_{ij} = \sum_{ab} v_{ij}^{ab} (2 t_{ij}^{ab} - t_{ij}^{ba}). Methods whose shifts (:math:`\Delta_{ij}` and :math:`\Delta_i`) do not; explicitly depend on orbitals :math:`i` or :math:`j` (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Density fitting (DF) [or the resolution of the identity (RI)] and Cholesky; decomposition (CD) techniques are popular in quantum chemistry to avoid; the computation and storage of the 4-index electron repulsion integral; (ERI) tensor and even to reduce the computational scaling of some terms.; DF/CD-CCSD(T) computations are available in |Psifour|, with or without the; use of FNOs, through the FNOCC module. The implementation and accuracy of; the DF/CD-CCSD(T) method are described in [DePrince:2013:2687]_\. The DF-CCSD(T) procedure uses two auxiliary basis sets. The first set is; that used in the SCF procedure, defined by the |scf__df_basis_scf|; keyword. If this keyword is not specified, an appropriate -JKFIT set is; automatically selected. This auxiliary set defines the ERIs used to; build the Fock matrix used in the DF-CCSD(T) procedure. The second; auxiliary set is used to approximate all other ERIs in the DF-CCSD(T); procedure. The choice of auxiliary basis is controlled by the keyword; |fnocc__df_basis_cc|. By default, |fnocc__df_basis_cc| is the RI set; (optimized for DFMP2) most appropriate for use with the primary basis.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:13836,reduce,reduce,13836,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['reduce'],['reduce']
Energy Efficiency,"---+---+---+---+---+---+---+; | ccsd | |globals__cc_type| | ✓̳ ✓̳ | ✓̳ | ✓̳ ✓̳ | ✓̳ | ✓̳ ✓̳ | ✓̳ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccsd(t)\ [#e10]_ | |globals__cc_type| | ✓̳ ✓̳ | | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | a-ccsd(t)\ [#e11]_ | |globals__cc_type| | ✓̳ ✓̳ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | bccd(t) | |globals__cc_type| | ✓̳ ✓̳ | | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | cc3 | |globals__cc_type| | ✓̳ ✓̳ | | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#e1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#e2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#e3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#e10] Analytic gradients for conventional all-electron RHF/UHF computations can be requested through |globals__qc_module|\ ``=ccenergy``, but their scaling is best suited to small molecules.; .. [#e11] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_ccenergy.rst:4117,energy,energy,4117,doc/sphinxman/source/preview_capabilities_ccenergy.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_ccenergy.rst,1,['energy'],['energy']
Energy Efficiency,"-----+------------+; | ❖ with :ref:`CheMPS2 <sec:chemps2>` |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CI | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with ex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40604,energy,energy,40604,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['energy'],['energy']
Energy Efficiency,"------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | lccd | |globals__cc_type| | ✓ ✓ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccd | |globals__cc_type| | ✓̲ ✓̲ ✓̲ ✓̲ | ✓̲ ✓̲ | ✓̲ ✓̲ ✓̲ ✓̲ | ✓̲ ✓̲ | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccsd | |globals__cc_type| | ✓ ✓ ✓ ✓ | ✓̲ ✓̲ | ✓̲ ✓̲ ✓̲ ✓̲ | ✓̲ ✓̲ | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccsd(t) | |globals__cc_type| | ✓ ✓ ✓ ✓ | ✓̲ ✓̲ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | a-ccsd(t)\ [#n10]_ | |globals__cc_type| | ✓̲ ✓̲ ✓̲ ✓̲ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#n1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#n2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#n3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#n10] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_occ_nonoo.rst:4825,energy,energy,4825,doc/sphinxman/source/preview_capabilities_occ_nonoo.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_occ_nonoo.rst,1,['energy'],['energy']
Energy Efficiency,"--------+----------+------------------------+; | DC-06 | SIMULTANEOUS, QC, TWOSTEP | Y | Y | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-12 | SIMULTANEOUS, QC, TWOSTEP | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+. Note that for ODC-06 and ODC-12 |scf__reference| ``RHF`` is only available for; |dct__algorithm| ``SIMULTANEOUS``. To compute :math:`(\lambda_3)` correction,; the |dct__three_particle| option needs to be set to PERTURBATIVE. .. _`sec:dctmininput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for the DCT single-point computation looks like this::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; energy('dct'). The ``energy('dct')`` call to :py:func:`~psi4.driver.energy` executes the DCT; module, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default). * In cases when available memory is insufficient, the use of the |dct__ao_basis| ``DISK`` option; is recommend",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:16520,energy,energy,16520,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"--------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-12 | SIMULTANEOUS, QC, TWOSTEP | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+. Note that for ODC-06 and ODC-12 |scf__reference| ``RHF`` is only available for; |dct__algorithm| ``SIMULTANEOUS``. To compute :math:`(\lambda_3)` correction,; the |dct__three_particle| option needs to be set to PERTURBATIVE. .. _`sec:dctmininput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for the DCT single-point computation looks like this::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; energy('dct'). The ``energy('dct')`` call to :py:func:`~psi4.driver.energy` executes the DCT; module, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default). * In cases when available memory is insufficient, the use of the |dct__ao_basis| ``DISK`` option; is recommended. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:16737,energy,energy,16737,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"------------+----------------------------+. .. rubric:: Footnotes. .. [#fa] Default; .. [#fb] Baker convergence criteria are the same.; .. [#fc] Counterpart NWCHEM convergence criteria are the same.; .. [#fd] Convergence achieved when all active criteria are fulfilled.; .. [#fe] Convergence achieved when **Max Force** and one of **Max Energy** or **Max Disp** are fulfilled.; .. [#ff] Normal convergence achieved when all four criteria (**Max Force**, **RMS Force**,; **Max Disp**, and **RMS Disp**) are fulfilled. To help with flat ; potential surfaces, alternate convergence achieved when 100\ :math:`\times`\ *rms force* is less ; than **RMS Force** criterion.; .. [#fg] Compensates for difficulties in converging geometry optmizations of supermolecular complexes ; tightly, where large *rms disp* and *max disp* may result from flat potential surfaces even when; *max force* and/or *rms force* are small. For ultimate control, specifying a value for any of the five monitored options activates that; criterium and overwrites/appends it to the criteria set by |optking__g_convergence|.; Note that this revokes the special convergence arrangements detailed in notes [#fe]_ and [#ff]_ ; and instead requires all active criteria to be fulfilled to ; achieve convergence. To avoid this revokation, turn on keyword |optking__flexible_g_convergence|. .. index::; pair: geometry optimization; output. Interface to GeomeTRIC; ^^^^^^^^^^^^^^^^^^^^^^. The GeomeTRIC optimizer developed by Wang and Song [Wang:2016:214108]_ may be used in place of; Psi4's native Optking optimizer. GeomeTRIC uses a translation-rotation-internal coordinate (TRIC); system that works well for optimizing geometries of systems containing noncovalent interactions. Use of the GeomeTRIC optimizer is specified with the ``engine`` argument to; :py:func:`~psi4.driver.optimize`. The optimization will respect the keywords |optking__g_convergence|; and |optking__geom_maxiter|. Any other GeomeTRIC-specific options (including cons",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:25776,monitor,monitored,25776,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['monitor'],['monitored']
Energy Efficiency,"----------------------+----------------------------------------------+; | cepa(3) | :math:`-\epsilon_{ij}+\sum_k(\epsilon_{ik}+\epsilon_{jk})` | :math:`-\epsilon_{ii}+2\sum_k \epsilon_{ik}` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+; | acpf | :math:`\frac{2}{N} E_c` | :math:`\frac{2}{N} E_c` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+; | aqcc | :math:`[1-\frac{(N-3)(N-2)}{N(N-1)}]E_c` | :math:`[1-\frac{(N-3)(N-2)}{N(N-1)}]E_c` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+. .. comment | dci | :math:`E_c` | NA |; .. comment +-------------------------+------------------------------------------------------------+----------------------------------------------+. The pair correlation energy, :math:`\epsilon_{ij}`, is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. .. math::; :label: pair_energy. \epsilon_{ij} = \sum_{ab} v_{ij}^{ab} (2 t_{ij}^{ab} - t_{ij}^{ba}). Methods whose shifts (:math:`\Delta_{ij}` and :math:`\Delta_i`) do not; explicitly depend on orbitals :math:`i` or :math:`j` (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Density fitting (DF) [or the resolution of the identity (RI)] and Cholesky; decomposition (CD) techniques are popular in quantum chemistry to avoid; the computation and storage of the 4-index electron r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:12762,energy,energy,12762,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,2,['energy'],['energy']
Energy Efficiency,"--------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The charge-transfer analysis above is carried out by taking the; difference between SAPT induction as calculated in the dimer-centered; basis (*i.e.*, each monomer sees the basis functions on both monomers); vs. the monomer-centered basis (*i.e.*, each monomer utilizes only its; own basis set). It is also possible to run a closed-shell SAPT computation at any; level using only the monomer-centered basis. To do this, simply add; ``sapt_basis='monomer'`` to the energy function, such as ::. energy('sapt2',sapt_basis='monomer'). This procedure leads to faster compuations, but it converges more slowly; towards the complete basis set limit than the default procedure, which uses; the dimer-centered basis set. Hence, monomer-centered basis SAPT; computations are not recommended. The open-shell SAPT0 code is not; compatible yet with monomer-centered computations. Computations with Mid-bonds; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. SAPT computations with midbonds can be accomplished by adding a third ghost; monomer to the computation. For example ::. molecule dimer {; 0 1; He 0 0 5; --; 0 1; He 0 0 -5; --; 0 1; @He 0 0 0; }. Here the functions of the third monomer will be added to the virtual space of; the entire computation. Note that an error will be thrown if each atom in the; third monomer is not a ghost to prevent confusion with three-body SAPT which is; not currently supported by Psi4. Interpreting SAPT Results; ^^^^^^^^^^^^^^^^^^^^^^^^^. We will examine the results of a SAPT2+3/aug-cc-pVDZ computati",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:32054,energy,energy,32054,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"--------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:10997,energy,energy,10997,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"-----------------------------. Using ``std::make_shared``:. 1. Reduces code verbosity, especially when coupled with ``auto``:. .. code-block:: cpp. // Type information given 3 TIMES!!!; std::shared_ptr<Matrix> F = std::shared_ptr<Matrix>(new Matrix(""Fock matrix"", nso, nso));. // So much typing...; std::shared_ptr<Matrix> F = std::make_shared<Matrix>(""Fock matrix"", nso, nso);. // Much better!!!!; auto F = std::make_shared<Matrix>(""Fock matrix"", nso, nso);. 2. Ensures exception safety and prevents resource leaks. 3. Improves efficiency:. .. code-block:: cpp. // Performs TWO allocations; std::shared_ptr<Matrix> F = std::shared_ptr<Matrix>(new Matrix(""Fock matrix"", nso, nso));. // Performs ONE allocation; auto F = std::make_shared<Matrix>(""Fock matrix"", nso, nso);. *Reference:* Item 21 in `[Effective Modern C++] <https://isbnsearch.org/isbn/9781491903995>`_. .. _`faq:autodecl`:. Prefer ``auto`` to explicit type declarations; ---------------------------------------------. Using ``auto`` reduces and/or avoids:. 1. Verbosity in variable declarations:. .. code-block:: cpp. std::shared_ptr<Matrix> F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); // So much typing...; auto F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); // Much better!. 2. Problems with uninitialized variables. auto works like template type; deduction, hence the right-hand side of the declaration needs to have an; initializer:. .. code-block:: cpp. int x1; // fine, but uninitialized :(; auto x2; // WON'T COMPILE!!!; auto x3 = 1; // fine and initialized. 3. Problems with unintended type casts and type mismatches that are hard; to impossible to catch:. .. code-block:: cpp. std::vector<int> v;; // !!! The size of a vector is of type std::vector<int>::size_type and is compiler- AND architecture-DEPENDENT; unsigned sz = v.size(); // might not be correct on some compiler/machines; auto size = v.size(); // size is ALWAYS of the correct type. *Reference:* Items 2 and 5 in `[Effective Modern C++] <https://",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_style_c.rst:2838,reduce,reduces,2838,doc/sphinxman/source/prog_style_c.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_style_c.rst,1,['reduce'],['reduces']
Energy Efficiency,"----------------------------; ""(T) CORRECTION ENERGY"" => -0.007263598030; ""CCSD CORRELATION ENERGY"" => -0.275705492359; ""CCSD TOTAL ENERGY"" => -76.338453952539; ""CCSD(T) CORRELATION ENERGY"" => -0.007263598030; ""CCSD(T) TOTAL ENERGY"" => -76.345717550569; ""CFOUR ERROR CODE"" => 0.000000000000; ""CURRENT CORRELATION ENERGY"" => -0.007263598030; ""CURRENT ENERGY"" => -76.345717550569; ""CURRENT REFERENCE ENERGY"" => -76.062748460180; ""MP2 CORRELATION ENERGY"" => -0.270191667755; ""MP2 OPPOSITE-SPIN ENERGY"" => -0.204890356651; ""MP2 SAME-SPIN ENERGY"" => -0.065301311104; ""MP2 TOTAL ENERGY"" => -76.332940127935; ""NUCLEAR REPULSION ENERGY"" => 9.187331653300; ""SCF TOTAL ENERGY"" => -76.062748460180. The PSI Variables are also available from the input file for manipulation.; For instance, to compute the MBPT 2 3/4 energy from MBPT 3 results, the; following could be used. ::. energy('c4-mp3'); mp2p75_corl = 0.75 * get_variable('mp3 correlation energy') + \; 0.25 * get_variable('MP2 correlation energy'); print mp2p75_corl + get_variable('scf total energy'). .. caution:: Some features are not yet implemented. Buy a developer a coffee. - No PSI Variables for properties: *e.g.*, :psivar:`SCF DIPOLE`. - No PSI Variables for excited state energies. The formation of further regexes for properties, excited states, etc.; is one of the primary areas in which this interface requires further; work. .. rubric:: Gradients and Arrays. In addition to parsing the output stream, results are collected from files; written to the scratch directory. Presently, the ``GRD`` file is parsed; and printed to the output file, as shown below. Also printed is the Cfour; gradient after manipulation by the P4C4 interface and used by |PSIfour|; going forward. Manipulation is necessary because Cfour determinedly uses; its own internal orientation and atom ordering while |PSIfour| naturally; expects the gradient to be aligned with the active molecule. The geometry; in ``GRD`` and the geometry of |PSIfours| active molecule a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:23778,energy,energy,23778,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,2,['energy'],['energy']
Energy Efficiency,"---------------------. Substituting the full installation directory :samp:`{prefix}` and a; suitable scratch directory, issue the following commands directly in your; terminal or place them into your ""rc"" file and open a new terminal. (To; use a staged installation directory, substitute; :samp:`{objdir}/stage` for :samp:`{prefix}`.). .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PYTHONPATH {prefix}/lib:$PYTHONPATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PYTHONPATH={prefix}/lib:$PYTHONPATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. * :ref:`faq:psi4psiapipath`. Run |PSIfour|. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:runfrombinary`:. How to run Psi4 as executable or Python module from conda installation; ----------------------------------------------------------------------. The configuration commands below are generic versions of the ones printed; to your screen as advice upon installing |PSIfour| into a Anaconda,; Miniconda, or Psi4conda distribution, :samp:`{condadist} =; {ana|mini|psi4}conda`. To see the message again after initial installation,; with the conda environment active, run ``.psi4-post-link.sh``.; If ``which conda python psi4`` points to your; :samp:`{condadist}` and ``echo $PSI_SCRATCH`` is set, skip ahead to the; ""Run |PSIfour|\"" commands below. Otherwise, issue the following; commands directly in your terminal or place them into your ""rc"" file and; open a new terminal. If you installed the Psi4conda distribution or installed the |PSIfour|; conda package into the m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:30415,energy,energy,30415,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"-06 and ODC-12 |scf__reference| ``RHF`` is only available for; |dct__algorithm| ``SIMULTANEOUS``. To compute :math:`(\lambda_3)` correction,; the |dct__three_particle| option needs to be set to PERTURBATIVE. .. _`sec:dctmininput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for the DCT single-point computation looks like this::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; energy('dct'). The ``energy('dct')`` call to :py:func:`~psi4.driver.energy` executes the DCT; module, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default). * In cases when available memory is insufficient, the use of the |dct__ao_basis| ``DISK`` option; is recommended. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation. * In cases when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:17122,energy,energy,17122,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,-3 dfmp2-4 dfmp2-5 dfmp2-fc dfmp2-freq1 dfmp2-freq2; dfccsd-grad2 dfccsd-t-grad2 dfccsdat2 dfccsdt2; dfmp2-grad1 dfmp2-grad2 dfmp2-grad3 dfmp2-grad4 dfmp2-grad5 dfomp2-1 dfomp2-2 dfomp2-3; dfomp2-4 dfomp2-grad1 dfomp2-grad2 dfomp2-grad3 dfomp3-1 dfomp3-2; dfomp3-grad1 dfomp3-grad2 dfomp2p5-1 dfomp2p5-2 dfomp2p5-grad1; dforemp-grad1 dforemp-grad2 dfremp-1 dfremp-2; dft-grad-lr1 dft-grad-lr2 dft-grad-lr3 dft-grad-disk; dfomp2p5-grad2 dfrasscf-sp dfscf-bz2 dft-b2plyp dft-grac dft-ghost dft-grad-meta; dft-freq dft-freq-analytic1 dft-freq-analytic2 dft-grad1 dft-grad2 dft-psivar dft-b3lyp dft1 dft-vv10; dft1-alt dft2 dft3 dft-omega dft-dens-cut dlpnomp2-1 dlpnomp2-2 dlpnomp2-3; docs-bases docs-dft explicit-am-basis extern1 extern2 extern3 extern4; fsapt1 fsapt2 fsapt-terms fsapt-allterms fsapt-ext fsapt-ext-abc fsapt-ext-abc2; fsapt-ext-abc-au isapt1 isapt2 isapt-siao1 fisapt-siao1 isapt-charged; fci-dipole fci-h2o fci-h2o-2 fci-h2o-fzcv fci-tdm fci-tdm-2; fci-coverage; fcidump; fd-freq-energy fd-freq-energy-large fd-freq-gradient; fd-freq-gradient-large fd-gradient freq-isotope1 freq-isotope2 fnocc1 fnocc2; fnocc3 fnocc4 fnocc5 fnocc6 fnocc7 frac frac-ip-fitting frac-sym frac-traverse ghosts gibbs; lccd-grad1 lccd-grad2 matrix1 matrix2; mbis-1 mbis-2 mbis-3 mbis-4 mbis-5 mbis-6 mcscf1 mcscf2 mcscf3; mints1 mints2 mints3 mints4 mints5 mints6 mints8 mints-benchmark mints-helper; mints9 mints10 mints15 molden1 molden2 mom mom-h2o-3 mom-h2o-4; mp2-1 mp2-def2 mp2-grad1 mp2-grad2 mp2-h mp2p5-grad1 mp2p5-grad2 mp3-grad1 mp3-grad2; mp2-property mpn-bh nbody-he-cluster nbody-intermediates nbody-nocp-gradient; nbo nbody-cp-gradient nbody-vmfc-gradient nbody-vmfc-hessian nbody-hessian nbody-convergence; nbody-freq nbody-multi-level nbody-multi-level-2 numpy-array-interface; olccd-freq1 olccd-grad1 olccd-grad2 olccd1 olccd2 olccd3; omp2-1 omp2-2 omp2-3 omp2-4 omp2-5 omp2-grad1 omp2-grad2; omp2p5-1 omp2p5-2 omp2p5-grad1 omp2p5-grad2 omp3-1 omp3-2; omp3-3 omp3-4 omp3-5 omp3-grad1 omp3,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:3310,energy,energy,3310,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"-D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Et",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28554,energy,energy,28554,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"-D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERG",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:29212,energy,energy,29212,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"-Gordan coefficients:; accordingly, the :math:`S^{2}` approximation implies a Heisenberg Hamiltonian; picture with a single coupling strength parameter determining all the; splittings. This method can be invoked with `energy(""SF-SAPT"")` and; publications resulting from the use of the SF-SAPT code should cite the; following publications: [Patkowski:2018:164110]_. .. _`sec:saptinf`:. Higher-Order Exchange Terms without Single-Exchange Approximation; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Recently, several SAPT higher-order exchange terms have been derived without; the :math:`S^{2}` approximation: :math:`E_{exch-ind}^{(20)}` [Schaffer:2012:1235]_, ; :math:`E_{exch-disp}^{(20)}` [Schaffer:2013:2570]_, and :math:`E_{exch-ind}^{(30)}` ; [Waldrop:2021:024103]_. The second-order terms can be computed with the following; settings::. set SAPT_DFT_FUNCTIONAL HF; set DO_IND_EXCH_SINF true # calculate Exch-Ind20 (S^inf) ; set SAPT_DFT_MP2_DISP_ALG fisapt ; set DO_DISP_EXCH_SINF true # calculate Exch-Disp20 (S^inf); energy('sapt(dft)'); ; and the third-order exchange-induction term is computed as follows::. set DO_IND30_EXCH_SINF true # calculate Exch-Ind30 (S^inf) ; energy('sapt2+3'); ; These calculations are performed with the atomic orbital and ; density-fitting scheme described in the Supplementary Material to; [Smith:2020:184108]_ for the second-order terms and in [Waldrop:2021:024103]_; for the third-order exchange induction. The coupled (response) version of the; exchange-induction corrections are also calculated, exactly for ; :math:`E_{exch-ind,resp}^{(20)}` and by scaling the uncoupled term for; :math:`E_{exch-ind,resp}^{(30)}`. S^inf Keywords; ~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ind_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_disp_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_ind30_exch_sinf.rst. .. _`sec:saptd`:. SAPT0-D; ~~~~~~~. In SAPT0, the computation of :math:`E_{disp}^{(20)} + E_{exch-disp}^{(20",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:44953,energy,energy,44953,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+3 DISP ENERGY; SAPT2+3 ELST ENERGY; SAPT2+3 EXCH ENERGY; SAPT2+3 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the tota",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:53891,energy,energy,53891,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"-disp}^{(30)} + E_{exch-ind-disp}^{(30)}). where :math:`E_{int}^{MP2, corr}` is the correlation part of the supermolecular MP2 ; interaction energy. :math:`\delta_{MP2}^{(2)}` and :math:`\delta_{MP2}^{(3)}` also improve the ; description of electrostatically dominated complexes. :math:`\delta_{MP2}^{(2)}`; can be applied to SAPT2+ or SAPT2+(3) energies whereas :math:`\delta_{MP2}^{(3)}` ; should be applied to SAPT2+3 energies. A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; without an improved CCD treatment of dispersion) using different basis sets; is reported in [Parker:2014:094106]_. The closed-shell SAPT module relies entirely on the density-fitting approximation; of the two-electron integrals. The factorization of the SAPT energy; expressions, as implemented in |PSIfour|, assumes the use of density-fitted; two-electron integrals, therefore, the closed-shell SAPT module cannot be run with; exact integrals. In practice, we have found that the density-fitting; approximation introduces negligible errors into the SAPT energy ; (often less than 0.01 kcal/mol for small dimers) and greatly; improves efficiency. . The latest addition to the SAPT code is the SAPT0 method for open-shell ; monomers [Gonthier:2016:134106]_. This code is available for both exact and density fitted integrals, ; except for the dispersion terms which implementation relies on a density fitting; factorization. Both ``UHF`` and ``ROHF`` |scf__reference| can be used, but coupled; induction computations are currently not supported with ``ROHF``. This means that orbital; relaxation is not included for ``ROHF`` and the uncoupled induction term is computed instead.; If both monomers are open-shell, their coupling is assumed to be high spin, i.e.; two doublets would interact to form a triplet. The *S*\ :superscript:`2` ap",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:10158,energy,energy,10158,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484448,energy,energy,484448,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,". . .. comment Notes to Self; .. comment ~~~~~~~~~~~~~; .. comment ; .. comment Test checked-in GENBAS on installed copy; .. comment ; .. comment Reference still not factored into cc_program!; .. comment ; .. comment optimize on a sandwich calc? errors out; .. comment ; .. comment ; .. comment .. _`table:cfour_cc_program`:; .. comment ; .. comment .. table:: Cfour coupled-cluster program defaults by calculation type; .. comment ; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment | | | | RHF | UHF | ROHF |; .. comment | | | +--------+--------+---------+; .. comment | Driver Call, |cfour__cfour_deriv_level| | name, |cfour__cfour_calc_level| | |cfour__cfour_excite| | |cfour__cfour_cc_program| |; .. comment +=========================================+=================================+=======================+========+========+=========+; .. comment | :py:func:`~psi4.energy`, zero | cc2 | none | vcc | vcc | vcc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | _cc | _cc | _cc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea/eomip | _cc | _cc | _cc |; .. comment | +---------------------------------+-----------------------+--------+--------+---------+; .. comment | | ccsd | none | ecc | ecc | ecc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | ecc | _cc | _cc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea/eomip | _cc | _cc | _cc |; .. comment | +---------------------------------+-----------------------+--------+--------+---------+; .. comment | | ccsd(t) | none | ecc | ecc | ecc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | _cc | _cc | _cc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:43373,energy,energy,43373,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,". .. math:: E_{disp}^{(3)}=-\frac{1}{6}\sum_{A\neq B\neq C}\frac{C_{9}^{ABC}(3\cos{\theta_a}\cos{\theta_b}\cos{\theta_c}+1)}{(r_{AB}r_{BC}r_{AC})^{3}}f_{damp}(\bar{r}_{ABC}); ; where :math:`\theta_a` is the angle at atom A corresponding to the triangle formed by atoms A, B, and C,; and :math:`\bar{r}_{ABC}` is the geometric mean of the corresponding atomic-pair distances.; The dispersion coefficients are defined as. .. math:: C_{9}^{ABC} = \sqrt{C_{6}^{AB}C_{6}^{BC}C_{6}^{AC}}. See the `DFT-D3 documentation <https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/man.pdf>`_ ; for more details. For now, the three-body correction can be called by using the :py:func:`~psi4.core.Molecule.run_dftd3`; function with `d3-atmgr` as the passed functional string. ; For example, the three-body ATM dispersion correction for a neon trimer could; be computed with::. molecule ne3 {; Ne 0.0 0.0 0.0; Ne 0.0 0.0 1.0; Ne 0.0 1.0 1.0; }; ne.update_geometry(); energy = m.run_dftd3('d3-atmgr', dertype=0); print(energy). Since v1.7, it is preferred to use ``s-dftd3`` for ATM since the 3-body can be run concurrent; with the 2-body contribution. .. rubric:: Footnotes. .. [#f0] Note that there are functionals with these extensions (*e.g.*, wB97X-D) that, ; not being Grimme corrections, won't follow this table exactly.; ; .. [#f1] [Grimme:2004:1463]_; .. [#f2] [Grimme:2006:1787]_; .. [#f3] [Grimme:2010:154104]_; .. [#f4] [Grimme:2011:1456]_; .. [#f5] [Smith:2016:2197]_; .. [#f6] [Hujo:2011:3866]_; .. [#f7] [Chai:2010:6615]_; .. [#f8] [Pernal:2009:263201]_; .. [#f9] [Podeszwa:2010:550]_. .. [#f10] Keyword not used for user-defined functionals where the ``dft_dict[""dispersion""][""params""]``; is easily editable for this purpose. See :ref:`sec:dftdictbuilder`. .. [#f11] [Caldeweyher:2019:154122]_. A few practical examples:. * DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with default parameters ::. optimize('pbe-d3bj'). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:22298,energy,energy,22298,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,". Complete Basis Set; ==================. .. toctree::; :hidden:. cbs_eqn. .. codeauthor:: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; .. sectionauthor:: Lori A. Burns and Peter Kraus. The :py:func:`psi4.driver.cbs` function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; :py:func:`psi4.driver.energy`, :py:func:`psi4.driver.gradient`, *etc.* For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. * ``energy('mp2/cc-pv[dt]z')``. * ``energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z')``. * ``energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}])``. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like ::. energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; :py:func:`psi4.driver.cbs` and extrapolation schemes like; :py:func:`psi4.driver.driver_cbs_helper.xtpl_highest_1` and; :py:func:`psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2` and composite; aliases like :py:func:`psi4.driver.aliases.sherrill_gold_standard`; and :py:func:`psi4.driver.aliases.allen_focal_point` in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. * ``optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz')``. * ``optimize(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz')``. *",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:2168,energy,energy,2168,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,". For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF solution exists while respecting the constraints of the original; solution; this is an internal instability. If one or more constraints have to be relaxed to reach; a lower-energy solution, there is an external instability. In |PSIfour|, the only external instability; that can be checked at present is the RHF :math:`\rightarrow` UHF one. Currently, two algorithms exist in |PSIfour| for stability analysis: the original; Direct Inversion and the newly implemented Davidson algorithms. We will first describe; options common to both algorithms. To request a stability analysis at the end of the SCF,; set the keyword |scf__stability_analysis|. Value ``CHECK`` only computes the electronic; Hessian eigenvalue and checks if an actual SCF minimum has been found, while value ``FOLLOW``; rotates the converged orbitals along the lowest eigenvector, then invokes the SCF; procedure again to lower the energy. In case the minimization does not succeed; or ends up on the same unstable solution, you can tune the scale factor for the orbital; rotation through the keyword |scf__follow_step_scale|.; The rotation angle is :math:`\frac{\pi}{2}\mbox{ } \cdot` (|scf__follow_step_scale|). The default value of; 0.5 usually provides a good guess, and modification is only recommended in difficult cases.; The default behavior for the stability code is to stop after trying to reoptimize the orbitals once; if the instability still exists. For more attempts, set |scf__max_attempts|;; the default value of 1 is recommended. In case the SCF ends up in the same minimum, modification; of |scf__follow_step_scale| is recommended over increasing |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF ins",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:47091,energy,energy,47091,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,". How to run Psi4 as Python module after compilation; --------------------------------------------------. Substituting the full installation directory :samp:`{prefix}` and a; suitable scratch directory, issue the following commands directly in your; terminal or place them into your ""rc"" file and open a new terminal. (To; use a staged installation directory, substitute; :samp:`{objdir}/stage` for :samp:`{prefix}`.). .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PYTHONPATH {prefix}/lib:$PYTHONPATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PYTHONPATH={prefix}/lib:$PYTHONPATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. * :ref:`faq:psi4psiapipath`. Run |PSIfour|. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:runfrombinary`:. How to run Psi4 as executable or Python module from conda installation; ----------------------------------------------------------------------. The configuration commands below are generic versions of the ones printed; to your screen as advice upon installing |PSIfour| into a Anaconda,; Miniconda, or Psi4conda distribution, :samp:`{condadist} =; {ana|mini|psi4}conda`. To see the message again after initial installation,; with the conda environment active, run ``.psi4-post-link.sh``.; If ``which conda python psi4`` points to your; :samp:`{condadist}` and ``echo $PSI_SCRATCH`` is set, skip ahead to the; ""Run |PSIfour|\"" commands below. Otherwise, issue the following; commands directly in your terminal or place them into your ""rc"" file and; open a new terminal. If you instal",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:30328,energy,energy,30328,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,". The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN A (LEN) - h TRANSITION. The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN) - h TRANSITION. The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN). The length-gauge rotatory strength of the transition from root *m* to root *n*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) ROTATORY",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:14138,energy,energy,14138,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,". psivar:: SAPT0 TOTAL ENERGY; SSAPT0 TOTAL ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+3 TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory. .. psivar:: SAPT2+(CCD) DISP ENERGY; SAPT2+(CCD) ELST ENERGY; SAPT2+(CCD) EXCH ENERGY; SAPT2+(CCD) IND ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+3(CCD) DISP ENERGY; SAPT2+3(CCD) ELST ENERGY; SAPT2+3(CCD) EXCH ENERGY; SAPT2+3(CCD) IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates coupled-cluster dispersion.; The sum of these four components yields the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT2+(CCD) TOTAL ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+3(CCD) TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. .. psivar:: SAPT2+DMP2 DISP ENERGY; SAPT2+DMP2 ELST ENERGY; SAPT2+DMP2 EXCH ENERGY; SAPT2+DMP2 IND ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 IND ENERGY; SAPT2+3DMP2 DISP ENERGY; SAPT2+3DMP2 ELST ENERGY; SAPT2+3DMP2 EXCH ENERGY; SAPT2+3DMP2 IND ENERGY; SAPT2+(CCD)DMP2 DISP ENERGY; SAPT2+(CCD)DMP2 ELST ENERGY; SAPT2+(CCD)DMP2 EXCH ENERGY; SAPT2+(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+3(CCD)DMP2 DISP ENERGY; SAPT2+3(CCD)DMP2 ELST ENERGY; SAPT2+3(CCD)DMP2 EXCH ENERGY; SAPT2+3(CCD)DMP2 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates MP2 induction correction.; The sum of these four components yields the :sam",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:56017,energy,energy,56017,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,".. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; triple: setting; keywords; cbs(); see: complete_basis_set(); cbs(); single: basis set; delta correction. .. _`sec:cbs()`:. Complete Basis Set; ==================. .. toctree::; :hidden:. cbs_eqn. .. codeauthor:: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; .. sectionauthor:: Lori A. Burns and Peter Kraus. The :py:func:`psi4.driver.cbs` function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; :py:func:`psi4.driver.energy`, :py:func:`psi4.driver.gradient`, *etc.* For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. * ``energy('mp2/cc-pv[dt]z')``. * ``energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z')``. * ``energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}])``. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like ::. energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; :py:func:`psi4.driver.cbs` and extrapolation schemes lik",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:1446,power,powerful,1446,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['power'],['powerful']
Energy Efficiency,".. #; .. # @BEGIN LICENSE; .. #; .. # Psi4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. Psithon documentation master file, created by; sphinx-quickstart on Sun Feb 12 04:25:25 2012.; You can adapt this file completely to your liking, but it should at least; contain the root `toctree` directive. ==========================================; |PSIfour|\ : Open-Source Quantum Chemistry; ==========================================. .. toctree::; :maxdepth: 2; :caption: Contents:; ; introduction; external; index_tutorials; psithoninput; methods; interfacing; psithonfunc; customizing. .. toctree::; :maxdepth: 3. appendices. ===================; Programmers' Manual; ===================. .. toctree::; :maxdepth: 2. prog_intro; prog_newcode; prog_corelibs; prog_integrals; add_tests; prog_debug_profile; documentation; code_style; psipep; manage_index; psi4api; external_apis. * Indices. - :ref:`genindex`; - :ref:`modindex`; - :ref:`search`. .. comment autodoc_available_plugins; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/index.rst:1126,adapt,adapt,1126,doc/sphinxman/source/index.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/index.rst,1,['adapt'],['adapt']
Energy Efficiency,".. #; .. # @BEGIN LICENSE; .. #; .. # Psi4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. _`sec:psithonFunc`:. =========================================; Psithon Functions: Invoking a Calculation; =========================================. To allow arbitrarily complex computations to be performed, |PSIfour| is built; upon the Python interpreter, with modifications termed Psithon. Sec. ; :ref:`sec:psithonInput` describes the non-standard Python associated with; clean molecule, basis, and option specification in the |PSIfour| input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent |PSIfours| functionality. .. toctree::; :maxdepth: 2. notes_py; energy; prop; nbody; opt; freq; db; cbs; diatomic; intercalls; sowreap; cubeprop. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonfunc.rst:1553,efficient,efficient,1553,doc/sphinxman/source/psithonfunc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonfunc.rst,2,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,".. #; .. # @BEGIN LICENSE; .. #; .. # Psi4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: single-point, energy(); triple: setting; keywords; energy(). .. _`sec:energy()`:. Single-Point Energy |w---w| :py:func:`~psi4.driver.energy`; ==========================================================. * :ref:`Psi4 Native Energy Methods <table:energy_gen>`; * :ref:`Psi4 Native DFT Energy Methods <table:energy_dft>`; * :ref:`MRCC Interfaced Energy Methods <table:energy_mrcc>`; * :ref:`CFOUR Interfaced Energy Methods <table:energy_cfour>`. .. autofunction:: psi4.energy(name [, molecule, return_wfn, restart_file]); :noindex:. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/energy.rst:1086,energy,energy,1086,doc/sphinxman/source/energy.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/energy.rst,5,['energy'],['energy']
Energy Efficiency,".. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. Notes on Options; ================. .. comment warning:: Python naming practices of file_that_includes_function.function_name(); are followed below. In psi4 input files, it is only necessary to call the; function name alone. That is, use ``energy('scf')``, not ``driver.energy('scf')``. .. note:: The Python options referred to in the :ref:`sec:psithonFunc` section below; are placed as arguments to a Python; function (like ``energy()``), not in ``set`` blocks or commands.; .. comment and indexed in :ref:`apdx:options_py`. .. note:: All |PSIfour| keyword names and values are insensitive to case, both; those that are placed in ``set`` blocks and as Python function arguments.; The one exception is documented for the *subset* option in the :py:func:`~psi4.driver.wrapper_database.database`; function, where case structure must match the database file. .. _`op_py_bool`:. .. _`op_py_boolean`:. .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_py_dertype`:. .. note:: The derivative level type for :py:func:`~psi4.driver.optimize` and :py:func:`~psi4.driver.frequency` functions can be specified by ``energy``, ``none``, or ``0`` for 0th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_py.rst:1290,energy,energy,1290,doc/sphinxman/source/notes_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_py.rst,1,['energy'],['energy']
Energy Efficiency,".. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:tutorial`:. ==================================================; Psithon Tutorial: Using |PSIfour| as an Executable; ==================================================. .. note:: Psithon and PsiAPI refer to two modes of interacting with |PSIfour|. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don't have ``psi4.`` in front, then; submit it to the executable ``psi4`` which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with ``import psi4`` at the top and commands are behind; the ``psi4.`` namespace, then submit it to the ``python`` interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. .. note:: Some |PSIfour| functions and keywords have aliases. For example,; ``frequency()``, ``frequencies()``, and ``freq()`` all work to ; obtain vibrational frequencies. Basic Input File Structure; ==========================. |PSIfour| reads input from a text file, which can be prepared in any standard; text editor. The default input file name is ``input.dat`` and the; default output file name is ``output.dat``. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering every",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:1770,power,powerful,1770,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['power'],['powerful']
Energy Efficiency,".. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:51773,energy,energy,51773,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,".0 1.0; Ne 0.0 1.0 1.0; }; ne.update_geometry(); energy = m.run_dftd3('d3-atmgr', dertype=0); print(energy). Since v1.7, it is preferred to use ``s-dftd3`` for ATM since the 3-body can be run concurrent; with the 2-body contribution. .. rubric:: Footnotes. .. [#f0] Note that there are functionals with these extensions (*e.g.*, wB97X-D) that, ; not being Grimme corrections, won't follow this table exactly.; ; .. [#f1] [Grimme:2004:1463]_; .. [#f2] [Grimme:2006:1787]_; .. [#f3] [Grimme:2010:154104]_; .. [#f4] [Grimme:2011:1456]_; .. [#f5] [Smith:2016:2197]_; .. [#f6] [Hujo:2011:3866]_; .. [#f7] [Chai:2010:6615]_; .. [#f8] [Pernal:2009:263201]_; .. [#f9] [Podeszwa:2010:550]_. .. [#f10] Keyword not used for user-defined functionals where the ``dft_dict[""dispersion""][""params""]``; is easily editable for this purpose. See :ref:`sec:dftdictbuilder`. .. [#f11] [Caldeweyher:2019:154122]_. A few practical examples:. * DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with default parameters ::. optimize('pbe-d3bj'). * DFT-D2 optimization with custom s6 parameter ::. set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). * DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values) ::. set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). * DFT-D2 single point with ``dftd3`` instead of |PSIfours| libdisp ::. energy('pbe-d2', engine='dftd3'). If only dispersion corrections (rather than total energies) are of; interest, the dispersion programs can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_dftd3` or :py:func:`~qcdb.Molecule.run_dftd4`. (These functions; call QCEngine, which is the same |PSIfour| + ``dftd3``/``dftd4`` interface that is called during an scf job.); This ""D-only"" route is much faster than running a DFT-D energy.; This route is NOT available for ``s-dftd3``. File an issue if a definite need arises. Note that in a ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:23190,energy,energy,23190,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,".0 4.0; --; efp ch3oh; 1.275 -2.447 -4.673; 0.709 -3.191 -3.592; 2.213 -1.978 -4.343; }. Running EFP ; ~~~~~~~~~~~~. EFP can be invoked in similar fashion as other theories provided in |PSIfour|.; For example, if you want to obtain the EFP interaction energy for benzene and two waters,; simply provide the following::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o 4.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; energy('efp'). This computation involves purely EFP/EFP fragment interactions and is; performed entirely by the LIBEFP library. |PSIfour| can also handle mixed; systems of quantum mechanical (QM) and EFP fragments through the native; :ref:`SCF <sec:scf>` code augmented by calls to the LIBEFP library. For; example, turning one of the waters in the example above into a QM; fragment is shown below. ::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; O 4.0 0.0 0.0; H 4.7 0.7 0.0; H 3.3 -0.7 0.0 ; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; set basis 6-31g; energy('scf'). Whenever an EFP fragment is present in the active molecule, the SCF energy; will include EFP contributions. .. warning:: Although the EFP geometry is specified alongside the QM; geometry in a ``molecule name {...}`` block, internally the handling; of EFP is not so clean. In straightforward input files that involve; any number of [molecule block, energy/opt/etc, clean()] portions,; there should be no problem; the energy/opt computation will always; be run on the molecule defined in the preceding block. For advanced; users, unexpected difficulties may arise due to: (1) the EFP fragment; from the last molecule block executed will always be active (and; potentially interfering with SCF) and (2) recalling a molecule; through ``activate(name)`` (where ``name`` was the python handle; in the molecule block) will not load up any EFP portion of that; molecule. This divergent treatment is a stopgap while we determine; how best to handle molecules with different domains. At thi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:8636,energy,energy,8636,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['energy'],['energy']
Energy Efficiency,".19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.62694337910040 -1.86635e-06 1.65616e-05 DIIS; @DF-UHF iter 7: -149.62694340915198 -3.00516e-08 2.68990e-06 DIIS; @DF-UHF iter 8: -149.62694340999315 -8.41169e-10 2.61249e-07 DIIS. DF guess converged.; ... @UHF iter 9: -149.62730705472407 -3.63645e-04 8.63697e-05 DIIS; @UHF iter 10: -149.62730737348096 -3.18757e-07 1.50223e-05 DIIS; @UHF iter 11: -149.62730738537113 -1.18902e-08 3.80466e-06 DIIS; @UHF iter 12: -149.62730738624032 -8.69193e-10 7.06634e-07 DIIS. The first set of iterations are from the DF portion of the computation, the; second set uses the exact (but much slower) Direct algorithm. Within the DF portion; of the computation, the zeroth-iteration uses a non-idempotent density matrix; obtained from the SAD guess, so the energy is unphysically low. However, the; first true iteration is quite close to the final DF energy, highlighting the; efficiency of the SAD guess. Pulay's DIIS procedure is then used to accelerate; SCF convergence, with the DF phase reaching convergence in eight true; iterations. When used together, SAD and DIIS are usually sufficient to converge; the SCF for all but the most difficult systems. Additional convergence; techniques are available for more difficult cases, and are detailed below. At; this point, the code switches on the requested Direct integrals technology, which; requires only four full iterations to reach convergence, starting from the DF; guess. This hybrid DF/Direct procedure can significantly accelerate SCF; computations requiring exact integrals. After the iterations are completed, a number of one-electron properties are; printed, and some bookkeeping is performed to set up possible correlated; computations. Additional one-electron properties are available by increasing the; |globals__print| option. Also printed are the occupied and virtual orbital en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:4052,energy,energy,4052,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,".5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:390035,energy,energy,390035,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,".5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278080,energy,energy,278080,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,".5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:397078,energy,energy,397078,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,".5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278871,energy,energy,278871,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,".; # if (NOT eri_c4_d2_l2 IN_LIST Libint2_CONFIGURATION); # message(WARNING ""Libint2 detected but missing ERI 2nd derivative integrals (components eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3). Psi4 will automatically fall back to finite difference.""); # endif(); add_library(libint2_external INTERFACE) # dummy. if(${CMAKE_INSIST_FIND_PACKAGE_Libint2}); message(VERBOSE ""Suitable Libint2 located externally as user insists""); endif(). else(); if(${CMAKE_INSIST_FIND_PACKAGE_Libint2}); message(FATAL_ERROR ""Suitable Libint2 could not be externally located as user insists""); endif(). # stopgap to avert a report that static lib not working on Linux; set(_build_shared_libs ""ON""). # reportedly Debug takes forever to build on Mac; set(_cmake_build_type ""Release""). include(ExternalProject). if(NOT ${BUILD_Libint2_GENERATOR}); if (${MAX_AM_ERI} GREATER 5); set(_url_am_src ""7-7-4-12-7-5"") # passes E&G 7z conv and 6z df, H Qz conv and df. covers all internal basis sets for energy and gradient; elseif (${MAX_AM_ERI} LESS_EQUAL 5); set(_url_am_src ""5-4-3-6-5-4"") # passes full. production Mac, temp production Linux; endif(). set(_url_l2_tarball ""https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.1-${_url_am_src}_mm10f12ob2_0.tgz""). message(STATUS ""Suitable Libint2 could not be located, ${Magenta}Building Libint2 ${_url_am_src}${ColourReset} instead.""). if (MSVC); # Windows shared (dll) can't work; set(_build_shared_libs ""OFF""); endif(). ExternalProject_Add(libint2_external; URL ${_url_l2_tarball}; CMAKE_ARGS -GNinja; -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${_cmake_build_type}; -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}; -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}; -DCMAKE_INSTALL_BINDIR=${CMAKE_INSTALL_BINDIR}; -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}; -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}; -DBoost_DIR=${Boost_DIR}; -DBOOST_ROOT=${BOOST_ROOT}; -DEigen3_DIR=${Eigen3_DIR}; -DEigen3_ROOT=${Eigen3_ROOT}; -DBUILD_SHARED_LIBS=${_build",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:6254,energy,energy,6254,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,".; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; :math:`S^2` metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16722,energy,energy,16722,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,".; Then enable it as a feature with :makevar:`ENABLE_dkh`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect dkh and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. dkh from conda without thinking, consult. * To remove a conda installation, ``conda remove dkh``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/dkh.svg?maxAge=2592000; :target: https://github.com/psi4/dkh. * If using |PSIfour| built from source and you want dkh built from; from source also,; enable it as a feature with :makevar:`ENABLE_dkh`,; and let the build system fetch and build it and activate dependent code. .. _`sec:dkhinput`:. Input; ~~~~~. For all electron calculations one can use the Douglas-Kroll-Hess (DKH); Hamiltonian to take into account scalar relativistic effects. Minimal input for DKH single-point computation looks like this::. molecule {; Mg; }. set basis aug-cc-pvdz-dk; set relativistic dkh. energy('scf'). By default a 2nd-order DKH calculation is performed. To change the default; order use the |globals__dkh_order| option. The version of the code found in; |Psifour| is capable of up to 4th-order DKH calculations. .. _`sec:dkhkeywords`:. Keywords; ~~~~~~~~. .. include:: autodir_options_c/globals__relativistic.rst; .. include:: autodir_options_c/globals__dkh_order.rst. Reference; ~~~~~~~~~. When using this code please make reference to the appropriate following paper:. * ""The Generalized Douglas-Kroll Transformation,"" A. Wolf,; M. Reiher, and B. A. Hess, *J. Chem. Phys.* **117**, 9215 (2002).; (doi: `10.1063/1.1515314 <https://doi.org/10.1063/1.1515314>`_). .. _`cmake:dkh`:. How to configure dkh for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, DKH is a library that provides additional; quantum chemical capabilities (relativistic effects). * Downstream Dependencies |w---w| |PSIfour| (\ |dr| optional) dkh. * Upstream D",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dkh.rst:3126,energy,energy,3126,doc/sphinxman/source/dkh.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dkh.rst,1,['energy'],['energy']
Energy Efficiency,".g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of the more notable functionals in |PSIfour|, and links; to the complete listing of all functionals of each class are presented below:. :ref:`All Functionals <table:dft_all>`; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in `_X` or `_C` are exchange or; correlation only, and ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:17067,energy,energy,17067,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"/eomip | mrcc | mrcc | mrcc |; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment properties same as grad; .. comment 2nd deriv ecc only for ccsd(t). Specification Details; ~~~~~~~~~~~~~~~~~~~~~. The above narrative introduction to the P4C4 interface should be; sufficient to get started. Issues of competition between |PSIfour| and; Cfour specification format are generally resolved behind the scenes:; not according to a *simple* rule but according to sensible, sometimes; intricate, rules governed by user intent (and integration of Cfour to; behave like a |PSIfour| module). Much can be gleaned by just running; inputs and inspecting the ``ZMAT`` passed to Cfour, but when questions; arise, here are the specifics, the governing laws. * Specifying a piece of input in |PSIfour| format is entering into; a contract that you mean it. In particular this applies to; molecule (including charge/multiplicity through :samp:`molecule; {optional_molecule_name} \\{...\\}`), memory (through :samp:`memory; {value} {unit}`), computational method (through . If Cfour keywords; are specified with values that contradict the |PSIfour| input,; execution is halted. As an example, the input below is set up to fail in four ways:; contradictory specification of memory, multiplicity, computational; method, and derivative level. Note, though, that the ``cfour_units; angstrom`` setting is permissible, since it concurs with the value; implied in the molecule block. ::. memory 300 mb. molecule {; H; H 1 0.7; }. set basis 6-31g; set cfour_multiplicity 3 # clash with implicit singlet in molecule {} above; set cfour_units angstrom # no problem, consistent with molecule {} above; set cfour_memory_size 100000000 # clash with 300 mb above; set cfour_calc_level ccsd # clash with 'c4-scf' below; set cfour_deriv_level first # clash with energy() below (use gradient('c4-scf') to achieve this). energy('c4-scf'). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:35631,charge,charge,35631,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['charge'],['charge']
Energy Efficiency,"/write functions; described above, the programmer also has a limited ability to directly; manipulate or examine the data in the TOC itself.; int psio_tocprint(ULI unit, FILE; *outfile): Prints the TOC of unit in a; readable form to outfile, including entry keywords and; starting/ending addresses.; int psio_toclen(ULI unit, FILE; *outfile): Returns the number of entries in the TOC; of unit.; int psio_tocdel(ULI unit, char; *key): Deletes the TOC entry corresponding to; key. NB: Do not use this function if you are not a PSI3; expert. This function only deletes the entry's reference from the TOC; itself and does not remove the corresponding data from the file.; Hence, it is possible to introduce data ""holes"" into the file.; IV. Some simple examples. The following code illustrates the basic use of the library, as well; as when/how the psio_init() and psio_done() functions; should be called in relation to initialization of libipv1. #include <stdio.h>; #include <libipv1/ip_lib.h>; #include <libpsio/psio.h>; #include <libciomr/libciomr.h>. std::string OutFileRMR;. int main(); {; int i, M, N;; double enuc, *some_data;; psio_address next; /* Special page/offset structure */. psi_start(&infile,&outfile,ψ_file_prefix,argc-1,argv+1,0);; ip_cwk_add(progid);. /* Initialize the I/O system */; psio_init(); psio_ipv1_config();. /* Open the file and write an energy */; psio_open(31, PSIO_OPEN_NEW);; enuc = 12.3456789; ; psio_write_entry(31, ""Nuclear Repulsion Energy"", (char *) &enuc,; sizeof(double));; psio_close(31,1);. /* Read M rows of an MxN matrix from a file */; some_data = init_matrix(M,N);. psio_open(91, PSIO_OPEN_OLD);; next = PSIO_ZERO;/* Note use of the special variable */; for(i=0; i < M; i++); psio_read(91, ""Some Coefficients"", (char *) (some_data + i*N),; N*sizeof(double), next, &next);; psio_close(91,0);. /* Close the I/O system */; psio_done();. ip_done();; }. char *gprgid(); {; char *prgid = ""CODE_NAME"";; return(prgid);; }. ; T. Daniel Crawford  /; crawdad@vt.edu. ; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html:8762,energy,energy,8762,doc/sphinxman/source/attic/libpsio.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html,3,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See :srcsample:`scf4` for analogous Z-matrix; and Cartiesian scans. .. _`sec:resultsTables`:. Tables of Results; =================. The Psithon function ``psi4.driver.p4util.Table`` has been removed,; as the Python ecosystem provides many more flexible alternatives. An; example tabulating a potential energy surface scan for water with Pandas; is shown below::. molecule h2o {; O; H 1 R; H 1 R 2 A; }; ; Rvals=[0.9,1.0,1.1]; Avals=range(100,103,2); ; rows = []; table = []; ; set basis cc-pvdz; ; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('mp2'); escf = variable('SCF TOTAL ENERGY'); edfmp2 = variable('MP2 TOTAL ENERGY'); escsmp2 = variable('SCS-MP2 TOTAL ENERGY'); rows.append((R, A)); table.append([escf, escsmp2, edfmp2]); ; import pandas as pd; df = pd.DataFrame(table, columns = [""E(SCF)"", ""E(SCS)"", ""E(DFMP2)""], index=rows); print(df). # E(SCF) E(SCS) E(DFMP2); # (0.9, 100) -76.020680 -76.217006 -76.221189; # (0.9, 102) -76.021305 -76.217439 -76.221605; # (1.0, 100) -76.021264 -76.224987 -76.228727; # (1.0, 102) -76.021460 -76.224946 -76.228668; # (1.1, 100) -75.990195 -76.201891 -76.205087; # (1.1, 102) -75.990085 -76.201498 -76.204676. .. _`sec:wrappers`:. Python Wrappers; ===============. The Python foundations of the |PSIfour| driver and Psithon syntax permit; many commonl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:14161,energy,energy,14161,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"0.0293; Mean Absolute Dev 0.0145 0.0605; RMS Dev 0.0161 0.0673; ------------------------------------------------------------------------------------------------------. As well as being printed in the output file, database results from the; ``tabulate`` option are available in the input file as ordinary Python; dictionaries ``DB_RGT`` and ``DB_RXN``, indexed firstly by reagent or reaction; name and secondly by the requested PSI variable name. See the first; paragraph of :ref:`sec:createDatabase` for the distinction between; reagents and reactions. For example, an input file like the following; requests a couple variables through ``tabulate`` and then makes use of the; resulting data structures, here, only to print. ::; ; set basis 6-31g*; db('mp2','s22',subset='small',tabulate=['CURRENT ENERGY','MP2 CORRELATION ENERGY']). from pprint import pprint. print_stdout('\nDB_RGT'); pprint(DB_RGT). print_stdout('\nDB_RXN'); pprint(DB_RXN). print_stdout('\nmp2 interaction energy of water dimer (S22-2)'); print_stdout(DB_RXN['S22-2']['CURRENT ENERGY']). The output to the screen is as follows. ::. DB_RGT; {'S22-16-dimer': {'CURRENT ENERGY': -155.37373581838636,; 'DF-MP2 CORRELATION ENERGY': -0.523870772178089},; 'S22-16-monoA-unCP': {'CURRENT ENERGY': -78.29412053242164,; 'DF-MP2 CORRELATION ENERGY': -0.2629759351596186},; 'S22-16-monoB-unCP': {'CURRENT ENERGY': -77.07606823017188,; 'DF-MP2 CORRELATION ENERGY': -0.2594122526144091},; 'S22-2-dimer': {'CURRENT ENERGY': -152.40958884746667,; 'DF-MP2 CORRELATION ENERGY': -0.3797598812113561},; 'S22-2-monoA-unCP': {'CURRENT ENERGY': -76.19905879745446,; 'DF-MP2 CORRELATION ENERGY': -0.1887118848315123},; 'S22-2-monoB-unCP': {'CURRENT ENERGY': -76.19902978067739,; 'DF-MP2 CORRELATION ENERGY': -0.18857384937354635},; 'S22-8-dimer': {'CURRENT ENERGY': -80.67416758080654,; 'DF-MP2 CORRELATION ENERGY': -0.2844102558783027},; 'S22-8-monoA-unCP': {'CURRENT ENERGY': -40.336952636980364,; 'DF-MP2 CORRELATION ENERGY': -0.14185962536715307},; '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:5188,energy,energy,5188,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,"00001; 7.0000000000 -0.0122978407 0.0000000000 0.0000000000; 1.0000000000 0.0040992802 -0.0051191833 -0.0088666856; 1.0000000000 0.0040992802 -0.0051191833 0.0088666856; 1.0000000000 0.0040992802 0.0102383666 0.0000000000. The gradient can also be accessed from the input file as a; :py:class:`~psi4.core.Matrix` object through the wfn as; :py:func:`psi4.core.Wavefunction.gradient`. Previously, cfour communicated through; `psi4.core.legacy_gradient` which was accessed through `psi4.core.get_gradient()`. .. rubric:: Cfour Files. The contents of all files associated with Cfour are accessible from the; input file through the Python dictionary ``P4C4_INFO``. That is,; ``P4C4_INFO['zmat']`` returns a string of the input file sent to Cfour.; Accessible arguments are ``zmat``, ``output``, and any that have been; produced of ``grd``. For example, to print to the screen if CC convergence; is reached, the following could be placed in the |PSIfour| input file. ::. energy('c4-ccsd'); print 'miracle?', 'miracle' in P4C4_INFO['output']. .. rubric:: Scratch Files. By default, a separate subdirectory for each Cfour call is created within; the job's scratch directory. To explicitly specify the location of the; Cfour scratch, execute with, for example, ``energy('cfour',; path='/full/path/to/cfour/scratch')``. Regardless of whether the location; is specified or default, whether to preserve the scratch directory after; the computation can be specified with ``energy('cfour', keep=True)`` or; (the default) ``energy('cfour', keep=False)``. *path* and *keep* are; keyword arguments that get interpreted by the; :py:func:`~psi4.driver.procrouting.interface_cfour.run_cfour` function documented below. .. autofunction:: psi4.driver.procrouting.interface_cfour.run_cfour(name [, keep, path]). .. _`sec:cfourFunctionality`:. Functionality; ~~~~~~~~~~~~~. Through clever use of the ``cfour {...}`` block, one could run most any; Cfour computation through the P4C4 interface. In contrast, enumerated; below ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:26520,energy,energy,26520,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"0195 -76.201891 -76.205087; # (1.1, 102) -75.990085 -76.201498 -76.204676. .. _`sec:wrappers`:. Python Wrappers; ===============. The Python foundations of the |PSIfour| driver and Psithon syntax permit; many commonly performed post-processing procedures to be integrated into; the |PSIfour| suite. . As seen in the neon dimer example from the :ref:`tutorial <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies between two molecules. For; example, ::. energy('mp2', bsse_type='cp'). will compute the counterpoise-corrected density-fitted MP2 interaction energy; between two molecules. |PSIfour| also provides the :py:func:`~psi4.driver.cbs` wrapper,; which automatically computes a complete-basis-set extrapolation (and; automatically sets up the computations with different basis sets required to; do the extrapolation). For example,::. # all equivalent. energy('mp2', corl_basis='cc-pv[dt]z', corl_scheme=corl_xtpl_helgaker_2). energy('mp2/cc-pv[dt]z'). will compute a 2-point Helgaker extrapolation of the correlation energy; using the cc-pVDZ and cc-pVTZ basis sets (with method MP2) and add this; extrapolated correlation energy to the Hartree--Fock energy in the; largest basis (cc-pVTZ). :py:func:`~psi4.driver.cbs` can; be configured behind-the-scenes with explicit arguments, as in the; first example, or the convenience syntax of the equivalent second; example can be used. Another very useful and powerful feature of |PSIfour| is the ability; to compute results on entire databases of molecules at a time,; as provided by the :py:func:`~psi4.driver.wrapper_database.database` wrapper. For example,::. database('mp2', 'S22', cp=1, benchmark='S22B'). will perform DF-MP2 counterpoise-corrected interaction energies; (``cp=1``) on all members of Hobza's S22 database set of van der Waals; dimers, and then compare the results against the S22B benchmark energies.; Built-in databases i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:15921,energy,energy,15921,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"0250u>`_). Implementation of the asymmetric triples correction for the density-fitted; and cholesky-decomposed coupled-cluster singles and doubles method. * ""A noniterative asymmetric triple excitation correction for the density-fitted; coupled-cluster singles and doubles method: Preliminary applications,""; U. Bozkaya, *J. Chem. Phys.* **144**, 144108 (2016).; (doi: `10.1063/1.4945706 <https://doi.org/10.1063/1.4945706>`_). Implementation of analytic gradients for the density-fitted; coupled-cluster singles and doubles method. * ""Analytic energy gradients for the coupled-cluster singles and doubles method with; the density-fitting approximation,""; U. Bozkaya and C. D. Sherrill, *J. Chem. Phys.* **144**, 174103 (2016).; (doi: `10.1063/1.4948318 <https://doi.org/10.1063/1.4948318>`_). Implementation of analytic gradients for the density-fitted; coupled-cluster singles and doubles with perturbative triples method. * ""Analytic energy gradients for the coupled-cluster singles and doubles; with perturbative triples method with the density-fitting approximation,""; U. Bozkaya and C. D. Sherrill, *J. Chem. Phys.* **147**, 044104 (2017).; (doi: `10.1063/1.4994918 <https://doi.org/10.1063/1.4994918>`_). Mukherjee State-Specific Multi-Reference Coupled Cluster (Mk-MRCC); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; |PSIfour| features production-level Mukherjee-style state-specific; coupled-cluster theory, including perturbative triples and also associated; multi-reference perturbation theories. The theory and |PSIfour|; implementation of these methods is discussed in the following papers. General Mk-MRCC. * ""Coupling Term Derivation and General Implementation of; State-Specific Multireference Coupled-Cluster Theories,""; F. A. Evangelista, W. D. Allen, and H. F. Schaefer,; *J. Chem. Phys.* **127**, 024102 (2007).; (doi: `10.1063/1.2743014 <https://doi.org/10.1063/1.2743014>`_). Mk-MRCCSD(T). * ""Perturbative Triples Corrections in State-Specific Multirefere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:12918,energy,energy,12918,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['energy'],['energy']
Energy Efficiency,"035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). Multi-Fragment Optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. _DimerSection:. In previous versions of optking, the metric for connecting atoms was increased until all atoms; were connected. This is the current behavior for |optking__frag_mode| `single`.; Setting |optking__frag_mode| to `multi` will now add a special; set of intermolecular coordinates between fragments - internally referred to as DimerFrag; coordinates (see `here <DimerIntro_>` for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:9062,energy,energy,9062,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"074107]_. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728]_. The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than two; excitations. In practice, this usually means that the active space can have; at most two particles, or at most two holes. Examples would include ; CAS(2,2), CAS(2,8), CAS(4,3), etc., where CAS(n,m) refers to a; complete-active-space configuration interaction (CASCI) reference with n; electrons in m orbitals. If the user specifies active spaces that do not fit; these limitations, then the code will still run, but some relevant; determinants will be missing, and the answer obtained will be an approximation; to the true Mk-MRCC procedure. The PSIMRCC code itself does not perform orbital optimization. Hence, the; references used might be considered CASCI references, but not CASSCF; references (CASSCF implies that the orbitals have been optimized specifically; to minimize the energy of the CASCI reference). However, if one wishes to; use two-configuration self-consistent-field (TCSCF) orbitals, those can; be obtained using the multi-configuration self-consistent-field (MCSCF); component of PSIMRCC (specifying |mcscf__reference| to be ``twocon``).; This is suitable for describing diradicals. Otherwise, one may use RHF or; ROHF orbitals as input to PSIMRCC. Due to a current limitation in the code,; one must obtain orbitals using PSIMRCC's MCSCF module regardless of what; orbital type is chosen, ``twocon``, ``rhf``, or ``rohf``. An example of the; MCSCF input is given below. PSIMRCC is most commonly used for low-spin cases (singlets or open-shell; singlets). It is capable of performing computations on higher spin states; (*e.g.*, triplets), but in general, not all the required matrix elements have; been coded for high-spin cases, meaning that results will correspond to an; approximate Mk-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst:4487,energy,energy,4487,doc/sphinxman/source/psimrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst,1,['energy'],['energy']
Energy Efficiency,"1, 2 of 142 possible MOs eliminated.; Overall, 3 of 287 possible MOs eliminated. In this example, there are 287 AO basis functions after spherical harmonics are; applied. These are used to produce 287 symmetry adapted USOs, 145 of which are; assigned to irrep A, and 142 of which are assigned to irrep B. Within irrep A,; 144 OSOs fall above the eigenvalue cutoff, and within irrep B 140 OSOs fall; above the eigenvalue cutoff. In total, 284 molecular orbitals are chosen from; 287 AOs/USOs. .. _`sec:scfguess`:. Initial Guess; ~~~~~~~~~~~~~. In each step of the SCF procedure, a new Fock or Kohn--Sham potential is built; according to the previous density, following which the potential is diagonalized; to produce new molecular orbitals, from which a new density is computed. This; procedure is continued until either convergence is reached or a preset maximum; number of iterations is exceeded. Convergence is determined by both change in; energy and root-mean-square change in density matrix values, which must be below; the user-specified |scf__e_convergence| and |scf__d_convergence|, respectively.; The maximum number of iterations is specified by the |scf__maxiter| option. It; should be noted that SCF is a chaotic process, and, as such, often requires; careful selection of initial orbitals and damping during iterations to ensure; convergence. This is particularly likely for large systems, metallic systems,; multireference systems, open-shell systems, anions, and systems with diffuse; basis sets. For initial orbital selection, several options are available. These include:. CORE; Diagonalization of the core Hamiltonian, removing even mean-field electron; repulsion. Simple, but often too far from the final solution for larger; systems. This is the default for single atoms.; SAD [:term:`Default <GUESS (SCF)>`]; Superposition of Atomic Densities. Builds the initial density as the; spin-averaged sum of atomic UHF computations in the current basis. If an; open-shell system, uniform s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:17930,energy,energy,17930,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"1348351 0.39876776 1.92934049; #H 0.00000000 0.07949567 -0.51934253; #H 0.00000000 -0.98104857 1.65344779; #H -0.81348351 0.39876776 1.92934049. # >>> cat mol2.xyz; # 6 au; # stuff; # C 0.00000000000000 0.00000000000000 5.26601138679877; # C 0.00000000000000 0.00000000000000 -3.15195886530135; # H 0.00000000000000 0.00000000000000 7.28558683837122; # H 0.00000000000000 0.00000000000000 -1.12178201232889; # N 0.00000000000000 0.00000000000000 3.08339310458383; # N 0.00000000000000 0.00000000000000 -5.33865984413460. sapt = {'mol1': -0.0105313323529,; 'mol2': -0.00839486625709}. nre = {'mol1': 38.8138764635,; 'mol2': 72.3451968428}. set basis jun-cc-pvdz. for mol in ['mol1', 'mol2']:; filen = mol + '.xyz'; p4mol = Molecule.init_with_xyz(filen) # create molecule from file above; fragmentedmol = auto_fragments(molecule=p4mol) # fragment with BFS algorithm; activate(fragmentedmol) # activate returned molecule (for sapt). e = energy('sapt0') # run SAPT that requires 2 fragments; compare_values(sapt[mol], e, 5, '%s sapt ok' % mol); compare_values(nre[mol], p4mol.nuclear_repulsion_energy(), 4, '%s ok' % mol); clean() # clean scratch between loop calcs. * The essential element, mass and coordinate information of the molecule is accessible ::. molecule eneyne {; 0 1; C_ene 0.000000 -0.667578 -2.124659; C_ene 0.000000 0.667578 -2.124659; H_ene@2.014 0.923621 -1.232253 -2.126185; H_ene -0.923621 -1.232253 -2.126185; H_ene -0.923621 1.232253 -2.126185; Gh(H_ene) 0.923621 1.232253 -2.126185; --; 0 1; X 9.0 9.0 9.0; C_yne 0.000000 0.000000 2.900503; C_yne 0.000000 0.000000 1.693240; H_yne 0.000000 0.000000 0.627352; H_yne 0.000000 0.000000 3.963929; }. eneyne.update_geometry(). for iat in range(eneyne.natom()):; print """"""{:4} {:4} {:12} {:8.4f} {:12.6f} {:12.6f} {:12.6f} {:12.6f}"""""".format(; eneyne.Z(iat), # atomic number; eneyne.symbol(iat), # element symbol; eneyne.label(iat), # input element label; eneyne.charge(iat), # element charge; eneyne.x(iat), # x-coordinate; eneyne.y(iat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:24369,energy,energy,24369,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION EN",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28993,energy,energy,28993,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where we specify the computation; options::. set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }; ; energy('sapt0'). Before, we have been setting keywords individually with commands like; ``set basis cc-pVDZ``. Because we have a few more options now, it's; convenient to place them together into the ``set``; block, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:13043,energy,energy,13043,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"3 or -D4 corrections and their variants are; available only through the ``DFTD3`` or ``DFTD4`` programs. Once installed, the; ``dftd3``/|PSIfour| and ``dftd4``/|PSIfour| interfaces are transparent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13059,energy,energy,13059,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"36409932 -2; NBC1-MeMe-4.6 -0.2170 -0.1155 0.1015 -80.72836761 1 -40.36409177 -2; NBC1-MeMe-4.8 -0.1680 -0.0933 0.0747 -80.72831991 1 -40.36408563 -2; NBC1-MeMe-5.0 -0.1300 -0.0747 0.0553 -80.72827951 1 -40.36408021 -2; NBC1-MeMe-5.4 -0.0800 -0.0479 0.0321 -80.72821875 1 -40.36407122 -2; NBC1-MeMe-5.8 -0.0500 -0.0312 0.0188 -80.72817678 1 -40.36406353 -2; ----------------------------------------------------------------------------------------------; Minimal Dev 0.0188; Maximal Dev 1.0949; Mean Signed Dev 0.3509; Mean Absolute Dev 0.3509; RMS Dev 0.4676; ----------------------------------------------------------------------------------------------. Thirdly, the :py:func:`~psi4.driver.cbs` wrapper allows any; compound computational method that can be expressed through :ref:`CBS; <eq:cbs>` to be applied to a molecule while employing the minimum number; of calculations. For example, the job below computes a; triple-quadruple-zeta Helgaker extrapolation of the mp2 correlation energy; atop a quadruple zeta reference to which is appended a double-triple-zeta; Helgaker extrapolated ccsd(t) - mp2 delta correction. Since the mp2 has; been requested through |PSIfour| and the ccsd(t) through Cfour, the; wrapper runs only MP2/cc-pVQZ (P4), CCSD(T)/cc-pVDZ (C4), and; CCSD(T)/cc-pVTZ (C4) single-points. ::. molecule {; H 0.0 0.0 0.0; H 1.0 0.0 0.0; }; ; set mp2_type conv. cbs('mp2', corl_basis='cc-pV[TQ]Z', delta_wfn='c4-ccsd(t)', delta_basis='cc-pV[DT]Z'). This yields::. ==> CBS <==. ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [H] Scheme; ---------------------------------------------------------------------------------------------------------; scf scf / cc-pvqz -1.10245974 highest_1; corl mp2 / cc-pv[tq]z -0.03561890 corl_xtpl_helgaker_2; delta c4-ccsd(t) - mp2 / cc-pv[dt]z 0.03507767 corl_xtpl_helgaker_2; total CBS -1.10300098; --------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:19350,energy,energy,19350,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:173736,energy,energy,173736,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485424,energy,energy,485424,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, ethylene*acetylene),; # test case 16 from the S22 database; ; molecule dimer {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:11434,adapt,adapted,11434,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['adapt'],['adapted']
Energy Efficiency,"4:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is very easy, we just give a Z-matrix or set of; Cartesian coordinates for each molecule, and separate the two with two; dashes, like this::. # Example SAPT computation for ethene*ethine (*i.e.*, ethylene*acetylene),; # test case 16 from the S22 database; ; molecule dimer {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; ; }. Here's the second half of the input, where we specify the computation; options::. set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }; ; energy('sapt0'). Before, we have been setting keywords individually with commands like; ``set basis cc-pVDZ``. Because we have a few more options now, it's; convenient to place them together into the ``set``; block, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:12508,energy,energy,12508,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"4`` programs. Once installed, the; ``dftd3``/|PSIfour| and ``dftd4``/|PSIfour| interfaces are transparent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+-------------------------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13088,energy,energy,13088,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"5 -76.201498 -76.204676. .. _`sec:wrappers`:. Python Wrappers; ===============. The Python foundations of the |PSIfour| driver and Psithon syntax permit; many commonly performed post-processing procedures to be integrated into; the |PSIfour| suite. . As seen in the neon dimer example from the :ref:`tutorial <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies between two molecules. For; example, ::. energy('mp2', bsse_type='cp'). will compute the counterpoise-corrected density-fitted MP2 interaction energy; between two molecules. |PSIfour| also provides the :py:func:`~psi4.driver.cbs` wrapper,; which automatically computes a complete-basis-set extrapolation (and; automatically sets up the computations with different basis sets required to; do the extrapolation). For example,::. # all equivalent. energy('mp2', corl_basis='cc-pv[dt]z', corl_scheme=corl_xtpl_helgaker_2). energy('mp2/cc-pv[dt]z'). will compute a 2-point Helgaker extrapolation of the correlation energy; using the cc-pVDZ and cc-pVTZ basis sets (with method MP2) and add this; extrapolated correlation energy to the Hartree--Fock energy in the; largest basis (cc-pVTZ). :py:func:`~psi4.driver.cbs` can; be configured behind-the-scenes with explicit arguments, as in the; first example, or the convenience syntax of the equivalent second; example can be used. Another very useful and powerful feature of |PSIfour| is the ability; to compute results on entire databases of molecules at a time,; as provided by the :py:func:`~psi4.driver.wrapper_database.database` wrapper. For example,::. database('mp2', 'S22', cp=1, benchmark='S22B'). will perform DF-MP2 counterpoise-corrected interaction energies; (``cp=1``) on all members of Hobza's S22 database set of van der Waals; dimers, and then compare the results against the S22B benchmark energies.; Built-in databases include S22, A24, HTBH, HBC6, HSG, S22by5, S66, JSC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:15995,energy,energy,15995,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:274318,energy,energy,274318,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:276853,energy,energy,276853,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:280688,energy,energy,280688,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:283223,energy,energy,283223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"89:104]; M. Haser and R. Ahlrichs,; *J. Comp. Chem.* **10(1)**, 104 (1989).; https://doi.org/10.1002/jcc.540100111. .. [Thompson:2017:144101]; T. H. Thompson and C. Ochsenfeld; *J. Chem. Phys.* **147**, 144101 (2017).; https://doi.org/10.1063/1.4994190. .. [Smith:2020:184108]; ""PSI4 1.4: Open-source software for high-throughput quantum chemistry"",; D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish, M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio, A. Alenaizan, A. M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer, R. A. Shaw, J. B. Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni, J. S. O'Brien, J. M. Waldrop, A. Kumar, E. G. Hohenstein, B. P. Pritchard, B. R. Brooks, H. F. Schaefer III, A. Yu. Sokolov, K. Patkowski, A. E. DePrince III, U. Bozkaya, R. King, F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill; *J. Chem. Phys.* **152**, 184108 (2020).; https://doi.org/10.1063/5.0006002. .. [Waldrop:2021:024103]; ""Nonapproximated third-order exchange induction energy in symmetry-adapted perturbation theory"",; J. M. Waldrop and K. Patkowski; *J. Chem. Phys.* **154**, 024103 (2021).; https://doi.org/10.1063/1.4994190. .. [Ochsenfeld:1998:1663]; C. Ochsenfeld, C. A. White, M. Head-Gordon; *J. Chem. Phys.* **109**, 1663 (1998); https://doi.org/10.1063/1.476741. .. [Behnle:2019:REMP]; ""REMP: A hybrid perturbation theory providing improved electronic wavefunctions and properties"",; S. Behnle and R. F. Fink,; *J. Chem. Phys.* **150**, 1241077 (2019).; https://doi.org/10.1063/1.5086168. .. [Behnle:2021:OREMP]; ""OO-REMP: Approaching Chemical Accuracy with Second-Order Perturbation Theory"",; S. Behnle and R. F. Fink,; *J. Chem. Theory Comput.* **17**, 3259 (2021).; https://doi.org/10.1021/acs.jctc.1c00280. .. [Behnle:2022:OREMP]; ""UREMP, RO-REMP, and OO-REMP: Hybrid perturbation theories for open-shell electronic structure calculations"",; S. Behnle and R. F. Fink; *J. Chem. Phys.* **156**, 124103 (2022).; https://doi.org/10.1063/5.0081285. .",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/bibliography.rst:19409,energy,energy,19409,doc/sphinxman/source/bibliography.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/bibliography.rst,2,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is neutral and spin-singlet; by inserting another :samp:`{charge} {multiplicity}` line, separated from the first; molecule block by a `--` line. If any information is missing, |PSIfour| will set the; unprovided charges and multiplicities to be consistent with those that are given.; For example, the overall charge must be simply the sum of all fragment charges.; |PSIfour| further assumes that any unpaired electrons are coupled to yield the highest; possible :math:`M_s` value. Psi will also favor neutral, spin-singlet fragments.; For anything complicated, we strongly suggest explicitly providing the charge; and multiplicity of each fragment as well as the total molecular charge and multiplicity. For details and examples, see https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/chgmult.py#L105-L136 . Having defined a molecule containing fragments like ``eneyne`` above, it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment ghosted (``extract_subsets(1,2)`` pulls out fragment 1 as; Real atoms and sets fragment 2 as Ghost atoms). For beyond bimolecular; complexes, arrays can be used, e.g. ``extract_subsets(2,[1,3])``::. mA = eneyne.extract_subsets(1); energy('scf'); ; clean(); ; mAcp = eneyne.extract_subsets(1,2); energy('scf'). If the molecule contains fragments but is not conveniently ordered for the; ``--`` marker, the :",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:20248,charge,charge,20248,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,2,['charge'],['charge']
Energy Efficiency,"941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain :math:`{\cal{O}}(o^2v^4)` complexity of the CCSD equations.; For a detailed discussion of the properti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:8215,energy,energy,8215,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"978 -4.343; }. Running EFP ; ~~~~~~~~~~~~. EFP can be invoked in similar fashion as other theories provided in |PSIfour|.; For example, if you want to obtain the EFP interaction energy for benzene and two waters,; simply provide the following::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o 4.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; energy('efp'). This computation involves purely EFP/EFP fragment interactions and is; performed entirely by the LIBEFP library. |PSIfour| can also handle mixed; systems of quantum mechanical (QM) and EFP fragments through the native; :ref:`SCF <sec:scf>` code augmented by calls to the LIBEFP library. For; example, turning one of the waters in the example above into a QM; fragment is shown below. ::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; O 4.0 0.0 0.0; H 4.7 0.7 0.0; H 3.3 -0.7 0.0 ; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; set basis 6-31g; energy('scf'). Whenever an EFP fragment is present in the active molecule, the SCF energy; will include EFP contributions. .. warning:: Although the EFP geometry is specified alongside the QM; geometry in a ``molecule name {...}`` block, internally the handling; of EFP is not so clean. In straightforward input files that involve; any number of [molecule block, energy/opt/etc, clean()] portions,; there should be no problem; the energy/opt computation will always; be run on the molecule defined in the preceding block. For advanced; users, unexpected difficulties may arise due to: (1) the EFP fragment; from the last molecule block executed will always be active (and; potentially interfering with SCF) and (2) recalling a molecule; through ``activate(name)`` (where ``name`` was the python handle; in the molecule block) will not load up any EFP portion of that; molecule. This divergent treatment is a stopgap while we determine; how best to handle molecules with different domains. At this time, |PSIfour| is only able to perform pure-efp single-points and; geo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:8719,energy,energy,8719,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['energy'],['energy']
Energy Efficiency,": ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132283,energy,energy,132283,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136057,energy,energy,136057,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527420,energy,energy,527420,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443562,energy,energy,443562,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'ro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:52087,energy,energy,52087,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107622,energy,energy,107622,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:364612,energy,energy,364612,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:366613,energy,energy,366613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:30038,energy,energy,30038,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:32629,energy,energy,32629,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:209138,energy,energy,209138,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:211663,energy,energy,211663,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477393,energy,energy,477393,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:130010,energy,energy,130010,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:209312,energy,energy,209312,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:416534,energy,energy,416534,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:423501,energy,energy,423501,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:175606,energy,energy,175606,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:341578,energy,energy,341578,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:174871,energy,energy,174871,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:279231,energy,energy,279231,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:500111,energy,energy,500111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:98338,energy,energy,98338,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21393,energy,energy,21393,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23399,energy,energy,23399,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26587,energy,energy,26587,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28593,energy,energy,28593,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:40622,energy,energy,40622,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:524686,energy,energy,524686,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45354,energy,energy,45354,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51866,energy,energy,51866,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525680,energy,energy,525680,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468748,energy,energy,468748,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7754,energy,energy,7754,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8200,energy,energy,8200,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ac",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9054,energy,energy,9054,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:133604,energy,energy,133604,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327320,energy,energy,327320,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:389840,energy,energy,389840,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:396883,energy,energy,396883,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'err",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86221,energy,energy,86221,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468568,energy,energy,468568,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:177045,energy,energy,177045,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:177225,energy,energy,177225,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206354,energy,energy,206354,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:173352,energy,energy,173352,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484249,energy,energy,484249,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480874,energy,energy,480874,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12802,energy,energy,12802,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18060,energy,energy,18060,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:393926,energy,energy,393926,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487086,energy,energy,487086,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:243654,energy,energy,243654,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160351,energy,energy,160351,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165687,energy,energy,165687,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84553,energy,energy,84553,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:85816,energy,energy,85816,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:88589,energy,energy,88589,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:89852,energy,energy,89852,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306986,energy,energy,306986,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487505,energy,energy,487505,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334213,energy,energy,334213,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166299,energy,energy,166299,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:389479,energy,energy,389479,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,": . \bar{g}_{pq}^{rs} = g_{pq}^{rs} - g_{pq}^{sr}. .. math:: . f_p^q = h_p^q + \bar{g}_{pr}^{qs} \gamma_{s}^{r}. Energy functional :math:`E_{DCT}` has several important properties. First,; the energy is now a function of two sets of independent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <in",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:4888,energy,energy,4888,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,": S_{\mu\nu} = (\mu | \nu ). Note that the Fock Matrix depends on the density (both alpha and beta), and; therefore the orbitals. Because of this, SCF is a nonlinear procedure, which; terminates when the generating orbitals are self-consistent with the Fock matrix; they generate. The formation of the Coulomb matrix :math:`J` and the exchange matrix; :math:`K^{\alpha}` dominate the computational effort of the SCF procedure. For; very large systems, diagonalization of the Fock matrix can also present a; significant hurdle. .. _`sec:scfinput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a Hartree--Fock computation is a molecule block, basis set; option, and a call to ``energy('scf')``::. molecule {; He; }. set basis sto-3g. energy('scf'). This will run a Restricted Hartree--Fock (RHF) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6; energy and density convergence criteria (since single-point, see; :ref:`SCF Convergence & Algorithm <table:conv_scf>`), a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more; information on any of these options, see the relevant section below. .. _`sec:scfsymm`:. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of Hartree--Fock; theory, including:. Restricted Hartree--Fock (RHF) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Hartree--Fock (UHF); Appropriate for most open-shell systems and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; UHF wavefunctions; need not be eigenfunctions of the :math:`\hat S^2` operator. The deviation of; this operator from ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:9148,energy,energy,9148,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,": autodoc_abbr_options_c.rst. .. index::; pair: database(); adding new. .. _`sec:createDatabase`:. Creating a Database; ===================. .. note:: No recompile of the PSI program is necessary for changes made to; files in ``$PSIDATADIR``, including those described below. A necessary consideration in constructing a database is the distinction; between reagents and reactions. A reagent is a single molecular system; (may be a dimer) whose geometry you are possession of and whose electronic; energy may be of interest. A reaction is a combination of one or more; reagent energies whose value you are interested in and a reference value; for which you may or may not be in possession of. A few examples follow.; In a database of interaction energies, the reagents are dimers and their; component monomers (usually derived from the dimer geometry), and the; reactions are the dimer less monomers energies. In a database of barrier; heights, the reagents are reactants, products, and transition-state; structures, and the reactions are the transition-states less; minimum-energy structures. Possibly you may have a collection of; structures to simply be acted upon in parallel, in which case the; structures are both the reagents and the reactions. The role of the; database.py file is to collect arrays and dictionaries that define the; geometries of reagents (GEOS), their combination into reactions (RXNM &; ACTV), available reference values for reactions (BIND), and brief comments; for reagents and reactions (TAGL). The journey from reagent geometries to; functional database.py file is largely automated, in a process described; below. * Prepare geometry files; Assemble xyz files for all intended reagent systems in a directory.; Follow the rules below for best results. The filename for each xyz; file should be the name of the system. lowercase or MixedCase is; preferable (according to Sherrill lab convention). Avoid dashes and; dots in the name as python won't allow them. If you're de",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst:2105,energy,energy,2105,doc/sphinxman/source/quickadddatabase.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst,1,['energy'],['energy']
Energy Efficiency,": no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:20466,energy,energy,20466,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"::. optimize('pbe-d3bj'). * DFT-D2 optimization with custom s6 parameter ::. set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). * DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values) ::. set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). * DFT-D2 single point with ``dftd3`` instead of |PSIfours| libdisp ::. energy('pbe-d2', engine='dftd3'). If only dispersion corrections (rather than total energies) are of; interest, the dispersion programs can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_dftd3` or :py:func:`~qcdb.Molecule.run_dftd4`. (These functions; call QCEngine, which is the same |PSIfour| + ``dftd3``/``dftd4`` interface that is called during an scf job.); This ""D-only"" route is much faster than running a DFT-D energy.; This route is NOT available for ``s-dftd3``. File an issue if a definite need arises. Note that in a DFT+D energy or gradient calculation, user-specified; dispersion parameters override any information provided about the; functional. The same holds true for a ``dftd3`` ""D-only"" calculation. But; in a ``dftd4`` ""D-only"" calculation, functional information overrides; any user-specified dispersion parameters. * Some set-up::. molecule nene {; Ne; Ne 1 2.0; }; ; nene.update_geometry(). * The same four dispersion corrections/gradients as the section above::. >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05; ; >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]; ; >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05; ; >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. .. autofunction:: qcdb.Molecule.run_dftd3. .. autofunction:: qcdb.Molecule.run_dftd4. .. autoclass:: psi4.driver.procrouting.empirical_dispersion.EmpiricalDispersion. .. comment print_stdout(' -D ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:24204,energy,energy,24204,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,":`N`; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems. For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose ""-D2"" and more modern ""-D3"" approaches are a de facto industry standards. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to ``energy('b3lyp')`` (or other valid functional name)::. molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn--Sham (RKS) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6 energy; and density convergence criteria, a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess (because single atom). For more information on; any of these options, see the relevant section below, or in the preceding; :ref:`Hartree--Fock section <sec:scf>`. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn--Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn--Sham (UKS); Appropriate for most open-shell systems and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerabl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:14500,energy,energy,14500,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,":`T_1` and :math:`T_2`:. .. math::; :label: QCISD. \langle \Psi_0 | (H - E) (1 + T_1 + T_2)|\Psi_0\rangle = 0, \\; \langle \Psi_i^a | (H - E) (1 + T_1 + T_2 + T_1T_2)|\Psi_0\rangle = 0, \\; \langle \Psi_{ij}^{ab} | (H - E) (1 + T_1 + T_2 + \frac{1}{2}T_2^2)|\Psi_0\rangle = 0. \\. QCISD is slightly cheaper that CCSD computationally, but it retains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:6828,energy,energy,6828,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,":psithonFunc` section below; are placed as arguments to a Python; function (like ``energy()``), not in ``set`` blocks or commands.; .. comment and indexed in :ref:`apdx:options_py`. .. note:: All |PSIfour| keyword names and values are insensitive to case, both; those that are placed in ``set`` blocks and as Python function arguments.; The one exception is documented for the *subset* option in the :py:func:`~psi4.driver.wrapper_database.database`; function, where case structure must match the database file. .. _`op_py_bool`:. .. _`op_py_boolean`:. .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_py_dertype`:. .. note:: The derivative level type for :py:func:`~psi4.driver.optimize` and :py:func:`~psi4.driver.frequency` functions can be specified by ``energy``, ``none``, or ``0`` for 0th derivative, ``gradient``, ``first``, or ``1`` for 1st derivative, and ``hessian``, ``second``, or ``2`` for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the :term:`POINTS <POINTS (FINDIF)>` option can be increased to ``5`` for greater accuracy at increased cost. .. _`op_py_function`:. .. note:: Function option for the Psithon function called by the current function;; the default is usually :py:func:`~psi4.driver.energy`. See Sec. :ref:`sec:intercalls`; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. .. _`op_py_molecule`:. .. note:: The molecule to be acted upon by the current function; the default is the; ""active"" molecule, which is the nearest preceeding molecule declared in a; ``molecule mymol {...}`` block or in an ``activate(mymol)`` statement. Note; that the value of this keyword (``mymol`` in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; :py:class:`~psi4.core.Molecule` object. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_py.rst:2746,energy,energy,2746,doc/sphinxman/source/notes_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_py.rst,1,['energy'],['energy']
Energy Efficiency,"; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DFTNL; .. _`sec:dftnl`:. DFT-NL; ======. .. codeauthor:: Daniel G. A. Smith and Holger Kruse; .. sectionauthor:: Holger Kruse. Non-local (NL), density based correlation energy from the VV10 kernel can be added; to arbitrary functionals. .. math:: E_{DFT-NL}=E_{DFT}+E_{NL}. For pre-defined functionals (see Functional overview in :ref:`this Table <table:dft_all>` ) it is sufficient to add `-NL` to; the functional name::. energy('b3lyp-nl'). Modification of the parameters `b` and `C` is done setting |scf__dft_vv10_b| and |scf__dft_vv10_c|. The `C` is usually left unchanged and the originally proposed; value of `C=0.0093` is used. Adding |scf__dft_vv10_b| to any functional activates the calculation of the VV10 kernel. A BLYP-NL calculation can be set as follows::. set DFT_VV10_B 4.0; energy('blyp'). The default `C` parameter will be used. Similar to |scf__dft_dispersion_parameters| the tuple |scf__nl_dispersion_parameters| can used::. set NL_DISPERSION_PARAMTERS [4.0]; energy('blyp'). which is equivalent to the example above. Further examples can be found in the respective :source:`regression test <tests/dft-vv10/input.dat>`. post-SCF time savings; ~~~~~~~~~~~~~~~~~~~~~. Substantial time-savings for energy calculations are available by evaluating the VV10 kernel only at the converged electron density, i.e. in a post-SCF fashion.; The deviations from the fully self-consistent treatment are usually minimal. To acti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst:1495,energy,energy,1495,doc/sphinxman/source/dftnl.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst,1,['energy'],['energy']
Energy Efficiency,"; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:blaslapack`:. ===========================; Linear Algebra in |PSIfour|; ===========================. .. _`faq:blaswrappers`:. How to call BLAS & LAPACK in |PSIfour|; --------------------------------------. Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in |PSIfour| is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so |PSIfour| provides a common set of wrappers in :source:`psi4/src/psi4/libqt/qt.h` . .. warning:: Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; `psi4.core.Matrix` itself. The advice in these docs will catch up; shortly. BLAS Wrappers; ^^^^^^^^^^^^^. BLAS wrappers are currently fully supported at double precision. BLAS commands involving matrices are wrapped so as ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:1394,efficient,efficient,1394,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['efficient'],['efficient']
Energy Efficiency,"; ..., *c* enumerates which fragments contribute basis functions to the; computation. For example, ``(1, 2)@(1, 2, 3, 4)`` indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbita",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:46147,energy,energy,46147,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"; :math:`\boldsymbol{\kappa}` and a correction :math:`\boldsymbol{\tau}`:. .. math:: . \gamma_p^q = \kappa_p^q + \tau_p^q. The idempotent part of :math:`\boldsymbol{\gamma_1}` corresponds to a mean-field Hartree--Fock-like density,; while the non-idempotent correction :math:`\boldsymbol{\tau}`; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. .. math:: . E_{DCT} = \frac{1}{2} \left( h_p^q + f_p^q \right) \gamma_q^p + \frac{1}{4} \bar{g}_{pq}^{rs} \lambda_{rs}^{pq}. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. .. math:: . \bar{g}_{pq}^{rs} = g_{pq}^{rs} - g_{pq}^{sr}. .. math:: . f_p^q = h_p^q + \bar{g}_{pr}^{qs} \gamma_{s}^{r}. Energy functional :math:`E_{DCT}` has several important properties. First,; the energy is now a function of two sets of independent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the or",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:4088,energy,energy,4088,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"; ; cfour_CALC_level CCSD(T); cfour_BASIS DZP; cfour_CC_CONV 12; cfour_LINEQ_CONV 12; cfour_SCF_CONV 12; g_convergence cfour; }. optimize('cfour'). Note that the primary change is the exchange of :py:func:`~psi4.driver.energy`; for :py:func:`~psi4.driver.optimize` to trigger an optimization. Setting; |optking__g_convergence|\ =CFOUR provides a good imitation of Cfour; default convergence criteria. Although Cfour produces gradients only in; its standard orientation and atom ordering, these are transformed back to; input orientation by the P4C4 interface. Several sample inputs in; :source:`tests/cfour/` starting with ``opt-`` show basic geometry; optimizations. :srcsample:`cfour/mints5-grad` shows optimizations from a; variety of molecule input formats, and :srcsample:`cfour/psi-ghost-grad`; shows an optimization with ghosted atoms. To obtain a single gradient; *sans* optimization, call instead :py:func:`~psi4.driver.gradient`. Note that it can be convenient to monitor the progress of a geometry; optimization by grepping the tilde ``~`` character. ::; ; Measures of convergence in internal coordinates in au.; Criteria marked as inactive (o), active & met (*), and active & unmet ( ).; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * 1.00e-06 * 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -76.33224285 -7.63e+01 2.41e-03 1.60e-03 1.51e-02 8.82e-03 o ~; 2 -76.33226097 -1.81e-05 4.84e-04 4.03e-04 7.71e-04 * 7.04e-04 o ~; 3 -76.33226140 -4.39e-07 * 4.31e-05 * 3.58e-05 9.89e-05 * 8.93e-05 o ~; 4 -76.33226141 -4.26e-09 * 9.76e-07 * 6.58e-07 * 6.22e-06 * 3.71e-06 o ~; --------------------------------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:10402,monitor,monitor,10402,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['monitor'],['monitor']
Energy Efficiency,"; C 2.33048 -1.00269 0.03771; C 1.89725 0.31533 -0.59009; C 2.28232 1.50669 0.29709; C 1.82204 2.84608 -0.29432; C 2.37905 4.02099 0.49639; H 3.41246 -1.03030 0.19825; H 2.05362 -1.84372 -0.60709; H 1.82714 -1.16382 0.99734; H 2.36243 0.42333 -1.57636; H 3.36962 1.51414 0.43813; H 1.81251 1.38060 1.28140; H 2.14344 2.92967 -1.33843; H 3.47320 4.02400 0.48819; H 2.03535 3.99216 1.53635; H 2.02481 4.96785 0.07455; symmetry c1; no_reorient; no_com; }; ; # => Standard Options <= #; ; set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; fisapt_do_plot true # For extra analysis; }; ; energy('fisapt0'). This is essentially the same input as for F-SAPT, except that the molecular; system is now divided into *three* moieties |w--w| subsystems A and B whose; intramolecular interaction we wish to compute, and a linking unit C. This file; runs a DF-HF computation on the full system using |PSIfours| existing SCF code.; At the start of the FISAPT code, the occupied orbitals are localized and divided; by charge considerations into A, B, C, and link sets. By default, linking sigma; bonds are assigned to C (this can be changed by the |fisapt__fisapt_link_assignment|; options). Then, non-interacting Hartree--Fock solutions for A and B are optimized; in the embedding field of the linking moiety C. At this point, A and B are not; interacting with each other, but have any potential covalent links or other; interactions with C built in by the embedding. A standard F-SAPT0 computation; is then performed between A and B, yielding the I-SAPT interaction energy. Any; F-SAPT considerations are also possible when I-SAPT is performed |w--w| F and I are; completely direct-product-separable considerations. . Cube File Visualization with PyMol; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Setting |fisapt__fisapt_do_plot| ``true`` above generates a set of ``.cube`` files; containing the densities and ESPs of the various subsystems in the I-SAPT; embedding procedure. These can be used to gain a ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:13986,charge,charge,13986,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['charge'],['charge']
Energy Efficiency,"; and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-C and B-C linking electron pairs is controlled by the |fisapt__fisapt_link_assignment|; keyword. The default setting ``fisapt_link_assignment c`` assigns the entire pair to the linker C together with; a +1 nuclear charge from the connecting atoms of A/B to preserve the electrical neutrality of each fragment.; However, as already noticed in [Parrish:2015:051103]_, such a partitioning might result in unphysical dipole; moments at the interfragment boundaries. Imagine, for example, that I-SAPT is used to examine the interaction; of two methyl groups connected by some linker fragment. When the linking bonds are assigned to C, the carbon atoms; of the methyl groups are missing electrons on one of their *sp^3* hybrid orbitals and a dipole moment appears.; These dipole moments have been observed to lead, in some cases, to I-SAPT energy contributions that do not make ; physical sense, for example, to a strongly repulsive electrostatic energy between two fragments connected by an; intramolecular hydrogen bond. To overcome this issue, Luu and Patkowski proposed a reassignment of the linking electron pairs so that each fragment; (C and A/B) gets one electron [Luu:2023:356]_. This electron is pla",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:17177,charge,charge,17177,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['charge'],['charge']
Energy Efficiency,"; are unchanged beyond a prepended ""cfour\_"". (Though be aware that common; abbreviations like CALC and REF must be fully spelled out as; |cfour__cfour_calc_level| and |cfour__cfour_reference| when used in; |PSIfour|.). * In limited trial cases, keywords nominally directed at non-Cfour modules; are translated into their Cfour counterparts. For example, setting; |scf__reference| will appropriately set |cfour__cfour_reference|. For a; list of applicable keywords, see source of; muster_psi4options. * Consult :ref:`sec:cfourFunctionality` for information on what Cfour; functionality is accessible through |PSIfour|. |PSIfour| for Cfour Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. In the simplest use of the Psi4/Cfour interface, a |PSIfour| input file; can simply ""wrap"" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Ca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:5476,energy,energy,5476,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"; basis = cc-pVDZ; }. Note the lack of quotes around ``cc-pVDZ``, even though it is a string. The; Psithon preprocessor automatically wraps any string values in ``set`` commands in; strings. The last three examples provide a more convenient way for specifying; multiple keywords::. set {; basis = cc-pVDZ; print = 1; reference = rhf; }. For arguments that require an array input, standard Python list syntax should; be used, *viz.*::. set {; docc = [3, 0, 1, 1]; }. List/matrix inputs may span multiple lines, as long as the opening ``[`` is; on the same line as the name of the keyword. Any of the above keyword specifications can be scoped to individual modules,; by adding the name of the module after the ``set`` keyword. Omitting the module; name, or using the name ``global`` or ``globals`` will result in the keyword being; applied to all modules. For example, in the following input ::. molecule{; o; h 1 roh; h 1 roh 2 ahoh; ; roh = 0.957; ahoh = 104.5; }; ; set basis cc-pVDZ; set ccenergy print 3; set scf print 1; energy('ccsd'). the basis set is set to cc-pVDZ throughout, the SCF code will have a print; level of 1 and the ccenergy code, which performs coupled cluster computations,; will use a print level of 3. In this example a full CCSD computation is; performed by running the SCF code first, then the coupled cluster modules;; the :py:func:`~psi4.driver.energy` Python helper function ensures that this is performed correctly.; Note that the Python interpreter executes commands in the order they appear in; the input file, so if the last four commands in the above example were to read ::. set basis cc-pVDZ; energy('ccsd'); set ccenergy print 3; set scf print 1. the commands that set the print level would be ineffective, as they would be; processed after the CCSD computation completes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings fo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:7424,energy,energy,7424,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"; code, and is intended for use with large systems for which DF-MP2 is intractable.; When running DLPNO-MP2 with default settings, approximately 99.9% of the DF-MP2 ; correlation energy is recovered. The general outline of the method is as follows:. (1) Localize the active occupied MOs (with the Foster-Boys method); (2) Construct projected AOs (PAOs) from the virtual MOs; (3) Calculate three-index integrals in the (sparse) LMO/PAO basis; (4) Perform local density fitting to construct (sparse) exchange integrals; (5) Transform local virtuals from PAOs to pair natural orbitals (PNOs), and truncate; (6) Solve the iterative local MP2 equations in the LMO/PNO basis. An example input file is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; set pno_convergence normal; ; energy('dlpno-mp2'). The main difference between this input and a DF-MP2 input is the ``energy('dlpno-mp2')``; call to :py:func:`~psi4.driver.energy`. The only other addition is the |dlpno__pno_convergence|; keyword, which determines the accuracy of the local approximations underlying ; the DLPNO-MP2 method. Note that the water molecule in this example is not large; enough for DLPNO-MP2 to be of any benefit relative to DF-MP2. The theory of the DLPNO-MP2 method and practical recommendations for using the; code are presented below. . .. index::; pair: DLPNO-MP2; theory. Theory; ------. See :ref:`DF-MP2 <sec:dfmp2>` for background on the theory of (non-local); density-fitted MP2. |PSIfours| DLPNO-MP2 implementation is based on the ; manuscript by Pinski et al. [Pinski:2015:034108]_. In DLPNO-MP2, as in all local MP2 methods, the second-order MBPT energy is determined ; variationally via the Hylleraas functional [Hylleraas:1930:209]_:. .. math::; :label: Hylleraas. E^{(2)} = 2 \langle \Psi_{0}^{(0)} | \hat{H} - E_{0}^{(0)} | \Psi_{0}^{(1)} \rangle - \langle \Psi_{0}^{(1)} | \hat{H}^{(0)} - E_{0}^{(0)} | \Psi_{0}^{(1)} \rangle = \mi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:3531,energy,energy,3531,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"; guess sad; freeze_core true; fisapt_do_plot true # For extra analysis; }; ; energy('fisapt0'). This is essentially the same input as for F-SAPT, except that the molecular; system is now divided into *three* moieties |w--w| subsystems A and B whose; intramolecular interaction we wish to compute, and a linking unit C. This file; runs a DF-HF computation on the full system using |PSIfours| existing SCF code.; At the start of the FISAPT code, the occupied orbitals are localized and divided; by charge considerations into A, B, C, and link sets. By default, linking sigma; bonds are assigned to C (this can be changed by the |fisapt__fisapt_link_assignment|; options). Then, non-interacting Hartree--Fock solutions for A and B are optimized; in the embedding field of the linking moiety C. At this point, A and B are not; interacting with each other, but have any potential covalent links or other; interactions with C built in by the embedding. A standard F-SAPT0 computation; is then performed between A and B, yielding the I-SAPT interaction energy. Any; F-SAPT considerations are also possible when I-SAPT is performed |w--w| F and I are; completely direct-product-separable considerations. . Cube File Visualization with PyMol; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Setting |fisapt__fisapt_do_plot| ``true`` above generates a set of ``.cube`` files; containing the densities and ESPs of the various subsystems in the I-SAPT; embedding procedure. These can be used to gain a detailed understanding of the; intermolecular partition and the polarization between non-interacting and; Hartree--Fock-interacting moieties. We have developed a set of template; ``.pymol`` scripts to help with this process. These can be obtained by running::. >>> copy_pymol2.py. and then in PyMol::. >>> @run.pymol. This last command runs all of the individual ``.pymol`` files (*e.g.*,; ``DA.pymol``), which in turn load in the molecule and cube file data; (contained in the ``.cube`` file), set up the visualization, a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:14536,energy,energy,14536,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"; not being Grimme corrections, won't follow this table exactly.; ; .. [#f1] [Grimme:2004:1463]_; .. [#f2] [Grimme:2006:1787]_; .. [#f3] [Grimme:2010:154104]_; .. [#f4] [Grimme:2011:1456]_; .. [#f5] [Smith:2016:2197]_; .. [#f6] [Hujo:2011:3866]_; .. [#f7] [Chai:2010:6615]_; .. [#f8] [Pernal:2009:263201]_; .. [#f9] [Podeszwa:2010:550]_. .. [#f10] Keyword not used for user-defined functionals where the ``dft_dict[""dispersion""][""params""]``; is easily editable for this purpose. See :ref:`sec:dftdictbuilder`. .. [#f11] [Caldeweyher:2019:154122]_. A few practical examples:. * DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with default parameters ::. optimize('pbe-d3bj'). * DFT-D2 optimization with custom s6 parameter ::. set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). * DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values) ::. set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). * DFT-D2 single point with ``dftd3`` instead of |PSIfours| libdisp ::. energy('pbe-d2', engine='dftd3'). If only dispersion corrections (rather than total energies) are of; interest, the dispersion programs can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_dftd3` or :py:func:`~qcdb.Molecule.run_dftd4`. (These functions; call QCEngine, which is the same |PSIfour| + ``dftd3``/``dftd4`` interface that is called during an scf job.); This ""D-only"" route is much faster than running a DFT-D energy.; This route is NOT available for ``s-dftd3``. File an issue if a definite need arises. Note that in a DFT+D energy or gradient calculation, user-specified; dispersion parameters override any information provided about the; functional. The same holds true for a ``dftd3`` ""D-only"" calculation. But; in a ``dftd4`` ""D-only"" calculation, functional information overrides; any user-specified dispersion parameters. * Some set-up::. molecule nene {; Ne",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:23535,energy,energy,23535,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"; the variable name that vary by root number, calculation order, etc.; See text for fuller description. .. psivar:: [T] CORRECTION ENERGY. The coupled-cluster bracket perturbative triples correction [E_h]. .. psivar:: (T) CORRECTION ENERGY. The coupled-cluster perturbative triples correction [E_h]. .. psivar:: (AT) CORRECTION ENERGY; A-(T) CORRECTION ENERGY. The coupled-cluster asymmetric perturbative triples correction [E_h]. .. psivar:: AAA (T) CORRECTION ENERGY; AAB (T) CORRECTION ENERGY; ABB (T) CORRECTION ENERGY; BBB (T) CORRECTION ENERGY. Spin components of the UHF-based coupled-cluster perturbative triples correction [E_h]. .. psivar:: ACPF DIPOLE. Dipole array [e a0] for the averaged coupled-pair functional level of theory, (3,). .. psivar:: ACPF QUADRUPOLE. Redundant quadrupole array [e a0^2] for the averaged coupled-pair functional level of theory, (3, 3). .. psivar:: ACPF TOTAL ENERGY; ACPF CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged coupled-pair functional level of theory. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY. The excitation energy [E_h] from ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY; TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY; TD-fctl ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* (which is of irrep *i*).; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION. The excitation energy [E_h] from the ground state to root *n*, and the; transition is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:2418,energy,energy,2418,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"; wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: Currently the ddx interface **cannot** exploit molecular point group symmetry. .. warning:: Analytic gradients and Hessians are currently **not available**; with dd-based solvation models. A minimal input for a Hartree--Fock calculation with dd-based PCM would look like; the following: ::. import psi4; nh3 = psi4.geometry(""""""; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; symmetry c1; no_reorient; no_com; units bohr; """"""). psi4.set_options({; ""basis"": ""sto-3g"",; ""scf_type"": ""pk"",; ""ddx"": True,; ""ddx_model"": ""pcm"",; ""ddx_solvent"": ""water"",; ""ddx_radii_set"": ""uff"",; }). scf_e = psi4.energy('SCF'). Solvent model and solvent cavity definition; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Beyond setting |globals__ddx| to ``true`` and selecting; a solvent model using |ddx__ddx_model|,; the definition of the solvent is mandatory.; Regularly one might want to influence the setup of the solvent; cavity as well. The **solvent** can be defined either by directly providing a dielectric; constant using |ddx__ddx_solvent_epsilon| or by looking up the dielectric; constant in from a solvent trivial name provided by |ddx__ddx_solvent|; (e.g. ``water``, ``ethanol``, ``cis-1,2-dimethylcyclohexane``).; By convention solvent names are all lowercase and use dashes (``-``) to separate; quantifiers like ``o``, ``n`` etc.; The full list understood by ddx can be obtained using ::. import pyddx; print(pyddx.data.solvent_epsilon.keys()). For when an LPB solvent model is selected (|ddx__ddx_model| is ``LPB``); additionally the **Debye-Hückel parameter** |ddx__ddx_solvent_kappa| needs to be provide",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:5306,energy,energy,5306,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['energy'],['energy']
Energy Efficiency,"; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose you want to do counterpoise (CP) correction to compute interaction energies.; Counterpoise correction involves computing the dimer energy and then; subtracting out the energies of the two monomers, each evaluated in the; dimer basis. Again, each of these computations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:18099,energy,energy,18099,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5250,energy,energy,5250,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-sh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12167,energy,energy,12167,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-sh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17425,energy,energy,17425,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62796,energy,energy,62796,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81015,energy,energy,81015,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132467,energy,energy,132467,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'not",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136241,energy,energy,136241,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:60869,energy,energy,60869,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62214,energy,energy,62214,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79088,energy,energy,79088,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80433,energy,energy,80433,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326186,energy,energy,326186,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed wit",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30335,energy,energy,30335,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,8,['energy'],['energy']
Energy Efficiency,";; ...; ; // Allocate a,b vectors; int n = 100;; double* a = init_array(n);; double* b = init_array(n);; ; // Allocate A matrix;; double** A = block_matrix(n,n);; double** B = block_matrix(n,n);; double** C = block_matrix(n,n);; ; // Call the BLAS1 dot product between a and b; // n can be a ULI with the BLAS1 wrappers,; // All strides must be ints though; double dot = C_DDOT(n, a, 1, b, 1);; ; // Call the BLAS2 GEMV without transposition; // Note this works in row-major order; C_DGEMV('N', n, n, 1.0, A[0], n, a, 1, 0.0, b, 1);; ; // Call the BLAS3 GEMM without transposition; // Note this works in row-major order; C_DGEMM('N','N', n, n, n, 1.0, A[0], n, B[0], n, 0.0, C[0], n);; ; // Array's init'd with init_array must be free'd, not delete[]'d; free(a);; free(b);; ; // Block matrix should be free_blocked; free_block(A);; free_block(B);; free_block(C);. Important BLAS Routines; ^^^^^^^^^^^^^^^^^^^^^^^. * BLAS1. * DDOT: dot product; * DCOPY: efficient memory copy (with variable stride); * DAXPY: y = y + alpha*x; * DROT: Givens Rotation; * DNRM2: Vector norm square. * BLAS2. * DGEMV: General Matrix-Vector product; * DTRMV: Triangular Matrix-Vector product (2x faster, not wrapped yet); * DTRSM: Triangular Matrix-Vector solution via back substitution (just as fast as DTRMV); * DGER: Rank-1 update (not wrapped yet). * BLAS3. * DGEMM: General Matrix-Matrix product; * DTRMM: General Triangular Matrix-General Matrix product; * DTRSM: Triangular Matrix-General Matrix solution via back substitution (just as fast as DTRMM); * DSYMM/DSYMV calls are not appreciably faster than DGEMM calls, and should only be used in expert situations (like using the other half of the matrix for some form of other transformation).; * DTRMM/DTRMV calls are 2x faster than DGEMM, and should be used where possible. LAPACK Wrappers; ^^^^^^^^^^^^^^^. All standard LAPACK 3.2 double precision routines are provided. LAPACK commands remain in Fortran's ""column-major"" indexing, so all the; results will be tra",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:4512,efficient,efficient,4512,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['efficient'],['efficient']
Energy Efficiency,"<<<<<<<<//. Variable Map:; ----------------------------------------------------------------------------; ""(T) CORRECTION ENERGY"" => -0.007263598030; ""CCSD CORRELATION ENERGY"" => -0.275705492359; ""CCSD TOTAL ENERGY"" => -76.338453952539; ""CCSD(T) CORRELATION ENERGY"" => -0.007263598030; ""CCSD(T) TOTAL ENERGY"" => -76.345717550569; ""CFOUR ERROR CODE"" => 0.000000000000; ""CURRENT CORRELATION ENERGY"" => -0.007263598030; ""CURRENT ENERGY"" => -76.345717550569; ""CURRENT REFERENCE ENERGY"" => -76.062748460180; ""MP2 CORRELATION ENERGY"" => -0.270191667755; ""MP2 OPPOSITE-SPIN ENERGY"" => -0.204890356651; ""MP2 SAME-SPIN ENERGY"" => -0.065301311104; ""MP2 TOTAL ENERGY"" => -76.332940127935; ""NUCLEAR REPULSION ENERGY"" => 9.187331653300; ""SCF TOTAL ENERGY"" => -76.062748460180. The PSI Variables are also available from the input file for manipulation.; For instance, to compute the MBPT 2 3/4 energy from MBPT 3 results, the; following could be used. ::. energy('c4-mp3'); mp2p75_corl = 0.75 * get_variable('mp3 correlation energy') + \; 0.25 * get_variable('MP2 correlation energy'); print mp2p75_corl + get_variable('scf total energy'). .. caution:: Some features are not yet implemented. Buy a developer a coffee. - No PSI Variables for properties: *e.g.*, :psivar:`SCF DIPOLE`. - No PSI Variables for excited state energies. The formation of further regexes for properties, excited states, etc.; is one of the primary areas in which this interface requires further; work. .. rubric:: Gradients and Arrays. In addition to parsing the output stream, results are collected from files; written to the scratch directory. Presently, the ``GRD`` file is parsed; and printed to the output file, as shown below. Also printed is the Cfour; gradient after manipulation by the P4C4 interface and used by |PSIfour|; going forward. Manipulation is necessary because Cfour determinedly uses; its own internal orientation and atom ordering while |PSIfour| naturally; expects the gradient to be aligned with the active molecule.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:23727,energy,energy,23727,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"<R^3>) and the free-atomic; volume, unitless. .. psivar:: MCSCF TOTAL ENERGY. Multiconfigurational self-consistent-field energy [E_h] in the course of; a configuration interaction computation. May be single-root or state-averaged. .. psivar:: mtd DIPOLE. Dipole array [e a0] for the named method, (3,). .. psivar:: mtd QUADRUPOLE. Redundant quadrupole array [e a0^2] for the named method, (3, 3). .. psivar:: mtd OCTUPOLE. Redundant octupole array [e a0^3] for the named method, (3, 3, 3). .. psivar:: mtd HEXADECAPOLE. Redundant hexadecapole array [e a0^4] for the named method, (3, 3, 3, 3). .. psivar:: mtd 32-POLE. Redundant 32-pole array [e a0^5] for the named method, (3, 3, 3, 3, 3). .. psivar:: mtd 64-POLE. Redundant 64-pole array [e a0^6] for the named method, (3, 3, 3, 3, 3, 3). .. psivar:: mtd 128-POLE. Redundant 128-pole array [e a0^7] for the named method, (3, 3, 3, 3, 3, 3, 3). .. psivar:: MP2 TOTAL ENERGY; MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2 level of theory. .. psivar:: MP2 TOTAL GRADIENT; The total electronic gradient [E_h/a0] of the MP2 level of theory, ({nat}, 3). .. psivar:: MP2 DIPOLE GRADIENT. The derivative of the MP2 level of theory dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: MP2 TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the MP2 level of theory, (3 * {nat}, 3 * {nat}). .. psivar:: MP2.5 TOTAL ENERGY; MP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2.5 level of theory. .. psivar:: MP3 TOTAL ENERGY; MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3 level of theory. .. psivar:: MP4(T) CORRECTION ENERGY. The MP4 triples component [E_h]. Quantity is second right-hand term in; Eq. :eq:`MP4terms`. .. psivar:: MP4(SDQ) TOTAL ENERGY; M",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:39660,energy,energy,39660,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"= h_p^q + \bar{g}_{pr}^{qs} \gamma_{s}^{r}. Energy functional :math:`E_{DCT}` has several important properties. First,; the energy is now a function of two sets of independent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currentl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:4938,energy,energy,4938,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"======; Introduction; ============. Overview; ========. |PSIfour| provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details int",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2091,efficient,efficient,2091,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"================. .. note:: No recompile of the |PSIfour| program is necessary for changes made to; files in ``$PSIDATADIR`` aka :source:`psi4/share/psi4`, including those described below. .. caution:: As of 1.0, the below, while essentially still correct, is so aged; as to be difficult to follow. Since quantum chemical methods in |PSIfour| are accessed through Python functions, and; most important quantities are available as PSI variables, it is straightforward; to create aliases to commonly run calculations or to define hybrid methods. The; :source:`psi4/driver/aliases.py` file is intended for editing by the user for; this purpose. As an example, the MP2.5 method; (which admittedly is already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides in :source:`psi4/driver/aliases.py`.; The rationale for the changes is indicated in the comments below. ::. def run_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2 # reform mp2 and mp3 tota",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:2160,energy,energy,2160,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['energy'],['energy']
Energy Efficiency,"==================. To facilitate more elaborate computations, it is possible to provide a name for; each molecule and tell |PSIfour| which one should be used in a given; calculation. For example, consider the following input file::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; energy('scf') # on H. Here, two separate jobs are performed on two different molecules; the first is; performed on H\ :sub:`2`, while the second is for H atom. The last molecule to be; specified is the ""active"" molecule by default. To explicitly activate a named; molecule, the activate command is provided. With it, the above input file can be; equivalently written as follows. Alternatively, the molecule can be specified; directly to the computing function. Below, the third calculation is the same as; the first. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobControl` provides more details about the job control; and calculation keywords used in the above examples. .. index:: ; single: Ghost Atoms; single: molecule; ghost; .. _`sec:ghosts`:. Ghost Atoms; ===========. While many common computations, particularly SAPT and counterpoise corrections, can; be greatly simplified using the notation described in :ref:`sec:fragments`,; manual specification of ghost atoms is sometimes required. Either ::. molecule he2 {; He; Gh(He) 1 2.0; }. or ::. molecule he2 {; He; @He 1 2.0; }. will generate a helium dimer with the second atom ghosted, *i.e.*, possessing; basis functions but no electrons or nuclear charge. See :srcsample:`dfmp2-1`; and :srcsample:`ghosts` for a ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:7410,energy,energy,7410,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"===================================. .. codeauthor:: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; .. sectionauthor:: Francesco A. Evangelista and Peter Kraus. .. autofunction:: psi4.cubeprop(wfn); :noindex:. Introduction; ------------. |PSIfour| has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/). An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the :py:func:`~psi4.driver.cubeprop`; call after the ``energy('scf')`` command; executes the cubeprop code. The array |globals__cubeprop_tasks| specifies which; tasks should be executed. In this case the task ``'orbitals'`` generates cube; files for orbitals. The |globals__cubeprop_orbitals| option specifies that cube files; should be generated only for alpha orbitals 5 (HOMO) and 6 (LUMO) and; beta orbitals 5 (indicated as -5) and 6.; If the option |globals__cubeprop_orbitals| is not provided, then cube files are; generated for all orbitals.; After running, the above input will generate four files: ``Psi_a_5_1-B1.cube``,; ``Psi_a_6_4-A1.cube``, ``Psi_a_5_1-B1.cube``, and ``Psi_a_6_4-A1.cube``. The subscript ``a`` in; ``Psi_a_5_1-B1.cube`` indicates an alpha orbital. The first number (``5``) is the index of the; orbital while ``1-B1`` indicates that this is the first orbital that belongs to the B1 irrep.; The file ``Psi_a_5_1-B1.cube`` begins with two comment lines::. Psi4 Gaussian Cube File.; Property: Psi_a_5_1-B1. Isocontour range for 85% of the de",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst:2210,energy,energy,2210,doc/sphinxman/source/cubeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst,1,['energy'],['energy']
Energy Efficiency,"A Ref Atoms"": [[1, 3, 4, 6, 8], [8], [11]],; ""A Label"": ""methylthiophene"",; ""B Frag"": 2,; ""B Ref Atoms"": [[13, 14, 15, 16, 17, 18], [13], [15]],; ""B Label"": ""tyrosine"",; ""Frozen"": [""theta_A"", ""theta_B"", ""tau"", ""phi_A"", ""phi_B""],; }""""""; ; set {; basis 6-31+G ; frag_mode MULTI; interfrag_coords $MTdimer ; }. optimize(""mp2""). Dealing with problematic optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Although optking is continuously improved with robustness in mind, some; attempted optimizations will inevitably fail to converge to the desired minima.; For difficult cases, the following suggestions are made. * As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking__opt_coordinates| set to ""BOTH"" which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long 'arms' or floppy portions of a molecule poorly; described by local internals. * Optking does support the specification of ghost atoms. Certain internal coordinates such ; as torsions become poorly defined when they contain near-linear bends. ; An internal error `AlgError` may be raised in such cases. Optking will avoid such; coordinates when choosing an init",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:18524,efficient,efficient,18524,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['efficient'],['efficient']
Energy Efficiency,"A-ALPHA PAIR ENERGIES; CC3 ALPHA-ALPHA PAIR ENERGIES; MP2 ALPHA-ALPHA PAIR ENERGIES. Restricted-reference same-spin pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CC ALPHA-BETA PAIR ENERGIES; CCSD ALPHA-BETA PAIR ENERGIES; CC2 ALPHA-BETA PAIR ENERGIES; CC3 ALPHA-BETA PAIR ENERGIES; MP2 ALPHA-BETA PAIR ENERGIES. Restricted-reference opposite-spin (alpha first) pair energies for coupled-cluster; theories. Size number of active doubly occupied orbitals, square. .. psivar:: CC SINGLET PAIR ENERGIES; CCSD SINGLET PAIR ENERGIES; CC2 SINGLET PAIR ENERGIES; CC3 SINGLET PAIR ENERGIES; MP2 SINGLET PAIR ENERGIES. Restricted-reference singlet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CC TRIPLET PAIR ENERGIES; CCSD TRIPLET PAIR ENERGIES; CC2 TRIPLET PAIR ENERGIES; CC3 TRIPLET PAIR ENERGIES; MP2 TRIPLET PAIR ENERGIES. Restricted-reference triplet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CCSD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCn TOTAL ENERGY; CCn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested full coupled-cluster (CCSD, CCSDT, up to CC\ *n*); level of theory. .. psivar:: CCSD(T) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(AT) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; A-CCSD(T) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the perturbatively corrected coupled-cluster (CCSD(T), A-CCSD(T) = CCSD(AT), CCSDT(Q),; up to CC(\ *n*\ -1)(\ *n*\ ) level of theory. .. psivar:: CCSDT-1a TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:20402,adapt,adapted,20402,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['adapt'],['adapted']
Energy Efficiency,"ANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: ; FCHK; Gaussian Formatted Checkpoint. .. _`sec:fchk`:. Interface to programs through FCHK files |w---w| :py:func:`~psi4.driver.fchk()`; ===============================================================================. .. codeauthor:: Andrew C. Simmonett; .. sectionauthor:: Andrew C. Simmonett. Many post-processing tools can read information from `Gaussian's formatted; checkpoint (FCHK) files <https://gaussian.com/formchk/>`_.; To allow interoperability with such tools, |PSIfour| includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function::. energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree--Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately::. grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). .. autofunction:: psi4.fchk(wfn, filename); :noindex:. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fchk.rst:1885,energy,energy,1885,doc/sphinxman/source/fchk.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fchk.rst,5,['energy'],['energy']
Energy Efficiency,"APT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAP",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50487,energy,energy,50487,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"APT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IN",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52488,energy,energy,52488,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"APT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-C and B-C linking electron pairs is controlled by the |fisapt__fisapt_link_assignment|; keyword. The default setting ``fisapt_link_assignment c`` assigns the entire pair to the linker C together with; a +1 nuclear charge from the connecting atoms of A/B to preserve the electrical neutrality of each fragment.; However, as already noticed in [Parrish:2015:051103]_, such a partitioning might result in unphysical dipole; moments at the interfragment boundaries. Imagine, for example, that I-SAPT is used to examine the interaction; of two methyl groups connected by some linker fragment. When the linking bonds are assigned to C, the carbon atoms; of the methyl groups are missing electrons on one of their *sp^3* hybrid orbitals and a dipole moment appears.; These dipole moments have been observed to lead, in some cases, to I-SAPT energy contributions that do not make ; physical sense, for example, to a strongly repulsive electrostatic energy between two fragments connected by an; intramolecular hydrogen bond. To overcome this issue, Luu and Patkowski proposed a reassignment of the linking electron pairs so that each fragment; (C and A/B) gets one electron [Luu:2023:356]_. This electron is placed on a hybrid orbital of the connecting atom; pointing in the direction of the interfragment bond. Several schemes for determining this link hybrid were proposed ; in [Luu:2023:356]_ and they all are implemented in |PSIfour|. We recommend the so-called *SIAO1* scheme,; ``fisapt_link_assignment siao1``, as it has been observed to provide consistently meaningful I-SAPT terms and a; smooth basis set convergence. The SIAO1 name implies that the projection to construct the link hybrids happens in the; intrinsic atomic orbital space (as opposed to the SAO1 method where the standard atomic orbital space is used), with; one iteration of fragment orbital optimization and link orbita",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:17797,energy,energy,17797,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,2,['energy'],['energy']
Energy Efficiency,"APT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+3 DISP ENERGY; SAPT2+3 ELST ENERGY; SAPT2+3 EXCH ENERGY; SAPT2+3 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory. The sum of these four components yields; the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT0 TOTAL ENERGY; SSAPT0 TOTAL ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+3 TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory. .. psivar:: SAPT2+(CCD) DISP ENERGY; SAPT2+(CCD) ELST ENERGY; SAPT2+(CCD) EXCH ENERGY; SAPT2+(CCD) IND ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+3(CCD) DISP ENERGY; SAPT2+3(CCD) ELST ENERGY; SAPT2+3(CCD) EXCH ENERGY; SAPT2+3(CCD) IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates coupled-cluster dispersion.; The sum of these four components yields the :samp:`{SAPT Level} TOTAL E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:54917,energy,energy,54917,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:mtd_capabilities`:. Capabilities and Alternate Implementations; ==========================================. Depending on the reference (e.g., RHF, UHF, ROHF), the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; active orbitals, and derivative level, computational methods are; sometimes assembled from implementations by multiple coders. Conversely,; some capabilities may be implemented multiple times. Capabilities,; modules, algorithm types, and defaults are detailed for many ground-state; methods at Table :ref:`Module Capabilities <table:managedmethods>`. Its; analogous summary table (with modules collapsed) is at :ref:`Summary; Capabilities <table:stdsuite>`. |PSIfour| transparently selects the; most efficient implementation, so one generally needn't consult this; table. However, to understand the details of what combinations are; accessible or what alternate implementations are available, read on. Note that HF, DFT, and MPn (n<=3); default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule::. # runs MP2 with default algorithm type ``DF`` with default implementation DFMP2; energy('mp2'). # runs MP2 with algorithm type ``CONV`` with default implementation OCC; set mp2_type conv; energy('mp2'). # runs MP2 with default algorithm type ``DF`` with implementation OCC; set qc_module occ; energy('mp2'). # runs MP2 with algorithm type ``CONV`` with implementation FNOCC; set mp2_type conv; set qc_module fnocc; energy('mp2'). .. include:: autodoc_capabilities_details.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/capabilities.rst:1822,efficient,efficient,1822,doc/sphinxman/source/capabilities.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/capabilities.rst,5,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:53709,energy,energy,53709,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"BER; NBODY NUMBER; FINDIF NUMBER. Number of tasks [] the named procedure performs. These are immediate; tasks, so if procedures are nested, the total number of tasks is; the product. .. psivar:: CBS TOTAL ENERGY; CBS CORRELATION ENERGY; CBS REFERENCE ENERGY. The total electronic energy [E_h] and its breakdown into reference total; energy [E_h] and correlation correction components [E_h] for the compound; method requested through cbs(). .. psivar:: CCname ROOT n TOTAL ENERGY; TD-fctl ROOT n TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) TOTAL ENERGY; TD-fctl ROOT n (IN h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* within irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (h) TOTAL ENERGY; TD-fctl ROOT n (h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n*, which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n (h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY - h TRANSITION. The correlation energy [E_h] for the requested coupled c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:10290,energy,energy,10290,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"CENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:proc_py`:. Adding Methods to Driver; ========================. ``proc.py``; -----------. Methods that are computable by only one module should be added to the ``procedures`` dictionary in; :source:`psi4/driver/procrouting/proc_table.py`; that associates method names with functions; to run them located in :source:`psi4/driver/procrouting/proc.py`. The function should start with a declaration, as below. ``methodname`` is; never seen by users, so it's good to be specific to method or module.; The function must always take as arguments ``(name, **kwargs)``. ::. # energy method; def run_methodname(name, **kwargs):. # gradient method; def run_methodname_gradient(name, **kwargs):. If the function needs to test the identity of ``name`` several times, it; can be convenient to predefine the lowercase version of the variable. The; case of all other py-side options (in kwargs) has already been handled by; :py:func:`~psi4.driver.energy()`, etc. in driver.py and need not be repeated here. ::. # include if convenient; lowername = name.lower(). # never include; kwargs = kwargs_lower(kwargs). The function often needs to set options for the; c-side modules it calls. In order that the state of the options set by the; user remains when control is returned to the user, an; :py:class:`~psi4.driver.p4util.OptionsState` object is set up. See; :ref:`sec:handlingOptions_py` for details. *All* options set by the; function need to be included here, and *only* options set by the function; should be included. Most options should be associated with a particular; module, but a few (see below) are given without module. ::. # include if any options set; optstash = OptionsState(; # these and other basis options should have no associated module; ['BASIS'],; ['DF_BASIS_SCF'],; ['DF_BASIS_MP2'],; ['PUREAM'],; ['FREEZE_CORE'],; # all others should have an associated module; ['SCF', 'SCF_TYPE'],; ['SCF', 'GUESS'],; ['DFMP2', 'MP2_OS_SCALE'],; )",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:2000,energy,energy,2000,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"CE_DIR}/psi4/driver/qcdb/cfour.py; ${CCBD}/source/autodoc_psivariables_bymodule.rst; COMMENT ""Autodoc Cfour PSI variables""). # Autodoc databases; add_custom_command(; COMMAND ${Python_EXECUTABLE} ${CCSD}/document_databases.py ${CCSD}; OUTPUT ${CCBD}/source/autodoc_available_databases.rst; DEPENDS ${CCSD}/document_databases.py; $<IF:$<STREQUAL:${CMAKE_GENERATOR},""Unix Makefiles"">,${psi4_SOURCE_DIR}/psi4/share/psi4/databases/*.py,${psi4_SOURCE_DIR}/psi4/share/psi4/databases/S22.py>; COMMENT ""Autodoc databases""). # Autodoc test cases; add_custom_command(; COMMAND ${PERL_EXECUTABLE} ${CCSD}/document_tests.pl ${CCSD}; OUTPUT ${CCBD}/source/autodoc_testsuite_corepsi4.rst; ${CCBD}/source/autodoc_testsuite_dftd3.rst; DEPENDS ${CCSD}/document_tests.pl; $<IF:$<STREQUAL:${CMAKE_GENERATOR},""Unix Makefiles"">,${psi4_SOURCE_DIR}/tests/*/input.dat,${psi4_SOURCE_DIR}/tests/ghosts/input.dat>; $<IF:$<STREQUAL:${CMAKE_GENERATOR},""Unix Makefiles"">,${psi4_SOURCE_DIR}/tests/*/*/input.dat,${psi4_SOURCE_DIR}/tests/dftd3/energy/input.dat>; COMMENT ""Autodoc test cases""). # Autodoc capabilities; # * tables are generated in pairs: one to build directory for Sphinx to use and one for the repo for devs to track; # * PYTHONPATH bit is because this is the only document_* script that uses a fn from Psi4; add_custom_command(; COMMAND ${CMAKE_COMMAND} -E env PYTHONPATH=${CCBD}/../../stage/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}:$PYTHONPATH ${Python_EXECUTABLE} ${CCSD}/document_capabilities.py --stdsuite ${CCSD}/../../samples/stdsuite_psi4.txt --sphinx --quiet --writefile ""source/autodoc_capabilities_details.rst"" --mode details; COMMAND ${CMAKE_COMMAND} -E env PYTHONPATH=${CCBD}/../../stage/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}:$PYTHONPATH ${Python_EXECUTABLE} ${CCSD}/document_capabilities.py --stdsuite ${CCSD}/../../samples/stdsuite_psi4.txt --quiet --writefile ""${CCSD}/source/preview_capabilities_details.rst"" --mode details; COMMAND ${CMAKE_COMMAND} -E env PYTHONPATH=${CCBD}/../../sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:8940,energy,energy,8940,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"CI ROOT n -> ROOT m DIPOLE. Transition dipole array [e a0] between roots *n* and *m* for the requested configuration interaction level of theory, (3,). .. psivar:: CI ROOT n -> ROOT m QUADRUPOLE. Redundant transition quadrupole array [e a0^2] between roots *n* and *m* for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory and root *n*, (3,). .. psivar:: CI ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory and root *n*, (3, 3). .. psivar:: CI ROOT n TOTAL ENERGY; CI ROOT n CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root; *n* (numbering starts at 0). .. psivar:: CI STATE-AVERAGED TOTAL ENERGY; CI STATE-AVERAGED CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body intera",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:24903,energy,energy,24903,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"CS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:61317,energy,energy,61317,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"CSD(T) = CCSD(AT), CCSDT(Q),; up to CC(\ *n*\ -1)(\ *n*\ ) level of theory. .. psivar:: CCSDT-1a TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1a CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CC\ *n*\ -1a) level of theory. .. psivar:: CCSDT-1b TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-1b CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CC\ *n*\ -1b) level of theory. .. psivar:: CCSDT-3 TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCn-3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CC\ *n*\ -3) level of theory. .. psivar:: CCSD(T)_L TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(\ *n*\ -1)(\ *n*\ )L level of theory. .. psivar:: CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the modified CCSDT(Q) level of theory. .. psivar:: CEPA(0) DIPOLE. Dipole array [e a0] for the coupled electron pair approximation variant 0 level of theory, (3,). .. psivar:: CEPA(0) QUADRUPOLE. Redundant quadrupole array [e a0^2] for the coupled electron pair approximation variant 0 level of theory, (3, 3). .. psivar:: CEPA(0) TOTAL ENERGY; CEP",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:22212,energy,energy,22212,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"CT functional can be specified by the |dct__dct_functional| option. The; default choice is the ODC-12 functional. The DCT code can also be used to; compute the :math:`(\lambda_3)` energy correction that perturbatively accounts; for three-particle correlation effects, similarly to the (T) correction in coupled; cluster theory. Computation of the :math:`(\lambda_3)` correction can be; requested by setting the |dct__three_particle| option to PERTURBATIVE. A; combination of the ODC-13 functional with the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals (|scf__reference| ``UHF``), which can be used to perform energy and; gradient computations for both closed- and open-shell molecules. In addition,; the ODC-06 and ODC-12 methods support restricted reference orbitals; (|scf__reference| ``RHF``) for the energy and gradient computations of; closed-shell molecules. Note that in this case restricted reference orbitals; are only available for |dct__algorithm| ``SIMULTANEOUS``. .. _`sec:dctalgorithms`:. Iterative Algorithms; ~~~~~~~~~~~~~~~~~~~~. As explained in the :ref:`Theory <sec:dcttheory>` section, in order to obtain the DCT energy one; needs to solve a system of coupled equations for orbitals and density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; |dct__algorithm| option. SIMULTANEOUS [Default]; In the simultaneous algorithm the DCT equations are solved in macroiterations.; Each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and orbit",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:8956,energy,energy,8956,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"Cholesky decomposition is undertaken; until |scf__s_cholesky_tolerance|, which defaults to 1E-8. Use of symmetric, canonical, and partial Cholesky orthogonalization; can be forced by setting the |scf__s_orthogonalization| option to; ``SYMMETRIC``, ``CANONICAL``, or ``PARTIALCHOLESKY``,; respectively. Note that in practice, the MOs and OSOs are built separately within; each irrep from the symmetry-adapted combinations of AOs known as; Unique Symmetry Orbitals (USOs). For canonical orthogonalization,; this implies that the number of MOs and OSOs per irrep may be slightly; smaller than the number of USOs per irrep. A contrived example demonstrating OSOs/MOs vs. AOs with symmetry is shown; below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c2 # Two irreps is easier to comprehend; }. set {; s_tolerance 0.0001 # Set an unreasonably tight; # tolerance to force canonical; basis aug-cc-pv5z # This diffuse basis will have; # small-ish eigenvalues for even H2O; print 3; }. energy('scf'). Output::. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 145 145 0 0 0 0; B 142 142 0 0 0 0; -------------------------------------------------------; Total 287 287 5 5 5 0; -------------------------------------------------------. ... Minimum eigenvalue in the overlap matrix is 1.6888063568E-05.; Using Canonical Orthogonalization with cutoff of 1.0000000000E-04.; Irrep 0, 1 of 145 possible MOs eliminated.; Irrep 1, 2 of 142 possible MOs eliminated.; Overall, 3 of 287 possible MOs eliminated. In this example, there are 287 AO basis functions after spherical harmonics are; applied. These are used to produce 287 symmetry adapted USOs, 145 of which are; assigned to irrep A, and 142 of which are assigned to irrep B. Within irrep A,; 144 OSOs fall above the eigenvalue cutoff, and within irrep B 140 OSOs fall; above the eigenvalue cutoff. In total, 284 mo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:16424,energy,energy,16424,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"D, see; [Lehtola:2019:1593]_. This variant employs an updated rule for the; generalized Wolfsberg-Helmholz formula from [Ammeter:1978:3686]_.; READ; Read the previous orbitals from a ``wfn`` file, casting from; one basis to another if needed. Useful for starting anion; computations from neutral orbitals, or after small geometry; changes. At present, casting from a different molecular point; group is not supported. This becomes the default for the second; and later iterations of geometry optimizations.; SAP; Superposition of Atomic Potentials. This is essentially a; modification of the core Hamiltonian, which includes screening; effects by using a radially screened effective atomic charge. The; screening effects have been calculated at the complete basis set; limit with finite-element calculations, see [Lehtola:2019:25945]_; and [Lehtola:2020:012516]_. The guess and its implementation have; been described in [Lehtola:2019:1593]_. The guess is evaluated on a; DFT quadrature grid, so the guess energy depends slightly on the; used DFT quadrature. The current implementation is based on; exchange-only local density calculations that are but nanohartree; away from the complete basis set limit [Lehtola:2020:012516]_.; SAPGAU; Superposition of Atomic Potentials, but using error function based; fits to the atomic radial potentials as discussed in; [Lehtola:2020:144105]_. The main difference to the SAP guess; discussed above [Lehtola:2019:25945]_ is that the SAPGAU scheme is; analytic, and can be efficiently formed in terms of three-center; two-electron integrals [Lehtola:2020:144105]_. The potential in; the SAPGAU scheme is passed with the |scf__sapgau_basis|; keyword. The default potential is given by the large fit to the; HelFEM potential, sap_helfem_large, described in; [Lehtola:2020:144105]_. Note that this guess is known in the DIRAC; program as .SCRPOT and in the ERKALE program as SAPFIT. These are all set by the |scf__guess| keyword. Also, an automatic Python; procedur",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:20991,energy,energy,20991,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"DF. .. [#f4] Note that this table applies to the final convergence criteria for; all the post-SCF modules that define a |ccenergy__e_convergence| keyword. .. [#f5] The E_CONVERGENCE keyword is implemented for most post-SCF modules.; See a list beginning at |ccenergy__e_convergence|. .. [#f6] The R_CONVERGENCE keyword places a convergence check on an internal; residual error measure and is implemented for several post-SCF; modules (see list beginning at |ccenergy__r_convergence|). It is defined; according to the quantum chemical method and so its default value is set; by each module individually. .. [#f7] For frequency computations by finite difference of energies,; convergence criteria are tightened further still to 10 for; |scf__e_convergence| and |scf__d_convergence| for SCF of HF or DFT, 11; for |scf__e_convergence| and |scf__d_convergence| for SCF of post-HF,; and 10 for E_CONVERGENCE for post-HF of post-HF. .. _`sec:scfrec`:. Recommendations; ~~~~~~~~~~~~~~~. The SCF code is quite flexible and powerful.; We have tried as much as possible to keep the number of options to; a minimum and to allow all options to be used in the presence of all other; options. Below are some rough words of advice about using the SCF code for; practical calculations:. * For |scf__guess|, the ``SAD`` guess is usually your; friend, even for open-shell systems (at the very least, it gets the right; number of electrons, unlike some other programs). For instance, we have found; that a simple SAD guess is often as good as doing a full SCF in a 3-21G basis; and then performing a cast-up, at a fraction of the cost. However, SAD and; DOCC/SOCC arrays do not play very well together at the moment.; * For wall time, ``DF`` may be a factor of ten or more faster than the exact; integral technologies available in |PSIfour|.; Use ``DF`` unless you need absolute accuracy or do not; have a -JKFIT auxiliary set for your orbital basis/atom type. Then use; ``DIRECT``.; * Don't mess with the DIIS convergenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:60256,power,powerful,60256,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['power'],['powerful']
Energy Efficiency,"DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28692,energy,energy,28692,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,DOUBLES ENERGY; MP2.5 DOUBLES ENERGY; MP3 DOUBLES ENERGY; CEPA(0) DOUBLES ENERGY; CEPA(1) DOUBLES ENERGY; CEPA(2) DOUBLES ENERGY; CEPA(3) DOUBLES ENERGY; ACPF DOUBLES ENERGY; AQCC DOUBLES ENERGY; CISD DOUBLES ENERGY; QCISD DOUBLES ENERGY; REMP2 DOUBLES ENERGY; LCCD DOUBLES ENERGY; CCD DOUBLES ENERGY; LCCSD DOUBLES ENERGY; CCSD DOUBLES ENERGY; OMP2 DOUBLES ENERGY; OMP2.5 DOUBLES ENERGY; OMP3 DOUBLES ENERGY; OREMP2 DOUBLES ENERGY; OLCCD DOUBLES ENERGY. The doubles portion [E_h] of the named correlation energy; including same-spin and opposite-spin correlations. .. psivar:: MP2 SINGLES ENERGY; MP2.5 SINGLES ENERGY; MP3 SINGLES ENERGY; CEPA(0) SINGLES ENERGY; CEPA(1) SINGLES ENERGY; CEPA(2) SINGLES ENERGY; CEPA(3) SINGLES ENERGY; ACPF SINGLES ENERGY; AQCC SINGLES ENERGY; CISD SINGLES ENERGY; QCISD SINGLES ENERGY; REMP2 SINGLES ENERGY; LCCD SINGLES ENERGY; CCD SINGLES ENERGY; LCCSD SINGLES ENERGY; CCSD SINGLES ENERGY; OREMP2 SINGLES ENERGY; OLCCD SINGLES ENERGY. The singles portion [E_h] of the named correlation energy.; Zero except in ROHF. .. psivar:: MP2 SAME-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; CEPA(0) SAME-SPIN CORRELATION ENERGY; CEPA(1) SAME-SPIN CORRELATION ENERGY; CEPA(2) SAME-SPIN CORRELATION ENERGY; CEPA(3) SAME-SPIN CORRELATION ENERGY; CISD SAME-SPIN CORRELATION ENERGY; QCISD SAME-SPIN CORRELATION ENERGY; ACPF SAME-SPIN CORRELATION ENERGY; AQCC SAME-SPIN CORRELATION ENERGY; REMP2 SAME-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; CCD SAME-SPIN CORRELATION ENERGY; LCCSD SAME-SPIN CORRELATION ENERGY; CCSD SAME-SPIN CORRELATION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP3 SAME-SPIN CORRELATION ENERGY; OREMP2 SAME-SPIN CORRELATION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY. The unscaled portion [E_h] of the named correlation energy; from same-spin or triplet doubles correlations. .. psivar:: MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 OPPOSITE-SPIN CORRE,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:42632,energy,energy,42632,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{CP}}}. .. psivar:: CURRENT CORRELATION ENERGY. The correlation energy [E_h] corresponding to the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT ENERGY. The total electronic energy [E_h] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. .. psivar:: CURRENT REFERENCE ENERGY. The total electronic energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten), (3,). .. psivar:: CURRENT GRADIENT. The total electronic gradient [E_h/a0] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer, ({nat}, 3). .. psivar:: CURRENT DIPOLE GRADIENT. The derivative of the dipole with respect to nuclear perturbations [E_h a0/u] = [(e a0/a0)^2/u]; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: CURRENT HESSIAN. The total electronic Hessian [E_h/a0/a0] of the most re",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:26199,energy,energy,26199,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"EF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without an",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30087,reduce,reduced,30087,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['reduce'],['reduced']
Energy Efficiency,"ELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(\ *n*\ -1)(\ *n*\ )L level of theory. .. psivar:: CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the modified CCSDT(Q) level of theory. .. psivar:: CEPA(0) DIPOLE. Dipole array [e a0] for the coupled electron pair approximation variant 0 level of theory, (3,). .. psivar:: CEPA(0) QUADRUPOLE. Redundant quadrupole array [e a0^2] for the coupled electron pair approximation variant 0 level of theory, (3, 3). .. psivar:: CEPA(0) TOTAL ENERGY; CEPA(0) CORRELATION ENERGY; CEPA(1) TOTAL ENERGY; CEPA(1) CORRELATION ENERGY; CEPA(2) TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested variant of coupled electron pair approximation level of theory. .. psivar:: CFOUR ERROR CODE. The non-zero return value from a Cfour execution. .. psivar:: CI DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory, (3,). .. psivar:: CI QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n -> ROOT m DIPOLE. Transition dipole array [e a0] between roots *n* and *m* for the requested configuration interaction level of theory, (3,). .. psivar:: CI ROOT n -> ROOT m QUADRUPOLE. Redundant transition quadrupole array [e a0^2] between roots *n* and *m* for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory and root *n*, (3,). .. psivar:: CI ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:23472,energy,energy,23472,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ENERGY. The total potential energy [E_h] of the Hartree--Fock method. .. psivar:: HF VIRIAL RATIO. The virial ratio of the Hartree--Fock method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron dens",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:36872,energy,energy,36872,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the docu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6486,energy,energy,6486,doc/sphinxman/source/attic/bestpractices_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst,1,['energy'],['energy']
Energy Efficiency,"ERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAP",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52145,energy,energy,52145,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ERGY. The correlation correction to the kinetic energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION POTENTIAL ENERGY. The correlation correction to the potential energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION VIRIAL RATIO. The correlation virial ratio, as defined in https://doi/org/10.1063/1.1535440 for basis set completeness analysis. Computed using coupled cluster. .. psivar:: CC VIRIAL RATIO. The virial ratio, as computed by a coupled cluster method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM or solvated. .. psivar:: CC T1 DIAGNOSTIC; CC D1 DIAGNOSTIC; CC NEW D1 DIAGNOSTIC; CC D2 DIAGNOSTIC. Diagnostic of multireference character. .. psivar:: CC2 TOTAL ENERGY; CC2 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC4 TOTAL ENERGY; CC4 CORRELATION ENERGY; CCnn TOTAL ENERGY; CCnn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested approximate coupled-cluster (CC2, CC3, up to CC\ *nn*); level of theory. .. psivar:: CC DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root, (3,). .. psivar:: CC2 DIPOLE POLARIZABILITY @ xNM; CCSD DIPOLE POLARIZABILITY @ xNM. The dipole polarizability in atomic units [(e^2 a0^2)/E_h] calculated at; the CC level for a given (x) wavelength, (x) rounded to nearest integer. .. psivar:: CC2 DIPOLE POLARIZABILITY TENSOR @ xNM; CCSD DIPOLE POLARIZABILITY TENSOR @ xNM. The dipole polarizability tensor in atomic units [(e^2 a0^2)/E_h] calculated at; the CC level for a given (x) wavelength, (x) rounded to nearest integer. .. psivar:: CC2 QUADRUPOLE POLARIZABILITY @ xNM; CCSD QUADRUPOLE POLARIZABILITY @ xNM. The quadrupole polarizability in atomic units [(e^2 a0^3)/E_h] calculated at; the CC level for a given (x) wavelength, (x) rounded to nearest integer. .. psivar:: CC2 QUADRUPOLE POLARIZABILITY TENSOR @ xNM; CCSD QUADRUPOLE POLARIZABILITY TENSOR @ x",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:16965,energy,energy,16965,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ES ENERGY`; for opposite-spin and same-spin contributions, with; any singles carried along.; Depending on weights, may equal any of MP2, SCS-MP2, SCS(N)-MP2, etc. quantities.; Contrast with :psivar:`SCS-MP2 TOTAL ENERGY`. .. psivar:: CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2.5 TOTAL ENERGY; CUSTOM SCS-OMP2.5 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY. Changeable quantities based on options.; The total electronic energy [E_h] and correlation energy component [E_h]; for the method formed by any reweighting of the named :samp:`{method} DOUBLES ENERGY`; for opposite-spin and same-spin contributions, with; any singles carried along.; Contrast with :samp`SCS-{method} TOTAL ENERGY`. .. psivar:: db_name DATABASE MEAN ABSOLUTE DEVIATION. The mean absolute deviation [\ |kcalpermol|\ ] of the requested method; *name* from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{| \textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:28443,energy,energy,28443,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"E_h] and correlation energy component [E_h]; for the averaged coupled-pair functional level of theory. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY. The excitation energy [E_h] from ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY; TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY; TD-fctl ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* (which is of irrep *i*).; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION. The excitation energy [E_h] from the ground state to root *n*, and the; transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state, which is of irrep *h*, to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 (h) -> ROOT n (i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the groun",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:3392,energy,energy,3392,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP EN",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:53406,energy,energy,53406,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"FT) should provide more accurate interaction energy ; components, and overall interaction energies, than SAPT0. The drawback ; is SAPT(DFT) method is more computationally demanding than SAPT0, ; SAPT(DFT) can still be applied to medium-sized or large systems. The ; SAPT(DFT) module was employed successfully in computations of systems ; with up to 2000 basis functions, and the code should be scalable to ; 3000 basis functions. Like higher-order SAPT, SAPT(DFT) requires ; sufficient memory to hold :math:`2ovN_aux` doubles. SAPT(DFT) requires a few special treatments to obtain accurate; result. The DFT functionals used in SAPT(DFT) need to be asymptotically; corrected with Gradient Regulated Asymptotic Correction scheme (GRAC),; in order to recover the correct long-range asymptotic behavior; (approaching :math:`-1/r` as :math:`r` approaches infinity). The program; requires manual input of GRAC shift parameter for each monomer through; keywords |sapt__sapt_dft_grac_shift_a| and |sapt__sapt_dft_grac_shift_b|,; which should be equal to the difference of the actual ionization; potential and the corresponding Kohn-Sham HOMO energy. The dispersion; term needs to be computed with orbital response for good accuracy,; and it is recommended to enable |sapt__sapt_dft_do_hybrid| (set to; ``True`` by default). The coupled exchange-dispersion energy is usually; estimated by scaling from the uncoupled value either by a fitted fixed; value (suggested initially by [Hesselmann:2014:094107]_ for a local Hartree--Fock (LHF) formulation and then revised; by [Xie:2022:024801]_ for non-LHF) or; by the ratio of; coupled and uncoupled dispersion energy (suggested by [Podeszwa:2006:400]_ ). ; This can be controlled by keyword |sapt__sapt_dft_exch_disp_scale_scheme|, ; with ``FIXED`` using the Hesselmann/Xie approach (|PSIfours| default prior ; to Nov 2022), ``DISP`` using the Podeszwa approach (|PSIfours| default after Nov 2022),; or ``NONE`` for not scaling and using the uncoupled exchange-disp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:23691,energy,energy,23691,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,GLES ENERGY; LCCSD SINGLES ENERGY; CCSD SINGLES ENERGY; OREMP2 SINGLES ENERGY; OLCCD SINGLES ENERGY. The singles portion [E_h] of the named correlation energy.; Zero except in ROHF. .. psivar:: MP2 SAME-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; CEPA(0) SAME-SPIN CORRELATION ENERGY; CEPA(1) SAME-SPIN CORRELATION ENERGY; CEPA(2) SAME-SPIN CORRELATION ENERGY; CEPA(3) SAME-SPIN CORRELATION ENERGY; CISD SAME-SPIN CORRELATION ENERGY; QCISD SAME-SPIN CORRELATION ENERGY; ACPF SAME-SPIN CORRELATION ENERGY; AQCC SAME-SPIN CORRELATION ENERGY; REMP2 SAME-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; CCD SAME-SPIN CORRELATION ENERGY; LCCSD SAME-SPIN CORRELATION ENERGY; CCSD SAME-SPIN CORRELATION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP3 SAME-SPIN CORRELATION ENERGY; OREMP2 SAME-SPIN CORRELATION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY. The unscaled portion [E_h] of the named correlation energy; from same-spin or triplet doubles correlations. .. psivar:: MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; CEPA(0) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(1) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(2) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(3) OPPOSITE-SPIN CORRELATION ENERGY; CISD OPPOSITE-SPIN CORRELATION ENERGY; QCISD OPPOSITE-SPIN CORRELATION ENERGY; ACPF OPPOSITE-SPIN CORRELATION ENERGY; AQCC OPPOSITE-SPIN CORRELATION ENERGY; REMP2 OPPOSITE-SPIN CORRELATION ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; CCD OPPOSITE-SPIN CORRELATION ENERGY; LCCSD OPPOSITE-SPIN CORRELATION ENERGY; CCSD OPPOSITE-SPIN CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OREMP2 OPPOSITE-SPIN CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY. The unscaled portion [E_h] of the named correlation energy; from opposite-spin or singlet double,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:43479,energy,energy,43479,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"GY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52026,energy,energy,52026,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"GY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment activate(mA); .. comment set dft_dispersion_parameters [1.0]; .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from Py-side'); .. comment eneyne.update_geometry(); .. comment eneyne.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[0], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D2'); .. comment mA = eneyne.extract_subsets(1); .. comment mA.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2'); .. comment mB = eneyne.extract_subsets(2); .. comment mB.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:30310,energy,energy,30310,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"GY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:49840,energy,energy,49840,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"General Notes About the Code. 1. While the primary purpose of the code is transformations between the AO and MO bases, ; some codes (mrcc, detci, and especially cc) request that tasks involving frozen core; orbitals be either done by libtrans or converted into effective quantities free of frozen; core orbitals - that way, they don't need to worry about frozen core orbitals at all, and; the calculation retains all the simplicity of one where core electrons simply don't exist.; In particular, libtrans:integraltransform_sort_so_tei.cc has the following responsibilities:; * Computing all energy contributions involving frozen core orbitals only and putting that; result into frozen_core_energy_. Used to sanity-check the HF energy.; * Constructing the ""frozen-core operator"", which is the core hamiltonian for non-frozen orbitals; plus the Couloumb and exchange contributions terms arising from the electric field of; the frozen core orbitals. Think of it as halfway between the core Hamiltonian and the Fock operator.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libtrans/README.txt:591,energy,energy,591,psi4/src/psi4/libtrans/README.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libtrans/README.txt,4,['energy'],['energy']
Energy Efficiency,"H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; set pno_convergence normal; ; energy('dlpno-mp2'). The main difference between this input and a DF-MP2 input is the ``energy('dlpno-mp2')``; call to :py:func:`~psi4.driver.energy`. The only other addition is the |dlpno__pno_convergence|; keyword, which determines the accuracy of the local approximations underlying ; the DLPNO-MP2 method. Note that the water molecule in this example is not large; enough for DLPNO-MP2 to be of any benefit relative to DF-MP2. The theory of the DLPNO-MP2 method and practical recommendations for using the; code are presented below. . .. index::; pair: DLPNO-MP2; theory. Theory; ------. See :ref:`DF-MP2 <sec:dfmp2>` for background on the theory of (non-local); density-fitted MP2. |PSIfours| DLPNO-MP2 implementation is based on the ; manuscript by Pinski et al. [Pinski:2015:034108]_. In DLPNO-MP2, as in all local MP2 methods, the second-order MBPT energy is determined ; variationally via the Hylleraas functional [Hylleraas:1930:209]_:. .. math::; :label: Hylleraas. E^{(2)} = 2 \langle \Psi_{0}^{(0)} | \hat{H} - E_{0}^{(0)} | \Psi_{0}^{(1)} \rangle - \langle \Psi_{0}^{(1)} | \hat{H}^{(0)} - E_{0}^{(0)} | \Psi_{0}^{(1)} \rangle = \min_{| \Psi_{0}^{(1)} \rangle}. Determining the optimal :math:`| \Psi_{0}^{(1)} \rangle` entails iteratively; minimizing the following residual [Pulay:1986:357]_:. .. math::; :label: Residual. R_{ij}^{ab} = (ia|jb) + (\epsilon_a + \epsilon_b - f_{ii} - f_{jj})t_{ij}^{ab} - \sum_{k \ne j} f_{ik} \sum_{c,d} S_{ac}t_{kj}^{c,d}S_{db} - \sum_{k \ne i} f_{kj} \sum_{cd} S_{ac}t_{ik}^{cd}S_{db} . where ``i``, ``j``, and ``k`` are (not necessarily canonical) occupied orbitals, ``a``,; ``b``, ``c``, and ``d`` are virtual orbitals, :math:`f_{ij}` are fock matrix elements,; :math:`S_{ab}` are orbital overlaps, and finally :math:`t_{ij}^{ab}` are the MP2; amplitudes to be solved for. Virtual orbitals may be different for each pa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:4246,energy,energy,4246,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"H-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:51418,energy,energy,51418,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"HF | yes | yes | any, singlet, triplet, spin_flip |; +---------------+------------+---------------+--------------------------------------------+; | CVS-ADC(1) | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+; | CVS-ADC(2) | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+; | CVS-ADC(2)-x | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+; | CVS-ADC(3) | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+. The leftmost column of table :ref:`table:adcsummary` provides the supported ADC methods.; If only excitation energies are desired, one can simply pass one; of the listed method strings to the function :py:func:`~psi4.driver.energy`.; For example, ``energy('adc(2)-x')`` will compute; excitation energies at ADC(2)-x level.; Properties such as oscillator strengths, transition or state dipole moments; are available by calling the function :py:func:`~psi4.driver.properties`; with appropriate arguments.; Most commonly users will want to compute at least oscillator strengths; along with the excitation energies,; resulting in a call like ``properties('adc(2)', properties=[""oscillator_strength""])``. Running ADC calculations; ------------------------; .. sectionauthor:: Michael F. Herbst. Running an ADC calculation with |PSIfour| requires; the call to :py:func:`~psi4.driver.properties` as discussed above; as well as one or more mandatory keyword arguments. The most important keyword argument is |adc__roots_per_irrep|,; which is an array with the number of excited states desired; for each irreducible representation. Most ADC methods; are only supported at C1 symmetry at the moment, such that; this option should in most ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:6513,energy,energy,6513,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['energy'],['energy']
Energy Efficiency,"Hansen; *Chem. Phys.* **356**, 98-109 (2009). .. [Izsak:2011:144105]; R. Izs\ |a_acute|\ k and F. Neese; *J. Chem. Phys.* **135**, 144105 (2011). .. [Smith:2018:3504]; 10.1021/acs.jctc.8b00286,; ""PSI4NUMPY: An Interactive Quantum Chemistry Programming Environment for Reference Implementations and Rapid Development"",; D. G. A. Smith, L. A. Burns, D. A. Sirianni, D. R. Nascimento, A. Kumar, A. M. James, J. B. Schriber, T. Zhang, B. Zhang, A. S. Abbott, E. J. Berquist, M. H. Lechner, L. A. Cunha, A. G. Heide, J. M. Waldrop, T. Y. Takeshita, A. Alenaizan, D. Neuhauser, R. A. King, A. C. Simmonett, J. M. Turney, H. F. Schaefer III, F. A. Evangelista, A. E. DePrince, T. D. Crawford, K. Patkowski, and C. D. Sherrill; *J. Chem. Theory Comput.* **14**, 3504-3511 (2018). .. [Schriber:2021:234107]; J. B. Schriber, D. A. Sirianni, D. G. A. Smith, L. A. Burns, D. Sitkoff, D. L. Cheney, C. D. Sherrill; *J. Chem. Phys.* **154**, 234107 (2021). .. [Caldeweyher:2019:154122]; ""A generally applicable atomic-charge dependent London dispersion correction"",; E. Caldeweyher, S. Ehlert, A. Hansen, H. Neugebauer, S. Spicher, C. Bannwarth, and S. Grimme,; *J. Chem. Phys.* **150**, 154122 (2019).; https://doi.org/10.1063/1.5090222. .. [Haser:1989:104]; M. Haser and R. Ahlrichs,; *J. Comp. Chem.* **10(1)**, 104 (1989).; https://doi.org/10.1002/jcc.540100111. .. [Thompson:2017:144101]; T. H. Thompson and C. Ochsenfeld; *J. Chem. Phys.* **147**, 144101 (2017).; https://doi.org/10.1063/1.4994190. .. [Smith:2020:184108]; ""PSI4 1.4: Open-source software for high-throughput quantum chemistry"",; D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish, M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio, A. Alenaizan, A. M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer, R. A. Shaw, J. B. Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni, J. S. O'Brien, J. M. Waldrop, A. Kumar, E. G. Hohenstein, B. P. Pritchard, B. R. Brooks, H. F. Schaefer III, A. Yu. Sokolov, K. Patkowski, A. E. DePrince",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/bibliography.rst:18166,charge,charge,18166,doc/sphinxman/source/bibliography.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/bibliography.rst,1,['charge'],['charge']
Energy Efficiency,ION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48401,energy,energy,48401,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"JOBTYPE``. * You're not welcome to add ``CHARGE`` or ``MULTP`` options. Plan to get; these quantities from the molecule object. Since we frequently use subsets; of systems (with their own charge and multiplicity), this is safer. * Conform. Just grep ``'add' psi4/src/read_options.cc`` to get a list of; all the option names in |PSIfour| and try to match any conventions you; find. * If you have a quantity you'd like to call a cutoff, a threshold, a; tolerance, or a convergence, consider the following guidelines in naming; it. * If its value is typically greater than ~0.001, give it a name with ``CUTOFF``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with larger values (e.g.,; integrals, occupations, eigenvectors), give it a name with ``TOLERANCE``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with smaller values (e.g., energy; changes, residual errors, gradients), give it a name with; ``CONVERGENCE``. * In deciding how to arrange words in an option name, place the context; first (e.g., ``MP2_AMPS_PRINT``, ``TRIPLES_DIIS``). This means ``PRINT``; will generally be at the end of an option name. * Use ``INTS_TOLERANCE`` (not schwarz_cutoff). * ``H`` in an option name is reserved for Hamiltonian (or hydrogen).; Hessian should be ``HESS``. * All option names should be all caps and separated by underscores. * If you have an option that instructs your module to do something not too; computationally intensive and then quit, append ``_EXIT`` to the option; name. * Scaling terms (like for scs) should follow the pattern ``MP2_SS_SCALE``; and ``SAPT_OS_SCALE``. * ``FRAG`` for fragment. * ``AVG`` for average. * For level-shifting, let's try to have it governed by (double); ``LEVEL_SHIFT`` only and not a boolean/double combo since the procedure; can be turned on (role of boolean) if the value (role of double) has; changed. * For Tikhonow regularization, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:10878,energy,energy,10878,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['energy'],['energy']
Energy Efficiency,"July 2016, some total SAPT energy psivars were renamed. .. caution:: February 7, 2020, a missing term in :math:`E^{(30)}_{ind}` was added, causing; possible discrepancies with prior versions of the code on the order of; 0.01 kcal/mol. See https://github.com/psi4/psi4/issues/1677. .. caution:: August 2021, the number of frozen core orbitals used in the dMP2 computations; is now standardized. Specifically, we now rigorously enforce that the number of core orbitals ; frozen in dimer computations is equal to the sum of frozen orbitals of each monomer. Prior to; this, a discrepency between these values was possible when one of the monomers was (exclusively) ; a charged alkali metal. . .. _`sec:saptfitA`:. .. caution:: May 2022 c. v1.6, the default for |sapt__df_basis_elst|; changed from the value of |sapt__df_basis_sapt| (which itself; defaults to the RI of the orbital basis) to the JKFIT of the orbital; basis. This affects SAPT0 and sSAPT0 computed with the :ref:`SAPT; module<sec:sapt>` (the default code for ``energy(""sapt0"")`` that; can also compute higher-order SAPT). Electostatics, exchange,; and induction terms for SAPT0 and sSAPT0 accessed through; ``energy(""sapt0"")`` or ``energy(""ssapt0"")`` change; the dispersion; term does not change. The SAPT0 and sSAPT0 terms accessed as; subsidiary calculations of higher-order SAPT do not change; that is,; the :ref:`SAPT module<sec:sapt>` breaks the consistency of its SAPT0; results. The reasoning and reward behind this change is that the JKFIT; basis better describes the physics (see :ref:`fitting changes <sec:saptfitB>` ) and the; default SAPT0 results from the :ref:`SAPT module<sec:sapt>` are now; consistent with those from the :ref:`FISAPT module<sec:fisapt>` and; the sapt(dft) module. See :srcsample:`sapt-compare` for an example.; To reproduce former behavior, set |sapt__df_basis_elst| to the; orbital basis set's RI auxiliary basis. Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the non",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:3461,energy,energy,3461,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"LE. Redundant 32-pole array [e a0^5] for the named method, (3, 3, 3, 3, 3). .. psivar:: mtd 64-POLE. Redundant 64-pole array [e a0^6] for the named method, (3, 3, 3, 3, 3, 3). .. psivar:: mtd 128-POLE. Redundant 128-pole array [e a0^7] for the named method, (3, 3, 3, 3, 3, 3, 3). .. psivar:: MP2 TOTAL ENERGY; MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2 level of theory. .. psivar:: MP2 TOTAL GRADIENT; The total electronic gradient [E_h/a0] of the MP2 level of theory, ({nat}, 3). .. psivar:: MP2 DIPOLE GRADIENT. The derivative of the MP2 level of theory dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: MP2 TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the MP2 level of theory, (3 * {nat}, 3 * {nat}). .. psivar:: MP2.5 TOTAL ENERGY; MP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2.5 level of theory. .. psivar:: MP3 TOTAL ENERGY; MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3 level of theory. .. psivar:: MP4(T) CORRECTION ENERGY. The MP4 triples component [E_h]. Quantity is second right-hand term in; Eq. :eq:`MP4terms`. .. psivar:: MP4(SDQ) TOTAL ENERGY; MP4(SDQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP4 singles, doubles, quadruples level of theory. Quantity; :psivar:`MP4(SDQ) CORRELATION ENERGY` is; first right-hand term in Eq. :eq:`MP4terms`. .. psivar:: MP4 TOTAL ENERGY; MP4 CORRELATION ENERGY; MP4(SDTQ) TOTAL ENERGY; MP4(SDTQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full MP4 level of theory. Quantity :psivar:`MP4 CORRELATION; ENERGY` / :psivar:`MP4(SDTQ) CORRELATION ENERGY`; is left-hand term in Eq. :eq:`MP4terms`. .. math:: E_{\te",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:40283,energy,energy,40283,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"LE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{CP}}}. .. psivar:: CURRENT CORRELATION ENERGY. The correlation energy [E_h] corresponding to the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT ENERGY. The total electronic energy [E_h] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. .. psivar:: CURRENT REFERENCE ENERGY. The total electronic energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten), (3,). .. psivar:: CURRENT GRADIENT. The total electronic gradient [E_h/a0] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer, ({nat}, 3). .. psivar:: CURRENT DIPOLE GRADIENT. The derivative of the dipole with respect to nuclear perturbations [E_h a0/u] = [(e a0/a0)^2/u]; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: CURRENT HESSIAN. The total electronic Hessian [E_h/a0/a0] of the most recent stage of a; calculation, (3 * {nat}, 3 * {nat}). .. psivar:: CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:26317,energy,energy,26317,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"LE_cppe`,; hint its location with :makevar:`cppe_DIR`,; and rebuild |PSIfour| to detect CPPE and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. cppe from conda without thinking, consult. * To remove a conda installation, ``conda remove cppe``. **Source**. * .. image:: https://img.shields.io/github/tag-date/maxscheurer/cppe.svg?maxAge=2592000; :target: https://github.com/maxscheurer/cppe. * If using |PSIfour| built from source and you want CPPE built from; from source also,; enable it as a feature with :makevar:`ENABLE_cppe`,; and let the build system fetch and build it and activate dependent code. .. index:: PE; Using PE. .. _`sec:usingPE`:. Using the polarizable embedding model; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The inclusion of a PE description of the solvent into your calculation; is achieved by setting |globals__pe| ``true`` in your input file. .. note:: At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The CPPE library **cannot** exploit molecular point group symmetry. .. .. warning:: Analytic gradients and Hessians **are not** available with PE. Finite differences will be used; .. regardless of the ``dertype`` passed to the ``optimize`` function.; .. See :srcsample:`pcmsolver/opt-fd` for a sample input. .. The PCM model and molecular cavity are specified in a ``pcm`` section that has; .. to be explicitly typed in by the user. This additional section follows a syntax; .. that is slightly different from that of |Psifour| and is fully documented; .. `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PE would look like the follo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:3610,energy,energy,3610,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['energy'],['energy']
Energy Efficiency,"LT_VARIABLE _exec_python_err); endif(); if(_exec_python_err); message(STATUS ""No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi sphinx-autodoc-typehints graphviz python-graphviz autodoc-pydantic sphinx-tabs -c conda-forge -c psi4)""); set(SPHINX_STUFF_FOUND ""OFF""). else(); set(SPHINX_STUFF_FOUND ""ON""); endif(). if(SPHINXMAN_STRICT); set(SPHINX_EXTRAS ""-n;-W;--keep-going""); #set(SPHINX_EXTRAS ""-W;--keep-going""); # return to above after qcel 0.25; #set(SPHINX_EXTRAS """"); else(); set(SPHINX_EXTRAS """"); endif(). # Setup and build Sphinx documentation; if(PERL_FOUND AND SPHINX_FOUND AND SPHINX_STUFF_FOUND); set(CCSD ""${CMAKE_CURRENT_SOURCE_DIR}""); set(CCBD ""${CMAKE_CURRENT_BINARY_DIR}""). # Static-doc reST files; set(STATICDOC abbr_accents.rst adc.rst adcc.rst appendices.rst basissets.rst; basissets_byelement.rst bibliography.rst cbs.rst cbs_eqn.rst ddx.rst; nbody.rst customizing.rst db.rst detci.rst dfmp2.rst dlpnomp2.rst; diatomic.rst documentation.rst energy.rst external.rst fchk.rst; freq.rst gdma.rst glossary_psivariables.rst index.rst intercalls.rst; interfacing.rst introduction.rst methods.rst notes_c.rst notes_py.rst; oeprop.rst opt.rst optking.rst plugins.rst prog_corelibs.rst prop.rst; psithonfunc.rst psithoninput.rst quickaddalias.rst; basissets_tables.rst quickadddatabase.rst sapt.rst sowreap.rst; testsuite.rst tutorial.rst dft_byfunctional.rst scf.rst mrcc.rst; psimrcc.rst cc.rst dft.rst fnocc.rst optionshandling.rst; basissets_byfamily.rst psipep.rst pep0001.rst dftd3.rst occ.rst; molden.rst cubeprop.rst dct.rst relativistic.rst dkh.rst proc_py.rst; psithonmol.rst cfour.rst mrcc_table_energy.rst cfour_table_energy.rst; cfour_table_grad.rst libefp.rst cppe.rst conda.rst pcmsolver.rst thermo.rst; chemps2.rst fisapt.rst plugin_v2rdm_casscf.rst psi4api.rst; manage_addon.rst numpy.rst build_planning.rst build_faq.rst; build_obtaining.rst libint.rst erd.rst simint.rst gcp.rst; index_tutorials.rst prog_faq.rst manage_index.rst man",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:2224,energy,energy,2224,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"N ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCn TOTAL ENERGY; CCn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested full coupled-cluster (CCSD, CCSDT, up to CC\ *n*); level of theory. .. psivar:: CCSD(T) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(AT) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; A-CCSD(T) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the perturbatively corrected coupled-cluster (CCSD(T), A-CCSD(T) = CCSD(AT), CCSDT(Q),; up to CC(\ *n*\ -1)(\ *n*\ ) level of theory. .. psivar:: CCSDT-1a TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1a CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CC\ *n*\ -1a) level of theory. .. psivar:: CCSDT-1b TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-1b CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CC\ *n*\ -1b) level of theory. .. psivar:: CCSDT-3 TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCn-3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CC\ *n*\ -3) level of theory. .. psivar:: CCSD(T)_L TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:21538,energy,energy,21538,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"NERGIES. Restricted-reference opposite-spin (alpha first) pair energies for coupled-cluster; theories. Size number of active doubly occupied orbitals, square. .. psivar:: CC SINGLET PAIR ENERGIES; CCSD SINGLET PAIR ENERGIES; CC2 SINGLET PAIR ENERGIES; CC3 SINGLET PAIR ENERGIES; MP2 SINGLET PAIR ENERGIES. Restricted-reference singlet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CC TRIPLET PAIR ENERGIES; CCSD TRIPLET PAIR ENERGIES; CC2 TRIPLET PAIR ENERGIES; CC3 TRIPLET PAIR ENERGIES; MP2 TRIPLET PAIR ENERGIES. Restricted-reference triplet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CCSD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCn TOTAL ENERGY; CCn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested full coupled-cluster (CCSD, CCSDT, up to CC\ *n*); level of theory. .. psivar:: CCSD(T) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(AT) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; A-CCSD(T) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the perturbatively corrected coupled-cluster (CCSD(T), A-CCSD(T) = CCSD(AT), CCSDT(Q),; up to CC(\ *n*\ -1)(\ *n*\ ) level of theory. .. psivar:: CCSDT-1a TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1a CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CC\ *n*\ -1a) level of theory. .. psivar:: CCSDT-1b TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:20724,energy,energy,20724,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"N} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:46773,energy,energy,46773,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ON CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment activate(mA); .. comment set dft_dispersion_parameters [1.0]; .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from Py-side'); .. comment eneyne.update_geometry(); .. comment eneyne.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[0], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D2'); .. comment mA = eneyne.extract_subsets(1); .. comment mA.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2'); .. comment mB = eneyne.extract_subsets(2); .. comment mB.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethyne -D2'); .. comment ; .. comment eneyne.run_dftd3('b3lyp', 'd3zero', {'s6': 1.0, 's8': 0.722, 'sr6': 1.217, 'alpha6': 14.0}); .. comment compare_values(ref_pbe_d3zero[0], get_variab",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:30525,energy,energy,30525,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ON ENERGY': -0.2629759351596186},; 'S22-16-monoB-unCP': {'CURRENT ENERGY': -77.07606823017188,; 'DF-MP2 CORRELATION ENERGY': -0.2594122526144091},; 'S22-2-dimer': {'CURRENT ENERGY': -152.40958884746667,; 'DF-MP2 CORRELATION ENERGY': -0.3797598812113561},; 'S22-2-monoA-unCP': {'CURRENT ENERGY': -76.19905879745446,; 'DF-MP2 CORRELATION ENERGY': -0.1887118848315123},; 'S22-2-monoB-unCP': {'CURRENT ENERGY': -76.19902978067739,; 'DF-MP2 CORRELATION ENERGY': -0.18857384937354635},; 'S22-8-dimer': {'CURRENT ENERGY': -80.67416758080654,; 'DF-MP2 CORRELATION ENERGY': -0.2844102558783027},; 'S22-8-monoA-unCP': {'CURRENT ENERGY': -40.336952636980364,; 'DF-MP2 CORRELATION ENERGY': -0.14185962536715307},; 'S22-8-monoB-unCP': {'CURRENT ENERGY': -40.336952636980506,; 'DF-MP2 CORRELATION ENERGY': -0.14185962536715097}}; ; DB_RXN; {'S22-16': {'CURRENT ENERGY': -0.0035470557928363178,; 'DF-MP2 CORRELATION ENERGY': -0.0014825844040612934},; 'S22-2': {'CURRENT ENERGY': -0.011500269334817403,; 'DF-MP2 CORRELATION ENERGY': -0.0024741470062974724},; 'S22-8': {'CURRENT ENERGY': -0.0002623068456699684,; 'DF-MP2 CORRELATION ENERGY': -0.0006910051439986686}}; ; mp2 interaction energy of water dimer (S22-2); -0.0115002693348. .. index:: database(); available. .. _`sec:availableDatabases`:. Available Databases; ^^^^^^^^^^^^^^^^^^^. Below are documented for particular databases the availability of the generic; database function options **cp**, **rlxd**, **benchmark**, and the string; options for **subset**. The full reagent member list, which can also be used; in conjunction with **subset**, is not included here for consideration of space; and may be found in the database file. The database Python files are very; readable and should be consulted for more particular questions. ----. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:. autodoc_available_databases. .. include:: autodoc_available_databases.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:6678,energy,energy,6678,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,"One of the most significant changes introduced in version 4 was the use of; Python. The input file is actually a Python script, which interacts with a Psi; Python module to perform computations. In order for this to happen, the C++; binding must be known to Python; this is all done in the ; {\tt \$PSI4/src/bin/psi4/python.cc} file. For example, we have an SCF module, with; the C++ signature; {\tt PsiReturnType cscf::cscf(Options \&options);}; To allow Python to use this, we first define a little wrapper function; \begin{verbatim}; double py_psi_scf(); {; if (scf::scf(Process::environment.options) == Success); return Process::environment.globals[""CURRENT ENERGY""];; else; return 0.0;; }; \end{verbatim}; This does a couple of things to automate things a) it passes the default; options object into SCF automatically, so that the user doesn't have to, and b); checks the return value, and will return the energy, which is posted to the; globals map, back to Python. Note that this is C++ code, within \PSIfour\ so; it is aware of all global objects, such as PSIO, Chkpt and Options. Now we; have this simple function call, we can tell Python about it:; \begin{verbatim}; def(""scf"", py_psi_scf);; \end{verbatim}; This binds the keyword ``scf'' to the newly created wrapper function, allowing; the user to type ``scf()'' in their Python input file to fire up the SCF; module. Similarly, the user might want to be able to call {\tt Molecule}'s; member functions directly from Python. This can also be done easily:. \begin{verbatim}; class_<Molecule, shared_ptr<Molecule> >(""Molecule"").; def(""print_to_output"", &Molecule::print).; def(""nuclear_repulsion_energy"", &Molecule::nuclear_repulsion_energy);; \end{verbatim}. This first defines the keyword {\tt Molecule} to refer to the C++ {\tt; Molecule}; the {\tt shared\_ptr<Molecule>} keyword tells Python to store it as; a shared pointer, which ensures that the object will not be deleted until both; C++ and Python have no more references to it. The",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst:911,energy,energy,911,doc/sphinxman/source/attic/progpycppconnect.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progpycppconnect.rst,1,['energy'],['energy']
Energy Efficiency,"P20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EX",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:51526,energy,energy,51526,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"P22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+3 DISP ENERGY; SAPT2+3 ELST ENERGY; SAPT2+3 EXCH ENERGY; SAPT2+3 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory. The sum of these four components yields; the :samp:`{SAPT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:54015,charge,charge-transfer,54015,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,"['charge', 'energy']","['charge-transfer', 'energy']"
Energy Efficiency,"PLET PAIR ENERGIES; CCSD TRIPLET PAIR ENERGIES; CC2 TRIPLET PAIR ENERGIES; CC3 TRIPLET PAIR ENERGIES; MP2 TRIPLET PAIR ENERGIES. Restricted-reference triplet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CCSD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCn TOTAL ENERGY; CCn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested full coupled-cluster (CCSD, CCSDT, up to CC\ *n*); level of theory. .. psivar:: CCSD(T) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(AT) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; A-CCSD(T) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the perturbatively corrected coupled-cluster (CCSD(T), A-CCSD(T) = CCSD(AT), CCSDT(Q),; up to CC(\ *n*\ -1)(\ *n*\ ) level of theory. .. psivar:: CCSDT-1a TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1a CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CC\ *n*\ -1a) level of theory. .. psivar:: CCSDT-1b TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-1b CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CC\ *n*\ -1b) level of theory. .. psivar:: CCSDT-3 TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCn-3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:21160,energy,energy,21160,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"PT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:53562,energy,energy,53562,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:introduction`:. ============; Introduction; ============. Overview; ========. |PSIfour| provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme d",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:1766,power,powerful,1766,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['power'],['powerful']
Energy Efficiency,"Python of ``which python``.; To use a different Python with |PSIfour| in the short term, just; ``path/to/desired/python psi4`` on the command line to override the; shebang line. To use a different Python with |PSIfour| in the long term,; edit the shebang line. If you're using |PSIfour| as a Python module, then |PSIfour| *is* running; the Python of ``which python``. .. _`faq:wrongpyfalse`:. How to fix ""``undefined symbol: _Py_FalseStruct``""; --------------------------------------------------. You're probably loading a Py3-compiled Psi4 in Py2. Switch interpreters; and re-run. A python of proper Py2 or Py3-ness is baked into the |PSIfour|; ""executable"", so you'll see this error only for Psi4 as Python module. .. _`faq:gdblldb`:. How to use ``gdb`` and ``lldb`` with Psi4; -----------------------------------------. Debugging |PSIfour| has gotten a little confusing now that it's running through Python. Here's the syntax ::. >>> cd {objdir}; >>> lldb -- python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (lldb) run. ::. >>> cd {objdir}; >>> gdb --args python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/sh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:55059,energy,energy,55059,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"R n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the free enthalpy at given temperature. .. psivar:: GRID ELECTRONS TOTAL; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA. The number of electrons integrated by the xc quadrature grid. .. psivar:: HF TOTAL ENERGY. The total electronic energy [E_h] for the Hartree--Fock method, without; any dispersion correction; the first three (or four, since; :math:`E_{xc} = 0`) terms in Eq. :eq:`SCFterms`. Quantity :math:`E_{\text{HF}}`; in Eq. :eq:`SCFterms`. .. psivar:: HF KINETIC ENERGY. The total kinetic energy [E_h] of the Hartree--Fock method. .. psivar:: HF POTENTIAL ENERGY. The total potential energy [E_h] of the Hartree--Fock method. .. psivar:: HF VIRIAL RATIO. The virial ratio of the Hartree--Fock method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:35856,energy,energy,35856,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"RELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{CP}}}. .. psivar:: CURRENT CORRELATION ENERGY. The correlation energy [E_h] corresponding to the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT ENERGY. The total electronic energy [E_h] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. .. psivar:: CURRENT REFERENCE ENERGY. The total electronic energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten), (3,). .. psivar:: CURRENT GRADIENT. The total electronic gradient [E_h/a0] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer, ({nat}, 3). .. psivar:: CURRENT DIPOLE GRADIENT. The derivative of the dipole with respect to nuclear perturbations [E_h a0/u] = [(e a0/a0)^2/u]; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: CURRENT HESSIAN. The total electronic Hessian [E_h/a0/a0] of the most recent stage of a; calculation, (3 * {nat}, 3 * {nat}). .. psivar:: CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY. Changeable quantities based on options.; The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by any reweighting of :psivar:`MP2 DOUBLES ENERGY",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:26515,energy,energy,26515,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"RELATION ENERGY; REMP2 OPPOSITE-SPIN CORRELATION ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; CCD OPPOSITE-SPIN CORRELATION ENERGY; LCCSD OPPOSITE-SPIN CORRELATION ENERGY; CCSD OPPOSITE-SPIN CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OREMP2 OPPOSITE-SPIN CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY. The unscaled portion [E_h] of the named correlation energy; from opposite-spin or singlet doubles correlations. .. psivar:: MRPT TOTAL ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY. Energies [E_h] from correlated multi-reference theories. .. psivar:: MULLIKEN CHARGES. Property of partial atomic charges [e] by the method of Mulliken, (nat,). .. psivar:: NAUX (SCF); NAUX (CC). Convenience storage of number of functions [] in the auxiliary basis; set for named stage of the calculation. .. psivar:: NBODY (i, j, ..., k)@(a, b, ..., c) TOTAL ENERGY. The total energy [E_h] of a component of the requested N-Body energy.; The first parenthetical list over *i*, *j*, ..., *k* enumerates; molecular fragments included in the computation in 1-indexed,; input-file order, while the second enumerates list over *a*, *b*,; ..., *c* enumerates which fragments contribute basis functions to the; computation. For example, ``(1, 2)@(1, 2, 3, 4)`` indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:44947,energy,energy,44947,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"RGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates MP2 induction correction.; The sum of these four components yields the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT2+DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 TOTAL ENERGY; SAPT2+3DMP2 TOTAL ENERGY; SAPT2+(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+3(CCD)DMP2 TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory that incorporates MP2 induction correction. .. psivar:: SCF ITERATIONS; ADC ITERATIONS; CCSD ITERATIONS; OPTIMIZATION ITERATIONS. Number of iterations [] in the named iterative method or optimization procedure. .. psivar:: SCF DIPOLE. Dipole array [e a0] for the SCF stage, (3,). .. psivar:: SCF QUADRUPOLE. Redundant quadrupole array [e a0^2] for the SCF stage, (3, 3). .. psivar:: SCF TOTAL ENERGY. The total electronic energy [E_h] of the SCF stage of the calculation.; The :samp:`{method} CORRELATION ENERGY` variables from subsequent stages of a; calculation are often the corresponding :samp:`{method} TOTAL ENERGY`; variables less this quantity. Constructed from Eq. :eq:`SCFterms`,; where this quantity is :math:`E_{\text{SCF}}`. .. math::; :nowrap:; :label: SCFterms. \begin{align*}; E_{\text{SCF}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} \\; & = E_{\text{FCTL/HF}} + E_{\text{-D}}; \end{align*}. Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`HF TOTAL ENERGY` (for HF) or; :psivar:`DFT FUNCTIONAL TOTAL ENERGY` (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to :psivar:`DFT TOTAL ENERGY`. .. psivar:: SCF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the SCF stage of the calculation, ({nat}, 3). .. psivar:: SCF DIPOLE GRADIENT. The derivative of the SCF stage dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear pe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:57770,energy,energy,57770,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"RGY; CCSD(AT) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; A-CCSD(T) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the perturbatively corrected coupled-cluster (CCSD(T), A-CCSD(T) = CCSD(AT), CCSDT(Q),; up to CC(\ *n*\ -1)(\ *n*\ ) level of theory. .. psivar:: CCSDT-1a TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1a CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CC\ *n*\ -1a) level of theory. .. psivar:: CCSDT-1b TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-1b CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CC\ *n*\ -1b) level of theory. .. psivar:: CCSDT-3 TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCn-3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CC\ *n*\ -3) level of theory. .. psivar:: CCSD(T)_L TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(\ *n*\ -1)(\ *n*\ )L level of theory. .. psivar:: CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the modified CC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:21878,energy,energy,21878,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"RHF and UHF references, the singles correction,. .. math:: E_{\mathrm{MBPT}}^{(1)} = - \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i},. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. .. math:: E_{\mathrm{MBPT}}^{(2)} = - \frac{1}{4} \frac{\langle ij|ab\rangle^2}{\epsilon_a + ; \epsilon_b - \epsilon_i - \epsilon_j}. In the DFMP2 module, the first-order contribution, or ""singles energy"" is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements :math:`f_{ia}` are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF |scf__e_convergence| and/or |scf__d_convergence| keywords; and try again. . To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimme's Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemist's integrals over spatial orbitals). .. math:: E_{\mathrm{MBPT,OS}}^{(2)} = ; - \frac{(ia|jb)(ia|jb)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. and . .. math:: E_{\mathrm{MBPT,SS}}^{(2)} = ; - \frac{[(ia|jb)-(ib|ja)](ia|jb)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. .. math:: E_{\mathrm{MBPT,OS}}^{(2)} = ;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:6935,energy,energy,6935,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"SIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from the source directory. This is an expert; option for development, and not all functionality will be available. ::. >>> cd {objdir}; >>> ln -s {top-level-psi4-dir}/{objdir}/stage/lib/psi4/core.cpython-{ext_will_vary}.so ../psi4/core.cpython-{ext_will_vary}.so; >>> python ../psi4/run_psi4.py --inplace input.dat. .. _`faq:psidatadir`:. Why not to set :envvar:`PSIDATADIR`; -----------------------------------. :envvar:`PSIDATADIR` is an environment variable containing the location ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:33205,energy,energy,33205,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"T. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:53081,energy,energy,53081,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"TAL ENERGY. Energies [E_h] from correlated multi-reference theories. .. psivar:: MULLIKEN CHARGES. Property of partial atomic charges [e] by the method of Mulliken, (nat,). .. psivar:: NAUX (SCF); NAUX (CC). Convenience storage of number of functions [] in the auxiliary basis; set for named stage of the calculation. .. psivar:: NBODY (i, j, ..., k)@(a, b, ..., c) TOTAL ENERGY. The total energy [E_h] of a component of the requested N-Body energy.; The first parenthetical list over *i*, *j*, ..., *k* enumerates; molecular fragments included in the computation in 1-indexed,; input-file order, while the second enumerates list over *a*, *b*,; ..., *c* enumerates which fragments contribute basis functions to the; computation. For example, ``(1, 2)@(1, 2, 3, 4)`` indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:45597,energy,energy,45597,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"TION ENERGY; CEPA(1) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(2) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(3) OPPOSITE-SPIN CORRELATION ENERGY; CISD OPPOSITE-SPIN CORRELATION ENERGY; QCISD OPPOSITE-SPIN CORRELATION ENERGY; ACPF OPPOSITE-SPIN CORRELATION ENERGY; AQCC OPPOSITE-SPIN CORRELATION ENERGY; REMP2 OPPOSITE-SPIN CORRELATION ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; CCD OPPOSITE-SPIN CORRELATION ENERGY; LCCSD OPPOSITE-SPIN CORRELATION ENERGY; CCSD OPPOSITE-SPIN CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OREMP2 OPPOSITE-SPIN CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY. The unscaled portion [E_h] of the named correlation energy; from opposite-spin or singlet doubles correlations. .. psivar:: MRPT TOTAL ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY. Energies [E_h] from correlated multi-reference theories. .. psivar:: MULLIKEN CHARGES. Property of partial atomic charges [e] by the method of Mulliken, (nat,). .. psivar:: NAUX (SCF); NAUX (CC). Convenience storage of number of functions [] in the auxiliary basis; set for named stage of the calculation. .. psivar:: NBODY (i, j, ..., k)@(a, b, ..., c) TOTAL ENERGY. The total energy [E_h] of a component of the requested N-Body energy.; The first parenthetical list over *i*, *j*, ..., *k* enumerates; molecular fragments included in the computation in 1-indexed,; input-file order, while the second enumerates list over *a*, *b*,; ..., *c* enumerates which fragments contribute basis functions to the; computation. For example, ``(1, 2)@(1, 2, 3, 4)`` indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:44683,charge,charges,44683,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['charge'],['charges']
Energy Efficiency,"The total electronic gradient [E_h/a0] of the SCF stage of the calculation, ({nat}, 3). .. psivar:: SCF DIPOLE GRADIENT. The derivative of the SCF stage dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: SCF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the SCF stage, (3 * {nat}, 3 * {nat}). .. psivar:: SCF STABILITY EIGENVALUES. Array of eigenvalues from UHF or ROHF stability analysis. .. psivar:: SCS-CCSD TOTAL ENERGY; SCS-CCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the CCSD-like method formed by reweighting :psivar:`CCSD DOUBLES ENERGY`; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2-VDW TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is fr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:59473,energy,energy,59473,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"UADRUPOLE. Redundant transition quadrupole array [e a0^2] between roots *n* and *m* for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory and root *n*, (3,). .. psivar:: CI ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory and root *n*, (3, 3). .. psivar:: CI ROOT n TOTAL ENERGY; CI ROOT n CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root; *n* (numbering starts at 0). .. psivar:: CI STATE-AVERAGED TOTAL ENERGY; CI STATE-AVERAGED CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monome",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:25076,energy,energy,25076,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; single: DCT; pair: DCT; theory. .. _`sec:dct`:. DCT: Density Cumulant Theory; =============================. .. codeauthor:: Alexander Yu. Sokolov, Andrew C. Simmonett, and Xiao Wang; .. sectionauthor:: Alexander Yu. Sokolov. *Module:* :ref:`Keywords <apdx:dct>`, :ref:`PSI Variables <apdx:dct_psivar>`, :source:`DCT <psi4/src/psi4/dct>`. .. _`sec:dcttheory`:. Theory; ~~~~~~. Density cumulant theory (DCT) is a density-based *ab initio* theory; that can compute electronic energies without the use of a wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (:math:`\boldsymbol{\gamma_1}` and :math:`\boldsymbol{\gamma_2}`):. .. math:: . E = h_p^q \gamma_q^p + \frac{1}{2} g_{pq}^{rs} \gamma_{rs}^{pq}. Here we used Einstein convention for the summation over the repeated indices.; :math:`h_p^q` and :math:`g_{pq}^{rs}` are the standard one- and two-electron integrals, and; :math:`\gamma_p^q` and :math:`\gamma_{pq}^{rs}` are the elements of :math:`\boldsymbol{\gamma_1}` and :math:`\boldsymbol{\gamma_2}`,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements :math:`\gamma_p^q` and; :math:`\gamma_{pq}^{rs}` cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, *i.e.*; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:1631,energy,energy,1631,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"UREAM``, ``DERTYPE``. * ``INTS`` (not integrals), also ``OEI`` (not oe_integrals) for; one-electron integrals and ``TEI`` (not te_integrals) for two-electron; integrals. * ``PERTURB`` (not pert) for perturbation. * Use ``PRINT`` options to indicate printing to output file. Use ``WRITE``; options to indicate printing to another file. This probably isn't; entirely valid now but should be observed in future. The complement to; ``WRITE`` is ``READ``. ``PRINT``, ``READ``, and ``WRITE`` will usually; be the last words in an option name. * Use ``FOLLOW_ROOT`` for the state to be followed in geometry optimizations. * ``WFN`` (not wavefunction). * You're welcome to use ``WFN`` and ``DERTYPE`` as internal options, but; plan to have these set by the python driver and mark them as ``!expert``; options. Really avoid using ``JOBTYPE``. * You're not welcome to add ``CHARGE`` or ``MULTP`` options. Plan to get; these quantities from the molecule object. Since we frequently use subsets; of systems (with their own charge and multiplicity), this is safer. * Conform. Just grep ``'add' psi4/src/read_options.cc`` to get a list of; all the option names in |PSIfour| and try to match any conventions you; find. * If you have a quantity you'd like to call a cutoff, a threshold, a; tolerance, or a convergence, consider the following guidelines in naming; it. * If its value is typically greater than ~0.001, give it a name with ``CUTOFF``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with larger values (e.g.,; integrals, occupations, eigenvectors), give it a name with ``TOLERANCE``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with smaller values (e.g., energy; changes, residual errors, gradients), give it a name with; ``CONVERGENCE``. * In deciding how to arrange words in an option name, place the context; first (e.g., ``MP2_AMPS_PRINT``, ``TRIPLES_DIIS``). This mean",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:10106,charge,charge,10106,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['charge'],['charge']
Energy Efficiency,"Y; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the free enthalpy at given temperature. .. psivar:: GRID ELECTRONS TOTAL; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA. The number of electrons integrated by the xc quadrature grid. .. psivar:: HF TOTAL ENERGY. The total electronic energy [E_h] for the Hartree--Fock method, without; any dispersion correction; the first three (or four, since; :math:`E_{xc} = 0`) terms in Eq. :eq:`SCFterms`. Quantity :math:`E_{\text{HF}}`; in Eq. :eq:`SCFterms`. .. psivar:: HF KINETIC ENERGY. The total kinetic energy [E_h] of the Hartree--Fock method. .. psivar:: HF POTENTIAL ENERGY. The total potential energy [E_h] of the Hartree--Fock method. .. psivar:: HF VIRIAL RATIO. The virial ratio of the Hartree--Fock method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:35187,energy,energy,35187,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"Y; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`O",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:60980,energy,energy,60980,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"[Caldeweyher:2019:154122]_. A few practical examples:. * DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with default parameters ::. optimize('pbe-d3bj'). * DFT-D2 optimization with custom s6 parameter ::. set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). * DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values) ::. set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). * DFT-D2 single point with ``dftd3`` instead of |PSIfours| libdisp ::. energy('pbe-d2', engine='dftd3'). If only dispersion corrections (rather than total energies) are of; interest, the dispersion programs can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_dftd3` or :py:func:`~qcdb.Molecule.run_dftd4`. (These functions; call QCEngine, which is the same |PSIfour| + ``dftd3``/``dftd4`` interface that is called during an scf job.); This ""D-only"" route is much faster than running a DFT-D energy.; This route is NOT available for ``s-dftd3``. File an issue if a definite need arises. Note that in a DFT+D energy or gradient calculation, user-specified; dispersion parameters override any information provided about the; functional. The same holds true for a ``dftd3`` ""D-only"" calculation. But; in a ``dftd4`` ""D-only"" calculation, functional information overrides; any user-specified dispersion parameters. * Some set-up::. molecule nene {; Ne; Ne 1 2.0; }; ; nene.update_geometry(). * The same four dispersion corrections/gradients as the section above::. >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05; ; >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]; ; >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05; ; >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. ..",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:24088,energy,energy,24088,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"[E_h] and correlation energy component [E_h]; for the averaged quadratic coupled-cluster level of theory.; .. psivar:: BRUECKNER CONVERGED. Value 1 (0) when the Brueckner orbitals have (have not) converged. .. psivar:: CBS NUMBER; NBODY NUMBER; FINDIF NUMBER. Number of tasks [] the named procedure performs. These are immediate; tasks, so if procedures are nested, the total number of tasks is; the product. .. psivar:: CBS TOTAL ENERGY; CBS CORRELATION ENERGY; CBS REFERENCE ENERGY. The total electronic energy [E_h] and its breakdown into reference total; energy [E_h] and correlation correction components [E_h] for the compound; method requested through cbs(). .. psivar:: CCname ROOT n TOTAL ENERGY; TD-fctl ROOT n TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) TOTAL ENERGY; TD-fctl ROOT n (IN h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* within irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (h) TOTAL ENERGY; TD-fctl ROOT n (h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n*, which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n (h) CORRELATION ENERGY. The correlation energy [E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:10067,energy,energy,10067,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,[E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy cont,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:47145,energy,energy,47145,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"[Hesselmann:2014:094107]_ for a local Hartree--Fock (LHF) formulation and then revised; by [Xie:2022:024801]_ for non-LHF) or; by the ratio of; coupled and uncoupled dispersion energy (suggested by [Podeszwa:2006:400]_ ). ; This can be controlled by keyword |sapt__sapt_dft_exch_disp_scale_scheme|, ; with ``FIXED`` using the Hesselmann/Xie approach (|PSIfours| default prior ; to Nov 2022), ``DISP`` using the Podeszwa approach (|PSIfours| default after Nov 2022),; or ``NONE`` for not scaling and using the uncoupled exchange-dispersion ; energy directly. .. warning:: Since Nov 2022, the defaults of options |sapt__sapt_dft_exch_disp_scale_scheme| and |sapt__sapt_dft_exch_disp_fixed_scale|; have been changed. Before, the former defaulted to ``FIXED`` with Hesselmann value of 0.686 for the latter. Now, the former defaults to ``DISP`` and should you instead select ``FIXED``, the default for the latter is the Xie value of 0.770. This might cause; an older version of |PSIfour| to produce a different value of; exchange-dispersion energy from the latest version. Basic Keywords for SAPT(DFT) ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_dft_grac_shift_a.rst; .. include:: autodir_options_c/sapt__sapt_dft_grac_shift_b.rst; .. include:: autodir_options_c/sapt__sapt_dft_do_dhf.rst; .. include:: autodir_options_c/sapt__sapt_dft_exch_disp_scale_scheme.rst. Advanced Keywords for SAPT(DFT); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_dft_functional.rst; .. include:: autodir_options_c/sapt__sapt_dft_do_hybrid.rst; .. include:: autodir_options_c/sapt__sapt_dft_exch_disp_fixed_scale.rst; .. include:: autodir_options_c/sapt__sapt_dft_mp2_disp_alg.rst; .. include:: autodir_options_c/sapt__sapt_quiet.rst. .. index:: SAPT; higher-order. Higher-Order SAPT; ^^^^^^^^^^^^^^^^^. For smaller systems (up to the size of a nucleic acid base pair), more; accurate interaction energies can be obtained through higher-order SAPT; computations. The S",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:25062,energy,energy,25062,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"\lambda_3)$}` | SIMULTANEOUS, QC | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-06 | SIMULTANEOUS, QC, TWOSTEP | Y | Y | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-12 | SIMULTANEOUS, QC, TWOSTEP | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+. Note that for ODC-06 and ODC-12 |scf__reference| ``RHF`` is only available for; |dct__algorithm| ``SIMULTANEOUS``. To compute :math:`(\lambda_3)` correction,; the |dct__three_particle| option needs to be set to PERTURBATIVE. .. _`sec:dctmininput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for the DCT single-point computation looks like this::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; energy('dct'). The ``energy('dct')`` call to :py:func:`~psi4.driver.energy` executes the DCT; module, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:16452,energy,energy,16452,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"\langle 0| \{\hat{\Lambda}_{2}^{(2)} \ \big(\hat{f}_{N}^{\kappa} \hat{T}_{2}^{(1)} ; \ + \ \hat{W}_{N}^{\kappa} \big)_{c}\}_{c} | 0 \rangle ; ; * OLCCD. .. math::; \widetilde{E}({\bf \kappa}) &= \langle 0| \hat{H}^{\kappa} | 0 \rangle ; \ + \ \langle 0| \big(\hat{W}_{N}^{\kappa}\hat{T}_{2}\big)_{c} | 0 \rangle \\; &+ \langle 0| \{\hat{\Lambda}_{2} \ \big(\hat{W}_{N}^{\kappa} \ + \ \hat{H}_{N}^{\kappa}\hat{T}_{2} \big)_{c}\}_{c} | 0 \rangle. where subscript c means only connected diagrams are allowed, and ; :math:`\hat{H}^{\kappa}`, :math:`\hat{f}_{N}^{\kappa}`, and :math:`\hat{W}_{N}^{\kappa}` defined as. .. math::; \hat{H}^{\kappa} &= e^{-\hat{K}} \hat{H} e^{\hat{K}} \\; \hat{f}_{N}^{\kappa} &= e^{-\hat{K}} \hat{f}_{N}^{d} e^{\hat{K}} \\; \hat{W}_{N}^{\kappa} &= e^{-\hat{K}} \hat{W}_{N} e^{\hat{K}} . where :math:`\hat{f}_{N}`, and :math:`\hat{W}_{N}` are the one- and two-electron components of normal-ordered Hamiltonian. Then, ; first and second derivatives of the energy with respect to the :math:`{\bf \kappa}` parameter at :math:`{\bf \kappa} = 0`. .. math::; w_{pq} = \frac{\partial \widetilde{E}}{\partial \kappa_{pq}} . .. math::; A_{pq,rs} = \frac{\partial^2 \widetilde{E}}{\partial \kappa_{pq} \partial \kappa_{rs}} . Then the energy can be expanded up to second-order as follows. .. math::; \widetilde{E}^{(2)}({\bf \kappa}) = \widetilde{E}^{(0)} + {\bf \kappa^{\dagger} w} + \frac{1}{2}~{\bf \kappa^{\dagger} A \kappa}. where :math:`{\bf w}` is the MO gradient vector, :math:`{\bf \kappa}` is the MO rotation vector,; and :math:`{\bf A}` is the MO Hessian matrix. Therefore, minimizing the energy with respect to :math:`{\bf \kappa}`; yields. .. math::; {\bf \kappa} = -{\bf A^{-1}w}. This final equation corresponds to the usual Newton-Raphson step. * OREMP. The REMP hybrid perturbation theory is a constrained mixture of the |MollerPlesset| perturbation theory and the; Retaining the Excitation degree perturbation theory([Fink:2006:RE]_, [Behnle:2019:REMP]_).; The mixing ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:9105,energy,energy,9105,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['energy'],['energy']
Energy Efficiency,"\vec x_2) & \psi_2(\vec x_2) & \ldots & \psi_N (\vec x_2) \\; \vdots & \vdots & \ddots & \vdots \\; \psi_1 (\vec x_N) & \psi_2(\vec x_N) & \ldots & \psi_N (\vec x_N) \\; \end{array}\right |. This form for the Hartree--Fock wavefunction is actually entirely equivalent to; treating the electron correlation as a mean field repulsion in; :math:`\mathbb{R}^6` instead of a more complicated effect in; :math:`\mathbb{R}^N`\ . Considering the electronic Hamiltonian,. .. math:: \hat H = \sum_{i} -\frac{1}{2} \nabla_i^2 + \sum_{i} \sum_{A} -; \frac{Z_A}{r_{iA}} + \sum_{i>j} \frac{1}{r_{ij}},. the Hartree--Fock energy is, by Slater's rules,. .. math:: E_{\mathrm{HF}} =; \langle \Psi_0 | \hat H | \Psi_0 \rangle; = \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] - [ij|ji]. .. math:: =; D_{\mu\nu}^\alpha \left(H_{\mu\nu} + F_{\mu\nu}^{\alpha} \right); + D_{\mu\nu}^\beta \left(H_{\mu\nu} + F_{\mu\nu}^{\beta} \right). Here :math:`H` is the AO-basis one-electron potential, encapsulating both; electron-nuclear attraction and kinetic energy,. .. math:: H_{\mu\nu} =; \left(\mu \left| -\frac{1}{2} \nabla^2 + \sum_{A} -\frac{Z_A}{r_{1A}} \right; | \nu \right),. :math:`D` is the AO-basis density matrix, build from the occupied orbital; coefficients,. .. math:: D_{\mu\nu}^{\alpha} =; C_{\mu i}^{\alpha} C_{\nu i}^{\alpha},. and :math:`F` is the Fock matrix, which is the effective one-body potential at; the current value of the density,. .. math:: F_{\mu\nu}^{\alpha} = H_{\mu\nu}; + \underbrace{\left(D_{\lambda\sigma}^{\alpha} + D_{\lambda\sigma}^{\beta}\right); (\mu\nu|\lambda\sigma)}_{J}; + \underbrace{D_{\lambda\sigma}^{\alpha} (\mu\lambda|\sigma\nu)}_{K^{\alpha}}. Here the tensor :math:`(\mu\nu|\lambda\sigma)` is an AO Electron-Repulsion; Integral (ERI) in chemists' notation,. .. math:: (\mu\nu|\lambda\sigma) = \iint_{\mathbb{R}^6}; \phi_{\mu} (\vec r_1); \phi_{\nu} (\vec r_1); \frac{1}{r_{12}}; \phi_{\lambda} (\vec r_2); \phi_{\sigma} (\vec r_2); \ \mathrm{d}^3 r_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:7005,energy,energy,7005,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3] for atom n, computed using the MBIS charge; partitioning scheme. Free atom densities are computed at the same; level of theory as the parent MBIS calculation, with UHF turned on; as needed. .. psivar:: MBIS RADIAL MOMENTS <R^3>. Per-atom expectation value of r^3 [a0^3], equivalent to the volume; of the MBIS-partitioned density. .. psivar:: MBIS VALENCE WIDTHS. Per-atom density width [a0] of the associated valence charge computed; from an MBIS partitioned density. Equivalent to the inverse of the; linear decay rate of the atomic density. .. psivar:: MBIS VOLUME RATIOS. Per-atom ratio between the atomic volume (<R^3>) and the free-atomic; volume, unitless. .. psivar:: MCSCF TOTAL ENERGY. Multiconfigurational self-consistent-field energy [E_h] in the course of; a configuration interaction computation. May be single-root or state-averaged. .. psivar:: mtd DIPOLE. Dipole array [e a0] for the named method, (3,). .. psivar:: mtd QUADRUPOLE. Redundant quadrupole array [e a0^2] for the named method, (3, 3). .. psivar:: mtd OCTUPOLE. Redundant octupole array [e a0^3] for the named method, (3, 3, 3). .. psivar:: mtd HEXADECAPOLE. Redundant hexadecapole array [e a0^4] for the named method, (3, 3, 3, 3). .. psivar:: mtd 32-POLE. Redundant 32-pole array [e a0^5] for the named method, (3, 3, 3, 3, 3). .. psivar:: mtd 64-POLE. Redundant 64-pole array [e a0^6] for the named method, (3, 3, 3, 3, 3, 3). .. psivar:: mtd 128-POLE. Redundant 128-pole array [e a0^7] for the named method, (3, 3, 3, 3, 3, 3, 3). .. psivar:: MP2 TOTAL ENERGY; MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2 level of theory. .. psivar:: MP2 TOTAL GRADIENT; The total electronic gradient [E_h/a0] of the MP2 ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:38810,energy,energy,38810,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"^^^^^^^^^^^^^^^^^^^^^^. SAPT computations with midbonds can be accomplished by adding a third ghost; monomer to the computation. For example ::. molecule dimer {; 0 1; He 0 0 5; --; 0 1; He 0 0 -5; --; 0 1; @He 0 0 0; }. Here the functions of the third monomer will be added to the virtual space of; the entire computation. Note that an error will be thrown if each atom in the; third monomer is not a ghost to prevent confusion with three-body SAPT which is; not currently supported by Psi4. Interpreting SAPT Results; ^^^^^^^^^^^^^^^^^^^^^^^^^. We will examine the results of a SAPT2+3/aug-cc-pVDZ computation on the; water dimer. This computation can be performed with the following ; input::. molecule water_dimer {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561; units angstrom; }; ; set globals {; basis aug-cc-pvdz; guess sad; scf_type df; }; ; set sapt {; print 1; nat_orbs_t2 true; freeze_core true; }; ; energy('sapt2+3'). To reiterate some of the options mentioned above: the; |sapt__nat_orbs_t2| option will compute MP2 natural orbitals and use; them in the evaluation of the triples correction to dispersion, and the; |sapt__freeze_core| option will freeze the core throughout the SAPT; computation. This SAPT2+3/aug-cc-pVDZ computation produces the following; results::. SAPT Results; --------------------------------------------------------------------------------------------------------; Electrostatics -13.06509118 [mEh] -8.19846883 [kcal/mol] -34.30239689 [kJ/mol]; Elst10,r -13.37542977 [mEh] -8.39320925 [kcal/mol] -35.11719087 [kJ/mol]; Elst12,r 0.04490350 [mEh] 0.02817737 [kcal/mol] 0.11789413 [kJ/mol]; Elst13,r 0.26543510 [mEh] 0.16656305 [kcal/mol] 0.69689985 [kJ/mol]. Exchange 13.41768202 [mEh] 8.41972294 [kcal/mol] 35.22812415 [kJ/mol]; Exch10 11.21822294 [mEh] 7.03954147 [kcal/mol] 29.45344432 [kJ/mol]; Exch10(S^",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:33531,energy,energy,33531,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"^{(2)} = ; - \frac{(ia|jb)(ia|jb)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. and . .. math:: E_{\mathrm{MBPT,SS}}^{(2)} = ; - \frac{[(ia|jb)-(ib|ja)](ia|jb)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. .. math:: E_{\mathrm{MBPT,OS}}^{(2)} = ; - \frac{(ia^\alpha|jb^\beta)(ia^\alpha|jb^\beta)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. and . .. math:: E_{\mathrm{MBPT,SS}}^{(2)} = ; - \frac{1}{2}\frac{[(ia^\alpha|jb^\alpha)-(ib^\alpha|ja^\alpha)](ia^\alpha|jb^\alpha)}; {\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}; - \frac{1}{2}\frac{[(ia^\beta|jb^\beta)-(ib^\beta|ja^\beta)](ia^\beta|jb^\beta)}; {\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. Recommendations; ---------------. All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix :ref:`apdx:dfmp2`). Some basic recommendations are included below:. * DFMP2 should be run with the :math:`ov`-type RI or MP2FIT auxiliary; basis sets, *not* the -JKFIT basis sets. The automatic basis selector; should work fine for most all bases (exceptions are less common elements; at higher than quadruple-zeta). Generally, it is always better to specify; only the orbital basis set and let the auxiliary bases be chosen; automatically. If you want to specify manually, use the; |dfmp2__df_basis_mp2| keyword. * DFMP2 likes memory. At a minimum, :math:`2Q^2` doubles are required,; where :math:`Q` is the size of the auxiliary basis set. However, there is; one disk transpose of the :math:`(Q|ov)` tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:8576,energy,energy,8576,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,2,['energy'],['energy']
Energy Efficiency,"_0\rangle = 0. \\. QCISD is slightly cheaper that CCSD computationally, but it retains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7073,energy,energy,7073,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6663,energy,energy,6663,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30533,charge,charge,30533,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charge']
Energy Efficiency,_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initia,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:46943,energy,energy,46943,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48286,energy,energy,48286,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration inte,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:47943,energy,energy,47943,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"_triplets.rst; .. include:: autodir_options_c/scf__tdscf_tda.rst; .. include:: autodir_options_c/scf__tdscf_r_convergence.rst; .. include:: autodir_options_c/scf__tdscf_maxiter.rst; .. include:: autodir_options_c/scf__tdscf_guess.rst; .. include:: autodir_options_c/scf__tdscf_print.rst; .. include:: autodir_options_c/scf__tdscf_coeff_cutoff.rst; .. include:: autodir_options_c/scf__tdscf_tdm_print.rst. PsiAPI usage; ~~~~~~~~~~~~. The TDSCF functionality is also accessible from PsiAPI. The example calculation shown above can be carried out as follows:. .. code-block:: python. import psi4. from psi4.driver.procrouting.response.scf_response import tdscf_excitations. psi4.core.set_output_file(""h2o2.out""). h2o2 = psi4.geometry(""""""0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; """""", name=""H2O2""). psi4.set_options({; 'save_jk': True,; }). e, wfn = psi4.energy(""HF/cc-pvdz"", return_wfn=True, molecule=h2o2); res = tdscf_excitations(wfn, states=10). Plotting one-photon absorption and electronic circular dichroism spectra; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Excitation energies and corresponding spectroscopic observables can be used to; produce spectra for one-photon absorption (OPA) and electronic circular; dichroism (ECD) with phenomenological line broadening. |PSIfour| provides the ``spectrum`` function for this purpose implementing the; recommendations of Rizzo *et al.* [Rizzo2011-to]_.; This function will *not* plot the spectrum, but rather return a pair of NumPy; arrays containing the :math:`x` and :math:`y` values resulting from the; convolution with broadening of the computed spectroscopic observables. .. code-block:: python. import numpy as np. import psi4. from psi4.driver.procrouting.response.scf_response import tdscf_excitations; from psi4.driver.p4util import spectrum. psi4.core.set_output_file(""moxy.out""). moxy = psi4.geometry(""""""0 1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:10827,energy,energy,10827,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:231258,energy,energy,231258,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:234663,energy,energy,234663,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:244192,energy,energy,244192,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:247237,energy,energy,247237,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:338983,energy,energy,338983,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:361129,energy,energy,361129,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:368848,energy,energy,368848,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:441325,energy,energy,441325,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:448368,energy,energy,448368,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:498274,energy,energy,498274,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:500851,energy,energy,500851,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'refe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:1495,energy,energy,1495,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'refe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:4105,energy,energy,4105,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84022,energy,energy,84022,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:336578,energy,energy,336578,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:343583,energy,energy,343583,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:420380,energy,energy,420380,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:490048,energy,energy,490048,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:495358,energy,energy,495358,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:231987,energy,energy,231987,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:235392,energy,energy,235392,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:244921,energy,energy,244921,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:247966,energy,energy,247966,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:365530,energy,energy,365530,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:365708,energy,energy,365708,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:232160,energy,energy,232160,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:235565,energy,energy,235565,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:245094,energy,energy,245094,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:248139,energy,energy,248139,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:176323,energy,energy,176323,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:178671,energy,energy,178671,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:362205,energy,energy,362205,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:366243,energy,energy,366243,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:369924,energy,energy,369924,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:243478,energy,energy,243478,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:200611,energy,energy,200611,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:181178,energy,energy,181178,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"_{\mu i}` contains the MO coefficients, which are the; constrained variational parameters in Hartree--Fock. The molecular orbitals are; used to build the simplest possible antisymmetric wavefunction, a single Slater; determinant,. .. math:: | \Psi_0 \rangle =; \frac{1}{\sqrt{N!}} \left | \begin{array}{cccc}; \psi_1 (\vec x_1) & \psi_2(\vec x_1) & \ldots & \psi_N (\vec x_1) \\; \psi_1 (\vec x_2) & \psi_2(\vec x_2) & \ldots & \psi_N (\vec x_2) \\; \vdots & \vdots & \ddots & \vdots \\; \psi_1 (\vec x_N) & \psi_2(\vec x_N) & \ldots & \psi_N (\vec x_N) \\; \end{array}\right |. This form for the Hartree--Fock wavefunction is actually entirely equivalent to; treating the electron correlation as a mean field repulsion in; :math:`\mathbb{R}^6` instead of a more complicated effect in; :math:`\mathbb{R}^N`\ . Considering the electronic Hamiltonian,. .. math:: \hat H = \sum_{i} -\frac{1}{2} \nabla_i^2 + \sum_{i} \sum_{A} -; \frac{Z_A}{r_{iA}} + \sum_{i>j} \frac{1}{r_{ij}},. the Hartree--Fock energy is, by Slater's rules,. .. math:: E_{\mathrm{HF}} =; \langle \Psi_0 | \hat H | \Psi_0 \rangle; = \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] - [ij|ji]. .. math:: =; D_{\mu\nu}^\alpha \left(H_{\mu\nu} + F_{\mu\nu}^{\alpha} \right); + D_{\mu\nu}^\beta \left(H_{\mu\nu} + F_{\mu\nu}^{\beta} \right). Here :math:`H` is the AO-basis one-electron potential, encapsulating both; electron-nuclear attraction and kinetic energy,. .. math:: H_{\mu\nu} =; \left(\mu \left| -\frac{1}{2} \nabla^2 + \sum_{A} -\frac{Z_A}{r_{1A}} \right; | \nu \right),. :math:`D` is the AO-basis density matrix, build from the occupied orbital; coefficients,. .. math:: D_{\mu\nu}^{\alpha} =; C_{\mu i}^{\alpha} C_{\nu i}^{\alpha},. and :math:`F` is the Fock matrix, which is the effective one-body potential at; the current value of the density,. .. math:: F_{\mu\nu}^{\alpha} = H_{\mu\nu}; + \underbrace{\left(D_{\lambda\sigma}^{\alpha} + D_{\lambda\sigma}^{\beta}\right); (\mu\nu|\lambda\sigma)}_{J}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:6558,energy,energy,6558,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"_{\text{DH}} \\; & = E_{\text{SCF}} + E_{\text{DH}}; \end{align*}. Unless the method is a DFT double-hybrid, this quantity is equal to; :psivar:`SCF TOTAL ENERGY`. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DFT TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the requested DFT method, ({nat}, 3). .. psivar:: DFT DIPOLE GRADIENT. The derivative of the requested DFT method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: DFT TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the requested DFT method, (3 * {nat}, 3 * {nat}). .. psivar:: DFT XC ENERGY. The functional energy contribution [E_h] to the total SCF energy (DFT only).; Quantity :math:`E_{xc}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`. .. psivar:: DFT VV10 ENERGY. The VV10 nonlocal contribution [E_h] to the total SCF energy (DFT only).; Included in :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DISPERSION CORRECTION ENERGY; fctl DISPERSION CORRECTION ENERGY. The dispersion correction [E_h] appended to an underlying functional; when a DFT-D method is requested. Quantity :math:`E_{\text{-D}}`; in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; When dispersion parameters are untweaked for a functional and dispersion; level, labeled QCVariable also defined. .. psivar:: DOUBLE-HYBRID CORRECTION ENERGY. The scaled MP2 correlation energy correction [E_h] appended to an; underlying functional when a DH-DFT method is requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:32699,energy,energy,32699,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"_{elst,resp}^{(12)} + E_{exch}^{(11)} +; E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)} + \; ^{t}\!E_{exch-ind}^{(22)}; :label: SAPT2. .. math:: E_{SAPT2+} = E_{SAPT2} + E_{disp}^{(21)} + E_{disp}^{(22)}; :label: SAPT2p. .. math:: E_{SAPT2+(3)} = E_{SAPT2+} + E_{elst,resp}^{(13)} + E_{disp}^{(30)}; :label: SAPT2pparen3. .. math:: E_{SAPT2+3} = E_{SAPT2+(3)}; + E_{exch-ind}^{(30)} + E_{ind,resp}^{(30)}; + E_{exch-disp}^{(30)} + E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}; - \delta_{HF}^{(2)} + \delta_{HF}^{(3)}; :label: SAPT2p3. For SAPT(DFT), the SAPT expansion is truncated at the same level of SAPT0, but the zeroth-order Hamiltonian is chosen to be :math:`K_A+K_B`, the monomer Kohn-Sham operators, instead of the Fock operators. The dispersion term needs to be computed with orbital relaxation for the result to be reasonable, and this is possible by computing dispersion energy through coupled frequency-dependent density susceptibility (FDDS). The exchange-dispersion term is estimated by scaling the uncoupled exchange-dispersion energy. . .. math:: E_{SAPT(DFT)} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; E_{exch-ind,resp}^{(20)} + E_{disp,resp}^{(20)} + E_{exch-disp,resp}^{(20)}(est.) + \delta_{HF}^{(2)}; :label: SAPTDFT; .. math:: E_{disp,resp}^{(20)} = -\frac{1}{2\pi}\int_0^\infty d\omega \int d\mathbf{r}_A d\mathbf{r}'_A d\mathbf{r}_B d\mathbf{r}'_B \frac{1}{\left|\mathbf{r}_A-\mathbf{r}_B\right|}\frac{1}{\left|\mathbf{r}'_A-\mathbf{r}'_B\right|}\chi^A_{coup}\left(\mathbf{r}_A,\mathbf{r}'_A|i\omega\right)\chi^B_{coup}\left(\mathbf{r}_B,\mathbf{r}'_B|i\omega\right). .. math:: \chi_{coup}\left(\mathbf{r},\mathbf{r}'|\omega\right) = \chi_0\left(\mathbf{r},\mathbf{r}'|\omega\right) + \int d\omega d\mathbf{r}_1 d\mathbf{r}_2 \chi_0\left(\mathbf{r},\mathbf{r}_1|\omega\right)\left[\frac{1}{r_{12}} + f_{xc}\left(\mathbf{r}_1,\mathbf{r}_2,\omega\right)\right]\chi\left(\mathbf{r}_2,\mathbf{r}'|\omega\right). The :math:`\delta_{HF}^{(2)}` and :math:`\delta_{HF}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:7238,energy,energy,7238,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"`, there is; no workaround; on-the-fly construction of an auxiliary basis through; Cholesky decomposition (not implemented) is the long-term solution. .. _`sec:sfsapt`:. Spin-Flip SAPT; ^^^^^^^^^^^^^^. SAPT0 with two open-shell references will always yield a high-spin complex. In; order to obtain a SAPT-based estimate of the splittings between different spin; states of a complex the first-order exchange energies for all multiplets can be; shown to be a linear combination of two matrix elements: a diagonal exchange; term that determines the spin-averaged effect and a spin-flip term responsible; for the splittings between the states. The numerical factors in this linear; combination are determined solely by the Clebsch-Gordan coefficients:; accordingly, the :math:`S^{2}` approximation implies a Heisenberg Hamiltonian; picture with a single coupling strength parameter determining all the; splittings. This method can be invoked with `energy(""SF-SAPT"")` and; publications resulting from the use of the SF-SAPT code should cite the; following publications: [Patkowski:2018:164110]_. .. _`sec:saptinf`:. Higher-Order Exchange Terms without Single-Exchange Approximation; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Recently, several SAPT higher-order exchange terms have been derived without; the :math:`S^{2}` approximation: :math:`E_{exch-ind}^{(20)}` [Schaffer:2012:1235]_, ; :math:`E_{exch-disp}^{(20)}` [Schaffer:2013:2570]_, and :math:`E_{exch-ind}^{(30)}` ; [Waldrop:2021:024103]_. The second-order terms can be computed with the following; settings::. set SAPT_DFT_FUNCTIONAL HF; set DO_IND_EXCH_SINF true # calculate Exch-Ind20 (S^inf) ; set SAPT_DFT_MP2_DISP_ALG fisapt ; set DO_DISP_EXCH_SINF true # calculate Exch-Disp20 (S^inf); energy('sapt(dft)'); ; and the third-order exchange-induction term is computed as follows::. set DO_IND30_EXCH_SINF true # calculate Exch-Ind30 (S^inf) ; energy('sapt2+3'); ; These calculations are performed with the atomic orbi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:44125,energy,energy,44125,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"`_). * ""Orbital-Optimized Second-Order Perturbation Theory with Density-Fitting; and Cholesky Decomposition Approximations: An Efficient Implementation,""; U. Bozkaya, *J. Chem. Theory Comput.* **10**, 2371 (2014).; (doi: `10.1021/ct500231c <https://doi.org/10.1021/ct500231c>`_). Orbital-optimized third-order perturbation theory (OMP3). * ""Orbital-Optimized Third-Order |MollerPlesset| Perturbation; Theory and Its Spin-Component and Spin-Opposite Scaled Variants: Application; to Symmetry Breaking Problems,"" U. Bozkaya,; *J. Chem. Phys.* **135**, 224103 (2011).; (doi: `10.1063/1.3665134 <https://doi.org/10.1063/1.3665134>`_). * ""Assessment of Orbital-Optimized Third-Order |MollerPlesset|; Perturbation Theory and Its Spin-Component and Spin-Opposite Scaled Variants; for Thermochemistry and Kinetics,"" E. Soydas and U. Bozkaya,; *J. Chem. Theory Comput.* **9**, 1452 (2013).; (doi: `10.1021/ct301078q <https://doi.org/10.1021/ct301078q>`_). * ""Analytic energy gradients for the orbital-optimized third-order |MollerPlesset|; Perturbation Theory,"" U. Bozkaya,; *J. Chem. Phys.* **139**, 104116 (2013).; (doi: `10.1063/1.4820877 <https://doi.org/10.1063/1.4820877>`_). Orbital-optimized linearized coupled-cluster doubles method (OLCCD). * ""Orbital-optimized coupled-electron pair theory and its analytic gradients:; Accurate equilibrium geometries, harmonic vibrational frequencies, and hydrogen transfer; reactions,"" U. Bozkaya and C. D. Sherrill,; *J. Chem. Phys.* **139**, 054104 (2013).; (doi: `10.1063/1.4816628 <https://doi.org/10.1063/1.4816628>`_). Orbital-optimized MP2.5 (OMP2.5). * ""Orbital-optimized MP2.5 and its analytic gradients: Approaching CCSD(T); quality for noncovalent interactions,"" U. Bozkaya and C. D. Sherrill,; *J. Chem. Phys.* **141**, 204105 (2014).; (doi: `10.1063/1.4902226 <https://doi.org/10.1063/1.4902226>`_). Extended Koopmans' Theorem. * ""The extended Koopmans' theorem for orbital-optimized methods: Accurate; computation of ionization potentials,"" U. Bozkay",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:21585,energy,energy,21585,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['energy'],['energy']
Energy Efficiency,"`` change; the dispersion; term does not change. The SAPT0 and sSAPT0 terms accessed as; subsidiary calculations of higher-order SAPT do not change; that is,; the :ref:`SAPT module<sec:sapt>` breaks the consistency of its SAPT0; results. The reasoning and reward behind this change is that the JKFIT; basis better describes the physics (see :ref:`fitting changes <sec:saptfitB>` ) and the; default SAPT0 results from the :ref:`SAPT module<sec:sapt>` are now; consistent with those from the :ref:`FISAPT module<sec:fisapt>` and; the sapt(dft) module. See :srcsample:`sapt-compare` for an example.; To reproduce former behavior, set |sapt__df_basis_elst| to the; orbital basis set's RI auxiliary basis. Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: *i.e.*,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the ; Hamiltonian of the dimer is partitioned into contributions from each ; monomer and the interaction. .. math:: H=F_A+W_A+F_B+W_B+V. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, :math:`F`, the fluctuation potential of each monomer, :math:`W`, and the; interaction potential, :math:`V`. The monomer Fock operators, :math:`F_A+F_B`, are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of :math:`V`, :math:`W_A`, and :math:`W_B`. ; Through first-order in :math:`V`, electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in :math:`V`. For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887]_. Several truncations of the clos",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:4656,energy,energy,4656,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4998,energy,energy,4998,doc/sphinxman/source/attic/detcas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst,1,['energy'],['energy']
Energy Efficiency,"`restart_file`` option,; where the actual file is a serialized ``wfn`` object (see :ref:`saving the wfn <sec:save_wfn>`); By default, the orbital data file of the converged SCF(``psi.PID.name.180.npy``) is deleted; after |PSIfour| exits or the ``clean()`` function is called. The orbital guess is automatically; set to ``READ`` when ``restart_file`` is given a ``wfn`` file.; To write the orbitals after every iteration and keep the orbitals from the last iteration, the ``write_orbitals`` options is available: ::. energy('scf', write_orbitals='my_mos'),. which writes a ``Wavefunction`` object converted (serialized) to a numpy file called ``my_mos.npy``.; The restart can then be done as follows: ::. energy('scf', restart_file='my_mos'). Specifying the ``.npy`` suffix when writing and reading restart files is optional. Alternatively, the restart can also be done from any previously saved ``wfn`` object. ::. energy, scf_wfn = energy('scf',return_wfn=True); scf_wfn.to_file('my_wfn'); energy('scf', restart_file='my_wfn'). For advanced users manipulating or writing custom wavefunction files, note; that |PSIfour| expects the numpy file on disk to have the ``.npy`` extension, not, e.g., `.npz`. .. index:: DIIS, MOM, damping. .. _`sec:scfconv`:. Convergence Stabilization; ~~~~~~~~~~~~~~~~~~~~~~~~~. A summary of Psi's supported convergence stabilization techniques is presented below:. DIIS [On by Default]; DIIS uses previous iterates of the Fock matrix together; with an error criterion based on the orbital gradient to produce an informed; estimate of the next Fock Matrix. DIIS is almost always necessary to converge; the SCF procedure and is therefore turned on by default. In rare cases, the; DIIS algorithm may need to be modified or turned off altogether, which may be; accomplished via :term:`options <DIIS (SCF)>`.; ADIIS [On by Default]; ADIIS uses previous iterates of the Fock and density matrices to produce an; informed estimate of the next Fock matrix. ADIIS estimates are bas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:23665,energy,energy,23665,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"a functional and dispersion; level, labeled QCVariable also defined. .. psivar:: DOUBLE-HYBRID CORRECTION ENERGY. The scaled MP2 correlation energy correction [E_h] appended to an; underlying functional when a DH-DFT method is requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy compon",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:34087,energy,energy,34087,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; :math:`S^2` metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16747,energy,energy,16747,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need; to call the monomer and dimer computations separately. The built-in; Psithon function :py:func:`~psi4.driver.driver_nbody.nbody` does it all for us, automatically. Near the very end of the output file, the counterpoise correction Python; function will print a nice summary of the results of the counterpoise; computation (the energies of the dimer, of monomer 1 with the ghost functions; of monomer 2, of monomer 2 with the ghost functions of monomer 1, and the; overall counterpoise-corrected interaction energy)::. N-Body: Computing complex (1/2) with fragments (2,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (2,), basis = (1, 2): -128.70932405488924); ...; N-Body: Computing complex (2/2) with fragments (1,) in the basis of fragments (1, 2).; ...; N-Body: Complex Energy (fragments = (1,), basis = (1, 2): ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:21040,energy,energy,21040,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,2,['energy'],['energy']
Energy Efficiency,"a-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bcc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49081,energy,energy,49081,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9841,energy,energy,9841,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"aHCC2 3 dHCCC2; H 7 rCH3 2 aHCC3 3 dHCCC3; H 0.221781602033 1.772570540211 0.286988509018; H -1.833601608592 0.108401996052 1.481873213172; H -1.925572581453 1.640882152784 0.986471814808; ; aCCC = 108.0; rCC = 1.4; dCCCN = 120; rCH1 = 1.08; rCH2 = 1.08; rCH3 = 1.08; aHCC1 = 109.0; aHCC2 = 109.0; aHCC3 = 109.0; dHCCC1 = 0.0; dHCCC2 = 120.0; dHCCC3 = 240.0; }. Here, we remove the hydrogen from the alpha carbon of glycine and replace it; with a methyl group. Applying this patch using Cartesian coordinates is; difficult, because it depends on the orientation of the existing glycine unit.; In this example, we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. .. index:: molecule; multiple in input file; .. _`sec:multipleMolecules`:. .. index::; triple: setting; keywords; molecule; pair: molecule; charge; pair: molecule; multiplicity; pair: molecule; symmetry; pair: molecule; no_reorient; pair: molecule; units; .. _`sec:moleculeKeywords`:. Molecule Keywords; =================. In addition to specifying the geometry, additional information can be; provided in the molecule block :samp:`molecule {optional_molecule_name} \\{...\\}`. **Charge & Multiplicity**; If two integers :samp:`{charge} {multiplicity}` are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (:math:`2 M_s + 1`), respectively. If not specified, the; charge is taken to be zero, and the multiplicity will be taken to be the; lowest multiplicity consistent with that charge. For multi-fragment ; complexes, each fragment can have a :samp:`{charge} {multiplicity}` line.; See :ref:`sec:fragments` for details. **Units**; By default, |Angstrom| units are used; this is changed by adding; a line that reads :samp:`units {spec}`, where :samp:`{spec}` is one; of ``ang``, ``angstrom``, ``a.u.``, ``",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:4260,charge,charge,4260,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charge']
Energy Efficiency,"a_3)` correction can be; requested by setting the |dct__three_particle| option to PERTURBATIVE. A; combination of the ODC-13 functional with the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals (|scf__reference| ``UHF``), which can be used to perform energy and; gradient computations for both closed- and open-shell molecules. In addition,; the ODC-06 and ODC-12 methods support restricted reference orbitals; (|scf__reference| ``RHF``) for the energy and gradient computations of; closed-shell molecules. Note that in this case restricted reference orbitals; are only available for |dct__algorithm| ``SIMULTANEOUS``. .. _`sec:dctalgorithms`:. Iterative Algorithms; ~~~~~~~~~~~~~~~~~~~~. As explained in the :ref:`Theory <sec:dcttheory>` section, in order to obtain the DCT energy one; needs to solve a system of coupled equations for orbitals and density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; |dct__algorithm| option. SIMULTANEOUS [Default]; In the simultaneous algorithm the DCT equations are solved in macroiterations.; Each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and orbitals is achieved.; Convergence of the simultaneous algorithm is accelerated using the; DIIS extrapolation technique. TWOSTEP; In the two-step algorithm each macroiteration consists of two sets of; microiterations. In the first set, the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converge",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:9285,energy,energy,9285,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"aaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'refer",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43581,energy,energy,43581,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"aaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158210,energy,energy,158210,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"aaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163546,energy,energy,163546,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42209,energy,energy,42209,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47707,energy,energy,47707,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"able as conda packages. * develop |PSIfour| through plugins without a pre-existing development environment, see :ref:`sec:condaplugins`. The |PSIfour| binary repository is at `Anaconda (formerly Binstar) <https://anaconda.org/psi4>`_. For commands to get a default installation, go to :ref:`sec:psi4conda`; or the :psicode:`psicode downloads page <installs/latest/>` .; Users proficient with conda may prefer to consult :ref:`sec:condadetails`.; For more flexibility and a detailed explanation, go to; :ref:`sec:slowconda` and :ref:`sec:slowpsi4`. .. _`faq:psicodedownload`:. How to install a Psi4 binary with the Psi4conda installer, download site; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. `Download one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *do* make the adjustments to; :envvar:`PATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (green and yellow good; red bad). Done. Explicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour| on Linux,; Mac, Windows (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:3807,green,green,3807,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['green'],['green']
Energy Efficiency,"able error generated. ::. def select_mp3(name, **kwargs):; """"""Function selecting the algorithm for a MP3 energy call; and directing to specified or best-performance default modules. """"""; reference = psi4.get_option('SCF', 'REFERENCE'); mtd_type = psi4.get_global_option('MP_TYPE'); module = psi4.get_global_option('QC_MODULE'); # Considering only [df]occ/fnocc/detci. func = None; if reference == 'RHF':; if mtd_type == 'CONV':; if module == 'DETCI':; func = run_detci; elif module == 'FNOCC':; func = run_fnocc; elif module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'UHF':; if mtd_type == 'CONV':; if module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'ROHF':; if mtd_type == 'CONV':; if module in ['DETCI']:; func = run_detci. if func is None:; raise ManagedMethodError(['select_mp3', name, 'MP_TYPE', mtd_type, reference, module]). return func(name, **kwargs). Naturally, in the run function, you must either use the type keyword for; type switching or translate it into whatever ``DO_CD``-like keywords your; module uses. At run time with a closed-shell molecule, ::. energy('mp3'). will run OCC, while ::. set qc_module fnocc; energy('mp3'). will run FNOCC mp3. A special case is DETCI that *can* run mp3, but oughtn't to be used for such. So above, ROHF CONV mp3 has no default, but can still access the detci code with ::. set reference rohf; set qc_module detci; energy('mp3'). While the below gives an error ::. set reference rohf; energy('mp3'). Again, whenever a single method name needs to call multiple proc.py run; functions, it should be managed. In :ref:`table:managedmethods` ""Y"" means method available in; module, ""D"" means module is default for that method, """" mean method not; available. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:8766,energy,energy,8766,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,4,['energy'],['energy']
Energy Efficiency,"able('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency()",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:11080,energy,energy,11080,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"above requirements met, provided the libint2; # was built with cmake+cmake, not libtool+cmake.; # * Provided you know what you're doing wrt the above options and know what subset of Psi4 calculations you're targeting; # (e.g., no Hessians or non-df only) and recognize that DF is everywhere (e.g., SAD guess and DF_SCF_GUESS) and may; # need further suppression, it's fine to reduce or eliminate the `find_package` components.; # * ~Psi4 can run a libtool+cmake, but one needs to disable the `find_package` components check and correct for some; # Libint2 vs. libint2 spelling differences. See ""CHOOSE!"" toggles here and in <psi4>/psi4/CMakeLists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calculations to not be limited by cheap integrals, need WITH_MAX_AM_ERI2 >= WITH_MAX_AM_ERI3; # * In order for DF fallback fitting to work with def2-universal on all elements, need WITH_ERI3_MAX_AM >=4 for energies; # * Since non-DF calculations often use DF guess or preiterations and DF calculations use 4-center integrals for sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * The combination WITH_MAX_AM_ERI=""5;4;3"" and WITH_MAX_AM_ERI3=""6;5;4"" permits any 5Z energy, QZ gradient, and TZ Hessian and is sufficient for the full test suite.; # * Psi4 doesn't know the limits of the Libint2 library to which it's linked. `libint2::Engine::lmax_exceeded` errors will be thrown from l2; nothing from Psi4.; # * If ever use a libint2 with AM>7, edit the `init_spherical_harmonics` line in libmints/integral.cc; # * In selecting AM values, before `grep`ing lots of basis set files, consult the guide at end of this file.; # [Feb 2023]; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can use L",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:2385,energy,energy,2385,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"acting quasiparticles (the; :math:`S^2` metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of the more notable functionals in |PSIfour|, and links; to the complete listin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16887,energy,energy,16887,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,add_subdirectory(energy); add_subdirectory(curve); add_subdirectory(pubchem); add_subdirectory(mints9); add_subdirectory(mints2); add_subdirectory(cc54); add_subdirectory(3-index-transforms); add_subdirectory(mints13); add_subdirectory(mints14); add_subdirectory(cc-amps); add_subdirectory(databases),MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/python/CMakeLists.txt:17,energy,energy,17,tests/python/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/python/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,add_subdirectory(energy); add_subdirectory(grad); add_subdirectory(psithon2); add_subdirectory(version); add_subdirectory(nbody-cp-gradient); ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/CMakeLists.txt:17,energy,energy,17,tests/dftd3/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,add_subdirectory(energy); add_subdirectory(r2scan); ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd4/CMakeLists.txt:17,energy,energy,17,tests/dftd4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd4/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,add_subdirectory(rohf-orb-rot); add_subdirectory(manual-fd-hess-energy); add_subdirectory(manual-fd-hess-grad); ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cookbook/CMakeLists.txt:64,energy,energy,64,tests/cookbook/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cookbook/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,add_subdirectory(schema-1-energy); add_subdirectory(schema-1-ghost); add_subdirectory(schema-1-orient); add_subdirectory(schema-1-throws); add_subdirectory(schema-1-gradient); add_subdirectory(schema-1-properties); add_subdirectory(schema-1-response); add_subdirectory(schema-1-tamps); ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/json/CMakeLists.txt:26,energy,energy,26,tests/json/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/json/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:75649,energy,energy,75649,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158854,energy,energy,158854,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164190,energy,energy,164190,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"against, like ``fchk``, specify these in the ``CMakeLists.txt`` as shown above. Such tests must be run through ``ctest`` and don't usually work when run ""by hand"" from the objdir via ``stage/bin/psi4 ../tests/directory_name/input.dat``. If a test is multiple minutes long, load-balancing a parallel CTest run requires the test to be started early. Use the ``COST`` line as shown above to set a weighting to about the number of seconds the test takes. ``input.dat``; -------------. The other necessary file is the input file itself, ``input.dat``. The input file should be just a simple input file to run the test, with small additions. ::. #! RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxiliary basis.; #! Also a bit more to force a second line. nucenergy = 8.801466202085710 #TEST; refenergy = -76.05098402733282 #TEST. molecule h2o {; symmetry c1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pVTZ; scf_type df; df_basis_scf cc-pVTZ-RI; e_convergence 10; }. thisenergy = energy(""hf""). compare_values(nucenergy, h2o.nuclear_repulsion_energy(), 9, ""Nuclear repulsion energy"") #TEST; compare_values(refenergy, thisenergy, 9, ""Reference energy"") #TEST; compare_values(refenergy, variable('scf total energy'), 9, ""Reference energy"") #TEST. Of those small modifications, first, note the special comment at the top (starting with the ``#!`` comment marker). This should be descriptive since it is inlined into the manual (unless ``!nosample`` in the comment) as a sample input. Reference values are often assigned to variables for later use.; The compare_values function (along with several relatives in :source:`psi4/driver/p4util/testing.py` for comparing strings, matrices, etc.) checks that the computed values match these reference values to suitable precision. This function prints an error message and signals that the test failed to the make system, if the values don't match. Any lines of the input associated with the validation process should be flagged with ``#TEST`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:8687,energy,energy,8687,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['energy'],['energy']
Energy Efficiency,"agonalization of the Fock matrix can also present a; significant hurdle. .. _`sec:scfinput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a Hartree--Fock computation is a molecule block, basis set; option, and a call to ``energy('scf')``::. molecule {; He; }. set basis sto-3g. energy('scf'). This will run a Restricted Hartree--Fock (RHF) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6; energy and density convergence criteria (since single-point, see; :ref:`SCF Convergence & Algorithm <table:conv_scf>`), a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more; information on any of these options, see the relevant section below. .. _`sec:scfsymm`:. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of Hartree--Fock; theory, including:. Restricted Hartree--Fock (RHF) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Hartree--Fock (UHF); Appropriate for most open-shell systems and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; UHF wavefunctions; need not be eigenfunctions of the :math:`\hat S^2` operator. The deviation of; this operator from its expectation value is printed on the output file. If the; deviation is greater than a few hundredths, it is advisable to switch to a; ROHF to avoid this ""spin-contamination"" problem.; Restricted Open-Shell Hartree--Fock (ROHF); Appropriate for open-shell systems where spin-contamination is problem.; Sometimes more difficult to converge, and assumes uniformly positive spin; polarization (the alpha and beta doubly-occupied orbitals are identical).; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:9706,efficient,efficient,9706,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['efficient'],['efficient']
Energy Efficiency,"al Engines; ..................................... Benchmarking showed that early versions of the old code spent a non-negligible; amount of time performing the Cartesian to spherical harmonic transformation of; the integrals, which is needed for most modern basis sets. To improve; performance, we instead backtransformed the density to the Cartesian; representation (denoted ""CartAO"") and computed / contracted all integrals in; this Cartesian basis, eliminating the need to transform to spherical harmonics; as the integrals are computed. This bottleneck no longer exists, so these; extra transformation steps have been removed as part of the switch to Libint2,; and the affected codes (PCM and CPPE interfaces) now compute the potential and; field integrals in the representation required by the basis set. Also, note that the way external point charges are specified has changed.; Previously, a set of N external point charges would be specified by passing a; matrix with dimensions N rows and 4 columns -- corresponding to charge, x, y, z; -- to the ``set_charge_field()`` member of the potential integral class. The; same information is now passed using the more verbose; ``std::vector<std::pair<double, std::array<double, 3>>>`` type instead, to be; consistent with Libint2's convention. New Operators Available; ....................... Libint2 provides a range of integrals that were previously not available in; |PSIfour|, such as the Erfc attenuated nuclear potential integrals needed for; Ewald methods. If new integrals are added to Libint2 but are not yet; interfaced to |PSIfour|, please open an issue on the |PSIfour| GitHub page to; alert the developers, who will be able to add the appropriate code.; Available integrals classes and parameters currently documented at ; `Libint2 C++11 Interface Wiki <https://github.com/evaleev/libint/wiki/using-modern-CPlusPlus-API#create-an-integral-engine>`_. Shell Pairs; ........... To ensure consistency between one- and two-electron terms whe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:17307,charge,charges,17307,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,2,['charge'],"['charge', 'charges']"
Energy Efficiency,"al. .. psivar:: CCname ROOT n (IN h) TOTAL ENERGY; TD-fctl ROOT n (IN h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* within irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (h) TOTAL ENERGY; TD-fctl ROOT n (h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n*, which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n (h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY - h TRANSITION. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (IN h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n DIPOLE - h TRANSITION. Dipole array [e ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:10912,energy,energy,10912,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"aled portion [E_h] of the named correlation energy; from opposite-spin or singlet doubles correlations. .. psivar:: MRPT TOTAL ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY. Energies [E_h] from correlated multi-reference theories. .. psivar:: MULLIKEN CHARGES. Property of partial atomic charges [e] by the method of Mulliken, (nat,). .. psivar:: NAUX (SCF); NAUX (CC). Convenience storage of number of functions [] in the auxiliary basis; set for named stage of the calculation. .. psivar:: NBODY (i, j, ..., k)@(a, b, ..., c) TOTAL ENERGY. The total energy [E_h] of a component of the requested N-Body energy.; The first parenthetical list over *i*, *j*, ..., *k* enumerates; molecular fragments included in the computation in 1-indexed,; input-file order, while the second enumerates list over *a*, *b*,; ..., *c* enumerates which fragments contribute basis functions to the; computation. For example, ``(1, 2)@(1, 2, 3, 4)`` indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:45393,energy,energy,45393,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"alling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment activate(mA); .. comment set dft_dispersion_parameters [1.0]; .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from Py-side'); .. comment eneyne.update_geometry(); .. comment eneyne.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[0], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D2'); .. comment mA = eneyne.extract_subsets(1); .. comment mA.run_dftd3('b3lyp', 'd2gr', {'s6': 0.75}); .. comment compare_values(ref_pbe_d2[1], get_variable('DISPERSION COR",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:30113,energy,energy,30113,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"als, which are entirely delocalized across; the molecule. Canonical orbitals are commonly used because of mathematical; convenience. Another possible choice is localized orbitals. Any two orbitals; localized to separate regions of a molecule can be treated as non-interacting; to a good approximation. Thus, when working with localized orbitals, the number; of interacting orbital pairs (and triples, quadruples, etc.) scales linearly; with system size. If carefully implemented, programs that exploit this sparsity; can be made to scale linearly (or else with lower order than their canonical; counterparts) at the cost of of modest, controllable errors. This is the; defining insight of DLPNO-MP2 and all related ""local correlation"" methods. The DLPNO-MP2 code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; code, and is intended for use with large systems for which DF-MP2 is intractable.; When running DLPNO-MP2 with default settings, approximately 99.9% of the DF-MP2 ; correlation energy is recovered. The general outline of the method is as follows:. (1) Localize the active occupied MOs (with the Foster-Boys method); (2) Construct projected AOs (PAOs) from the virtual MOs; (3) Calculate three-index integrals in the (sparse) LMO/PAO basis; (4) Perform local density fitting to construct (sparse) exchange integrals; (5) Transform local virtuals from PAOs to pair natural orbitals (PNOs), and truncate; (6) Solve the iterative local MP2 equations in the LMO/PNO basis. An example input file is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; set pno_convergence normal; ; energy('dlpno-mp2'). The main difference between this input and a DF-MP2 input is the ``energy('dlpno-mp2')``; call to :py:func:`~psi4.driver.energy`. The only other addition is the |dlpno__pno_convergence|; keyword, which determines the accuracy of the local approximations underlying ; the DLPNO-MP2 method. Note that ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:2714,energy,energy,2714,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"als. Otherwise, one may use RHF or; ROHF orbitals as input to PSIMRCC. Due to a current limitation in the code,; one must obtain orbitals using PSIMRCC's MCSCF module regardless of what; orbital type is chosen, ``twocon``, ``rhf``, or ``rohf``. An example of the; MCSCF input is given below. PSIMRCC is most commonly used for low-spin cases (singlets or open-shell; singlets). It is capable of performing computations on higher spin states; (*e.g.*, triplets), but in general, not all the required matrix elements have; been coded for high-spin cases, meaning that results will correspond to an; approximate Mk-MRCC computation for high-spin cases. A Simple Example; ________________ . The |psimrcc__corr_wfn| allows you to select one of three methods; Mk-MRPT2 [``PT2``], Mk-MRCCSD [``CCSD``], or Mk-MRCCSD(T) [``CCSD_T``].; The |psimrcc__corr_multp| option allows you to select the Slater; determinants with a particular :math:`M_s` value. The |psimrcc__wfn_sym|; keyword is neccesary if you do not want to compute the energy of the; totally-symmetric state. The |psimrcc__follow_root| option may be used; to follow different roots of the effective Hamiltonian. A value of 1; instructs PSIMRCC to follow the solution with the lowest energy given; a certain set of determinants. ::. molecule o2 {; 0 3; O; O 1 2.265122720724; units au; }; set {; basis cc-pvtz; }; set mcscf {; reference rohf; docc [3,0,0,0,0,2,1,1] # Doubly occupied MOs; socc [0,0,1,1,0,0,0,0] # Singly occupied MOs; }; set psimrcc {; corr_wfn ccsd # Do Mk-MRCCSD ; frozen_docc [1,0,0,0,0,1,0,0] # Frozen MOs; restricted_docc [2,0,0,0,0,1,1,1] # Doubly occupied MOs; active [0,0,1,1,0,0,0,0] # Active MOs; frozen_uocc [0,0,0,0,0,0,0,0] # Frozen virtual MOs; corr_multp 1 # Select the Ms = 0 component; follow_root 1; wfn_sym B1g # Select the B1g state; }; energy('psimrcc'). Note that the oxygen molecule has 16 electrons (including core), while; the ``docc`` array contains only 7 doubly-occupied orbitals (or 14; electrons). Hence",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst:5824,energy,energy,5824,doc/sphinxman/source/psimrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst,1,['energy'],['energy']
Energy Efficiency,"and symmetry adapted; perturbation theory methods. These require the definition of which fragments; are interacting within the complex. |PSIfour| provides a very simple mechanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is neutral and spin-singlet; by inserting another :samp:`{charge} {multiplicity}` line, separated from the first; molecule block by a `--` line. If any information is missing, |PSIfour| will set the; unprovided charges and multiplicities to be consistent with those that are given.; For example, the overall charge must be simply the sum of all fragment charges.; |PSIfour| further assumes that any unpaired electrons are coupled to yield the highest; possible :math:`M_s` value. Psi will also favor neutral, spin-singlet fragments.; For anything complicated, we strongly suggest explicitly providing the charge; and multiplicity of each fragment as well as the total molecular charge and multiplicity. For details and examples, see https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/chgmult.py#L105-L136 . Having defined a molecule containing fragments like ``eneyne`` above, it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:19701,charge,charge,19701,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charge']
Energy Efficiency,"ap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems. For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose ""-D2"" and more modern ""-D3"" approaches are a de facto industry standards. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to ``energy('b3lyp')`` (or other valid functional name)::. molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn--Sham (RKS) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6 energy; and density convergence criteria, a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess (because single atom). For more information on; any of these options, see the relevant section below, or in the preceding; :ref:`Hartree--Fock section <sec:scf>`. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn--Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn--Sham (UKS); Appropriate for most open-shell systems and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; the resultant; wavefunction may not be an eigenfunction of the :math:`\hat S^2` operator.; However, spin contamination is usu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:14669,energy,energy,14669,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"apt0"")`` that; can also compute higher-order SAPT). Electostatics, exchange,; and induction terms for SAPT0 and sSAPT0 accessed through; ``energy(""sapt0"")`` or ``energy(""ssapt0"")`` change; the dispersion; term does not change. The SAPT0 and sSAPT0 terms accessed as; subsidiary calculations of higher-order SAPT do not change; that is,; the :ref:`SAPT module<sec:sapt>` breaks the consistency of its SAPT0; results. The reasoning and reward behind this change is that the JKFIT; basis better describes the physics (see :ref:`fitting changes <sec:saptfitB>` ) and the; default SAPT0 results from the :ref:`SAPT module<sec:sapt>` are now; consistent with those from the :ref:`FISAPT module<sec:fisapt>` and; the sapt(dft) module. See :srcsample:`sapt-compare` for an example.; To reproduce former behavior, set |sapt__df_basis_elst| to the; orbital basis set's RI auxiliary basis. Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: *i.e.*,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the ; Hamiltonian of the dimer is partitioned into contributions from each ; monomer and the interaction. .. math:: H=F_A+W_A+F_B+W_B+V. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, :math:`F`, the fluctuation potential of each monomer, :math:`W`, and the; interaction potential, :math:`V`. The monomer Fock operators, :math:`F_A+F_B`, are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of :math:`V`, :math:`W_A`, and :math:`W_B`. ; Through first-order in :math:`V`, electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in :math:`V`. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:4358,adapt,adapted,4358,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,3,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"arately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:19718,energy,energy,19718,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The ke",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7415,energy,energy,7415,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"artesian $freeze_list. * To freeze only the y coordinates of atoms 2 and 3. .. code-block:: none. freeze_list = """"""; 2 y; 3 y; """"""; set optking frozen_cartesian $freeze_list. * To optimize toward a value of 0.95 Angstroms for the distance between ; atoms 1 and 3, as well as that between 2 and 4. .. code-block:: none. set optking {; ranged_distance = (""; 1 3 0.949 0.95; 2 4 0.949 0.95; ""); }. .. note:: ; The effect of the frozen and ranged keywords is generally independent of; how the geometry of the molecule was input (whether Z-matrix or Cartesian, etc.)..; At this time; however, enforcing Cartesian constraints when using a zmatrix for; molecular input is not supported. Freezing or constraining Cartesian coordinates; requires Cartesian molecule input. If numerical errors results in symmetry ; breaking, while Cartesian constraints are active, symmetrization cannot occur and; an error will be raised, prompting you to restart the job. * To scan the potential energy surface by optimizing at several fixed values; of the dihedral angle of HOOH. .. code-block:: none. molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:7830,energy,energy,7830,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"artesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. .. index:: molecule; multiple in input file; .. _`sec:multipleMolecules`:. .. index::; triple: setting; keywords; molecule; pair: molecule; charge; pair: molecule; multiplicity; pair: molecule; symmetry; pair: molecule; no_reorient; pair: molecule; units; .. _`sec:moleculeKeywords`:. Molecule Keywords; =================. In addition to specifying the geometry, additional information can be; provided in the molecule block :samp:`molecule {optional_molecule_name} \\{...\\}`. **Charge & Multiplicity**; If two integers :samp:`{charge} {multiplicity}` are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (:math:`2 M_s + 1`), respectively. If not specified, the; charge is taken to be zero, and the multiplicity will be taken to be the; lowest multiplicity consistent with that charge. For multi-fragment ; complexes, each fragment can have a :samp:`{charge} {multiplicity}` line.; See :ref:`sec:fragments` for details. **Units**; By default, |Angstrom| units are used; this is changed by adding; a line that reads :samp:`units {spec}`, where :samp:`{spec}` is one; of ``ang``, ``angstrom``, ``a.u.``, ``au``, or ``bohr``. **Orientation**; Certain computations require that the molecule is not reoriented. This ; can be achieved by adding either ``no_reorient`` or ``noreorient``. ; To prevent even recentering of the molecule, add ``no_com`` or ``nocom``. **PubChem**; A line reading :samp:`pubchem:{mol}` fetches the geometry for molecule; :samp:`{mol}` from the PubChem database, where :samp:`{mol}` is either; the IUPAC molecule name or the CID number. See :ref:`sec:pubchem` for; details. **Symmetry**; The symmetry can be specified by a line reading :samp:`symmetry; {symbol}`, where :samp:`{symbol}` is the Sch\ |o_dots|\ nflies symbol; of the (Abelian) point group to use for the computation, one of one of; ``c1``, ``c2``, `",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:5034,charge,charge,5034,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charge']
Energy Efficiency,"asis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted :math:`(Q|ov)` integrals and then builds the; full :math:`(ov|ov)` tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like::. -----------------------------------------------------------; ==================> DF-MP2 Energies <====================; -----------------------------------------------------------; Reference Energy = -76.0213974638823942 [Eh]; Singles Energy = -0.0000000000000001 [Eh]; Same-Spin Energy = -0.0512503270216563 [E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:3506,energy,energy,3506,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"ass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468216,energy,energy,468216,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ation can be made; of the reference, the derivative level, the excitation level, *etc.* and; some options can be set according to best practices. Practically speaking,; |cfour__cfour_cc_program| (and eventually |cfour__cfour_abcdtype|) will; always be set to the :ref:`fastest safe value <table:cfour_cc_program>`.; For example, the input above will run with |cfour__cfour_cc_program|\ =ECC; unless explicitly set to VCC. An advantage of |PSIfours| Python driver is that any number of common; work-up procedures can be automated and wrapped around the; conventional single-point and optimization procedures at the heart of all; quantum chemistry codes. Three core ""wrappers"" available in |PSIfour| are; :py:func:`~psi4.driver.driver_nbody.nbody`,; :py:func:`~psi4.driver.wrapper_database.database`, and; :py:func:`~psi4.driver.cbs`; read their respective sections; for details, but an overview is provided here. :py:func:`~psi4.driver.driver_nbody.nbody`; computes the interaction energy of a bimolecular complex (counterpoise-corrected,; not, or both). ::. molecule dimer {; Ne; --; Ne 1 R; symmetry c1; }; ; Rvals=[2.5, 3.0, 4.0]; set basis aug-cc-pVDZ; ; for R in Rvals:; dimer.R = R; ecp = cp('c4-mp2'); print_stdout('R [A] = %.1f IE [kcal/mol] = %.3f\n' % (R, psi_hartree2kcalmol * ecp)); ; yields ::. R [A] = 2.5 IE [kcal/mol] = 0.804; R [A] = 3.0 IE [kcal/mol] = 0.030; R [A] = 4.0 IE [kcal/mol] = -0.014. Next, the :py:func:`~psi4.driver.wrapper_database.database` wrapper allows any computational; model chemistry to be applied a predefined collection of molecules. Thus; an input ::. set {; basis jun-cc-pvdz; d_convergence 9; }; ; database('c4-mp2','nbc10',cp='on',subset='MeMe'). yields the counterpoise-corrected interaction energy for several points; along the dissociation curve of methane dimer, which is a member of the; :srcdb:`NBC10` database::. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // Database nbc10 Results //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//; ; For each VARIABLE requ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:15927,energy,energy,15927,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ation interaction level of theory and root; *n* (numbering starts at 0). .. psivar:: CI STATE-AVERAGED TOTAL ENERGY; CI STATE-AVERAGED CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{CP}}}. .. psivar:: CURRENT CORRELATION ENERGY. The correlation energy [E_h] corresponding to the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT ENERGY. The total electronic energy [E_h] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. .. psivar:: CURRENT REFERENCE ENERGY. The total electronic energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten),",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:25678,energy,energy,25678,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ations that define each of the coupled-pair methods implemented in; |Psifour|. We begin with the CISD wave function. .. math::; :label: CIwfn. | \Psi \rangle = | \Psi_0 \rangle + \sum_i^{occ} \sum_a^{vir} t_i^a | \Psi_i^a\rangle + \frac{1}{4}\sum_{ij}^{occ} \sum_{ab}^{vir} t_{ij}^{ab} | \Psi_{ij}^{ab}\rangle,. where we have chosen the intermediate normalization, :math:`\langle \Psi_0; | \Psi \rangle = 1`. The CISD correlation energy is given by. .. math::; :label: CIenergy; ; E_c = \langle \Psi_0 | \hat{H} - E_0 | \Psi \rangle,. and the amplitudes can be determined by the solution to the coupled set of; equations:. .. math::; :label: CIeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - E_c | \Psi \rangle, \\; 0 &= \langle \Psi_{i}^{a} | \hat{H} - E_0 - E_c | \Psi \rangle. The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, :math:`E_c`, with generalized shifts for the; doubles and singles equations, :math:`\Delta_{ij}` and :math:`\Delta_i`:. .. math::; :label: CEPAeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - \Delta_{ij} | \Psi \rangle, \\; 0 &= \langle \Psi_{i}^{a} | \hat{H} - E_0 - \Delta_i | \Psi \rangle. These shifts approximate the effects of triple and quadruple excitations.; The values for :math:`\Delta_{ij}` and :math:`\Delta_i` used in several; coupled-pair methods are given in Table :ref:`CEPA Shifts; <table:cepa_shifts>`. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. .. _`table:cepa_shifts`:. +-------------------------+------------------------------------------------------------+----------------------------------------------+; | method | :math:`\Delta_{ij}` | :math:`\Delta_i` |; +=========================+============================================================+==============================================+; | cisd | :math:`E_c` | :math:`E_c` |; +-------------------------+-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:10310,energy,energy,10310,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"atrix. Usually less accurate than the core guess: the; latter is exact for one-electron systems, GWH is not; see; [Lehtola:2019:1593]_).; HUCKEL; An extended H\ |u_dots|\ ckel guess based on on-the-fly atomic UHF; calculations alike SAD, see [Lehtola:2019:1593]_.; MODHUCKEL; Like HUCKEL, an extended H\ |u_dots|\ ckel guess based on; on-the-fly atomic UHF calculations alike SAD, see; [Lehtola:2019:1593]_. This variant employs an updated rule for the; generalized Wolfsberg-Helmholz formula from [Ammeter:1978:3686]_.; READ; Read the previous orbitals from a ``wfn`` file, casting from; one basis to another if needed. Useful for starting anion; computations from neutral orbitals, or after small geometry; changes. At present, casting from a different molecular point; group is not supported. This becomes the default for the second; and later iterations of geometry optimizations.; SAP; Superposition of Atomic Potentials. This is essentially a; modification of the core Hamiltonian, which includes screening; effects by using a radially screened effective atomic charge. The; screening effects have been calculated at the complete basis set; limit with finite-element calculations, see [Lehtola:2019:25945]_; and [Lehtola:2020:012516]_. The guess and its implementation have; been described in [Lehtola:2019:1593]_. The guess is evaluated on a; DFT quadrature grid, so the guess energy depends slightly on the; used DFT quadrature. The current implementation is based on; exchange-only local density calculations that are but nanohartree; away from the complete basis set limit [Lehtola:2020:012516]_.; SAPGAU; Superposition of Atomic Potentials, but using error function based; fits to the atomic radial potentials as discussed in; [Lehtola:2020:144105]_. The main difference to the SAP guess; discussed above [Lehtola:2019:25945]_ is that the SAPGAU scheme is; analytic, and can be efficiently formed in terms of three-center; two-electron integrals [Lehtola:2020:144105]_. The potential in; th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:20675,charge,charge,20675,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['charge'],['charge']
Energy Efficiency,"atus': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31151,energy,energy,31151,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"atus': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515869,energy,energy,515869,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443926,energy,energy,443926,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367753,energy,energy,367753,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:440049,energy,energy,440049,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"aultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:302301,energy,energy,302301,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,5,['energy'],['energy']
Energy Efficiency,"b_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correct",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30229,reduce,reduced,30229,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,3,"['energy', 'reduce']","['energy', 'reduced']"
Energy Efficiency,"bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53486,energy,energy,53486,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted :math:`(Q|ov)` integrals and then builds the; full :math:`(ov|ov)` tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like::. -----------------------------------------------------------; ==================> DF-MP2 Energies <====================; -----------------------------------------------------------; Reference Energy = -76.0213974638823942 [Eh]; Singles Energy = -0",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:3485,energy,energy,3485,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"belled ``C1``. This bizarre example was; constructed to demonstrate the syntax, but the flexibility of the basis set; specification is advantageous, for example, when selectively omitting diffuse; functions to make computations more tractable. In the above example the basis sets have been assigned asymmetrically, reducing; the effective symmetry from :math:`D_{6h}` to :math:`C_{2v}`; |PSIfour| will detect this; automatically and run in the appropriate point group. Basis blocks can also be named, *e.g.*, :samp:`basis; {optional_basis_name} \\{...\\}` and the basis defined by it later; applied to another molecule. ::. # sets basis keyword; basis mybas {; assign aug-cc-pvtz; assign f cc-pvtz; }. # re-sets basis keyword; set basis aug-cc-pvtz. molecule hf {; H; F 1 1.0; }. molecule h2o {; O; H 1 1.0; H 1 1.0 2 90.0; }. # runs HF and H2O with aug-cc-pvtz; energy('hf', molecule=hf); energy('hf', molecule=h2o). # re-re-sets basis keyword; set basis mybas. # runs HF with cc-pvtz on F and aug-cc-pvtz on H; energy('hf', molecule=hf). # runs H2O with aug-cc-pvtz, effectively; energy('hf', molecule=h2o). Finally, we note that the ``basis {...}`` block may also be used; for defining basis sets, as detailed in :ref:`sec:basisUserDefined`. .. index:: basis set; auxiliary. Calculations requesting density fitting (on by default for many methods); require auxiliary fitting basis set(s) in addition to the primary; orbital one associated with the |mints__basis| keyword.; When most popular basis sets are being used, including Dunning and; Pople-style, the SCF, DF-MP2, and SAPT codes will chose the appropriate; auxiliary basis set automatically according to :ref:`apdx:basisFamily`,; unless instructed otherwise by setting the auxiliary basis set in the; input.; Should needed elements be missing from the best; auxiliary basis or should the orbital basis be unknown to |PSIfour|,; the auxiliary basis will fall back on `def2 quad-zeta fitting bases; :source:`psi4/driver/qcdb/libmintsbasisset.p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:6415,energy,energy,6415,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['energy'],['energy']
Energy Efficiency,"belled hydrogen; atoms with the DZ basis set. Likewise, the fourth line assigns the STO-3G; basis set to just the carbon atoms labelled ``C1``. This bizarre example was; constructed to demonstrate the syntax, but the flexibility of the basis set; specification is advantageous, for example, when selectively omitting diffuse; functions to make computations more tractable. In the above example the basis sets have been assigned asymmetrically, reducing; the effective symmetry from :math:`D_{6h}` to :math:`C_{2v}`; |PSIfour| will detect this; automatically and run in the appropriate point group. Basis blocks can also be named, *e.g.*, :samp:`basis; {optional_basis_name} \\{...\\}` and the basis defined by it later; applied to another molecule. ::. # sets basis keyword; basis mybas {; assign aug-cc-pvtz; assign f cc-pvtz; }. # re-sets basis keyword; set basis aug-cc-pvtz. molecule hf {; H; F 1 1.0; }. molecule h2o {; O; H 1 1.0; H 1 1.0 2 90.0; }. # runs HF and H2O with aug-cc-pvtz; energy('hf', molecule=hf); energy('hf', molecule=h2o). # re-re-sets basis keyword; set basis mybas. # runs HF with cc-pvtz on F and aug-cc-pvtz on H; energy('hf', molecule=hf). # runs H2O with aug-cc-pvtz, effectively; energy('hf', molecule=h2o). Finally, we note that the ``basis {...}`` block may also be used; for defining basis sets, as detailed in :ref:`sec:basisUserDefined`. .. index:: basis set; auxiliary. Calculations requesting density fitting (on by default for many methods); require auxiliary fitting basis set(s) in addition to the primary; orbital one associated with the |mints__basis| keyword.; When most popular basis sets are being used, including Dunning and; Pople-style, the SCF, DF-MP2, and SAPT codes will chose the appropriate; auxiliary basis set automatically according to :ref:`apdx:basisFamily`,; unless instructed otherwise by setting the auxiliary basis set in the; input.; Should needed elements be missing from the best; auxiliary basis or should the orbital basis be unknown",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:6265,energy,energy,6265,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,2,['energy'],['energy']
Energy Efficiency,"bin/psi4` and the ``PATH`` setting lines; below are redundant. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from the source directory. This is an expert; option for development, and not all functionality",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:32816,energy,energy,32816,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"bital data from a previous calculations is done via the ``restart_file`` option,; where the actual file is a serialized ``wfn`` object (see :ref:`saving the wfn <sec:save_wfn>`); By default, the orbital data file of the converged SCF(``psi.PID.name.180.npy``) is deleted; after |PSIfour| exits or the ``clean()`` function is called. The orbital guess is automatically; set to ``READ`` when ``restart_file`` is given a ``wfn`` file.; To write the orbitals after every iteration and keep the orbitals from the last iteration, the ``write_orbitals`` options is available: ::. energy('scf', write_orbitals='my_mos'),. which writes a ``Wavefunction`` object converted (serialized) to a numpy file called ``my_mos.npy``.; The restart can then be done as follows: ::. energy('scf', restart_file='my_mos'). Specifying the ``.npy`` suffix when writing and reading restart files is optional. Alternatively, the restart can also be done from any previously saved ``wfn`` object. ::. energy, scf_wfn = energy('scf',return_wfn=True); scf_wfn.to_file('my_wfn'); energy('scf', restart_file='my_wfn'). For advanced users manipulating or writing custom wavefunction files, note; that |PSIfour| expects the numpy file on disk to have the ``.npy`` extension, not, e.g., `.npz`. .. index:: DIIS, MOM, damping. .. _`sec:scfconv`:. Convergence Stabilization; ~~~~~~~~~~~~~~~~~~~~~~~~~. A summary of Psi's supported convergence stabilization techniques is presented below:. DIIS [On by Default]; DIIS uses previous iterates of the Fock matrix together; with an error criterion based on the orbital gradient to produce an informed; estimate of the next Fock Matrix. DIIS is almost always necessary to converge; the SCF procedure and is therefore turned on by default. In rare cases, the; DIIS algorithm may need to be modified or turned off altogether, which may be; accomplished via :term:`options <DIIS (SCF)>`.; ADIIS [On by Default]; ADIIS uses previous iterates of the Fock and density matrices to produce an; informed ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:23589,energy,energy,23589,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,2,['energy'],['energy']
Energy Efficiency,"bitals that are expected to contribute little to the; dispersion energy. Speedups in excess of :math:`50 \times` are possible. In; practice, this approximation is very good and should always be applied.; Publications resulting from the use of MP2 NO-based approximations should ; cite the following: [Hohenstein:2010:104107]_. Basic Keywords Controlling MP2 NO Approximations; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ---------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30037,energy,energy,30037,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,2,"['charge', 'energy']","['charge-transfer', 'energy']"
Energy Efficiency,"ble in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted :math:`(Q|ov)` integrals and then builds the; full :math:`(ov|ov)` tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like::. -----------------------------------------------------------; ==================> DF-MP2 Energies <====================; -----------------------------------------------------------; Reference Energy = -76.0213974638823942 [Eh]; Singles Energy = -0.0000000000000001 [Eh]; Same-Spin Energy = -0.0512503270216563 [Eh]; Opposite-Spin Energy = -0.1534098175176923 [Eh]; Correlation Energy = -0.2046601445393486 [Eh]; Total Energy = -76.2260576084217405 [Eh]; -----------------------------------------------------------; ================> DF-SCS-MP2 Energies <==================; ------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:3934,energy,energy,3934,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"book. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact integrals for all terms except for dispersion. In practice,; density fitting is considerably faster and introduces negligible errors, thus; it is the preferred method for open-shell cases as well.; Below, you can find a minimum example of open-shell SAPT0 computation. ::. molecule {; 0 1; O 0.000000 0.000000 6.000000; H 0.000000 1.431500 4.890600; H 0.000000 -1.431500 4.890600; --; 0 2; O 0.000000 0.000000 0.000000; O 0.000000 2.503900 0.000000; H 0.000000 -0.424700 -1.839500; units bohr; symmetry c1; no_reorient; no_com; }; ; set {; reference uhf; scf_type df; basis aug-cc-pVDZ; }; ; energy('sapt0'); ; . |scf__reference| needs to be ``UHF`` or ``ROHF`` for the open-shell computation to proceed. Advanced example; ^^^^^^^^^^^^^^^^. Open-shell computations can be difficult to converge in certain cases, thus you may; want to have more control over the SCF procedure. You have the option of",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:16641,energy,energy,16641,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526841,energy,energy,526841,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"by hand"" from the objdir via ``stage/bin/psi4 ../tests/directory_name/input.dat``. If a test is multiple minutes long, load-balancing a parallel CTest run requires the test to be started early. Use the ``COST`` line as shown above to set a weighting to about the number of seconds the test takes. ``input.dat``; -------------. The other necessary file is the input file itself, ``input.dat``. The input file should be just a simple input file to run the test, with small additions. ::. #! RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxiliary basis.; #! Also a bit more to force a second line. nucenergy = 8.801466202085710 #TEST; refenergy = -76.05098402733282 #TEST. molecule h2o {; symmetry c1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pVTZ; scf_type df; df_basis_scf cc-pVTZ-RI; e_convergence 10; }. thisenergy = energy(""hf""). compare_values(nucenergy, h2o.nuclear_repulsion_energy(), 9, ""Nuclear repulsion energy"") #TEST; compare_values(refenergy, thisenergy, 9, ""Reference energy"") #TEST; compare_values(refenergy, variable('scf total energy'), 9, ""Reference energy"") #TEST. Of those small modifications, first, note the special comment at the top (starting with the ``#!`` comment marker). This should be descriptive since it is inlined into the manual (unless ``!nosample`` in the comment) as a sample input. Reference values are often assigned to variables for later use.; The compare_values function (along with several relatives in :source:`psi4/driver/p4util/testing.py` for comparing strings, matrices, etc.) checks that the computed values match these reference values to suitable precision. This function prints an error message and signals that the test failed to the make system, if the values don't match. Any lines of the input associated with the validation process should be flagged with ``#TEST`` at the end of each line, so that they can be removed when copying from the tests to the samples directory. ``output.ref``; --------------. When your tes",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:8781,energy,energy,8781,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,4,['energy'],['energy']
Energy Efficiency,"c energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten), (3,). .. psivar:: CURRENT GRADIENT. The total electronic gradient [E_h/a0] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer, ({nat}, 3). .. psivar:: CURRENT DIPOLE GRADIENT. The derivative of the dipole with respect to nuclear perturbations [E_h a0/u] = [(e a0/a0)^2/u]; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: CURRENT HESSIAN. The total electronic Hessian [E_h/a0/a0] of the most recent stage of a; calculation, (3 * {nat}, 3 * {nat}). .. psivar:: CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY. Changeable quantities based on options.; The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by any reweighting of :psivar:`MP2 DOUBLES ENERGY`; for opposite-spin and same-spin contributions, with; any singles carried along.; Depending on weights, may equal any of MP2, SCS-MP2, SCS(N)-MP2, etc. quantities.; Contrast with :psivar:`SCS-MP2 TOTAL ENERGY`. .. psivar:: CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2.5 TOTAL ENERGY; CUSTOM SCS-OMP2.5 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY. Changeable quantities based on options.; The total electronic energy [E_h] and correlation energy component [E_h]; for the method fo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:27417,energy,energy,27417,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"c', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10036,energy,energy,10036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi:",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159068,energy,energy,159068,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi:",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164404,energy,energy,164404,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395802,energy,energy,395802,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:396164,energy,energy,396164,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:240596,energy,energy,240596,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13646,energy,energy,13646,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18904,energy,energy,18904,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'mo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14068,energy,energy,14068,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19326,energy,energy,19326,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228736,energy,energy,228736,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:182785,energy,energy,182785,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:110174,energy,energy,110174,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:112714,energy,energy,112714,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:201673,energy,energy,201673,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:204383,energy,energy,204383,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:208387,energy,energy,208387,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:210912,energy,energy,210912,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:298162,energy,energy,298162,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5941,energy,energy,5941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:200250,energy,energy,200250,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225901,energy,energy,225901,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fno",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227270,energy,energy,227270,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:230544,energy,energy,230544,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c-pVTZ is shown below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvtz; basis_guess 3-21G; guess sad; }. energy('scf'). .. _`sec:scfrestart`:. Restarting the SCF; ~~~~~~~~~~~~~~~~~~. Reading orbital data from a previous calculations is done via the ``restart_file`` option,; where the actual file is a serialized ``wfn`` object (see :ref:`saving the wfn <sec:save_wfn>`); By default, the orbital data file of the converged SCF(``psi.PID.name.180.npy``) is deleted; after |PSIfour| exits or the ``clean()`` function is called. The orbital guess is automatically; set to ``READ`` when ``restart_file`` is given a ``wfn`` file.; To write the orbitals after every iteration and keep the orbitals from the last iteration, the ``write_orbitals`` options is available: ::. energy('scf', write_orbitals='my_mos'),. which writes a ``Wavefunction`` object converted (serialized) to a numpy file called ``my_mos.npy``.; The restart can then be done as follows: ::. energy('scf', restart_file='my_mos'). Specifying the ``.npy`` suffix when writing and reading restart files is optional. Alternatively, the restart can also be done from any previously saved ``wfn`` object. ::. energy, scf_wfn = energy('scf',return_wfn=True); scf_wfn.to_file('my_wfn'); energy('scf', restart_file='my_wfn'). For advanced users manipulating or writing custom wavefunction files, note; that |PSIfour| expects the numpy file on disk to have the ``.npy`` extension, not, e.g., `.npz`. .. index:: DIIS, MOM, damping. .. _`sec:scfconv`:. Convergence Stabilization; ~~~~~~~~~~~~~~~~~~~~~~~~~. A summary of Psi's supported convergence stabilization techniques is presented below:. DIIS [On by Default]; DIIS uses previous iterates of the Fock matrix together; with an error criterion based on the orbital gradient to produce an informed; estimate of the next Fock Matrix. DIIS is almost always necessary to converge; the SCF procedure and is therefore turned on by default. In rare cases, the; DIIS algorithm ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:23378,energy,energy,23378,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"c.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; triple: setting; keywords; database(); see: db(); database(); single: database(). .. _`sec:db()`:. Database |w---w| :py:func:`~psi4.driver.wrapper_database.database`; ==================================================================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. .. autofunction:: psi4.driver.wrapper_database.database(name, db_name [, func, mode, cp, rlxd, symm, zpe, benchmark, tabulate, subset]). .. index:: ; pair: database(); output. Output; ^^^^^^. At the beginning of a database job is printed a listing of the individual system ; calculations which will be performed. The output snippet below is from the example job [1]; above. It shows each reagent required for the subset of database reactions requested.; Note that this is an un-counterpoise-corrected example, and the wrapper is smart enough; to compute only once the monomer whose energy will be subtracted from each of the three dimers. ::. RGC1-HeHe-0.85-dimer; RGC1-He-mono-unCP; RGC1-HeHe-1.0-dimer; RGC1-HeHe-1.5-dimer. At the end of the job, the Requested Energy table is printed that gives the total; energies for the requested model chemistry for each reagent and each reaction, as; well as the stoichiometric weights by which the reagent energies are transformed; into the reaction energy. In this case, the dimer is +1 and the monomer is -2,; indicating the interaction energy is computed from dimer less first monomer; less second (identical) monomer. Error statistics are computed with respect to the reference; energies stored in the database. One of these, the mean absolute deviation, is ; returned by the wrapper as an ordinary Python variable. (For databases; without a stored reference energy, *e.g.*, BASIC, large and meaningless numbers are; printed for error.) The other two tables tabulate the PSI variables requested; thr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:1955,energy,energy,1955,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,"c3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61060,energy,energy,61060,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62405,energy,energy,62405,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79279,energy,energy,79279,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"c3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80624,energy,energy,80624,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206139,energy,energy,206139,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cal interpretation of the molecular orbitals, to assist in difficult; convergence cases, and, in some methods, to obtain significant performance; gains. The point group of the molecule is inferred when reading the molecule; section, and may be overridden by the :ref:`symmetry <sec:moleculeKeywords>` flag, as in::. molecule h {; 0 2; H; symmetry c1; }. or by the ``reset_point_group`` Python molecule attribute::. h.reset_point_group('c2v'). During the SCF procedure, the occupation of orbitals is typically determined by; the Aufbau principal across all spatial symmetries. This may result in the; occupation shifting between iterations. If the occupations are known *a priori*,; they may be clamped throughout the procedure by using the |globals__docc| and; |globals__socc| options. For instance, all good quantum chemists know that; :math:`C_{2v}` water is; actually,::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; docc [3, 0, 1, 1] # 1A1 2A1 1B1 3A1 1B2; basis cc-pvdz; }. energy('scf'). .. _`sec:scfbrokensymm`:. Broken Symmetry; ~~~~~~~~~~~~~~~. For certain problems, such diradicals, allowing the spin-up and spin-down; orbitals to differ in closed-shell computations can be advantageous;; this is known as symmetry breaking. The resulting unrestricted wavefunction; will often provide superior energetics, due to the increased flexibility,; but it will suffer non-physical spin contamination from higher multiplicity states.; A convenient approach to break symmetry is to perform a UHF or UKS calculation; with the guess HOMO and LUMO orbitals mixed.; Mixing of the guess orbitals can be requested by setting the |scf__guess_mix|; keyword to true::. set reference uhf; set guess_mix true; energy('scf'). .. _`sec:scflindep`:. Orthogonalization; ~~~~~~~~~~~~~~~~~. One of the first steps in the SCF procedure is the determination of an; orthogonal basis (known as the OSO basis) from the atomic orbital; basis (known as the AO basis). The Molecular Orbital basis (MO basis); is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:12267,energy,energy,12267,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:9545,energy,energy,9545,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"can be used to; produce spectra for one-photon absorption (OPA) and electronic circular; dichroism (ECD) with phenomenological line broadening. |PSIfour| provides the ``spectrum`` function for this purpose implementing the; recommendations of Rizzo *et al.* [Rizzo2011-to]_.; This function will *not* plot the spectrum, but rather return a pair of NumPy; arrays containing the :math:`x` and :math:`y` values resulting from the; convolution with broadening of the computed spectroscopic observables. .. code-block:: python. import numpy as np. import psi4. from psi4.driver.procrouting.response.scf_response import tdscf_excitations; from psi4.driver.p4util import spectrum. psi4.core.set_output_file(""moxy.out""). moxy = psi4.geometry(""""""0 1; C 0.152133 -0.035800 0.485797; C -1.039475 0.615938 -0.061249; C 1.507144 0.097806 -0.148460; O -0.828215 -0.788248 -0.239431; H 0.153725 -0.249258 1.552136; H -1.863178 0.881921 0.593333; H -0.949807 1.214210 -0.962771; H 2.076806 -0.826189 -0.036671; H 2.074465 0.901788 0.325106; H 1.414895 0.315852 -1.212218; """""", name=""(S)-methyloxirane""). psi4.set_options({; 'save_jk': True,; }). e, wfn = psi4.energy(""HF/cc-pvdz"", return_wfn=True, molecule=moxy); res = tdscf_excitations(wfn, states=8, triplets=""also""). # get poles and residues to plot OPA and ECD spectra; poles = [r[""EXCITATION ENERGY""] for r in res]; opa_residues = [np.linalg.norm(r[""LENGTH-GAUGE ELECTRIC DIPOLE TRANSITION MOMENT""])**2 for r in res]; ecd_residues = [r[""LENGTH-GAUGE ROTATORY STRENGTH""] for r in res]. opa_spectrum = spectrum(poles=poles, residues=opa_residues, gamma=0.01, out_units=""nm""); ecd_spectrum = spectrum(poles=poles, residues=ecd_residues, kind=""ECD"", gamma=0.01, out_units=""nm""). The data produced by running the above PsiAPI code can, for example, be used; with the Altair plotting library to produce the desired spectra. .. image:: /moxy.png; :align: center; :scale: 100%; :alt: (S)-methyloxirane one-photon absorption and electronic circular dichroism spectra.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:12278,energy,energy,12278,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['energy'],['energy']
Energy Efficiency,"can run a libtool+cmake, but one needs to disable the `find_package` components check and correct for some; # Libint2 vs. libint2 spelling differences. See ""CHOOSE!"" toggles here and in <psi4>/psi4/CMakeLists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calculations to not be limited by cheap integrals, need WITH_MAX_AM_ERI2 >= WITH_MAX_AM_ERI3; # * In order for DF fallback fitting to work with def2-universal on all elements, need WITH_ERI3_MAX_AM >=4 for energies; # * Since non-DF calculations often use DF guess or preiterations and DF calculations use 4-center integrals for sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * The combination WITH_MAX_AM_ERI=""5;4;3"" and WITH_MAX_AM_ERI3=""6;5;4"" permits any 5Z energy, QZ gradient, and TZ Hessian and is sufficient for the full test suite.; # * Psi4 doesn't know the limits of the Libint2 library to which it's linked. `libint2::Engine::lmax_exceeded` errors will be thrown from l2; nothing from Psi4.; # * If ever use a libint2 with AM>7, edit the `init_spherical_harmonics` line in libmints/integral.cc; # * In selecting AM values, before `grep`ing lots of basis set files, consult the guide at end of this file.; # [Feb 2023]; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can use LIBINT2_SHGAUSS_ORDERING=standard|gaussian; # *at Libint source generation time*. At Psi4 build time, it's going to be looking for standard (sss), so you'll have to; # edit the CMake to use a gss.; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can no longer be adapted to use a libtool+cmake source.; # * Libraries of different AM are not hot-swappable in a Psi4 build, but they only require a relinking.;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:2505,energy,energy,2505,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"cc', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:490763,energy,energy,490763,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,5,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58378,energy,energy,58378,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:59716,energy,energy,59716,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:63744,energy,energy,63744,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:65082,energy,energy,65082,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76597,energy,energy,76597,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:77935,energy,energy,77935,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81963,energy,energy,81963,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:83301,energy,energy,83301,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:41993,energy,energy,41993,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43364,energy,energy,43364,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47491,energy,energy,47491,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48862,energy,energy,48862,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:44742,energy,energy,44742,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46120,energy,energy,46120,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:101520,energy,energy,101520,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105234,energy,energy,105234,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9665,energy,energy,9665,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:106800,energy,energy,106800,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:108383,energy,energy,108383,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ccsummary>` summarizes these capabilities. This section; describes how to carry out coupled cluster calculations within |PSIfour|.; For higher-order coupled-cluster methods like CCSDT and CCSDTQ, |PSIfour|; can interface to K\ |a_acute|\ llay's MRCC code (see :ref:`MRCC <sec:mrcc>`). Solvent effects on energies can be taken into account using the polarizable; continuum model (PCM) in the PTE approximation [Cammi:2009:164104]_, see; :ref:`PCM <sec:pcmsolver>`. The following wavefunctions are currently recognized by |PSIfour| as arguments; to functions like :py:func:`~psi4.driver.energy`: ``'ccsd'``, ``'ccsd(t)'``, ``'a-ccsd(t)'``, ``'cc2'``,; ``'cc3'``, ``'bccd'`` (CCD with Brueckner orbitals), ``'bccd(t)'`` (CCD(T) with; Brueckner orbitals), ``'eom-ccsd'``, ``'eom-cc2'`` (CC2 for excited states),; ``'eom-cc3'`` (CC3 for excited states). Response properties can be obtained; by calling the function :py:func:`~psi4.driver.properties` (instead of, for example, :py:func:`~psi4.driver.energy`,; *e.g.*, ``properties('ccsd')``. There are many sample; coupled cluster inputs provided in :source:`samples`. The various methods supported by the CCENERGY modules in |Psifour| are; summarized in Table :ref:`CC Methods <table:ccsummary>` and detailed; (except excited state methods) in Table :ref:`CCENERGY Capabilities; <table:ccenergy_stdsuite>`. Even without ``set qc_module ccenergy``,; methods will default to this module, but alternate implementations can; be seen at :ref:`other modules <table:managedmethods>`. .. _`table:ccsummary`:. .. table:: Current coupled cluster capabilities of |PSIfour|. +------------------+------------+-----------+-----------+---------------+-----------+; | Method | Reference | Energy | Gradient | Exc. Energies | LR Props |; +==================+============+===========+===========+===============+===========+; | CC2 | RHF | Y | Y | Y | Y |; + +------------+-----------+-----------+---------------+-----------+; | | UHF | Y | --- | --- | --- |; + +-----------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:5484,energy,energy,5484,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['energy'],['energy']
Energy Efficiency,"cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483664,energy,energy,483664,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'mod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485018,energy,energy,485018,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:444470,energy,energy,444470,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:415802,energy,energy,415802,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:422769,energy,energy,422769,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:179754,energy,energy,179754,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:183689,energy,energy,183689,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87325,energy,energy,87325,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337323,energy,energy,337323,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344328,energy,energy,344328,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421125,energy,energy,421125,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ce': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:274138,energy,energy,274138,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ce': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:276673,energy,energy,276673,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ce': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395416,energy,energy,395416,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ce': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:280508,energy,energy,280508,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:283043,energy,energy,283043,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cept by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requested DFT method,; :math:`E_{\text{DFT}}` in Eq. :eq:`DFTterms`. .. math::; :nowrap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{FCTL}} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{SCF}} + E_{\text{DH}}; \end{align*}. Unless the method is a DFT double-hybrid, this quantity is equal to; :psivar:`SCF TOTAL ENERGY`. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DFT TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the requested DFT method, ({nat}, 3). .. psivar:: DFT DIPOLE GRADIENT. The derivative of the requested DFT method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: DFT TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the requested DFT method, (3 * {nat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:31403,energy,energy,31403,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"cf-5 tdscf-6 tdscf-7; dft-pruning freq-masses sapt9 sapt10 sapt11 scf-uhf-grad-nobeta; linK-1 linK-2 linK-3; cbs-xtpl-energy-conv ddd-deriv nbody-he-4b ddd-function-kwargs; ); add_subdirectory(${test_name}); endforeach(). # Add internal projects; add_subdirectory(psi4numpy); add_subdirectory(cookbook); add_subdirectory(python); add_subdirectory(json); if(ENABLE_pasture); add_subdirectory(pasture-ccsorttransqt2); message(STATUS ""${Cyan}Found Pasture${ColourReset}""); message(STATUS ""Adding test cases: Psi4 + Pasture""); endif(). message(STATUS ""Adding test cases: Psi4""). ########################### External Project Tests ###########################. # For code that (1) is built or detected in the Psi4 superbuild but isn't; # maintained in the Psi4 codebase and (2) has Psi4-dependent tests _not_ in; # the external codebase, tests should; # * get their own directory in tests (e.g., tests/dftd3); # * have a name that doesn't repeat the exe (e.g., tests/dftd3/energy, not tests/dftd3/dftd3-energy); # * be listed in the test case CMakeLists.txt as addon-testname (e.g., `add_regression_test(dftd3-energy ...`); # * alphabetize the addons. # <<< BSE >>>. if(ENABLE_bse); add_subdirectory(mints2-bse); message(STATUS ""Adding test cases: Psi4 + bse""); endif(). # <<< CFOUR >>>. find_program(CFOUR_EXECUTABLE; NAMES xcfour; DOC ""Path to Stanton and Gauss's xcfour executable""). if(CFOUR_EXECUTABLE); add_subdirectory(cfour); message(STATUS ""${Cyan}Found CFOUR${ColourReset}: ${CFOUR_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + CFOUR""); endif(). # <<< CHEMPS2 >>>. if(ENABLE_CheMPS2); add_subdirectory(chemps2); message(STATUS ""Adding test cases: Psi4 + CheMPS2""); endif(). # <<< DFTD3 >>>. find_program(DFTD3_EXECUTABLE; NAMES s-dftd3 dftd3; DOC ""Path to Grimme's dftd3 executable""). if(DFTD3_EXECUTABLE); add_subdirectory(dftd3); add_subdirectory(sapt0-d); add_subdirectory(fsapt-d); add_subdirectory(fsaptd-terms); message(STATUS ""${Cyan}Found DFTD3${ColourReset}: ${DFTD3_EXECUTABLE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:6967,energy,energy,6967,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:335288,energy,energy,335288,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337115,energy,energy,337115,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:342293,energy,energy,342293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344120,energy,energy,344120,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:419090,energy,energy,419090,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:420917,energy,energy,420917,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:488758,energy,energy,488758,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:494068,energy,energy,494068,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:496073,energy,energy,496073,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:179568,energy,energy,179568,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:183503,energy,energy,183503,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'ny",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332746,energy,energy,332746,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:239705,energy,energy,239705,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:242767,energy,energy,242767,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:180283,energy,energy,180283,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:240056,energy,energy,240056,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:233949,energy,energy,233949,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:246523,energy,energy,246523,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492164,energy,energy,492164,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84374,energy,energy,84374,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140367,energy,energy,140367,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"cfour_spherical| as appropriate, then writes the basis section; necessary for SPECIAL below the ``*CFOUR(...)`` block. (I'm sorry that the; name of the basis doesn't appear in ``ZMAT``, but the combination of the; ~14 character basis name limit and the absence of a comment line marker; rather precludes that helpful label.). The input below employs a |PSIfour| library basis set and also introduces; the final stage of conversion toward |PSIfour| format. Instead of the; generic ``'cfour'``, the computational method is specified as the first; argument to the :py:func:`~psi4.driver.optimize` call. In the computational; command below, the string argument ``'c4-ccsd(t)'`` directs that a CCSD(T); computation be run using Cfour (as opposed to ``'ccsd(t)'`` which would; call |PSIfour| CC code). Specifying computational method in this manner; sets |cfour__cfour_calc_level| from the argument and; |cfour__cfour_deriv_level| as appropriate from the function call:; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.gradient`, or; :py:func:`~psi4.driver.optimize`. If those keywords are also set explicitly to; contradictory values, the interface will complain. ::. memory 2 gb. molecule CH2F2 {; units au; C 0.0000000000 -0.0000000000 1.0890958457; F 0.0000000000 -2.1223155812 -0.4598161475; F -0.0000000000 2.1223155812 -0.4598161475; H 1.7084139850 0.0000000000 2.1841068002; H -1.7084139850 -0.0000000000 2.1841068002; }. set basis aug-cc-pvdz; set rms_force_g_convergence 6; set cfour_abcdtype aobasis; set cfour_scf_conv 12; set cfour_cc_conv 12; set cfour_lineq_conv 12. optimize('c4-ccsd(t)'). The utility of this method specification is that examination can be made; of the reference, the derivative level, the excitation level, *etc.* and; some options can be set according to best practices. Practically speaking,; |cfour__cfour_cc_program| (and eventually |cfour__cfour_abcdtype|) will; always be set to the :ref:`fastest safe value <table:cfour_cc_program>`.; For example, the input ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:14272,energy,energy,14272,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"chanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is neutral and spin-singlet; by inserting another :samp:`{charge} {multiplicity}` line, separated from the first; molecule block by a `--` line. If any information is missing, |PSIfour| will set the; unprovided charges and multiplicities to be consistent with those that are given.; For example, the overall charge must be simply the sum of all fragment charges.; |PSIfour| further assumes that any unpaired electrons are coupled to yield the highest; possible :math:`M_s` value. Psi will also favor neutral, spin-singlet fragments.; For anything complicated, we strongly suggest explicitly providing the charge; and multiplicity of each fragment as well as the total molecular charge and multiplicity. For details and examples, see https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/chgmult.py#L105-L136 . Having defined a molecule containing fragments like ``eneyne`` above, it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment gh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:19854,charge,charges,19854,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charges']
Energy Efficiency,"cific path for the internal coordinate file and instruct |PSIfour| not to delete it::. psi4_io.set_specific_path(12, './'); psi4_io.set_specific_retention(12, True). # equivalent to above; psi4_io.set_specific_path(PSIF_INTCO, './'); psi4_io.set_specific_retention(PSIF_INTCO, True). The Python interpreter will execute the contents of the; |psirc| file in the current user's home area (if present) before performing any; tasks in the input file. As a consequence, the commands in the input files supersede; any instructions in the |psirc| file. During; execution, the |psirc| defaults will be loaded in first, but then the commands; in the input file will be executed. . The |psirc| file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every |PSIfour| instance. .. index:: parallel operation, threading; .. _`sec:threading`:. Threading; =========. Most new modules in |PSIfour| are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for |PSIfour|; involves using threaded BLAS/LAPACK (particularly Intel's excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and C++; ``std::thread`` for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in |PSIfour| uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled |PSIfour| with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL). Control of threading in |PSIfour| can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even di",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:9554,efficient,efficiently,9554,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['efficient'],['efficiently']
Energy Efficiency,"cified in a ``pcm`` section that has; .. to be explicitly typed in by the user. This additional section follows a syntax; .. that is slightly different from that of |Psifour| and is fully documented; .. `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PE would look like the following: ::. molecule pna {; C 8.64800 1.07500 -1.71100; C 9.48200 0.43000 -0.80800; C 9.39600 0.75000 0.53800; C 8.48200 1.71200 0.99500; C 7.65300 2.34500 0.05500; C 7.73200 2.03100 -1.29200; H 10.18300 -0.30900 -1.16400; H 10.04400 0.25200 1.24700; H 6.94200 3.08900 0.38900; H 7.09700 2.51500 -2.01800; N 8.40100 2.02500 2.32500; N 8.73400 0.74100 -3.12900; O 7.98000 1.33100 -3.90100; O 9.55600 -0.11000 -3.46600; H 7.74900 2.71100 2.65200; H 8.99100 1.57500 2.99500; symmetry c1; no_reorient; no_com; }. set {; basis sto-3g; pe true; e_convergence 10; d_convergence 10; scf_type pk; }. set pe {; potfile pna_6w.pot; }. scf_energy, wfn = energy('scf', return_wfn=True). The corresponding potential file `pna_6w.pot` can be downloaded; `here <https://raw.githubusercontent.com/maxscheurer/cppe/master/tests/potfiles/pna_6w.pot>`_. Keywords for CPPE; ~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/globals__pe.rst; .. include:: autodir_options_c/pe__potfile.rst; .. include:: autodir_options_c/pe__isotropic_pol.rst; .. include:: autodir_options_c/pe__induced_convergence.rst; .. include:: autodir_options_c/pe__maxiter.rst; .. include:: autodir_options_c/pe__border.rst; .. include:: autodir_options_c/pe__border_type.rst; .. include:: autodir_options_c/pe__border_n_redist.rst; .. include:: autodir_options_c/pe__border_redist_order.rst; .. include:: autodir_options_c/pe__border_rmin.rst; .. include:: autodir_options_c/pe__border_rmin_unit.rst; .. include:: autodir_options_c/pe__border_redist_pol.rst. .. _`cmake:cppe`:. How to configure CPPE for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:5284,energy,energy,5284,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['energy'],['energy']
Energy Efficiency,"cing convergence criteria may help). For open-shell systems, the |detci__ms0| keyword is typically not relevant, and there; is no control over spin multiplicities of higher roots unless|detci__calc_s_squared| is; used. .. index:: ; pair: CI; arbitrary-order perturbation theory. .. _`sec:arbpt`:. Arbitrary Order Perturbation Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The DETCI module is capable of computing energies for arbitrary; order |MollerPlesset| perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with a ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less). The simplest way to run high-order perturbation theory computations is to; call, *e.g.*, ``energy('mp10')`` to invoke a MP10 computation or; ``energy('zapt25')`` to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions. For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; ``energy('mp10')`` sets |detci__mpn| to TRUE.; The program uses the Wigner (2n+1) rule by default; (|detci__mpn_wigner| = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:13036,energy,energy,13036,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,2,['energy'],['energy']
Energy Efficiency,"code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; code, and is intended for use with large systems for which DF-MP2 is intractable.; When running DLPNO-MP2 with default settings, approximately 99.9% of the DF-MP2 ; correlation energy is recovered. The general outline of the method is as follows:. (1) Localize the active occupied MOs (with the Foster-Boys method); (2) Construct projected AOs (PAOs) from the virtual MOs; (3) Calculate three-index integrals in the (sparse) LMO/PAO basis; (4) Perform local density fitting to construct (sparse) exchange integrals; (5) Transform local virtuals from PAOs to pair natural orbitals (PNOs), and truncate; (6) Solve the iterative local MP2 equations in the LMO/PNO basis. An example input file is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; set pno_convergence normal; ; energy('dlpno-mp2'). The main difference between this input and a DF-MP2 input is the ``energy('dlpno-mp2')``; call to :py:func:`~psi4.driver.energy`. The only other addition is the |dlpno__pno_convergence|; keyword, which determines the accuracy of the local approximations underlying ; the DLPNO-MP2 method. Note that the water molecule in this example is not large; enough for DLPNO-MP2 to be of any benefit relative to DF-MP2. The theory of the DLPNO-MP2 method and practical recommendations for using the; code are presented below. . .. index::; pair: DLPNO-MP2; theory. Theory; ------. See :ref:`DF-MP2 <sec:dfmp2>` for background on the theory of (non-local); density-fitted MP2. |PSIfours| DLPNO-MP2 implementation is based on the ; manuscript by Pinski et al. [Pinski:2015:034108]_. In DLPNO-MP2, as in all local MP2 methods, the second-order MBPT energy is determined ; variationally via the Hylleraas functional [Hylleraas:1930:209]_:. .. math::; :label: Hylleraas. E^{(2)} = 2 \langle \Psi_{0}^{(0)} | \hat{H} - E_{0}^{(0)} | \Psi_{0}^{(1)} \rangle - \langle \Psi_{0",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:3477,energy,energy,3477,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:360580,energy,energy,360580,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:368299,energy,energy,368299,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:3373,energy,energy,3373,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277430,energy,energy,277430,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:1127,energy,energy,1127,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:3737,energy,energy,3737,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86019,energy,energy,86019,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:209850,energy,energy,209850,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:22665,energy,energy,22665,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:27859,energy,energy,27859,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477194,energy,energy,477194,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:514010,energy,energy,514010,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306274,energy,energy,306274,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:308781,energy,energy,308781,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50311,energy,energy,50311,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"correspond to an; approximate Mk-MRCC computation for high-spin cases. A Simple Example; ________________ . The |psimrcc__corr_wfn| allows you to select one of three methods; Mk-MRPT2 [``PT2``], Mk-MRCCSD [``CCSD``], or Mk-MRCCSD(T) [``CCSD_T``].; The |psimrcc__corr_multp| option allows you to select the Slater; determinants with a particular :math:`M_s` value. The |psimrcc__wfn_sym|; keyword is neccesary if you do not want to compute the energy of the; totally-symmetric state. The |psimrcc__follow_root| option may be used; to follow different roots of the effective Hamiltonian. A value of 1; instructs PSIMRCC to follow the solution with the lowest energy given; a certain set of determinants. ::. molecule o2 {; 0 3; O; O 1 2.265122720724; units au; }; set {; basis cc-pvtz; }; set mcscf {; reference rohf; docc [3,0,0,0,0,2,1,1] # Doubly occupied MOs; socc [0,0,1,1,0,0,0,0] # Singly occupied MOs; }; set psimrcc {; corr_wfn ccsd # Do Mk-MRCCSD ; frozen_docc [1,0,0,0,0,1,0,0] # Frozen MOs; restricted_docc [2,0,0,0,0,1,1,1] # Doubly occupied MOs; active [0,0,1,1,0,0,0,0] # Active MOs; frozen_uocc [0,0,0,0,0,0,0,0] # Frozen virtual MOs; corr_multp 1 # Select the Ms = 0 component; follow_root 1; wfn_sym B1g # Select the B1g state; }; energy('psimrcc'). Note that the oxygen molecule has 16 electrons (including core), while; the ``docc`` array contains only 7 doubly-occupied orbitals (or 14; electrons). Hence, two more electrons are available to place into; the active space (given by ``active``), which consists of 2 orbitals.; Thus there are two active electrons in two orbitals. In this particular; example, we are using standard ROHF orbitals for the Mk-MRCCSD procedure,; rather than TCSCF orbitals. Nevertheless, with the present code, ; these orbitals must be provided through the MCSCF module, as specified in the; ``set mcscf`` section above. Orbital ordering and selection of the model space; _________________________________________________. The reference determinants :mat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst:6628,energy,energy,6628,doc/sphinxman/source/psimrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst,1,['energy'],['energy']
Energy Efficiency,"coupled cluster models. It can also compute linear response; properties (such as static or frequency-dependent polarizability,; or optical rotation angles) for some models. Excited states can; also be computed by the CC2 and CC3 models, or by EOM-CCSD. Table; :ref:`CC Methods <table:ccsummary>` summarizes these capabilities. This section; describes how to carry out coupled cluster calculations within |PSIfour|.; For higher-order coupled-cluster methods like CCSDT and CCSDTQ, |PSIfour|; can interface to K\ |a_acute|\ llay's MRCC code (see :ref:`MRCC <sec:mrcc>`). Solvent effects on energies can be taken into account using the polarizable; continuum model (PCM) in the PTE approximation [Cammi:2009:164104]_, see; :ref:`PCM <sec:pcmsolver>`. The following wavefunctions are currently recognized by |PSIfour| as arguments; to functions like :py:func:`~psi4.driver.energy`: ``'ccsd'``, ``'ccsd(t)'``, ``'a-ccsd(t)'``, ``'cc2'``,; ``'cc3'``, ``'bccd'`` (CCD with Brueckner orbitals), ``'bccd(t)'`` (CCD(T) with; Brueckner orbitals), ``'eom-ccsd'``, ``'eom-cc2'`` (CC2 for excited states),; ``'eom-cc3'`` (CC3 for excited states). Response properties can be obtained; by calling the function :py:func:`~psi4.driver.properties` (instead of, for example, :py:func:`~psi4.driver.energy`,; *e.g.*, ``properties('ccsd')``. There are many sample; coupled cluster inputs provided in :source:`samples`. The various methods supported by the CCENERGY modules in |Psifour| are; summarized in Table :ref:`CC Methods <table:ccsummary>` and detailed; (except excited state methods) in Table :ref:`CCENERGY Capabilities; <table:ccenergy_stdsuite>`. Even without ``set qc_module ccenergy``,; methods will default to this module, but alternate implementations can; be seen at :ref:`other modules <table:managedmethods>`. .. _`table:ccsummary`:. .. table:: Current coupled cluster capabilities of |PSIfour|. +------------------+------------+-----------+-----------+---------------+-----------+; | Method | Reference |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:5075,energy,energy,5075,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['energy'],['energy']
Energy Efficiency,"csd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139924,energy,energy,139924,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM) ; (ii) diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; (iii) based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; (iv) project the virtual-virtual block of the Fock matrix onto the truncated space; (v) construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; (vi) proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; |Psifour| can be found in [DePrince:2013:293]_\. FNO computations; are controlled through the keywords |fnocc__nat_orbs| and; |fnocc__occ_tolerance|, or by prepending a valid method name with ""fno"" in; the energy call as ::. energy('fno-ccsd(t)'). If you wish to specify the number of active natural orbitals manually, use; the keyword |fnocc__active_nat_orbs|. This keyword will override the ; keyword |fnocc__occ_tolerance|. QCISD(T), CCSD(T), MP4, and CEPA; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The FNOCC module in |Psifour| supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968]_\ was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:4046,energy,energy,4046,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ct-exchange"" refers to the Hartree--Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted :math:`\alpha`,; is often determined by adiabatic or heuristic arguments and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree--Fock code, with the caveat that Hartree--Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results. A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function :math:`\mathrm{erf}(\omega r_{12})` as a; partition function. Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. .. math::; E_{\mathrm{xc}} = (1-\alpha) \int_{\mathrm{R}^3}; f_{\mathrm{xc}}; \left(; \rho_{\alpha} (\vec r_1),; \rho_{\beta} (\vec r_1),; \gamma_{\alpha\alpha} (\vec r_1),; \gamma_{\alpha\beta} (\vec r_1),; \gamma_{\beta\beta} (\vec r_1),; \tau_{\alpha} (\vec r_1),; \tau_{\beta} (\vec r_1); ; \omega \right) \ \mathrm{d} ^3 r_1. .. math::; -\frac{1}{2} \sum_{i,j}; \delta_{\sigma_{i} \sigma_{j}} \alpha \iint_{\mathrm{R}^6} \phi_{i}^1 \phi_{j}^1; \frac{1}{r_{12}} \phi_{i}^2 \phi_{j}^2 \ \mathrm{d}^3 r_1 \ \mathrm{d}^3 r_2. .. math::; -\frac{1}{2} \sum_{i,j}; \delta_{\sigma_{i} \sigma_{j}} (1-\alpha)\iint_{\mathr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:10859,energy,energy,10859,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"ction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCT, one takes a different route and; replaces :math:`\boldsymbol{\gamma_2}` in favor of its two-particle density cumulant:. .. math:: . \lambda_{pq}^{rs} = \gamma_{pq}^{rs} - \gamma_p^r \gamma_q^s + \gamma_p^s \gamma_q^r. The one-particle density matrix is separated into its idempotent part; :math:`\boldsymbol{\kappa}` and a correction :math:`\boldsymbol{\tau}`:. .. math:: . \gamma_p^q = \kappa_p^q + \tau_p^q. The idempotent part of :math:`\boldsymbol{\gamma_1}` corresponds to a mean-field Hartree--Fock-like density,; while the non-idempotent correction :math:`\boldsymbol{\tau}`; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. .. math:: . E_{DCT} = \frac{1}{2} \left( h_p^q + f_p^q \right) \gamma_q^p + \frac{1}{4} \bar{g}_{pq}^{rs} \lambda_{rs}^{pq}. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. .. math:: . \bar{g}_{pq}^{rs} = g_{pq}^{rs} - g_{pq}^{sr}. .. math:: . f_p^q = h_p^q + \bar{g}_{pr}^{qs} \gamma_{s}^{r}. Energy functional :math:`E_{DCT}` has several important properties. First,; the energy is now a function of two sets of independent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now gr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:3605,energy,energy,3605,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"d ::. set cfour_calc_level ccsd; set cfour_cc_program ecc; energy('cfour'). * runs in ecc since that's best practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_convergence 5; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword (local scope works, too) where; the |PSIfours| more flexible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten; and Cfour module keyword trumps |PSIfour| SCF module keyword ::. set cfour_scf_conv 6; set d_convergence 8; energy('c4-scf'). The keyword translation feature is still in the proof-of-principle; stage, so only a handful (found here) of keywords participate. .. note:: Longtime Cfour users who may consider this keyword; translation a flaw rather than a feature can avoid it entire",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:39801,energy,energy,39801,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"d G. Jansen, *Theor. Chem. Acc.* **131**, 1235 (2012).; (doi: `10.1007/s00214-012-1235-6 <https://doi.org/10.1007/s00214-012-1235-6>`_). * ""Single-determinant-based symmetry-adapted perturbation theory without; single-exchange approximation,""; R. Sch\ |a_dots|\ ffer and G. Jansen, *Mol. Phys.* **111**, 2570 (2013).; (doi: `10.1080/00268976.2013.827253 <https://doi.org/10.1080/00268976.2013.827253>`_). Orbital-Optimized Post-Hartree |--| Fock Methods; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; Orbital-optimized second-order perturbation theory (OMP2). * ""Quadratically convergent algorithm for orbital optimization in the; orbital-optimized coupled-cluster doubles method and in orbital-optimized; second-order |MollerPlesset| perturbation theory,""; U. Bozkaya, J. M. Turney, Y. Yamaguchi, H. F. Schaefer, and C. D. Sherrill,; *J. Chem. Phys.* **135**, 104103 (2011).; (doi: `10.1063/1.3631129 <https://doi.org/10.1063/1.3631129>`_). * ""Analytic energy gradients for the orbital-optimized second-order; |MollerPlesset| perturbation theory,"" U. Bozkaya and; C. D. Sherrill, *J. Chem. Phys.* **138**, 184103 (2013).; (doi: `10.1063/1.4803662 <https://doi.org/10.1063/1.4803662>`_). * ""Orbital-Optimized Second-Order Perturbation Theory with Density-Fitting; and Cholesky Decomposition Approximations: An Efficient Implementation,""; U. Bozkaya, *J. Chem. Theory Comput.* **10**, 2371 (2014).; (doi: `10.1021/ct500231c <https://doi.org/10.1021/ct500231c>`_). Orbital-optimized third-order perturbation theory (OMP3). * ""Orbital-Optimized Third-Order |MollerPlesset| Perturbation; Theory and Its Spin-Component and Spin-Opposite Scaled Variants: Application; to Symmetry Breaking Problems,"" U. Bozkaya,; *J. Chem. Phys.* **135**, 224103 (2011).; (doi: `10.1063/1.3665134 <https://doi.org/10.1063/1.3665134>`_). * ""Assessment of Orbital-Optimized Third-Order |MollerPlesset|; Perturbation Theory and Its Spin-Component and Spin-Opposite Scaled Variants; for Thermochemistry and Kinetics,"" E. So",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:20397,energy,energy,20397,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['energy'],['energy']
Energy Efficiency,"d Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The charge-transfer analysis above is carried out by taking the; difference between SAPT induction as calculated in the dimer-centered; basis (*i.e.*, each ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30610,charge,charge-transfer,30610,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charge-transfer']
Energy Efficiency,"d after the FNO truncation. The general outline for the FNO procedure in |Psifour| is:. (i) construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM) ; (ii) diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; (iii) based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; (iv) project the virtual-virtual block of the Fock matrix onto the truncated space; (v) construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; (vi) proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; |Psifour| can be found in [DePrince:2013:293]_\. FNO computations; are controlled through the keywords |fnocc__nat_orbs| and; |fnocc__occ_tolerance|, or by prepending a valid method name with ""fno"" in; the energy call as ::. energy('fno-ccsd(t)'). If you wish to specify the number of active natural orbitals manually, use; the keyword |fnocc__active_nat_orbs|. This keyword will override the ; keyword |fnocc__occ_tolerance|. QCISD(T), CCSD(T), MP4, and CEPA; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The FNOCC module in |Psifour| supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968]_\ was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:4027,energy,energy,4027,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"d by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:61192,energy,energy,61192,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"d cite the; following publications: [Patkowski:2018:164110]_. .. _`sec:saptinf`:. Higher-Order Exchange Terms without Single-Exchange Approximation; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Recently, several SAPT higher-order exchange terms have been derived without; the :math:`S^{2}` approximation: :math:`E_{exch-ind}^{(20)}` [Schaffer:2012:1235]_, ; :math:`E_{exch-disp}^{(20)}` [Schaffer:2013:2570]_, and :math:`E_{exch-ind}^{(30)}` ; [Waldrop:2021:024103]_. The second-order terms can be computed with the following; settings::. set SAPT_DFT_FUNCTIONAL HF; set DO_IND_EXCH_SINF true # calculate Exch-Ind20 (S^inf) ; set SAPT_DFT_MP2_DISP_ALG fisapt ; set DO_DISP_EXCH_SINF true # calculate Exch-Disp20 (S^inf); energy('sapt(dft)'); ; and the third-order exchange-induction term is computed as follows::. set DO_IND30_EXCH_SINF true # calculate Exch-Ind30 (S^inf) ; energy('sapt2+3'); ; These calculations are performed with the atomic orbital and ; density-fitting scheme described in the Supplementary Material to; [Smith:2020:184108]_ for the second-order terms and in [Waldrop:2021:024103]_; for the third-order exchange induction. The coupled (response) version of the; exchange-induction corrections are also calculated, exactly for ; :math:`E_{exch-ind,resp}^{(20)}` and by scaling the uncoupled term for; :math:`E_{exch-ind,resp}^{(30)}`. S^inf Keywords; ~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ind_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_disp_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_ind30_exch_sinf.rst. .. _`sec:saptd`:. SAPT0-D; ~~~~~~~. In SAPT0, the computation of :math:`E_{disp}^{(20)} + E_{exch-disp}^{(20)}` represents; the computational bottleneck. One can avoid this bottleneck by replacing these; dispersion terms with the empirical D3 corrections developed by Grimme.; ; :ref:`Grimme's dispersion corrections are discussed here. <sec:dftd3>`. The corresponding method, termed SAPT0-D, thus relies on emp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:45107,energy,energy,45107,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"d correlation energy component [E_h]; for the CCSD-like method formed by reweighting :psivar:`CCSD DOUBLES ENERGY`; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2-VDW TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the S",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:60119,energy,energy,60119,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"d rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6405,energy,energy,6405,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d through cbs(). .. psivar:: CCname ROOT n TOTAL ENERGY; TD-fctl ROOT n TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) TOTAL ENERGY; TD-fctl ROOT n (IN h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n* within irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (h) TOTAL ENERGY; TD-fctl ROOT n (h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n*, which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n (h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY - h TRANSITION. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (IN h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:10710,energy,energy,10710,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"d', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:298901,energy,energy,298901,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:301768,energy,energy,301768,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:305923,energy,energy,305923,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:308430,energy,energy,308430,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477770,energy,energy,477770,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333818,energy,energy,333818,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:200427,energy,energy,200427,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12591,energy,energy,12591,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17849,energy,energy,17849,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50693,energy,energy,50693,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'dr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:55263,energy,energy,55263,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:56275,energy,energy,56275,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:389662,energy,energy,389662,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:391677,energy,energy,391677,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:396705,energy,energy,396705,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:398720,energy,energy,398720,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481486,energy,energy,481486,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330062,energy,energy,330062,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331452,energy,energy,331452,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d-order perturbation theory""; This theory gives gradients for a family of methods that add; another parameter to MP2, so these formulas apply to MP2 as well.; Table II of this paper will be crucial in explaining a trick that; does not appear in DiStasio. (See Sec. 3 here.); Aikens : doi:10.1007/s00214-003-0453-3; Theor. Chem. Acc. 110, 233-253 (2003); ""A derivation of the frozen-orbital unrestricted open-shell; and restricted closed-shell second-order perturbation theory; analytic gradient expressions""; This is the conventional-integral paper that DiStasio worked from to; get their DF gradients. This sometimes clarifies obscure points in; DiStasio, but they are not clear about one crucial point:; If one block of a quantity is not given, but its adjoint is, is the first; block zero, or the adjoint of the first block?; 2. Conventions; OPDM = One-particle density matrix; EWDM = Energy-weighted density matrix; All intermediates used in other functions are defined by comments starting DEFINITION.; When a previous intermediate is updated, it is defined by comments starting UPDATE.; 3. The Trick; The RHF gradient code does NOT use the formulas of the DiStasio or Aikens papers.; I can't find where the formulas come from, but they're very close to the DiStasio and; Aikens formulas, but there are consistent deviations from the formulas that are; accounted for by the addition of a ""magic"" term later on. In the comments, I refer to; this as the ""subtle trick."" Grep for that if you want to see where it appears.; 4. Cholesky Decomposition; Several times, the code needs to contract a two-index MO quantity by the four-index electron; repulsion integrals and end with a two-index AO quantity. If the two-index quantity were; separable, this would be a perfect opportunity to use our efficient libfock/jk.cc technology.; This two-index quantity is the one-particle density matrix, which is NOT separable.; To remedy this, we Cholesky decompose the OPDM, which gets it in the desired form.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/dfmp2/README.txt:2372,efficient,efficient,2372,psi4/src/psi4/dfmp2/README.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/dfmp2/README.txt,2,['efficient'],['efficient']
Energy Efficiency,"d/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156613,energy,energy,156613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'ny",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157996,energy,energy,157996,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:161949,energy,energy,161949,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'ny",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163332,energy,energy,163332,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"d3bj[1], E, 7, 'Ethene -D3 (bj)'); .. comment mB = eneyne.extract_subsets(2); .. comment E, G = mB.run_dftd3('b3lyp', 'd3bj'); .. comment compare_values(ref_d3bj[2], E, 7, 'Ethyne -D3 (bj)'); .. comment ; .. comment E, G = eneyne.run_dftd3('b3lyp', 'd3'); .. comment compare_values(ref_d3zero[0], E, 7, 'Ethene-Ethyne -D3 (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd2'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)'); .. comment ; .. comment set basis sto-3g; .. comment set scf_type df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:27624,energy,energy,27624,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ddx package.; PCMSolver is based on a boundary-element discretisation [Cances:1998:309]_,; while ddx is based on a domain decomposition approach; [Cances:2013:054111]_ making it linear scaling.; For more details about PCMSolver see the :ref:`section on PCMsolver <sec:pcmsolver>`.; For a concise introduction to the; `theory behind ddx <https://ddsolvation.github.io/ddX/md_docs_theory.html>`_; or further `literature references <https://ddsolvation.github.io/ddX/label_references.html>`_; see the ddx documentation. The usage of ddx-based solvation models is enabled; by specifying |globals__ddx| ``true`` in your input file.; The solvation model itself is selected using the |ddx__ddx_model| parameter.; Additionally the definition of the solvent and solute cavity is required; and further parameters allow to influence details of discretisation,; numerical integration and iterative solvers,; see the next sections for details. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: Currently the ddx interface **cannot** exploit molecular point group symmetry. .. warning:: Analytic gradients and Hessians are currently **not available**; with dd-based solvation models. A minimal input for a Hartree--Fock calculation with dd-based PCM would look like; the following: ::. import psi4; nh3 = psi4.geometry(""""""; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; symmetry c1; no_reorient; no_com; units bohr; """"""). psi4.set_options({; ""basis"": ""sto-3g"",; ""scf_type"": ""pk"",; ""ddx"": True,; ""ddx_model"": ""pcm"",; ""ddx_solvent"": ""water"",; ""ddx_radii_set"": ""uff"",; }). scf_e = psi4.en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:4285,energy,energy,4285,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['energy'],['energy']
Energy Efficiency,"de, cp, rlxd, symm, zpe, benchmark, tabulate, subset]). .. index:: ; pair: database(); output. Output; ^^^^^^. At the beginning of a database job is printed a listing of the individual system ; calculations which will be performed. The output snippet below is from the example job [1]; above. It shows each reagent required for the subset of database reactions requested.; Note that this is an un-counterpoise-corrected example, and the wrapper is smart enough; to compute only once the monomer whose energy will be subtracted from each of the three dimers. ::. RGC1-HeHe-0.85-dimer; RGC1-He-mono-unCP; RGC1-HeHe-1.0-dimer; RGC1-HeHe-1.5-dimer. At the end of the job, the Requested Energy table is printed that gives the total; energies for the requested model chemistry for each reagent and each reaction, as; well as the stoichiometric weights by which the reagent energies are transformed; into the reaction energy. In this case, the dimer is +1 and the monomer is -2,; indicating the interaction energy is computed from dimer less first monomer; less second (identical) monomer. Error statistics are computed with respect to the reference; energies stored in the database. One of these, the mean absolute deviation, is ; returned by the wrapper as an ordinary Python variable. (For databases; without a stored reference energy, *e.g.*, BASIC, large and meaningless numbers are; printed for error.) The other two tables tabulate the PSI variables requested; through keyword ``tabulate``, in this case the total SCF energy and the number; of atoms in each reagent. ::. ==> Mp2 Total Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Value Reagent 1 Reagent 2; Value Wt Value Wt; ------------------------------------------------------------------------------------------------------; RGC1-HeHe-0.85 0.00004802 -5.69430495 1 -2.84717649 -2; RGC1-HeHe-1.0 -0.00000064 -5.69435362 1 -2.84717649 -2; -------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:2454,energy,energy,2454,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,"de-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7899,energy,energy,7899,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6940,energy,energy,6940,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:341040,energy,energy,341040,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443382,energy,energy,443382,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:440411,energy,energy,440411,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:168358,energy,energy,168358,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:364067,energy,energy,364067,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: DFT TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the requested DFT method, (3 * {nat}, 3 * {nat}). .. psivar:: DFT XC ENERGY. The functional energy contribution [E_h] to the total SCF energy (DFT only).; Quantity :math:`E_{xc}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`. .. psivar:: DFT VV10 ENERGY. The VV10 nonlocal contribution [E_h] to the total SCF energy (DFT only).; Included in :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DISPERSION CORRECTION ENERGY; fctl DISPERSION CORRECTION ENERGY. The dispersion correction [E_h] appended to an underlying functional; when a DFT-D method is requested. Quantity :math:`E_{\text{-D}}`; in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; When dispersion parameters are untweaked for a functional and dispersion; level, labeled QCVariable also defined. .. psivar:: DOUBLE-HYBRID CORRECTION ENERGY. The scaled MP2 correlation energy correction [E_h] appended to an; underlying functional when a DH-DFT method is requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:33213,energy,energy,33213,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"der derivative of 1/R supported |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Multipole Moments | ``MultipoleInt`` | M-D | arbitrary order multipoles supported, including nuclear gradients |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Nabla Operator | ``NablaInt`` | Libint2 | using first derivative of ``libint2::Operator::overlap`` |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Overlap | ``OverlapInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Nuclear Coulomb Potential | ``PotentialInt`` | Libint2 | assumes nuclear centers/charges as the potential |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | PCM Potential | ``PCMPotentialInt`` | Libint2 | parallelized over charge points |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Quadrupole | ``QuadrupoleInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Traceless Quadrupole | ``TracelessQuadrupoleInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Relativistic Potential | ``RelPotentialInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:22433,charge,charge,22433,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['charge'],['charge']
Energy Efficiency,"developed to combat a particular class of convergence failure:; occupation flipping. In some cases, midway though the SCF procedure, a partially; converged orbital which should be occupied in the fully-optimized SCF solution; has a slightly higher orbital eigenvalue than some other orbital which should be; destined to be a virtual orbital. This results in the virtual orbital being; spuriously occupied for one or more iterations. Sometimes this resolves itself; without help, other times the occupation flips back and forth between two, four,; or more orbitals. This is typically visible in the output as a non-converging; SCF which eventually settles down to steady oscillation between two (or more); different total energies. This behavior can be ameliorated by choosing occupied; orbitals by ""shape"" instead of by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; iterations with the lowest total energy. For an oscillating system where the; lowest total energy occurs on iterations :math:`N,N+2,\ldots`, invoking; |scf__mom_start| ``N`` can often rescue the convergence of the SCF. MOM can; be used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suit",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:26201,energy,energy,26201,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:232520,energy,energy,232520,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:235925,energy,energy,235925,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299612,energy,energy,299612,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:29311,energy,energy,29311,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21572,energy,energy,21572,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'refe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23578,energy,energy,23578,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26766,energy,energy,26766,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28772,energy,energy,28772,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28270,energy,energy,28270,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"dge/docs-latest-5077AB.svg?logo=read%20the%20docs)](https://psicode.org/psi4manual/master/index.html) [![chat on forum](https://img.shields.io/badge/chat-on_forum-808493.svg?logo=Discourse&logoColor=white)](http://forum.psicode.org/) [![dev chat on slack](https://img.shields.io/badge/dev_chat-on_slack-808493.svg?logo=slack)](https://join.slack.com/t/psi4/shared_invite/zt-5s36s4rb-SQH6_AWyfWOqlKYN3cFs4Q) |; | **Foundation** | [![license](https://img.shields.io/github/license/psi4/psi4.svg)](https://opensource.org/licenses/LGPL-3.0) [![platforms](https://img.shields.io/badge/Platforms-Linux%2C%20MacOS%2C%20MacOS%20Silicon%2C%20Windows%2C%20Windows%20WSL-orange.svg)](https://psicode.org/psi4manual/master/introduction.html#supported-systems) [![python](https://img.shields.io/badge/python-3.8%2C%203.9%2C%203.10%2C%203.11%2C%203.12-blue.svg)](https://psicode.org/psi4manual/master/introduction.html#supported-systems) |; | **Installation** | [![obtain latest](https://img.shields.io/badge/obtain-latest-green.svg)](https://psicode.netlify.com/installs/latest) [![Conda](https://img.shields.io/conda/v/conda-forge/psi4.svg)](https://anaconda.org/conda-forge/psi4) [![Anaconda-Server Badge](https://anaconda.org/conda-forge/psi4/badges/latest_release_relative_date.svg)](https://anaconda.org/conda-forge/psi4) |; | **Demo** | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/psi4/psi4/56fbc7787af67dabdf1897d0dfe4263d8d97e241?urlpath=lab%2Ftree%2Fdoc%2Fsphinxman%2Fsource%2Fpsiapi.ipynb) |. <!-- -->; <!-- [![Last release date](https://img.shields.io/github/release-date/psi4/psi4.svg)](https://github.com/psi4/psi4/releases) -->; <!-- [![Anaconda-Server Badge](https://anaconda.org/psi4/psi4/badges/version.svg)](https://anaconda.org/psi4/psi4) -->. <!--<a href=""https://psi4.slack.com/messages""> <img src=""https://img.shields.io/badge/dev_chat-on_slack-808493.svg"" /></a>; <a href=""mailto:psi4aiqc+slackinvite@gmail.com?subject=request slack invite (incl. who, where, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:2081,green,green,2081,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['green'],['green']
Energy Efficiency,"dividual modules,; by adding the name of the module after the ``set`` keyword. Omitting the module; name, or using the name ``global`` or ``globals`` will result in the keyword being; applied to all modules. For example, in the following input ::. molecule{; o; h 1 roh; h 1 roh 2 ahoh; ; roh = 0.957; ahoh = 104.5; }; ; set basis cc-pVDZ; set ccenergy print 3; set scf print 1; energy('ccsd'). the basis set is set to cc-pVDZ throughout, the SCF code will have a print; level of 1 and the ccenergy code, which performs coupled cluster computations,; will use a print level of 3. In this example a full CCSD computation is; performed by running the SCF code first, then the coupled cluster modules;; the :py:func:`~psi4.driver.energy` Python helper function ensures that this is performed correctly.; Note that the Python interpreter executes commands in the order they appear in; the input file, so if the last four commands in the above example were to read ::. set basis cc-pVDZ; energy('ccsd'); set ccenergy print 3; set scf print 1. the commands that set the print level would be ineffective, as they would be; processed after the CCSD computation completes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings for strings, floats for floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:8028,energy,energy,8028,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"doi: `10.1039/c6cp00164e <https://doi.org/10.1039/c6cp00164e>`_). Algebraic-Diagrammatic Construction methods (ADC); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. General ADC theory. * ""Intermediate state representation approach to physical properties of; electronically excited molecules,""; J. Schirmer, and A. B. Trofimov, *J. Chem. Phys.* **120**,; 11449-11464 (2004).; (doi: `10.1063/1.1752875 <https://doi.org/10.1063/1.1752875>`_). Implementation inside `adcc <https://adc-connect.org>`_,; the ADC backend used for most ADC methods available in |PSIfour|. * ""adcc: A versatile toolkit for rapid development of; algebraic-diagrammatic construction methods,""; M. F. Herbst, M. Scheurer, T. Fransson, D. R. Rehn, and A. Dreuw.; *WIREs Comput. Mol. Sci.*, (2020).; (DOI: `10.1002/wcms.1462 <https://doi.org/10.1002/wcms.1462>`_, Preprint https://adc-connect.org/q/publications. Density Matrix Renormalization Group (DMRG); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; * ""CheMPS2: a free open-source spin-adapted implementation of the density; matrix renormalization group for ab initio quantum chemistry,""; S. Wouters, W. Poelmans, P. W. Ayers and D. Van Neck,; *Comput. Phys. Commun.* **185** (6), 1501-1514 (2014).; (doi: `10.1016/j.cpc.2014.01.019 <https://doi.org/10.1016/j.cpc.2014.01.019>`_). * ""The density matrix renormalization group for ab initio quantum chemistry,""; S. Wouters and D. Van Neck, *Eur. Phys. J. D* **68** (9), 272 (2014).; (doi: `10.1140/epjd/e2014-50500-1 <https://doi.org/10.1140/epjd/e2014-50500-1>`_). Scalar Relativistic Corrections; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. General theory for the exact two-component approach (X2C). * ""Analytic energy gradients for the spin-free exact two-component theory; using an exact block diagonalization for the one-electron Dirac; Hamiltonian,""; L. Cheng and J. Gauss, *J. Chem. Phys.* **135**, 084114 (2011).; (doi: `10.1063/1.3624397 <https://doi.org/10.1063/1.3624397>`_). Implementation within Psi4. * ""Predicting Near Edge",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:25319,adapt,adapted,25319,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['adapt'],['adapted']
Energy Efficiency,"driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:41055,energy,energy,41055,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225334,energy,energy,225334,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ds can be enabled in the SCF; procedure as well, by specifying the |globals__scf_type| as ``CD``. The; accuracy of the decomposition can be controlled through the keyword; |fnocc__cholesky_tolerance|. .. comment This feature is enabled by specifying |fnocc__df_basis_cc| as ""CHOLESKY"". . The following input file sets up a DF-CCSD(T); computation using CD integrals ::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set {; scf_type cd; cc_type cd; basis aug-cc-pvdz; freeze_core true; }; energy('ccsd(t)'). The resulting CCSD(T) correlation energy will be equivalent to that; obtained from a conventional computation if |fnocc__cholesky_tolerance| is; sufficiently small (*e.g.* ``1e-9``). .. _`sec:fnogn`:. Gn theory; ~~~~~~~~~. The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]_\. The G2 procedure may be called through the; :py:func:`~psi4.driver.energy` wrapper: ::. energy('gaussian-2'). Supported methods; ~~~~~~~~~~~~~~~~~. The various methods supported by the FNOCC module in |Psifour| are; summarized in Table :ref:`FNOCC Methods <table:fnocc_methods>`; and detailed (except FNO) in Table :ref:`FNOCC Capabilities; <table:fnocc_stdsuite>`. Note that these methods are implemented; for closed-shell reference only. Without ``set qc_module fnocc``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods>`. .. _`table:fnocc_methods`:. .. table:: Theoretical methods accessible through FNOCC. +-------------------------+---------------------------------------------------------------+-------+-------+; | name | calls method | plain | FNO |; +=========================+===============================================================+=======+=======+; | mp3 | third-order MP perturbation theory | E | E |; +-------------------------+---------------------------------------------------------------+-------+-------+; | mp4(sdq) | fourth-order",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:16079,energy,energy,16079,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ds. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the |globals__frozen_docc| and; |globals__frozen_uocc| keywords. This is not normally what one wishes to do in; an MCSCF computation (*e.g.*, it complicates the computation of gradients), but; it can make the computations faster and is helpful in some circumstances where; unphysical mixing of inactive and active occupied orbitals might occur.; Presently, it is not possible to mix the use of restricted and frozen orbitals; in |PSIfour|. An illustrative CASSCF example is as follows::. molecule {; O; H 1 1.00; H 1 1.00 2 103.1; }; ; set {; basis 6-31G**; restricted_docc [1, 0, 0, 0]; active [3, 0, 1, 2]; }; energy('casscf'). This input will compute the CASSCF energy of water where the 1s Oxygen orbital; and several virtual orbitals are not included in the CI expansion, but are; still optimized. The following is a full list of spaces within the various MCSCF; types. .. _`table:mcscf_spaces`:. .. table:: Orbital spaces for MCSCF computations. +----------------------------+----------------------------+; | RASSCF | CASSCF |; +============================+============================+; | |globals__frozen_uocc| | |globals__frozen_uocc| |; +----------------------------+----------------------------+; | |globals__restricted_uocc| | |globals__restricted_uocc| |; +----------------------------+----------------------------+; | |globals__ras4| | |globals__active| |; +----------------------------+ +; | |globals__ras3| | |; +----------------------------+ +; | |globals__ras2| | |; +----------------------------+ +; | |globals__ras1| | |; +----------------------------+----------------------------+; | |globals__restricted_docc| | |globals__restricted_docc| |; +----------------------------+---------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mcscf.rst:3758,energy,energy,3758,doc/sphinxman/source/mcscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mcscf.rst,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228522,energy,energy,228522,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278296,energy,energy,278296,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:243827,energy,energy,243827,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:231066,energy,energy,231066,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:234471,energy,energy,234471,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:244000,energy,energy,244000,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:247045,energy,energy,247045,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14706,energy,energy,14706,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:179022,energy,energy,179022,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:234298,energy,energy,234298,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:246872,energy,energy,246872,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dt]z'`` to ``energy()``, ``opt()``, *etc.*, respectively. For many of the |PSIfour| Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()` | --- | | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:opt()` | --- | --- | | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:cbs()` | --- | --- | --- | | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:energy()` | --- | --- | --- | --- | |; +-------------------------+-----+-----+-----+-----+--------+. - The command db(opt(cbs(energy()))) is actually expressed as ``db(...,; db_func=opt, opt_func=cbs)``. The perhaps expected final argument of; ``cbs_func=energy`` is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (``db_func``; above can be called as just ``func``. Several examples of intercalls; between Python functions can be found in sample input :srcsample:`pywrap-all`. - All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or design",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:2125,energy,energy,2125,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,2,['energy'],['energy']
Energy Efficiency,"dule': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:44552,energy,energy,44552,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dule': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45930,energy,energy,45930,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dule': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525286,energy,energy,525286,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"dx:sapt>`, :ref:`PSI Variables <apdx:sapt_psivar>`, :source:`LIBSAPT_SOLVER <psi4/src/psi4/libsapt_solver>`. .. warning:: In rare cases with systems having a high degree of symmetry, ; |Psifour| gives (very obviously) wrong answers for SAPT computations ; when the specification is in Z-matrix format. Use a Cartesian representation ; to avoid this problem. .. caution:: In early versions (notably |Psifour| alpha circa 2011; and before), frozen core was implemented incompletely and for; only selected terms. Comparisons with papers published using early; |PSIfour| SAPT code may show discrepancies of 0.01-0.10 kcal/mol in; individual terms, particularly :math:`E_{exch}^{(11)}` and :math:`E_{exch}^{(12)}`. .. caution:: January 28th 2016, the default for all NAT_ORBS options; was changed to true. Hence the code now by default uses natural; orbital truncation to speed up the evaluation of energy terms; wherever possible, according to literature recommendations.; In early July 2016, some total SAPT energy psivars were renamed. .. caution:: February 7, 2020, a missing term in :math:`E^{(30)}_{ind}` was added, causing; possible discrepancies with prior versions of the code on the order of; 0.01 kcal/mol. See https://github.com/psi4/psi4/issues/1677. .. caution:: August 2021, the number of frozen core orbitals used in the dMP2 computations; is now standardized. Specifically, we now rigorously enforce that the number of core orbitals ; frozen in dimer computations is equal to the sum of frozen orbitals of each monomer. Prior to; this, a discrepency between these values was possible when one of the monomers was (exclusively) ; a charged alkali metal. . .. _`sec:saptfitA`:. .. caution:: May 2022 c. v1.6, the default for |sapt__df_basis_elst|; changed from the value of |sapt__df_basis_sapt| (which itself; defaults to the RI of the orbital basis) to the JKFIT of the orbital; basis. This affects SAPT0 and sSAPT0 computed with the :ref:`SAPT; module<sec:sapt>` (the default code for ``",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:2466,energy,energy,2466,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"e -D3 (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd2'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)'); .. comment ; .. comment set basis sto-3g; .. comment set scf_type df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:27939,energy,energy,27939,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"e and replace it; with a methyl group. Applying this patch using Cartesian coordinates is; difficult, because it depends on the orientation of the existing glycine unit.; In this example, we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. .. index:: molecule; multiple in input file; .. _`sec:multipleMolecules`:. .. index::; triple: setting; keywords; molecule; pair: molecule; charge; pair: molecule; multiplicity; pair: molecule; symmetry; pair: molecule; no_reorient; pair: molecule; units; .. _`sec:moleculeKeywords`:. Molecule Keywords; =================. In addition to specifying the geometry, additional information can be; provided in the molecule block :samp:`molecule {optional_molecule_name} \\{...\\}`. **Charge & Multiplicity**; If two integers :samp:`{charge} {multiplicity}` are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (:math:`2 M_s + 1`), respectively. If not specified, the; charge is taken to be zero, and the multiplicity will be taken to be the; lowest multiplicity consistent with that charge. For multi-fragment ; complexes, each fragment can have a :samp:`{charge} {multiplicity}` line.; See :ref:`sec:fragments` for details. **Units**; By default, |Angstrom| units are used; this is changed by adding; a line that reads :samp:`units {spec}`, where :samp:`{spec}` is one; of ``ang``, ``angstrom``, ``a.u.``, ``au``, or ``bohr``. **Orientation**; Certain computations require that the molecule is not reoriented. This ; can be achieved by adding either ``no_reorient`` or ``noreorient``. ; To prevent even recentering of the molecule, add ``no_com`` or ``nocom``. **PubChem**; A line reading :samp:`pubchem:{mol}` fetches the geometry for molecule; :samp:`{mol}` from the PubChem database, where :samp:`{mol}` is either; the IUPAC mol",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:4649,charge,charge,4649,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,2,['charge'],['charge']
Energy Efficiency,"e basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy. Small density values can introduce numerical instabilities with some functionals that; can result in trailing SCF convergence issues or even numerical failures (NaNs).; If the default settings of the LibXC library are insufficient, a custom value can be ; request by setting |scf__dft_density_tolerance|. For notorious cases a value of 1E-10; is sensible. An example of a fully specified grid is as follows::. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_density_tolerance 1.0E-10 # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; dft_pruning_scheme robust # Generally safe and will speed things up; }. energy('b3lyp'). ERI Algorithms; ~~~~~~~~~~~~~~. The ERI algorithms for the Coulomb and hybrid exchange are identical to; :ref:`those for Hartree--Fock <sec:scferi>`. However, for LRC functionals, the long-range; exchange contributions to the Kohn--Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional. Key representative methods supported by the SCF module in |Psifour| are; detailed in Table :ref:`SCF Capabilities <table:scf_stdsuite>`. Note; from :ref:`table:conv_scf` that these SCF-level methods default to; density-fitted reference; use |globals__scf_type| to select an alternate; algorithm. SCF-level methods have no alternate implementations. .. include:: autodoc_capabilities_scf.rst. IP Fitting; ~~~~~~~~~~. In collaboration with the Bredas group, we have",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:27238,energy,energy,27238,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"e corrections, especially those of asymmetrics, provide significantly better potential energy curves than ; CCSD based triples corrections. . A lot of the functionality in OCC has been enabled with Density Fitting (DF) and Cholesky ; Decomposition (CD) techniques, which can greatly speed up calculations and reduce memory; requirements for typically negligible losses in accuracy. **NOTE**: As will be discussed later, all methods with orbital-optimization functionality have non-orbital ; optimized counterparts. Consequently, there arise two possible ways to call density-fitted MP2. In most; cases, users should prefer the DF-MP2 code described in the :ref:`DF-MP2 <sec:dfmp2>` section because it is; faster. If gradients are needed (like in a geometry optimization), then the procedures outlined hereafter; should be followed.; In general, choose the desired method, reference, and ERI type (*e.g.*,; ``set reference uhf``, ``set mp2_type df``, ``opt('mp2')``) and the most; efficient module will be selected automatically, according to; :ref:`Cross-module Redundancies <table:managedmethods>`. Thus, there arise a few categories of method, each with corresponding input keywords:. * Orbital-optimized MP and CC methods with conventional integrals (:ref:`OMP Methods <sec:occ_oo_mtds>` OCC keywords); * Orbital-optimized MP and CC methods with DF and CD integrals (:ref:`OMP Methods <sec:occ_oo_mtds>` DFOCC keywords); * Non-orbital-optimized MP and CC methods with conventional integrals (:ref:`MP/CC Methods <sec:occ_nonoo>` OCC keywords); * Non-orbital-optimized MP and CC methods with DF and CD integrals (:ref:`MP/CC Methods <sec:occ_nonoo>` DFOCC keywords). Theory; ~~~~~~. What follows is a very basic description of orbital-optimized |MollerPlesset| perturbation; theory as implemented in |Psifour|. We will follow our previous presentations ([Bozkaya:2011:omp2]_,; [Bozkaya:2011:omp3]_, and [Bozkaya:2012:odtl]_). The orbital variations may be expressed by means of an exponential unitar",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:5272,efficient,efficient,5272,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['efficient'],['efficient']
Energy Efficiency,"e details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:intercalls`:. Function Intercalls; ===================. This topic is in transition. As of 1.0, the functionality provided by; ``cp()`` and ``cbs()`` should not be accessed directly. Instead, use the; ``cp`` kwarg and/or the extended method syntax like; ``'mp3/aug-cc-pv[dt]z'`` to ``energy()``, ``opt()``, *etc.*, respectively. For many of the |PSIfour| Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()` | --- | | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:opt()` | --- | --- | | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:cbs()` | --- | --- | --- | | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:energy()` | --- | --- | --- | --- | |; +-------------------------+-----+-----+-----+-----+--------+. - The command db(opt",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:1769,energy,energy,1769,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,2,['energy'],['energy']
Energy Efficiency,"e for; each molecule and tell |PSIfour| which one should be used in a given; calculation. For example, consider the following input file::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; energy('scf') # on H. Here, two separate jobs are performed on two different molecules; the first is; performed on H\ :sub:`2`, while the second is for H atom. The last molecule to be; specified is the ""active"" molecule by default. To explicitly activate a named; molecule, the activate command is provided. With it, the above input file can be; equivalently written as follows. Alternatively, the molecule can be specified; directly to the computing function. Below, the third calculation is the same as; the first. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobControl` provides more details about the job control; and calculation keywords used in the above examples. .. index:: ; single: Ghost Atoms; single: molecule; ghost; .. _`sec:ghosts`:. Ghost Atoms; ===========. While many common computations, particularly SAPT and counterpoise corrections, can; be greatly simplified using the notation described in :ref:`sec:fragments`,; manual specification of ghost atoms is sometimes required. Either ::. molecule he2 {; He; Gh(He) 1 2.0; }. or ::. molecule he2 {; He; @He 1 2.0; }. will generate a helium dimer with the second atom ghosted, *i.e.*, possessing; basis functions but no electrons or nuclear charge. See :srcsample:`dfmp2-1`; and :srcsample:`ghosts` for a demonstration of both mechanisms for specifying; ghost atoms. .. index:: ; single: Isotopes; s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:7495,energy,energy,7495,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"e is no batching performed, bra-ket symmetry can be; trivially enforced by ensuring that one of the block indices is greater than or; equal to the other. When batching is used, the situation is trickier; some ket; batches may contain a mixture of integrals that are bra-ket unique and those; that are not. To handle this we must do a coarse check at the top of the loop; to see if *any* integrals in the batch are needed, which is implemented by; asking the integral engine where to start looping in the ket via the call to; ``eri->first_RS_shell_block(PQpair_idx)``. This is followed by a more fine; grained check within the loops to filter individual integrals in the case where; bra and ket have the same angular momentum and there's a possibility of a; handful of integrals coming from the ket that are redundant. Note that the bra; is not batched in any of our engines currently: only the ket is. For this; reason, density fitting integrals should be written as (A0|PQ) rather than; (PQ|A0) where possible, because we want the ket to contain more functions than; the bra for efficient blocking. Instantiating integral objects; .............................. With sieving being introduced in the new integral objects, the cost of their; construction has increased. Although significantly cheaper than computing; integrals themselves, construction of integral objects can be non-negligible,; especially if many threads are used. For example, this pattern can be found in; old versions of the code:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; for (int thread = 1; thread < num_threads; thread++) {; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; }. This builds many objects and the cost can add up. With the new scheme,; integral objects are forced to implement a `clone()` member that can be used as; follows:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:10499,efficient,efficient,10499,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['efficient'],['efficient']
Energy Efficiency,"e minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14723,energy,energy,14723,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"e most basic; wavefunction approaches which includes electron correlation; directly.; Due to its simplicity, the MP2 method is often the best; level one can afford for a larger molecular system.; At the other end of the spectrum, the MP2-R12 method; of Kutzelnigg, Klopper, and co-workers is a promising; approach to computing MP2 energies in the complete; basis set limit for smaller systems. |PSIfour| is; one of the very few publicly available programs to; feature a robust implementation of the MP2-R12 method. |PSIfour| is capable of computing closed-shell; MP2 and MP2-R12/A energies using integral-direct techniques and a; multithreaded algorithm, which lends itself perfectly for execution ; on symmetric multiprocessor (SMP) machines. |PSIfour| is also; capable of computing RHF, UHF, and ROHF (using semicanonical orbitals); MP2 energies and one-particle density matrices, and RHF MP2 analytic ; gradients. Occupied and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in |PSIfour|. +-----------+-----------+---------------+--------------------------+----------+; | Reference | Method | Energy (conv) | Energy (integral-direct) | Gradient |; +===========+===========+===============+==========================+==========+; | RHF | MP2 | Y | Y | Y |; +-----------+-----------+---------------+--------------------------+----------+; | UHF | MP2 | Y | --- | --- |; +-----------+-----------+---------------+--------------------------+----------+; | ROHF | MP2 | Y | --- | --- |; +-----------+-----------+---------------+--------------------------+----------+; | RHF | MP2-R12/A | --- | Y | --- |; +-----------+-----------+---------------+--------------------------+----------+. Basic Keywords; --------------. To compute a ground-state MP2 or MP2-R12 energy at a fixed geometry,; the following keywords are common:. \item[WFN = string]\m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:2223,energy,energy,2223,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['energy'],['energy']
Energy Efficiency,"e test suite. * Most tests should store reference results (from literature or another implementation or a carefully run |PSIfour| calculation),; run quantum chemistry, then apply one or more of the :ref:`faq:comparison_functions` so that the test will fail if the answer is unexpected.; The functions are the same in CTest and pytest, but in the former they are, for example, ``compare_matrices(refmat, mat, ...)`` while in the latter it's asserted, like ``assert compare_matrices(refmat, mat, ...)``.; The main advantage of the testing functions is that they provide helpful error printing upon failure. Deep down, they're NumPy functions. * In preparing the test case reference values, aim for the converged value rather than many digits from your computer under default convergence conditions.; This will make the test more robust for different OS, different BLAS libraries, and variations in SCF cycles.; Turn energy, density, amplitude, and geometry convergence criteria to very tight levels, and use these results for reference energies, reference geometries, reference cube files, *etc.*.; Then, either remove or relax the convergence settings, if these are not a vital part of the test.; In choosing the number of digits for :py:func:`~psi4.compare_values` and other compare_* functions, select a number looser than the convergence set in the test; or the default convergence for the calculation type (energy, gradient, *etc.*). * Keep tests as short as possible without sacrificing coverage and variety. Under 30 seconds is a good aim. .. _`faq:add_psithon_tests`:. Adding PSIthon Test Cases; =========================. To create a new test case, first make a folder in :source:`tests` or, for an addon, a subfolder under the addon folder.; Use hyphens, not spaces or underscores, in the directory name.; Add the directory name to the list of tests in :source:`tests/CMakeLists.txt` or, for an addon, ``tests/<addon>/CMakeLists.txt``.; The test directory will need at least two files, ``CMak",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:5305,energy,energy,5305,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['energy'],['energy']
Energy Efficiency,"e total number of macroiterations will be; less for SOSCF than gradient-based convergence acceleration, the cost of solving; the microiterations typically results in the overall cost being greater for; SOSCF than for gradient-based methods. Therefore, SOSCF should only be used if; it is difficult to locate a stable minimum. SOSCF is available for all HF and DFT references with the exception of meta-; GGA functionals. To enable, set the option |scf__soscf| to ``true``.; Additional options to modify the number of microiterations taken are as; follows:. |scf__soscf_start_convergence|: when to start SOSCF based on the current density RMS. |scf__soscf_max_iter|: the maximum number of SOSCF microiterations per macroiteration. |scf__soscf_conv|: the relative convergence tolerance of the SOSCF microiterations. |scf__soscf_print|: option to print the microiterations or not. .. _`sec:scfstability_doc`:. Stability Analysis; ~~~~~~~~~~~~~~~~~~. SCF algorithms attempt to minimize the gradient of the energy with respect; to orbital variation parameters. At convergence, the gradient should be approximately zero; given a convergence criterion. Although this is enough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrained. For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF so",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:45196,energy,energy,45196,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"e' : 2.0 },; {'type' : 'angle',; 'indices' : [1, 0, 2], ; 'value' : 104.5 }]; } ; } . optimize('hf/cc-pvdz', engine='geometric', optimizer_keywords=geometric_keywords). * Optimize the benzene/water dimer using GeomeTRIC, with the 6 carbon atoms of benzene frozen in ; place::. molecule h2o {; C 0.833 1.221 -0.504; H 1.482 2.086 -0.518; C 1.379 -0.055 -0.486; H 2.453 -0.184 -0.483; C 0.546 -1.167 -0.474; H 0.971 -2.162 -0.466; C -0.833 -1.001 -0.475; H -1.482 -1.867 -0.468; C -1.379 0.275 -0.490; H -2.453 0.404 -0.491; C -0.546 1.386 -0.506; H -0.971 2.381 -0.524; --; O 0.000 0.147 3.265; H 0.000 -0.505 2.581; H 0.000 0.965 2.790; no_com; no_reorient; }. set {; maxiter 100; g_convergence gau; }. geometric_keywords = { ; 'coordsys' : 'tric',; 'constraints' : { ; 'freeze' : [{'type' : 'xyz',; 'indices' : [0, 2, 4, 6, 8, 10]}]; } ; } . optimize('hf/cc-pvdz', engine='geometric', optimizer_keywords=geometric_keywords). Output; ^^^^^^. The progress of a geometry optimization can be monitored by grepping the output file for the; tilde character (``~``). This produces a table like the one below that shows; for each iteration the value for each of the five quantities and whether the criterion; is active and fulfilled (``*``), active and unfulfilled ( ), or inactive (``o``). ::. --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -38.91591820 -3.89e+01 6.91e-02 5.72e-02 o 1.42e-01 1.19e-01 o ~; 2 -38.92529543 -9.38e-03 6.21e-03 3.91e-03 o 2.00e-02 1.18e-02 o ~; 3 -38.92540669 -1.11e-04 4.04e-03 2.46e-03 o 3.63e-02 2.12e-02 o ~; 4 -38.92548668 -8.00e-05 2.30e-04 * 1.92e-04 o 1.99e-03 1.17e-03 o ~; 5 -38.92548698 -2.98",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:28754,monitor,monitored,28754,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['monitor'],['monitored']
Energy Efficiency,"e', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14490,energy,energy,14490,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141324,energy,energy,141324,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:143342,energy,energy,143342,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480060,energy,energy,480060,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:131503,energy,energy,131503,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:135277,energy,energy,135277,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:341218,energy,energy,341218,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:360034,energy,energy,360034,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31546,energy,energy,31546,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:394299,energy,energy,394299,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:338610,energy,energy,338610,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:440952,energy,energy,440952,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:447995,energy,energy,447995,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417633,energy,energy,417633,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424600,energy,energy,424600,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:366986,energy,energy,366986,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:98878,energy,energy,98878,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:466548,energy,energy,466548,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:230893,energy,energy,230893,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337528,energy,energy,337528,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421330,energy,energy,421330,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:466185,energy,energy,466185,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169115,energy,energy,169115,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299790,energy,energy,299790,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:447633,energy,energy,447633,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:233239,energy,energy,233239,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:236644,energy,energy,236644,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:22296,energy,energy,22296,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:27490,energy,energy,27490,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:106608,energy,energy,106608,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:108191,energy,energy,108191,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:59343,energy,energy,59343,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'refer",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64709,energy,energy,64709,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:77562,energy,energy,77562,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82928,energy,energy,82928,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:101694,energy,energy,101694,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76224,energy,energy,76224,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:465653,energy,energy,465653,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24548,energy,energy,24548,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sds",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105862,energy,energy,105862,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138906,energy,energy,138906,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:75447,energy,energy,75447,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"e*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requested DFT method,; :math:`E_{\text{DFT}}` in Eq. :eq:`DFTterms`. .. math::; :nowrap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30542,energy,energy,30542,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"e-packages`` (conda); * :envvar:`PSIDATADIR` pointing to ``share/psi4``. .. _`faq:runordinaryexe`:. How to run Psi4 as executable after compilation; -----------------------------------------------. Substituting the full installation directory :samp:`{prefix}` and a; suitable scratch directory, issue the following commands directly in your; terminal or place them into your ""rc"" file and open a new terminal. (To; use a staged installation directory, substitute; :samp:`{objdir}/stage` for :samp:`{prefix}`.). .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. Run |PSIfour|. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. .. _`faq:modulenotfounderror`:. How to solve ``ModuleNotFoundError: No module named 'psi4'``; ------------------------------------------------------------. You're using |PSIfour| in PsiAPI mode (``python input.py`` where; ``input.py`` contains ``import psi4``) but the Python interpreter; can't find the |PSIfour| Python module. Follow the directions at; :ref:`faq:psi4psiapipath`. .. _`faq:psi4psiapipath`:. How to configure paths for PsiAPI; ---------------------------------. If you know the location of the |PSIfour| executable (``bin/psi4``); for Psithon mode and want to know the corresponding location to add to; :envvar:`PYTHONPATH` for PsiAPI mode, execute ``psi4 --psiapi``. It; will return bash commands to set :envvar:`PATH` (for correct python; interpreter) and :envvar:`PYTHONPATH` (to find psi4 module) co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:27812,energy,energy,27812,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"e:* :ref:`Keywords <apdx:scf>`, :ref:`PSI Variables <apdx:scf_psivar>`, :source:`LIBSCF_SOLVER <psi4/src/psi4/libscf_solver>`, :source:`LIBMINTS <psi4/src/psi4/libmints>`, :source:`LIBFOCK <psi4/src/psi4/libfock>`, :source:`LIBDIIS <psi4/src/psi4/libdiis>`. .. _`sec:scfintro`:. Introduction; ~~~~~~~~~~~~. Self-Consistent-Field (SCF) theory forms the cornerstone of *ab initio* quantum; chemistry. Here SCF refers both to conventional Hartree--Fock (HF) molecular; orbital theory and also to generalized Kohn--Sham Density Functional Theory; (KS-DFT). |PSIfour| contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies. An illustrative example of using the SCF module is as follows::. molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations::. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.62694337910040 -1.86635e-06 1.65616e-05 DIIS; @DF-UHF iter 7: -149.62694340915198 -3.00516e-0",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:2303,energy,energy,2303,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"e_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. com",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:29439,energy,energy,29439,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"e`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orb",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5319,charge,charge,5319,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['charge'],['charge']
Energy Efficiency,"eanings, as; detailed below. A calculation can use either pure (5D, 7F, 9G, etc.) basis functions or; Cartesian (6D, 10F, 15G, etc.), as dictated by the input file / basis set; specification. Also, the basis can be represented in terms of atomic; orbitals (AO) or symmetry-adapted orbitals (SO). Further complications; come from the fact that a nearly linearly-dependent basis set will have; functions removed from it to prevent redundancies. With all of these; factors in mind, here are the conventions used internally:. * nao |w---w| The number of atomic orbitals in Cartesian representation.; * nso |w---w| The number of atomic orbitals but in the pure representation if the current basis uses pure functions, number of Cartesian AOs otherwise.; * nbf |w---w| The number of basis functions, which is the same as nso.; * nmo |w---w| The number of basis functions, after projecting out redundancies in the basis. When molecular symmetry is utilized, a small array of sizes per irrep is; usually allocated on the stack, and is named by augmenting the name above; with a pi (per-irrep), e.g. nmopi. Note that the number of irreps is; always the singular nirrep, and that the index variable h is always used; in a for-loop traverse of irreps. .. _`faq:orbspaces`:. How to name orbital spaces (e.g., docc); ---------------------------------------. As with basis sets, a number of names are used to refer to refer to the; quantity of electrons, virtuals, and active sub-quantities of a |PSIfour|; calculation. All of these can be defined per irrep as above. Some common; conventions are:. * nelec |w---w| The number of electrons, rarely used due to specialization of alphas and betas or soccs and doccs.; * nalpha |w---w| The number of alpha electrons.; * nbeta |w---w| The number of beta electrons; * docc |w---w| The number of doubly-occupied orbitals; * socc |w---w| The number of singly-occupied orbitals (Almost always alpha, we don't like open-shell singlets much).; * nvir |w---w| The number of vir",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:14050,allocate,allocated,14050,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['allocate'],['allocated']
Energy Efficiency,"ebedev| determine the accuracy of the computations; on the boundary of the spheres around each atom performed by DDX. |ddx__ddx_lmax|; determines the largest angular momentum of the spherical harmonics basis used; to discretise quantities on the atomic spheres and |ddx__ddx_n_lebedev| determines the; number of points of the Lebedev angular grid used for integration on the spheres.; |ddx__ddx_n_lebedev| should be chosen higher than |ddx__ddx_solute_spherical_points|; and the defaults are usually good. .. include:: autodir_options_c/ddx__ddx_solute_radial_points.rst; .. include:: autodir_options_c/ddx__ddx_solute_spherical_points.rst; .. include:: autodir_options_c/ddx__ddx_lmax.rst; .. include:: autodir_options_c/ddx__ddx_n_lebedev.rst. Iterative solver parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters determine how the forward and adjoint linear systems; of the solvation model are solved. Usually these parameters do not need; to be changed. Occasionally |ddx__ddx_solvation_convergence| might need to be adapted,; e.g. if only a very crude or a highly accurate SCF solution is targeted. .. include:: autodir_options_c/ddx__ddx_diis_max_vecs.rst; .. include:: autodir_options_c/ddx__ddx_maxiter.rst; .. include:: autodir_options_c/ddx__ddx_solvation_convergence.rst. Further keywords for ddx; ~~~~~~~~~~~~~~~~~~~~~~~~. These parameter should rarely require changes.; In particular |ddx__ddx_eta|, |ddx__ddx_shift| and |ddx__ddx_logfile|; are expert parameters and should not be altered beyond debugging. .. include:: autodir_options_c/ddx__ddx_eta.rst; .. include:: autodir_options_c/ddx__ddx_fmm_local_lmax.rst; .. include:: autodir_options_c/ddx__ddx_fmm_multipole_lmax.rst; .. include:: autodir_options_c/ddx__ddx_fmm.rst; .. include:: autodir_options_c/ddx__ddx_incore.rst; .. include:: autodir_options_c/ddx__ddx_logfile.rst; .. include:: autodir_options_c/ddx__ddx_shift.rst. .. _`cmake:ddx`:. How to configure ddx for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:10233,adapt,adapted,10233,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['adapt'],['adapted']
Energy Efficiency,"ecome unstable to unrestriction. This singularity yields to extremely large or ; small eigenvalues of the one-particle density matrix (OPDM). These abnormal eigenvalues may lead to unphysical ; molecular properties such as vibrational frequencies. However, orbital-optimized MP2 (also MP3); will solve this N-representability problem by disregarding orbital response contribution of one-particle; density matrix. . Although the performance of coupled-cluster singles and doubles (CCSD) and orbital-optimized ; CCD (OD) is similar, the situation is different in the case of triples corrections, especially at stretched ; geometries [Bozkaya:2012:odtl]_. Bozkaya and Schaefer demonstrated that orbital-optimized coupled cluster based ; triple corrections, especially those of asymmetrics, provide significantly better potential energy curves than ; CCSD based triples corrections. . A lot of the functionality in OCC has been enabled with Density Fitting (DF) and Cholesky ; Decomposition (CD) techniques, which can greatly speed up calculations and reduce memory; requirements for typically negligible losses in accuracy. **NOTE**: As will be discussed later, all methods with orbital-optimization functionality have non-orbital ; optimized counterparts. Consequently, there arise two possible ways to call density-fitted MP2. In most; cases, users should prefer the DF-MP2 code described in the :ref:`DF-MP2 <sec:dfmp2>` section because it is; faster. If gradients are needed (like in a geometry optimization), then the procedures outlined hereafter; should be followed.; In general, choose the desired method, reference, and ERI type (*e.g.*,; ``set reference uhf``, ``set mp2_type df``, ``opt('mp2')``) and the most; efficient module will be selected automatically, according to; :ref:`Cross-module Redundancies <table:managedmethods>`. Thus, there arise a few categories of method, each with corresponding input keywords:. * Orbital-optimized MP and CC methods with conventional integrals (:ref:`O",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:4601,reduce,reduce,4601,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['reduce'],['reduce']
Energy Efficiency,"ectionauthor:: Edward G. Hohenstein and J\ |e_acute|\ r\ |o_circumflex|\ me F. Gonthier. *Module:* :ref:`Keywords <apdx:sapt>`, :ref:`PSI Variables <apdx:sapt_psivar>`, :source:`LIBSAPT_SOLVER <psi4/src/psi4/libsapt_solver>`. .. warning:: In rare cases with systems having a high degree of symmetry, ; |Psifour| gives (very obviously) wrong answers for SAPT computations ; when the specification is in Z-matrix format. Use a Cartesian representation ; to avoid this problem. .. caution:: In early versions (notably |Psifour| alpha circa 2011; and before), frozen core was implemented incompletely and for; only selected terms. Comparisons with papers published using early; |PSIfour| SAPT code may show discrepancies of 0.01-0.10 kcal/mol in; individual terms, particularly :math:`E_{exch}^{(11)}` and :math:`E_{exch}^{(12)}`. .. caution:: January 28th 2016, the default for all NAT_ORBS options; was changed to true. Hence the code now by default uses natural; orbital truncation to speed up the evaluation of energy terms; wherever possible, according to literature recommendations.; In early July 2016, some total SAPT energy psivars were renamed. .. caution:: February 7, 2020, a missing term in :math:`E^{(30)}_{ind}` was added, causing; possible discrepancies with prior versions of the code on the order of; 0.01 kcal/mol. See https://github.com/psi4/psi4/issues/1677. .. caution:: August 2021, the number of frozen core orbitals used in the dMP2 computations; is now standardized. Specifically, we now rigorously enforce that the number of core orbitals ; frozen in dimer computations is equal to the sum of frozen orbitals of each monomer. Prior to; this, a discrepency between these values was possible when one of the monomers was (exclusively) ; a charged alkali metal. . .. _`sec:saptfitA`:. .. caution:: May 2022 c. v1.6, the default for |sapt__df_basis_elst|; changed from the value of |sapt__df_basis_sapt| (which itself; defaults to the RI of the orbital basis) to the JKFIT of the or",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:2355,energy,energy,2355,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"ecule contains fragments but is not conveniently ordered for the; ``--`` marker, the :py:func:`~psi4.driver.wrapper_autofrag.auto_fragments` function can be applied, as shown in; :srcsample:`pywrap-basis`, to return as active molecule the previous; active molecule, only fragmented. Advanced Python; ===============. A named molecule in an input file is a full-fledged instance of the; powerful C++ :py:class:`~psi4.core.Molecule` class. Thus, all member; functions (that have been exported via pybind11) documented thereat; are accessible through the handle :samp:`{option_molecule_name}` in; :samp:`molecule {optional_molecule_name} \\{...\\}`. * The molecular geometry can be got and set and manipulated as a; :py:class:`~psi4.core.Matrix` object. Below shows how to access; coordinates in an input file in Python. ::. molecule formaldehyde {; C 0.0 0.0 0.0; O 0.0 1.2 0.0; H -0.8 -0.3 0.0; H 0.8 -0.3 0.0 # set geometry in angstroms; }. formaldehyde.update_geometry() # update the molecule internals since pre-energy()-like call; formaldehyde.print_out() # print molecule to output file; geom1psi = formaldehyde.geometry() # get coordinates in bohr as a psi4.Matrix. geom1psi.print_out() # print coordinates array to output file; geom1py = mat2arr(geom1psi) # get coordinates as a Python array; print geom1py # print coordinates to screen. geom2py = [[ 0.0, 0.0, 0.0],; [ 0.0, 1.5, 0.0],; [-0.8, -0.3, 0.0],; [ 0.8, -0.3, 0.0]] # define alternate coordinates in angstroms as Python array. geom2psi = psi4.Matrix(4, 3) # initialize psi4.Matrix; geom2psi.set(geom2py) # load Python array into psi4.Matrix; geom2psi.scale(1.0/psi_bohr2angstroms) # scale into bohr; geom2psi.print_out() # print alternate coord array to output file. formaldehyde.set_geometry(geom2psi) # load alternate coordinates into molecule; formaldehyde.update_geometry() # update the molecule internals; formaldehyde.print_out() # print new molecule to output file; compare_values(28.9950517332, formaldehyde.nuclear_repulsion_e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:22188,energy,energy,22188,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"ed in the ``.cube`` file), set up the visualization, and render a; ``.png`` image of the scene. Generally the view orientation and some specific; details of the ``.pymol`` files require some small tweaks to permit; publication-quality renderings. .. image:: /VA.png; :align: center; :scale: 50%; :alt: ESP of monomer A. Adding Point Charges to F/I-SAPT Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. Citation: Alenaizan, A; Cheney, D. L.; Sherrill, C. D. Electrostatically embedded; .. symmetry adapted pertubration theory. In preparation. Point charges can be added to the interacting subsystems A and B as well; as to the ``linking`` fragment C. Briefly, the interaction between the point charges in A(B); and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-C and B-C linking electron pairs is controlled by the |fisapt__fisapt_link_assignment|; keyword. The default setting ``fisapt_link_assignment c`` assigns the entire pair to the linker C together with; a +1 nuclear charge from the connecting atoms of A/B to preserve the electrical neutrality of each fragment.; However, as already noticed in [Parrish:2015:051103]_, such a partitioning might result in unphysical dipole; moments at the interfragment boundaries. Imagine, for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:16374,charge,charges,16374,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,3,"['charge', 'energy']","['charge-charge', 'charges', 'energy']"
Energy Efficiency,"ed in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. Notes on Options; ================. .. note:: The options referred to in the :ref:`sec:methods` section below; and indexed in :ref:`apdx:options_c_module` are placed in ``set`` blocks as; described in :ref:`sec:jobControl`, not as arguments to a Python function; (like ``energy()``). .. note:: All |PSIfour| keyword names and values are insensitive to case, both; those that are placed in ``set`` blocks and as Python function arguments.; The few exceptions are documented for the :py:func:`~psi4.driver.wrapper_database.database` function,; where case structure must match the database file. .. _`op_c_bool`:; .. _`op_c_boolean`:; .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_c_conv`:; .. note:: Certain convergence and tolerance keywords, of type *double* (real numbers),; may be specified using either a real number or an integer; and integer *X* is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to :math:`10^{-6} E_h`, the user may set the ``e_conve",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst:1332,energy,energy,1332,doc/sphinxman/source/notes_c.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst,1,['energy'],['energy']
Energy Efficiency,"ed methods.; |PSIfour| implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian :math:`H_{\rm X2C}`:. .. math:: H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}. that is a sum of a kinetic energy (:math:`T_{\rm X2C}`) and potential energy; (:math:`V_{\rm X2C}`) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114]_.; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass--Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos' ANO basis sets. .. note:: See also :ref:`sec:DKH` for another relativistic Hamiltonian. .. _`sec:ScalarRelativistic`:. A First Example; ^^^^^^^^^^^^^^^. The following is a simple input that will perform a Hartree--Fock calculation; using the X2C Hamiltonian. ::. molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result::. @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy::. @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -100.0192889141131474. Basis sets options; ^^^^^^^^^^^^^^^^^^. The X2C module in |PSIfour| supports different combinations of basis set.; By default, if the input file specifies only |mints__basis|, then the X2C; module will solve the modified Dirac equation in an uncontracted basis and then; recontract the X2C Hamiltonian in the original basis.; Alternatively, the user can use |globals__basis_relativistic| to specify a different; ba",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:2450,energy,energy,2450,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,1,['energy'],['energy']
Energy Efficiency,"ed number of ""smoke"" tests is; generally sufficient to verify an installation. * From the executable. .. code-block:: bash. # smoke tests only in serial; psi4 --test; # smoke tests only in parallel; psi4 --test -n`getconf _NPROCESSORS_ONLN`; # most tests; psi4 --test full. * From the library (|PSIfour| must be detectable as a Python; module. See setup at :ref:`faq:psi4psiapipath`; if needed.). .. code-block:: bash. # smoke tests only; python -c ""import psi4; psi4.test('smoke')""; # most tests; python -c ""import psi4; psi4.test()"". * From pytest directly. If package ``pytest-xdist`` is installed, can run in parallel. .. code-block:: bash. # smoke tests only; pytest {prefix}/lib/{PYMOD_INSTALL_LIBDIR}/psi4/tests/ -m smoke -n auto; # all tests; pytest {prefix}/lib/{PYMOD_INSTALL_LIBDIR}/psi4/tests/ -n auto. Output looks something like the below. ``PASSED`` in green is good; (means test ran correctly); ``SKIPPED`` in yellow is good (means that; not all software required for test is available); ``XPASS`` or ``XFAIL``; in yellow is fine (unexpected pass or expected fail happens when we; include tests that need particular conditions (*e.g.*, multiple cores); to run correctly); ``FAILED`` in red is bad. ::. test_addons.py::test_gdma PASSED; test_addons.py::test_mrcc SKIPPED; test_addons.py::test_chemps2 PASSED; test_addons.py::test_dftd3 PASSED; test_addons.py::test_libefp PASSED; test_addons.py::test_pcmsolver PASSED; test_addons.py::test_erd PASSED; test_addons.py::test_simint PASSED; test_addons.py::test_json PASSED; test_addons.py::test_cfour SKIPPED; test_addons.py::test_v2rdm_casscf PASSED; test_addons.py::test_grimme_3c PASSED; test_addons.py::test_dkh PASSED; test_psi4.py::test_psi4_basic PASSED; test_psi4.py::test_psi4_cc PASSED; test_psi4.py::test_psi4_cas PASSED; test_psi4.py::test_psi4_dfmp2 PASSED; test_psi4.py::test_psi4_sapt PASSED; test_psi4.py::test_psi4_scfproperty PASSED. .. _`faq:writepsi4`:. How to refer to Psi4; --------------------. Ways to refer to |P",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:64586,green,green,64586,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['green'],['green']
Energy Efficiency,"ed with the; Axilrod-Teller-Muto model:. .. math:: E_{disp}^{(3)}=-\frac{1}{6}\sum_{A\neq B\neq C}\frac{C_{9}^{ABC}(3\cos{\theta_a}\cos{\theta_b}\cos{\theta_c}+1)}{(r_{AB}r_{BC}r_{AC})^{3}}f_{damp}(\bar{r}_{ABC}); ; where :math:`\theta_a` is the angle at atom A corresponding to the triangle formed by atoms A, B, and C,; and :math:`\bar{r}_{ABC}` is the geometric mean of the corresponding atomic-pair distances.; The dispersion coefficients are defined as. .. math:: C_{9}^{ABC} = \sqrt{C_{6}^{AB}C_{6}^{BC}C_{6}^{AC}}. See the `DFT-D3 documentation <https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/man.pdf>`_ ; for more details. For now, the three-body correction can be called by using the :py:func:`~psi4.core.Molecule.run_dftd3`; function with `d3-atmgr` as the passed functional string. ; For example, the three-body ATM dispersion correction for a neon trimer could; be computed with::. molecule ne3 {; Ne 0.0 0.0 0.0; Ne 0.0 0.0 1.0; Ne 0.0 1.0 1.0; }; ne.update_geometry(); energy = m.run_dftd3('d3-atmgr', dertype=0); print(energy). Since v1.7, it is preferred to use ``s-dftd3`` for ATM since the 3-body can be run concurrent; with the 2-body contribution. .. rubric:: Footnotes. .. [#f0] Note that there are functionals with these extensions (*e.g.*, wB97X-D) that, ; not being Grimme corrections, won't follow this table exactly.; ; .. [#f1] [Grimme:2004:1463]_; .. [#f2] [Grimme:2006:1787]_; .. [#f3] [Grimme:2010:154104]_; .. [#f4] [Grimme:2011:1456]_; .. [#f5] [Smith:2016:2197]_; .. [#f6] [Hujo:2011:3866]_; .. [#f7] [Chai:2010:6615]_; .. [#f8] [Pernal:2009:263201]_; .. [#f9] [Podeszwa:2010:550]_. .. [#f10] Keyword not used for user-defined functionals where the ``dft_dict[""dispersion""][""params""]``; is easily editable for this purpose. See :ref:`sec:dftdictbuilder`. .. [#f11] [Caldeweyher:2019:154122]_. A few practical examples:. * DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with defaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:22247,energy,energy,22247,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"edfmp2]); ; import pandas as pd; df = pd.DataFrame(table, columns = [""E(SCF)"", ""E(SCS)"", ""E(DFMP2)""], index=rows); print(df). # E(SCF) E(SCS) E(DFMP2); # (0.9, 100) -76.020680 -76.217006 -76.221189; # (0.9, 102) -76.021305 -76.217439 -76.221605; # (1.0, 100) -76.021264 -76.224987 -76.228727; # (1.0, 102) -76.021460 -76.224946 -76.228668; # (1.1, 100) -75.990195 -76.201891 -76.205087; # (1.1, 102) -75.990085 -76.201498 -76.204676. .. _`sec:wrappers`:. Python Wrappers; ===============. The Python foundations of the |PSIfour| driver and Psithon syntax permit; many commonly performed post-processing procedures to be integrated into; the |PSIfour| suite. . As seen in the neon dimer example from the :ref:`tutorial <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies between two molecules. For; example, ::. energy('mp2', bsse_type='cp'). will compute the counterpoise-corrected density-fitted MP2 interaction energy; between two molecules. |PSIfour| also provides the :py:func:`~psi4.driver.cbs` wrapper,; which automatically computes a complete-basis-set extrapolation (and; automatically sets up the computations with different basis sets required to; do the extrapolation). For example,::. # all equivalent. energy('mp2', corl_basis='cc-pv[dt]z', corl_scheme=corl_xtpl_helgaker_2). energy('mp2/cc-pv[dt]z'). will compute a 2-point Helgaker extrapolation of the correlation energy; using the cc-pVDZ and cc-pVTZ basis sets (with method MP2) and add this; extrapolated correlation energy to the Hartree--Fock energy in the; largest basis (cc-pVTZ). :py:func:`~psi4.driver.cbs` can; be configured behind-the-scenes with explicit arguments, as in the; first example, or the convenience syntax of the equivalent second; example can be used. Another very useful and powerful feature of |PSIfour| is the ability; to compute results on entire databases of molecules at a time,; as provided by ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:15619,energy,energy,15619,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"educed by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]_. The most demanding; steps in the CCSD and (T) algorithms scale as :math:`{\cal{O}}(o^2v^4)`; and :math:`{\cal{O}}(o^3v^4)`, where :math:`o` and :math:`v` represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of :math:`(v; / v_{FNO})^4`, where :math:`v_{FNO}` represents the number of virtual; orbitals retained after the FNO truncation. The general outline for the FNO procedure in |Psifour| is:. (i) construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM) ; (ii) diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; (iii) based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; (iv) project the virtual-virtual block of the Fock matrix onto the truncated space; (v) construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; (vi) proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; |Psifour| can be found in [DePrince:2013:293]_\. FNO computations; are controlled through the keywords |fnocc__nat_orbs| and; |fnocc__occ_tolerance|, or by prepending a valid method name with ""fno"" in; the energy call as ::. energy('fno-ccsd(t)'). If you wish to specify the number of active natural orbitals manually, use; the keyword |fnocc__active_nat_orbs|. This keyword will override the ; keyword |fnocc__occ_tolerance|. QCISD(T), CCSD(T), MP4, and CEPA; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The FNOC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:3582,reduce,reduced,3582,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['reduce'],['reduced']
Energy Efficiency,"ef:`sec:mcscf`. As mentioned above, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This user's; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix :ref:`apdx:detci`. For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, *etc.*,; with the common name for that CI wavefunction, like ``energy('cisd')`` ; for a CISD single-point energy. The Python driver; recognizes ``cisd``, ``cisdt``, and ``cisdtq``. As mentioned above, codes; written specifically for CISD will be more efficient than DETCI for a ; CISD computation, and ``energy('cisd')`` by default will call other,; more efficient modules. To force a CISD computation with DETCI,; set |globals__qc_module| = DETCI. . Higher order single-reference CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ``ci6``. A full; CI can be specified by ``fci``. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like ``energy('detci')``. The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially |detci__ex_level|) are set appropriately. Some; examples of single-refence C",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:5954,energy,energy,5954,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,2,['energy'],['energy']
Energy Efficiency,"eference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:391886,energy,energy,391886,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"eference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481287,energy,energy,481287,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"eference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimizatio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138704,energy,energy,138704,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"eference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:398929,energy,energy,398929,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"el of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3] for atom n, computed using the MBIS charge; partitioning scheme. Free atom densities are computed at the same; level of theory as the parent MBIS calculation, with UHF turned on; as needed. .. psivar:: MBIS RADIAL MOMENTS <R^3>. Per-atom expectation value of r^3 [a0^3], equivalent to the volume; of the MBIS-partitioned density. .. psivar:: MBIS VALENCE WIDTHS. Per-atom density width [a0] of the associated valence charge computed; from an MBIS partitioned density. Equivalent to the inverse of the; linear decay rate of the atomic density. .. psivar:: MBIS VOLUME RATIOS. Per-atom ratio between the atomic volume (<R^3>) and the free-atomic; volume, unitless. .. psivar:: MCSCF TOTAL ENERGY. Multiconfigurational self-consistent-field energy [E_h] in the course of; a configuration interaction computation. May be single-root or state-averaged. .. psivar:: mtd DIPOLE. Dipole array [e a0] for the named method, (3,). .. psivar:: mtd QUADRUPOLE. Redundant quadrupole array [e a0^2] for the named method, (3, 3). .. psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:38108,charge,charge,38108,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['charge'],['charge']
Energy Efficiency,"elds; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50728,energy,energy,50728,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"electrostatics, exchange, induction, and dispersion) represent what we; regard as the best estimate available at a given level of SAPT computed; from a subset of the terms of that grouping. The groupings shown above are; not unique and are certainly not rigorously defined. We regard the groupings ; used in |PSIfour| as a ""chemist's grouping"" as opposed to a more; mathematically based grouping, which would group all exchange terms ; (*i.e.* :math:`E_{exch-ind,resp}^{(20)}`, :math:`E_{exch-disp}^{(20)}`, *etc.*) in; the exchange component. A final note is that both ``Disp22(T)``; and ``Est.Disp22(T)`` results appear if MP2 natural orbitals are ; used to evaluate the triples correction to dispersion. The ``Disp22(T)`` ; result is the triples correction as computed in the truncated NO basis; ; ``Est.Disp22(T)`` is a scaled result that attempts to recover; the effect of the truncated virtual space and is our best estimate. The ``Est.Disp22(T)``; value is used in the SAPT energy and dispersion component (see [Hohenstein:2010:104107]_ ; for details). Finally, this part of the output file contains sSAPT0, a special scaling; scheme of the SAPT0 energy that can yield improved results and was described in more details; above. The corresponding scaled total component energies are printed as well. As mentioned above, SAPT results with scaled exchange are also optionally available; by setting the |sapt__exch_scale_alpha| keyword. When activated, the unscaled results are; printed first as reported above, and then repeated with exchange scaling for all ; relevant terms: :: . SAPT Results ==> ALL S2 TERMS SCALED (see Manual) <==. Scaling factor (Exch10/Exch10(S^2))^{Alpha} = 1.007200; with Alpha = 1.000000; --------------------------------------------------------------------------------------------------------; Electrostatics -13.06509118 [mEh] -8.19846883 [kcal/mol] -34.30239689 [kJ/mol]; Elst10,r -13.37542977 [mEh] -8.39320925 [kcal/mol] -35.11719087 [kJ/mol]; Elst12,r 0.04490350 [",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:38423,energy,energy,38423,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,en the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:47313,energy,energy,47313,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ence': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:390404,energy,energy,390404,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:391137,energy,energy,391137,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:391316,energy,energy,391316,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:393737,energy,energy,393737,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87702,energy,energy,87702,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:397447,energy,energy,397447,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:398180,energy,energy,398180,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ence': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:398359,energy,energy,398359,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ences; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7459,energy,energy,7459,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CC\ *n*\ -1b) level of theory. .. psivar:: CCSDT-3 TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCn-3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CC\ *n*\ -3) level of theory. .. psivar:: CCSD(T)_L TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(\ *n*\ -1)(\ *n*\ )L level of theory. .. psivar:: CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the modified CCSDT(Q) level of theory. .. psivar:: CEPA(0) DIPOLE. Dipole array [e a0] for the coupled electron pair approximation variant 0 level of theory, (3,). .. psivar:: CEPA(0) QUADRUPOLE. Redundant quadrupole array [e a0^2] for the coupled electron pair approximation variant 0 level of theory, (3, 3). .. psivar:: CEPA(0) TOTAL ENERGY; CEPA(0) CORRELATION ENERGY; CEPA(1) TOTAL ENERGY; CEPA(1) CORRELATION ENERGY; CEPA(2) TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested variant of coupled electron pair approximation level of theory. .. psivar:: CFOUR ERROR CODE. The non-zero return value from a Cfour execution. .. psivar:: CI DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory, (3,). .. psivar:: CI QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction leve",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:22871,energy,energy,22871,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sds",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42426,energy,energy,42426,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46927,energy,energy,46927,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47924,energy,energy,47924,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bcc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54663,energy,energy,54663,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:325033,energy,energy,325033,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482895,energy,energy,482895,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483094,energy,energy,483094,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526283,energy,energy,526283,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ensity_tolerance|, and; |scf__cosx_basis_tolerance| keywords, respectively. |scf__cosx_ints_tolerance|; is the most consequential of the three thresholds in both cost and accuracy.; This keyword determines screening of negligible one-electron integrals.; |scf__cosx_density_tolerance| controls the threshold for significant; shell pairs in the density matrix. Lastly, |scf__cosx_basis_tolerance| is; a cutoff for the value of basis functions at grid points. This keyword is; used to determine the radial extent of the each basis shell, and it is the; COSX analogue to |scf__dft_basis_tolerance|. The |scf__incfock| keyword (defaults to ``false``) increases performance; by constructing the Fock matrix from differences in the density matrix, which; are more amenable to screening. This option is disabled by default because of; potential SCF convergence issues, particularly when using diffuse basis functions.; The |scf__cosx_overlap_fitting| keyword (defaults to ``true``) reduces numerical; integration errors using the method described in [Izsak:2011:144105]_ and is; always recommended. .. _`sec:scflink`:. Linear Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:41434,reduce,reduces,41434,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduces']
Energy Efficiency,ent [E_h]; for the full MP4 level of theory. Quantity :psivar:`MP4 CORRELATION; ENERGY` / :psivar:`MP4(SDTQ) CORRELATION ENERGY`; is left-hand term in Eq. :eq:`MP4terms`. .. math:: E_{\text{MP4}} = E_{\text{MP4(SDQ)}} + E_{\text{MP4(T)}}; :label: MP4terms. .. psivar:: MPn TOTAL ENERGY; MPn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled |MollerPlesset| perturbation theory level.; *n* is MP perturbation order. .. psivar:: MP2 DOUBLES ENERGY; MP2.5 DOUBLES ENERGY; MP3 DOUBLES ENERGY; CEPA(0) DOUBLES ENERGY; CEPA(1) DOUBLES ENERGY; CEPA(2) DOUBLES ENERGY; CEPA(3) DOUBLES ENERGY; ACPF DOUBLES ENERGY; AQCC DOUBLES ENERGY; CISD DOUBLES ENERGY; QCISD DOUBLES ENERGY; REMP2 DOUBLES ENERGY; LCCD DOUBLES ENERGY; CCD DOUBLES ENERGY; LCCSD DOUBLES ENERGY; CCSD DOUBLES ENERGY; OMP2 DOUBLES ENERGY; OMP2.5 DOUBLES ENERGY; OMP3 DOUBLES ENERGY; OREMP2 DOUBLES ENERGY; OLCCD DOUBLES ENERGY. The doubles portion [E_h] of the named correlation energy; including same-spin and opposite-spin correlations. .. psivar:: MP2 SINGLES ENERGY; MP2.5 SINGLES ENERGY; MP3 SINGLES ENERGY; CEPA(0) SINGLES ENERGY; CEPA(1) SINGLES ENERGY; CEPA(2) SINGLES ENERGY; CEPA(3) SINGLES ENERGY; ACPF SINGLES ENERGY; AQCC SINGLES ENERGY; CISD SINGLES ENERGY; QCISD SINGLES ENERGY; REMP2 SINGLES ENERGY; LCCD SINGLES ENERGY; CCD SINGLES ENERGY; LCCSD SINGLES ENERGY; CCSD SINGLES ENERGY; OREMP2 SINGLES ENERGY; OLCCD SINGLES ENERGY. The singles portion [E_h] of the named correlation energy.; Zero except in ROHF. .. psivar:: MP2 SAME-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; CEPA(0) SAME-SPIN CORRELATION ENERGY; CEPA(1) SAME-SPIN CORRELATION ENERGY; CEPA(2) SAME-SPIN CORRELATION ENERGY; CEPA(3) SAME-SPIN CORRELATION ENERGY; CISD SAME-SPIN CORRELATION ENERGY; QCISD SAME-SPIN CORRELATION ENERGY; ACPF SAME-SPIN CORRELATION ENERGY; AQCC SAME-SPIN CORRELATION ENERGY; REMP2 SAME-SPIN CORRELATION ENERGY; LCCD SAME-SP,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:42115,energy,energy,42115,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ent array, (3 * {nat}, 3). .. psivar:: SCF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the SCF stage, (3 * {nat}, 3 * {nat}). .. psivar:: SCF STABILITY EIGENVALUES. Array of eigenvalues from UHF or ROHF stability analysis. .. psivar:: SCS-CCSD TOTAL ENERGY; SCS-CCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the CCSD-like method formed by reweighting :psivar:`CCSD DOUBLES ENERGY`; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2-VDW TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:59780,energy,energy,59780,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ent for each pair; of occupied orbitals. For a given occupied orbital pair ``ij``, all virtuals are; orthogonal and canonical, but virtuals belonging to different pair domains; may not be orthogonal. The following expression is used to evaluate the energy of a given set of amplitudes:. .. math::; :label: Energy. E^{(2)} &= \sum_{i,j} e_{ij}, \\; e_{ij} &= \sum_{a, b}((ia|jb) + R_{ij}^{ab})(2t_{ij}^{ab} - t_{ij}^{ba}). The error in :math:`E^{(2)}` scales quadratically with the error in the amplitudes. No local approximations have been made so far, and this iterative approach can; be used to exactly determine :math:`E^{(2)}` with :math:`{\cal O}(N^5)` cost.; In DLPNO-MP2, the first local approximation is to screen distant, non-interacting; orbital pairs ``ij``. Orbital pairs are screened if below both an overlap criteria:. .. math::; :label: Differential Overlap Integral. DOI_{ij} \equiv \sqrt{\int d\mathbf{r} | \chi_{i}(\mathbf{r}) | ^{2} | \chi_{j}(\mathbf{r}) | ^{2}}, . and a pair energy estimate: . .. math::; :label: Dipole Approximation. e_{ij}^{approx} = -\frac{4}{R^{6}} \sum_{a_{i} \in [i],b_{j} \in [j]} \frac{ (2 \langle i | \mathbf{r} | a_{i} \rangle \langle j | \mathbf{r} | b_{j} \rangle)^{2}}{\epsilon_{a_{i}} + \epsilon_{b_{j}} - f_{ii} - f_{jj}},. in which small domains of virtual orbitals are used for each local MO. As a; result, an asymptotically linear number of ``ij`` pairs enter the local MP2; equations, and the approximate pair energy of neglected pairs is added to; the final energy. The second major local approximation in DLPNO-MP2 is the truncation of the virtual; space. Initially, exchange integrals are calculated in the LMO/PAO basis using the; standard density fitting approach:. .. math::; :label: Exchange. (ia|jb) = \sum_{K,L \in [ij]} (ia|K)[\mathbf{J}^{-1}]_{KL}(L|jb). This is done with linear scaling effort by exploiting the locality of the LMOs, PAOs,; and auxiliary basis functions.; Solving the iterative local MP2 equations in the LMO/PAO ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:6240,energy,energy,6240,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"ent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:5218,energy,energy,5218,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"ent(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by default, we have to tell it that ``basis_set`` is a; Python variable, not a string, by prefixing it with a dollar sign. . The geometry specification supports delayed initialization of variable,; which permits potential energy scans. As an example, we can scan both the; angle and bond length in water::. molecule h2o{; O; H 1 R; H 1 R 2 A; }; ; Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:12610,energy,energy,12610,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"ent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13281,energy,energy,13281,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ents are found as the generalized eigenvectors of the Fock Matrix,. .. math:: F^\alpha C^\alpha = S C^\alpha \epsilon^\alpha. The eigenvalues :math:`\epsilon` are the orbital energies, and the metric matrix; :math:`S` is the AO-basis overlap matrix. .. math:: S_{\mu\nu} = (\mu | \nu ). Note that the Fock Matrix depends on the density (both alpha and beta), and; therefore the orbitals. Because of this, SCF is a nonlinear procedure, which; terminates when the generating orbitals are self-consistent with the Fock matrix; they generate. The formation of the Coulomb matrix :math:`J` and the exchange matrix; :math:`K^{\alpha}` dominate the computational effort of the SCF procedure. For; very large systems, diagonalization of the Fock matrix can also present a; significant hurdle. .. _`sec:scfinput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a Hartree--Fock computation is a molecule block, basis set; option, and a call to ``energy('scf')``::. molecule {; He; }. set basis sto-3g. energy('scf'). This will run a Restricted Hartree--Fock (RHF) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6; energy and density convergence criteria (since single-point, see; :ref:`SCF Convergence & Algorithm <table:conv_scf>`), a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more; information on any of these options, see the relevant section below. .. _`sec:scfsymm`:. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of Hartree--Fock; theory, including:. Restricted Hartree--Fock (RHF) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Hartree--Fock (UHF); Appropriate for most open-shell systems and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:8983,energy,energy,8983,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"equested. Quantity :math:`E_{\text{-D}}`; in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; When dispersion parameters are untweaked for a functional and dispersion; level, labeled QCVariable also defined. .. psivar:: DOUBLE-HYBRID CORRECTION ENERGY. The scaled MP2 correlation energy correction [E_h] appended to an; underlying functional when a DH-DFT method is requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually ato",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:33951,energy,energy,33951,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"er two papers: [Parrish:2014:044115]_ on our much-earlier; ""atomic"" SAPT (A-SAPT) and [Parrish:2014:4417]_ on the finished ""functional; group"" SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]_. I-SAPT; is explained in [Parrish:2015:051103]_. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in `Parrish's thesis; <https://smartech.gatech.edu/handle/1853/53850>`_. .. A video tutorial series for the use of the FISAPT module is available `here; .. <https://www.youtube.com/playlist?list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Specific videos in the series include:; ..; .. - `F-SAPT#1; .. <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of F-SAPT to analyze the; .. distribution of the intermolecular interaction energy components between the; .. various hydroxyl and phenyl moieties of the phenol dimer.; .. - `F-SAPT#2; .. <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the order-1 F-SAPT analysis with PyMol and perform a; .. ""difference F-SAPT"" analysis; .. - `I-SAPT#1; .. <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of I-SAPT to analyze the interaction between the two phenol; .. groups in a 2,4-pentanediol molecule.; .. - `I-SAPT#2; .. <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the density fields and ESPs of the various moieties of; .. the I-SAPT embedding scheme with PyMol; .. - `F/I-SAPT Options; .. <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Details all of the more-advanced options in the F/I-SAPT cod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:3355,energy,energy,3355,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:11027,energy,energy,11027,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:16285,energy,energy,16285,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:20107,energy,energy,20107,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:41613,energy,energy,41613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42984,energy,energy,42984,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46729,energy,energy,46729,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47111,energy,energy,47111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48482,energy,energy,48482,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172969,energy,energy,172969,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'refere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226703,energy,energy,226703,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277864,energy,energy,277864,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er:2014:094106]_). .. math:: E_{sSAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; p_{EX}(3.0) E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + p_{EX}(3.0) E_{exch-disp}^{(20)} ; + \delta_{HF}^{(2)}; :label: sSAPT0. where :math:`\delta_{HF}^{(2)}` is computed *without* any scaling. Please note that ; sSAPT0 is thus not the same as requesting ``exch_scale_alpha 3.0``, and that the; scaling is automatically performed by requesting ``energy('ssapt0')``. A First Example; ^^^^^^^^^^^^^^^. The following is the simplest possible input that will perform all; available SAPT computations (normally, you would pick one of these methods,; not all of them). ::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis aug-cc-pvdz; 	; 	energy('sapt0'); 	energy('sapt2'); 	energy('sapt2+'); 	energy('sapt2+(3)'); 	energy('sapt2+3'). The SAPT module uses the standard |PSIfour| partitioning of the dimer; into monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT comp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:14294,energy,energy,14294,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,5,['energy'],['energy']
Energy Efficiency,"eraged coupled-pair functional level of theory, (3,). .. psivar:: ACPF QUADRUPOLE. Redundant quadrupole array [e a0^2] for the averaged coupled-pair functional level of theory, (3, 3). .. psivar:: ACPF TOTAL ENERGY; ACPF CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged coupled-pair functional level of theory. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY. The excitation energy [E_h] from ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY; TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY; TD-fctl ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* (which is of irrep *i*).; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION. The excitation energy [E_h] from the ground state to root *n*, and the; transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state, which is of irrep *h*, to root *n* within irrep *i*.; DFT functional labe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:3116,energy,energy,3116,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"eral Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:prog_tour`:. ==========================================================; General layout of the core: where new C++ code should live; ==========================================================. New integral operators; ----------------------. Most of the heavy lifting in |PSIfour| is handled by libmints, which can be; found in the :source:`psi4/src/psi4/libmints` directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; :source:`psi4/src/psi4/libmints/wavefunction.h` is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods; ----------------------. A new method that is not a modification of existing code belongs in its own; folder in :source:`psi4/src/psi4`; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to :source:`psi4/src/psi4/CMakeLists.txt`. There are also a number of; variables that can be exported to be available to the user, as detailed in; :ref:`sec:psiVariables`. To set these variables, the following member of; Wavefunction should be called::. set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; :source:`doc/sphinxman/source/glossary_psivariables.rst`. There are a; number of different helpers to export various quantities from the wavefunction; to exter",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst:1661,energy,energy,1661,doc/sphinxman/source/prog_tour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst,1,['energy'],['energy']
Energy Efficiency,"ere overestimation; of the spin contamination of the true electrons. These are set in the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of the more notable functionals in |PSIfour|, and links; to the complete listing of all functionals of each class are presented below:. :ref:`All Functionals <table",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16918,energy,energy,16918,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"erence': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332099,energy,energy,332099,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erence': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137675,energy,energy,137675,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139094,energy,energy,139094,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:161382,energy,energy,161382,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erged orbital which should be occupied in the fully-optimized SCF solution; has a slightly higher orbital eigenvalue than some other orbital which should be; destined to be a virtual orbital. This results in the virtual orbital being; spuriously occupied for one or more iterations. Sometimes this resolves itself; without help, other times the occupation flips back and forth between two, four,; or more orbitals. This is typically visible in the output as a non-converging; SCF which eventually settles down to steady oscillation between two (or more); different total energies. This behavior can be ameliorated by choosing occupied; orbitals by ""shape"" instead of by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; iterations with the lowest total energy. For an oscillating system where the; lowest total energy occurs on iterations :math:`N,N+2,\ldots`, invoking; |scf__mom_start| ``N`` can often rescue the convergence of the SCF. MOM can; be used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a high",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:26259,energy,energy,26259,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"ergy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:51187,energy,energy,51187,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ergy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{CP}}}. .. psivar:: CURRENT CORRELATION ENERGY. The correlation energy [E_h] corresponding to the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT ENERGY. The total electronic energy [E_h] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. .. psivar:: CURRENT REFERENCE ENERGY. The total electronic energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten), (3,). .. psivar:: CURRENT GRADIENT. The total electronic gradient [E_h/a0] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer, ({nat}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:25897,energy,energy,25897,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107217,energy,energy,107217,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136644,energy,energy,136644,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43799,energy,energy,43799,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-oc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140747,energy,energy,140747,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142765,energy,energy,142765,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275571,energy,energy,275571,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281941,energy,energy,281941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6900,energy,energy,6900,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30154,energy,energy,30154,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167220,energy,energy,167220,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'ro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:168727,energy,energy,168727,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:304086,energy,energy,304086,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"es of 0.01-0.10 kcal/mol in; individual terms, particularly :math:`E_{exch}^{(11)}` and :math:`E_{exch}^{(12)}`. .. caution:: January 28th 2016, the default for all NAT_ORBS options; was changed to true. Hence the code now by default uses natural; orbital truncation to speed up the evaluation of energy terms; wherever possible, according to literature recommendations.; In early July 2016, some total SAPT energy psivars were renamed. .. caution:: February 7, 2020, a missing term in :math:`E^{(30)}_{ind}` was added, causing; possible discrepancies with prior versions of the code on the order of; 0.01 kcal/mol. See https://github.com/psi4/psi4/issues/1677. .. caution:: August 2021, the number of frozen core orbitals used in the dMP2 computations; is now standardized. Specifically, we now rigorously enforce that the number of core orbitals ; frozen in dimer computations is equal to the sum of frozen orbitals of each monomer. Prior to; this, a discrepency between these values was possible when one of the monomers was (exclusively) ; a charged alkali metal. . .. _`sec:saptfitA`:. .. caution:: May 2022 c. v1.6, the default for |sapt__df_basis_elst|; changed from the value of |sapt__df_basis_sapt| (which itself; defaults to the RI of the orbital basis) to the JKFIT of the orbital; basis. This affects SAPT0 and sSAPT0 computed with the :ref:`SAPT; module<sec:sapt>` (the default code for ``energy(""sapt0"")`` that; can also compute higher-order SAPT). Electostatics, exchange,; and induction terms for SAPT0 and sSAPT0 accessed through; ``energy(""sapt0"")`` or ``energy(""ssapt0"")`` change; the dispersion; term does not change. The SAPT0 and sSAPT0 terms accessed as; subsidiary calculations of higher-order SAPT do not change; that is,; the :ref:`SAPT module<sec:sapt>` breaks the consistency of its SAPT0; results. The reasoning and reward behind this change is that the JKFIT; basis better describes the physics (see :ref:`fitting changes <sec:saptfitB>` ) and the; default SAPT0 results",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:3104,charge,charged,3104,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charged']
Energy Efficiency,"escription of the solvent into your calculation; can be achieved in two ways in |PSIfour|, using either the PCMSolver or ddx package.; PCMSolver is based on a boundary-element discretisation [Cances:1998:309]_,; while ddx is based on a domain decomposition approach; [Cances:2013:054111]_ making it linear scaling.; For more details about ddx see the :ref:`section on ddx <sec:ddx>`. Using PCMsolver is achieved instead by setting |globals__pcm| ``true`` in your input file.; |Psifour| understands the additional option |pcm__pcm_scf_type| with possible values ``total``; (the default) or ``separate``.; The latter forces the separate handling of nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging. For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with: ::. pcm = {; Medium {; Nonequilibrium = True; }; }. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The PCMSolver library **cannot** exploit molecular point group symmetry. .. warning:: ROHF with PCM is known **not to work**. See `issue #999 on GitHub <https://github.com/psi4/psi4/issues/999>`_.; For the adventurous, a fix is available in `pull request #953 on GitHub <https://github.com/psi4/psi4/pull/953>`_. .. warning:: Analytic gradients and Hessians **are not** available with PCM. Finite differences will be used; regardless of the ``dertype`` passed to the ``optimize`` function.; See :srcsample:`pcmsolver/opt-fd` for a sample input. The PCM model and molecular cavity are specified in a ``pcm`` section that has; to be explicitly typed in by the user. This additional section follows a syntax; t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:4456,energy,energy,4456,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['energy'],['energy']
Energy Efficiency,"esian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the final step report indicates that optking has not taken |optking__geom_maxiter| steps, such a ; reset has occured. Inspection will show that the step counter was reset to 1 somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five quantities to evaluate the progress of a geometry ; optimization. These are (with their keywords) the change in energy ; (|optking__max_energy_g_convergence|), the maximum element of ; the gradient (|optking__max_force_g_convergence|), the root-mean-square ; of the gradient (|optking__rms_force_g_convergence|), the maximum element; of displacement (|optking__max_disp_g_convergence|), and the ; root-mean-square of displacement (|optking__rms_disp_g_convergence|), ; all in internal coordinates and atomic units. Usually, these options will not ; be set directly. Primary control for geometry convergence lies with the keyword ; |optking__g_convergence| which sets the aforementioned in accordance ; with Table :ref:`Geometry Convergence <table:optkingconv>`. |; |. .. _`table:optkingconv`:. .. table:: Summary of sets of geometry optimization criteria available in |PSIfour|. +-----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+; | |optking__g_convergence| | Max Energy | Max Force | RMS Force | Max Disp | RMS Disp |; +=============================+============================+============================+============================+==========================",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:20512,energy,energy,20512,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"essian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:273036,energy,energy,273036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"essing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:9988,energy,energy,9988,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,2,['energy'],['energy']
Energy Efficiency,"esults, and hence they will only; be possible for very small systems (generally a dozen electrons or less). The simplest way to run high-order perturbation theory computations is to; call, *e.g.*, ``energy('mp10')`` to invoke a MP10 computation or; ``energy('zapt25')`` to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions. For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; ``energy('mp10')`` sets |detci__mpn| to TRUE.; The program uses the Wigner (2n+1) rule by default; (|detci__mpn_wigner| = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the approach in DETCI also allows arbitrary-order ; *active space* coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:13824,energy,energy,13824,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,2,['energy'],['energy']
Energy Efficiency,"etains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7158,energy,energy,7158,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ethod': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'dr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49681,energy,energy,49681,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138293,energy,energy,138293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141942,energy,energy,141942,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157429,energy,energy,157429,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162765,energy,energy,162765,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224722,energy,energy,224722,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:273228,energy,energy,273228,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275763,energy,energy,275763,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:279598,energy,energy,279598,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:282133,energy,energy,282133,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485641,energy,energy,485641,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"example, this pattern can be found in; old versions of the code:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; for (int thread = 1; thread < num_threads; thread++) {; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; }. This builds many objects and the cost can add up. With the new scheme,; integral objects are forced to implement a `clone()` member that can be used as; follows:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; for (int thread = 1; thread < num_threads; thread++) {; ints.push_back(std::shared_ptr<TwoBodyAOInt>(ints[0]->clone()));; }. This method only incurs the cost of creating a single integral object, and; performs much cheaper cloning operations to create the other objects for each; thread. Moreover, if integral objects are created only in the initialization; of each code that uses them, and stored persistently, the cost of integral; object creation is further reduced. One Electron Integrals in |PSIfour|; -----------------------------------. After version 1.5, we started transitioning the one electron integral code over to; use Libint2 instead of the old handwritten Obara-Saika code. There are a; number of reasons motivating this switch. For methods requiring; potentials and fields evaluated at many external sites, such as PCM and; polarizable embedding, the efficiency of the one electron integrals can be rate; limiting. We also started to introduce integral screening, and it is important; to balance the screening used for one- and two-electron terms carefully, so this; is a good opportunity to re-evaluate the code. Finally, given the complexity; of the OS recursion code, the switch to an external library leaves a more; compact codebase to maintain. The one electron integrals which are not provided by Libint2; are now handled by a new implementation of the McM",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:11938,reduce,reduced,11938,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['reduce'],['reduced']
Energy Efficiency,"except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226091,energy,energy,226091,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227460,energy,energy,227460,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"extra directives like ``%excite*``, which presently have no other; specification route. * Specifying the basis is perhaps the regulated piece of input. Since; basis set names differ between |PSIfour| and Cfour and it's not; practical to compare exponent-to-exponent, any input file with both; |mints__basis| and |cfour__cfour_basis| keywords present will halt. Once; a basis set has been requested through |mints__basis|, overriding the; default spherical/Cartesian setting must be done through; |globals__puream| (as opposed to |cfour__cfour_spherical|). * Specifying keywords that control geometry optimization is; straightforward. Unless the optimization is invoked in sandwich mode,; all Cfour optimization keywords (*e.g.*, |cfour__cfour_geo_maxcyc|) are; ineffective, as the Cfour optimizer is never invoked. |PSIfour|; optimization keywords (*e.g.*, |optking__geom_maxiter|) instead fill; these roles. * Specifying the computational method (through, for instance,; ``energy('c4-ccsd')`` instead of ``energy('cfour')``) often; sets additional keywords consistent with best practices (*e.g.*,; |cfour__cfour_cc_program|). Since those settings are implicit, any; explicit setting of those those keywords, whether contradicting or; concurring, takes priority (halts never generated). The following are; some concrete examples. For the moment, click the source button at; muster_modelchem for details of what keywords; get set. * runs in vcc since that's Cfour's default for cc_program ::. set cfour_calc_level ccsd; energy('cfour'). * runs in ecc since Cfour's default overwritten by keyword ::. set cfour_calc_level ccsd; set cfour_cc_program ecc; energy('cfour'). * runs in ecc since that's best practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:38190,energy,energy,38190,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,2,['energy'],['energy']
Energy Efficiency,"ext{FCTL/HF}} + E_{\text{-D}}; \end{align*}. Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`HF TOTAL ENERGY` (for HF) or; :psivar:`DFT FUNCTIONAL TOTAL ENERGY` (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to :psivar:`DFT TOTAL ENERGY`. .. psivar:: SCF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the SCF stage of the calculation, ({nat}, 3). .. psivar:: SCF DIPOLE GRADIENT. The derivative of the SCF stage dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: SCF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the SCF stage, (3 * {nat}, 3 * {nat}). .. psivar:: SCF STABILITY EIGENVALUES. Array of eigenvalues from UHF or ROHF stability analysis. .. psivar:: SCS-CCSD TOTAL ENERGY; SCS-CCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the CCSD-like method formed by reweighting :psivar:`CCSD DOUBLES ENERGY`; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2-VDW TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:59170,energy,energy,59170,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"f ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See :srcsample:`scf4` for analogous Z-matrix; and Cartiesian scans. .. _`sec:resultsTables`:. Tables of Results; =================. The Psithon function ``psi4.driver.p4util.Table`` has been removed,; as the Python ecosystem provides many more flexible alternatives. An; example tabulating a potential energy surface scan for water with Pandas; is shown below::. molecule h2o {; O; H 1 R; H 1 R 2 A; }; ; Rvals=[0.9,1.0,1.1]; Avals=range(100,103,2); ; rows = []; table = []; ; set basis cc-pvdz; ; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('mp2'); escf = variable('SCF TOTAL ENERGY'); edfmp2 = variable('MP2 TOTAL ENERGY'); escsmp2 = variable('SCS-MP2 TOTAL ENERGY'); rows.append((R, A)); table.append([escf, escsmp2, edfmp2]); ; import pandas as pd; df = pd.DataFrame(table, columns = [""E(SCF)"", ""E(SCS)"", ""E(DFMP2)""], index=rows); print(df). # E(SCF) E(SCS) E(DFMP2); # (0.9, 100) -76.020680 -76.217006 -76.221189; # (0.9, 102) -76.021305 -76.217439 -76.221605; # (1.0, 100) -76.021264 -76.224987 -76.228727; # (1.0, 102) -76.021460 -76.224946 -76.228668; # (1.1, 100) -75.990195 -76.201891 -76.205087; # (1.1, 102) -75.990085 -76.201498 -76.204676. .. _`sec:wrappers`:. Python Wrappers; ===============. The Python foundations of the |PSIfour| driver and Psithon syntax permit; many commonly performed post-processing procedures to be integrated into; the |PSIfour| suite. . As seen in the neon dimer example from the :ref:`tutorial <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies betw",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:14413,energy,energy,14413,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"f computing energies for arbitrary; order |MollerPlesset| perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with a ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less). The simplest way to run high-order perturbation theory computations is to; call, *e.g.*, ``energy('mp10')`` to invoke a MP10 computation or; ``energy('zapt25')`` to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions. For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; ``energy('mp10')`` sets |detci__mpn| to TRUE.; The program uses the Wigner (2n+1) rule by default; (|detci__mpn_wigner| = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:13471,energy,energy,13471,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['energy'],['energy']
Energy Efficiency,"f subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52914,energy,energy,52914,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:181900,energy,energy,181900,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299074,energy,energy,299074,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:301941,energy,energy,301941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306096,energy,energy,306096,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:308603,energy,energy,308603,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:239161,energy,energy,239161,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:242223,energy,energy,242223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:110372,energy,energy,110372,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:112912,energy,energy,112912,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:239340,energy,energy,239340,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:242402,energy,energy,242402,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525483,energy,energy,525483,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139748,energy,energy,139748,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:392996,energy,energy,392996,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:25853,energy,energy,25853,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21214,energy,energy,21214,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23220,energy,energy,23220,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26408,energy,energy,26408,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28414,energy,energy,28414,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:416357,energy,energy,416357,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:423324,energy,energy,423324,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10594,energy,energy,10594,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:11956,energy,energy,11956,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:15852,energy,energy,15852,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17214,energy,energy,17214,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:335111,energy,energy,335111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:342116,energy,energy,342116,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:418913,energy,energy,418913,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:488581,energy,energy,488581,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:490586,energy,energy,490586,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:493891,energy,energy,493891,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:495896,energy,energy,495896,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:329293,energy,energy,329293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:180459,energy,energy,180459,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299975,energy,energy,299975,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:300148,energy,energy,300148,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth orde",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7242,energy,energy,7242,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"fault convergence criteria.; * Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The ""best-practice"" input file for KS-DFT is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). .. _`sec:dftdictbuilder`:. Advanced Functional Use and Manipulation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. New DFT functionals can be created from scratch from within the input; file and accessed using the ``dft_functional`` keyword argument in the; energy call::. # DFT Custom Functional. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis sto-3g; dft_spherical_points 302; dft_radial_points 99; reference rks; }. pbe0 = {; ""name"": ""my_PBE0"",; ""x_functionals"": {""GGA_X_PBE"": {""alpha"": 0.75}},; ""x_hf"": {""alpha"": 0.25},; ""c_functionals"": {""GGA_C_PBE"": {}}; }. func_call = energy('SCF', dft_functional=pbe0). # as PBE0 is a pre-defined functional, the call above is equivalent to both below:; func_call = energy('SCF', dft_functional=""PBE0""); func_call = energy('PBE0'). Supported keywords include:. - `name`: string, name of the functional. for custom defined functionals used for printing only.; - `xc_functionals`: dict, definition of a complete (X + C) functional based in LibXC name; - `x_functionals`: dict, definition of exchange functionals using LibXC names; - `c_functionals`: dict, definition of correlation functionals using LibXC names; - `x_hf`: dict, parameters dealing with exact (HF) exchange settings for hybrid DFT; - `c_mp2`: dict, parameters dealing with MP2 correlation for double hybrid DFT; - `dispersion`: dict, definition of dispersion corrections; - `citation`: string, citation for the method, for printing purposes; - `description`: string, description of the method, for printing purposes. The full interface is defined in; :source:`psi4/driver/procrouti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:33599,energy,energy,33599,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"fault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:447454,energy,energy,447454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:133235,energy,energy,133235,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363885,energy,energy,363885,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:394119,energy,energy,394119,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'ro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137105,energy,energy,137105,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481088,energy,energy,481088,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395023,energy,energy,395023,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7932,energy,energy,7932,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8378,energy,energy,8378,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9232,energy,energy,9232,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:272861,energy,energy,272861,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted :math:`(Q|ov)` integrals and then builds the; full :math:`(ov|ov)` tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like::. -----------------------------------------------------------; ==================> DF-MP2 Energies <====================; -----------------------------------------------------------; Reference Energy = -76.0213974638823942 [Eh]; Singles Energy = -0.0000000000000001 [Eh]; Same-Spin Energy = -0.0512503270216563 [Eh]; Opposite-Spin Energy = -0.1534098175176923 [Eh]; Correlation Energy = -0.2046601445393486 [Eh]; Total Ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:3553,energy,energy,3553,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"ficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details into the; structure of |PSIfour| input files and how Python can be mixed with; quantum chemistry directives in |PSIfour|. Section :ref:`Psithon Functions <sec:psithonFunc>`; provides more detail on the Python functions provided by |PSIfour|; and discuss",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2303,power,powerful,2303,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,3,"['adapt', 'energy', 'power']","['adapted', 'energy', 'powerful']"
Energy Efficiency,"fied correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+3 DISP ENERGY; SAPT2+3 ELST ENERGY; SAPT2+3 EXCH ENERGY; SAPT2+3 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory. The sum of these four components yields; the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT0 TOTAL ENERGY; SSAPT0 TOTAL ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+3 TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory. .. psivar:: SAPT2+(CCD) DISP ENERGY; SAPT2+(CCD) ELST ENERGY; SAPT2+(CCD) EXCH ENERGY; SAPT2+(CCD) IND ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+3(CCD) DISP ENERGY; SAPT2+3(CCD) ELST ENERGY; SAPT2+3(CCD) EXCH ENERGY; SAPT2+3(CCD) IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates coupled-cluster dispersion.; The sum of these four components yields the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT2+(CCD) TOTAL ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+3(CCD) TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. .. psivar:: SAPT2+DMP2 DISP ENERGY; SAPT2+DMP2 ELST ENERGY; SAPT2+DMP2 EXCH ENERGY; SAPT2+DMP2 IND ENERGY; SAPT2+(3",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:55220,energy,energy,55220,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"file can; be provided through the``restart_file`` option ::. energy('scf',restart_file='./psi.PID.name.filenumber'). Only the filenumber is necessary for the driver to appropriately rename the; file and copy it to the scratch directory where |PSIfour| will expect it.; The restart capabilities of a specific method (if any) are found in that method's documentation. To provide multiple files, pass them as arguments of a Python list ::. energy('scf',restart_file=['./file1.filenumber','./file2.filenumber']). Note that the ``restart_file`` options is only available for energy procedures as of now. Executing |PSIfour| with the :option:`psi4 -m` (for; messy) flag will prevent files being deleted at the end of the run::. psi4 -m. The mechanism for restarting HF/DFT calculations is described in details :ref:`here <sec:scfrestart>`. .. _`sec:save_wfn`:. Saving the Wavefunction; =======================. A core object of |PSIfour| is the Wavefunction (short ``wfn``) object ::. energy, wfn = energy('scf',return_wfn=True). This C++/Python object (:py:class:`psi4.core.Wavefunction`) contains orbital; data, basis set information, result variables and more.; It can be saved either to a numpy file or converted to a python dictionary ::. # write the wavefunction to file; wfn.to_file('my_wfn'). # alternatively store the dict representation of the wavefunction in memory; wfn_dict = wfn.to_file(). In either form, its attributes can be set and edited.; This is an expert-level feature, though.; In general, let |PSIfour| create the Wavefunction, then treat it as read-only.; The back conversion to a Wavefunction object uses the ``.from_file()`` functionality ::. # read wavefunction from file; wfn_from_file = psi4.core.Wavefunction.from_file('my_wfn'). # make a wavefunction from the dict; wfn_from_dict = psi4.core.Wavefunction.from_file(wfn_dict). .. index:: psirc, psi4rc; .. _`sec:psirc`:. |psirc| File; ============. .. caution:: The |psirc| file is only read for Psithon input, not PsiAPI.; It",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:6395,energy,energy,6395,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,2,['energy'],['energy']
Energy Efficiency,"for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'refer",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132085,energy,energy,132085,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:135859,energy,energy,135859,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"for higher-order SAPT. Basic Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__basis.rst; .. include:: autodir_options_c/sapt__df_basis_sapt.rst; .. include:: autodir_options_c/globals__freeze_core.rst; .. include:: autodir_options_c/sapt__print.rst. Advanced Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ccd_disp.rst; .. include:: autodir_options_c/sapt__do_mbpt_disp.rst; .. include:: autodir_options_c/sapt__do_third_order.rst; .. include:: autodir_options_c/sapt__ints_tolerance.rst; .. include:: autodir_options_c/sapt__sapt_mem_check.rst; .. include:: autodir_options_c/globals__debug.rst. MP2 Natural Orbitals; ^^^^^^^^^^^^^^^^^^^^. One of the unique features of the SAPT module is its ability to use; MP2 natural orbitals (NOs) to speed up the evaluation of the triples; contribution to dispersion. By transforming to the MP2 NO basis, we can; throw away virtual orbitals that are expected to contribute little to the; dispersion energy. Speedups in excess of :math:`50 \times` are possible. In; practice, this approximation is very good and should always be applied.; Publications resulting from the use of MP2 NO-based approximations should ; cite the following: [Hohenstein:2010:104107]_. Basic Keywords Controlling MP2 NO Approximations; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:29118,energy,energy,29118,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requested DFT method,; :math:`E_{\text{DFT}}` in Eq. :eq:`DFTterms`. .. math::; :nowrap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{FCTL}} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{SCF}} + E_{\text{DH}}; \end{align*}. Unless the method is a DFT double-hybrid, this quantity is equal to; :psivar:`SCF TOTAL ENERGY`. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DFT TOTAL GRADIENT. The total electronic gradient [E_h/a0] of ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30996,energy,energy,30996,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"for the :math:`^2B_2` state are excited states that are subject to; variational collapse. One way to obtain reliable energies for these states is; to use a multi-state method; in this case it's easier to run the entire; computation in the lowest symmetry needed during the finite difference; procedure. .. index:: molecule; multiple fragments; .. _`sec:fragments`:. Non-Covalently Bonded Molecule Fragments; ========================================. |PSIfour| has an extensive range of tools for treating non-covalent; intermolecular forces, including counterpoise corrections and symmetry adapted; perturbation theory methods. These require the definition of which fragments; are interacting within the complex. |PSIfour| provides a very simple mechanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is neutral and spin-singlet; by inserting another :samp:`{charge} {multiplicity}` line, separated from the first; molecule block by a `--` line. If any information is missing, |PSIfour| will set the; unprovided charges and multiplicities to be consistent with those that are given.; For example, the overall charge must be simply the sum of all fragment charges.; |PSIfour| further assumes that any unpaired electrons are coupled to yield the highest; possible :ma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:19086,energy,energy,19086,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"for; details. **Symmetry**; The symmetry can be specified by a line reading :samp:`symmetry; {symbol}`, where :samp:`{symbol}` is the Sch\ |o_dots|\ nflies symbol; of the (Abelian) point group to use for the computation, one of one of; ``c1``, ``c2``, ``ci``, ``cs``, ``d2``, ``c2h``, ``c2v``, or ``d2h``.; This need not be specified, as the molecular symmetry is automatically; detected by |PSIfour|. See :ref:`sec:symmetry` for details. **Fragments**; A line reading ``--`` is interpreted as the separator between two non-covalently ; bound molecular fragments. See :ref:`sec:fragments` for details. Multiple Molecules; ==================. To facilitate more elaborate computations, it is possible to provide a name for; each molecule and tell |PSIfour| which one should be used in a given; calculation. For example, consider the following input file::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; energy('scf') # on H. Here, two separate jobs are performed on two different molecules; the first is; performed on H\ :sub:`2`, while the second is for H atom. The last molecule to be; specified is the ""active"" molecule by default. To explicitly activate a named; molecule, the activate command is provided. With it, the above input file can be; equivalently written as follows. Alternatively, the molecule can be specified; directly to the computing function. Below, the third calculation is the same as; the first. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobControl` provides more details about the job control; and calculation keywords used i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:6783,energy,energy,6783,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6728,energy,energy,6728,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"four__cfour_reference|. For a; list of applicable keywords, see source of; muster_psi4options. * Consult :ref:`sec:cfourFunctionality` for information on what Cfour; functionality is accessible through |PSIfour|. |PSIfour| for Cfour Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. In the simplest use of the Psi4/Cfour interface, a |PSIfour| input file; can simply ""wrap"" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Cartesian/Z-matrix, negation of variables, delayed specification of; variables, specification of fragments, etc., all in a whitespace-tolerant; format. See :ref:`sec:moleculeSpecification` for details and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:5804,energy,energy,5804,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:intercalls`:. Function Intercalls; ===================. This topic is in transition. As of 1.0, the functionality provided by; ``cp()`` and ``cbs()`` should not be accessed directly. Instead, use the; ``cp`` kwarg and/or the extended method syntax like; ``'mp3/aug-cc-pv[dt]z'`` to ``energy()``, ``opt()``, *etc.*, respectively. For many of the |PSIfour| Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:1354,energy,energy,1354,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,1,['energy'],['energy']
Energy Efficiency,"further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=oc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141128,energy,energy,141128,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:143146,energy,energy,143146,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"g; them. For each SCF computation, we use ``psi4.IO.set_default_namespace`` to uniquely; name scratch files. In the following SCF step, only file 97 is renamed using; ``psi4.IO.change_file_namespace`` so that integrals can be read from it.; For more information on stability analysis, see the :ref:`stability <sec:scfstability_doc>`; documentation. .. index:: SAPT; SAPT0. SAPT0; ^^^^^. Generally speaking, SAPT0 should be applied to large systems or large data; sets. The performance of closed-shell SAPT0 relies entirely on error cancellation, which; seems to be optimal with a truncated aug-cc-pVDZ basis, namely,; jun-cc-pVDZ (which we have referred to in previous work as; aug-cc-pVDZ'). We do not recommend using SAPT0 with large basis sets; like aug-cc-pVTZ. A systematic study of the accuracy of closed-shell SAPT0 and other SAPT ; truncations, using different basis sets, is reported in ; [Parker:2014:094106]_. In particular, an empirical recipe for scaled SAPT0; can yield improved performance and has been included in the output file as; the sSAPT0 interaction energy. sSAPT0 is a free by-product and is automatically ; computed when SAPT0 is requested (see above for more details).; The SAPT module has been used to perform SAPT0 computations with over; 200 atoms and 2800 basis functions; this code should be scalable to 4000; basis functions. Publications resulting from the use of the SAPT0 code ; should cite the following publications: [Hohenstein:2010:184111]_ and ; [Hohenstein:2011:174107]_. If the open-shell SAPT0 code is used,; [Gonthier:2016:134106]_ should be additionally cited. Basic SAPT0 Keywords; ~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_level.rst; .. include:: autodir_options_c/sapt__basis.rst; .. include:: autodir_options_c/sapt__df_basis_sapt.rst; .. include:: autodir_options_c/sapt__df_basis_elst.rst; .. include:: autodir_options_c/sapt__freeze_core.rst; .. include:: autodir_options_c/sapt__d_convergence.rst; .. include:: autodir_option",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:20719,energy,energy,20719,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"ge; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{| \textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:29994,reduce,reduced,29994,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,"['energy', 'reduce']","['energy', 'reduced']"
Energy Efficiency,"gle \\; {\hat T}_2 | \Phi_0 \rangle &= \sum_{i<j}^{\rm occ} \sum_{a<b}^{\rm vir} t_{ij}^{ab} | \Phi_{ij}^{ab} \rangle,. *etc.* The popular coupled cluster singles and doubles (CCSD) model; [Purvis:1982]_ truncates the expansion at :math:`{\hat{T}} = {\hat{T}_1}; + {\hat{T}_2}`. This model has the same number of parameters as; configuration interaction singles and doubles (CISD) but improves upon; it by approximately accounting for higher-order terms using products; of lower-order terms (*e.g.*, the term :math:`{\hat{T}_2}^2` approximately; accounts for quadruple excitations). The inclusion of such products; makes coupled-cluster methods *size extensive*, meaning that the; quality of the computation should not degrade for larger molecules.; The computational cost for CCSD scales as :math:`{\cal{O}}(o^2 v^4)`, where; :math:`o` is the number of occupied orbitals and :math:`v` is the number of virtual; orbitals. Improving upon CCSD, the CCSD(T) method [Raghavachari:1989]_ includes; a perturbative estimate of the energy contributed by the :math:`{\hat{T}_3}`; operator. The computational cost of this additional term scales as; :math:`{\cal{O}}(o^3 v^4)`, making it rather expensive for molecules with more than; a dozen heavy atoms or so. However, when this method is affordable, it; provides very high quality results in most cases. |PSIfour| is capable of computing energies and analytic gradients for a; number of coupled cluster models. It can also compute linear response; properties (such as static or frequency-dependent polarizability,; or optical rotation angles) for some models. Excited states can; also be computed by the CC2 and CC3 models, or by EOM-CCSD. Table; :ref:`CC Methods <table:ccsummary>` summarizes these capabilities. This section; describes how to carry out coupled cluster calculations within |PSIfour|.; For higher-order coupled-cluster methods like CCSDT and CCSDTQ, |PSIfour|; can interface to K\ |a_acute|\ llay's MRCC code (see :ref:`MRCC <sec:mrcc>`). Sol",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:3801,energy,energy,3801,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['energy'],['energy']
Energy Efficiency,"gorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7098,schedul,schedulers,7098,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,2,"['efficient', 'schedul']","['efficient', 'schedulers']"
Energy Efficiency,"gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225530,energy,energy,225530,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:323676,energy,energy,323676,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gradients for the single-reference; driven similarity renormalization group; second-order perturbation theory""; This theory gives gradients for a family of methods that add; another parameter to MP2, so these formulas apply to MP2 as well.; Table II of this paper will be crucial in explaining a trick that; does not appear in DiStasio. (See Sec. 3 here.); Aikens : doi:10.1007/s00214-003-0453-3; Theor. Chem. Acc. 110, 233-253 (2003); ""A derivation of the frozen-orbital unrestricted open-shell; and restricted closed-shell second-order perturbation theory; analytic gradient expressions""; This is the conventional-integral paper that DiStasio worked from to; get their DF gradients. This sometimes clarifies obscure points in; DiStasio, but they are not clear about one crucial point:; If one block of a quantity is not given, but its adjoint is, is the first; block zero, or the adjoint of the first block?; 2. Conventions; OPDM = One-particle density matrix; EWDM = Energy-weighted density matrix; All intermediates used in other functions are defined by comments starting DEFINITION.; When a previous intermediate is updated, it is defined by comments starting UPDATE.; 3. The Trick; The RHF gradient code does NOT use the formulas of the DiStasio or Aikens papers.; I can't find where the formulas come from, but they're very close to the DiStasio and; Aikens formulas, but there are consistent deviations from the formulas that are; accounted for by the addition of a ""magic"" term later on. In the comments, I refer to; this as the ""subtle trick."" Grep for that if you want to see where it appears.; 4. Cholesky Decomposition; Several times, the code needs to contract a two-index MO quantity by the four-index electron; repulsion integrals and end with a two-index AO quantity. If the two-index quantity were; separable, this would be a perfect opportunity to use our efficient libfock/jk.cc technology.; This two-index quantity is the one-particle density matrix, which is NOT separable.; To ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/dfmp2/README.txt:1466,Energy,Energy-weighted,1466,psi4/src/psi4/dfmp2/README.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/dfmp2/README.txt,1,['Energy'],['Energy-weighted']
Energy Efficiency,"gy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along. .. psivar:: SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:61656,energy,energy,61656,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45553,energy,energy,45553,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157231,energy,energy,157231,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162567,energy,energy,162567,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166475,energy,energy,166475,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334391,energy,energy,334391,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"h a libint2 build, need LIBINT2_SHGAUSS_ORDERING=gaussian *at library build time*.; # This is not the default, though it may become runtime selectable in future https://github.com/evaleev/libint/issues/190#issuecomment-691485225 .~ (see [Feb 2023] update); # * In order for any DF to work, need ENABLE_ERI3 and ENABLE_ERI2 >=0; # * In order for gradient and Hessian tests to not segfault, need ENABLE_ERI and ENABLE_ERI3 and ENABLE_ERI2 =2; # * (new c. Jan 2022) In order for Psi4 to at all work with a libint2 build for one-electron ints, need ENABLE_ONEBODY =2; # * The `find_package(Libint2 ... COMPONENTS ...)` commands will check the above requirements met, provided the libint2; # was built with cmake+cmake, not libtool+cmake.; # * Provided you know what you're doing wrt the above options and know what subset of Psi4 calculations you're targeting; # (e.g., no Hessians or non-df only) and recognize that DF is everywhere (e.g., SAD guess and DF_SCF_GUESS) and may; # need further suppression, it's fine to reduce or eliminate the `find_package` components.; # * ~Psi4 can run a libtool+cmake, but one needs to disable the `find_package` components check and correct for some; # Libint2 vs. libint2 spelling differences. See ""CHOOSE!"" toggles here and in <psi4>/psi4/CMakeLists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calculations to not be limited by cheap integrals, need WITH_MAX_AM_ERI2 >= WITH_MAX_AM_ERI3; # * In order for DF fallback fitting to work with def2-universal on all elements, need WITH_ERI3_MAX_AM >=4 for energies; # * Since non-DF calculations often use DF guess or preiterations and DF calculations use 4-center integrals for sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * T",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:1437,reduce,reduce,1437,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['reduce'],['reduce']
Energy Efficiency,"h cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |optking__opt_coordinates| to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the final step report indicates that optking has not taken |optking__geom_maxiter| steps, such a ; reset has occured. Inspection will show that the step counter was reset to 1 somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five quantities to evaluate the progress of a geometry ; optimization. These are (with their keywords) the change in energy ; (|optking__max_energy_g_convergence|), the maximum element of ; the gradient (|optking__max_force_g_convergence|), the root-mean-square ; of the gradient (|optking__rms_force_g_convergence|), the maximum element; of displacement (|optking__max_disp_g_convergence|), and the ; root-mean-square of displacement (|optking__rms_disp_g_convergence|), ; all in internal coordinates and atomic units. Usually, these options will not ; be set directly. Primary control for geometry convergence lies with the keyword ; |optking__g_convergence| which sets the aforementioned in accordance ; with Table :ref:`Geometry Convergence <table:optkingconv>`. |; |. .. _`table:optkingconv`:. .. table:: Summary of sets of geometry optimization criteria available in |PSIfour|. +-----------------------------+----------------------------+----------------------------+----------------------------+------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:20386,monitor,monitors,20386,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['monitor'],['monitors']
Energy Efficiency,"h) -> ROOT n (IN i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n* within irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (h) -> ROOT n (i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n*, which is in irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 -> ROOT n RIGHT EIGENVECTOR BETA - h TRANSITION. The right alpha and beta spin eigenvectors of the named method; from ground state to root *n*, and the transition is of irrep *h*. DFT; functional labeled if canonical. .. psivar:: THERMAL ENERGY. Total thermal energy E [E_h] at given temperature. .. psivar:: THERMAL ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the thermal energy at given temperature. .. psivar:: TWO-ELECTRON ENERGY. The two-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{2e^-}` in Eq. :eq:`SCFterms`. .. psivar:: UNCP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed without counterpoise correction.; Related variable :psivar:`CP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{unCP}}}. .. psivar:: WIBERG LOWDIN INDICES. Property of Wiberg bond indices using orthogonal L\ |o_dots|\ wdin orbitals, (nat, nat). .. psivar:: ZAPTn TOTAL ENERGY; ZAPTn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled Z-averaged perturbation theory level.; *n* is ZAPT perturbation order. .. psivar:: ZERO K ENTHALPY. Total electronic and zero-point energy [E_h] at 0 [K]. .. psivar:: ZPVE. Vibrational zero-point energy [E_h] at 0 [K]. .. psivar:: 2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS. The interatomic contributions to the dispersi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:68820,energy,energy,68820,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* within irrep *h*; to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (h) -> ROOT n (i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (h) -> ROOT n (i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* to root *n*,; which are in irreps *h* and *i*, respectively..; DFT functional labeled if canonical. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN) - h TRANSITION; TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN) - h TRANSITION. The length-gauge oscillator strength of the transition from root *m* to root *n*,; and the transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: CC TOTAL ENERGY; CC CORRELATION ENERGY. .. psivar:: CC CORRELATION KINETIC ENERGY. The correlation correction to the kinetic energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION POTENTIAL ENERGY. The correlation correction to the potential energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION VIRIAL RATIO. The correlation virial ratio, as defined in https://doi/org/10.1063/1.1535440 for basis set completeness analysis. Computed using coupled cluster. .. psivar:: CC VIRIAL RATIO. The virial ratio, as computed by a coupled cluster method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM or solvated. .. psivar:: CC T1 DIAGNOSTIC; CC D1 DIAGNOSTIC; CC NEW D1 DIAGNOSTIC; CC D2 DIAGNOSTIC. Diagnostic of multireference character. .. psivar:: CC2 TOTAL ENERGY; CC2 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC4 TOTAL ENERGY; CC4 CORRELATION ENERGY; CCnn TOTAL ENERGY; CCnn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested approximate coupled-cluster (CC2, CC3, up t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:16073,energy,energy,16073,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"h: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from the source directory. This is an expert; option for development, and not all functionality will be available. ::. >>> cd {objdir}; >>> ln -s {top-level-psi4-dir}/{objdir}/stage/lib/psi4/core.cpython-{ext_will_vary}.so ../psi4/core.cpython-{ext_will_vary}.so; >>> python ../psi4/run_psi4.py --inplace input.dat. .. _`faq:psidatadir`:. Why not to set :envvar:`PSIDATADIR`; --------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:33118,energy,energy,33118,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:8032,efficient,efficiently,8032,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['efficient'],['efficiently']
Energy Efficiency,"h:`\boldsymbol{\gamma_1}` N-representability, but differ in describing the orbital relaxation:; the former methods account for the relaxation only partially, while the latter fully relax the orbitals.; Both DC-06 and DC-12 methods have similar computational cost, same is true when comparing ODC-06 and ODC-12. ; Meanwhile, the DC methods are generally more efficient than their ODC analogs, due to a more expensive orbital update step; needed for the full orbital optimization. In the ODC-13 method, the third- and; fourth-order N-representability conditions are used for the density cumulant; and the correlated contribution :math:`\boldsymbol{\tau}`, respectively,; and the orbitals are variationally optimized. ; For most of the applications, it is recommended to use the ODC-12 method, which; provides an optimal balance between accuracy and efficiency, especially for; molecules with open-shell character. If highly accurate results are desired, a; combination of the ODC-13 method with a three-particle energy correction; [:math:`\mbox{ODC-13$(\lambda_3)$}`] can be used (see below).; For the detailed comparison of the quality of these methods, we refer; users to our :ref:`publications <intro:dctcitations>`. The DCT functional can be specified by the |dct__dct_functional| option. The; default choice is the ODC-12 functional. The DCT code can also be used to; compute the :math:`(\lambda_3)` energy correction that perturbatively accounts; for three-particle correlation effects, similarly to the (T) correction in coupled; cluster theory. Computation of the :math:`(\lambda_3)` correction can be; requested by setting the |dct__three_particle| option to PERTURBATIVE. A; combination of the ODC-13 functional with the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:7713,energy,energy,7713,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. The integrals :math:`W^{\rm SF}_{\mu\nu} = \langle {\chi_\mu} | \hat{p}\cdot (\hat{V}\hat{p}) |{\chi_\nu}\rangle` can be easily computed as derivatives of the nuclear-electron attraction integrals with respect to nuclear coordinates.; Existing nonrelativistic electronic structure code can be extended to include scalar relativistic effects; treated with the X2C method by replacing nonrelativistic kinetic and potential energy with the corresponding; X2C operators :math:`T_{X2C}` and :math:`V_{X2C}`. It is important to note that fully uncontracted basis in needed for the construction of X2C Hamiltonian as Foldy-Wouthuysen (FW [FW:1950]_) transformation is obtained in kinetically balance basis. Keywords; ~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:5434,energy,energy,5434,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,1,['energy'],['energy']
Energy Efficiency,"harge/multiplicity through :samp:`molecule; {optional_molecule_name} \\{...\\}`), memory (through :samp:`memory; {value} {unit}`), computational method (through . If Cfour keywords; are specified with values that contradict the |PSIfour| input,; execution is halted. As an example, the input below is set up to fail in four ways:; contradictory specification of memory, multiplicity, computational; method, and derivative level. Note, though, that the ``cfour_units; angstrom`` setting is permissible, since it concurs with the value; implied in the molecule block. ::. memory 300 mb. molecule {; H; H 1 0.7; }. set basis 6-31g; set cfour_multiplicity 3 # clash with implicit singlet in molecule {} above; set cfour_units angstrom # no problem, consistent with molecule {} above; set cfour_memory_size 100000000 # clash with 300 mb above; set cfour_calc_level ccsd # clash with 'c4-scf' below; set cfour_deriv_level first # clash with energy() below (use gradient('c4-scf') to achieve this). energy('c4-scf'). * Specifying anything in |PSIfour| format (molecule, basis, options,; method call) starts building a ``*CFOUR(...)`` directive for the; ``ZMAT`` file. Since the contents of the ``cfour {...}`` block are; blindly appended to any input interpreted from |PSIfour| format, mixing; of |PSIfour| and Cfour input formats likely *will* give rise to multiple; ``*CFOUR(...)`` directives in the prospective ``ZMAT``, execution of; which *will* be trapped and halted. Proper uses for the ``cfour {...}``; block are for the sandwich mode, where the entire ``ZMAT`` is enclosed,; or for extra directives like ``%excite*``, which presently have no other; specification route. * Specifying the basis is perhaps the regulated piece of input. Since; basis set names differ between |PSIfour| and Cfour and it's not; practical to compare exponent-to-exponent, any input file with both; |mints__basis| and |cfour__cfour_basis| keywords present will halt. Once; a basis set has been requested through |mints__ba",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:36624,energy,energy,36624,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"hase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the current PK algorithm. Integrals are generated; only once, and symmetry is utilized to reduce number of integrals.; DIRECT; A threaded, sieved, integral-direct algorithm, with full permutational; symmetry. This algorithm is brand new, but seems to be reasonably fast; up to 1500 basis functions, uses zero disk (if DF pre-iterations are; turned off), and can obtain significant; speedups with negligible error loss if |scf__ints_tolerance|; is set to 1.0E-8 or so.; DF [:ref:`Default <table:conv_scf>`]; A density-fitted algorithm designed for computations with thousands of; basis functions. This algorithm is highly optimized, and is threaded; with a mixture of parallel BLAS and OpenMP. Note that this algorithm; should use the -JKFIT series of auxiliary bases, *not* the -RI or; -MP2FIT bases. The default guess for auxiliary basis set should ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:28415,reduce,reduce,28415,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"hat you use a fully; decontracted basis set. This can be done simply in the input by adding ""-decon"" to the ; name of the primary basis you want to use for the calculation as detailed in ; :ref:`Decontracted Basis Sets <sec:basisDecontracted>`. Publications resulting from the use ; of X2C should cite the following publication: [Verma:2015]_. Theory; ^^^^^^. X2C is based on exact decoupling of ; positive-energy ( :math:`h^{FW}_{\rm ++}`; ) and negative-energy (:math:`h^{FW}_{\rm --}` ); blocks of the Dirac Hamiltonian (:math:`h^{D}`). . .. math:: ; U^\dagger h^{\rm D} U = ; U^\dagger; \begin{pmatrix}; h_{LL} & h_{LS} \\; h_{SL} & h_{SS}; \end{pmatrix}; U; =; \begin{pmatrix}; h^{\rm FW}_{++} & 0 \\; 0 & h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:4582,energy,energy,4582,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,2,['energy'],['energy']
Energy Efficiency,"hbf{r}'|\omega\right) + \int d\omega d\mathbf{r}_1 d\mathbf{r}_2 \chi_0\left(\mathbf{r},\mathbf{r}_1|\omega\right)\left[\frac{1}{r_{12}} + f_{xc}\left(\mathbf{r}_1,\mathbf{r}_2,\omega\right)\right]\chi\left(\mathbf{r}_2,\mathbf{r}'|\omega\right). The :math:`\delta_{HF}^{(2)}` and :math:`\delta_{HF}^{(3)}` terms take into; account higher-order induction effects and are included in the definition; of SAPT terms. They are computed from the Hartree--Fock supermolecular interaction energy; :math:`E_{int}^{HF}` and are only available in dimer-centered basis SAPT; computations, which is the default (see below for monomer-centered basis ; computations). They are defined by:. .. math:: \delta_{HF}^{(2)} = E_{int}^{HF} - (E_{elst}^{(10)} + E_{exch}^{(10)} ; + E_{ind,resp}^{(20)} + E_{exch-ind,resp}^{(20)}); :label: dHF2. .. math:: \delta_{HF}^{(3)} = \delta_{HF}^{(2)} - (E_{exch-ind}^{(30)} ; + E_{ind,resp}^{(30)}); :label: dHF3. Additionally, high-order coupling between induction and dispersion can be ; extracted from the supermolecular MP2 interaction energy:. .. math:: \delta_{MP2}^{(2)} = E_{int}^{MP2, corr} - (E_{elst}^{(12)} +; E_{exch}^{(11)} + E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)}; + \; ^{t}\!E_{exch-ind}^{(22)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)}). .. math:: \delta_{MP2}^{(3)} = \delta_{MP2}^{(2)} - (E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}). where :math:`E_{int}^{MP2, corr}` is the correlation part of the supermolecular MP2 ; interaction energy. :math:`\delta_{MP2}^{(2)}` and :math:`\delta_{MP2}^{(3)}` also improve the ; description of electrostatically dominated complexes. :math:`\delta_{MP2}^{(2)}`; can be applied to SAPT2+ or SAPT2+(3) energies whereas :math:`\delta_{MP2}^{(3)}` ; should be applied to SAPT2+3 energies. A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; w",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:8959,energy,energy,8959,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"he Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52619,energy,energy,52619,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"he input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). Th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3360,energy,energy,3360,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"he maximum number of SOSCF microiterations per macroiteration. |scf__soscf_conv|: the relative convergence tolerance of the SOSCF microiterations. |scf__soscf_print|: option to print the microiterations or not. .. _`sec:scfstability_doc`:. Stability Analysis; ~~~~~~~~~~~~~~~~~~. SCF algorithms attempt to minimize the gradient of the energy with respect; to orbital variation parameters. At convergence, the gradient should be approximately zero; given a convergence criterion. Although this is enough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrained. For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF solution exists while respecting the constraints of the original; solution; this is an internal instability. If one or more constraints have to be relaxed to reach; a lower-energy solution, there is an external instability. In |PSIfour|, the only external instability; that can be checked at present is the RHF :math:`\rightarrow` UHF one. Currently, two algorithms exist in |PSIfour| for stability analysis: the original; Direct Inversion and the newly implemented Davidson algorithms. We will first describe; options common to both algorithms. To request a stability analysis at the end of the SCF,; set the keyword |scf__stability_analysis|. Value ``CHECK`` only co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:45907,energy,energy,45907,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"he methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain :math:`{\cal{O}}(o^2v^4)` complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see [Wennmohs:2008:217]_\. What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; |Psifour|. We begin with the CISD wave function. .. math::; :label: CIwfn. | \Psi \rangle = | \Psi_0 \rangle + \sum_i^{occ} \sum_a^{vir} t_i^a | \Psi_i^a\rangle + \frac{1}{4}\sum_{ij}^{occ} \sum_{ab}^{vir} t_{ij}^{ab} | \Psi_{ij}^{ab}\rangle,. where we have chosen the intermediate normalization, :math:`\langle \Psi_0; | \Psi \rangle = 1`. The CISD correlation energy is given by. .. math::; :label: CIenergy; ; E_c = \langle \Psi_0 | \hat{H} - E_0 | \Psi \rangle,. and the amplitudes can be determined by the solution to the coupled set of; equations:. .. math::; :label: CIeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - E_c | \Psi \rangle, \\; 0 &= \langle \Psi_{i}^{a} | \hat{H} - E_0 - E_c | \Psi \rangle. The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, :math:`E_c`, with generalized shifts for the; doubles and singles equations, :math:`\Delta_{ij}` and :math:`\Delta_i`:. .. math::; :label: CEPAeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - \Delta_{ij} | \Psi \rangle, \\; 0 &= \langle \Psi_{i}^{a} | \hat{H} - E_0 - \Delta_i | \Psi \rangle. These shifts approximate the effects of triple and quadruple excitations.; The values for :math:`\Delta_{ij}` and :math:`\Delta_i` used in several; coupled-pair methods are",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:9789,energy,energy,9789,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"he orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psiv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48683,energy,energy,48683,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"he second; list of minimum number of calculations which will actually be run. ::. Naive listing of computations required.; scf / aug-cc-pvqz for SCF TOTAL ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY; mp2 / aug-cc-pvdz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY. Enlightened listing of computations required.; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY. At the end of a cbs() job is printed a summary section like the one below. First,; in the components section, are listed the results for each model chemistry available, whether; required for the cbs job (*) or not. Next, in the stages section, are listed the results for; each extrapolation. The energies of this section must be dotted with the weightings in column Wt; to get the total cbs energy. Finally, in the CBS section, are listed the results for each stage; of the cbs procedure. The stage energies of this section sum outright to the total cbs energy. ::. ==> Components <==; ; ----------------------------------------------------------------------------------; Method / Basis Rqd Energy [H] Variable; ----------------------------------------------------------------------------------; scf / aug-cc-pvqz * -1.11916375 SCF TOTAL ENERGY; mp2 / aug-cc-pvqz * -0.03407997 MP2 CORRELATION ENERGY; scf / aug-cc-pvdz -1.11662884 SCF TOTAL ENERGY; mp2 / aug-cc-pvdz * -0.02881480 MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz * -0.03893812 CCSD(T) CORRELATION ENERGY; ccsd / aug-cc-pvdz -0.03893812 CCSD CORRELATION ENERGY; scf / aug-cc-pvtz -1.11881134 SCF TOTAL ENERGY; mp2 / aug-cc-pvtz * -0.03288936 MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz * -0.04201004 CCSD(T) CORRELATION ENERGY; ccsd / aug-cc-pvtz -0.04201004 CCSD CORRELATION ENE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:5904,energy,energy,5904,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"he site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the free enthalpy at given temperature. .. psivar:: GRID ELECTRONS TOTAL; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA. The number of electrons integrated",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:34511,energy,energy,34511,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"he use ; of X2C should cite the following publication: [Verma:2015]_. Theory; ^^^^^^. X2C is based on exact decoupling of ; positive-energy ( :math:`h^{FW}_{\rm ++}`; ) and negative-energy (:math:`h^{FW}_{\rm --}` ); blocks of the Dirac Hamiltonian (:math:`h^{D}`). . .. math:: ; U^\dagger h^{\rm D} U = ; U^\dagger; \begin{pmatrix}; h_{LL} & h_{LS} \\; h_{SL} & h_{SS}; \end{pmatrix}; U; =; \begin{pmatrix}; h^{\rm FW}_{++} & 0 \\; 0 & h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. The integrals :math:`W^{\rm SF}_{\mu\nu} = \langle {\chi_\mu} | \hat{p}\cdot (\hat{V}\hat{p}) |{\chi_\nu}\rangle` can be easily computed as derivatives of the nuclear-electron attraction integrals with respect to nuclear coordinates.; Existing nonrelativistic electronic str",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:4792,energy,energy,4792,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,2,['energy'],['energy']
Energy Efficiency,"heaper that CCSD computationally, but it retains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7117,energy,energy,7117,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"hen used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-electron integrals to calculate. To control the LinK algorithm, here are the list of options provided.; ; |scf__linK_ints_tolerance|: The integral screening tolerance used for sparsity-prep in the LinK algorithm. Defaults to the |scf__ints_tolerance| option. .. index::; single: SOSCF. .. _`sec:soscf`:. Second-order Convergence; ~~~~~~~~~~~~~~~~~~~~~~~~. Second-order convergence takes into account both the gradient and Hessian to; take a full Newton step with respect to the orbital parameters. This results in; quadratic convergence with respect to density for SCF methods. For cases where; normal acceleration methods either fail or take many iterations to converge,; second-order can reduce the total time to solution. Solving second-order (SO) methods exactly would require an inversion of the; orbital Hessian (an expensive :math:`\mathbb{N}^6` operation); however, these; equations are normally solved iteratively where each iteration costs the same; as a normal Fock build (:math:`\mathbb{N}^4`). The overall SOSCF operation is; thus broken down into micro- and macroiterations where the microiterations; refer to solving the SOSCF equations and macroiterations are the construction; of a new Fock matrix based on the orbitals from a SOSCF step. SOSCF requires that all elements of the gradient to be less than one before the; method is valid. To this end, pre-SOSCF SCF iterations use normal; gradient-based extrapolation procedures (*e.g.*, DIIS) until the gradient; conditions are met. Note that while the total number of macroiterations will be; less for SOSCF than gradient-based convergence acceleration, the cost of solving; the micro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:43367,reduce,reduce,43367,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"hen using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101]_ |PSIfour| will save both energies but will use; the CCSDT(Q)/B as the CCSDT(Q) energy. CCSDT(Q)/B has been found to be; more robust by Martin. [Martin:2014:785]_. .. include:: mrcc_table_energy.rst. Frozen-core approximation is also supported in the MRCC interface.; To optimize CH\ :sub:`4` with CCSDT freezing the 1\ *s* on carbon, run::. molecule H2O {; O; H 1 r; H 1 r 2 104.5; ; r = 1.0; }; ; set {; basis cc-pVDZ; freeze_core true; }; ; optimize('ccsdt'). Interface Details; ~~~~~~~~~~~~~~~~~. .. _`table:mrcc__mrcc_method`:. .. table:: MRCC methods . +---------------------+--------------+-------------------------------------------------------------+; | |mrcc__mrcc_method| | Method | Description | ; +=====================+==============+=============================================================+ ; | 1 | CC | |; +---------------------+--------------+-------------------------------------------------------------+; | 2 | CC(n-1)[n] | |; +---------------------+--------------+-------------------------------------------------------------+; | 3 | CC(n-1)(n) | (CC(n-1)[n] energy is also calculated) | ; +---------------------+--------------+-------------------------------------------------------------+; | 4 | CC(n-1)(n)_L | (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) | ; +---------------------+--------------+-------------------------------------------------------------+; | 5 | CC(n)-1a | |; +---------------------+--------------+-------------------------------------------------------------+; | 6 | CC(n)-1b | |; +---------------------+--------------+-------------------------------------------------------------+; | 7 | CCn | |; +---------------------+--------------+-------------------------------------------------------------+; | 8 | CC(n)-3 | |; +---------------------+--------------+-------------------------------------------------------------+. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:4897,energy,energy,4897,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['energy'],['energy']
Energy Efficiency,"hf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228310,energy,energy,228310,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hi_0 \rangle`. The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results. The CI code in |PSIfour| is described in detail in ; [Sherrill:1999:CI]_. For the reasons stated above, the CI code in; |PSIfour| is not optimized for CISD computations, and it uses data structures; that are particularly inefficient for CISD and may result in the program; running out of memory and crashing for CISD except on very small molecules.; Instead, DETCI was designed to be efficient; in handling more highly correlated CI wavefunctions that can be helpful in more ; challenging cases such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]_. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]_. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CI's. A RAS CI selects determinants for the; model space as those which have no more than :math:`n` holes in the lowest set; of orbitals (called RAS I) and no more than :math:`m` electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the RAS CI. The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this cap",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:3497,efficient,efficient,3497,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['efficient'],['efficient']
Energy Efficiency,"hod': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140934,energy,energy,140934,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hod': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142952,energy,energy,142952,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hod': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275036,energy,energy,275036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hod': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281406,energy,energy,281406,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hods in |PSIfour| are accessed through Python functions, and; most important quantities are available as PSI variables, it is straightforward; to create aliases to commonly run calculations or to define hybrid methods. The; :source:`psi4/driver/aliases.py` file is intended for editing by the user for; this purpose. As an example, the MP2.5 method; (which admittedly is already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides in :source:`psi4/driver/aliases.py`.; The rationale for the changes is indicated in the comments below. ::. def run_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2 # reform mp2 and mp3 total energies for printing; e_mp3 = e_scf + ce_mp3; ; # Compute quantities particular to MP2.5; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25) # add new method's important results; psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25) # to PSI variable repository;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:2487,energy,energy,2487,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['energy'],['energy']
Energy Efficiency,"hods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details into the; structure of |PSIfour| input files and how Python can be mixed with; quantum chemistry directives in |PSIf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2222,efficient,efficient,2222,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; single: DLPNO-MP2. .. _`sec:dlpnomp2`:. DLPNO-MP2: Domain-Based Local Pair Natural Orbital MP2; ======================================================. .. codeauthor:: Zach Glick ; .. sectionauthor:: Zach Glick. *Module:* :ref:`Keywords <apdx:dlpno>`, :ref:`PSI Variables <apdx:dlpno_psivar>`, :source:`DLPNOMP2 <psi4/src/psi4/dlpno>`. Introduction; ------------. The steep polynomial scaling (in both time and memory) of post-HF dynamic; correlation methods prohibits calculations on large systems, even for efficient; codes like |PSIfours| :ref:`DF-MP2 <sec:dfmp2>`. This poor scaling is in part; due to the use of canonical HF orbitals, which are entirely delocalized across; the molecule. Canonical orbitals are commonly used because of mathematical; convenience. Another possible choice is localized orbitals. Any two orbitals; localized to separate regions of a molecule can be treated as non-interacting; to a good approximation. Thus, when working with localized orbitals, the number; of interacting orbital pairs (and triples, quadruples, etc.) scales linearly; with system size. If carefully implemented, programs that exploit this sparsity; can be made to scale linearly (or else with lower order than their canonical; counterparts) at the cost of of modest, controllable errors. This is the; defining insight of DLPNO-MP2 and all related ""local correlation"" methods. The DLPNO-MP2 code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:1582,efficient,efficient,1582,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['efficient'],['efficient']
Energy Efficiency,"hout even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:intercalls`:. Function Intercalls; ===================. This topic is in transition. As of 1.0, the functionality provided by; ``cp()`` and ``cbs()`` should not be accessed directly. Instead, use the; ``cp`` kwarg and/or the extended method syntax like; ``'mp3/aug-cc-pv[dt]z'`` to ``energy()``, ``opt()``, *etc.*, respectively. For many of the |PSIfour| Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()` | --- | | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:opt()` | --- | --- | | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:cbs()` | --- | --- | --- | | Y |; +-------------------------+-----+-----+-----+--",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:1642,energy,energy,1642,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,1,['energy'],['energy']
Energy Efficiency,"hove variables into global space; for k, v in dfmp2_wfn.variables().items():; core.set_variable(k, v). The function should return the wavefunction, except for rare cases like EFP where no wavefunction available.; For now, ``CURRENT ENERGY`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative error message is needed. Managed methods handle these cases through the addition of a new; keyword |globals__qc_module| and a set of type keywords analogous to; |globals__mp2_type|: |globals__mp_type|,; |globals__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:5891,energy,energy,5891,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"i A. Burns, Daniel G. A. Smith and Peter Kraus; .. sectionauthor:: Lori A. Burns and Peter Kraus. The :py:func:`psi4.driver.cbs` function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; :py:func:`psi4.driver.energy`, :py:func:`psi4.driver.gradient`, *etc.* For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. * ``energy('mp2/cc-pv[dt]z')``. * ``energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z')``. * ``energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}])``. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like ::. energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; :py:func:`psi4.driver.cbs` and extrapolation schemes like; :py:func:`psi4.driver.driver_cbs_helper.xtpl_highest_1` and; :py:func:`psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2` and composite; aliases like :py:func:`psi4.driver.aliases.sherrill_gold_standard`; and :py:func:`psi4.driver.aliases.allen_focal_point` in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. * ``optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz')``. * ``optimize(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz')``. * ``optimize(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvqz""}, {""wfn"": ""mp2"", ""basis"": ""c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:2222,energy,energy,2222,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50062,energy,energy,50062,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51454,energy,energy,51454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:55644,energy,energy,55644,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57036,energy,energy,57036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172178,energy,energy,172178,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484069,energy,energy,484069,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For examp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:11366,energy,energy,11366,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"i4``. .. _`faq:runordinaryexe`:. How to run Psi4 as executable after compilation; -----------------------------------------------. Substituting the full installation directory :samp:`{prefix}` and a; suitable scratch directory, issue the following commands directly in your; terminal or place them into your ""rc"" file and open a new terminal. (To; use a staged installation directory, substitute; :samp:`{objdir}/stage` for :samp:`{prefix}`.). .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. Run |PSIfour|. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. .. _`faq:modulenotfounderror`:. How to solve ``ModuleNotFoundError: No module named 'psi4'``; ------------------------------------------------------------. You're using |PSIfour| in PsiAPI mode (``python input.py`` where; ``input.py`` contains ``import psi4``) but the Python interpreter; can't find the |PSIfour| Python module. Follow the directions at; :ref:`faq:psi4psiapipath`. .. _`faq:psi4psiapipath`:. How to configure paths for PsiAPI; ---------------------------------. If you know the location of the |PSIfour| executable (``bin/psi4``); for Psithon mode and want to know the corresponding location to add to; :envvar:`PYTHONPATH` for PsiAPI mode, execute ``psi4 --psiapi``. It; will return bash commands to set :envvar:`PATH` (for correct python; interpreter) and :envvar:`PYTHONPATH` (to find psi4 module) correctly,; after which ``import psi4`` will work. .. code-block:: ba",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:27884,energy,energy,27884,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"i\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). Multi-Fragment Optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. _DimerSection:. In previous versions of optking, the metric for connecting atoms was increased until all atoms; were connected. This is the current behavior for |optking__frag_mode| `single`.; Setting |optking__frag_mode| to `multi` will now add a special; set of intermolecular coordinates between fragments - internally referred to as DimerFrag; coordinates (see `here <DimerIntro_>` for the brief description). ; For each pair of molecular fragments, a set of up to 3 reference points; are chosen on each fragment. Each reference point will be either an atom or a linear combination; of positions of atoms within that fragment. Stretches, bends, and dihedral angles between the two ; fragments will be created using these reference points. See ; :ref:`Dimer coordinate table <table:DimerFrag>` for how reference points are created.; For a set of three di",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:9460,energy,energy,9460,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"i_{\lambda} (\vec r_2); \phi_{\sigma} (\vec r_2); \ \mathrm{d}^3 r_1; \ \mathrm{d}^3 r_2. The MO coefficients are found as the generalized eigenvectors of the Fock Matrix,. .. math:: F^\alpha C^\alpha = S C^\alpha \epsilon^\alpha. The eigenvalues :math:`\epsilon` are the orbital energies, and the metric matrix; :math:`S` is the AO-basis overlap matrix. .. math:: S_{\mu\nu} = (\mu | \nu ). Note that the Fock Matrix depends on the density (both alpha and beta), and; therefore the orbitals. Because of this, SCF is a nonlinear procedure, which; terminates when the generating orbitals are self-consistent with the Fock matrix; they generate. The formation of the Coulomb matrix :math:`J` and the exchange matrix; :math:`K^{\alpha}` dominate the computational effort of the SCF procedure. For; very large systems, diagonalization of the Fock matrix can also present a; significant hurdle. .. _`sec:scfinput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a Hartree--Fock computation is a molecule block, basis set; option, and a call to ``energy('scf')``::. molecule {; He; }. set basis sto-3g. energy('scf'). This will run a Restricted Hartree--Fock (RHF) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6; energy and density convergence criteria (since single-point, see; :ref:`SCF Convergence & Algorithm <table:conv_scf>`), a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more; information on any of these options, see the relevant section below. .. _`sec:scfsymm`:. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of Hartree--Fock; theory, including:. Restricted Hartree--Fock (RHF) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Hartree--Fock (UHF); Appropriate for most open-shell systems and f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:8927,energy,energy,8927,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"iary basis is controlled by the keyword; |fnocc__df_basis_cc|. By default, |fnocc__df_basis_cc| is the RI set; (optimized for DFMP2) most appropriate for use with the primary basis.; For example, if the primary basis is aug-cc-pVDZ, the default; |fnocc__df_basis_cc| will be aug-cc-pVDZ-RI. Alternatively, the user can request that the DF-CCSD(T) procedure use a; set of vectors defined by the Cholesky decomposition of the ERI tensor as; the auxiliary basis. This feature is enabled by specifying |globals__cc_type| ``CD``.; CD methods can be enabled in the SCF; procedure as well, by specifying the |globals__scf_type| as ``CD``. The; accuracy of the decomposition can be controlled through the keyword; |fnocc__cholesky_tolerance|. .. comment This feature is enabled by specifying |fnocc__df_basis_cc| as ""CHOLESKY"". . The following input file sets up a DF-CCSD(T); computation using CD integrals ::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set {; scf_type cd; cc_type cd; basis aug-cc-pvdz; freeze_core true; }; energy('ccsd(t)'). The resulting CCSD(T) correlation energy will be equivalent to that; obtained from a conventional computation if |fnocc__cholesky_tolerance| is; sufficiently small (*e.g.* ``1e-9``). .. _`sec:fnogn`:. Gn theory; ~~~~~~~~~. The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]_\. The G2 procedure may be called through the; :py:func:`~psi4.driver.energy` wrapper: ::. energy('gaussian-2'). Supported methods; ~~~~~~~~~~~~~~~~~. The various methods supported by the FNOCC module in |Psifour| are; summarized in Table :ref:`FNOCC Methods <table:fnocc_methods>`; and detailed (except FNO) in Table :ref:`FNOCC Capabilities; <table:fnocc_stdsuite>`. Note that these methods are implemented; for closed-shell reference only. Without ``set qc_module fnocc``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:15586,energy,energy,15586,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ide adcc some heuristic checks for overly excessive memory requirements; are implemented, resulting in a warning in case a; successful execution is unlikely. There are no guarantees for the memory; to be sufficient in case such a warning is not displayed. More detailed documentation about adcc and its features can be found; at `<https://adc-connect.org>`_,; especially the `theory section <https://adc-connect.org/latest/theory.html>`_.; If you are using adcc from |PSIfour| for your calculations,; please cite both |PSIfour| as well as adcc [Herbst2020]_; in your published work. **The ADC wavefunction object.**; After running the ADC calculation in adcc, the interface code sets; a number of variables in the returned :py:class:`~psi4.core.Wavefunction`; in case they are computed.; In the following the ``<method>`` prefix refers to the ADC method (such as ``adc(1)``,; ``adc(3)``, ``cvs-adc(2)-x``). * Ground state energy terms like ``MP2 correlation energy``, ``MP3 correlation energy``,; ``MP2 total energy``, ``MP3 total energy``, ``current correlation energy`` and ``current energy``.; * ``MP2 dipole X`` and the other components: Ground state dipole moments at MP(2) level.; * ``number of iterations``: The number of iterations the iterative solver required to converge.; * ``number of excited states``: The number of excited states, which were computed.; * More variables are summarized in :ref:`apdx:psivariables_alpha`. The following attribute is set on returned wavefunctions:. * ``adcc_state``: The `adcc.ExcitedStates <https://adc-connect.org/q/excitedstates>`_; object used by adcc to store the ADC(n) excitation energies and all precomputed data; in the format used by adcc.; Provides direct access to analysis and plotting capabilities from adcc.; For example ``adcc_state.plot_spectrum()`` plots a broadened excited states spectrum; in matplotlib. See the `adcc calculations documentation <https://adc-connect.org/latest/calculations.html>`_; for details. **Tips for convergence ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:12115,energy,energy,12115,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,7,['energy'],['energy']
Energy Efficiency,"ide; 7505 benzonitrile; 78438 N-[anilino(phenyl)phosphoryl]aniline; 12581 3-phenylpropanenitrile; 517327 sodium benzenesulfonate; 637563 1-methoxy-4-[(E)-prop-1-enyl]benzene; 252325 [(E)-prop-1-enyl]benzene. Note that some of these results do not contain the string ""benzene""; these; compounds have synonyms containing that text. We can now replace the; ""benzene*"" in the input file with one of the above compounds using either the; IUPAC name or the CID provided in the list, *viz*::. molecule benzene {; pubchem:637563; }; ; or ::; ; molecule benzene {; pubchem:1-methoxy-4-[(E)-prop-1-enyl]benzene; }. Some of the structures in the database are quite loosely optimized and do not; have the correct symmetry. Before starting the computation, |PSIfour| will; check to see if the molecule is close to having each of the possible; symmetries, and will adjust the structure accordingly so that the maximum; symmetry is utilized. The standard keywords, described in :ref:`sec:moleculeKeywords`, can be; used in conjunction to specify charge, multiplicity, symmetry to use, *etc.* . .. index:: symmetry, Cotton-ordering; .. _`sec:symmetry`:. Symmetry; ========. For efficiency, |PSIfour| can utilize the largest Abelian subgroup of the full; point group of the molecule. Concomitantly, a number of quantities, such as; |globals__socc| and |globals__docc|, are arrays whose entries pertain to irreducible; representations (irreps) of the molecular point group. Ordering of irreps; follows the convention used in Cotton's :title:`Chemical Applications of Group; Theory`, as detailed in Table :ref:`Irreps <table:irrepOrdering>`. We refer to this; convention as ""Cotton Ordering"" hereafter. .. _`table:irrepOrdering`:. .. table:: Ordering of irreducible representations (irreps) used in |PSIfour|. +----------------+-------------+----------------+----------------+----------------+-------------+----------------+----------------+----------------+; | Point Group | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | ; +=========",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:12575,charge,charge,12575,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charge']
Energy Efficiency,"ient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic :math:`ov` products in the; bra- and ket- of the :math:`(ov|ov)`\ -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:2723,efficient,efficient,2723,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['efficient'],['efficient']
Energy Efficiency,"ient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:129279,energy,energy,129279,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7682,energy,energy,7682,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"if(TARGET PCMSolver::pcm); list(APPEND sources; psipcm.cc; ); psi4_add_module(lib psipcm sources); target_link_libraries(psipcm; PUBLIC; PCMSolver::pcm; mints; Libint2::cxx; ); # Because psipcm.cc includes potentialint.h, which includes libint2's engine.h; # we have to make sure we reduce the optimization level to match libmints; # See note at psi4/src/psi4/libmints/CMakeLists.txt; set_property(TARGET psipcm PROPERTY CXX_STANDARD ""${psi4_CXX_STANDARD_Libint2}""); endif(); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libpsipcm/CMakeLists.txt:283,reduce,reduce,283,psi4/src/psi4/libpsipcm/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libpsipcm/CMakeLists.txt,2,['reduce'],['reduce']
Energy Efficiency,"ifference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative error message is needed. Managed methods handle these cases through the addition of a new; keyword |globals__qc_module| and a set of type keywords analogous to; |globals__mp2_type|: |globals__mp_type|,; |globals__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls a; ""select"" function rather than a ""run"" function. ::. procedures = {; 'energy': {; 'scf' : run_scf,; 'mp3' : select_mp3,; 'dct' : run_dct,. Then in :source:`psi4/driver/procrouting/proc.py`, the select function runs through; reference, type, and possibly freeze_core to specify the proc; function to call for any able, non-default module (*e.g.*, ``mtd_type ==; 'DETCI'`` ) or able, default module (*e.g.*, ``mtd_typd == ['', 'FNOCC']`` ).; Don't worry about 'else' statements as anything that falls through will be; caught and a readable error generated. ::. def select_mp3(name, **kwargs):; """"""Function selecting the algorithm for a MP3 energy call; and directing to specified or best-performance default modules. """"""; reference = psi4.get_option('SCF', 'REFERENCE'); mtd_type = psi4.get_global_option('MP_TYPE'); module = psi4.get_global_option('QC_MODULE'); # Considering only [df]occ/fnocc/detci. func = None; if reference == 'RHF':; if mtd_type == 'CONV':; if module == 'DETCI':; func = run_detci; elif module == 'FNOCC':; func = run_fnocc; elif module in ['', 'OCC']:; func = run_occ; elif",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:6939,energy,energy,6939,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"ifting and the code is easy to; implement entirely in the Python layer. In the case where the matrix operation; is non-standard and requires some specialized code to handle disk-based; storage, the decision to write in Python is less clear cut. It is certainly; possible to write these out-of-core routines using Numpy primitives, but there; are a number of tools in |PSIfour| already to perform tasks like these that are; required, *e.g.*, for cluster. In this case, a good design would be to write a; simple piece of code in the C++ layer that performs the matrix operation on a; given input, using the I/O routines available in |PSIfour| and the parallelism; afforded by OpenMP, and to make that code available to the front end as; described in :ref:`sec:prog_tour-exposing`. The Python layer could then be; responsible for obtaining the input data and calling this C++ code to do the; manipulations, allowing each language layer to handle the subset of the work; that caters to their individual strengths. A number of concrete examples of this workflow exist in the code already. For; finite difference computations of energy derivatives, the logic to determine; the type of stencil and which displacements are needed is not going to be rate; limiting for any reasonable quantum mechanical energy function. Therefore,; doing that work in the Python layer is a good idea, as it allows the many; Python tools for farming out *embarrassingly parallel* workloads to be used,; while the C++ layer can be used to implement the energy function to be; differentiated. In SCF, we have a number of sources of external embedding potentials that could; enter the calculation. Allowing Python to handle only the details of driving; the SCF iterations, such as external potentials and convergence acceleration; methods, but deferring to C++ to do the heavy lifting for building and; diagonalizing the Fock matrix also takes advantage of the two languages'; strengths and improves maintainability of the code.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:6863,energy,energy,6863,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,3,['energy'],['energy']
Energy Efficiency,"ilation, simply adjust its; position in the path environment variables. .. >>> cd dftd3; .. >>> ls; .. dftd3.tar; .. patch_grimme_dftd3.3.0.2; .. >>> tar -xvf dftd3.tar; .. copyc6.f; .. dftd3.f; .. Makefile; .. man.pdf; .. pars.f; .. param; .. >>> patch < patch_grimme_dftd3.3.0.2; .. patching file dftd3.f; .. >>> make; .. making dftd3.o from dftd3.f; .. ifort -O -c dftd3.f -o dftd3.o; .. making copyc6.o from copyc6.f; .. ifort -O -c copyc6.f -o copyc6.o; .. ifort dftd3.o copyc6.o -o ./dftd3; .. >>> ls; .. Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3.3.0.2; .. copyc6.f dftd3 dftd3.o man.pdf pars.f. Theory; ~~~~~~. The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515]_ and assiduously developed by Grimme, [Grimme:2004:1463]_; [Grimme:2006:1787]_ [Grimme:2010:154104]_ the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, :math:`E_{disp} = -C_6/R^6; -C_8/R^8 -C_{10}/R^{10}-\cdots`. The DFT-D2 [Grimme:2006:1787]_ variant; takes the explicit form below. Here, dispersion coefficients,; :math:`C_6^{ij}`, obtained from the geometric mean of tabulated elemental; values, are summed over interatomic distances, :math:`R_{ij}`, modulated; by a damping function, :math:`f_{damp}(R_{ij})`, that gradually activates; the dispersion correction (at a rate characterized by :math:`\alpha_6`); over a distance characterized by the sum of the two atomic vdW radii,; :math:`R_{vdW}`, while an overall scaling term, :math:`s_6`, is optimized; to be unique to each :math:`E_{xc}` functional. (:math:`\alpha_6` is; sometimes allowed to vary as well.). .. math:: E_{disp}^{\text{D2}}=-s_6 \sum_{i,j>i}^{N_{at}} \frac{C_6^{ij}}{(R_{ij})^6} f_{damp}(R_{ij}); :label: DFTD2. .. math:: f_{damp}(R_{ij}) = \frac{1}{1 + e^{- \alpha",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:9181,energy,energy,9181,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ill be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requested DFT method,; :math:`E_{\text{DFT}}` in Eq. :eq:`DFTterms`. .. math::; :nowrap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{FCTL}} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\tex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30691,energy,energy,30691,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"in :ref:`apdx:options_c_module` are placed in ``set`` blocks as; described in :ref:`sec:jobControl`, not as arguments to a Python function; (like ``energy()``). .. note:: All |PSIfour| keyword names and values are insensitive to case, both; those that are placed in ``set`` blocks and as Python function arguments.; The few exceptions are documented for the :py:func:`~psi4.driver.wrapper_database.database` function,; where case structure must match the database file. .. _`op_c_bool`:; .. _`op_c_boolean`:; .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_c_conv`:; .. note:: Certain convergence and tolerance keywords, of type *double* (real numbers),; may be specified using either a real number or an integer; and integer *X* is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to :math:`10^{-6} E_h`, the user may set the ``e_convergence``; keyword to ``0.000001``, ``1.0e-6``, or ``6``. .. _`sec:psivarnotes`:. Notes on PSI Variables; ======================. .. note:: Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. * ``method ROOT 0 -> ROOT m property`` to get root ``m``.; * ``method ROOT 0 -> ROOT m property - h TRANSITION`` to get root m and; independently specify that the total transition symmetry is ``h``, e.g., A2.; * ``method ROOT 0 (h) -> ROOT m (i) property`` to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst:2151,energy,energy,2151,doc/sphinxman/source/notes_c.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst,1,['energy'],['energy']
Energy Efficiency,"in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The charge-transfer analysis above is carried out by taking the; difference between SAPT induction as calculated in the dimer-centered; basis (*i.e.*, each monomer sees the basis functions on both monomers); vs. the monomer-centered basis (*i.e.*, each monomer utilizes only its; own basis set). It is also possible to run a closed-shell SAPT computation at any; level using only the monomer-centere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30968,charge,charge-transfer,30968,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charge-transfer']
Energy Efficiency,"in a detailed understanding of the; intermolecular partition and the polarization between non-interacting and; Hartree--Fock-interacting moieties. We have developed a set of template; ``.pymol`` scripts to help with this process. These can be obtained by running::. >>> copy_pymol2.py. and then in PyMol::. >>> @run.pymol. This last command runs all of the individual ``.pymol`` files (*e.g.*,; ``DA.pymol``), which in turn load in the molecule and cube file data; (contained in the ``.cube`` file), set up the visualization, and render a; ``.png`` image of the scene. Generally the view orientation and some specific; details of the ``.pymol`` files require some small tweaks to permit; publication-quality renderings. .. image:: /VA.png; :align: center; :scale: 50%; :alt: ESP of monomer A. Adding Point Charges to F/I-SAPT Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. Citation: Alenaizan, A; Cheney, D. L.; Sherrill, C. D. Electrostatically embedded; .. symmetry adapted pertubration theory. In preparation. Point charges can be added to the interacting subsystems A and B as well; as to the ``linking`` fragment C. Briefly, the interaction between the point charges in A(B); and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:15954,adapt,adapted,15954,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['adapt'],['adapted']
Energy Efficiency,"in the order they appear in; the input file, so if the last four commands in the above example were to read ::. set basis cc-pVDZ; energy('ccsd'); set ccenergy print 3; set scf print 1. the commands that set the print level would be ineffective, as they would be; processed after the CCSD computation completes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings for strings, floats for floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For ex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:8836,power,power,8836,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['power'],['power']
Energy Efficiency,inal and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singl,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48144,energy,energy,48144,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(cbs-delta-energy ""psi;quicktests;cbs""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-delta-energy/CMakeLists.txt:54,energy,energy,54,tests/cbs-delta-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-delta-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(cbs-xtpl-energy ""psi;quicktests;cbs""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy/CMakeLists.txt:53,energy,energy,53,tests/cbs-xtpl-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(cbs-xtpl-energy-conv ""psi;quicktests;cbs""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy-conv/CMakeLists.txt:53,energy,energy-conv,53,tests/cbs-xtpl-energy-conv/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy-conv/CMakeLists.txt,2,['energy'],['energy-conv']
Energy Efficiency,"include(TestingMacros). add_regression_test(cookbook-manual-fd-hess-energy ""psi;cookbook""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cookbook/manual-fd-hess-energy/CMakeLists.txt:68,energy,energy,68,tests/cookbook/manual-fd-hess-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cookbook/manual-fd-hess-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(dftd3-energy ""psi;quicktests;smoketests;dftd3;addon;cart""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/energy/CMakeLists.txt:50,energy,energy,50,tests/dftd3/energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(dftd4-energy ""psi;quicktests;smoketests;dftd4;addon;cart""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd4/energy/CMakeLists.txt:50,energy,energy,50,tests/dftd4/energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd4/energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(fd-freq-energy ""psi;findif;noc1""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy/CMakeLists.txt:52,energy,energy,52,tests/fd-freq-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(fd-freq-energy-large ""psi;longtests;findif;cart;noc1""); set_tests_properties(; fd-freq-energy-large; PROPERTIES; COST 1000; TIMEOUT 3000; ); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy-large/CMakeLists.txt:52,energy,energy-large,52,tests/fd-freq-energy-large/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy-large/CMakeLists.txt,4,['energy'],['energy-large']
Energy Efficiency,"include(TestingMacros). add_regression_test(isapt-charged ""psi;sapt;medlong""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/isapt-charged/CMakeLists.txt:50,charge,charged,50,tests/isapt-charged/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/isapt-charged/CMakeLists.txt,2,['charge'],['charged']
Energy Efficiency,"include(TestingMacros). add_regression_test(json-schema-1-energy ""psi;quicktests;json""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/json/schema-1-energy/CMakeLists.txt:58,energy,energy,58,tests/json/schema-1-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/json/schema-1-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(python-energy ""psi;quicktests;smoketests;python""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/python/energy/CMakeLists.txt:51,energy,energy,51,tests/python/energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/python/energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(tu1-h2o-energy ""psi;quicktests;smoketests;tutorial""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu1-h2o-energy/CMakeLists.txt:52,energy,energy,52,tests/tu1-h2o-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu1-h2o-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(tu2-ch2-energy ""psi;quicktests;tutorial""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu2-ch2-energy/CMakeLists.txt:52,energy,energy,52,tests/tu2-ch2-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu2-ch2-energy/CMakeLists.txt,2,['energy'],['energy']
Energy Efficiency,"infty} v_{\mathrm{x}}^{\mathrm{Local}} (r) = 0. IP-tuned LRC functionals effectively pin the chemical potential at :math:`N`; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems. For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose ""-D2"" and more modern ""-D3"" approaches are a de facto industry standards. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to ``energy('b3lyp')`` (or other valid functional name)::. molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn--Sham (RKS) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6 energy; and density convergence criteria, a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess (because single atom). For more information on; any of these options, see the relevant section below, or in the preceding; :ref:`Hartree--Fock section <sec:scf>`. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn--Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn--Sham (UKS); Appropriate for most open-shell systems and fairly easy to conv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:14409,energy,energy,14409,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"ing any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} module to read; in the basis set information. A \PSI\ input for this code should look some; thing like the following:. \includeinput{sample-codes/integrals/input.dat}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:4833,allocate,allocated,4833,doc/sphinxman/source/attic/progtutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst,1,['allocate'],['allocated']
Energy Efficiency,"instead provides all integrals, so the caller; simply needs to loop over all of the buffers provided in the appropriate order. Changes to External Potential Engines; ..................................... Benchmarking showed that early versions of the old code spent a non-negligible; amount of time performing the Cartesian to spherical harmonic transformation of; the integrals, which is needed for most modern basis sets. To improve; performance, we instead backtransformed the density to the Cartesian; representation (denoted ""CartAO"") and computed / contracted all integrals in; this Cartesian basis, eliminating the need to transform to spherical harmonics; as the integrals are computed. This bottleneck no longer exists, so these; extra transformation steps have been removed as part of the switch to Libint2,; and the affected codes (PCM and CPPE interfaces) now compute the potential and; field integrals in the representation required by the basis set. Also, note that the way external point charges are specified has changed.; Previously, a set of N external point charges would be specified by passing a; matrix with dimensions N rows and 4 columns -- corresponding to charge, x, y, z; -- to the ``set_charge_field()`` member of the potential integral class. The; same information is now passed using the more verbose; ``std::vector<std::pair<double, std::array<double, 3>>>`` type instead, to be; consistent with Libint2's convention. New Operators Available; ....................... Libint2 provides a range of integrals that were previously not available in; |PSIfour|, such as the Erfc attenuated nuclear potential integrals needed for; Ewald methods. If new integrals are added to Libint2 but are not yet; interfaced to |PSIfour|, please open an issue on the |PSIfour| GitHub page to; alert the developers, who will be able to add the appropriate code.; Available integrals classes and parameters currently documented at ; `Libint2 C++11 Interface Wiki <https://github.com/evaleev/l",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:17233,charge,charges,17233,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['charge'],['charges']
Energy Efficiency,"interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases. Some rough guidelines for using the KS-DFT code are as follows,. * Use DF for the ERI algorithm wherever possible.; * |PSIfour| is a ""tight"" code, meaning we've set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; :ref:`SCF Convergence <table:conv_scf>` for default convergence criteria.; * Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The ""best-practice"" input file for KS-DFT is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). .. _`sec:dftdictbuilder`:. Advanced Functional Use and Manipulation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. New DFT functionals can be created from scratch from within the input; file and accessed using the ``dft_functional`` keyword argument in the; energy call::. # DFT Custom Functional. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis sto-3g; dft_spherical_points 302; dft_radial_points 99; reference rks; }. pbe0 = {; ""name"": ""my_PBE0"",; ""x_functionals"": {""GGA_X_PBE"": {""alpha"": 0.75}},; ""x_hf"": {""alpha"": 0.25},; ""c_functionals"": {""GGA_C_PBE"": {}}; }. func_call = energy('SCF', dft_functional=pbe0). # as PBE0 is a pre-defined functional, the call above is equivalent to both below:; func_call = energy('SCF', dft_functional=""PBE0""); func_call = energy('PBE0'). Supported keywords include:. - `name`: string, name of the functional. for custom defined functionals used for printing only.; - `xc_functionals`: dict, definition of a complete (X + C) functional based",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:32991,energy,energy,32991,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"into |PSIfour|. Note that these are; only available with density-fitted, not conventional, MP2 algorithms. :ref:`-D Functionals <table:dft_disp>`; We have several -D2 functionals implemented. -D3 functionls are available; with the installation of Grimme's :ref:`DFTD3 program <sec:dftd3>`.; For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in |PSIfour| for correctness. If you find an error in a DFT; functional or have a request for a new functional, please let us know on our; forum or GitHub page. Grid Selection; ~~~~~~~~~~~~~~. |PSIfour| uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. ; The default grid in |PSIfour| is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights. Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the |scf__dft_spherical_points|; option, which may take one of the following values:. .. _`table:lebedevorder`:. +-----------------------------+-------+; | |scf__dft_spherical_points| | Order |; +=============================+=======+; | 6 | 3 |; +-----------------------------+-------+; | 14 | 5 |; +-----------------------------+-------+; | 26 | 7 |; +-----------------------------+-------+; | 38 | 9 |; +-----------------------------+-------+; | 50 | 11 |; +-----------------------------+-------+; | 74 | 13 |; +-----------------------------+-------+; | 86 | 15 |; +-----------------------------+-------+; | 110 | 17 |; +-----------------------------+-------+; | 146 | 19 |; +-----------------------------+-------+; | 170 | 21 |; +-----------------------------+-------+; | 194 | 23 |; +-----------------------------+-------+; | 230 | 25 |; +-----------------------------+-------+; | 266 | 27 |; +--------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:21208,efficient,efficient,21208,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['efficient'],['efficient']
Energy Efficiency,"ints when using a zmatrix for; molecular input is not supported. Freezing or constraining Cartesian coordinates; requires Cartesian molecule input. If numerical errors results in symmetry ; breaking, while Cartesian constraints are active, symmetrization cannot occur and; an error will be raised, prompting you to restart the job. * To scan the potential energy surface by optimizing at several fixed values; of the dihedral angle of HOOH. .. code-block:: none. molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a fu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:8454,energy,energy,8454,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"ion energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along. .. psivar:: SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.4 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state to root *m*.; DFT functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state, which is of irrep *h*, to root *n* within irrep *i*.; DFT func",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:62256,energy,energy,62256,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ion('SCF', 'SCF_TYPE') in ['DF', 'CD']:; psi4.MintsHelper(ref_wfn.basisset()).integrals(). Direct any post-scf modules to be run. ::. # include if further post-scf modules are needed; psi4.transqt2(); psi4.ccsort(); psi4.mp2(). If an :py:class:`~psi4.driver.p4util.OptionsState` object was set up, those options; need to be returned to the original user state with the following. ::. # include if optstash = OptionsState(...) was set up previously; optstash.restore(). Current best practice is to store as much as possible on the wavefunction, not in globals. The; driver should handle interactions with globals. When QCVariables are stored on the wavefunction in; the module, copy to globals with the below::. # Shove variables into global space; for k, v in dfmp2_wfn.variables().items():; core.set_variable(k, v). The function should return the wavefunction, except for rare cases like EFP where no wavefunction available.; For now, ``CURRENT ENERGY`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:5147,energy,energy,5147,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"isd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fno",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485844,energy,energy,485844,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ist beginning at |ccenergy__r_convergence|). It is defined; according to the quantum chemical method and so its default value is set; by each module individually. .. [#f7] For frequency computations by finite difference of energies,; convergence criteria are tightened further still to 10 for; |scf__e_convergence| and |scf__d_convergence| for SCF of HF or DFT, 11; for |scf__e_convergence| and |scf__d_convergence| for SCF of post-HF,; and 10 for E_CONVERGENCE for post-HF of post-HF. .. _`sec:scfrec`:. Recommendations; ~~~~~~~~~~~~~~~. The SCF code is quite flexible and powerful.; We have tried as much as possible to keep the number of options to; a minimum and to allow all options to be used in the presence of all other; options. Below are some rough words of advice about using the SCF code for; practical calculations:. * For |scf__guess|, the ``SAD`` guess is usually your; friend, even for open-shell systems (at the very least, it gets the right; number of electrons, unlike some other programs). For instance, we have found; that a simple SAD guess is often as good as doing a full SCF in a 3-21G basis; and then performing a cast-up, at a fraction of the cost. However, SAD and; DOCC/SOCC arrays do not play very well together at the moment.; * For wall time, ``DF`` may be a factor of ten or more faster than the exact; integral technologies available in |PSIfour|.; Use ``DF`` unless you need absolute accuracy or do not; have a -JKFIT auxiliary set for your orbital basis/atom type. Then use; ``DIRECT``.; * Don't mess with the DIIS convergence options unless convergence is a problem.; We have optimized the parameters for efficiency over a wide array of system; types.; * Buy a developer a beer!. The ""best-practice"" input file for HF is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvdz; scf_type df; guess sad; ints_tolerance 1.0E-10 # Even this is epically tight, 1.0E-8 is OK; }. energy('scf'); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:61667,energy,energy,61667,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment ghosted (``extract_subsets(1,2)`` pulls out fragment 1 as; Real atoms and sets fragment 2 as Ghost atoms). For beyond bimolecular; complexes, arrays can be used, e.g. ``extract_subsets(2,[1,3])``::. mA = eneyne.extract_subsets(1); energy('scf'); ; clean(); ; mAcp = eneyne.extract_subsets(1,2); energy('scf'). If the molecule contains fragments but is not conveniently ordered for the; ``--`` marker, the :py:func:`~psi4.driver.wrapper_autofrag.auto_fragments` function can be applied, as shown in; :srcsample:`pywrap-basis`, to return as active molecule the previous; active molecule, only fragmented. Advanced Python; ===============. A named molecule in an input file is a full-fledged instance of the; powerful C++ :py:class:`~psi4.core.Molecule` class. Thus, all member; functions (that have been exported via pybind11) documented thereat; are accessible through the handle :samp:`{option_molecule_name}` in; :samp:`molecule {optional_molecule_name} \\{...\\}`. * The molecular geometry can be got and set and manipulated as a; :py:class:`~psi4.core.Matrix` object. Below shows how to access; coordinates in an input file in Python. ::. molecule formaldehyde {; C 0.0 0.0 0.0; O 0.0 1.2 0.0; H -0.8 -0.3 0.0; H 0.8 -0.3 0.0 # set geometry in angstroms; }. formaldehyde.update_geometry() # update the molecule internals since pre-energy()-like call; formaldehyde.print_out() # print molecule to output file; geom1psi = formaldehyde.geometry() # get coordinates in bohr as a psi4.Matrix. geom1psi.print_out() # print coordinates array to output file; geom1py = mat2arr(geom1psi) # get coordinates as a Python array; print geom1py # print coordinates to screen. geom2py = [[ 0.0, 0.0,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:21560,power,powerful,21560,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['power'],['powerful']
Energy Efficiency,"iteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a fu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7331,energy,energy,7331,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ity`` member, passing it a SharedMatrix holding the; current density (remember that it changes during each iteration of the SCF) and; the product will be considered during screening. If only coulomb-like terms; are to be computed, the ``needs_exchange`` argument to the integral object; constructor should be set to false, otherwise it should be true to correcly; account for products of the density and integrals that contribute to; exchange-like terms. Shell blocking; .............. Each underlying integral engine knows whether it will use blocks, and will set up; the metadata automatically. Instead of looping over individual shells, the; user should loop over blocks supplied by the integral object; these blocks will; be just a single shell quartet combination for the case where blocking is not; used. It is simple to loop over pairs within each block using C++11 syntax, as; demonstrated in the code snippet above. Only shell pairs with significant; overlap are included in the shell block information, making this an efficient; way to loop over non-negligible terms. Permutational symmetry; ...................... The pairs within each block are optimized for efficiency. First, they are; screened during the integral object's creation to ensure that only terms with; appreciable overlap are stored. Second, only P,Q combinations that are; permutationally unique are stored, ordered with the higher angular momentum; first. Therefore care must be taken to ensure that the missing permutations; are correctly accounted for when processing the integrals within the loop. See; the DirectJK code in libfock for an example of using this scheme for a Fock; matrix build. Using bra-ket symmetry; ...................... In cases where there is no batching performed, bra-ket symmetry can be; trivially enforced by ensuring that one of the block indices is greater than or; equal to the other. When batching is used, the situation is trickier; some ket; batches may contain a mixture of integrals th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:8705,efficient,efficient,8705,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['efficient'],['efficient']
Energy Efficiency,"iver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42602,energy,energy,42602,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"iver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bcc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48100,energy,energy,48100,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"iver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330282,energy,energy,330282,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"j[2], E, 7, 'Ethyne -D3 (bj)'); .. comment ; .. comment E, G = eneyne.run_dftd3('b3lyp', 'd3'); .. comment compare_values(ref_d3zero[0], E, 7, 'Ethene-Ethyne -D3 (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd2'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)'); .. comment ; .. comment set basis sto-3g; .. comment set scf_type df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:27784,energy,energy,27784,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"k (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6296,energy,energy,6296,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['energy'],['energy']
Energy Efficiency,"k', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:209666,energy,energy,209666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"k', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:497534,energy,energy,497534,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"k', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:29860,energy,energy,29860,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"k, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5694,energy,energy,5694,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"l <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies between two molecules. For; example, ::. energy('mp2', bsse_type='cp'). will compute the counterpoise-corrected density-fitted MP2 interaction energy; between two molecules. |PSIfour| also provides the :py:func:`~psi4.driver.cbs` wrapper,; which automatically computes a complete-basis-set extrapolation (and; automatically sets up the computations with different basis sets required to; do the extrapolation). For example,::. # all equivalent. energy('mp2', corl_basis='cc-pv[dt]z', corl_scheme=corl_xtpl_helgaker_2). energy('mp2/cc-pv[dt]z'). will compute a 2-point Helgaker extrapolation of the correlation energy; using the cc-pVDZ and cc-pVTZ basis sets (with method MP2) and add this; extrapolated correlation energy to the Hartree--Fock energy in the; largest basis (cc-pVTZ). :py:func:`~psi4.driver.cbs` can; be configured behind-the-scenes with explicit arguments, as in the; first example, or the convenience syntax of the equivalent second; example can be used. Another very useful and powerful feature of |PSIfour| is the ability; to compute results on entire databases of molecules at a time,; as provided by the :py:func:`~psi4.driver.wrapper_database.database` wrapper. For example,::. database('mp2', 'S22', cp=1, benchmark='S22B'). will perform DF-MP2 counterpoise-corrected interaction energies; (``cp=1``) on all members of Hobza's S22 database set of van der Waals; dimers, and then compare the results against the S22B benchmark energies.; Built-in databases include S22, A24, HTBH, HBC6, HSG, S22by5, S66, JSCH,; NCB31, S66by8, and NBC10, among others. These wrapper functions are discussed separately in; :ref:`sec:psithonFunc`. Note that the options documented for Python; functions are placed as arguments in the command that calls the function,; not in the ``set {...}`` block or with any other ``set`` command. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:16473,power,powerful,16473,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['power'],['powerful']
Energy Efficiency,"l Assignment of Symmetry-Adapted Perturbation Theory Interaction; Energy Components: The Functional-Group SAPT Partition,""; R. M. Parrish, T. M. Parker, and C. D. Sherrill,; *J. Chem. Theory Comput.* **10**, 4417 (2014).; (doi: `10.1021/ct500724p <https://doi.org/10.1021/ct500724p>`_). * ""Communication: Practical Intramolecular Symmetry Adapted Perturbation Theory; via Hartree-Fock Embedding,""; R. M. Parrish, J. F. Gonthier, C. Corminboeuf, and C. D. Sherrill,; *J. Chem. Phys.* **143**, 051103 (2015).; (doi: `10.1063/1.4927575 <https://doi.org/10.1063/1.4927575>`_). The derivation of the second-order exchange terms without the single-exchange; approximation are found in the following two works:. * ""Intermolecular exchange-induction energies without the overlap expansion,""; R. Sch\ |a_dots|\ ffer and G. Jansen, *Theor. Chem. Acc.* **131**, 1235 (2012).; (doi: `10.1007/s00214-012-1235-6 <https://doi.org/10.1007/s00214-012-1235-6>`_). * ""Single-determinant-based symmetry-adapted perturbation theory without; single-exchange approximation,""; R. Sch\ |a_dots|\ ffer and G. Jansen, *Mol. Phys.* **111**, 2570 (2013).; (doi: `10.1080/00268976.2013.827253 <https://doi.org/10.1080/00268976.2013.827253>`_). Orbital-Optimized Post-Hartree |--| Fock Methods; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; Orbital-optimized second-order perturbation theory (OMP2). * ""Quadratically convergent algorithm for orbital optimization in the; orbital-optimized coupled-cluster doubles method and in orbital-optimized; second-order |MollerPlesset| perturbation theory,""; U. Bozkaya, J. M. Turney, Y. Yamaguchi, H. F. Schaefer, and C. D. Sherrill,; *J. Chem. Phys.* **135**, 104103 (2011).; (doi: `10.1063/1.3631129 <https://doi.org/10.1063/1.3631129>`_). * ""Analytic energy gradients for the orbital-optimized second-order; |MollerPlesset| perturbation theory,"" U. Bozkaya and; C. D. Sherrill, *J. Chem. Phys.* **138**, 184103 (2013).; (doi: `10.1063/1.4803662 <https://doi.org/10.1063/1.4803662>`_).",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:19613,adapt,adapted,19613,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['adapt'],['adapted']
Energy Efficiency,"l and Thermochemical Analysis; =======================================. .. codeauthor:: Rollin A. King and Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:thermo>`, :ref:`PSI Variables <apdx:thermo_psivar>`, :source:`THERMO <psi4/driver/qcdb/vib.py>`. .. caution:: It is important to know that |PSIfour|, like any other; quantum chemistry program, does *not* compute the usual enthalpies,; entropies, or Gibbs free energies *of formation* provided by most; reference books. Instead, quantum chemistry programs compute ""absolute""; thermodynamic properties relative to infinitely separated nuclei and; electrons, not ""formation"" values relative to elements in their standard; states. If you are computing thermodynamic differences, like a reaction; enthalpy computed as the enthalpy of the products minus the enthalpy; of the reactants, then these ""absolute"" enthalpies are perfectly valid; and usable. However, they cannot be mixed and matched with enthalpies of; formation from reference books, since the zero of energy is not the same.; Additionally, the ""thermal energies"" reported in kcal/mol are the ; finite-temperature *corrections* to the electronic total energy, and ; not the overall thermal energies themselves. If in doubt, use the; reported Total Energies in Hartree/particle. Keywords; ^^^^^^^^. .. include:: autodir_options_c/thermo__t.rst; .. include:: autodir_options_c/thermo__p.rst; .. include:: autodir_options_c/thermo__rotational_symmetry_number.rst. .. _`sec:thermoExamples`:. Examples; ^^^^^^^^. A thermochemical analysis is performed after any full (not just specific; symmetry subgroups). If the wavefunction is retained, it may be reused; at a different temperature, pressure, rotational symmetry number, or; isotopic substitution through the function :py:func:`psi4.driver.qcdb.vib.thermo`; as is shown in :srcsample:`freq-isotope2`. A few summary psivars are set: ""ZPVE"", ""THERMAL ENERGY CORRECTION"",; ""ENTHALPY CORRECTION"", ""GIBBS FREE ENE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/thermo.rst:2233,energy,energy,2233,doc/sphinxman/source/thermo.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/thermo.rst,1,['energy'],['energy']
Energy Efficiency,"l be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DFTNL; .. _`sec:dftnl`:. DFT-NL; ======. .. codeauthor:: Daniel G. A. Smith and Holger Kruse; .. sectionauthor:: Holger Kruse. Non-local (NL), density based correlation energy from the VV10 kernel can be added; to arbitrary functionals. .. math:: E_{DFT-NL}=E_{DFT}+E_{NL}. For pre-defined functionals (see Functional overview in :ref:`this Table <table:dft_all>` ) it is sufficient to add `-NL` to; the functional name::. energy('b3lyp-nl'). Modification of the parameters `b` and `C` is done setting |scf__dft_vv10_b| and |scf__dft_vv10_c|. The `C` is usually left unchanged and the originally proposed; value of `C=0.0093` is used. Adding |scf__dft_vv10_b| to any functional activates the calculation of the VV10 kernel. A BLYP-NL calculation can be set as follows::. set DFT_VV10_B 4.0; energy('blyp'). The default `C` parameter will be used. Similar to |scf__dft_dispersion_parameters| the tuple |scf__nl_dispersion_parameters| can used::. set NL_DISPERSION_PARAMTERS [4.0]; energy('blyp'). which is equivalent to the example above. Further examples can be found in the respective :source:`regression test <tests/dft-vv10/input.dat>`. post-SCF time savings; ~~~~~~~~~~~~~~~~~~~~~. Substantial time-savings for energy calculations are available by evaluating the VV10 kernel only at the converged electron density, i.e. in a post-SCF fashion.; The deviations from the fully self-consistent treatment are usually minimal. To activate this set |scf__dft_vv10_postscf| to `true`.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst:1863,energy,energy,1863,doc/sphinxman/source/dftnl.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst,3,['energy'],['energy']
Energy Efficiency,"l electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(H",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50614,energy,energy,50614,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"l electronic second derivative [E_h/a0/a0] for the MP2 level of theory, (3 * {nat}, 3 * {nat}). .. psivar:: MP2.5 TOTAL ENERGY; MP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2.5 level of theory. .. psivar:: MP3 TOTAL ENERGY; MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3 level of theory. .. psivar:: MP4(T) CORRECTION ENERGY. The MP4 triples component [E_h]. Quantity is second right-hand term in; Eq. :eq:`MP4terms`. .. psivar:: MP4(SDQ) TOTAL ENERGY; MP4(SDQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP4 singles, doubles, quadruples level of theory. Quantity; :psivar:`MP4(SDQ) CORRELATION ENERGY` is; first right-hand term in Eq. :eq:`MP4terms`. .. psivar:: MP4 TOTAL ENERGY; MP4 CORRELATION ENERGY; MP4(SDTQ) TOTAL ENERGY; MP4(SDTQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full MP4 level of theory. Quantity :psivar:`MP4 CORRELATION; ENERGY` / :psivar:`MP4(SDTQ) CORRELATION ENERGY`; is left-hand term in Eq. :eq:`MP4terms`. .. math:: E_{\text{MP4}} = E_{\text{MP4(SDQ)}} + E_{\text{MP4(T)}}; :label: MP4terms. .. psivar:: MPn TOTAL ENERGY; MPn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled |MollerPlesset| perturbation theory level.; *n* is MP perturbation order. .. psivar:: MP2 DOUBLES ENERGY; MP2.5 DOUBLES ENERGY; MP3 DOUBLES ENERGY; CEPA(0) DOUBLES ENERGY; CEPA(1) DOUBLES ENERGY; CEPA(2) DOUBLES ENERGY; CEPA(3) DOUBLES ENERGY; ACPF DOUBLES ENERGY; AQCC DOUBLES ENERGY; CISD DOUBLES ENERGY; QCISD DOUBLES ENERGY; REMP2 DOUBLES ENERGY; LCCD DOUBLES ENERGY; CCD DOUBLES ENERGY; LCCSD DOUBLES ENERGY; CCSD DOUBLES ENERGY; OMP2 DOUBLES ENERGY; OMP2.5 DOUBLES ENERGY; OMP3 DOUBLES ENERGY; OREMP2 DOUBLES ENERGY; OLCCD DOUBLES ENERGY. The doubles portion [E_h] of the named corre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:41076,energy,energy,41076,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"l of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; k",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5768,energy,energy,5768,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"l_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363118,energy,energy,363118,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:370837,energy,energy,370837,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:175785,energy,energy,175785,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:177959,energy,energy,177959,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:109286,energy,energy,109286,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446313,energy,energy,446313,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:97980,energy,energy,97980,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388580,energy,energy,388580,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21024,energy,energy,21024,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21755,energy,energy,21755,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23030,energy,energy,23030,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26218,energy,energy,26218,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26949,energy,energy,26949,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28224,energy,energy,28224,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28955,energy,energy,28955,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:30955,energy,energy,30955,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515673,energy,energy,515673,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21934,energy,energy,21934,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:27128,energy,energy,27128,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"lated CI wavefunctions that can be helpful in more ; challenging cases such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]_. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]_. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CI's. A RAS CI selects determinants for the; model space as those which have no more than :math:`n` holes in the lowest set; of orbitals (called RAS I) and no more than :math:`m` electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the RAS CI. The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. It can also perform approximate; CASSCF computations in which one uses RAS restrictions on the CI excitations,; rather than doing a full CI in the active space. This is called a ; RASSCF. CASSCF and RASSCF computations are types of multi-configurational; self-consistent-field procedures, and are described in :ref:`sec:mcscf`. As mentioned above, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This user's; manual will provide only an ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:4468,efficient,efficient,4468,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['efficient'],['efficient']
Energy Efficiency,"lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228098,energy,energy,228098,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485221,energy,energy,485221,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105407,energy,energy,105407,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:129461,energy,energy,129461,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le. In; practice, this approximation is very good and should always be applied.; Publications resulting from the use of MP2 NO-based approximations should ; cite the following: [Hohenstein:2010:104107]_. Basic Keywords Controlling MP2 NO Approximations; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30118,charge,charge-transfer,30118,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,2,"['charge', 'energy']","['charge-transfer', 'energy']"
Energy Efficiency,"lecule input. If numerical errors results in symmetry ; breaking, while Cartesian constraints are active, symmetrization cannot occur and; an error will be raised, prompting you to restart the job. * To scan the potential energy surface by optimizing at several fixed values; of the dihedral angle of HOOH. .. code-block:: none. molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). Multi-Fragment Optimizations; ^^^^^^^^^^^^^^^^^^^",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:8578,energy,energy,8578,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"lementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114]_.; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass--Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos' ANO basis sets. .. note:: See also :ref:`sec:DKH` for another relativistic Hamiltonian. .. _`sec:ScalarRelativistic`:. A First Example; ^^^^^^^^^^^^^^^. The following is a simple input that will perform a Hartree--Fock calculation; using the X2C Hamiltonian. ::. molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result::. @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy::. @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -100.0192889141131474. Basis sets options; ^^^^^^^^^^^^^^^^^^. The X2C module in |PSIfour| supports different combinations of basis set.; By default, if the input file specifies only |mints__basis|, then the X2C; module will solve the modified Dirac equation in an uncontracted basis and then; recontract the X2C Hamiltonian in the original basis.; Alternatively, the user can use |globals__basis_relativistic| to specify a different; basis set to solve the modified Dirac equation. ::. set {; basis cc-pvdz-dk; basis_relativistic cc-pvtz-dk; relativistic x2c; }. It is recommended that when employing the X2C relativistic Hamiltonian, that you use a fully; decontracted basis set. This can be done simply in the input by adding ""-decon"" to the ; name of th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:2801,energy,energy,2801,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,1,['energy'],['energy']
Energy Efficiency,"les.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DFTNL; .. _`sec:dftnl`:. DFT-NL; ======. .. codeauthor:: Daniel G. A. Smith and Holger Kruse; .. sectionauthor:: Holger Kruse. Non-local (NL), density based correlation energy from the VV10 kernel can be added; to arbitrary functionals. .. math:: E_{DFT-NL}=E_{DFT}+E_{NL}. For pre-defined functionals (see Functional overview in :ref:`this Table <table:dft_all>` ) it is sufficient to add `-NL` to; the functional name::. energy('b3lyp-nl'). Modification of the parameters `b` and `C` is done setting |scf__dft_vv10_b| and |scf__dft_vv10_c|. The `C` is usually left unchanged and the originally proposed; value of `C=0.0093` is used. Adding |scf__dft_vv10_b| to any functional activates the calculation of the VV10 kernel. A BLYP-NL calculation can be set as follows::. set DFT_VV10_B 4.0; energy('blyp'). The default `C` parameter will be used. Similar to |scf__dft_dispersion_parameters| the tuple |scf__nl_dispersion_parameters| can used::. set NL_DISPERSION_PARAMTERS [4.0]; energy('blyp'). which is equivalent to the example above. Further examples can be found in the respective :source:`regression test <tests/dft-vv10/input.dat>`. post-SCF time savings; ~~~~~~~~~~~~~~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst:1241,energy,energy,1241,doc/sphinxman/source/dftnl.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst,1,['energy'],['energy']
Energy Efficiency,"lex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This user's; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix :ref:`apdx:detci`. For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, *etc.*,; with the common name for that CI wavefunction, like ``energy('cisd')`` ; for a CISD single-point energy. The Python driver; recognizes ``cisd``, ``cisdt``, and ``cisdtq``. As mentioned above, codes; written specifically for CISD will be more efficient than DETCI for a ; CISD computation, and ``energy('cisd')`` by default will call other,; more efficient modules. To force a CISD computation with DETCI,; set |globals__qc_module| = DETCI. . Higher order single-reference CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ``ci6``. A full; CI can be specified by ``fci``. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like ``energy('detci')``. The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially |detci__ex_level|) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in :source:`samples`. .. _`table:ci_spaces`:. .. table:: Orbital spaces for CI computations. +----------------------------+----------------------------+-----------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:6142,efficient,efficient,6142,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,3,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"ll file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously. Elementary Restart; ==================. The |PSIfour| intermediate files use the following naming scheme ::. psi.PID.name.filenumber. where by default, PID is the process number, name the name of the molecule,; and filenumber is listed in :ref:`content <apdx:psiFiles>`. For those modules providing restart capabilities, the previous file can; be provided through the``restart_file`` option ::. energy('scf',restart_file='./psi.PID.name.filenumber'). Only the filenumber is necessary for the driver to appropriately rename the; file and copy it to the scratch directory where |PSIfour| will expect it.; The restart capabilities of a specific method (if any) are found in that method's documentation. To provide multiple files, pass them as arguments of a Python list ::. energy('scf',restart_file=['./file1.filenumber','./file2.filenumber']). Note that the ``restart_file`` options is only available for energy procedures as of now. Executing |PSIfour| with the :option:`psi4 -m` (for; messy) flag will prevent files being deleted at the end of the run::. psi4 -m. The mechanism for restarting HF/DFT calculations is described in details :ref:`here <sec:scfrestart>`. .. _`sec:save_wfn`:. Saving the Wavefunction; =======================. A core object of |PSIfour| is the Wavefunction (short ``wfn``) object ::. energy, wfn = energy('scf',return_wfn=True). This C++/Python object (:py:class:`psi4.core.Wavefunction`) contains orbital; data, basis set information, result variables and more.; It can be saved either to a numpy file or converted to a python dictionary ::. # write the wavefunction to file; wfn.to_file('my_wfn'). # alternatively store the dict representation of the wavefunction in memory; wfn_dict = wfn.to_file(). In either form, its attributes can be set and edited.; This is an expert-level feature, though.; In general, let |PSIfour| create the Wavefunction, then tr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:5986,energy,energy,5986,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['energy'],['energy']
Energy Efficiency,"lobals__scf_type| | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | |globals__scf_type| | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | |globals__scf_type| | ✓̲ ✓̳ | ✓̲ ✓̳ | | ✓̲ ✓̳ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#r10]_ | |globals__scf_type| | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#r1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#r2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#r3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#r4] Finite difference Hessians are not marked explicitly by ""∷"", but the capability can be gleaned from the gradient or energy availability.; .. [#r10] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_scf.rst:5036,energy,energy,5036,doc/sphinxman/source/preview_capabilities_scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_scf.rst,2,['energy'],['energy']
Energy Efficiency,"lt'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446913,energy,energy,446913,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"lt'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359857,energy,energy,359857,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169870,energy,energy,169870,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171203,energy,energy,171203,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:479481,energy,energy,479481,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"luate the Kohn--Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree--Fock; with potentially exact treatment of electron correlation for ""free"" was one of; the primary motivations for KS-DFT's adoption by chemists in the late 1980s and; early 1990s. Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn--Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions. Generalized Kohn--Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as ""implicit"" density; functionals, as the orbitals are themselves functionals of the Kohn--Sham; potential. The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree--Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note tha",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:8785,charge,charge,8785,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['charge'],['charge']
Energy Efficiency,"luster Theory,""; F. A. Evangelista, E. Prochnow, J. Gauss, and H. F. Schaefer,; *J. Chem. Phys.* **132**, 074107 (2010).; (doi: `10.1063/1.3305335 <https://doi.org/10.1063/1.3305335>`_). Mk-MRCCSDT(-n). * ""Triple Excitations in State-Specific Multireference Coupled; Cluster Theory: Application of Mk-MRCCSDT and Mk-MRCCSDT-n Methods to; Model Systems,"" F. A. Evangelista, A. C. Simmonett, W. D. Allen,; H. F. Schaefer, and J. Gauss, *J. Chem. Phys.* **128**, 124104; (2008).; (doi: `10.1063/1.2834927 <https://doi.org/10.1063/1.2834927>`_). Mk-MRPT2. * ""A Companion Perturbation Theory for State-specific; Multireference Coupled Cluster Methods,""; F. A. Evangelista, A. C. Simmonett, H. F. Schaefer, D. Mukherjee, and; W. D. Allen,; *Phys. Chem. Chem. Phys.* **11**, 4728-4741 (2009).; (doi: `10.1039/b822910d <https://doi.org/10.1039/b822910d>`_). Symmetry-Adapted Perturbation Theory (SAPT); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. |PSIfour| features an extremely efficient code to perform wavefunction-based; Symmetry Adapted Perturbation Theory (SAPT). A good review article for this; method is as follows:. * ""Perturbation Theory Approach to Intermolecular Potential Energy; Surfaces of van der Waals Complexes,"" B. Jeziorski, R. Moszynski,; and K. Szalewicz, *Chem. Rev.* **94**, 1887-1930 (1994).; (doi: `10.1021/cr00031a008 <https://doi.org/10.1021/cr00031a008>`_). |PSIfour| benefits enormously from the introduction of density fitting (DF); into SAPT. There are several SAPT truncations available in |PSIfour|. For; guidance on which one to choose, see the SAPT section of the manual; and refer to the following systematic study:. * ""Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and; Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M.; Parrish, A. G. Ryno, and C. D. Sherrill, *J. Chem. Phys.* **140**,; 094106 (2014).; (doi: `10.1063/1.4867135 <https://doi.org/10.1063/1.4867135>`_). The theory and implementation of DF-SAPT is discussed;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:14967,efficient,efficient,14967,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"lute energies (1E-06 au) and; relative energies (below 0.002 kcal/mol for S22), depending also on the applied grid, compared; to older versions. We advise not to mix absolute energies absolute energies from before and after this change for the; calculation of relative energies. .. note:: After May 2017 (anytime after the v1.1 release), |PSIfour|; switched from hand- (+Matlab) coded functionals to Libxc. Thus; many DFT results will be slightly different. Functionals more than; slightly different are B97-D, wB97X (note, *not* wB97X-D), SOGGA,; DFDL, and M05. Theory; ~~~~~~. Generalized Kohn--Sham Density Functional Theory (KS-DFT) [Kohn:1965:A1133]_ [Parr:1989]_ is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio. Pure Kohn--Sham DFT is built on the Hohenberg--Kohn theorems [Hohenberg:1964:136]_ which states: A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true :math:`N`\ -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn--Sham orbitals. KS-DFT borrows much of the machinery of Hartree--Fock, as is; evident by looking at the energy expression,. .. math::. E_{\mathrm{KS}}; &= \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:2878,energy,energy,2878,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"lysis with PyMol and perform a; .. ""difference F-SAPT"" analysis; .. - `I-SAPT#1; .. <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of I-SAPT to analyze the interaction between the two phenol; .. groups in a 2,4-pentanediol molecule.; .. - `I-SAPT#2; .. <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the density fields and ESPs of the various moieties of; .. the I-SAPT embedding scheme with PyMol; .. - `F/I-SAPT Options; .. <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Details all of the more-advanced options in the F/I-SAPT code (rarely needed). The scripts discussed below are located in :source:`psi4/share/psi4/fsapt`. F-SAPT: A Representative Example; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the intermolecular interaction energy components between the; various hydroxyl and phenyl moieties of the phenol dimer. This example is; explicitly included in :srcsample:`fsapt1`. A video; lecture explaining this example is available `F-SAPT#1; <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the order-1 F-SAPT analysis; with PyMol and perform a ""difference F-SAPT""; analysis is available `F-SAPT#2; <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O -1.3885044 1.9298523 -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:4628,energy,energy,4628,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"l}` is either; the IUPAC molecule name or the CID number. See :ref:`sec:pubchem` for; details. **Symmetry**; The symmetry can be specified by a line reading :samp:`symmetry; {symbol}`, where :samp:`{symbol}` is the Sch\ |o_dots|\ nflies symbol; of the (Abelian) point group to use for the computation, one of one of; ``c1``, ``c2``, ``ci``, ``cs``, ``d2``, ``c2h``, ``c2v``, or ``d2h``.; This need not be specified, as the molecular symmetry is automatically; detected by |PSIfour|. See :ref:`sec:symmetry` for details. **Fragments**; A line reading ``--`` is interpreted as the separator between two non-covalently ; bound molecular fragments. See :ref:`sec:fragments` for details. Multiple Molecules; ==================. To facilitate more elaborate computations, it is possible to provide a name for; each molecule and tell |PSIfour| which one should be used in a given; calculation. For example, consider the following input file::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; energy('scf') # on H. Here, two separate jobs are performed on two different molecules; the first is; performed on H\ :sub:`2`, while the second is for H atom. The last molecule to be; specified is the ""active"" molecule by default. To explicitly activate a named; molecule, the activate command is provided. With it, the above input file can be; equivalently written as follows. Alternatively, the molecule can be specified; directly to the computing function. Below, the third calculation is the same as; the first. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobContr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:6689,energy,energy,6689,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"m Chemistry Programs. T. Daniel Crawford ; Version: June 18, 2001 ; crawdad@vt.edu. I. Introduction. In many-body theories such as coupled cluster or MBPT, one finds many; complicated algebraic expressions involving products of multi-index; quantities such as one- and two-electron integrals, cluster; amplitudes, density matrices, etc. Efficient evaluation of; these products can require a great deal of effort, particularly if one; wishes to use Abelian point-group symmetry to reduce the number of; terms that must be computed and stored. The direct-product; decomposition library, LIBDPD, is designed to assist the programmer; with this problem by providing (1) a symmetry-blocked, matrix-based; storage scheme for all two- and four-index quantities, (2) a set of; functions for evaluating various types of products among them, and (3); a set of utilities for sorting them to different index orderings. The; library is currently used in the set of coupled cluster and; perturbation theory energy and analytic gradient codes under; development in the PSI package of quantum chemical programs. This; manual describes the design of the library and provides a set of; examples for its use. The header file dpd.h provides proper declarations for all; structures and functions used in the library. II. Fundamental Symmetry Concepts. In the current version of libdpd, I assume that all multi-index; quantities are totally symmetric, i.e., the direct product of; the irreducible representations (irreps) associated with the component; orbital indices corresponds to the totally symmetric irrep of the; given point group. (This assumption is in the process of being; removed, however.) Furthermore, each orbital subset of interest; (e.g., occupied or virtual orbitals) must be grouped by; symmetry. This allows one to organize the given quantity in a; symmetry-blocked matrix for which only the symmetry-allowed elements; are actually stored on disk or in memory. As an example, consider the set of two-ele",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:1132,energy,energy,1132,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,2,['energy'],['energy']
Energy Efficiency,"math:`2ovN_aux` doubles. SAPT(DFT) requires a few special treatments to obtain accurate; result. The DFT functionals used in SAPT(DFT) need to be asymptotically; corrected with Gradient Regulated Asymptotic Correction scheme (GRAC),; in order to recover the correct long-range asymptotic behavior; (approaching :math:`-1/r` as :math:`r` approaches infinity). The program; requires manual input of GRAC shift parameter for each monomer through; keywords |sapt__sapt_dft_grac_shift_a| and |sapt__sapt_dft_grac_shift_b|,; which should be equal to the difference of the actual ionization; potential and the corresponding Kohn-Sham HOMO energy. The dispersion; term needs to be computed with orbital response for good accuracy,; and it is recommended to enable |sapt__sapt_dft_do_hybrid| (set to; ``True`` by default). The coupled exchange-dispersion energy is usually; estimated by scaling from the uncoupled value either by a fitted fixed; value (suggested initially by [Hesselmann:2014:094107]_ for a local Hartree--Fock (LHF) formulation and then revised; by [Xie:2022:024801]_ for non-LHF) or; by the ratio of; coupled and uncoupled dispersion energy (suggested by [Podeszwa:2006:400]_ ). ; This can be controlled by keyword |sapt__sapt_dft_exch_disp_scale_scheme|, ; with ``FIXED`` using the Hesselmann/Xie approach (|PSIfours| default prior ; to Nov 2022), ``DISP`` using the Podeszwa approach (|PSIfours| default after Nov 2022),; or ``NONE`` for not scaling and using the uncoupled exchange-dispersion ; energy directly. .. warning:: Since Nov 2022, the defaults of options |sapt__sapt_dft_exch_disp_scale_scheme| and |sapt__sapt_dft_exch_disp_fixed_scale|; have been changed. Before, the former defaulted to ``FIXED`` with Hesselmann value of 0.686 for the latter. Now, the former defaults to ``DISP`` and should you instead select ``FIXED``, the default for the latter is the Xie value of 0.770. This might cause; an older version of |PSIfour| to produce a different value of; exchange-dispersio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:23905,energy,energy,23905,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,2,['energy'],['energy']
Energy Efficiency,"math:`E^{(2)}` scales quadratically with the error in the amplitudes. No local approximations have been made so far, and this iterative approach can; be used to exactly determine :math:`E^{(2)}` with :math:`{\cal O}(N^5)` cost.; In DLPNO-MP2, the first local approximation is to screen distant, non-interacting; orbital pairs ``ij``. Orbital pairs are screened if below both an overlap criteria:. .. math::; :label: Differential Overlap Integral. DOI_{ij} \equiv \sqrt{\int d\mathbf{r} | \chi_{i}(\mathbf{r}) | ^{2} | \chi_{j}(\mathbf{r}) | ^{2}}, . and a pair energy estimate: . .. math::; :label: Dipole Approximation. e_{ij}^{approx} = -\frac{4}{R^{6}} \sum_{a_{i} \in [i],b_{j} \in [j]} \frac{ (2 \langle i | \mathbf{r} | a_{i} \rangle \langle j | \mathbf{r} | b_{j} \rangle)^{2}}{\epsilon_{a_{i}} + \epsilon_{b_{j}} - f_{ii} - f_{jj}},. in which small domains of virtual orbitals are used for each local MO. As a; result, an asymptotically linear number of ``ij`` pairs enter the local MP2; equations, and the approximate pair energy of neglected pairs is added to; the final energy. The second major local approximation in DLPNO-MP2 is the truncation of the virtual; space. Initially, exchange integrals are calculated in the LMO/PAO basis using the; standard density fitting approach:. .. math::; :label: Exchange. (ia|jb) = \sum_{K,L \in [ij]} (ia|K)[\mathbf{J}^{-1}]_{KL}(L|jb). This is done with linear scaling effort by exploiting the locality of the LMOs, PAOs,; and auxiliary basis functions.; Solving the iterative local MP2 equations in the LMO/PAO basis requires large PAO; domains to achieve reasonable accuracy. Instead, the virtual space is transformed; into the much more compact pair natural orbital representation. The (approximate); PNOs diagonalize the virtual-virtual block of the (approximate) MP2 density matrix:. .. math::; :label: PNOs. D_{ij}^{ab} = \frac{1}{1 + \delta_{ij}}[\tilde{t}_{ij}^{\dagger}t_{ij} + \tilde{t}_{ij}t_{ij}^{\dagger}]^{ab}. which is constructed fr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:6711,energy,energy,6711,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,2,['energy'],['energy']
Energy Efficiency,"math:`^2A_1` state can be obtained with; the ::. SOCC = [1, 0, 0, 0]. specification, which would become ::. SOCC = [1, 0]. under the above-mentioned reduction in symmetry. The :math:`^2B_2` state,; whose singly-occupied orbitals are ::. SOCC = [0, 0, 0, 1]. would be mapped to ::. SOCC = [1, 0]. which is the same occupation as the :math:`^2A_1` state. In this case, the; :math:`^2A_1` state is lower in energy, and is not problematic. The distorted; geometries for the :math:`^2B_2` state are excited states that are subject to; variational collapse. One way to obtain reliable energies for these states is; to use a multi-state method; in this case it's easier to run the entire; computation in the lowest symmetry needed during the finite difference; procedure. .. index:: molecule; multiple fragments; .. _`sec:fragments`:. Non-Covalently Bonded Molecule Fragments; ========================================. |PSIfour| has an extensive range of tools for treating non-covalent; intermolecular forces, including counterpoise corrections and symmetry adapted; perturbation theory methods. These require the definition of which fragments; are interacting within the complex. |PSIfour| provides a very simple mechanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:18697,adapt,adapted,18697,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['adapt'],['adapted']
Energy Efficiency,"me ROOT m -> ROOT n EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN A (LEN) - h TRANSITION. The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN) - h TRANSITION. The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n ROTAT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:13892,energy,energy,13892,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:52267,energy,energy,52267,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:274858,energy,energy,274858,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281228,energy,energy,281228,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"metry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15738,energy,energy,15738,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"mited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These method are defined with their own basis set and thus no basis set should be set by the user.; |PSIfour| will select the intended basis sets: HF-3c/MINIX, PBEh-3c/def2-mSVP, B97-3c/def2-mTZVP, r2SCAN-3c/def2-mTZVPP, wB97X-3c/vDZP.; If a basis has previously been set for another calculation, use the slash syntax to ""empty"" the basis; option for the scope of the current calculation, ``energy(""hf3c/"")``. A few practical examples:. * HF-3c single point with default minix basis ::. energy('hf3c'). * PBEh-3c optimization with default def2-mSVP basis ::. optimize('pbeh3c'). * r2SCAN-3c with default basis after basis set ::. set basis cc-pvdz; energy('r2scan3c/'). If only BSSE/basis set corrections (rather than total energies) are of; interest, the ``gcp`` program can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_gcp`. (This function; is the same |PSIfour|/``gcp`` interface that is called during an scf job.); This route is much faster than running a HF or DFT energy. ::. molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). >>> E, G = nene.run_gcp('hf3c'). >>> E, G = nene.run_gcp(func='HF3c', verbose=True). .. autofunction:: qcdb.Molecule.run_gcp. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:4835,energy,energy,4835,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,4,['energy'],['energy']
Energy Efficiency,"mm`:. External potentials and QM/MM; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the implementation of :ref:`EFP <sec:libefp>` for accurate QM/MM; computations, |PSIfour| can perform more rudimentary QM/MM procedures via the; |scf__extern| keyword. The following snippet, extracted from the; :srcsample:`extern1` test case, demonstrates its use for a TIP3P external potential::. import numpy as np; external_potentials = [; [-0.834, np.array([1.649232019048,0.0,-2.356023604706]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-3.799961446760]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-0.912085762652]) / psi_bohr2angstroms]]. gradient('scf', external_potentials=external_potentials). The ``external_potentials`` array has three rows for three separate; particles, and it is passed to the SCF code on the last line. The; rows are composed of the atomic charge, x coordinate, y coordinate,; and z coordinate in that order. The atomic charge and coordinates are; specified in atomic units, [e] and [a0]. Add as many particle rows as; needed to describe the full MM region. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, setting an; external potential like the above looked like ::. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834, 1.649232019048, 0.0, -2.356023604706); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -3.799961446760); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -0.912085762652); psi4.set_global_option_python('EXTERN', Chrgfield.extern). gradient('scf'). The main differences are that (1) the specification of; charge locations in the old way used the units of the active; molecule, whereas the new way always uses Bohr and (2) the; specification of the charge and locations in the old way used the; :py:class:`psi4.driver.QMMM` class directly and added one charge; per command, whereas the new way consolidates all into an array and; passes it by keyword argument to the calculation. The successor to the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:54650,charge,charge,54650,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['charge'],['charge']
Energy Efficiency,"mma_1}` corresponds to a mean-field Hartree--Fock-like density,; while the non-idempotent correction :math:`\boldsymbol{\tau}`; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. .. math:: . E_{DCT} = \frac{1}{2} \left( h_p^q + f_p^q \right) \gamma_q^p + \frac{1}{4} \bar{g}_{pq}^{rs} \lambda_{rs}^{pq}. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. .. math:: . \bar{g}_{pq}^{rs} = g_{pq}^{rs} - g_{pq}^{sr}. .. math:: . f_p^q = h_p^q + \bar{g}_{pr}^{qs} \gamma_{s}^{r}. Energy functional :math:`E_{DCT}` has several important properties. First,; the energy is now a function of two sets of independent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:4313,energy,energy,4313,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"mment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment activate(mA); .. comment set dft_dispersion_parameters [1.0]; .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:29679,energy,energy,29679,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334573,energy,energy,334573,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483279,energy,energy,483279,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484633,energy,energy,484633,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:63174,energy,energy,63174,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81393,energy,energy,81393,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:174315,energy,energy,174315,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527994,energy,energy,527994,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359680,energy,energy,359680,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15545,energy,energy,15545,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"mory 1 GB; ; molecule mol {; 0 1; O -1.3885044 1.9298523 -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.0696860 -0.9574153; C 2.2417367 -1.1069765 -1.3128110; C 3.3315674 -1.5665603 -0.5748636; C 3.7696838 -0.8396901 0.5286439; C 3.1224836 0.3383498 0.8960491; H 0.7445512 0.4367983 -1.5218583; H 1.8921463 -1.6649726 -2.1701843; H 3.8330227 -2.4811537 -0.8566666; H 4.6137632 -1.1850101 1.1092635; H 3.4598854 0.9030376 1.7569489; symmetry c1; no_reorient; no_com; }; ; set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; }; ; energy('fisapt0'). This file runs a DF-HF computation on the full dimer using |PSIfours| existing; SCF code. The monomer SCF computations are performed inside the FISAPT module,; following which a complete DF-SAPT0 computation is performed. Additional bits of; analysis are performed to generate the order-2 partition of the SAPT terms to; the level of nuclei and localized occupied orbitals |w--w| this generally does not; incur much additional overhead beyond a standard SAPT0 computations. The; nuclear/orbital partition data is written to the folder :file:`fsapt/` in the same; directory as the input file (this can be changed by |fisapt__fisapt_fsapt_filepath|). One obtains the desired F-SAPT partition by post-processing the data in; :file:`fsapt/`. Within this dir, the user is expected to provide the ASCII files; :file:`fA.dat` and :file:`fB.dat`, which describe the assignment of atoms to chemical; functional groups using 1-based orderin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:6251,energy,energy,6251,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"most appropriate for use with the primary basis.; For example, if the primary basis is aug-cc-pVDZ, the default; |fnocc__df_basis_cc| will be aug-cc-pVDZ-RI. Alternatively, the user can request that the DF-CCSD(T) procedure use a; set of vectors defined by the Cholesky decomposition of the ERI tensor as; the auxiliary basis. This feature is enabled by specifying |globals__cc_type| ``CD``.; CD methods can be enabled in the SCF; procedure as well, by specifying the |globals__scf_type| as ``CD``. The; accuracy of the decomposition can be controlled through the keyword; |fnocc__cholesky_tolerance|. .. comment This feature is enabled by specifying |fnocc__df_basis_cc| as ""CHOLESKY"". . The following input file sets up a DF-CCSD(T); computation using CD integrals ::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set {; scf_type cd; cc_type cd; basis aug-cc-pvdz; freeze_core true; }; energy('ccsd(t)'). The resulting CCSD(T) correlation energy will be equivalent to that; obtained from a conventional computation if |fnocc__cholesky_tolerance| is; sufficiently small (*e.g.* ``1e-9``). .. _`sec:fnogn`:. Gn theory; ~~~~~~~~~. The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]_\. The G2 procedure may be called through the; :py:func:`~psi4.driver.energy` wrapper: ::. energy('gaussian-2'). Supported methods; ~~~~~~~~~~~~~~~~~. The various methods supported by the FNOCC module in |Psifour| are; summarized in Table :ref:`FNOCC Methods <table:fnocc_methods>`; and detailed (except FNO) in Table :ref:`FNOCC Capabilities; <table:fnocc_stdsuite>`. Note that these methods are implemented; for closed-shell reference only. Without ``set qc_module fnocc``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods>`. .. _`table:fnocc_methods`:. .. table:: Theoretical methods accessible through FNOCC. +-------------------------+------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:15639,energy,energy,15639,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:393180,energy,energy,393180,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,mp2p5-1 omp2p5-2 omp2p5-grad1 omp2p5-grad2 omp3-1 omp3-2; omp3-3 omp3-4 omp3-5 omp3-grad1 omp3-grad2 opt-lindep-change; opt1 opt1-fd opt2 opt2-fd opt3 opt4 opt5 opt6 opt7 opt8 opt9; opt11 opt12 opt13 opt14 opt15 opt16 opt-irc-1 opt-irc-2 opt-irc-3; opt-freeze-coords opt-full-hess-every; oremp-grad1 oremp-grad2; phi-ao; props1 props2 props3 props4 psimrcc-ccsd_t-1 psimrcc-ccsd_t-2; psimrcc-ccsd_t-3 psimrcc-ccsd_t-4 psimrcc-fd-freq1; psimrcc-fd-freq2 psimrcc-pt2 psimrcc-sp1 psithon1 psithon2; pubchem1 pubchem2 pywrap-alias pywrap-all pywrap-basis; pywrap-cbs1 pywrap-checkrun-convcrit pywrap-checkrun-rhf; pywrap-checkrun-rohf pywrap-checkrun-uhf pywrap-db1; pywrap-db3; pywrap-molecule rasci-c2-active rasci-h2o; rasci-ne rasscf-sp sad-scf-type sad1 sapt1 sapt2 sapt3 sapt4 sapt5 sapt6 sapt-dft-api sapt-dft-lrc; remp-energy1 remp-energy2; sapt-exch-disp-inf sapt-exch-ind-inf sapt-exch-ind30-inf; sapt7 sapt8 scf-bz2 scf-dipder scf-guess scf-guess-read1 scf-upcast-custom-basis; scf-guess-read2 scf-guess-read3 scf1 scf-occ scf2 scf3 scf4 scf5 scf6; scf7 scf-level-shift-rks scf-level-shift-uhf scf-level-shift-cuhf scf-level-shift-rohf; scf-property soscf-large soscf-ref; soscf-dft stability1 dfep2-1 dfep2-2 sapt-dft1 sapt-dft2 sapt-compare sapt-sf1 dft-custom dft-reference; stability2 stability3 tu1-h2o-energy tu2-ch2-energy tu3-h2o-opt scf-response1 scf-response2 scf-response3; scf-cholesky-basis scf-auto-cholesky; tu4-h2o-freq tu5-sapt tu6-cp-ne2 x2c1 x2c2 x2c3 x2c-perturb-h zaptn-nh2; options1 cubeprop-esp dft-smoke scf-hess1 scf-hess2 scf-hess3 scf-hess4 scf-hess5 scf-freq1 dft-jk scf-coverage; dft-custom-dhdf dft-custom-hybrid dft-custom-mgga dft-custom-gga; pywrap-bfs pywrap-align pywrap-align-chiral mints12 cc-module; tdscf-1 tdscf-2 tdscf-3 tdscf-4 tdscf-5 tdscf-6 tdscf-7; dft-pruning freq-masses sapt9 sapt10 sapt11 scf-uhf-grad-nobeta; linK-1 linK-2 linK-3; cbs-xtpl-energy-conv ddd-deriv nbody-he-4b ddd-function-kwargs; ); add_subdirectory(${test_name}); endforeach().,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:5535,energy,energy,5535,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,3,['energy'],"['energy', 'energy-conv']"
Energy Efficiency,"mplexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contrib",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7195,energy,energy,7195,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"mprehend; }. set {; s_tolerance 0.0001 # Set an unreasonably tight; # tolerance to force canonical; basis aug-cc-pv5z # This diffuse basis will have; # small-ish eigenvalues for even H2O; print 3; }. energy('scf'). Output::. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 145 145 0 0 0 0; B 142 142 0 0 0 0; -------------------------------------------------------; Total 287 287 5 5 5 0; -------------------------------------------------------. ... Minimum eigenvalue in the overlap matrix is 1.6888063568E-05.; Using Canonical Orthogonalization with cutoff of 1.0000000000E-04.; Irrep 0, 1 of 145 possible MOs eliminated.; Irrep 1, 2 of 142 possible MOs eliminated.; Overall, 3 of 287 possible MOs eliminated. In this example, there are 287 AO basis functions after spherical harmonics are; applied. These are used to produce 287 symmetry adapted USOs, 145 of which are; assigned to irrep A, and 142 of which are assigned to irrep B. Within irrep A,; 144 OSOs fall above the eigenvalue cutoff, and within irrep B 140 OSOs fall; above the eigenvalue cutoff. In total, 284 molecular orbitals are chosen from; 287 AOs/USOs. .. _`sec:scfguess`:. Initial Guess; ~~~~~~~~~~~~~. In each step of the SCF procedure, a new Fock or Kohn--Sham potential is built; according to the previous density, following which the potential is diagonalized; to produce new molecular orbitals, from which a new density is computed. This; procedure is continued until either convergence is reached or a preset maximum; number of iterations is exceeded. Convergence is determined by both change in; energy and root-mean-square change in density matrix values, which must be below; the user-specified |scf__e_convergence| and |scf__d_convergence|, respectively.; The maximum number of iterations is specified by the |scf__maxiter| option. It; should be noted that SCF is a chaotic process, and,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:17197,adapt,adapted,17197,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['adapt'],['adapted']
Energy Efficiency,"n also be accessed from the input file as a; :py:class:`~psi4.core.Matrix` object through the wfn as; :py:func:`psi4.core.Wavefunction.gradient`. Previously, cfour communicated through; `psi4.core.legacy_gradient` which was accessed through `psi4.core.get_gradient()`. .. rubric:: Cfour Files. The contents of all files associated with Cfour are accessible from the; input file through the Python dictionary ``P4C4_INFO``. That is,; ``P4C4_INFO['zmat']`` returns a string of the input file sent to Cfour.; Accessible arguments are ``zmat``, ``output``, and any that have been; produced of ``grd``. For example, to print to the screen if CC convergence; is reached, the following could be placed in the |PSIfour| input file. ::. energy('c4-ccsd'); print 'miracle?', 'miracle' in P4C4_INFO['output']. .. rubric:: Scratch Files. By default, a separate subdirectory for each Cfour call is created within; the job's scratch directory. To explicitly specify the location of the; Cfour scratch, execute with, for example, ``energy('cfour',; path='/full/path/to/cfour/scratch')``. Regardless of whether the location; is specified or default, whether to preserve the scratch directory after; the computation can be specified with ``energy('cfour', keep=True)`` or; (the default) ``energy('cfour', keep=False)``. *path* and *keep* are; keyword arguments that get interpreted by the; :py:func:`~psi4.driver.procrouting.interface_cfour.run_cfour` function documented below. .. autofunction:: psi4.driver.procrouting.interface_cfour.run_cfour(name [, keep, path]). .. _`sec:cfourFunctionality`:. Functionality; ~~~~~~~~~~~~~. Through clever use of the ``cfour {...}`` block, one could run most any; Cfour computation through the P4C4 interface. In contrast, enumerated; below are tested functionalities where results from Cfour are collected; into |PSIfour| data objects. .. rubric:: Implemented. * Single-point :py:func:`~psi4.driver.energy` commands for :ref:`ground state; methods <table:energy_cfour>`. Example",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:26809,energy,energy,26809,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"n our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4003,energy,energy,4003,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"n properties() function, e.g.::. properties('ccsd', properties=['dipole']). The :py:func:`~psi4.driver.properties` function provides limited functionality, but is a lot easier to; use for correlated methods. For capabilities of :py:func:`~psi4.driver.properties` see the; corresponding section of the manual. Basic Keywords; ^^^^^^^^^^^^^^. Multipole moments may be computed at any origin, which is controlled by the; global |globals__properties_origin| keyword. The keyword takes an array with; the following possible values:. .. _`table:oe_origin`:. .. table:: Allowed origin specifications. +-------------------------------+-------------------------------------------------------------------------------+; | Keyword | Interpretation |; +===============================+===============================================================================+; | [x, y, z] | Origin is at the coordinates, in the same units as the geometry specification |; +-------------------------------+-------------------------------------------------------------------------------+; | [""COM""] | Origin is at the center of mass |; +-------------------------------+-------------------------------------------------------------------------------+; | [""NUCLEAR_CHARGE""] | Origin is at the center of nuclear charge |; +-------------------------------+-------------------------------------------------------------------------------+. .. _`sec:oeprop_grid`:. Properties evaluated on a grid; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Certain properties may be evaluated a user-specified grid points. The grid; points are completely arbitrary and are specified by providing a file called; grid.dat containing the x,y,z values separated with spaces for each point in order::. x1 y1 z1; x2 y2 z2; ..........; xn yn zn. The grid.dat file is completely free form; any number of spaces and/or newlines; between entries is permitted. The units of the coordinates in grid.dat are the; same as those used to specify the molecule's geometry, and th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst:7697,charge,charge,7697,doc/sphinxman/source/oeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst,1,['charge'],['charge']
Energy Efficiency,"n provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by default, we have to tell it that ``basis_set`` is a; Python variable, not a string, by prefixing it with a dollar sign. . The geometry specification supports delayed initialization of variable,; which permits potential energy scans. As an example, we can scan both the; angle and bond length in water::. molecule h2o{; O; H 1 R; H 1 R 2 A; }; ; Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See :srcsample:`scf4` for analogous Z-matrix; and Cartiesian scans. .. _`sec:resultsTables`:. Tables of Results; =================. The Psithon function ``psi4.driver.p4util.Table`` has been removed,; as the Python ecosystem provides many more flexible alternatives. An; example tabulating a potential energy surface scan for water with Pandas; is shown below::. molecule h2o {; O; H 1 R; H 1 R 2 A; }; ; Rvals=[0.9,1.0,1.1]; Avals=range(100,103,2); ; rows =",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:13313,energy,energy,13313,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"n run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7817,energy,energy,7817,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"n should be reduced accordingly; if in doubt run the; calculation in C1 symmetry. For examples of SCF and MP2 calculations in an; external field, see :srcsample:`scf7` and :srcsample:`dfmp2-grad5`. .. _`sec:scfdefault`:. Convergence and Algorithm Defaults; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. _`table:conv_scf`:. .. table:: SCF algorithm and convergence criteria defaults by calculation type [#f1]_. +--------------------+--------------------+----------------------+----------------------+---------------------+; | *Ab Initio* Method | Calculation Type | |scf__e_convergence| | |scf__d_convergence| | |globals__scf_type| |; +====================+====================+======================+======================+=====================+; | SCF of HF or DFT | energy | 6 | 6 | DF |; + +--------------------+----------------------+----------------------+ +; | | optimization | 8 | 8 | |; + +--------------------+----------------------+----------------------+ +; | | frequency [#f7]_ | 8 | 8 | |; +--------------------+--------------------+----------------------+----------------------+---------------------+; | SCF of post-HF | energy | 8 | 8 | PK [#f3]_ |; + +--------------------+----------------------+----------------------+ +; | | optimization | 10 | 10 | |; + +--------------------+----------------------+----------------------+ +; | | frequency [#f7]_ | 10 | 10 | |; + +--------------------+----------------------+----------------------+ +; | | CC property [#f2]_ | 10 | 10 | |; +--------------------+--------------------+----------------------+----------------------+---------------------+. .. _`table:conv_corl`:. .. table:: Post-SCF convergence criteria defaults by calculation type [#f4]_. +--------------------+--------------------+----------------------+-------------------------+; | *Ab Initio* Method | Calculation Type | E_CONVERGENCE [#f5]_ | R_CONVERGENCE [#f6]_ |; +====================+====================+======================+=========================+; | post-HF of post-HF |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:57046,energy,energy,57046,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,2,['energy'],['energy']
Energy Efficiency,"n the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of the more notable functionals in |PSIfour|, and links; to the complete listing of all functionals of each class are presented below:. :ref:`All Functionals <table:dft_all>`; All functionals, including LSDA-only functionals. Note that here and; th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16994,energy,energy,16994,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"n to lower the energy. In case the minimization does not succeed; or ends up on the same unstable solution, you can tune the scale factor for the orbital; rotation through the keyword |scf__follow_step_scale|.; The rotation angle is :math:`\frac{\pi}{2}\mbox{ } \cdot` (|scf__follow_step_scale|). The default value of; 0.5 usually provides a good guess, and modification is only recommended in difficult cases.; The default behavior for the stability code is to stop after trying to reoptimize the orbitals once; if the instability still exists. For more attempts, set |scf__max_attempts|;; the default value of 1 is recommended. In case the SCF ends up in the same minimum, modification; of |scf__follow_step_scale| is recommended over increasing |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+-----",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48052,energy,energy,48052,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"n,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:46377,energy,energy,46377,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"n-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact integrals for all terms except for dispersion. In practice,; density fitting is considerably faster and introduces negligible errors,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15853,energy,energy,15853,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"n`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7500,energy,energy,7500,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30436,reduce,reduced,30436,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['reduce'],['reduced']
Energy Efficiency,"nce': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5714,energy,energy,5714,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:15099,energy,energy,15099,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225157,energy,energy,225157,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nctionality` for information on what Cfour; functionality is accessible through |PSIfour|. |PSIfour| for Cfour Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. In the simplest use of the Psi4/Cfour interface, a |PSIfour| input file; can simply ""wrap"" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Cartesian/Z-matrix, negation of variables, delayed specification of; variables, specification of fragments, etc., all in a whitespace-tolerant; format. See :ref:`sec:moleculeSpecification` for details and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_units|\ =ANGSTROM,; |cfour__cfour_charge|, and |cfour__cfour_multiplicity| keywords are set; appropriately in the ``*CFOUR",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:5891,energy,energy,5891,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"nd :math:`\delta_{MP2}^{(3)}` also improve the ; description of electrostatically dominated complexes. :math:`\delta_{MP2}^{(2)}`; can be applied to SAPT2+ or SAPT2+(3) energies whereas :math:`\delta_{MP2}^{(3)}` ; should be applied to SAPT2+3 energies. A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; without an improved CCD treatment of dispersion) using different basis sets; is reported in [Parker:2014:094106]_. The closed-shell SAPT module relies entirely on the density-fitting approximation; of the two-electron integrals. The factorization of the SAPT energy; expressions, as implemented in |PSIfour|, assumes the use of density-fitted; two-electron integrals, therefore, the closed-shell SAPT module cannot be run with; exact integrals. In practice, we have found that the density-fitting; approximation introduces negligible errors into the SAPT energy ; (often less than 0.01 kcal/mol for small dimers) and greatly; improves efficiency. . The latest addition to the SAPT code is the SAPT0 method for open-shell ; monomers [Gonthier:2016:134106]_. This code is available for both exact and density fitted integrals, ; except for the dispersion terms which implementation relies on a density fitting; factorization. Both ``UHF`` and ``ROHF`` |scf__reference| can be used, but coupled; induction computations are currently not supported with ``ROHF``. This means that orbital; relaxation is not included for ``ROHF`` and the uncoupled induction term is computed instead.; If both monomers are open-shell, their coupling is assumed to be high spin, i.e.; two doublets would interact to form a triplet. The *S*\ :superscript:`2` approximation and scaling; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. All exchange terms in SAPT arise from the antisymmetrization; of the wavefunctions of monomers A and",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:10454,energy,energy,10454,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"nd order has the spin-orbital formula:. .. math:: E_{\mathrm{total}}^{(2)} = E_{\mathrm{Reference}} - ; \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i} - ; \frac{1}{4} \frac{\langle ij||ab\rangle^2}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}; :label: MP2. Here :math:`i` and :math:`j` are occupied spin orbitals, :math:`a` and; :math:`b` are virtual spin orbitals, :math:`f_{ia}` are the :math:`ov`; Fock Matrix elements, :math:`\epsilon` are the orbital eigenvalues, and; :math:`\langle ij||ab\rangle` are the antisymmetrized physicist's ERIs.; For converged RHF and UHF references, the singles correction,. .. math:: E_{\mathrm{MBPT}}^{(1)} = - \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i},. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. .. math:: E_{\mathrm{MBPT}}^{(2)} = - \frac{1}{4} \frac{\langle ij|ab\rangle^2}{\epsilon_a + ; \epsilon_b - \epsilon_i - \epsilon_j}. In the DFMP2 module, the first-order contribution, or ""singles energy"" is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements :math:`f_{ia}` are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF |scf__e_convergence| and/or |scf__d_convergence| keywords; and try again. . To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimme's Spin-Component; Scaled (SCS) MP2. For RHF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:6444,energy,energy,6444,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"nd size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from ; second-order perturbation theory and differ in the description of the; correlated (non-idempotent) part :math:`\boldsymbol{\tau}` of the one-particle density; matrix and orbital optimization. While in the DC-06 and ODC-06 methods :math:`\boldsymbol{\tau}` is derived from the density cumulant; in an approximate way (labelled by '06'), the DC-12 and ODC-12 methods derive this contrib",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:5453,energy,energy,5453,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"nd the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7636,energy,energy,7636,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ne.run_dftd3('b3lyp', 'd2'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)'); .. comment ; .. comment set basis sto-3g; .. comment set scf_type df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Et",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28101,energy,energy,28101,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"negligible one-electron integrals.; |scf__cosx_density_tolerance| controls the threshold for significant; shell pairs in the density matrix. Lastly, |scf__cosx_basis_tolerance| is; a cutoff for the value of basis functions at grid points. This keyword is; used to determine the radial extent of the each basis shell, and it is the; COSX analogue to |scf__dft_basis_tolerance|. The |scf__incfock| keyword (defaults to ``false``) increases performance; by constructing the Fock matrix from differences in the density matrix, which; are more amenable to screening. This option is disabled by default because of; potential SCF convergence issues, particularly when using diffuse basis functions.; The |scf__cosx_overlap_fitting| keyword (defaults to ``true``) reduces numerical; integration errors using the method described in [Izsak:2011:144105]_ and is; always recommended. .. _`sec:scflink`:. Linear Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-el",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:41691,reduce,reduce,41691,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"nerally give qualitatively identical; energetic partitions. Users should check the files ``fragA.dat`` and ``fragB.dat`` to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the ""Orbital Check"" section in these files |w--w| a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also *strongly discourage* the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; |w--w| cuts across only simple sigma bonds are encouraged. .. caution:: November 2022, previous to QCEngine v0.26.0 and Psi4; v1.7.0, there was a scaling inconsistency in the pairwise analysis; such that :psivar:`2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS`; was doubled when generated from dftd3 compared to the output from other; programs (s-dftd3 and dftd4). This shows up in the QCVariable and in the; ``Empirical_Disp.dat`` file written during ``energy(""fisapt0-d3"")`` (all; -D3 variants). Fortunately, the ``fsapt.py`` script compensated; for dftd3 (by far the most used program for this task). Users of the; pairwise analysis should take care to use the new QCEngine; AND ``fsapt.py`` script distributed with NEW Psi4. ``fisapt0-d4`` run; with previous Psi4/fsapt.py will be wrong. ``fisapt0-d3`` run with previous; Psi4/fsapt.py but new QCEngine will be wrong. If you've got legacy; calculations, it is extremely easy to check or reanalyze them to; salvage them, so please contact the developers with the circumstances; for guidance. Order-1 Visualization with PyMol; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The ``fsapt.py`` script above also generates a number of order-1 ``.pdb`` files; that can be used to get a quick qualitative picture of the F-SAPT partition. The; preferred way to do this is to use PyMol to make plots of the molecular geometry; with the atoms colored according to their order-1 F-SAPT contributions. We have; a set of template ``.py",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:9425,energy,energy,9425,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"nergy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:10426,energy,energy,10426,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"nergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57633,energy,energy,57633,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49480,energy,energy,49480,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53265,energy,energy,53265,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226899,energy,energy,226899,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_convergence 5; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword (local scope works, too) where; the |PSIfours| more flexible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten; and Cfour module keyword trumps |PSIfour| SCF module keyword ::. set cfour_scf_conv 6; set d_convergence 8; energy('c4-scf'). The keyword translation feature is still in the proof-of-principle; stage, so only a handful (found here) of keywords participate. .. note:: Longtime Cfour users who may consider this keyword; translation a flaw rather than a feature can avoid it entirely by; confining keywords to the :ref:`Cfour module<apdx:cfour>` along with; |mints__basis| and |globals__puream| (opt, too?). Misc. Running; ~~~~~~~~~~~~~. Naturally, in |PSIfour| multiple jobs can be run in succession from the input file. Control optimi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:40066,energy,energy,40066,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ng |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Algorithm | |scf__reference| | Stability checked | |scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) | ``CHECK`` | PK only |; + +------------------+----------------------------------------------+---------------------------+---------------------+; | Direct Inversion | ROHF | Internal | ``CHECK`` | PK only |; +------------------+------------------+----------------------------------------------+---------------------------+--------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48776,efficient,efficient,48776,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['efficient'],['efficient']
Energy Efficiency,"nic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:60679,energy,energy,60679,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"nits are in [1/s].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN) - h TRANSITION. The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN). The length-gauge rotatory strength of the transition from root *m* to root *n*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* within irrep *h*; to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (h) -> ROOT n (i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (h) -> ROOT n (i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* to root *n*,; which are in irreps *h* and *i*, respectively..; DFT functional labeled if canonical. .. psivar:: CCname ROOT m -> ROOT n ROTA",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:14710,energy,energy,14710,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"nly defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:37057,energy,energy,37057,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"nnonhouck.github.io/psi4fockci/build/index.html. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed ; in the paper by Houck et. al. [Houck:2019:2278]_. ; This approach handles systems with both spin and spatial degeneracies ; by combining the spin-flip (SF) [Krylov:2001:522]_; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]_ ; approaches. . The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization ; potential (IP), and electron affinity (EA) calculations, as well as ; combined RAS-SF-IP/EA calculations, through the DETCI (:ref:`sec:ci`) module. Installation; ~~~~~~~~~~~~. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/shannonhouck/psi4fockci.git. * Once downloaded, the plugin can be installed as follows:. .. code-block:: bash. >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input; ~~~~~~~~~~~~. To run a CAS-nSF-IP/EA calculation, start with a molecule with the ; correct charge and multiplicity for the reference state (i.e. some ; state well-represented by a single reference). Then, run an energy ; calculation, passing in the charge and multiplicity of the ; desired state; the number of spin-flips and IP/EA will be automatically ; determined based on this input. If additional excitations outside of the ; RAS II space are desired, one can set the level of external ; excitations using the ``conf_space`` keyword. A sample input file for a RAS(h)-2SF-IP calculation is shown below:. .. code-block:: python. molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""); ; Note that for calculations involving IP/EA, inclusion of hole (for IP) and ; particle (for EA) excitations is strongly recommended. Additional keywords ; can be found in the documentation. This input file can be run with Psi4:. .. code-block:: bash. >>> psi4 input.dat. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_psi4fockci.rst:2549,charge,charge,2549,doc/sphinxman/source/plugin_psi4fockci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_psi4fockci.rst,4,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61249,energy,energy,61249,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62594,energy,energy,62594,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79468,energy,energy,79468,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80813,energy,energy,80813,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170059,energy,energy,170059,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171392,energy,energy,171392,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478337,energy,energy,478337,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:479670,energy,energy,479670,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nocc`:. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; ===================================================================. .. codeauthor:: A. Eugene DePrince; .. sectionauthor:: A. Eugene DePrince. *Module:* :ref:`Keywords <apdx:fnocc>`, :ref:`PSI Variables <apdx:fnocc_psivar>`, :source:`FNOCC <psi4/src/psi4/fnocc>`. .. warning:: There is a known bug concerning the i7-5930 series combined; with the Intel 15 compilers and MKL 11.2.3. When |PsiFour| is compiled; under these conditions, parallel runs of the FNOCC code have experienced; nonsensical CCSD correlation energies (often several Hartrees lower; than the starting guess). At the moment, the only confirmed solutions; are running serially, using a different BLAS implementation, or upgrading; to Intel 16.0.2 and MKL 11.3.2. Frozen natural orbitals (FNO); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The computational cost of the CCSD [Purvis:1982]_, CCSD(T); [Raghavachari:1989]_, and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]_. The most demanding; steps in the CCSD and (T) algorithms scale as :math:`{\cal{O}}(o^2v^4)`; and :math:`{\cal{O}}(o^3v^4)`, where :math:`o` and :math:`v` represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of :math:`(v; / v_{FNO})^4`, where :math:`v_{FNO}` represents the number of virtual; orbitals retained after the FNO truncation. The general outline for the FNO procedure in |Psifour| is:. (i) construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM) ; (ii) diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; (iii) based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; (iv) project the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:2323,reduce,reduced,2323,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['reduce'],['reduced']
Energy Efficiency,"note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141500,energy,energy,141500,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337707,energy,energy,337707,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421865,energy,energy,421865,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492596,energy,energy,492596,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrained. For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF solution exists while respecting the constraints of the original; solution; this is an internal instability. If one or more constraints have to be relaxed to reach; a lower-energy solution, there is an external instability. In |PSIfour|, the only external instability; that can be checked at present is the RHF :math:`\rightarrow` UHF one. Currently, two algorithms exist in |PSIfour| for stability analysis: the original; Direct Inversion and the newly implemented Davidson algorithms. We will first describe; options common to both algorithms. To request a stability analysis at the end of the SCF,; set the keyword |scf__stability_analysis|. Value ``CHECK`` only computes the electronic; Hessian eigenvalue and checks if an actual SCF minimum has been found, while value ``FOLLOW``; rotates the converged orbitals along the lowest eigenvector, then invokes the SCF; procedure again to lower the energy. In case the minimization does not succeed; or ends up on the same unstable solution, you can tune the scale factor for the orbital; rotation through the keyword |scf__follow_step_scale|.; The rotation angle is :math:`\frac{\pi}{2}\mbox{ } \cdot` (|scf__follow_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:46366,energy,energy,46366,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"npaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6085,energy,energy,6085,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"ns use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. Recommendations; ---------------. All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix :ref:`apdx:dfmp2`). Some basic recommendations are included below:. * DFMP2 should be run with the :math:`ov`-type RI or MP2FIT auxiliary; basis sets, *not* the -JKFIT basis sets. The automatic basis selector; should work fine for most all bases (exceptions are less common elements; at higher than quadruple-zeta). Generally, it is always better to specify; only the orbital basis set and let the auxiliary bases be chosen; automatically. If you want to specify manually, use the; |dfmp2__df_basis_mp2| keyword. * DFMP2 likes memory. At a minimum, :math:`2Q^2` doubles are required,; where :math:`Q` is the size of the auxiliary basis set. However, there is; one disk transpose of the :math:`(Q|ov)` tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the |dfmp2__DF_ints_num_threads| to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code). * DFMP2 likes disk. At a minimum, :math:`2Qov` doubles are required for; RHF-MP2, and :math:`4Qov` doubles are required for UHF-MP2. * DFMP2 likes threads. Some of the formation of the :math:`(Q|ov)` tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; :math:`{\cal O}(N^5)` step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the :envvar:`OMP_NESTED` environment variable; to ``FALSE`` to prevent thread thrash (or just as well, do not define; :envvar:`OMP_NESTED` at all). * Freezing core is good for both efficiency and correctness purposes.; Freezing virtual",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:9575,reduce,reduce,9575,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['reduce'],['reduce']
Energy Efficiency,"ns::; ; OH 14 15; PH 16 17 18 19 20 21 22 23 24 25 26. At this point, the user should run the ``fsapt.py`` post-processing script in; the ``fsapt`` directory as::. >>> fsapt.py. This will generate, among other files, the desired functional-group partition in; ``fsapt.dat``. For our problem, the bottom of this file contains the finished; partition::. Frag1 Frag2 Elst Exch IndAB IndBA Disp Total; OH OH -8.425 6.216 -0.583 -1.512 -1.249 -5.553; OH PH 1.392 0.716 0.222 -0.348 -0.792 1.189; PH OH -2.742 0.749 -0.147 -0.227 -0.674 -3.040; PH PH 0.680 2.187 0.007 -0.208 -2.400 0.266; OH All -7.033 6.931 -0.362 -1.860 -2.040 -4.364; PH All -2.062 2.936 -0.140 -0.435 -3.074 -2.774; All OH -11.167 6.965 -0.730 -1.739 -1.923 -8.594; All PH 2.072 2.903 0.229 -0.556 -3.191 1.456; All All -9.095 9.867 -0.501 -2.295 -5.114 -7.138. Note that the assignment of linking sigma bond contributions is a small point of; ambiguity in F-SAPT. The ``fsapt.dat`` file presents the ""links-by-charge""; assignment at the top and the ""links by 50-50"" assignment at the bottom. We; generally prefer the latter, but both generally give qualitatively identical; energetic partitions. Users should check the files ``fragA.dat`` and ``fragB.dat`` to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the ""Orbital Check"" section in these files |w--w| a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also *strongly discourage* the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; |w--w| cuts across only simple sigma bonds are encouraged. .. caution:: November 2022, previous to QCEngine v0.26.0 and Psi4; v1.7.0, there was a scaling inconsistency in the pairwise analysis; such that :psivar:`2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS`; was doubled when generated from dftd3 compared to the output from other; programs (s-dftd3 and df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:8306,charge,charge,8306,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['charge'],['charge']
