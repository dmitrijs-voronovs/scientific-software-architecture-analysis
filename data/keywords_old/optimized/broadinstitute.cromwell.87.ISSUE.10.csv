quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,Don't run tests during assembly.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/72:10,test,tests,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/72,1,['test'],['tests']
Testability,Draft 3: test scatter over maps,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3408:9,test,test,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3408,1,['test'],['test']
Testability,"Draft PR TODOs:; - [x] Add some unit tests; - [X] ImportResolver; - [X] GithubAuthVendingSupport; - [x] Find a better way to do the await result; - [x] Remove from standard config and allow the system to work in the absence of a github auth vending service OR allow it to be configured OFF in config and make that the default 🤔 ; - [x] Move the auth vending message and helper classes out of `impl`. To test this - ; - Go to github and create a limited scope personal access token; - Scope to a single repo; - Add readonly access for Content, and no other permissions; - Update the config of a running instance with the raw token under `GithubAuthVending.config.access-token`. NB don't include the `Bearer` before the token in the config file.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7365:37,test,tests,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7365,2,['test'],"['test', 'tests']"
Testability,"Draft PR to gather test instability data, part 2 [BT-117] [DO NOT MERGE]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6177:19,test,test,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6177,1,['test'],['test']
Testability,"Draft PR to gather test instability data, part 3 [BT-117] [DO NOT MERGE]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6178:19,test,test,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6178,1,['test'],['test']
Testability,"Draft PR to gather test instability data, part 4 [BT-117] [DO NOT MERGE]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6179:19,test,test,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6179,1,['test'],['test']
Testability,"Draft PR to gather test instability data, part 5 [BT-117] [DO NOT MERGE]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6180:19,test,test,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6180,1,['test'],['test']
Testability,Draft status: expecting tests to fail but wanting to see them run,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6693:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6693,1,['test'],['tests']
Testability,"Due to some updates that got in cromwell version 49 the regex that creates the relative outputs was evaluated differently (correctly, to be precise). This made it so that any directory structure created by the user is lost. This broke all the testing on biowdl.; I have updated the test cases to notice such a regression in the future. I also fixed the regex to behave like it is described in the documentation.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5437:243,test,testing,243,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5437,2,['test'],"['test', 'testing']"
Testability,"During CromIAM Perf testing, strange behavior occurred where when querying metadata for a workflow right after aborting it yielded a non empty value in the `failures` field, which later disappeared.; Below is an example metadata with the failure:. ```; {; ""calls"": {; ""wf_hello.hello"": [; {; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-391d77ef-2e8c-45e5-bfef-3d12554920ca/wf_hello/9cc9b141-b2fb-4277-94bd-80ad87a49663/call-hello/hello-stdout.log"",; ""commandLine"": ""sleep 60 \necho \""Hello World! Welcome to Cromwell . . . on Google Cloud!\"""",; ""shardIndex"": -1,; ""jes"": {; ""executionBucket"": ""gs://fc-391d77ef-2e8c-45e5-bfef-3d12554920ca"",; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""googleProject"": ""broad-dsde-alpha""; },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""ubuntu:latest"",; ""maxRetries"": ""0"",; ""cpu"": ""1"",; ""cpuMin"": ""1"",; ""noAddress"": ""false"",; ""zones"": ""us-central1-b"",; ""memoryMin"": ""2.048 GB"",; ""memory"": ""2.048 GB""; },; ""callCaching"": {; ""allowResultReuse"": false,; ""effectiveCallCachingMode"": ""CallCachingOff""; },; ""inputs"": {; ""addressee"": ""World""; },; ""backendLabels"": {; ""cromwell-workflow-id"": ""cromwell-9cc9b141-b2fb-4277-94bd-80ad87a49663"",; ""wdl-task-name"": ""hello""; },; ""labels"": {; ""wdl-task-name"": ""hello"",; ""cromwell-workflow-id"": ""cromwell-9cc9b141-b2fb-4277-94bd-80ad87a49663""; },; ""failures"": [; {; ""causedBy"": [; {; ""causedBy"": [],; ""message"": ""Unexpected execution handle: AbortedExecutionHandle""; }; ],; ""message"": ""java.lang.IllegalArgumentException: Unexpected execution handle: AbortedExecutionHandle""; }; ],; ""backend"": ""JES"",; ""end"": ""2018-12-11T16:07:04.207Z"",; ""stderr"": ""gs://fc-391d77ef-2e8c-45e5-bfef-3d12554920ca/wf_hello/9cc9b141-b2fb-4277-94bd-80ad87a49663/call-hello/hello-stderr.log"",; ""callRoot"": ""gs://fc-391d77ef-2e8c-45e5-bfef-3d12554920ca/wf_hello/9cc9b141",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4484:20,test,testing,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4484,2,"['log', 'test']","['log', 'testing']"
Testability,"During FireCloud testing, one job out of many similar jobs (all others succeeded) failed in the following way:. ```; $ gcloud alpha genomics operations describe EPKmsKy8KxiFwqr275_Y6hwg9vy4-dodKg9wcm9kdWN0aW9uUXVldWU. message: ""15: Gsutil failed: failed to upload logs for \""gs://fc-7ffecbef-0544-4db7-92a0-a3a0d4bafdfe/447d9c70-0173-47f3-8a00-e59a69290dde/echo_strings/3f63e284-cfd2-4a3d-a846-d468258e1aaf/call-echo_files/\""\; : cp failed: gsutil -h Content-type:text/plain -q -m cp /var/log/google-genomics/*.log\; \ gs://fc-7ffecbef-0544-4db7-92a0-a3a0d4bafdfe/447d9c70-0173-47f3-8a00-e59a69290dde/echo_strings/3f63e284-cfd2-4a3d-a846-d468258e1aaf/call-echo_files/,\; \ command failed: AccessDeniedException: 403 Caller does not have storage.objects.create\; \ access to bucket fc-7ffecbef-0544-4db7-92a0-a3a0d4bafdfe.\nAccessDeniedException:\; \ 403 Caller does not have storage.objects.create access to bucket fc-7ffecbef-0544-4db7-92a0-a3a0d4bafdfe.\n\; AccessDeniedException: 403 Caller does not have storage.objects.create access\; \ to bucket fc-7ffecbef-0544-4db7-92a0-a3a0d4bafdfe.\nCommandException: 3 files/objects\; \ could not be transferred.\n: ""; ```; I verified the user's permissions by auth-ing as that user and manually copying a file to the bucket successfully. We should probably add this one to the retry list.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2233:17,test,testing,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2233,4,"['log', 'test']","['log', 'logs', 'testing']"
Testability,"During horizontal Cromwell testing it was observed that the Cromwell not being addressed by Centaur could be grossly misconfigured so that it did no useful work or might topple over during a test run. The test would usually not notice this and success would be declared when really horizontality hadn't been tested. We should figure out the general shape of a ""correct"" horizontal run looks like and assert that this actually occurs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4783:27,test,testing,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4783,5,"['assert', 'test']","['assert', 'test', 'tested', 'testing']"
Testability,During our Tech Talk today Thibault pointed out it could be quite bad if one Cromwell instance unexpectedly loses its connection to the database and other Cromwells pick up its workflows and start running them. This sparked a discussion that heartbeat TTL expiration is something that should be highly visible to make sure it isn't happening when not expected. A/C; Log when a workflow is claimed under `INFO` visibility,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4451:366,Log,Log,366,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4451,1,['Log'],['Log']
Testability,"During testing I completely botched making my inputs file. Rather than a nice JSON map, I created a file with just the value: no key and no enclosing curlies. Cromwell did not take this well and never issued a response to the client. ```; spray.json.JsonParser$ParsingException: Unexpected character 'm' at input index 0 (line 1, position 1), expected JSON Value:; mcovarr; ^. spray.json.JsonParser$ParsingException: Unexpected character 'm' at input index 0 (line 1, position 1), expected JSON Value:; mcovarr; ^. 	at spray.json.JsonParser.fail(JsonParser.scala:213); 	at spray.json.JsonParser.value(JsonParser.scala:64); 	at spray.json.JsonParser.parseJsValue(JsonParser.scala:43); 	at spray.json.JsonParser$.apply(JsonParser.scala:28); 	at spray.json.PimpedString.parseJson(package.scala:45); 	at cromwell.webservice.CromwellApiService$PartialWorkflowSources$.cromwell$webservice$CromwellApiService$PartialWorkflowSources$$workflowInputs(CromwellApiService.scala:134); 	at cromwell.webservice.CromwellApiService$PartialWorkflowSources$$anonfun$6$$anonfun$apply$12.apply(CromwellApiService.scala:161); 	at cromwell.webservice.CromwellApiService$PartialWorkflowSources$$anonfun$6$$anonfun$apply$12.apply(CromwellApiService.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); 	at scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1740:7,test,testing,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1740,1,['test'],['testing']
Testability,"During the PR process, two commits are tested by Travis:; - The actually committed code: aka ""push""; - The results of the PR if it were to be merged: aka ""pr"". The latter test is currently producing false positives during tests of centaur local. The way Travis tests the results of the merged PR is by using github's extra `refs/pull/<PR>/merge`. These merge refs are special, and are not pulled down by default during `git fetch`, that only retrieves commits from origin under `refs/heads/*`. One can see Travis doing some of this extra retrieval in this excerpt of a branch that wouldn't build if merged, full log file [here](https://s3.amazonaws.com/archive.travis-ci.org/jobs/155209618/log.txt):. ``` bash; $ git clone --depth=50 https://github.com/broadinstitute/cromwell.git broadinstitute/cromwell; Cloning into 'broadinstitute/cromwell'...; remote: Counting objects: 2676, done.; remote: Compressing objects: 100% (1294/1294), done.; remote: Total 2676 (delta 879), reused 2196 (delta 632), pack-reused 0; Receiving objects: 100% (2676/2676), 909.71 KiB | 0 bytes/s, done.; Resolving deltas: 100% (879/879), done.; Checking connectivity... done.; $ cd broadinstitute/cromwell; $ git fetch origin +refs/pull/1339/merge:; remote: Counting objects: 17809, done.; remote: Compressing objects: 100% (5010/5010), done.; remote: Total 17809 (delta 9885), reused 17612 (delta 9710), pack-reused 0; Receiving objects: 100% (17809/17809), 4.56 MiB | 0 bytes/s, done.; Resolving deltas: 100% (9885/9885), completed with 116 local objects.; From https://github.com/broadinstitute/cromwell; * branch refs/pull/1339/merge -> FETCH_HEAD; $ git checkout -qf FETCH_HEAD; ```. But later, cromwell passes the wrong commit to centaur:. ``` bash; cd centaur; ./test_cromwell.sh -bdevelop -p5; ```. Perhaps centuar local could just use this existing checkout, already provided by Travis. If it didn't want to point to a directory, centaur local could just assemble the jar like centaur jes does and use that. Altern",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1344:39,test,tested,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1344,6,"['log', 'test']","['log', 'test', 'tested', 'tests']"
Testability,"During the testing hackathon, we discovered a number of problems caused by the eventual consistency of the metadata service. One specific case of this is the granularity of the events. . On one side, we have a publisher who has a whole collection of events that they would like to push. They push them one event at a time to the MD service. Because even things like array elements are pushed one update at a time because of MD format, we run into the situation where a consumer can see half of an array. Taken to the extreme, we could push every char of a string as a separate event. The fundamental problem with these partial updates is that a downstream consumer can not tell if an update is complete. Do they wait? How long? Can they check if the data is done?. While this touches on a larger problem in distributed computing, I think we are shooting ourselves in the foot by making every piece of a single update an async, isolated event. Taken to the extreme, we could push every char of a string as a separate event. The proposal is to extend the PutMetadataAction to take in a Seq/Varargs of MetadataEvents with the contract that these will be made available atomically (e.g. in a single Slick transaction for our implementation). Then in places where we basically unrolling a bundle of events to publish, we should use this API (e.g. WorkflowExecutionActor) to do that atomically. . In theory, this should also help with the scalability as the MD service can persist things with batchinserts in single transaction. For larger workflows, currently this would be hundreds or thousands of transactions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/930:11,test,testing,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/930,1,['test'],['testing']
Testability,"E"", ""value"": ""/cromwell_root/HC_GVCF-23-rc.txt""}, ; {""name"": ""AWS_CROMWELL_WORKFLOW_ROOT"", ; ""value"": ""s3://dev-nphi-cromwell-v8/cromwell-execution/TN_workflow/2b65d83d-7d30-465e-9127-95c6886056e4/call-Haplotypecaller/shard-1/hc.Haplotypecaller/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/""}; ], ; ""vcpus"": 16, ; ""command"": [; ""gzipdata"", ""/bin/bash"", ""-c"", ; ""...""; ], ; ""volumes"": [{""host"": {; ""sourcePath"": ""/cromwell_root/hc.Haplotypecaller/hc.HC_GVCF/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/Some(23)/1""}, ""name"": ""local-disk""}], ; ""memory"": 32000, ""ulimits"": [], ""exitCode"": 0}, ; ""parameters"": {}, ; ""jobDefinition"": ""arn:aws:batch:us-east-1:260062248592:job-definition/hc_Haplotypecaller-hc_HC_GVCF:19527"", ; ""statusReason"": ""Essential container in task exited"", ; ""jobId"": ""7c2d29c2-f04e-4b3f-8579-915a6fbc9033"", ; ""attempts"": [{; ""startedAt"": 1558552881926, ""container"": {; ""taskArn"": ""arn:aws:ecs:us-east-1:260062248592:task/78221618-403c-4b10-b9e1-6c1534a44723"", ; ""containerInstanceArn"": ""arn:aws:ecs:us-east-1:260062248592:container-instance/3cfe8456-fd3e-420d-91bc-aa1d8d134194"", ; ""logStreamName"": ""hc_Haplotypecaller-hc_HC_GVCF/default/78221618-403c-4b10-b9e1-6c1534a44723"", ; ""exitCode"": 0}, ""stoppedAt"": 1558553539743, ""statusReason"": ""Essential container in task exited""}], ; ""jobQueue"": ""arn:aws:batch:us-east-1:260062248592:job-queue/GenomicsDefaultQueue-80d8b8f0-15ed-11e9-b8b7-12ddf705bbc4"", ; ""dependsOn"": [], ; ""startedAt"": 1558552881926, ; ""jobName"": ""Haplotypecaller_HC_GVCF"", ; ""createdAt"": 1558552763368, ""stoppedAt"": 1558553539743}]}; ```. Clearly, the AWS Batch job parameters are referencing a completely different set of input files from the set described in the workflow log. In this particular case, the job described in the log was started via cromwell run using v36 on an isolated EC2 instance, while the workflow described by the job parameters json was submitted to a cromwell v36.1 server running on a completely separate EC2 instance. This would point to call caching N",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5004:15503,log,logStreamName,15503,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5004,1,['log'],['logStreamName']
Testability,"EDIT: Changed A/C to use default sentry style configuration, instead of wiring custom HOCON configs. **Issue:**; Whenever Cromwell generates a warning or error message an additional message is emitted from `raven-logback` about a ""suitable DSN"". ```; [2018-05-18 21:17:10,79] [warn] SingleWorkflowRunnerActor: received unexpected message: Done in state RunningSwraData; [2018-05-18 21:17:10,80] [warn] Couldn't find a suitable DSN, defaulting to a Noop one.; ```. This appears to be because `raven-logback` is activated in logback.xml but is not configured by default in Cromwell. **Background:**; [Sentry](https://sentry.io/) describes itself as:. > Open-source error tracking that helps developers monitor and fix crashes in real time. Cromwell is using an deprecated version of the Sentry java bindings for logback called `raven-logback`. The current bindings are called `sentry-logback`. Additionally, the cromwell docs currently mention that sentry can be setup via the ""configuration value"" `sentry.dsn`. https://github.com/broadinstitute/cromwell/blob/b8d3d2fd4a583d3e46394efb104005c12cdf182d/docs/Logging.md#L48. https://github.com/broadinstitute/cromwell/blob/b8d3d2fd4a583d3e46394efb104005c12cdf182d/docs/Configuring.md#L345-L355. This is not correct as `raven-logback` nor its underlying library `raven` use Typesafe Config. Instead for `raven` the value must be set as a system property, or alternatively as a different environment variable. However the latest `sentry` library (and transitively `sentry-logback`) do allow code configuration via `Sentry.init`. **A/C:**; - Replace `raven-logback` dependency with `sentry-logback`; - ~Allow setting a `cromwell.sentry.*` stanza with Cromwell specific sentry configuration. Alternative namespaces could be `sentry.*` or `system.sentry.*`, but both namespaces may collide with other library/application configurations in the future!~; - ~Wire the `cromwell.sentry.*` HOCON fields into `Sentry.init`~; - ~Default the sentry DSN in `reference.c",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3657:213,log,logback,213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3657,6,['log'],['logback']
Testability,"EDIT: to safe yourself some data entry, you can use branch [cjl_initial_work_dir_requirement_4](https://github.com/broadinstitute/cromwell/tree/cjl_initial_work_dir_requirement_4) as an entry point with the centaur test and a Spec already added. This seems to be a pretty common pattern but relies on `JSON.stringify(inputs)` working in our expression evaluator:; ```yml; # A common use case: stringy the inputs JSON and provide that file as another input file. cwlVersion: v1.0; $graph:; - id: stringify_inputs; class: CommandLineTool; baseCommand: ['grep', 'number', 'inputs.json']; requirements:; - class: DockerRequirement; dockerPull: ""python:3.5.0""; - class: InitialWorkDirRequirement; listing:; - entryname: 'inputs.json'; entry: $(JSON.stringify(inputs)). stdout: ""number_field"". # TODO CWL: Set the types more appropriately (depends on issue #3059); inputs:; - id: number; type: string; default: 27; - id: str; type: string; default: wooooo; - id: boolean; type: string; default: True; outputs:; - id: number_field_output; type: string; outputBinding:; glob: number_field; loadContents: true; outputEval: $(self[0].contents.trim()); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3090:215,test,test,215,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3090,1,['test'],['test']
Testability,EJHA tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1322:5,test,tests,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1322,1,['test'],['tests']
Testability,"Edit (by @cjllanwarne) in light of #4806:. Following #4806 we will be able to read Google project metadata to specify a VPC network and subnet. Therefore what will remain for ***this*** ticket is making the same functionality available on a per-workflow basis... eg an ability to supply the same network/subnetwork information via workflow-options?. ---. ### Original issue text:. https://cloud.google.com/vpc/docs/vpc -- for a primer on GCP Subnets. Users should be able to tell Cromwell to launch nodes into a subnet. For environments like Firecloud, we should have some mechanism (like maybe SAM) to make sure the user actually has the right to use a particular subnet. . The main reason to do this is https://cloud.google.com/vpc/docs/using-flow-logs -- we want to be able to monitor traffic in and out of the network for more significant audited environments. So the driver is ultimately ""compliance"". But it's probably a good idea anyhow. After this is done, please work with FC team to make sure they can take advantage of this. I'm not sure who to tag to make sure this cross-team work is done.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4070:750,log,logs,750,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4070,1,['log'],['logs']
Testability,"Eg spot the difference between the exposed `err` declaration and the anonymous `b_prime.in_file` expression in:; ```wdl; workflow stdout_stderr_passing {; call a; call b {input: in_file=a.out}; File err = a.err; call b as b_prime {input: in_file=err}; output {; b_prime.out; }; }; ```. ![test](https://user-images.githubusercontent.com/13006282/33454657-7eba9d28-d5e7-11e7-9774-a17cbf3c63e8.png). NB: the dashes on the output are accidental, and I believe to-be-removed in an upcoming @mcovarr PR",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2958:288,test,test,288,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2958,1,['test'],['test']
Testability,Embiggen the Centaur test suite for AWS backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4766:21,test,test,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4766,1,['test'],['test']
Testability,Emit the log path for the travis centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1286:9,log,log,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1286,1,['log'],['log']
Testability,Empty scatters appear to be skipped because they are not logged,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4136:57,log,logged,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4136,1,['log'],['logged']
Testability,Enable CI scripts to run only included centaur tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4053:47,test,tests,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4053,1,['test'],['tests']
Testability,Enable TESK CWL conformance tests in Travis,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4007:28,test,tests,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4007,1,['test'],['tests']
Testability,Enable all tests in SlickDataAccessSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/942:11,test,tests,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/942,1,['test'],['tests']
Testability,Enable preflight Liquibase migrations by removing custom log code [BW-875],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6551:57,log,log,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6551,1,['log'],['log']
Testability,Enable several Centaur tests that now pass on the AWS backend. [No JIRA],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5225:23,test,tests,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5225,1,['test'],['tests']
Testability,Enable validation memory test once wdl4s PR is merged,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/726:25,test,test,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/726,1,['test'],['test']
Testability,Enabled GCP batch integration tests by uncommenting out step in GHA.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7199:30,test,tests,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7199,1,['test'],['tests']
Testability,Enabled three_step_cwl centaur test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2920:31,test,test,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2920,1,['test'],['test']
Testability,Enables `ExpressionTool`s to be run in the same way `CommandLineTool`s are run (as standalone tools or as a workflow step). They follow exactly the same transformation into WOM and then to Cromwell as `CommandLineTool`s. The only major difference being that instead of a command line to be run it's an expression.; There's a new type of `CallNode`: `ExpressionCallNode` to represent calls that encapsulate an expression instead of a command line.; When the call becomes runnable Cromwell will run the `evaluate` method on the node using its engine `IoFunctions` and the result will be aded to the value store immediately. The node will not make it to any backend.; Happy to whiteboard / tech talk / walkthrough this if needed. Only 2 of the 6 tests enabled on local work on PAPI:; - One should fix itself once the PAPI input redirection PR is merged.; - The 3 others I plan to address in a 3rd PR,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3203:743,test,tests,743,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3203,1,['test'],['tests']
Testability,Engine/PAPI upgrade testing script hotfix support.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4719:20,test,testing,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4719,1,['test'],['testing']
Testability,Engine/PAPI upgrade testing script hotfix support. [37],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4720:20,test,testing,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4720,1,['test'],['testing']
Testability,Engine/PAPI upgrade testing script hotfix support. [38],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4721:20,test,testing,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4721,1,['test'],['testing']
Testability,EngineJobHashingActor tests (feat. CachingConfigSpec redux),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1345:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1345,1,['test'],['tests']
Testability,Enhanced logging around IO actions [BW-413],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5999:9,log,logging,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5999,1,['log'],['logging']
Testability,"Ensure that PAPI v2 stdout/stderr logs today contain information about localization and delocalization stages as well. This is very different from PAPI v1 which annotated and separated the three main stages of a job's life:; 1. Localization logs; 2. Exec.sh stdout/stderr; 3. Delocalization logs . While it's advantageous to have information about all three stages in one log file, it can be hard to distinguish which portions of the logs has to do with the actual tool a user is trying to learn. In order to make it easier for a user to be able to debug job failures -- the PAPI v2 logs will need to make it very obvious to distinguish between the three stages listed above. AC: Ensure that the three stages (Localization, User command, Delocalization) are annotated in both the stdout/stderr file so that it's obvious to a user at what stage their job failed.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4026:34,log,logs,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4026,6,['log'],"['log', 'logs']"
Testability,Ensure that logs write to and close the root wf log.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4195:12,log,logs,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4195,2,['log'],"['log', 'logs']"
Testability,"Error message: A timeout occurred waiting for a future to complete. Queried 100 times, sleeping 100 milliseconds between each query. tc: ServicesStore should not deadlock. https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/566/. Update 10/22; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/708/. Update 10/28:; https://fc-jenkins.dsp-techops.broadinstitute.org/view/Testing/view/Test%20Runners/job/cromwell-test-runner/831/. Update 11/03:; https://fc-jenkins.dsp-techops.broadinstitute.org/view/Testing/view/Test%20Runners/job/cromwell-test-runner/1003/. Update 11/06:; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1076/. Update 11/09:; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1166/. Further:; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1337; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1422; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1445; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1489; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1525; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1590",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4328:235,test,test-runner,235,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4328,16,"['Test', 'test']","['Test', 'Testing', 'test-runner']"
Testability,"Example docs:. > Directory objects in CommandLineTool output must provide either a location URI or a path property in the context of the tool execution runtime (local to the compute node, or within the executing container). Link to specs:; - http://www.commonwl.org/v1.0/CommandLineTool.html#Directory; - http://www.commonwl.org/v1.0/Workflow.html#Direcotry. Example conformance test(s):. - <span>#</span>110 [v1.0/writable-dir.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/writable-dir.cwl) [v1.0/empty.json](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/empty.json); - <span>#</span>111 [v1.0/writable-dir-docker.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/writable-dir-docker.cwl) [v1.0/empty.json](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/empty.json)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3360:379,test,test,379,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3360,1,['test'],['test']
Testability,"Example docs:. > If neither location nor path is provided, contents must be non-null. The implementation must assign a unique identifier for the location field. When the file is staged as input to CommandLineTool, the value of contents must be written to a file. ; > ; > If loadContents of inputBinding or outputBinding is true and location is valid, the implementation must read up to the first 64 KiB of text from the file and place it in the ""contents"" field.; and. Link to specs:; - http://www.commonwl.org/v1.0/CommandLineTool.html#File; - http://www.commonwl.org/v1.0/Workflow.html#File. Example conformance test(s):. - <span>#</span>83 [v1.0/cat3-tool.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/cat3-tool.cwl) [v1.0/file-literal.yml](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/file-literal.yml); - <span>#</span>113 [v1.0/cat3-nodocker.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/cat3-nodocker.cwl) [v1.0/file-literal.yml](https://github.com/common-workflow-language/common-workflow-language/blob/af9e073634dc6aec4092c55e1c081f335affa54a/v1.0/v1.0/file-literal.yml)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3359:614,test,test,614,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3359,1,['test'],['test']
Testability,Excessive logging from liquibase.changelog,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6664:10,log,logging,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6664,1,['log'],['logging']
Testability,Exclude failing Centaur tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4835:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4835,2,['test'],['tests']
Testability,Excluded #5797 for the same reason #5775 was excluded in #5798: major version upgrade to a component we don't much care about that doesn't have tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5799:144,test,tests,144,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5799,1,['test'],['tests']
Testability,Execute CI tests not requiring Vault in CircleCI [BT-118],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6181:11,test,tests,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6181,1,['test'],['tests']
Testability,Exists to run the horicromtal upgrade tests - which only occur on PRs. But this isn't ready for review yet.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4882:38,test,tests,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4882,1,['test'],['tests']
Testability,Expect some progress in centaur tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4660:32,test,tests,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4660,1,['test'],['tests']
Testability,Explore the AsyncAppender in our logback,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1809:33,log,logback,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809,1,['log'],['logback']
Testability,Extend Lifecycle of Alpha Logs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3894:26,Log,Logs,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3894,1,['Log'],['Logs']
Testability,Extra logging around imports zip,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4389:6,log,logging,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4389,1,['log'],['logging']
Testability,"Extracted the retries out of SlickDataAccess.; Having trouble producing a true positive deadlock test that this code fixes, so left that out and moving on for now.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/690:97,test,test,97,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/690,1,['test'],['test']
Testability,"FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:116); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-05-25 12:18:24,94] [info] WorkflowManagerActor WorkflowActor-e52409b4-c85a-4285-9453-f47c6b0ae86c is in a terminal state: WorkflowFailedState; [2017-05-25 12:18:24,94] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$c#-297741123] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-e52409b4-c85a-4285-9453-f47c6b0ae86c#772660809] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-05-25 12:18:26,88] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow e52409b4-c85a-4285-9453-f47c6b0ae86c transitioned to state Failed. I recognize the brackets are the problem, but the tutorial doesn't seem to offer suggestions on removing those. When I did remove them it seemed the key values in the json were the problem. Any help is greatly appreciated!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2296:3327,log,logging,3327,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2296,3,['log'],"['log-dead-letters', 'log-dead-letters-during-shutdown', 'logging']"
Testability,Failed job w/o logs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/698:15,log,logs,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/698,1,['log'],['logs']
Testability,FailedException(Assertions.scala:528) at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527) at cromwell.CromwellTestKitSpec.newAssertionFailedException(CromwellTestKitSpec.scala:251) at org.scalatest.Assertions.fail(Assertions.scala:1121) at org.scalatest.Assertions.fail$(Assertions.scala:1117) at cromwell.CromwellTestKitSpec.fail(CromwellTestKitSpec.scala:251) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$20(SingleWorkflowRunnerActorSpec.scala:266) at akka.testkit.EventFilter.intercept(TestEventListener.scala:111) at cromwell.CromwellTestKitSpec$.waitForErrorWithException(CromwellTestKitSpec.scala:153) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076) at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088) at org.scalatest.SuperEngine.runTestImpl(,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:1650,Test,TestKit,1650,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestKit']
Testability,Failing Centaur tests found during horicromtal testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4725:16,test,tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4725,2,['test'],"['testing', 'tests']"
Testability,"Figure out how it is possible that travis can not compile the build but returns 0. Incident report:; [travis build](https://travis-ci.org/broadinstitute/cromwell/jobs/292596774); [raw log, excerpted below](https://s3.amazonaws.com/archive.travis-ci.org/jobs/292596774/log.txt?X-Amz-Expires=30&X-Amz-Date=20171025T234339Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJRYRXRSVGNKPKO5A/20171025/us-east-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=71b729c64e9fbce0fb7e520c77d2d3da8876b62e8e4f5f87b5084f594b439ee0). When compiling 2.11 `cwl` package, compilation reported an error, yet still returned 0:; ```; [0m[[31merror[0m] [0m/home/travis/build/broadinstitute/cromwell/cwl/src/main/scala/cwl/CommandLineTool.scala:45: value buildWomExecutable is not a member of object cwl.CwlExecutableValidation[0m; [0m[[31merror[0m] [0m CwlExecutableValidation.buildWomExecutable(taskDefinition.validNelCheck, inputFile)[0m; [0m[[31merror[0m] [0m ^[0m; [0m[[31merror[0m] [0m/home/travis/build/broadinstitute/cromwell/cwl/src/main/scala/cwl/CommandLineTool.scala:45: value buildWomExecutable is not a member of object cwl.CwlExecutableValidation[0m; [0m[[31merror[0m] [0m CwlExecutableValidation.buildWomExecutable(taskDefinition.validNelCheck, inputFile)[0m; [0m[[31merror[0m] [0m ^[0m; [0m[[31merror[0m] [0m/home/travis/build/broadinstitute/cromwell/cwl/src/main/scala/cwl/Workflow.scala:30: value buildWomExecutable is not a member of object cwl.CwlExecutableValidation[0m; [0m[[31merror[0m] [0m CwlExecutableValidation.buildWomExecutable(womDefinition, inputFile)[0m; [0m[[31merror[0m] [0m ^[0m; [0m[[31merror[0m] [0mtwo errors found[0m; [0m[[31merror[0m] [0m/home/travis/build/broadinstitute/cromwell/cwl/src/main/scala/cwl/Workflow.scala:30: value buildWomExecutable is not a member of object cwl.CwlExecutableValidation[0m; [0m[[31merror[0m] [0m CwlExecutableValidation.buildWomExecutable(womDefinition, inputFile)[0m; [0m[",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2788:184,log,log,184,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2788,2,['log'],['log']
Testability,File size parallel traverse test (Jira later),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7438:28,test,test,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7438,1,['test'],['test']
Testability,"Find the original post [here](http://gatkforums.broadinstitute.org/wdl/discussion/7690/running-in-server-mode-jobs-that-have-localization-error-become-immortal#latest). ---. **User Report**. Running cromwell in server mode, with default configuration in each case, I can reproduce the following behaviour in 0.18, 0.19 and 0.19_hotfix (HEAD):. Submit a workflow that has non-existent file as input to a task, e.g.:. ```; task BillyBob {; File bbInput; command { echo ""done"" }; }; workflow badLocalization {; call BillyBob { input: bbInput=""/foo/bar/baz"" }; }; ```. The server log shows ""Failures during localization"" error (below) - as expected initially, I guess - but then _repeats_ the error every 30 seconds or so, forever, and hitting the API `<workflowId>/status` endpoint shows the job in a ""Running"" state, forever. I would expect this error to cause the task, and then the workflow, to die. example of a single block of the server log error: . ```; 2016-05-27 11:08:57,269 cromwell-system-akka.actor.default-dispatcher-5 ERROR - Failures during localization; java.lang.UnsupportedOperationException: Could not localize /foo/bar/baz -> /home/conradL/cromwell-executions/badLocalization/8c7774be-7917-4c6a-88c4-55e495bbb9ec/call-BillyBob/foo/bar/baz; at cromwell.engine.backend.local.SharedFileSystem$$anonfun$localize$1$3.apply(SharedFileSystem.scala:243) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.SharedFileSystem$$anonfun$localize$1$3.apply(SharedFileSystem.scala:243) ~[cromwell-0.19.jar:0.19]; at scala.Option.getOrElse(Option.scala:121) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.SharedFileSystem$class.localize$1(SharedFileSystem.scala:242) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.SharedFileSystem$class.adjustFile$1(SharedFileSystem.scala:264) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.SharedFileSystem$class.localizeWdlValue(SharedFileSystem.scala:271) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/922:576,log,log,576,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/922,2,['log'],['log']
Testability,First engine upgrade CI test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4132:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4132,1,['test'],['test']
Testability,"First implementation of a pluggable LocalBackend. This is more a light basic implementation and a starting point to iterate over.; What is implemented : ; - Support for non-docker jobs; - Support for docker jobs; - Support for ""ContinueOnReturnCode"" ""FailOnStderr"" and ""docker"" runtime attributes; - Engine functions; - Abort. Things to think about:; - How to share code between backends ? runtime attributes validation, engine functions, shared filesystem code.. ; - Testing. Note: some code is duplicated from the engine as it's still used by the current non-PBE implementation. Eventually this will replace all local backend code in the engine. Currently adding more tests for ; - [x] abort. ~~\- [ ] engine functions~~; - [x] input localization; - [x] expression evaluation; - [x] coercion ; - [x] scatter",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/712:468,Test,Testing,468,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/712,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"First pass at Womifying Cromwell; Tests that couldn't be fixed were tageed with `PostWomTest` and ignored; The code contains a lot of `TODO WOM`. I know everyone has an opinion on TODOs, I don't really like them myself but in this case it's mostly used to annotate code with contextual information about what needs to be fixed or how or why etc...; They're ALL expected to be removed by the end of this milestone.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2628:34,Test,Tests,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2628,1,['Test'],['Tests']
Testability,First pass at re-enabling tests post-PBE. This will be iterative but,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/878:26,test,tests,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/878,1,['test'],['tests']
Testability,First pass at re-enabling tests post-PBE. This will be iterative but…,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/868:26,test,tests,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/868,1,['test'],['tests']
Testability,Fix CLI runner to have pretty logging once again,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/115:30,log,logging,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/115,1,['log'],['logging']
Testability,Fix Cromwell to pass the new centaur test:; - [ ] circular_dependencies,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1934:37,test,test,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1934,1,['test'],['test']
Testability,Fix Docker file-passing test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/87:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/87,1,['test'],['test']
Testability,Fix Flakey Test: MultipleFilesWithSameNameWorkflowSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4469:11,Test,Test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4469,1,['Test'],['Test']
Testability,Fix Horicromtal Deadlock Test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7131:25,Test,Test,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7131,1,['Test'],['Test']
Testability,Fix JES log naming,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/303:8,log,log,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/303,1,['log'],['log']
Testability,Fix JobStore logging arg order (with regerts) [BA-5959],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5145:13,log,logging,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5145,1,['log'],['logging']
Testability,Fix SingleWorkflowRunnerActorSpec test HOTFIX,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/967:34,test,test,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/967,1,['test'],['test']
Testability,Fix Travis test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6791:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6791,1,['test'],['test']
Testability,Fix `cwl_input_json` centaur test on TES backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3807:29,test,test,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3807,1,['test'],['test']
Testability,Fix alias test expectation,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4867:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4867,1,['test'],['test']
Testability,Fix and test artifact deployment.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1661:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1661,1,['test'],['test']
Testability,Fix bcbio test bcbio_joint_gvcf,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4528:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4528,1,['test'],['test']
Testability,Fix bcbio test bcbio_somatic,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4532:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4532,1,['test'],['test']
Testability,Fix bcbio test bcbio_svcall,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4527:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4527,1,['test'],['test']
Testability,Fix broken Jenkins tests by changing from a Future in CallActor to a VassalCallActor.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/123:19,test,tests,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/123,1,['test'],['tests']
Testability,Fix broken aws globbing centaur tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4855:32,test,tests,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4855,1,['test'],['tests']
Testability,Fix broken extractor script python tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5492:35,test,tests,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5492,1,['test'],['tests']
Testability,Fix bug discovered in load testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/411:27,test,testing,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/411,1,['test'],['testing']
Testability,Fix call cache checks in case of cache invalidation w/ test [CROM-6603],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6725:55,test,test,55,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6725,1,['test'],['test']
Testability,Fix dontglobinputs centaur test flakiness,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4202:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4202,1,['test'],['test']
Testability,Fix excessive server logging as per DSDEEPB-1049,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/149:21,log,logging,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/149,1,['log'],['logging']
Testability,Fix flakey test from QA testbed,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4223:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4223,2,['test'],"['test', 'testbed']"
Testability,Fix flakey test in SharedFileSystemJobExecutionActorSpec.scala,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4222:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4222,1,['test'],['test']
Testability,Fix flakey test: CopyWorkflowOutputsSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4454:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4454,1,['test'],['test']
Testability,Fix flakey test: EnhancedRhinoSandboxSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4306:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4306,1,['test'],['test']
Testability,Fix flakey test: KeyValueDatabaseSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4419:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4419,1,['test'],['test']
Testability,Fix flakey test: KeyValueServiceActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4320:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4320,1,['test'],['test']
Testability,Fix flakey test: MetadataBuilderActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4288:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4288,1,['test'],['test']
Testability,Fix flakey test: MetadataDatabaseAccessSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4520:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4520,1,['test'],['test']
Testability,Fix flakey test: PostfixQuantifierWorkflowSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4453:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4453,1,['test'],['test']
Testability,Fix flakey test: RobustClientHelperSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4351:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4351,1,['test'],['test']
Testability,Fix flakey test: ScatterWorkflowSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4418:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4418,1,['test'],['test']
Testability,Fix flakey test: ServicesStoreSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4328:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4328,1,['test'],['test']
Testability,Fix flakey test: SharedFileSystemJobExecutionActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4319:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4319,1,['test'],['test']
Testability,Fix flakey test: SingleWorkflowRunnerActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['test'],['test']
Testability,Fix flakey test: StatsDInstrumentationServiceActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['test'],['test']
Testability,Fix flakey test: SwaggerServiceSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4357:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4357,1,['test'],['test']
Testability,Fix flakey test: WorkflowFailSlowSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4521:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4521,1,['test'],['test']
Testability,Fix flakey test: WorkflowManagerActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4470:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4470,1,['test'],['test']
Testability,Fix flakey test: WorkflowOutputSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,1,['test'],['test']
Testability,Fix flakiness of StatsD test in Jenkins QA,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4301:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4301,1,['test'],['test']
Testability,Fix flaky health monitor test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4259:25,test,test,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4259,1,['test'],['test']
Testability,Fix fofn_caching test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2922:17,test,test,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2922,1,['test'],['test']
Testability,Fix funnel test and pin version to git commit,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2116:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2116,1,['test'],['test']
Testability,Fix interrupted sleep test for MariaDB `latest` BT-13,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6022:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6022,1,['test'],['test']
Testability,Fix issues with unit tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7186:21,test,tests,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7186,1,['test'],['tests']
Testability,Fix metadata expectation for bucket name test [NO JIRA],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5996:41,test,test,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5996,1,['test'],['test']
Testability,Fix new test case,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3764:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3764,1,['test'],['test']
Testability,Fix non-executable builds and disable some logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3352:43,log,logging,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3352,1,['log'],['logging']
Testability,Fix path to lots_of_inputs_scattered.wdl in Centaur test [BT-375],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6468:52,test,test,52,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6468,1,['test'],['test']
Testability,Fix sbt test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2395:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2395,1,['test'],['test']
Testability,Fix skipping conformance tests in cron CI.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3197:25,test,tests,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3197,1,['test'],['tests']
Testability,Fix some issues found during FireCloud Cromwell 24 acceptance testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1845:62,test,testing,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1845,1,['test'],['testing']
Testability,Fix some logging issues noticed in cromwell-dev,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/124:9,log,logging,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/124,1,['log'],['logging']
Testability,Fix test: Write Lines,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/955:4,test,test,4,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/955,1,['test'],['test']
Testability,Fix test: jesexercises,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/951:4,test,test,4,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/951,1,['test'],['test']
Testability,Fix the horicromtal engine upgrade test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4883:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4883,1,['test'],['test']
Testability,Fix transient errors on retry + add more tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/407:41,test,tests,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/407,1,['test'],['tests']
Testability,Fix unit tests tagged PostWomTest,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2626:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2626,1,['test'],['tests']
Testability,Fixed HPC docker paths and added centaur test for slurm.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4666:41,test,test,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4666,1,['test'],['test']
Testability,Fixed MockitoSugar import.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1352:6,Mock,MockitoSugar,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1352,1,['Mock'],['MockitoSugar']
Testability,Fixed SGE memory parameter in reference.conf.; Split `MemoryDeclarationValidation` out of `DeclarationValidation`.; Added tests for `MemoryDeclarationValidation`.; `OptionalRuntimeAttributesValidation` were not returning the defaults from the underlying `RuntimeAttributesValidation`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2031:122,test,tests,122,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2031,1,['test'],['tests']
Testability,"Fixed Symbol doubly qualifying the symbol names. (thx mcovarr/scottfrazer); Added `WdlType.fromRawString`, with test against respective `WdlValue.toRawString`.; `DummyDataAccess` replaced with using `DataAccess` instances, with cleanup of connections.; When creating in memory databases will create unique `DataAccess` instances, just like Dummy.; TestSlickDatabase now prints a warning, instead of an error, when unable to connect to MySql.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/84:112,test,test,112,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/84,2,"['Test', 'test']","['TestSlickDatabase', 'test']"
Testability,Fixed broken test by semi-syncing liquibase and slick schemas.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/403:13,test,test,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/403,1,['test'],['test']
Testability,Fixed flaky Centaur test running on local backend by replacing Dockerhub Ubuntu images with gcr.io [BT-105],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6170:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6170,1,['test'],['test']
Testability,Fixed timeout error during mysql testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/398:33,test,testing,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/398,1,['test'],['testing']
Testability,Fixed workflow results and logs copying [BA-5997],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5110:27,log,logs,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5110,1,['log'],['logs']
Testability,"Fixes #3176. The `case co: CallOutput` looks so deliberately different but I can't work out why. Maybe there's a test case that will now fail to show why it was like that originally. I almost made this PR just not look up dependencies for CallOutputs because... they're never used for anything and can cause breakages. Yet another case of ""why on earth is this a `GraphNode`""... 🤷‍♂️",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3181:113,test,test,113,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3181,1,['test'],['test']
Testability,"Fixes #5477 . Calculating size of inputs does not work when the inputs are relative. Usually relative paths are calculated from the execution directory. This is fine for outputs, but not for inputs. This issue was discovered because it is extremely useful to have the size of inputs. Because this way you can guesstimate the resource requirements that should be put in the `runtime` section. Currently it works fine for absolute paths, so that can be used as a workaround. However: all BioWDL workflows are tested in git repos with inputs JSON files that use relative paths. So we can not test our changes on the CI. Also, some user might want to use relative paths in conjunction with `cromwell run`. This adds a `forInput` boolean to the expressionFunction classes so the size function can be made context-dependent. Currently this is only implemented for the SFSbackend which is presumably the only backend that suffers from this. ~~EDIT: This is now implemented for all backends. It is quite useful as resource estimates using size can be used to request specific VM sizes in the cloud.~~ Size for inputs is now calculated in the same way as inputs with relative paths are localized (from the CWD of the cromwell process). I added a test that tests this fixed behavior (sizerelativepath). Tests for the current behavior (sizeenginefunction) do not break.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5478:507,test,tested,507,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5478,5,"['Test', 'test']","['Tests', 'test', 'tested', 'tests']"
Testability,Fixes a couple of Carbonite Centaur tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5252:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5252,1,['test'],['tests']
Testability,Fixes conformance test 102 on local and PAPI,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3591:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3591,1,['test'],['test']
Testability,Fixes conformance test 86 on local,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3594:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3594,1,['test'],['test']
Testability,Fixes the monitoring_log test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5132:25,test,test,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5132,1,['test'],['test']
Testability,"Fixes three centaur tests: input_mirror, sizeenginefunction, if_then_…else_expressions",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4747:20,test,tests,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4747,1,['test'],['tests']
Testability,"Fixes to `SlickDataAccessSpec` plus some other patches.; `SlickDataAccessSpec` should talk to the currently tested `SlickDatabase with DataAccess`, NOT the `service` layer, that in turn talks to the global singleton.; The `root` project was not aggregating `database`.; The `root` project with `Main` only actually depends on `engine` and `core` tests.; More tests fixed that were waiting for the wrong message.; Changed waiting for `start` to `Starting`.; Changed waiting for `call.name` to `call.name:NA:1`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/941:108,test,tested,108,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/941,3,['test'],"['tested', 'tests']"
Testability,Fixup for monitoring logs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2529:21,log,logs,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2529,1,['log'],['logs']
Testability,Flakey Tests: CromwellTestKitSpec is a PITA,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4458:7,Test,Tests,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4458,1,['Test'],['Tests']
Testability,Flakey test: LoadControllerServiceActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4237:7,test,test,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4237,1,['test'],['test']
Testability,Flakey test: SwaggerServiceSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4247:7,test,test,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4247,1,['test'],['test']
Testability,Flaky Test: HealthMonitorServiceActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3391:6,Test,Test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3391,1,['Test'],['Test']
Testability,Flaky Test: WriteMetadataActor should Have one event after batch size + 1 is reached,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2193:6,Test,Test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2193,1,['Test'],['Test']
Testability,Flaky Test: abort a workflow mid run and restart immediately,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3392:6,Test,Test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3392,1,['Test'],['Test']
Testability,"Flaky test was throwing `**Invalid cross-device link**` which enforces that symlinks aren't created from one partition to another. This PR sets the base path for paths in the spec to be `.` , i.e. the path in which the spec is running.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4227:6,test,test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4227,1,['test'],['test']
Testability,FlatSpecLike.scala:1750) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379) at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461) at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750) at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.runTests(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.Suite.run(Suite.scala:1147) at org.scalatest.Suite.run$(Suite.scala:1129) at cromwell.core.TestKitSuite.org$scalatest$BeforeAndAfterAll$$super$run(TestKitSuite.scala:16) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.org$scalatest$FlatSpecLike$$super$run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framewor,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:3068,Test,TestKitSuite,3068,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestKitSuite']
Testability,FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Th,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4576,Test,TestFramework,4576,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestFramework']
Testability,"Follow up on https://github.com/broadinstitute/cromwell/pull/4112. This will reduce the load on the JVM a lot. I did indeed a stress test on our system with 50.000 async qsub/qstat jobs but this was outside the jvm. Inside the jvm this ends up in blocking threads to cromwell. When the timeout is set to 120 seconds, `isAlive` will only run once each 120 seconds.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4220:133,test,test,133,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4220,1,['test'],['test']
Testability,"Follow up to [WX-1410](https://github.com/broadinstitute/cromwell/pull/7414) which introduced a bug converted metadata values to strings before database insertion. In addition to fixing the bug, this PR introduces more robust unit testing to confirm that metadata values that should not be modified remain unmodified. [WX-1410]: https://broadworkbench.atlassian.net/browse/WX-1410?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7427:231,test,testing,231,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7427,1,['test'],['testing']
Testability,Follow-up to [WX-1410](https://github.com/broadinstitute/cromwell/pull/7414) to add additional testing of metadata value types to ensure that values are inserted into the database with correct types. [WX-1410]: https://broadworkbench.atlassian.net/browse/WX-1410?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7433:95,test,testing,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7433,1,['test'],['testing']
Testability,"Following the docs at https://github.com/broadinstitute/cromwell#runtime-attributes, I'd like to be able to pass runtime attributes as the inputs to a task, for example:; ```; task iRun {; String runtimeMemory; Int runtimeCpu; command {; echo ""so far away""; }; output {; String out = read_string(stdout()); }; runtime {; memory: runtimeMemory; #cpu: runtimeCpu; }; }; ```; When using a configurable backend, I can confirm this works for the String type attribute `memory` but not the Int type `cpu`: running the above with the cpu runtime attribute uncommented I get this in the logs:; ```; [ERROR] [11/24/2016 10:49:13.299] [cromwell-system-akka.dispatchers.engine-dispatcher-22] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow beb03899-5f22-4f2c-8a85-d619a2d8a969 failed (during InitializingWorkflowState): java.lang.IllegalArgumentException: Task iRun has an invalid runtime attribute cpu = runtimeCpu; ```. My custom backend application.conf section: ; ```; PBS { ; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config { ; runtime-attributes = """"""; Int cpu = 1 ; Int memory_mb = 1000; String? pbs_email; String? pbs_queue; String pbs_walltime = ""1:00:00""; """"""; ...; }; }; ```. I thought it might be because of the special nature of the `cpu` runtime attribute, but I tested with a different custom runtime attribute `Int pbs_cpu` and got the same result, so my guess is that it's the Int type that is the problem. I am working around this by defining `String pbs_cpu` which is then interpreted as an expression in the runtime block, as documented, but it feels wrong because the value should really be validated as an Int.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1702:579,log,logs,579,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1702,2,"['log', 'test']","['logs', 'tested']"
Testability,"For Cromwell run mode, add the option to add outputs explicitly to an output json file. The thinking is that for a WDL testing framework, being able to diff expected outputs with generated outputs (both from Cromwell and miniWDL) if they are in a json format, it becomes easy to use them. The alternatives are digging through the metadata json or cromwell logs -- so this option is meant to just increase convenience of outputs for a test framework. . It could also be used as documentation for the expected output format for example WDLs in the WDL spec.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5420:119,test,testing,119,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5420,3,"['log', 'test']","['logs', 'test', 'testing']"
Testability,"For Workflow ID: 5541d851-10bb-455d-a6bc-051e85574b74. We're getting nothing back when we try to look at timing or metadata, the metadata curl call returns:. {; ""status"": ""error"",; ""message"": ""None.get""; }. No clue what's going on here, the cromwell logs don't indicate anything unusual for this workflow. Seemingly it ran normally, just some typical preemption messages.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/801:250,log,logs,250,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/801,1,['log'],['logs']
Testability,"For `Object`s, `Map`s and `Pair`s, and perhaps `Array`s. Eg We need to be able to distinguish between `p.left`, accessing the left hand side of a pair, and `p.left` accessing the `left` output of a task called `p`. Make sure member access works for:; - [X] Maps; - [X] Arrays; - [x] Pairs; - ~~Objects~~ Not Supported (but it's no longer the member access bit holding us back)!. Then reinstate tests:; - [x] `scatter_chain`; - ~~`if_then_else_expressions`~~ Punted to #2860 ; - [X] `array_and_map_indexing` (enhanced!)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2861:394,test,tests,394,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2861,1,['test'],['tests']
Testability,"For example, The FC test DB has over 200,000 rows which will never be used by anyone, ever 😨",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2071:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2071,1,['test'],['test']
Testability,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2055:13,test,test,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055,1,['test'],['test']
Testability,"For more specific details see the DB meeting notes. Remove the biz logic-y portions of the DataAccess trait and move them into something alongside/in the appropriate locations (metadata store, kv store, etc) and have that code take a SlickDatabase. Move globalDataAccess to be a globally (in core package? Something like that) accessible singleton SlickDatabase instance, which the individual ex-DataAccess stuff can use. The DataAccess trait also had a withRetry function which does seem inappropriate for SlickDatabase, at the moment it's just a wrapper around the main withRetry w/ some defaults set - perhaps that lives w/ the global SlickDatabase? Perhaps allow individual ex-DataAccess stuff set their own? Up to you.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1177:67,log,logic-y,67,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1177,1,['log'],['logic-y']
Testability,"For our CI testing we want to be able to set the location of the `cromwell-executions` folder. This can already be done by messing with the config file, but this is not ideal. The `root` setting is nested within `backend -> providers -> the-used-backend -> config -> root`. This is very hard to set using the command-line with the `-D` option. . Is there a possibility to set an option that is agnostic of background? `-Dbackends.default_root` for example? Or just on option to set it on the command-line `run --root my_preferred_root my_workflow.wdl`?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3889:11,test,testing,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3889,1,['test'],['testing']
Testability,For server logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/267:11,log,logging,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/267,1,['log'],['logging']
Testability,"For some of our workflows, there are wrong `startTime` and `endTime` timestamps for ""RunningJob"" in executionEvents. For example, we got the below time, which doesn't make sense:; ```; {; startTime: ""2018-04-06T13:58:15.329Z"",; description: ""RunningJob"",; endTime: ""2018-04-06T13:37:28Z""; },; ```; https://cromwell.mint-test.broadinstitute.org/api/workflows/v1/fde178bd-dae1-4686-af6b-3a0af806dc48/metadata. Cromwell version is **30-16f3632**. A fact worth mentioning is that Cromwell crashed around the time ""2018-04-06T13:58:15.329Z"". Besides, we are not sure if this problem is ""flipped timestamps"" or just wrong timestamps, we have assumed it is the former case, but not sure about it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3544:320,test,test,320,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3544,1,['test'],['test']
Testability,"For some reason Cromwell now makes jars for every subproject every time the `run` command is issued:. ```; computer:cromwell me$ sbt ""project server"" ""run server""; [info] Loading settings from plugins.sbt,swagger2markup.sbt ...; [info] Loading project definition from /Users/me/gitrepos/cromwell/project; [info] Loading settings from build.sbt ...; [info] Resolving key references (31064 settings) ...; [info] Set current project to root (in build file:/Users/me/gitrepos/cromwell/); [info] Set current project to cromwell (in build file:/Users/me/gitrepos/cromwell/); [info] Packaging /Users/me/gitrepos/cromwell/database/sql/target/scala-2.12/cromwell-database-sql_2.12-32-92c91d9-SNAP.jar ...; [info] Packaging /Users/me/gitrepos/cromwell/cromwellApiClient/target/scala-2.12/cromwell-api-client_2.12-32-92c91d9-SNAP.jar ...; [info] Done packaging.; [info] Packaging /Users/me/gitrepos/cromwell/common/target/scala-2.12/cromwell-common_2.12-32-92c91d9-SNAP.jar ...; ...; ```. This certainly isn't making the run launch any faster and clutters up the build directory with jars that makes it tough to find the Centaur CWL runner and Cromwell server jars needed for conformance testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3624:1177,test,testing,1177,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3624,1,['test'],['testing']
Testability,"For some reason the local centaur test on travis can't localize files with hard link, so just stop trying.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1724:34,test,test,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1724,1,['test'],['test']
Testability,"For the integration tests Cromwell runs, it would be good for the test definition to assert the hash of the expected output and actual output. This particular case is to ensure that there are no changes to the engine that could cause the contents of the outputs to change over time, and alert the team when such a case happens.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4904:20,test,tests,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4904,3,"['assert', 'test']","['assert', 'test', 'tests']"
Testability,"For the sbt assembly discarding ""cobertura.properties"", and testing it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/236:60,test,testing,60,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/236,1,['test'],['testing']
Testability,For whatever reason I get a different `failure`/`causedBy` stack when I run these locally vs in travis. I'm probably being stupid 🤷‍♂️. . Reinstate these centaur tests:; - [x] `invalid_runtime_attributes`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2904:162,test,tests,162,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2904,1,['test'],['tests']
Testability,For workflow-success and workflow-failure type tests:. * Wait for the query results for the workflow to indicate carbonite complete; * Ensure that the metadata is as valid afterwards as it was beforehand,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5237:47,test,tests,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5237,1,['test'],['tests']
Testability,Found this trying to test s/g,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/166:21,test,test,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/166,1,['test'],['test']
Testability,"From David Wine:. >I just tested out my latest question for which I could not find guidance in the docs; thus I had to bother a real live human. The question was; ""Is it true that a container image can be pulled from Google Container Registry, and how is it specified."". >If the answer is in the new docs I didn't find it. >I searched on container, and got lots of hits, though none I saw actually had the word ""container"".; I searched on dockerhub, ""docker="", ""docker:"", and browsed.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2856:26,test,tested,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2856,1,['test'],['tested']
Testability,"From https://www.commonwl.org/v1.0/CommandLineTool.html#Parameter_references; >If the value of a field has non-whitespace leading or trailing characters around a parameter reference, it is subject to string interpolation. The effective value of the field is a string containing the leading characters, followed by the string value of the parameter reference, followed by the trailing characters. The string value of the parameter reference is its textual **JSON** representation with the following rules:; > ; > * Leading and trailing quotes are stripped from strings; > * Objects entries are sorted by key; >; > Multiple parameter references may appear in a single field. This case must be treated as a string interpolation. After interpolating the first parameter reference, interpolation must be recursively applied to the trailing characters to yield the final string value. Test code: `runtime-dump.cwl`; ``` cwl; #!/usr/bin/env cwl-runner; cwlVersion: v1.0; class: CommandLineTool; baseCommand: echo; inputs: []; arguments: [ '{""runtime"":$(runtime)}' ]; stdout: runtime.json; outputs:; runtime: stdout; ```; Example contents of the generated `runtime.json` (linewrapped for readability):; ``` json; {""runtime"":object {ram: 4, cores: 1, tmpdir: ""/home/mcrusoe/src/cromwell/cromwell-executions/c4e0e9bd-432a-4182-93dc-e842171dde6e.cwl/c4e0e9bd-432a-4182-93dc-e842171dde6e/call-c4e0e9bd-432a-4182-93dc-e842171dde6e.cwl/tmp.095e5005"",; outdir: ""/home/mcrusoe/src/cromwell/cromwell-executions/c4e0e9bd-432a-4182-93dc-e842171dde6e.cwl/c4e0e9bd-432a-4182-93dc-e842171dde6e/call-c4e0e9bd-432a-4182-93dc-e842171dde6e.cwl/execution"",; outdirSize: 2147483647, tmpdirSize: 2147483647}}; ```; Corrected version of the generated `runtime.json`:; 1. No `output ` prefix; 2. JSON, not YAML: key names are in quotes; 3. Objects entries are sorted by key; ``` json; {""runtime"":{""cores"": 1, ""outdir"": ""/home/mcrusoe/src/cromwell/cromwell-executions/c4e0e9bd-432a-4182-93dc-e842171dde6e.cwl/c4e0e9bd-432a-4182-93dc-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3710:879,Test,Test,879,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3710,1,['Test'],['Test']
Testability,"From the `logs` endpoint:; ```{; ""stdout"": ""gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stdout.log"",; ""shardIndex"": 4,; ""stderr"": ""gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stderr.log"",; ""attempt"": 1,; ""backendLogs"": {; ""log"": ""gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4.log""; }; }```. ```tlangs at some_computer in /a/working/directory; $ gsutil cat gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stdout.log; CommandException: No URLs matched: gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stdout.log. tlangs at some_computer in /a/working/directory; $ gsutil cat gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/attempt-2/HaplotypeCaller-4-stdout.log; 21:45:13.012 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/usr/gitc/gatk4/gatk-package-4.beta.5-local.jar!/com/intel/gkl/native/libgkl_compression.so; 21:45:13.215 INFO PrintReads - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 21:45:13.216 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 21:45:13.216 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 21:45:13.216 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 21:45:13.217 INFO PrintReads - Deflater: IntelDeflater; 21:45:13.217 INFO PrintReads - Inflater: IntelInflater; 21:45:13.218 INFO PrintReads - GCS max retries/reopens: 20; 21:45:13.218 INFO PrintReads - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 21:45:13.218 INFO PrintReads - Initializing engine; 21:45:16.218 INFO IntervalArgumentColle",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3929:10,log,logs,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3929,7,['log'],"['log', 'logs']"
Testability,"From the hackathon:. Does a few potentially positive things:; - Adds a `dot` format graph to metadata; - Implements `wom graph` for WOM (ie so it should work equally for all languages - CWL, WDL 1.0, et al); - Provides a live status DAG endpoint, showing the current status of each step of a workflow as nodes within the graph of other dependencies. And a potentially negative one:; - Changes up the `wom graph` output for draft-2 in potentially backwards incompatible ways (and is not tested so might be outright broken)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4522:486,test,tested,486,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4522,1,['test'],['tested']
Testability,From: #5464 ; Closes: #5460 . Recreated to be in the Cromwell repo with access to testing. Thanks @aednichols!,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5583:82,test,testing,82,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5583,1,['test'],['testing']
Testability,"Functionality is needed to stage data files to/from S3 on a per-task level. For the example WDL file:; ```; task copy_file {; String output_file; File input_file. command {; cp ${input_file} ${output_file}; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow wf_copy_file {; call copy_file; }; ```; and corresponding `inputs.json`. ```json; {; ""wf_cop_file.copy_file.input_file"": ""s3://myBucket/hello.txt"",; ""wf_cop_file.copy_file.output_file"": ""greetings.txt""; }; ```. The workflow execution should be able to copy the input file from S3 to the working task directory, and copy the output file ""greetings.txt"" to the configured S3 bucket for writing logs and outputs. An example of files written to the output S3 bucket would be:. ```; # $WF_ID is the workflow identifier (e.g. ""E6D5143C-89BC-4823-AED7-2A6AE00A1C2B""); s3://cromwell-output-bucket/$WF_ID/copy_file/outputs/greetings.txt; s3://cromwell-output-bucket/$WF_ID/copy_file/wf_copy_file-rc.txt; s3://cromwell-output-bucket/$WF_ID/copy_file/wf_copy_file-stdout.txt; s3://cromwell-output-bucket/$WF_ID/copy_file/wf_copy_file-stderr.txt; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3804:653,log,logs,653,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3804,1,['log'],['logs']
Testability,GCS auth tests. Closes #1082,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1125:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1125,1,['test'],['tests']
Testability,"GDC blocker, also blocking conformance test 85.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3253:39,test,test,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3253,1,['test'],['test']
Testability,"GKILL` due to OOM.; I also tried with `true` though. Here is my simple OOM tester WDL. I tested it with PAPIv2 beta based on Life Sciences API. ```wdl; version 1.0. workflow mem_retry {; call fail_oom; }. task fail_oom {; command {; set -e; # This one-liner triggers OOM and hence 137 (SIGKILL); # https://askubuntu.com/a/823798; tail /dev/zero # <====== This WDL works fine without this line; }; runtime {; cpu: 1; memory: ""2 GB""; docker: ""ubuntu:latest""; continueOnReturnCode: [0, 137]; }; }; ```. Google backend (PAPI2 beta) in `backend.conf`, ; ```; config {; memory-retry {; error-keys = [""OutOfMemoryError"", ""Killed""]; multiplier = 1.5; }; }; ```. STDERR of task:; ```; $ gsutil cat gs://encode-pipeline-test-runs/caper_out_10/mem_retry/87492280-9828-4afa-b53e-bec675103c42/call-fail_oom/stderr; /cromwell_root/script: line 28: 17 Killed tail /dev/zero; ```. RC of task. It's weird that this is not caught in `metadata.json`.; ```; $ gsutil cat gs://encode-pipeline-test-runs/caper_out_10/mem_retry/87492280-9828-4afa-b53e-bec675103c42/call-fail_oom/rc; 137; ```. `memory_retry_rc`: So Cromwell found that it's failed due to OOM.; ```; $ gsutil cat gs://encode-pipeline-test-runs/caper_out_10/mem_retry/87492280-9828-4afa-b53e-bec675103c42/call-fail_oom/memory_retry_rc; 0; ```. `metadata.json`; ```; {; ""workflowName"": ""mem_retry"",; ""workflowProcessingEvents"": [; {; ""timestamp"": ""2020-08-29T00:00:38.724Z"",; ""cromwellVersion"": ""53"",; ""cromwellId"": ""cromid-0a29b92"",; ""description"": ""PickedUp""; },; {; ""description"": ""Finished"",; ""cromwellId"": ""cromid-0a29b92"",; ""timestamp"": ""2020-08-29T00:04:06.072Z"",; ""cromwellVersion"": ""53""; }; ],; ""metadataSource"": ""Unarchived"",; ""actualWorkflowLanguageVersion"": ""1.0"",; ""submittedFiles"": {; ""workflow"": ""version 1.0\n\nworkflow mem_retry {\n call fail_oom \n}\n\ntask fail_oom {\n command {\n set -e\n # This one-liner triggers 137 (SIGKILL due to OOM)\n # https://askubuntu.com/a/823798\n tail /dev/zero\n }\n runtime {\n cpu: 1\n memory: \""2 GB\""\n d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5815:1501,test,test-runs,1501,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5815,1,['test'],['test-runs']
Testability,"GOTC was running the test for staging PAPI (Pipelines API). This test is launching 50 Single Sample workflows at once and 4 of our workflows failed with this error.; ```; ""message"": ""429 Too Many Requests\n{\n \""code\"" : 429,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""reason\"" : \""rateLimitExceeded\""\n } ],\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""status\"" : \""RESOURCE_EXHAUSTED\""\n}""; ```. All 4 of the jobs that failed were non-premptible whereas there are preemptible jobs that ran into this error and just went from attempt 1 to attempt 2 or w/e. . I don't think we would want this error to count towards our attempt count and we definitely don't want it to fail non preemptible tasks. @kcibul for prioritization",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1763:21,test,test,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1763,4,"['sandbox', 'test']","['sandbox', 'test']"
Testability,Generate XML test report,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4126:13,test,test,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4126,1,['test'],['test']
Testability,Generate coverage for integration tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2943:34,test,tests,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2943,2,['test'],['tests']
Testability,Generate names for all Akka TestKit actor systems BT-39,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6052:28,Test,TestKit,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6052,1,['Test'],['TestKit']
Testability,Get staging db to test restarts,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2089:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2089,1,['test'],['test']
Testability,Get the restart tests up and running. Closes #2866,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2906:16,test,tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2906,1,['test'],['tests']
Testability,"Getting the tests plumed through right was the trickiest part. Here are the test correspondences with GHA suites:; - `biscayne_new_runtime_attributes_lifesciences`: Centaur Papi V2 Beta, Centaur GCP Batch; - `biscayne_new_runtime_attributes_tes`: Centaur TES; - `biscayne_new_runtime_attributes_local`: Centaur Local. There appears to be some spec confusion wherein the [per-cloud scopes](https://github.com/openwdl/wdl/blob/wdl-1.1/SPEC.md#conventions-and-best-practices) are referred to as ""object"" but have the syntax of a namespace (and not a map, because map keys are quoted):; ```; runtime {; gcp: {; ...; }; }; ```; [Immediately above](https://github.com/openwdl/wdl/blob/wdl-1.1/SPEC.md#inputs) we're using `object {` though.; ```; runtime {; inputs: object {; foo: object { ; localizationOptional: true; }; }; }; ```; I decided in favor of `object` on the basis of 2/3 majority between the examples and being called that in the prose.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7380:12,test,tests,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7380,2,['test'],"['test', 'tests']"
Testability,"GitHub ""helpfully"" collapses `JsonEditorSpec` due to the scope of the changes, but actually that does need to be reviewed. 🙂 . Does:. * Fix `exclude` to only examine workflows and calls; * Support `:` syntax in excludes; * Add `ErrorOr` validation to method signatures; * ""Adjust"" `JsonEditorSpec` to not actively test for incorrect behavior. Does not:. * Fix `include` to only examine workflows and calls; * Support `:` syntax for include; * Add as many real-world or rigorous tests as I would like, mostly because the aforementioned things are still broken",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5309:314,test,test,314,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5309,2,['test'],"['test', 'tests']"
Testability,"Give Centaur-managed Cromwell more time to restart and a custom exit code.; Publish artifacts again on each build tag.; Login to docker before trying to push images.; Functions using secure variables ensure that xtrace is not enabled, thus no longer need a subshell, thus do not need to be exported.; Artifactory and Docker Hub credentials added to vault.; Docker login can use environment variables or vault once dsde-toolbox is public.; Split setup_secure_environment into setup_common_environment and setup_secure_resources.; Sbt environment variables prefixed as CROMWELL_SBT_*.; Print out a warning instead of exiting when vault resources cannot be rendered when testing locally.; Minor updates for more consistent shell variable usage.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3661:120,Log,Login,120,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3661,3,"['Log', 'log', 'test']","['Login', 'login', 'testing']"
Testability,Give a JES-pointing server a non-GCS url in the inputs file and the API gives no response. Looking in the server logs you get . ```; java.lang.IllegalArgumentException: Not a valid Google Cloud Storage URI: /Users/chrisl/Desktop/workflowTimings.html; at cromwell.engine.io.gcs.GcsPath$.parse(GcsPath.scala:32); at cromwell.engine.io.gcs.GcsPath$.apply(GcsPath.scala:22); at cromwell.engine.io.gcs.GoogleCloudStorage.hash(GoogleCloudStorage.scala:76); at cromwell.engine.WorkflowDescriptor$$anonfun$fileHasher$1.apply(WorkflowDescriptor.scala:62); at cromwell.engine.WorkflowDescriptor$$anonfun$fileHasher$1.apply(WorkflowDescriptor.scala:62); at wdl4s.values.WdlValue$class.computeHash(WdlValue.scala:63); at wdl4s.values.WdlSingleFile.computeHash(WdlFile.scala:39); at cromwell.engine.WorkflowDescriptor.hash(WorkflowDescriptor.scala:176); at cromwell.engine.workflow.WorkflowActor$$anonfun$52.apply(WorkflowActor.scala:1050); at cromwell.engine.workflow.WorkflowActor$$anonfun$52.apply(WorkflowActor.scala:1049); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245); at scala.collection.immutable.Map$Map2.foreach(Map.scala:137); at scala.collection.TraversableLike$class.map(TraversableLike.scala:245); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at cromwell.engine.workflow.WorkflowActor.buildSymbolStoreEntries(WorkflowActor.scala:1049); at cromwell.engine.workflow.WorkflowActor.createWorkflow(WorkflowActor.scala:241); at cromwell.engine.workflow.WorkflowActor$Start.runInitialization(WorkflowActor.scala:120); at cromwell.engine.workflow.WorkflowActor.cromwell$engine$workflow$WorkflowActor$$initializeExecutionStore(WorkflowActor.scala:326); at cromwell.engine.workflow.WorkflowActor$$anonfun$1.applyOrElse(WorkflowActor.scala:364); at cromwell.engine.workflow.WorkflowActor$$anonfun$1.applyOrElse(WorkflowActor.scala:360); at scala.runtime.AbstractPar,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/520:113,log,logs,113,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/520,1,['log'],['logs']
Testability,Give akka logger a little more time to start [CROM-6738],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6381:10,log,logger,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6381,1,['log'],['logger']
Testability,"Given a single workflow and a specific task, the time spent in the ""Final Cromwell Overhead"" state increases everytime the workflow is set to scatter wider. Anything wider than 50 jobs ends up with a lot of leftover jobs in ""Running"" state and Cromwell just hangs. This is all being run on the SGE backend, no UGER. For example:; Given a 50 wide scatter, the average amount of time spent ""RunningJob"" is ~30 seconds and the amount of time spent in ""Final Cromwell Overhead"" is about ~300 seconds; Given a 250 wide scatter, average amount of time spent in ""Final Cromwell Overhead"" is +1.5 hours; Given a 350 wide scatter, average amount of time spent in ""Final Cromwell Overhead"" is +2 hours. <img width=""942"" alt=""250-wide-timing"" src=""https://cloud.githubusercontent.com/assets/14941133/19537736/10b406f6-961f-11e6-9fa0-03ac5275981e.png"">; <img width=""1202"" alt=""50-wide-timing"" src=""https://cloud.githubusercontent.com/assets/14941133/19537737/10b60f32-961f-11e6-8246-c42168d9189e.png"">; <img width=""1314"" alt=""350-wide-timing"" src=""https://cloud.githubusercontent.com/assets/14941133/19537735/10b1d39a-961f-11e6-8d24-fcb2cfe3459a.png"">; [Uploading mh-serverLogs_22.txt…](). Attaching the thread dump. ; [megan_thread_dump.txt](https://github.com/broadinstitute/cromwell/files/540239/megan_thread_dump.txt). Server logs can be found here: /humgen/gsa-hpprojects/dev/mshand/palantir/Analysis/398_FatPandaAutomation/serverlogs22.txt /users/rmunshi/mh-serverLogs_22.txt",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1603:1318,log,logs,1318,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1603,1,['log'],['logs']
Testability,"Given the current implemention of `actorSystem` in `Backend`, it's not a great sign that all the tests are passing. :frowning:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/322:97,test,tests,97,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/322,1,['test'],['tests']
Testability,Globs are currently not supported by the BCS backend. Currently the backend submits one BCS task per BCS job where the task runs the script specified by the user within the WDL command block. Adding glob support may require modifications to the BCS python worker and/or adding an additional BCS task to each BCS job. A/C:; - Restore glob testing to `testCentaurBcs.sh`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3519:338,test,testing,338,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3519,2,['test'],"['testCentaurBcs', 'testing']"
Testability,Good news: this PR reinstates globs and almost all relevant centaur tests.; Bad news: I gave the PR such an awful name that nobody wants to talk about it out loud.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2900:68,test,tests,68,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2900,1,['test'],['tests']
Testability,"Google Genomics fails when transferring the String output from a task to a bucket (Cromwell 25, using the wdl_runner pipeline). Here is the offending WDL file:; ```yaml; task Print_String {; command {; echo hello; }; runtime {; docker: ""ubuntu:14.04""; cpu: ""1""; memory: ""1 GB""; disks: ""local-disk "" + 10 + "" HDD""; }; output {; String out_string = read_string(stdout()); }; }. workflow My_Workflow {; call Print_String {; }; }; ```. This results in the error log:; ```; 2017-03-31 03:39:42,716 wdl_runner INFO: Workflow output files = [u'hello']; 2017-03-31 03:39:42,716 file_util INFO: Copying [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/; 2017-03-31 03:39:45,722 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 0; 2017-03-31 03:39:48,695 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 1; 2017-03-31 03:39:51,643 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 2; ERROR: copying files from [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: CommandException: No URLs matched: hello. (exit status 1); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2115:458,log,log,458,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2115,1,['log'],['log']
Testability,Gracefully skip tests requiring AES 256 CBC if it's not installed.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/206:16,test,tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/206,1,['test'],['tests']
Testability,Green integration testing with Centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2336:18,test,testing,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2336,1,['test'],['testing']
Testability,Green integration testing with Tyburn,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2337:18,test,testing,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2337,1,['test'],['testing']
Testability,Greening develop for newly added conformance tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3213:45,test,tests,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3213,1,['test'],['tests']
Testability,"Gull away. There are things here that need discussion, in particular `WdlTask#instantiateCommand` that is called only by tests and ""example"" code. Also I'm not sure how to properly honor initialized optionals for the config backend; I'm currently forcing in `none` defaults since if I don't expression evaluation with uninitialized optionals blows up.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2942:121,test,tests,121,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2942,1,['test'],['tests']
Testability,"HANGELOG.markdown) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/CHANGELOG.rst) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/Changelog.md) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/Changelog.markdown) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/Changelog.rst) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/changelog.md) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/changelog.markdown) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/changelog.rst) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/CHANGES.md) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/CHANGES.markdown) - [Changelog](https://bitbucket.org/asomov/snakeyaml/src/master/CHANGES.rst). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.27).; You might want to review and update them manually.; ```; dockerHashing/src/main/scala/cromwell/docker/local/DockerCliClient.scala; docs/developers/bitesize/ci/CaaS_DEV_CD.svg; scripts/metadata_comparison/test/resources/comparer/version3_comparison_good.csv; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.yaml"", artifactId = ""snakeyaml"" } ]; ```; </details>. labels: test-library-update, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6281:2889,test,test,2889,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6281,2,['test'],"['test', 'test-library-update']"
Testability,Happens on a small set of workflows but not others. From the logs of the offending Cromwell:. ```; #011at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); #011at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); #011at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); #011at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); #011at akka.dispatch.Mailbox.exec(Mailbox.scala:234); #011at akka.dispatch.Mailbox.run(Mailbox.scala:224); #011at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); #011at akka.actor.ActorCell.invoke(ActorCell.scala:495); #011at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); #011at cromwell.webservice.PerRequest$WithProps.aroundReceive(PerRequest.scala:97); #011at akka.actor.Actor$class.aroundReceive(Actor.scala:496); #011at cromwell.webservice.PerRequest$$anonfun$receive$1.applyOrElse(PerRequest.scala:41); #011at cromwell.webservice.PerRequest$class.cromwell$webservice$PerRequest$$complete(PerRequest.scala:58); #011at spray.routing.RequestContext.complete(RequestContext.scala:237); #011at spray.httpx.marshalling.ToResponseMarshaller$$anon$3.apply(Marshaller.scala:81); #011at spray.httpx.marshalling.ToResponseMarshaller$$anonfun$compose$1.apply(Marshaller.scala:69); #011at spray.httpx.marshalling.ToResponseMarshaller$$anonfun$compose$1.apply(Marshaller.scala:69); #011at spray.httpx.marshalling.BasicToResponseMarshallers$$anon$1.apply(BasicToResponseMarshallers.scala:22); #011at spray.httpx.marshalling.BasicToResponseMarshallers$$anon$1.apply(BasicToResponseMarshallers.scala:35); #011at spray.httpx.marshalling.Marshaller$$anon$2.apply(Marshaller.scala:47); #011at spray.httpx.marshalling.Marshaller$MarshallerDelegation$$anonfun$apply$2.apply(Marshaller.scala:60); #011at spray.httpx.marshalling.Marshaller$MarshallerDelegation$$anonfun$apply$2.apply(Marshaller.scala:61); #011at spray.httpx.marshalling.Marshaller$MarshallerDele,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2438:61,log,logs,61,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2438,1,['log'],['logs']
Testability,"Happens with Cromwell 24 and pretty sure also Cromwell 25 . I was running the GOTC single-sample WDL and found that in a call of a task where one of the input files was set to optional (but a file path was specified), the call failed because the path passed to the command was the gs:// path instead of the localized path. . Can provide more details + logs if this is something you haven't seen before.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2162:352,log,logs,352,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2162,1,['log'],['logs']
Testability,"Hardcode shellquoting on for StringCommandParts, fix a conformance test.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3147:67,test,test,67,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3147,1,['test'],['test']
Testability,Have upstream test clean up after itself.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/706:14,test,test,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/706,1,['test'],['test']
Testability,Have workflow submissions register new workflow ID w/ IAM-stub,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2135:58,stub,stub,58,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2135,1,['stub'],['stub']
Testability,Headline changes:. * Moves operation analysis functions from `argument_regex.py` and `extractor.py` into their own lib file; * Also moved the `test_argument_regex.py` file into `test/lib/` alongside operation_id tests and a helper function file; * Creates a `PapiClients` class to abstract the details of operations metadata retrieval; * Added equivalent forkjoin metadata tests for v1 and v2beta,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5493:178,test,test,178,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5493,3,['test'],"['test', 'tests']"
Testability,"Hello Cromwell People, . Currently I believe Cromwell has retry logic for I/O issues or preemptible VMs issues for Google Cloud,. However, when Cromwell jobs that are executed via GridEngine dispatcher will fail with no re-try if the return code is deemed as a error code,. I am submitting a potential patch where Cromwell can retry failed jobs running on GridEngine with user specified retries (""backend.max-job-retries""), . I'm not sure how the configurations should be organized but here is my starting point; let me know what you guys think. Thanks,; Paul",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2176:64,log,logic,64,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2176,1,['log'],['logic']
Testability,"Hello Cromwell Team, . Our bioinformatics team have been reporting a single retry after preemptible attempts have been exhausted. They've added logic in the task itself that introspects the vm in the event the job ends up on a non-preemptible VM and promptly exists. This isn't ideal as starting a VM still incurs cost. . I've made the follow changes in:; ```diff; --- a/supportedBackends/google/pipelines/common/src/main/scala/cromwell/backend/google/pipelines/common/PipelinesApiAsyncBackendJobExecutionActor.scala; +++ b/supportedBackends/google/pipelines/common/src/main/scala/cromwell/backend/google/pipelines/common/PipelinesApiAsyncBackendJobExecutionActor.scala; @@ -882,8 +882,11 @@ class PipelinesApiAsyncBackendJobExecutionActor(override val standardParams: Sta; else {; val msg = s""$baseMsg The maximum number of preemptible attempts ($maxPreemption) has been reached. The "" +; s""call will be restarted with a non-preemptible VM. Error code $errorCode.$prettyPrintedError)""; - FailedRetryableExecutionHandle(StandardException(; - errorCode, msg, jobTag, jobReturnCode, standardPaths.error), jobReturnCode, kvPairsToSave = Option(preemptionAndUnexpectedRetryCountsKvPairs)); + FailedNonRetryableExecutionHandle(; + StandardException(errorCode, msg, jobTag, jobReturnCode, standardPaths.error),; + jobReturnCode,; + kvPairsToSave = Option(preemptionAndUnexpectedRetryCountsKvPairs); + ); }; ```. and tested with a trivial WDL and tasks such as (trying out multiple premptible / maxRetries):. ```wdl; task crash {; String addressee ; command {; echo ""Hello ${addressee}! Welcome to Cromwell . . . on Google Cloud!"" && sleep infinity ; }; output {; String message = read_string(stdout()); }; runtime {; preemptible: 3; maxRetries: 0; docker: ""ubuntu:latest""; }; }. workflow wf_preempt {; call crash. output {; crash.message; }; }. ```. Let me know if I'm going in the right direction for a pull request.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6666:144,log,logic,144,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6666,2,"['log', 'test']","['logic', 'tested']"
Testability,"Hello all, . This fixes BA-6144; EDIT: also fixes #4969. At LUMC we are currently creating [wdl-packager](https://github.com/biowdl/wdl-packager/tree/init). This program uses miniwdl to determine any file based imports in a WDL file and package them into a zip. This was done to make the release and deployment of BioWDL pipelines less unwieldy. Also this provides ready-made zip files for people who want to run BioWDL on a cromwell server. When testing I discovered that [Cromwell does not properly unpack zip files](https://broadworkbench.atlassian.net/projects/BA/issues/BA-6144). Zips with nested directories can not be unpacked. This is due to a bug in better-files 2.17.1 that was fixed in 3.0.0 and higher versions. In this PR the version of better-files is updated to 3.8.0 and any incompatibilities should be fixed.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5312:447,test,testing,447,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5312,1,['test'],['testing']
Testability,"Hello cromwell dev team,. I'm currently working with the reference-disks option using GCPBatch as my backend. I executed the create_images.sh script from the documentation (https://cromwell.readthedocs.io/en/develop/backends/GCPBatch/) to generate my reference-disk-localization-manifests. I'm also using Cromwell v87, as specified in the same documentation. I also tested with the current `develop` build. While the manifest is correctly configured in the Cromwell config, and the reference disk appears to be mounting successfully, I’m encountering a failure with the umount command. I’m not sure why this command is being invoked in the first place. Mount Image; <img width=""573"" alt=""Screenshot 2024-09-26 at 16 07 46"" src=""https://github.com/user-attachments/assets/ce43be4a-132b-4c87-a27d-718a376171f7"">. **Error Message:**; ```; severity: ""DEFAULT""; textPayload: ""umount: /mnt/2d49bcb009113835140d638a10b535af: no mount point specified.""; timestamp: ""2024-09-26T14:07:54.88114; ```. Below is an example of what I have included in my Cromwell configuration (cromwell.conf). . ```; reference-disk-localization-manifests = [; {; ""imageIdentifier"" : ""projects/private-test-cromwell/global/images/omics-reference-disk-image"",; ""diskSizeGb"" : 10,; ""files"" : [ ; {; ""path"" : ""test-cromwell-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""crc32c"" : 2158779318; },; {; ""path"" : ""test-cromwell-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""crc32c"" : 420322484; },; {; ""path"" : ""test-cromwell-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""crc32c"" : 1970999569; }; ]; }; ]; ```. @mcovarr and @aednichols, I have seen issue [#7502](https://github.com/broadinstitute/cromwell/pull/7502)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7548:366,test,tested,366,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7548,5,['test'],"['test-cromwell', 'test-cromwell-references', 'tested']"
Testability,"Hello! . Firstly, I'm thank you so much for useful program. (cromwell). ![2018-02-13 10 44 32](https://user-images.githubusercontent.com/4966343/36129525-eed876ea-10aa-11e8-8956-2ccf81ae18c7.png). Command line is..; $ java -jar /home/brandon/cromwell/cromwell-30.2.jar run -i test.json processing-for-variant-discovery-gatk4.wdl. It does not processing anymore in this status. . How can I handle this problem?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3269:276,test,test,276,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3269,1,['test'],['test']
Testability,"Hello,. I am new to cromwell and trying to run a test workflow on GPC. I am using the PAPIv2 backend and here is my config:; ```; $ cat genomics.conf | grep -v '#' | sed '/^$/d'; include required(classpath(""application"")); google {; application-name = ""cromwell""; auths = [; {; name = ""application-default""; scheme = ""application_default""; }; ]; }; engine {; filesystems {; gcs {; auth = ""application-default""; project = ""xxxxx""; }; }; }; backend {; default = PAPIv2; providers {; PAPIv2 {; actor-factory = ""cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory""; config {; project = ""xxxxx""; root = ""gs://xxxx/cromwell_execution""; virtual-private-cloud {; network-label-key = ""xxx""; subnetwork-label-key = ""xxx""; auth = ""application-default""; }; name-for-call-caching-purposes: PAPI; slow-job-warning-time: ""24 hours""; genomics-api-queries-per-100-seconds = 1000; maximum-polling-interval = 600; request-workers = 3; genomics {; auth = ""application-default""; endpoint-url = ""https://genomics.googleapis.com/""; location = ""us-west1""; restrict-metadata-access = false; localization-attempts = 3; parallel-composite-upload-threshold=""150M""; }; filesystems {; gcs {; auth = ""application-default""; project = ""xxxx""; caching {; duplication-strategy = ""copy""; }; }; http { }; }; default-runtime-attributes {; cpu: 1; failOnStderr: false; continueOnReturnCode: 0; memory: ""2048 MB""; bootDiskSizeGb: 10; disks: ""local-disk 10 SSD""; noAddress: false; preemptible: 0; zones: [""us-west1-a"", ""us-west1-b""]; }; include ""papi_v2_reference_image_manifest.conf""; }; }; }; }; ```; When I run with the above config using:; ```; java -Dconfig.file=genomics.conf -jar cromwell-66.jar run cumulus.wdl -i cumulus_inputs.json; ```; I am getting the following error message:; ```; [2021-08-24 22:05:33,60] [info] WorkflowManagerActor: Workflow 6cc303b4-295d-49fa-a996-b5cf7ec9beea failed (during ExecutingWorkflowState): java.lang.Exception: Task cumulus.cluster:NA:1 failed. The job was stopped before",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6477:49,test,test,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6477,1,['test'],['test']
Testability,"Hello,. I posted a couple of issues on the bcbio-nextgen tracker and I thought I'd link them here as well, in case anyone can help, as these seem to be Cromwell-specific errors. Running bcbio-nextgen with IPython parallel instead of Cromwell works fine for the scenario I've set up. In summary, I'm trying to run variant calling with bcbio-nextgen using Cromwell and 100 small FASTQ files (50-100 reads each), for testing, on an SGE cluster. The main issue seems to be that the master node is coming up under heavy load, for some reason, and, at some point, the Cromwell jobs stop getting scheduled. . This is described in more detail here: https://github.com/bcbio/bcbio-nextgen/issues/2721. A second issue, which might be related, is with the file `cromwell_work/persist/metadata.lobs`. It gets quite big, at 36 GB, for the scenario that I've described earlier, and I'm wondering if this is normal. . I'm also seeing some error messages (`java.sql.BatchUpdateException: lob is no longer valid`) when running bcbio-nextgen with Cromwell, in the same scenario as above. Could this somehow be related to the high cluster load issues as well? . More details are here: https://github.com/bcbio/bcbio-nextgen/issues/2722.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4732:414,test,testing,414,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4732,1,['test'],['testing']
Testability,"Hello,. I'm running a Cromwell service as Google Cloud VM instance. The Cromwell's version is 68, with the following conf:. ```; include required(classpath(""application"")). webservice {; interface = xx.xxx.xxx.xx; port = xxxx; }. google {; application-name = ""cromwell""; auths = [; {; name = ""application-default""; scheme = ""application_default""; }; ]; }. engine {; filesystems {; gcs {; auth = ""application-default""; project = ""gred-cumulus-sb-01-991a49c4""; }. }; }. workflow-options {; workflow-log-temporary = false; }. call-caching {; enabled = true; invalidate-bad-cache-results = true; }. database {; profile = ""slick.jdbc.MySQLProfile$""; db {; driver = ""com.mysql.cj.jdbc.Driver""; 	url = ""jdbc:mysql://localhost/cromwell?rewriteBatchedStatements=true""; 	user = ""root""; 	password = ""cromwell""; 	connectionTimeout = 5000; }; }. backend {; default = PAPIv2. providers {; PAPIv2 {; actor-factory = ""cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory""; config {; # Google project; project = ""gred-cumulus-sb-01-991a49c4"". # Base bucket for workflow executions; root = ""gs://gred-cumulus-output/cromwell_execution"". virtual-private-cloud {; network-label-key = ""my-private-network""; subnetwork-label-key = ""my-private-subnetwork""; auth = ""application-default""; }. # Make the name of the backend used for call caching purposes insensitive to the PAPI version.; name-for-call-caching-purposes: PAPI. # Emit a warning if jobs last longer than this amount of time. This might indicate that something got stuck in PAPI.; slow-job-warning-time: ""24 hours"". # Set this to the lower of the two values ""Queries per 100 seconds"" and ""Queries per 100 seconds per user"" for; # your project.; #; # Used to help determine maximum throughput to the Google Genomics API. Setting this value too low will; # cause a drop in performance. Setting this value too high will cause QPS based locks from Google.; # 1000 is the default ""Queries per 100 seconds per user"", 50000 is the default ""Querie",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6506:497,log,log-temporary,497,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6506,1,['log'],['log-temporary']
Testability,"Hello,. So that I don't have to manually check to see if this has been updated, can the following snippet be moved into a seperate file?. https://github.com/broadinstitute/cromwell/blob/97b7d324c5cbec4b29093aa26c5b10f5086b54bb/src/bin/travis/testCentaurCwlConformanceLocal.sh#L32",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3632:242,test,testCentaurCwlConformanceLocal,242,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3632,1,['test'],['testCentaurCwlConformanceLocal']
Testability,"Hello.; Is this tool supposed to run on Windows?; i get the following error connected with illegal character in files path:. > [2016-06-17 19:46:12,739] [error] BackendCallExecutionActor [3a480614:testTask]: Illegal char <:> at index 130: D:\Cromwell\cromwell-ex ecutions\test\3a480614-1f47-4101-a869-20b3cd836f38\call-testTask \D:\Cromwell\other.bam; > java.nio.file.InvalidPathException: Illegal char <:> at index 130: D:\Cromwell\workflow-engine\cromwell-executions\test\3a480614-1f47-4101-a869-20b3cd836f38\call-testTask\ D:\Cromwell\test.bam; > at sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182); > at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153); > at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77); > at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94); > at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255); > at java.nio.file.Paths.get(Paths.java:84); > at cromwell.engine.backend.local.SharedFileSystem$class.toCallPath$1(Sha redFileSystem.scala:214); > at cromwell.engine.backend.local.SharedFileSystem$$anonfun$15.apply(Shar edFileSystem.scala:219); > at cromwell.engine.backend.local.SharedFileSystem$$anonfun$15.apply(Shar edFileSystem.scala:219); > at cromwell.engine.backend.local.SharedFileSystem$class.adjustFile$1(Sha redFileSystem.scala:259); > at cromwell.engine.backend.local.SharedFileSystem$class.localizeWdlValue (SharedFileSystem.scala:267); > at cromwell.engine.backend.local.LocalBackend.localizeWdlValue(LocalBack end.scala:94); > at cromwell.engine.backend.local.SharedFileSystem$$anonfun$16.apply(Shar edFileSystem.scala:219); > at cromwell.engine.backend.local.SharedFileSystem$$anonfun$16.apply(Shar edFileSystem.scala:219); > at cromwell.engine.backend.local.SharedFileSystem$$anonfun$17.apply(Shar edFileSystem.scala:221); > at cromwell.engine.backend.local.SharedFileSystem$$anonfun$17.apply(Shar edFileSystem.scala:220); > at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1016:197,test,testTask,197,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1016,6,['test'],"['test', 'testTask']"
Testability,"Hello， Could someone tell me how to fix this problem? Thanks!!!. **task hello** {; String name. command {; echo 'Hello ${name}!' > /Users/00.wdl/QC_new/QC/hello.out1; }; output {; File out1 = ""/Users/00.wdl/QC_new/QC/hello.out1""; }; }. **task hello2** {; 	File in1. 	command {; 		cat ${in1}; 	}. 	output {; 		File	response2 = stdout(); 	}. }. **workflow test** {; call hello {input name=""World"" }; call hello2 {input in1=hello.out1 }; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5059:354,test,test,354,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5059,1,['test'],['test']
Testability,"Here is a very simple WDL (test.wdl):; ```; version 1.0. workflow test {; input {; Array[File] list; }. call test {; input:; list = list; }; }. task test {; input {; Array[File] list; String docker = ""ubuntu:20.04""; }. File lines = write_lines(list). command <<<; cat ~{lines}; cat ~{write_lines(list)}; echo -e ""~{sep=""\\n"" list}""; >>>. runtime {; docker: docker; }; }; ```. Here is a basic input for the WDL (test.json):; ```; {; ""test.list"": [""/tmp/1"", ""/tmp/2"", ""/tmp/3""]; }; ```. When I run the workflow on my laptop with the following command:; ```; java -jar cromwell-51.jar run test.wdl -i test.json; ```; I get the following stdout output:; ```; /tmp/1; /tmp/2; /tmp/3; /cromwell-executions/test/00112233-4455-6677-8899-aabbccddeeff/call-test/inputs/1515144/1; /cromwell-executions/test/00112233-4455-6677-8899-aabbccddeeff/call-test/inputs/1515144/2; /cromwell-executions/test/00112233-4455-6677-8899-aabbccddeeff/call-test/inputs/1515144/3; /cromwell-executions/test/00112233-4455-6677-8899-aabbccddeeff/call-test/inputs/1515144/1; /cromwell-executions/test/00112233-4455-6677-8899-aabbccddeeff/call-test/inputs/1515144/2; /cromwell-executions/test/00112233-4455-6677-8899-aabbccddeeff/call-test/inputs/1515144/3; ```; Which shows that the absolute paths of the files passed to the test workflow have been exposed. I cannot imagine this being the expected behavior. How do I get to have `write_lines(...)` behave more like `~{sep="" "" ...}` even when it is not run inside a command <<< ... >>> instance?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5540:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5540,21,['test'],['test']
Testability,"Here is the current situation from Google from https://partnerissuetracker.corp.google.com/issues/71697449:; > ------------------------------- ; > ferrara@broadinstitute.org <ferrara@broadinstitute.org> #1 Jan 8, 2018 09:25AM ; > Reported Issue; > I don't have specific numbers at this time, but over the past several weeks our production operations staff started noticing an odd behavior that we originally thought was just normal preemption. Normally we see preemption showing up as ""Error code 10: Message 14:"" - and cromwell takes care of re-submitting and following the logic coded in our WDLs. Try pre-emptibles 3 times then try a non-preemptible instance. ; > ; > cromwell metadata output:; > ; > ""message"": ""Task PairedEndSingleSampleWorkflow.SamToFastqAndBwaMemAndMba:1:1 failed. JES error code 10. Task 417bb61c-16cc-4fda-91d5-443ccba4da11:SamToFastqAndBwaMemAndMba was preempted for the 1st time. The call will be restarted with another preemptible VM (max preemptible attempts number is 3). Error code Status{code=ABORTED, description=null, cause=null}. Message: 14: VM ggp-15030877962490231612 stopped unexpectedly.""; > ; > However we have seen a new error response. ""Error code 10: Message 13"" metadata output showing:; > ; > ""message"": ""Task PairedEndSingleSampleWorkflow.HaplotypeCaller:46:3 failed. JES error code 10. Message: 13: VM ggp-9289873678241352278 shut down unexpectedly.""; > ; > From what Cromwell team indicates is that ""Message 13"" is not the same as Message 14 - as such a different logic occurs within cromwell. Cromwell will try the task three times and after that it will just ""Fail"" the task. So the ""try 3 pre-emptible then try non-preemptible"" logic is never followed.; > ; > So my question is what is ""Message 13"" and how is it different from ""Message 14""? Below are OpsIDs for a set of tasks - the first are the ""Message 14"" (which again are normal preemption but I wanted to provide some for comparison to Message 13) and the second list are the ""Message 13"". T",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3157:575,log,logic,575,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3157,1,['log'],['logic']
Testability,"Here is the general pattern we saw during this last 200 (3/17). This is a very basic outline but the logs can be found in the log file 20160317-cromwell.log on gotc-prod. WorkflowActor [UUID(71b8d356)]: persisting status of StripUnmappedBamSuffix:17 to Starting; WorkflowActor [UUID(71b8d356)]: persisting status of StripUnmappedBamSuffix:17 to Running; JES Run [UUID(71b8d356):StripUnmappedBamSuffix:17]: Status change from - to Initializing; ----- Cromwell restarted -----; JES Run [UUID(71b8d356):StripUnmappedBamSuffix:17]: Status change from - to Initializing; ----- Cromwell restarted -----; JES Run [UUID(71b8d356):StripUnmappedBamSuffix:17]: Status change from - to Success; ----- Cromwell restarted -----; JES Run [UUID(71b8d356):StripUnmappedBamSuffix:17]: Status change from - to Success; WorkflowActor [UUID(71b8d356)]: persisting status of StripUnmappedBamSuffix:17 to Running.; WorkflowActor [UUID(71b8d356)]: Completion work failed for call StripUnmappedBamSuffix:17; WorkflowActor [UUID(71b8d356)]: persisting status of StripUnmappedBamSuffix:17 to Failed.; WorkflowActor [UUID(71b8d356)]: Duplicate entry '558-PairedEndSingleSampleWorkflow.StripUnmappedBamSuffix-base_na' for key 'UK_SYM_WORKFLOW_EXECUTION_ID_SCOPE_NAME_ITERATION_IO'. times of the 3 restarts:; 20:55:14,969; 22:22:09,207; 23:02:54,544",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/588:101,log,logs,101,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/588,3,['log'],"['log', 'logs']"
Testability,"Here is the the initial code for adding JSON-like objects to meta sections. In sbt project `wdlTransformsDraft3`, there is a new test case for the new constructions. What is the next step?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3354:129,test,test,129,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3354,1,['test'],['test']
Testability,"Hey @kevin-furant, we had success getting it working. Are you seeing any weird logs? Is your Cromwell instance correctly resolving the docker digest (so it's requesting an image like ""imageName@sha256:ad21[...]"")?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6687:79,log,logs,79,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6687,1,['log'],['logs']
Testability,"Hey @kevin-furant, we had success getting it working. Are you seeing any weird logs? Is your Cromwell instance correctly resolving the docker digest (so it's requesting an image like ""imageName@sha256:ad21[...]"")?. _Originally posted by @illusional in https://github.com/broadinstitute/cromwell/issues/5405#issuecomment-1047359061_. We cannot use Docker on our cluster, I use a Singularity image file",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6687:79,log,logs,79,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6687,1,['log'],['logs']
Testability,"Hi , I'm new to cromwell/wdl. I tried to run a workflow using a SGE backend. wget -O SGE.conf ""https://raw.githubusercontent.com/broadinstitute/cromwell/develop/cromwell.example.backends/SGE.conf"". ```; $ java -Dconfig.file=${PWD}/SGE.conf -jar ${CROMWELL_JAR} run test.wdl --inputs input.json ; Exception in thread ""main"" java.lang.ExceptionInInitializerError; 	at cromwell.CromwellApp$.runCromwell(CromwellApp.scala:14); 	at cromwell.CromwellApp$.delayedEndpoint$cromwell$CromwellApp$1(CromwellApp.scala:25); 	at cromwell.CromwellApp$delayedInit$body.apply(CromwellApp.scala:3); 	at scala.Function0.apply$mcV$sp(Function0.scala:39); 	at scala.Function0.apply$mcV$sp$(Function0.scala:39); 	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:17); 	at scala.App.$anonfun$main$1(App.scala:76); 	at scala.App.$anonfun$main$1$adapted(App.scala:76); 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563); 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:926); 	at scala.App.main(App.scala:76); 	at scala.App.main$(App.scala:74); 	at cromwell.CromwellApp$.main(CromwellApp.scala:3); 	at cromwell.CromwellApp.main(CromwellApp.scala); Caused by: com.typesafe.config.ConfigException$Parse: /home/lindenbaum-p/notebook/2023/20230208.wdl/SGE.conf: 60: expecting a close parentheses ')' here, not: end of file; 	at com.typesafe.config.impl.ConfigDocumentParser$ParseContext.parseError(ConfigDocumentParser.java:201); 	at com.typesafe.config.impl.ConfigDocumentParser$ParseContext.parseError(ConfigDocumentParser.java:197); 	at com.typesafe.config.impl.ConfigDocumentParser$ParseContext.parseKey(ConfigDocumentParser.java:279); ```. adding an extra `}` at the end of SGE.conf fixed the problem. I'll submit a PR if I'm not wrong.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7007:265,test,test,265,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7007,1,['test'],['test']
Testability,"Hi ,; Im running the GATK [warp joint genotyping pipeline ](https://github.com/broadinstitute/warp/blob/develop/pipelines/broad/dna_seq/germline/joint_genotyping/JointGenotyping.wdl)cromwell on GCP backend . The pipeline fails because cromwell cannot localize files with certain data types like ` Array[Array[String]]`. This issue was reported on the [terra website](https://support.terra.bio/hc/en-us/community/posts/4409388371611-How-do-I-pass-an-array-array-file-to-another-task-) too and the workaround was to write a task to read file into an array, I have performed the workaround but are there plans to fix this issue in any upcoming releases. **Cromwell version tested :** 85. **Are you seeing something that looks like a bug? Please attach as much information as possible.** ; `""Failed to evaluate 'sample_name_map_lines' (reason 1 of 1): Evaluating read_tsv(sample_name_map) failed: Failed to read_tsv(\""gs://wgs/test/sample_map.txt\"") (reason 1 of 1): java.lang.IllegalArgumentException: Could not build the path \""gs://wgs/test/sample_map.txt\"". It may refer to a filesystem not supported by this instance of Cromwell. Supported filesystems are: HTTP, LinuxFileSystem. Failures: \nHTTP: gs://wgs/test/sample_map.txt does not have an http or https scheme (IllegalArgumentException)\nLinuxFileSystem: Cannot build a local path from gs://wgs/test/sample_map.txt (RuntimeException)\n Please refer to the documentation for more information on how to configure filesystems: http://cromwell.readthedocs.io/en/develop/backends/HPC/#filesystems""`. **Which backend are you running?** ; GCP. **Link to the workflow if possible**; https://github.com/broadinstitute/warp/blob/develop/pipelines/broad/dna_seq/germline/joint_genotyping/JointGenotyping.wdl",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7364:670,test,tested,670,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7364,5,['test'],"['test', 'tested']"
Testability,"Hi All, . I am currently running Cromwell 36 in AWS batch (both Server and run mode) in one account, lets say ACCT1, and all of my resource files are cross account in another account (ACCT2). Intermittently jobs will fail due to a failure to download a reference file. Error seen through the Cromwell proxy logs:. > aws s3 cp --sse AES256 --no-progress s3://s4-somaticgenomicsrd-benchmark-gatk4/database/1.0/ucsc.hg19.fasta.bwt /cromwell_root//s4-somaticgenomicsrd-benchmark-gatk4/database/1.0/ucsc.hg19.fasta.bwt download failed: s3://s4-somaticgenomicsrd-benchmark-gatk4/database/1.0/ucsc.hg19.fasta.bwt to ../cromwell_root/s4-somaticgenomicsrd-benchmark-gatk4/database/1.0/ucsc.hg19.fasta.bwt (""Connection broken: error(104, 'Connection reset by peer')"", error(104, 'Connection reset by `peer')). I'm wondering if it is in the scope of Cromwell on AWS to have a file download retry, or check at least, rather than continuing the task with an empty file which may persist silently causing troubleshooting to be quite difficult. Best,; Adam",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4710:307,log,logs,307,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4710,5,"['benchmark', 'log']","['benchmark-', 'logs']"
Testability,"Hi All,. Im running into an issue with my deployment of Cromwell 65. I am running scripts connecting to a local MySQL(also tested on MariaDB). Upon running a reasonably complex pipeline I am receiving a number of database errors:. ```; java.sql.BatchUpdateException: Data truncation: Data too long for column 'METADATA_KEY' at row 6; 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78); 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499); 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480); 	at com.mysql.cj.util.Util.handleNewInstance(Util.java:192); 	at com.mysql.cj.util.Util.getInstance(Util.java:167); 	at com.mysql.cj.util.Util.getInstance(Util.java:174); 	at com.mysql.cj.jdbc.exceptions.SQLError.createBatchUpdateException(SQLError.java:224); 	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchedInserts(ClientPreparedStatement.java:755); 	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchInternal(ClientPreparedStatement.java:426); 	at com.mysql.cj.jdbc.StatementImpl.executeBatch(StatementImpl.java:796); 	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128); 	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java); 	at slick.jdbc.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.$anonfun$run$18(JdbcActionComponent.scala:542); 	at slick.jdbc.JdbcBackend$SessionDef.withPreparedStatement(JdbcBackend.scala:425); 	at slick.jdbc.JdbcBackend$SessionDef.withPreparedStatement$(JdbcBackend.scala:420); 	at slick.jdbc.JdbcBackend$BaseSession.withPreparedStatement(JdbcBackend.scala:489); 	at slick.jdbc.JdbcActionComponent$InsertActionComposerImp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6545:123,test,tested,123,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6545,1,['test'],['tested']
Testability,"Hi Atlas Team,. . I have installed the Atlas(apache-atlas-sources-2.1.0) in; our server by following in the link; ""https://atlas.apache.org/2.0.0/InstallationSteps.html. After all the setup; have been done, we ran the atlas-start.py and the atlas is running on port; 21000.When we are accessing the atlas, we are facing 503 Service Unavailable; Error. We checked the logs from application.log file. We got below issue . . 2020-12-13 06:29:02,309 WARN - [main:] ~ JMX is not enabled to receive; remote connections. Please see cassandra-env.sh for more info.; (CassandraDaemon:81). 2020-12-13 06:29:02,310 ERROR - [main:] ~ cassandra.jmx.local.port missing; from cassandra-env.sh, unable to start local JMX service.null; (CassandraDaemon:87). . We see there is no ""cassandra-env.sh"" file in atlas and we; tried other ways and didn't find any solution for the above error. . Could you please help us in rectify these problem so that it; will be very helpful to us.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6133:367,log,logs,367,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6133,2,['log'],"['log', 'logs']"
Testability,"Hi Cromwell Team; ; I am writing in respect to an issue that I am having with using AWS + Cromwell + MySQL server. Not sure if this is the best place to ask because I’m not sure if the issue is Cromwell specific. It might be related to AWS backend configuration. But I couldn’t figure out the problem and I figured you might be able to provide some insight.; ; I have a docker image that has MySQL server installed. I’m using percorna-server-5.6 specifically because I need to use MySQL5.6. There is a Cromwell task which does the following:; 1. Start mysql server. The first line of the WDL task is literally `service mysql start`; 2. Initialize the database and load Vcf files into the database.; 3. Run some SQL query and perform some analysis; ; And the above Cromwell task need to be run for multiple samples. ; ; So, first I did step 1-3 manually without using WDL just to make sure that I can run multiple MySQL docker container just fine. And it worked. So then the next step is test the whole WDL using LOCAL backend. And it ran fine. But when I submit the same WDL script to AWS Batch, the first task will always succeed and the subsequent tasks will always fail with port connection error because all the containers are connecting to port 3306 and port 3306 is already used. Do you know why it is trying to connect to port 3306? My issue was that it worked when running locally. So, I’m wondering if there’s something with how the docker run command was submitted to AWS Batch or EC2 is configured?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4688:987,test,test,987,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4688,1,['test'],['test']
Testability,"Hi all, . I'm encountering an issue when using the AWS Batch backend. I'm using the EFS (local) file system for the backend, not S3. I've got a workflow that downloads fastq files as an initial step. These jobs fail non-deterministically ; a fraction of the time. These jobs are a scatter over an input array of fastq files, and most of them generally complete. However, 20% of the shards might fail in any given scatter. A complete job will have the following outputs in the shard output folder:; ```; download_fastq-0-rc.txt ; download_fastq-0-stderr.log ; download_fastq-0-stdout.log ; input_fastq_specified_R1.fq.gz ; script ; tmp.71626c8d/; ```. When cromwell submits the job, it auto-generates a script to download the fastq. It's a very simple job, so here's an example script:. ```; #!/bin/bash. cd /EFSROOT/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1; tmpDir=$(mkdir -p ""/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/tmp.bf92fa27"" && echo ""/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/tmp.bf92fa27""); chmod 777 ""$tmpDir""; export _JAVA_OPTIONS=-Djava.io.tmpdir=""$tmpDir""; export TMPDIR=""$tmpDir""; export HOME=""$HOME""; (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1. ); outed746149=""${tmpDir}/out.$$"" erred746149=""${tmpDir}/err.$$""; mkfifo ""$outed746149"" ""$erred746149""; trap 'rm ""$outed746149"" ""$erred746149""' EXIT; tee '/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-stdout.log' < ""$outed746149"" &; tee '/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-stderr.log' < ""$erred746149"" >&2 &; (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5421:553,log,log,553,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5421,2,['log'],['log']
Testability,"Hi all,. As discussed with @TimothyTickle, @ruchim, @benjamincarlin, @gsaksena, @abaumann, @kshakir, @geoffjentry, and others at the Broad retreat and DSP holiday hackathon, we're putting a proposal for a new feature that reports task call resource utilization metrics to Stackdriver Monitoring API. This serves 2 important goals:. 1) Users can easily plot real-time resource usage statistics across all tasks in a workflow, or for a single task call across many workflow runs, etc. This can be very powerful to quickly determine outlier tasks that could use optimization, without the need for any configuration or code (or any changes to the workflow). It's also much easier than the current state-of-the-art, i.e. parsing task-level monitoring logs. 2) Scripts can easily get aggregate statistics on resource utilization and could produce suggestions based on those. This could provide a path towards automatic runtime configuration based on the models trained with historical data. One could also detect situations like out-of-memory calls and automatically adjust resources according to those. It would also be pretty easy to add logic for estimation of task call-level cost based on the pricing of associated resources. This could provide a long-sought feature of real-time cost monitoring/control (thanks to @TimothyTickle for the suggestion). Monitoring is done using the new ""monitoring action"" for PAPIv2, which currently uses the hard-coded [quay.io/broadinstitute/cromwell-monitor](https://quay.io/repository/broadinstitute/cromwell-monitor) image, built from https://github.com/broadinstitute/cromwell-monitor (I wasn't sure if that code belonged here or in a separate repo). This is advantageous to just using it as a _monitoring_script_, because it removes all assumptions on the ""user"" Docker image (for the task itself). For example, we don't have to assume a particular distribution or presence of Python and its libraries. So it should work exactly the same for any task. Per @geoffj",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4510:746,log,logs,746,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4510,1,['log'],['logs']
Testability,"Hi all,; I test cromwell with local backend and in my workflow I define:; runtime; {; cpu: 1; memory: ""128 MB""; docker: ""ubuntu:latest""; }; I have docker installed on local server, but I notice the log file shows:; [warn] Local [d023ba19]: Key/s [cpu, memory] is/are not supported by backend. Unsupported attributes will not be part of job executions.; I wonder why local backend does not support cpu and memory limit for the docker? Thanks!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4413:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4413,2,"['log', 'test']","['log', 'test']"
Testability,"Hi all. I've been playing the CWL ResourceRequirement with cromwell under SLURM env.; https://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement. So, if I submit a CWL with; ```; - class: ResourceRequirement; coresMin: 1; coresMax: 1; ramMin: 2000; ramMax: 2000; ```; The cromwell will send the command to SLURM with a ridiculously high value of memory; ```; executing: sbatch --nodes 1 --ntasks 1 \; --cpus-per-task=1 --mem-per-cpu=2097152000 \; ```; And most likely it will fail because we do not have such a beefy flavor node, since SLURM reads the memory in MB.; ```; sbatch: error: Batch job submission failed: Requested node configuration is not available; ```; More tests like using different units or numbers will lead to similar errors:; Submit; ```; - class: ResourceRequirement; coresMin: 1; coresMax: 1; ramMin: 2GB; ramMax: 2GB; ```; will give me; ```; executing: sbatch --nodes 1 --ntasks 1 \; --cpus-per-task=1 --mem-per-cpu=2000000000 \; ```; and; ```; - class: ResourceRequirement; coresMin: 1; coresMax: 1; ramMin: 2; ramMax: 2; ```; gives me; ```; executing: sbatch --nodes 1 --ntasks 1 \; --cpus-per-task=1 --mem-per-cpu=2097152 \; ```; more for; ``` - class: ResourceRequirement; coresMin: 1; coresMax: 1; ramMin: 2000MB; ramMax: 2000MB; ```; it will give; ```; executing: sbatch --nodes 1 --ntasks 1 \; --cpus-per-task=1 --mem-per-cpu=2000000000 \; ```. So, it seems cromwell will read the numbers in MB and transfer it in bytes to SLURM. However, SLURM probably needs memory in MB as well. (I assume it is a bug when mapping CWL resource key to WDL). Currently, I manage to use an expression in the config `memoryMin/1000000` to circumvent the issue.; I don't think it is a very major issue nor a complex one, so feel free to fix it whenever. The cromwell version is the latest release, cromwell-34, and please find my working config if necessary. [cromwell.slurm.conf.gz](https://github.com/broadinstitute/cromwell/files/2368103/cromwell.slurm.conf.gz)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4080:685,test,tests,685,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4080,1,['test'],['tests']
Testability,"Hi all;; I'm running into a database write error on some systems. Similar to #3584, this does not cause the pipeline to stop, but is quite noisy and presumably affecting the ability to re-run and query run status. A CWL pipeline that triggers this is `somatic` from this set of minimal CWL test sets (https://github.com/bcbio/test_bcbio_cwl) but it appears to be system specific, rather than data specific. The same pipeline works fine on most systems, but only reports this database write error on some. When running we get this message on the completion of tasks:; ```; [2018-05-09 10:16:59,44] [[38;5;1merror[0m] 1bd683a6:prep_samples_to_rec:-1:1: Failure writing to call cache: data exception: string data, right truncation; table: CALL_CACHING_HASH_ENTRY column: HASH_KEY; java.sql.BatchUpdateException: data exception: string data, right truncation; table: CALL_CACHING_HASH_ENTRY column: HASH_KEY; 	at org.hsqldb.jdbc.JDBCPreparedStatement.executeBatch(Unknown Source); 	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128); 	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java); 	at slick.jdbc.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.$anonfun$run$14(JdbcActionComponent.scala:532); 	at slick.jdbc.JdbcBackend$SessionDef.withPreparedStatement(JdbcBackend.scala:386); 	at slick.jdbc.JdbcBackend$SessionDef.withPreparedStatement$(JdbcBackend.scala:381); 	at slick.jdbc.JdbcBackend$BaseSession.withPreparedStatement(JdbcBackend.scala:448); 	at slick.jdbc.JdbcActionComponent$InsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:501); 	at slick.jdbc.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:526); 	at slick.jdbc.JdbcActionComponent$SimpleJdbcProfileAction.run(JdbcActionComponent.scala:30); 	at slick.jdbc.JdbcActionComponent$SimpleJdbcProfileAction.run(JdbcActionComponent.scala:27); 	at slick.dbio.DBIOAction$$anon$1.$anonfun$run$",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3607:290,test,test,290,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3607,1,['test'],['test']
Testability,"Hi all;; I'm testing out a CWL run (https://github.com/bcbio/bcbio_validation_workflows/tree/master/somatic-giab-mix) with a SLURM backend using file based caching:; ```; [2018-05-02 13:10:20,09] [info] Running with database db.url = jdbc:hsqldb:file:/projects/ngs/oncology/dev/bcbio_validation_workflows/somatic-giab-mix/cromwell_work/persist/metadata;shutdown=false;hsqldb.tx=mvcc; ```; and running into a hash exception at a consistent spot in the pipeline:; ```; [2018-05-02 15:16:51,49] [info] WorkflowExecutionActor-bc4644da-87f9-4765-9791-9011a2fae80f [[38;5;2mbc4644da[0m]: Starting batch_for_variantcall; [2018-05-02 15:16:52,47] [[38;5;220mwarn[0m] DispatchedConfigAsyncJobExecutionActor [[38;5;2mbc4644da[0mbatch_for_variantcall:NA:1]: Unrecognized runtime attribute keys: memoryMax, tmpDirMin, cpuMax, cpuMin, tmpDirMax, outDirMin, memoryMin, outDirMax; [2018-05-02 15:16:55,18] [info] DispatchedConfigAsyncJobExecutionActor [[38;5;2mbc4644da[0mbatch_for_variantcall:NA:1]: [38;5;5m'bcbio_nextgen.py' 'runfn' 'batch_for_variantcall' 'cwl' 'sentinel_runtime=cores,1,ram,3839.9999999999995' 'sentinel_parallel=multi-batch' 'sentinel_outputs=batch_rec:resources;description;reference__fasta__base;config__algorithm__variantcaller;reference__snpeff__GRCh37_75;config__algorithm__coverage_interval;genome_resources__variation__train_hapmap;genome_resources__variation__encode_blacklist;metadata__batch;genome_resources__variation__lcr;metadata__phenotype;vrn_file;reference__twobit;config__algorithm__validate;config__algorithm__validate_regions;genome_build;genome_resources__aliases__human;config__algorithm__tools_off;genome_resources__variation__dbsnp;genome_resources__variation__polyx;genome_resources__variation__cosmic;reference__genome_context;analysis;config__algorithm__tools_on;config__algorithm__effects;config__algorithm__variant_regions;genome_resources__aliases__ensembl;config__algorithm__exclude_regions;reference__rtg;genome_resources__variation__train_indels;genome",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3584:13,test,testing,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3584,1,['test'],['testing']
Testability,"Hi all;; I've been testing the new release 35 and was especially excited about the removal of the cwltool dependency for pre-processing CWL workflows. Unfortunately the new approach results in pre-processing runtimes that are 10x or more the previous approach. They were less than a minute and are now 10 minutes or more. For an example the `somatic-workflow` CWL directory here: https://github.com/bcbio/test_bcbio_cwl/tree/master/gcp takes 12 minutes with release 35:; ```; [2018-09-28 12:04:23,81] [info] Pre Processing Workflow...; [2018-09-28 12:04:24,00] [info] Pre-Processing /home/chapmanb/drive/work/cwl/test_bcbio_cwl/gcp/somatic-workflow/main-somatic.cwl; [2018-09-28 12:04:45,04] [info] Pre-Processing /home/chapmanb/drive/work/cwl/test_bcbio_cwl/gcp/somatic-workflow/steps/alignment_to_rec.cwl; ../somatic-workflow/steps/alignment_to_rec.cwl:26:3: checking item; ../somatic-workflow/steps/alignment_to_rec.cwl:26:3: Field `class` contains undefined reference to `https://www.dnanexus.com/cwl#InputResourceRequirement`; [2018-09-28 12:05:15,77] [info] Pre-Processing /home/chapmanb/drive/work/cwl/test_bcbio_cwl/gcp/somatic-workflow/wf-alignment.cwl; [2018-09-28 12:05:15,99] [info] Pre-Processing /home/chapmanb/drive/work/cwl/test_bcbio_cwl/gcp/somatic-workflow/steps/prep_align_inputs.cwl; ../somatic-workflow/steps/prep_align_inputs.cwl:26:3: checking item; ../somatic-workflow/steps/prep_align_inputs.cwl:26:3: Field `class` contains undefined reference to `https://www.dnanexus.com/cwl#InputResourceRequirement`; [2018-09-28 12:05:42,85] [info] Pre-Processing /home/chapmanb/drive/work/cwl/test_bcbio_cwl/gcp/somatic-workflow/steps/process_alignment.cwl; ../somatic-workflow/steps/process_alignment.cwl:27:3: checking item; ../somatic-workflow/steps/process_alignment.cwl:27:3: Field `class` contains undefined reference to `https://www.dnanexus.com/cwl#InputResourceRequirement`; [2018-09-28 12:06:10,83] [info] Pre-Processing /home/chapmanb/drive/work/cwl/test_bcbio_cwl/gcp/somati",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4183:19,test,testing,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4183,1,['test'],['testing']
Testability,"Hi all;; In testing release 35 with CWL inputs I've also been looking at supporting remote URL references. This is working correctly for GS URLs but not for http URLs. I've put together a test case that demonstrates the problem:. https://github.com/bcbio/test_bcbio_cwl/tree/master/gcp. The `somatic-workflow-http` CWL workflow uses http URLs and doesn't work, while the comparable `somatic-workflow` CWL workflow uses GS URLs referencing the same data and does work. The workflow fails with:; ```; java.io.FileNotFoundException: Cannot hash file https://storage.googleapis.com/bcbiodata/test_bcbio_cwl/testdata/genom; es/hg19/seq/hg19.fa; ```; when running tasks. The files get downloaded to the input directories but get numerical values instead of the original file names so never seem to sync over and get translated correctly to the workflow; ```; ls -lh cromwell_work/cromwell-executions/main-somatic.cwl/eaa632df-52a8-4aae-826f-647a42fa7145/call-prep_samples_to_rec/inputs/1515144/; total 136K; -rw------- 2 chapmanb chapmanb 292 Sep 26 14:07 225050424226294657; -rw------- 2 chapmanb chapmanb 43 Sep 26 14:07 2612405277530248055; -rw------- 2 chapmanb chapmanb 43 Sep 26 14:07 503001634356675169; -rw------- 2 chapmanb chapmanb 292 Sep 26 14:07 5802330287039666628; -rw------- 2 chapmanb chapmanb 43 Sep 26 14:07 5809676514510180826; -rw------- 2 chapmanb chapmanb 43 Sep 26 14:07 6090832304768530540; -rw------- 2 chapmanb chapmanb 43 Sep 26 14:07 6105514522473810611; -rw------- 3 chapmanb chapmanb 37K Sep 26 14:07 6807576659333162957; -rw------- 3 chapmanb chapmanb 150 Sep 26 14:07 6853384576121493061; -rw------- 2 chapmanb chapmanb 292 Sep 26 14:07 7483350933664987331; -rw------- 2 chapmanb chapmanb 292 Sep 26 14:07 7538690575330349970; -rw------- 3 chapmanb chapmanb 37K Sep 26 14:07 7691692211431528147; -rw------- 2 chapmanb chapmanb 292 Sep 26 14:07 7783203266940950463; -rw------- 3 chapmanb chapmanb 150 Sep 26 14:07 8389565043859020157; -rw------- 2 chapmanb chapmanb 43 Sep 26",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4184:12,test,testing,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4184,3,['test'],"['test', 'testdata', 'testing']"
Testability,"Hi everyone, this is as far as I can get on my own trying to introduce SQLite support into Cromwell. I have highlighted reasons to support Sqlite on Cromwell elsewhere. This is as far as I could get without help:. + Migration scheme correctly implemented. All the necessary tables with all the correct constraints (foreign key, unique, primary key) are created on startup.; + Updated upstream liquibase in order to allow unique constraints to be defined properly.; + Made sure all the types were converted in SQLite types (TEXT, INTEGER, BLOB etc.); + Updated the testing to understand SQLite types properly. So far so good. Unfortunately the testing does not recognize the foreign key, primary key or unique constraints, even though they are defined (clearly visible in the sqlitebrowser). . Since the testing is just testing, I also decided to run cromwell with a workflow, but that does not work: ; ```; [ERROR] [07/20/2020 14:01:02.134] [cromwell-system-akka.dispatchers.engine-dispatcher-50] [akka://cromwell-system/user/cromwell-service/WorkflowStoreActor/WorkflowStoreEngineActor] Error trying to fetch new workflows; org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (near ""for"": syntax error); at org.sqlite.core.DB.newSQLException(DB.java:1010); at org.sqlite.core.DB.newSQLException(DB.java:1022); at org.sqlite.core.DB.throwex(DB.java:987); at org.sqlite.core.NativeDB.prepare_utf8(Native Method); at org.sqlite.core.NativeDB.prepare(NativeDB.java:134); at org.sqlite.core.DB.prepare(DB.java:264); at org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:45); at org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:30); at org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:19); at org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:35); at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:241); at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Conne",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5582:564,test,testing,564,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5582,4,['test'],['testing']
Testability,"Hi!. I have been trying to make memory retry work on our system without sucess. ; Read all docs and previous issues I could find, but it still doesn't work for us. I have written a test wdl with two tasks, both write ""Killed"" to stderr, and supposed to get retried with more memory. The first task, **TestBadCommandRetry** is designed to fail regularly with rc 127, due to a bad command.; The purpose of this task is to prove the memory-retry mechanism is configured correctly in our system. Result of TestBadCommandRetry:; The memory-error-key is caught and memory is increased as defined in memory-retry-multiplier.; I also see this failure message in metadata.json:; _""message"": ""stderr for job `MemoryRetryTest.TestBadCommandRetry:NA:1` contained one of the `memory-retry-error-keys: [Killed]` specified in the Cromwell config. Job might have run out of memory.""_. Grepping metadata for memory of this job, I see the expected behaviour:; ""memory"": ""1 GB"",; ""memory"": ""2 GB"",. The second task, **TestOutOfMemoryRetry** is designed to fail do to real out of memory error.; The purpose of this task is to shoe that memory-retry mechanism is not working when a task runs out of memory, even if ""Killed"" is written to stderr. Result of TestOutOfMemoryRetry:; When this task is run, it fails but **the job is retried with the same amount of memory**.; This time I see the following failure message:; _""message"": ""Task MemoryRetryTest.TestOutOfMemoryRetry:NA:1 failed. The job was stopped before the command finished. PAPI error code 9. Execution failed: generic::failed_precondition: while running \""/cromwell_root/script\"": unexpected exit status 137 was not ignored\n[UserAction] Unexpected exit status 137 while running \""/cromwell_root/script\"": Killed\n"",_. Grepping metadata for memory of this job, I see the memory expension is not working:; ""memory"": ""1 GB"",; ""memory"": ""1 GB"",; ; I have verified ""Killed"" is written correctly to stderr :; ```; gsutil cat gs://<out_bucket>/cromwell-execution/Me",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7205:181,test,test,181,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7205,4,"['Test', 'test']","['TestBadCommandRetry', 'test']"
Testability,"Hi, . I have been getting PoolTime out error (below) for all human jobs. Smaller ones e.g mouse genomes are a success. There are multiple steps in the wdl with outputs at every stage. Each output is copied from the S3//temp//cromwell_executions folder to S3://output folder successfully except the largest one i.e. .bam file. The .bam file is successfully copied from EC2 instance temp folder to S3://temp folder but it does copy from S3://temp/cromwell_executions to S3://output.; ; Both core environment and workflows have been set up using the templates provided by AWS genomics workflow. AWS batch jobs show a success notification, however it is only Cromwell that sends a status of ""failure"".. . Cromwell metadata : ; ```; ""failures"": [; {; ""causedBy"": [; {; ""causedBy"": [; {; ""causedBy"": [; {; ""message"": ""Timeout waiting for connection from pool"",; ""causedBy"": []; }; ],; ""message"": ""Unable to execute HTTP request: Timeout waiting for connection from pool""; }; ],; ""message"": ""software.amazon.awssdk.core.exception.SdkClientException: Unable to execute HTTP request: Timeout waiting for connection from pool""; }; ],; ""message"": ""[Attempted 1 time(s)] - CompletionException: software.amazon.awssdk.core.exception.SdkClientException: Unable to execute HTTP request: Timeout waiting for connection from pool""; }; ],; ```. Options.json; ```; ""final_workflow_outputs_dir"": ""s3://singleronbio-de-tmp/output/2023/Aug/2023-00578"",; ""final_call_logs_dir"": ""s3://singleronbio-de-tmp/log/2023/Aug/2023-00578/230719005"",; ""final_workflow_log_dir"": ""s3://singleronbio-de-tmp/workflow_log/2023/Aug/2023-00578/230719005"",; ""backend"": ""AWSBATCH"",; ""base_url"": ""XXXX"",; ""route_submit"": ""/api/workflows/v1"",; ""route_valid"": ""/api/womtool/v1/describe"",; ""route_status"": ""/api/workflows/v1/{id}/status"",; ""route_outputs"": ""/api/workflows/v1/{id}/outputs"",; ""write_to_cache"": true,; ""read_from_cache"": true; }; ```. Thank you, ; Lakshmi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7200:1481,log,log,1481,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7200,1,['log'],['log']
Testability,"Hi, . I'm reporting a behavior that is strange to me:; If a task declares it is going to output some files in the `output` block, but the `command` block doesn't actually do that (i.e. produce those files), Cromwell will mark that as SUCCESS, and delocalize what ever is produced by the command. -----------; Expected behavior:. The job should fail. -----------; Actually happen:. The job is marked `Success`. -----------. the backend is the methods cromwell server v 34, the actual workflow-ID is ; `17faf5b5-be67-4756-b168-130450081cfb`; The bucket is here:; `gs://broad-dsde-methods/cromwell-execution-34/TestOutputMultipleFiles/17faf5b5-be67-4756-b168-130450081cfb/call-PrintsToFileTest`. JSON input. ```json; {; ""TestOutputMultipleFiles.dummy_array"": [""chr1"", ""chr2""]; }. ```; And the WDL script; ```wdl; workflow TestOutputMultipleFiles {. Array[String] dummy_array. scatter (ele in dummy_array) {; call PrintsToFile as PrintsToFileTest {; input:; out_prefix = ele,; to_print = ele; }; }. output {; Array[Array[File]] matrix = [PrintsToFileTest.out_txt, ; PrintsToFileTest.out_md]; }; }. task PrintsToFile {. String out_prefix; String to_print. command {; touch ${out_prefix}.txt; echo ""${to_print}"" > ${out_prefix}.txt; # delibrately forgetting to generate a file, so cromwell should capture that and report failure; # touch ${out_prefix}.md; # echo ""${to_print}"" > ${out_prefix}.md; }. runtime {; docker: ""ubuntu:trusty""; disks: ""local-disk "" + ""10"" + "" HDD""; cpu: ""1""; preemptible: 1; }. output {; File out_txt = ""${out_prefix}.txt""; File out_md = ""${out_prefix}.md""; }; }. ```. -------------. If the workflow has multiple tasks, and downstream tasks depends on (i.e. File input) upstream task that should have produced the file as output, previously the workflow would fail, now the workflow just hangs there. Example (ID: 55f8ac4e-a6e1-4b1f-9086-f6d04fec5bb8, location: `gs://broad-dsde-methods/cromwell-execution-34/TestMultiStage/55f8ac4e-a6e1-4b1f-9086-f6d04fec5bb8`). some json input co",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4147:608,Test,TestOutputMultipleFiles,608,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4147,3,['Test'],['TestOutputMultipleFiles']
Testability,"Hi, ; I run 2 cromwell jobs, and then I find each job have lots of file handle, I use command ""lsof | grep uername | awk '{print $1""\t""$2}' | sort | uniq -c | sort -nr"" to see it, if I run 50 jobs, I will not be able to log into that Linux through shell, how to reduce the number of file handle in each job? thanks. ```; 6533 cromwell- 4751; 5687 cromwell- 2381; 940 pool-6-th 4751; 940 pool-6-th 2381; 940 pool-5-th 2381; 705 pool-5-th 4751; 611 GC 4751; 611 GC 2381; 470 pool-9-th 4751; 470 pool-9-th 2381; 470 pool-8-th 4751; 470 pool-8-th 2381; 470 pool-7-th 4751; 470 pool-7-th 2381; 470 pool-10-t 4751; 470 pool-10-t 2381; 282 G1 4751; 282 G1 2381; 188 blaze-tic 4751; 188 blaze-tic 2381; 94 VM 4751; 94 VM 2381; 94 java 4751; 94 java 2381; 94 db-9 4751; 94 db-9 2381; 94 db-8 4751; 94 db-8 2381; 94 db-7 4751; 94 db-7 2381; 94 db-6 4751; 94 db-6 2381; 94 db-5 4751; 94 db-5 2381; 94 db 4751; 94 db-4 4751; 94 db-4 2381; 94 db-3 4751; 94 db-3 2381; 94 db-2 4751; 94 db 2381; 94 db-2 2381; 94 db-20 4751; 94 db-20 2381; 94 db-19 4751; 94 db-19 2381; 94 db-18 4751; 94 db-18 2381; 94 db-17 4751; 94 db-17 2381; 94 db-16 4751; 94 db-16 2381; 94 db-15 4751; 94 db-15 2381; 94 db-1 4751 ...; ```. this is my java command; ```{shell}; java -Xms10M -Xmx125M -Dconfig.file=SGE.conf -jar cromwell-86.jar run xxx.wdl --inputs xxx.json; ```. SGE.conf file:; ```; # Documentation:; # https://cromwell.readthedocs.io/en/stable/backends/SGE. backend {; default = SGE. providers {; SGE {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {. # Limits the number of concurrent jobs; concurrent-job-limit = 5. # If an 'exit-code-timeout-seconds' value is specified:; # - check-alive will be run at this interval for every job; # - if a job is found to be not alive, and no RC file appears after this interval; # - Then it will be marked as Failed.; # Warning: If set, Cromwell will run 'check-alive' for every job at this interval. exit-code-timeout-seconds = 120. run",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7571:220,log,log,220,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7571,1,['log'],['log']
Testability,"Hi, ; can we define Directory in workflow input section? I met error ""Cannot coerce expression of type 'String' to 'Directory'"".; my wdl file, cromwell 59 is used: ; ```; version development. workflow pipeline {; input {; Directory index_dir = ""/home/danny.gu/PycharmProjects/nestcmd/tests/testdata/index/""; }. call getFastqInfo{}. scatter (each in keys(getFastqInfo.fastq_info)) { ; String sample = each; File read1 = getFastqInfo.fastq_info[each][0][0]; File read2 = getFastqInfo.fastq_info[each][1][0]. call fastp {; input: ; read1 = read1,; read2 = read2; }. call salmon {; input: ; indexDir = index_dir,; read1 = fastp.out1,; read2 = fastp.out2; }. }. call MergeTranscriptTPM {; input: ; quants = salmon.outDir; }. call MergeTranscriptCount {; input: ; quants = salmon.outDir; }. meta {; name: ""PipelineExample""; desc: ""This is a simple pipeline for fast gene/transcript quantification. workflow = [fastq -> Fastp -> Salmon]""; author: ""unknown""; source: ""source URL for the tool""; version: ""unknown""; }. output{; Array[File] fastp_out1 = fastp.out1; Array[File] fastp_out2 = fastp.out2; Array[File] salmon_transcript = salmon.transcript; Array[Directory] salmon_outDir = salmon.outDir; File MergeTranscriptTPM_result = MergeTranscriptTPM.result; File MergeTranscriptCount_result = MergeTranscriptCount.result; }. }. task getFastqInfo{; input {; Array[Directory]? fastq_dirs; Array[File]? fastq_files; String r1_name = '(.*).read1.fastq.gz'; String r2_name = '(.*).read2.fastq.gz'; String docker = 'gudeqing/getfastqinfo:1.0'; }. command <<<; set -e; python /get_fastq_info.py \; ~{if defined(fastq_dirs) then ""-fastq_dirs "" else """"}~{sep="" "" fastq_dirs} \; ~{if defined(fastq_files) then ""-fastq_files "" else """"}~{sep="" "" fastq_files} \; -r1_name '~{r1_name}' \; -r2_name '~{r2_name}' \; -out fastq.info.json; >>>. output {; Map[String, Array[Array[File]]] fastq_info = read_json(""fastq.info.json""); File fastq_info_json = ""fastq.info.json""; }. runtime {; docker: docker; }. ; }; ; task fastp{; i",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6501:284,test,tests,284,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6501,2,['test'],"['testdata', 'tests']"
Testability,"Hi, I am using cromwell-59.jar, and run in local backend mode. ; Used command:; `java -Dconfig.file=cromwell.examples.conf -jar ~/softwares/cromwell-59.jar run example.wdl -i input_detail.json`. however, when I try to re-run a successed workflow to validate the cache calling function, I got the following information that confused me. very much. Would you be kind to give me some ideas on what's going on? . `a588e03e-a4fc-4809-b5f5-bb540cac9ca3-EngineJobExecutionActor-rnaseq_pipeline.fastp:NA:1 [UUID(a588e03e)]: Could not copy a suitable cache hit for a588e03e:rnaseq_pipeline.fastp:-1:1. No copy attempts were made.`. following is the source code related I fetched, but still cannot understand it. `if (data.cacheHitFailureCount > 0) {; val totalHits = data.cacheHitFailureCount; val copyFails = data.failedCopyAttempts; val blacklisted = totalHits - copyFails; workflowLogger.info(; s""Could not copy a suitable cache hit for $jobTag. "" +; s""EJEA attempted to copy $totalHits cache hits before failing. "" +; s""Of these $copyFails failed to copy and $blacklisted were already blacklisted from previous attempts). "" +; s""Falling back to running job.""; ); val template = s""BT-322 {} cache hit copying failure: {} failed copy attempts of maximum {} with {}.""; log.info(template, jobTag, data.failedCopyAttempts, callCachingParameters.maxFailedCopyAttempts, data.aggregatedHashString); } ; else {; log.info(s""BT-322 {} cache hit copying nomatch: could not find a suitable cache hit."", jobTag); workflowLogger.info(""Could not copy a suitable cache hit for {}. No copy attempts were made."", jobTag); }`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6484:1261,log,log,1261,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6484,2,['log'],['log']
Testability,"Hi, I was trying to have a VCF related workflow, which involves gatk4, picard tools. As an example, lets say I want to call gatk4 first to get some VCF files, and use picard to sort them. if i have `gatk4.cwl` output as; ```; outputs:; vcf_list:; type: File[]; outputBinding:; glob: '*.vcf.gz'; secondaryFiles: [.tbi]; ```; and next `picard sort` has input array (w/ or w/o `secondaryFiles` here doesn’t matter from my tests. Neither works and will have the same error); ```; inputs:; vcf:; type:; type: array; items: File; inputBinding:; prefix: I=; separate: false; ```; After gatk4 finishes, the `execution` dir will look like; ``` ; drwx------ 3 root root 4.0K Jan 14 19:16 genomicsdb-0; -rw-r--r-- 3 root root 5.7K Jan 14 20:17 genomicsdb-0.vcf.gz; -rw-r--r-- 2 root root 105 Jan 14 20:17 genomicsdb-0.vcf.gz.tbi; drwx------ 3 root root 4.0K Jan 14 19:17 genomicsdb-1; -rw-r--r-- 3 root root 927K Jan 14 20:32 genomicsdb-1.vcf.gz; -rw-r--r-- 2 root root 7.6K Jan 14 20:32 genomicsdb-1.vcf.gz.tbi; drwx------ 3 root root 4.0K Jan 14 19:29 genomicsdb-2; -rw-r--r-- 3 root root 554K Jan 14 20:31 genomicsdb-2.vcf.gz; -rw-r--r-- 2 root root 11K Jan 14 20:31 genomicsdb-2.vcf.gz.tbi; drwx------ 3 root root 4.0K Jan 14 19:41 genomicsdb-3; -rw-r--r-- 3 root root 813K Jan 14 20:30 genomicsdb-3.vcf.gz; -rw-r--r-- 2 root root 11K Jan 14 20:30 genomicsdb-3.vcf.gz.tbi; drwx------ 3 root root 4.0K Jan 14 19:52 genomicsdb-4; -rw-r--r-- 3 root root 620K Jan 14 20:32 genomicsdb-4.vcf.gz; -rw-r--r-- 2 root root 12K Jan 14 20:32 genomicsdb-4.vcf.gz.tbi; drwx------ 3 root root 4.0K Jan 14 20:04 genomicsdb-5; -rw-r--r-- 3 root root 50K Jan 14 20:17 genomicsdb-5.vcf.gz; -rw-r--r-- 2 root root 746 Jan 14 20:17 genomicsdb-5.vcf.gz.tbi; drwx------ 3 root root 4.0K Jan 14 20:05 genomicsdb-6; -rw-r--r-- 3 root root 673K Jan 14 20:31 genomicsdb-6.vcf.gz; -rw-r--r-- 2 root root 13K Jan 14 20:31 genomicsdb-6.vcf.gz.tbi; drwxr-xr-x 2 root root 4.0K Jan 14 20:32 glob-330eecb06b4c0ad6b45febf0c8001b04; -rw-r--r--",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4546:419,test,tests,419,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4546,1,['test'],['tests']
Testability,"Hi, the notes in this repo tell me to log issues in JIRA, but they are not picked up or replied to. ; Here are the issues:; - https://broadworkbench.atlassian.net/projects/BA/issues/BA-5915; - https://broadworkbench.atlassian.net/projects/BA/issues/BA-6171; - https://broadworkbench.atlassian.net/projects/BA/issues/BA-6214. I would appreciate a reply to these issues, especially the latest one which is a blocker.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5399:38,log,log,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5399,1,['log'],['log']
Testability,"Hi,. As has been already hinted 2 years ago by someone else over [here](https://gatk.broadinstitute.org/hc/en-us/community/posts/360076863171-Cromwell-stuck-at-WaitingForReturnCode-on-Mac), on MacOS, Cromwell versions above 55 get stuck at the first process/docker step reporting only `WaitingForReturnCode` for hours. Java and other related jobs go to sleep. Container log shown at the visual Docker dashboard also shows that the process is stuck, without any signs of freezing (you can still roam in the container). For example, I was running `ConvertPairedFastQsToUnmappedBamWf`workflow so the docker container log waits at this stage for hours:. `2023-02-03 12:38:19 Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell-executions/ExomeGermlineSingleSample/771a003a-2fc3-462f-b004-290d76983022/call-ConvertPairedFastQsToUnmappedBamWf/ConvertPairedFastQsToUnmappedBamWf/f118d344-534f-4333-8f3c-7c69317ba0a2/call-PairedFastQsToUnmappedBAM/tmp.e318a61b; 2023-02-03 12:38:34 09:38:34.028 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.3.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 2023-02-03 12:38:34 [Fri Feb 03 09:38:34 GMT 2023] FastqToSam --FASTQ /cromwell-executions/ExomeGermlineSingleSample/771a003a-2fc3-462f-b004-290d76983022/call-ConvertPairedFastQsToUnmappedBamWf/ConvertPairedFastQsToUnmappedBamWf/f118d344-534f-4333-8f3c-7c69317ba0a2/call-PairedFastQsToUnmappedBAM/inputs/-2135135022/S000021_S7367Nr1.1.fastq.gz --FASTQ2 /cromwell-executions/ExomeGermlineSingleSample/771a003a-2fc3-462f-b004-290d76983022/call-ConvertPairedFastQsToUnmappedBamWf/ConvertPairedFastQsToUnmappedBamWf/f118d344-534f-4333-8f3c-7c69317ba0a2/call-PairedFastQsToUnmappedBAM/inputs/-2135135022/S000021_S7367Nr1.2.fastq.gz --OUTPUT S7367Nr1.unmapped.bam --READ_GROUP_NAME S7367Nr1 --SAMPLE_NAME S4431Nr1 --LIBRARY_NAME TwistCore+RefSeq+Mito-Panel --PLATFORM_UNIT platform_unit --PLATFORM Illumina --SEQUENCING_CENTER CeGaT --RUN_DATE 2021-10-10T06:00:00+000",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6998:370,log,log,370,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6998,2,['log'],['log']
Testability,"Hi,. I got a timeout exception during cache copying on AWS S3. The cache file size is 133GB. Given the file size, more time should be allowed for cache copying. Is there any config option that can tune this? Thank you in advance for any suggestions. Backend: AWS Batch; Cromwell version: 51; Error log:. Failure copying cache results for job BackendJobDescriptorKey_CommandCallNode_PreProcessingForVariantDiscovery_GATK4.SamTo; FastqAndBwaMem:0:1 (TimeoutException: The Cache hit copying actor timed out waiting for a response to copy s3://xxxxx/cromwell-execution/Germ; line_Somatic_Calling/441619a4-7ca8-490b-bd04-2f9981d3db0f/call-Tumor_Bam/PreProcessingForVariantDiscovery_GATK4/95aed08f-3045-45e4-94c9-ba0230851136; /call-SamToFastqAndBwaMem/shard-0/39T_R.unmerged.bam to s3://xxxxx/cromwell-execution/Germline_Somatic_Calling/c25a8561-808f-4b46-9bd2-ef0488; 8c0031/call-Tumor_Bam/PreProcessingForVariantDiscovery_GATK4/8df24f46-2f4f-4557-a662-d630ac443736/call-SamToFastqAndBwaMem/shard-0/cacheCopy/39T_R.u; nmerged.bam)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5977:298,log,log,298,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5977,1,['log'],['log']
Testability,"Hi,. I'm finding that Cromwell is using too many resources in a shared environment. It's spawning other threads and using up to 400% CPU, which I can't see why when the logs just show it's watching for jobs (maybe it's trying to hash files for call-caching?). I'd love a way to limit it, even at the expense of speed of the program, it would also be great if there was tooling (maybe an endpoint) to gauge the resource usage, and see what Cromwell's actually doing. For context, I'm running Cromwell on a (shared) login node, submitting jobs to Slurm (custom SFS config). The workflow is scattering a subworkflow 25 times, each with 4 steps. All of those have actually executed prior and it's taking a long time (sometimes > 30 minutes) to look up a call result. I am using call-caching with a mysql database.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4945:169,log,logs,169,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4945,2,['log'],"['login', 'logs']"
Testability,"Hi,. I'm trying to run through the Hello World example. I'm running Cromwell on OS X with Java 8. Any ideas on how to troubleshoot the below error?. Thanks!. ```; › cromwell run hello.wdl hello.json; [2015-12-18 08:43:13,222] [info] Slf4jLogger started; [2015-12-18 08:43:13,335] [info] Default backend: LOCAL; [2015-12-18 08:43:13,335] [info] RUN sub-command; [2015-12-18 08:43:13,336] [info] WDL file: hello.wdl; [2015-12-18 08:43:13,439] [info] Inputs: hello.json; [2015-12-18 08:43:13,560] [info] input: test.hello.name => ""world""; [2015-12-18 08:43:13,776] [info] SingleWorkflowRunnerActor: launching workflow; [2015-12-18 08:43:15,936] [info] Running with database db.url = jdbc:hsqldb:mem:86473284-494c-43d2-94fd-d00107a2a787;shutdown=false;hsqldb.tx=mvcc; [2015-12-18 08:43:17,516] [info] WorkflowManagerActor submitWorkflow input id = None, effective id = e67af113-c3a7-41f4-9178-6640c1c652e9; [2015-12-18 08:43:17,592] [info] WorkflowManagerActor Found no workflows to restart.; [2015-12-18 08:43:18,816] [error] SingleWorkflowRunnerActor: Ask timed out on [Actor[akka://cromwell-system/user/WorkflowManagerActor#-1616857312]] after [5000 ms]; akka.pattern.AskTimeoutException: Ask timed out on [Actor[akka://cromwell-system/user/WorkflowManagerActor#-1616857312]] after [5000 ms]; at akka.pattern.PromiseActorRef$$anonfun$1.apply$mcV$sp(AskSupport.scala:334); at akka.actor.Scheduler$$anon$7.run(Scheduler.scala:117); at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:599); at scala.concurrent.BatchingExecutor$class.execute(BatchingExecutor.scala:109); at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:597); at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(Scheduler.scala:467); at akka.actor.LightArrayRevolverScheduler$$anon$8.executeBucket$1(Scheduler.scala:419); at akka.actor.LightArrayRevolverScheduler$$anon$8.nextTick(Scheduler.scala:423); at akka.actor.LightArrayRevolverScheduler$$anon$8.run(Scheduler.sca",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/334:508,test,test,508,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/334,1,['test'],['test']
Testability,"Hi,. I've noticed that the glob() function from WDL doesn't work on the AWS. Here is a sample workflow:. ```; workflow glob_test; {; call GlobTest; {; input:; m1 = ""msg1"",; m2 = ""msg2""; }; }. task GlobTest; {; String m1; String m2; command; <<<; echo ${m1} > foo.1.txt; echo ${m2} > bar.1.txt; echo ${m2} > foo.2.txt; >>>; runtime; {; cpu: 1; memory: ""128 MB""; docker: ""ubuntu:latest""; }; output; {; Array[File] o1 = glob(""*.1.txt""); Array[File] o2 = glob(""*.2.txt""); }; }; ```. The workflow finishes successfully, but in the AWS logs I see the following line:; ```; aws s3 cp --no-progress /cromwell_root/glob-6f3569c1e6d4f3f2cfb3469eb61bd5a0/* s3://path/to/s3/; The user-provided path /cromwell_root/glob-6f3569c1e6d4f3f2cfb3469eb61bd5a0/* does not exist. ; ```. I've checked and there is no trace of directory with the name ""glob-*"" anywhere starting from root dir. Command used to run this workflow on aws:; `java -Dconfig.file=aws.conf -jar cromwell-36.jar run test.wdl`. Thank you,; Timur",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4353:530,log,logs,530,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4353,2,"['log', 'test']","['logs', 'test']"
Testability,"Hi,. Sorry for submitting an issue here but I'm consistently getting a ""Something has gone wrong"" error trying to log in to your Jira. I'm hoping someone can offer some guidance for an issue I'm having running a CWL workflow with Cromwell on GCP. I'm using bcbio to generate CWL to do joint calling. This worked fine when I tested it with a single sample to shake out any issues with the pipeline. However when scaling up to a 20 sample batch there's an issue with the get_parallel_regions_jointvc step. This step appears to be localizing multiple copies of the reference genome data (one for each sample) to the same disk. This really blows up the storage requirements as the number of samples increase and ends up exhausting the storage allocated to the worker instance. Is this expected behaviour or is there some kind of configuration I'm missing that would avoid this?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5131:114,log,log,114,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5131,2,"['log', 'test']","['log', 'tested']"
Testability,"Hi,. The task doesn't fail when the output file can't be found, hence, cromwell tries to run the next job. Here is a small sample workflow:. ```; workflow should_fail; {; call Task1; {; input:; out_base = ""foo""; }; }. task Task1; {; String out_base. command; <<<; #typo simulation, one extra 't'; echo ""Hello World!"" > ${out_base}.ttxt; >>>. runtime; {; cpu: 1; memory: ""128 MB""; docker: ""ubuntu:latest""; }. output; {; File out = ""${out_base}.txt""; }; }; ```. command used to run the workflow on the aws: ; `java -Dconfig.file=aws.conf -jar cromwell-36.jar run test.wdl`. Thank you,; Timur",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4354:561,test,test,561,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4354,1,['test'],['test']
Testability,"Hi,; I am trying to run a workflow on AWS Batch using the genomics-ami.; The ami was built following the instructions in the relevant pages and i have confirmed that it contains a /cromwell-root mount point and has rw access to the bucket we use.; The AWS batch backpoint was tested with the hello.wdl workflow and it went through. When running the workflow on the local filesystem it completes without errors but when running it using the AWS Batch backend the first step fails with the following error:. ```; 2019-01-11 20:27:06,80] [error] WorkflowManagerActor Workflow 8fa7a9e4-f30d-4c19-b8cb-68be6442f317 failed (during ExecutingWorkflowState): cromwell.engine.io.IoAttempts$EnhancedCromwellIoException: [Attempted 1 time(s)] - IOException: Could not read from s3://bucket/cwl_temp_file_8fa7a9e4-f30d-4c19-b8cb-68be6442f317.cwl/8fa7a9e4-f30d-4c19-b8cb-68be6442f317/call-bbmap/bbmap-rc.txt: s3://s3.amazonaws.com/bucket/cwl_temp_file_8fa7a9e4-f30d-4c19-b8cb-68be6442f317.cwl/8fa7a9e4-f30d-4c19-b8cb-68be6442f317/call-bbmap/bbmap-rc.txt; Caused by: java.io.IOException: Could not read from s3://bucket/cwl_temp_file_8fa7a9e4-f30d-4c19-b8cb-68be6442f317.cwl/8fa7a9e4-f30d-4c19-b8cb-68be6442f317/call-bbmap/bbmap-rc.txt: s3://s3.amazonaws.com/bucket/cwl_temp_file_8fa7a9e4-f30d-4c19-b8cb-68be6442f317.cwl/8fa7a9e4-f30d-4c19-b8cb-68be6442f317/call-bbmap/bbmap-rc.txt; 	at cromwell.engine.io.nio.NioFlow$$anonfun$withReader$2.applyOrElse(NioFlow.scala:146); 	at cromwell.engine.io.nio.NioFlow$$anonfun$withReader$2.applyOrElse(NioFlow.scala:145); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); 	at scala.util.Failure.recoverWith(Try.scala:232); 	at cromwell.engine.io.nio.NioFlow.withReader(NioFlow.scala:145); 	at cromwell.engine.io.nio.NioFlow.limitFileContent(NioFlow.scala:154); 	at cromwell.engine.io.nio.NioFlow.$anonfun$readAsString$1(NioFlow.scala:98); 	at cats.effect.internals.IORunLoop$.cats$effect$internals$IORunLoop$$loop(IORunLoop.scala:85); 	at cats.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4542:276,test,tested,276,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4542,1,['test'],['tested']
Testability,"Hi,; I am using cromwell 51. I am currently in the process of moving my WDL scripts from draft-2 to 1.0. When I try to access metadata the `inputs` key is different between versions of WDL:; draft-2:; ```; ""inputs"": {; ""hello.another_input"": ""Test"",; ""hello.input_json"": ""xxx"",; ""hello.name"": ""John""; }; ```; 1.0; ```; ""inputs"": {; ""another_input"": ""Test"",; ""input_json"": ""xxx"",; ""name"": ""John""; }; ```. The workflow name is removed. I searched docs and source code but I could not find any info about this. Is there any info about it and if this is correct behaviour?. Edit.; I do not have simple example but when there is a subworkflow the inputs for subworkflow have correct workflow suffix which is inconsistent. Thanks",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5563:243,Test,Test,243,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5563,2,['Test'],['Test']
Testability,"Hi,; I'm seeing a number of compilation errors with head dev etc. I've attached the output from debug. Scala version; scala-2.12.0-1.noarch. Java version; java 10.0.1 2018-04-17; Java(TM) SE Runtime Environment 18.3 (build 10.0.1+10); Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.1+10, mixed mode). CentOS Linux release 7.5.1804 (Core). Error output attached. Any thoughts ? Could be something obvious as I'm new to scala.; Thanks. [comp.log](https://github.com/broadinstitute/cromwell/files/2109138/comp.log)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3791:444,log,log,444,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3791,2,['log'],['log']
Testability,"Hi,; following the example on how to use AWS Batch I am able to run the tests using the suggested edits to aws.conf. I then try to specify the output directories using the following `options.json` file. ```; {; ""final_workflow_outputs_dir"": ""s3://bucket/cromwell/outputs"",; ""final_call_logs_dir"": ""s3:/bucket/cromwell/call_logs"",; ""final_workflow_log_dir"": ""s3://bucket/cromwell/wf_logs""; }; ```. When running cromwell : `java -Dconfig.file=awsbatch/aws.conf -jar cromwell-36.jar run awsbatch/hello.wdl -i awsbatch/hello.inputs -o options.json`. it results with the error:. ```; [2019-01-12 00:31:03,94] [info] $a [866d19d0]: Copying workflow logs from /rcecloud/kmavrommatis/workspace/Workflows/cromwell/cromwell-workflow-logs/workflow.866d19d0-64da-45c3-9b69-830f0475ba12.log to s3://celgene-rnd-riku-researchanalytics/cromwell/wf_logs/workflow.866d19d0-64da-45c3-9b69-830f0475ba12.log; [2019-01-12 00:31:04,03] [error] Key cannot be empty; java.lang.IllegalArgumentException: Key cannot be empty; 	at software.amazon.awssdk.core.util.ValidationUtils.assertStringNotEmpty(ValidationUtils.java:111); 	at software.amazon.awssdk.core.runtime.transform.PathMarshallers$GreedyPathMarshaller.marshall(PathMarshallers.java:109); 	at software.amazon.awssdk.services.s3.transform.HeadObjectRequestMarshaller.marshall(HeadObjectRequestMarshaller.java:87); 	at software.amazon.awssdk.services.s3.transform.HeadObjectRequestMarshaller.marshall(HeadObjectRequestMarshaller.java:31); 	at software.amazon.awssdk.core.client.SyncClientHandlerImpl.execute(SyncClientHandlerImpl.java:88); 	at software.amazon.awssdk.core.client.SyncClientHandlerImpl.execute(SyncClientHandlerImpl.java:76); 	at software.amazon.awssdk.core.client.SdkClientHandler.execute(SdkClientHandler.java:45); 	at software.amazon.awssdk.services.s3.DefaultS3Client.headObject(DefaultS3Client.java:1628); 	at org.lerch.s3fs.util.S3Utils.getS3ObjectSummary(S3Utils.java:47); 	at org.lerch.s3fs.S3FileSystemProvider.exists(S3FileSystemProvider.java:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4541:72,test,tests,72,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4541,5,"['log', 'test']","['log', 'logs', 'tests']"
Testability,"Hi. I'm trying to enable call caching using a local file database and I can't seem to get it to work. Everything that I try does not seem to make a difference, and each run always starts from the first task. I'm running cromwell in run mode from the command line, and I am testing on both cromwell 43 and cromwell 47. I also have write-to-cache and read-from-cache set to true in my options.json (although I understand that is the default behaviour). I am unable to use a mySQL or postgres database at this current time. Is there something that I'm missing? Is there any additional information that is needed to help diagnose this?. My cromwell.conf is as follows:. backend {; default = LSF; providers {; LSF {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; exit-code-timeout-seconds = 600. runtime-attributes = """"""; Int cpus; Float memory_mb; String lsf_queue; String lsf_project; """""". submit = """"""; bsub \; -q ${lsf_queue} \; -P ${lsf_project} \; -J ${job_name} \; -cwd ${cwd} \; -o ${out} \; -e ${err} \; -n ${cpus} \; -R rusage[mem=${memory_mb}] \; /usr/bin/env bash ${script}; """""". job-id-regex = ""Job <(\\d+)>.*"". kill = ""bkill ${job_id}""; check-alive = ""bjobs ${job_id}"". filesystems {; local {; localization: [; ""soft-link"", ""copy"", ""hard-link""; ]; caching {; duplication-strategy: [; ""soft-link"", ""copy"", ""hard-link""; ]; hashing-strategy: ""path""; }; }; }; }; }; }; }; call-caching {; enabled = true; invalidate-bad-cache-results = true; }; database {; profile = ""slick.jdbc.HsqldbProfile$""; db {; driver = ""org.hsqldb.jdbcDriver""; url = """"""; jdbc:hsqldb:file:cromwell-executions/cromwell-db/cromwell-db;; shutdown=false;; hsqldb.default_table_type=cached;hsqldb.tx=mvcc;; hsqldb.result_max_memory_rows=100000;; hsqldb.large_data=true;; hsqldb.applog=1;; hsqldb.lob_compressed=true;; hsqldb.script_format=3; """"""; connectionTimeout = 86400000; numThreads = 1; }; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5370:273,test,testing,273,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5370,1,['test'],['testing']
Testability,"Hint: these are barely changed from the draft-2 versions. ; You probably only *need* to review the `.scala` changes, although obviously another pair of eyes on the call cache capoeira tests never hurt. I made a mistake - no red thumb is required now but a red thumb is of course always welcome...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3653:184,test,tests,184,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3653,1,['test'],['tests']
Testability,Hog Factor Logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4557:11,Log,Logging,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4557,1,['Log'],['Logging']
Testability,Hopefully addresses issues with missed summarizations by filtering on the client. This appears to have the same 3 PAPI v2 failures that are on develop related to GPUs and slightly less memory than expected in a monitoring log assertion. 🤷‍♂,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5125:222,log,log,222,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5125,2,"['assert', 'log']","['assertion', 'log']"
Testability,Horicromtal carbonite testing [BA-6369],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5481:22,test,testing,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5481,1,['test'],['testing']
Testability,Horicromtal engine upgrade Centaur testing with docker-compose.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4812:35,test,testing,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4812,1,['test'],['testing']
Testability,Horizontal integration test should confirm horizontality has been tested,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4783:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4783,2,['test'],"['test', 'tested']"
Testability,"How should I create a JSON with all workflow output objects described? The final `workflow${uuid}.log` file has a json after ""Workflow NAME complete. Final Outputs:"" but this section truncates large json objects. For example:. `""Calling.svabaInternalInput"": ""[[\""gs://PROJECT_ID-workspace/Calling/3c50384f-6532-4a6d-8ba1-55008f9a02b5/call-Svaba/shard-0/Svaba/291464b8-2072-441f-bff2-f0c5fc169f33/call-SvabaWgs/TUMOR--NORMAL.svaba.unfiltered.somatic.indel.vcf.gz\"", \""gs://PROJECT_ID-workspace/Calling/3c50384f-6532-4a6d-8ba1-55008f9a02b5/call-Svaba/shard-0/Svaba/291464b8-2072-441f-bff2-f0c5fc169f33/call-SvabaWgs/TUMOR--NORMAL.svaba.unfiltered.germline.indel.vcf.gz\"", \""gs://PROJECT_ID-workspace/Calling/3c50384f-6532-4a6d-8ba1-55008f9a02b5/call-Svaba/shard-0/Svaba/291464b8-2072-441f-bff2-f0c5fc169f33/call-SvabaWgs/TUMOR--NORMAL.bps.txt.gz\"", \""gs://PROJECT_ID-workspace/Calling/3c50384f-6532-4a6d-8ba1-55008f9a02b5/call-Svaba/shard-0/Svaba/291464b8-2072-441f-bff2-f0c5fc169f33/call-SvabaWgs/TUMOR--NORMAL.log\"", \""gs://PROJECT_ID-workspace/Calling/3c50384f-6532-4a6d-8ba1-55008f9a02b5/call-Svaba/shard-0/Svaba/291464b8-2072-441f-bff2-f0c5fc169f33/call-SvabaWgs/TUMOR--NOR-..."",`. How do you recommend I get a complete json with all output files listed (even for large projects or long lists)? Could you add a option to turn off `stripLarge`?. It looks like truncating the output is hardcoded ; https://github.com/broadinstitute/cromwell/blob/935ecc9cefa45af36fb537c065fe5ca45c6afb63/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/WorkflowExecutionActor.scala#L351",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6209:98,log,log,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6209,2,['log'],['log']
Testability,"How to evaluate engine functions in a Pluggable Backends World?. **Acceptance Criteria**:. Use the following WDLs files to test isolated components of engine function implementation:. Read/Write file at a task level when running against the Local Backend:. ```; task t {; Array[String] a = [""a"", ""b"", ""c""]; File x = write_lines(a); String y = read_string(""/foo/bar/some-public-object.txt""); command {; cat ${x}; echo ${y}; }; }. workflow w { call t }; ```. read functions from the task output section when running against the Local Backend:. ```; task t {; command {; echo foo; echo bar; }; output {; Array[String] array = read_lines(stdout()); }; }. workflow w { call t }; ```. **Unanswered Questions**. What do we do when a user wants to call `write_lines` from the workflow level? If multiple filesystems are supported, then it's unclear where this gets written to. Perhaps all of them? If `x` is used by a JES job, then the file _must_ be written to at least GCS. ```; workflow w {; String x = write_lines([""a"", ""b"", ""c""]); }; ```. *\* Decision **; We should make this operation unsupported until we have a concrete use case for it, and likely this will be easier when we have filesystem separated out entirely from backend.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/654:123,test,test,123,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/654,1,['test'],['test']
Testability,How will The Great Horizontaling happen? Will we release Cromwell 4X and then sometime later change the configuration of that same version to be horizontal? Or will we release Cromwell 4X leaping into horizontal for the first time? Or different scenarios for different environments?. Whichever paths to horizontal are supported should have integration tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4800:352,test,tests,352,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4800,1,['test'],['tests']
Testability,"I am aiming to run several thousand samples using Cromwell server on AWS. In testing, when submitting more than a few jobs to batch, I see many errors like:. ```; Caused by: software.amazon.awssdk.services.batch.model.BatchException: Too Many Requests (Service: null; Status Code: 429; Request ID: b8d3f02a-deee-11e8-8f12-b5957ed5827f); ```. I think this has to do with AWS batch limits. The recommendation, it appears, is to set the concurrent-job-limit in cromwell config to some number like 16. (Setting to 100 results in the errors above). While that fixes the errors, it seems to limit the scale of what can be done on AWS. So, a few questions:. 1. Does the job submission mechanism (batch vs single) affect this behavior?; 2. Would the use of scatter-gather over large batches of otherwise independent samples help?; 3. Are there limit increases that can or should be requested from AWS to make batch more amenable to large numbers of workflows?; 4. Are the best practices for AWS different than for GCP with respect to workflow authoring and submission?. Thanks for any thoughts and sorry if I missed something obvious in the docs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4355:77,test,testing,77,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4355,1,['test'],['testing']
Testability,"I am encountering call caching issues with images from google artifact registry (gar). . When I use image directly from dockerhub or gcr I have no call caching issues and see this in the logs. > 2024-07-19 14:35:24 cromwell-system-akka.dispatchers.engine-dispatcher-26890 INFO - BT-322 61ba2acc:garTest.simpleLs:-1:1 cache hit copying nomatch: could not find a suitable cache hit.; 2024-07-19 14:35:24 cromwell-system-akka.dispatchers.engine-dispatcher-26890 INFO - 61ba2acc-4274-423b-818a-8cf1da67cd44-EngineJobExecutionActor-garTest.simpleLs:NA:1 [UUID(61ba2acc)]: Could not copy a suitable cache hit for 61ba2acc:garTest.simpleLs:-1:1. No copy attempts were made. However, when I copy the same image to my access controlled google artifact registry I get this authentication error. > 2024-07-19 14:31:44 cromwell-system-akka.dispatchers.engine-dispatcher-3006 WARN - BackendPreparationActor_for_f20da4b8:garTest.simpleLs:-1:1 [UUID(f20da4b8)]: Docker lookup failed; java.lang.Exception: Failed to get docker hash for us-central1-docker.pkg.dev/xxx/yyy/aaa Request failed with status 403 and body {""errors"":[{""code"":""DENIED"",""message"":""Unauthenticated request. Unauthenticated requests do not have permission \""artifactregistry.repositories.downloadArtifacts\"" on resource \""projects/xxx/locations/us-central1/repositories/yyy\"" (or it may not exist)""}]}. The workflow completes successfully regardless of this error but call caching doesn't work when a gar image is used.; The service account I am using with the cromwell server has ""Artifact Registry Reader"" IAM role.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7473:187,log,logs,187,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7473,1,['log'],['logs']
Testability,I am getting java.lang.ClassNotFoundException: languages.cwl.CwlV1_0LanguageFactory while using Cromwell 85 and 86 jar. ; [cromwell-85.log](https://github.com/broadinstitute/cromwell/files/13271608/cromwell-85.log); PFA for cromwell.log; Cromwell jar build completes without any errors. While using the jar to start Cromwell on Premise system we get the CWL error (command: nohup java -jar -Dconfig.file=/fastdata/02/genomics/cromwell/reference-84.conf /fastdata/02/genomics/cromwell/cromwell-85-f34251c-SNAP-original.jar server 2>&1 >> cromwell.log &).; https://github.com/broadinstitute/cromwell/releases notes for Cromwell 85 says: CWL implementation removed :This release removes the cwl top-level artifact. Some nonfunctional references may remain and will be addressed over time. Looks like some references is causing the issue?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7247:135,log,log,135,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7247,4,['log'],['log']
Testability,"I am looking to switch over from the Google Life Sciences API to Batch backend, as I recently saw that the service will be deprecated. When I look at the stable documentation, I see documentation for PAPIv2 and I can only access GCPBatch documentation on the development docs. https://cromwell.readthedocs.io/en/develop/backends/GCPBatch/. I have tried to run a few test workflows using GCPBATCH backend with cromwell-85 release. Before I get too far, I wanted to inquire to see if there is full support for GCPBATCH or if this is something that will be supported in the future and we should keep using PAPIv2 for the time being?. In the cromwell.examples.conf listed providers I also do not see GCPBATCH https://github.com/broadinstitute/cromwell/blob/develop/cromwell.example.backends/cromwell.examples.conf#L324C3-L341C30. While there is an example for this backend:; https://github.com/broadinstitute/cromwell/blob/develop/cromwell.example.backends/GCPBATCH.conf. Thanks!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7215:366,test,test,366,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7215,1,['test'],['test']
Testability,"I am not sure what is going on here, I am running cromwell with aws batch enabled. In MarkDuplicate step, the cromwell server shows submit two job: tumor and normal, but it turns out it submitted tumor twice, no normal. Here is the server log:. [2019-01-10 17:34:31,80] [info] AwsBatchAsyncBackendJobExecutionActor [127f691eSomaticSNVInDel.MarkDuplicates:0:1]: gatk MarkDuplicates \; --java-options -Djava.io.tmpdir='' \; --INPUT /cromwell_root/s4-branford-dev-nphi-valinor-v2/cromwell-execution/tigris_workflow/00d0c2df-8f87-42af-9439-b45593930c84/call-SomaticSNVInDel/vc.SomaticSNVInDel/127f691e-ea2e-441f-9d58-deba01a84c5e/call-mergeBam/shard-0/JML005-M254-NORMAL.merged.bam \; --OUTPUT JML005-M254-NORMAL.dedup.bam \; --METRICS_FILE JML005-M254-NORMAL.dupmetric \. sambamba index -t 4 JML005-M254-NORMAL.dedup.bam; [2019-01-10 17:34:31,80] [info] AwsBatchAsyncBackendJobExecutionActor [127f691eSomaticSNVInDel.MarkDuplicates:1:1]: gatk MarkDuplicates \; --java-options -Djava.io.tmpdir='' \; --INPUT /cromwell_root/s4-branford-dev-nphi-valinor-v2/cromwell-execution/tigris_workflow/00d0c2df-8f87-42af-9439-b45593930c84/call-SomaticSNVInDel/vc.SomaticSNVInDel/127f691e-ea2e-441f-9d58-deba01a84c5e/call-mergeBam/shard-1/JML005-M253-TUMOR.merged.bam \; --OUTPUT JML005-M253-TUMOR.dedup.bam \; --METRICS_FILE JML005-M253-TUMOR.dupmetric \. sambamba index -t 4 JML005-M253-TUMOR.dedup.bam; [2019-01-10 17:34:31,81] [info] Submitting job to AWS Batch; [2019-01-10 17:34:31,81] [info] dockerImage: 267795504649.dkr.ecr.us-east-1.amazonaws.com/s4-radbinf-somaticgenomicsrd-tigris:1.2.0; [2019-01-10 17:34:31,81] [info] jobQueueArn: arn:aws:batch:us-east-1:260062248592:job-queue/GenomicsDefaultQueue-63f905e0-1459-11e9-8f03-0a4a1f15abc2; [2019-01-10 17:34:31,81] [info] taskId: SomaticSNVInDel.MarkDuplicates-Some(1)-1; [2019-01-10 17:34:31,81] [info] hostpath root: vc.SomaticSNVInDel/vc.MarkDuplicates/127f691e-ea2e-441f-9d58-deba01a84c5e/Some(1)/1; [2019-01-10 17:34:31,81] [info] Submitting job to AWS",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4537:239,log,log,239,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4537,1,['log'],['log']
Testability,"I am running a workflow that will cache hit every job. Given the log dump on the command line, that seems to be happening. However, the timing diagram is not updating. All I see is the first job and the timing diagram has been in that state for over ten minutes.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1497:65,log,log,65,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1497,1,['log'],['log']
Testability,"I am struggling to make read_json work on any data that is more complex than a flat json-map. For instance, a json like; ```json; [{""series"":""GSE69360"",""name"":""Biochain_Adult_Liver"",""path"":""https://sra-download.ncbi.nlm.nih.gov/traces/sra29/SRR/001967/SRR2014238"",""model"":""Illumina HiSeq 2000"",""run"":""SRR2014238"",""gsm"":""GSM1698568"",""characteristics"":""number of donors -> 1;age -> 64 years old;tissue -> Liver;vendor -> Biochain;isolate -> Lot no.: B510092;gender -> Male"",""strategy"":""RNA-Seq"",""organism"":""Homo sapiens"",""layout"":""PAIRED"",""title"":""Biochain_Adult_Liver""}]; ```; cannot be read by ; ```; Array[Map[String,String]] runs = read_json(path_to_json_file); ```; even through it is clearly Array[Map[String, String]]; I get the following failure:; ```; Workflow failed; WorkflowFailure(Failed to evaluate job outputs,List(WorkflowFailure(Bad output 'get_gsm.runs': Failed to read_json(""/data/cromwell-executions/test/f8f591dc-3797-46de-9846-dbd2a902ff65/call-get_gsm/execution/GSM1698568_runs.json"") (reason 1 of 1): No coercion defined from '[{""series"":""GSE69360"",""name"":""Biochain_Adult_Liver"",""path"":""https://sra-download.ncbi.nlm.nih.gov/traces/sra29/SRR/001967/SRR2014238"",""model"":""Illumina HiSeq 2000"",""run"":""SRR2014238"",""gsm"":""GSM1698568"",""characteristics"":""number of donors -> 1;age -> 64 years old;tissue -> Liver;vendor -> Biochain;isolate -> Lot no.: B510092;gender -> Male"",""strategy"":""RNA-Seq"",""organism"":""Homo sapiens"",""layout"":""PAIRED"",""title"":""Biochain_Adult_Liver""}]' of type 'spray.json.JsArray' to 'Object'.,List()))); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4518:918,test,test,918,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4518,1,['test'],['test']
Testability,"I am testing the cromwell workflow on NAVER Cloud Platform (NCP). I tried setting using custom configuration of your documentation in github (https://github.com/broadinstitute/cromwell/tree/develop/cromwell.example.backends), but I failed. I would like to set configuration of backend including docker container and object storage (comparable with AWS S3) to the same level as AWS or GCP configuration in cromwell documentation. How can I do this?. <!--; Hi! Thanks for taking the time to report feedback. Before posting an issue over in Jira tracker, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-firecloud-team; WDL https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; CWL https://www.biostars.org/; -->. <!-- Are you seeing something that looks like a bug? Then great! You're almost in the right place. -->. <!-- You'll want to go to https://broadworkbench.atlassian.net/projects/BA/issues and then tell us: -->. <!-- Which backend are you running? -->. <!-- Paste/Attach your workflow if possible: -->. <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORDS, TOKENS AND OTHER SENSITIVE MATERIAL: -->",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6548:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6548,1,['test'],['testing']
Testability,"I am trying to adapt a WDL workflow originally developed for DNAnexus, to work in AWS Batch. I am running from ""develop"" branch on Mac, server mode. The workflow seems to run on AWS, but then fails when checking for output logs in S3... inputs: [demux_plus_inputs.json.txt](https://github.com/broadinstitute/cromwell/files/2099495/demux_plus_inputs.json.txt); workflow: [demux_only.wdl.txt](https://github.com/broadinstitute/cromwell/files/2099496/demux_only.wdl.txt); resource file: [workflows.zip](https://github.com/broadinstitute/cromwell/files/2099470/workflows.zip); config file, which shows some attempts to add the local filesystem, since I get an error about that: ; [aws.conf.txt](https://github.com/broadinstitute/cromwell/files/2099528/aws.conf.txt). ```; 2018-06-13 14:29:27,796 cromwell-system-akka.dispatchers.api-dispatcher-72 INFO - Unspecified type (Unspecified version) workflow a67833cb-b894-4790-872f-9f3104cab60c submitted; 2018-06-13 14:29:44,760 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - 1 new workflows fetched; 2018-06-13 14:29:44,761 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - WorkflowManagerActor Starting workflow UUID(a67833cb-b894-4790-872f-9f3104cab60c); 2018-06-13 14:29:44,765 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - WorkflowManagerActor Successfully started WorkflowActor-a67833cb-b894-4790-872f-9f3104cab60c; 2018-06-13 14:29:44,765 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2018-06-13 14:29:44,774 cromwell-system-akka.dispatchers.engine-dispatcher-32 INFO - WorkflowStoreHeartbeatWriteActor configured to flush with batch size 10000 and process rate 2 minutes.; 2018-06-13 14:29:45,255 cromwell-system-akka.dispatchers.engine-dispatcher-32 INFO - MaterializeWorkflowDescriptorActor [UUID(a67833cb)]: Parsing workflow as WDL draft-2; 2018-06-13 14:29:46,004 cromwell-system-akka.dispatchers.engine-dispatcher-32 INFO - MaterializeWorkflowDe",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:223,log,logs,223,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['logs']
Testability,"I am trying to run Cromwell with docker images that were loaded with `docker load`. This means that the digests are unavailable (i.e. `<none>`). Unforutnately, this means that when looking up the image locally (i.e. when the config `docker.hash-lookup.method=""local""` is used), the image is not found. The offending lines of code are:; https://github.com/broadinstitute/cromwell/blob/1898d8103a06d160dc721d464862313e78ee7a2c/dockerHashing/src/main/scala/cromwell/docker/local/DockerCliClient.scala#L26; https://github.com/broadinstitute/cromwell/blob/1898d8103a06d160dc721d464862313e78ee7a2c/dockerHashing/src/main/scala/cromwell/docker/local/DockerCliClient.scala#L78-L92. Can we instead use the image ID instead of the digest when using local images?. <details>. <summary>log output</summary>. ```; [INFO] [09/16/2019 11:07:14.821] [cromwell-system-akka.dispatchers.engine-dispatcher-40] [akka://cromwell-system/user/SingleWorkflowRunnerActor/JobExecutionTokenDispenser] Not triggering log of token queue status. Effective log interval = None; [INFO] [09/16/2019 11:07:14.830] [cromwell-system-akka.dispatchers.engine-dispatcher-76] [akka://cromwell-system/user/SingleWorkflowRunnerActor/JobExecutionTokenDispenser] Assigned new job execution tokens to the following groups: 2b766fe6: 1; [2019-09-16 11:07:16,20] [error] Docker pull failed; java.lang.RuntimeException: Error running: docker pull <image>; Exit code: 1; Error response from daemon: pull access denied for <image> repository does not exist or may require 'docker login': denied: requested access to the resource is denied. 	at cromwell.docker.local.DockerCliClient.$anonfun$forRun$1(DockerCliClient.scala:58); 	at scala.util.Try$.apply(Try.scala:213); 	at cromwell.docker.local.DockerCliClient.forRun(DockerCliClient.scala:50); 	at cromwell.docker.local.DockerCliClient.pull(DockerCliClient.scala:37); 	at cromwell.docker.local.DockerCliClient.pull$(DockerCliClient.scala:36); 	at cromwell.docker.local.DockerCliClient$.pull(DockerCliC",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5178:774,log,log,774,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5178,2,['log'],['log']
Testability,"I am trying to test my wdl and docker image on my local computer before publishing. ```; [2022-02-09 11:16:10,66] [warn] BackendPreparationActor_for_35c8738b:deseq_one_vs_all.one_vs_all:-1:1 [35c8738b]: Docker lookup failed; java.lang.Exception: Unauthorized to get docker hash aedavids/test-1vs-all-2:latest; at cromwell.engine.workflow.WorkflowDockerLookupActor.cromwell$engine$workflow$WorkflowDockerLookupActor$$handleLookupFailure(WorkflowDockerLookupActor.scala:222); ```. using docker image I see that my image exists. I am able to start the container using docker run. I also tried using the sha instead of the tag name. same error. I run Cromwell as follows; ```; $ java -jar ${WDL_TOOLS}/cromwell-74.jar run --inputs ../1vsAllTask.wdl.inputs.json ../1vsAllTask.wdl; ```. ```; $ cat ../1vsAllTask.wdl.inputs.json ; {; stuff deleted; ""deseq_one_vs_all.one_vs_all.dockerImg"": ""aedavids/test-1vs-all-2""; }; ```. ```; $ docker images |grep aedavids; aedavids/test-1vs-all-2 latest 0d33407a54e3 19 hours ago 6.28GB; ```; Any idea what my issue might be?. Andy. fyi https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team is a bad URL. I not have access to Jira on broadworkbench.atlassian.net.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6674:15,test,test,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6674,4,['test'],"['test', 'test-']"
Testability,"I am under the impression that this feature is EOL and we should not bother fixing the tests. ~Next stop, delete the code and tests, but that's more than I can take on today.~. Let the 👍/👎 's decide!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4502:87,test,tests,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4502,2,['test'],['tests']
Testability,"I believe this is working. Travis successfully writes the Vault token to the file, and Vault is aware of it, but the old auth method (via the `VAULT_TOKEN` env var) supersedes this one, so we're not actually using the new token yet. This warning is printed in the build logs (no token is printed):. ```; WARNING! The VAULT_TOKEN environment variable is set! This takes precedence; over the value set by this command. To use the value set by this command,; unset the VAULT_TOKEN environment variable or set it to the token displayed; below.; ```. Before merging this I'll remove the `VAULT_TOKEN` env var and retry the build. If it succeeds, I'll merge this ticket. If not, I'll get `VAULT_TOKEN` added back in and keep trying.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6669:270,log,logs,270,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6669,1,['log'],['logs']
Testability,I cannot test this change as I do not have the build environment set up. Is is intentional that this 'cloud' feature is inherited by the SGE backend? I am fixing an issue caused by a feature I do not need. I wonder if it could be placed in the epilogue for user configurations. Isn't that the purpose of epilogue and configuration?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3864:9,test,test,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3864,1,['test'],['test']
Testability,"I confirmed this does throttle the token dispenser from the log output, though it may not get the AWS build passing until everyone rebases.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4588:60,log,log,60,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4588,1,['log'],['log']
Testability,"I could not find on [WDL spec](https://github.com/openwdl/wdl/blob/main/versions/1.0/SPEC.md) something saying that structs could not be used as outputs... so I decide to report here. This is an example I prepared:. ```wdl; version 1.0. struct Test {; String name; File path; }. struct Collection {; Array[Test] samples; }. task GenerateComplexObject {; input {; Int items; }. command <<<; python <<CODE; import sys; import os; import json; items = []; for item in range(0, ~{items}):; name = f""test{item}.txt""; os.system(f""echo 'some content' > {name}""); items.append({""name"": f""item-{item}"", ""path"": name}). with open(""results.json"", ""w"") as fh:; json.dump({'samples': items}, fh); CODE; >>>. runtime {; docker: ""python:3.8""; memory: ""1 GB""; cpu: 1; preemptible: 3; disks: ""local-disk "" + 10 + "" HDD""; }. output {; Collection results = read_json(""results.json""); }; }. workflow TestStruct {; input {; Int items; }. call GenerateComplexObject {; input:; items=items; }. output {; Collection out = GenerateComplexObject.results; }; }; ```. When using local backend I have no problem, but when using PAPIv2 (`cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory`) the files from `Test` struct (path) do not delocalize. ```bash; gsutil ls gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/; gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/GenerateComplexObject.log; gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/gcs_delocalization.sh; gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/gcs_localization.sh; gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/gcs_transfer.sh; gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/rc; gs://********/TestaStruct/47bc869c-041f-443d-b0bd-d45a1dd203ff/call-GenerateComplexObject/results.json; gs",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5592:244,Test,Test,244,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5592,4,"['Test', 'test']","['Test', 'TestStruct', 'test']"
Testability,"I did not have any experience with this little Maven-based utility so I performed the following steps for post-upgrade verification.; ```; sdk install maven; mvn compile; mvn test; mvn package // I think this is a superset of `compile` and `test` but they all take just a few seconds so 🤷‍♂️ ; ```; Closing automatic PR https://github.com/broadinstitute/cromwell/pull/6743 in favor of this one because we can trivially upgrade to the latest version, not just a security-hotfixed older version.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6747:175,test,test,175,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6747,2,['test'],['test']
Testability,"I forgot to make the expression evaluator understand `ArrayLiteral` ASTs. Without it, users cannot create WDL array literals within WDL source code. For example:. ```; Array[String] strs = [""x"", ""y"", ""z""]; ```. The `[""x"", ""y"", ""z""]` part is an `ArrayLiteral` AST. Coercions also had to be specified so that the following declaration. ```; Array[File] files = [""x"", ""y"", ""z""]; ```. means: `x`, `y`, and `z` are WdlFiles, which in this case because of no trailing `/`, they are treated as relative to VM. This is very useful for analysts running with the JAR file locally. With WDL files meant for the cloud, file arrays would likely be defined as:. ```; Array[File] files = [""gs://bucket/x"", ""gs://bucket/y"", ""gs://bucket/z""]; ```. Also added a tests:; - Test the `Array[String] -> Array[File]` auto conversion; - Test Array literals in WDL",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/118:744,test,tests,744,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/118,3,"['Test', 'test']","['Test', 'tests']"
Testability,"I get cyclic dependency errors in places where I do not see a reason for them. I enclose the wdl and input.json; [cyclic_error.zip](https://github.com/broadinstitute/cromwell/files/1654348/cyclic_error.zip). Here is also the error log:; ```; Workflow input processing failed; WorkflowFailure(This workflow contains a cyclic dependency on quality_de_novo_with_download.copy_initial_quality_reports,List())WorkflowFailure(wdl.Scope.childGraphNodesSorted(Scope.scala:51),List())WorkflowFailure(wdl.Scope.childGraphNodesSorted$(Scope.scala:42),List())WorkflowFailure(wdl.WdlWorkflow.childGraphNodesSorted$lzycompute(WdlWorkflow.scala:63),List())WorkflowFailure(wdl.WdlWorkflow.childGraphNodesSorted(WdlWorkflow.scala:63),List())WorkflowFailure(wdl.WdlGraphNode$.buildWomGraph(WdlGraphNode.scala:140),List())WorkflowFailure(wdl.WdlWorkflow$.womWorkflowDefinition(WdlWorkflow.scala:52),List())WorkflowFailure(wdl.WdlWorkflow.womDefinition$lzycompute(WdlWorkflow.scala:73),List())WorkflowFailure(wdl.WdlWorkflow.womDefinition(WdlWorkflow.scala:73),List())WorkflowFailure(wdl.WdlInputParsing$.buildWomExecutable(WdlInputParsing.scala:27),List())WorkflowFailure(wdl.WdlNamespaceWithWorkflow.womExecutable(WdlNamespace.scala:97),List())WorkflowFailure(cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.$anonfun$validateWdlNamespace$15(MaterializeWorkflowDescriptorActor.scala:493),List())WorkflowFailure(scala.util.Either.flatMap(Either.scala:338),List())WorkflowFailure(cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.$anonfun$validateWdlNamespace$13(MaterializeWorkflowDescriptorActor.scala:491),List())WorkflowFailure(scala.util.Either.flatMap(Either.scala:338),List())WorkflowFailure(cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.validateWdlNamespace(MaterializeWorkflowDescriptorActor.scala:490),List())WorkflowFailure(cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3176:231,log,log,231,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3176,1,['log'],['log']
Testability,"I have a few cases in Firecloud (using cromwell .19) where it appears like some scatter jobs are not being launched. I have tracked it down to a problem with outputs from the prepare call not being registered as actual outputs. According to the logs and the gcs bucket all the outputs from the prepare step are right, but according to cromwell the output array is missing a couple entries. Looking in [workflow metadata](https://github.com/broadinstitute/cromwell/files/557271/metadata.txt) at the CallingGroup_Workflow.mone_prepare call, the outputs for split_base.06.interval_list and split_base.22.interval_list are missing. According to the [google bucket listing of the glob dir](https://github.com/broadinstitute/cromwell/files/557270/glob_listing.txt), the files are there. The JES logs for the prepare step show the upload happens successfully. To summarize, the call CallingGroup_Workflow.mone_prepare successfully generates and upload 25 interval files but the output section of the metadata shows only 23 (6 and 22 are missing). This means that only 23 downstream calls run which is bad. [workflow log](https://github.com/broadinstitute/cromwell/files/557272/workflow.9b9e6b19-aac4-451f-bf24-a9132c0e5408.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1633:245,log,logs,245,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1633,3,['log'],"['log', 'logs']"
Testability,"I have a wdl task that doesn't handle an optional parameter as it should.; The wdl validates (wdltool-0.8.jar), but when I submit to my server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stoppin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1830:523,test,testHC,523,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830,2,['test'],['testHC']
Testability,"I have a working cromwell/AWS batch configuration.; I have a simple workflow called three_task_sequence.wdl which I am able to run on AWS backend, and see the outputs in s3. However, submitting this job to my cromwell server:; `curl -X POST ""http://172.20.1.67:8001/api/workflows/v1"" -H ""accept: application/json"" -F ""workflowSource=@three_task_sequence.wdl"" -F ""workflowOptions=@workflow_options.json""; `; Where workflow_options.json content is:; ```; {; ""final_workflow_outputs_dir"": ""s3://nrglab-cromwell-genomics/cromwell-execution/out_bin_test""; }. ```. I'm getting the following error at the end of the workflow cromwell log:. ````; 2019-02-28 08:30:32,167 cromwell-system-akka.dispatchers.engine-dispatcher-30 ERROR - Access Denied (Service: S3Client; Status Code: 403; Request ID: FA1C7E97A7A33EDC); software.amazon.awssdk.services.s3.model.S3Exception: Access Denied (Service: S3Client; Status Code: 403; Request ID: FA1C7E97A7A33EDC); 	at software.amazon.awssdk.core.http.pipeline.stages.HandleResponseStage.handleErrorResponse(HandleResponseStage.java:114); 	at software.amazon.awssdk.core.http.pipeline.stages.HandleResponseStage.handleResponse(HandleResponseStage.java:72); 	at software.amazon.awssdk.core.http.pipeline.stages.HandleResponseStage.execute(HandleResponseStage.java:57); 	at software.amazon.awssdk.core.http.pipeline.stages.HandleResponseStage.execute(HandleResponseStage.java:40); 	at software.amazon.awssdk.core.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:239); 	at software.amazon.awssdk.core.http.pipeline.stages.TimerExceptionHandlingStage.execute(TimerExceptionHandlingStage.java:40); 	at software.amazon.awssdk.core.http.pipeline.stages.TimerExceptionHandlingStage.execute(TimerExceptionHandlingStage.java:30); 	at software.amazon.awssdk.core.http.pipeline.stages.RetryableStage$RetryExecutor.doExecute(RetryableStage.java:139); 	at software.amazon.awssdk.core.http.pipeline.stages.RetryableStage$RetryExecut",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4686:627,log,log,627,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4686,1,['log'],['log']
Testability,"I have an similar issue to this [https://github.com/broadinstitute/cromwell/issues/1306](https://github.com/broadinstitute/cromwell/issues/1306), but I don't think OP's solution fits whats going in my case since input files are not part of the issue. Using the hello-world example:. ```{wdl}; task hello {; String name. command {; echo 'Hello ${name}!'; }; output {; File response = stdout(); }; }. workflow test {; call hello; }; ```. with input; ```{json}; {; ""test.hello.name"": ""World""; }; ```; I run `$ cromwell run hello.wdl hello.json hello.out`. I get the error message:. > /Users/jasonweirather/Dropbox (Partners HealthCare)/projects/2017_08_FIRECLOUD/cromwell-executions/test/12ed39b6-cf8f-4ea1-a965-193cd89f99e9/call-hello/execution/stderr.background; -bash: syntax error near unexpected token `('. Seems it may be having troubles being run from a working directory with a space and parentheses. This was done on Mac OS X 10.12.6 in the bash terminal.; Version of cromwell is `cromwell: 28-5fd2237-SNAP`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2518:408,test,test,408,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2518,3,['test'],['test']
Testability,"I have been attempting to spin up the CloudFormation stack provided [here](https://docs.opendata.aws/genomics-workflows/cromwell/cromwell-aws-batch/#tldr). This intermittently fails and succeeds, I'm not sure why it sometimes does and sometimes doesn't work. When it fails, it's because the EC2 instance fails to initialize. The most promising section I can find from the EC2 logs shows the following:; ```; Traceback (most recent call last):; File ""/usr/lib64/python2.7/logging/__init__.py"", line 891, in emit; stream.write(fs % msg.encode(""UTF-8"")); UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 49: ordinal not in range(128); Logged from file util.py, line 476; Traceback (most recent call last):; File ""/usr/lib64/python2.7/logging/__init__.py"", line 891, in emit; stream.write(fs % msg.encode(""UTF-8"")); UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 71: ordinal not in range(128); Logged from file util.py, line 476; [ 72.975338] EXT4-fs (dm-3): mounted filesystem with ordered data mode. Opts: (null); Error occurred during build: Command 04InstallECSAdditions failed; ```; The line `EXT4-fs (dm-3): mounted filesystem with ordered data mode` is repeated about 100 times in the real logs (below), I've just abridged it here for clarity. Anyway, the main thing this tells us that it's failing during step 04 of the EC2 startup script, which does the following:; ```yaml; 04InstallECSAdditions:; command:; Fn::If:; - UseCromwell; - !Join ["" "", [""sh"", ""/opt/ecs-additions/ecs-additions-cromwell.sh""]]; - echo ""OK""; env:; PATH: ""/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin""; ```. My best guess as to what is happening, is [this blog post](http://www.codeandcompost.com/post/cfn,-utf8-and-two-days-i%E2%80%99ll-never-get-back), which suggests:; > Apparently cfn-init has a limit on the amount of output it can process from a command, and I was pushing that limit. > I suspect the reason for the UTF8 error is that the output was truncate",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4674:376,log,logs,376,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4674,5,"['Log', 'log']","['Logged', 'logging', 'logs']"
Testability,"I have been testing AWS Batch with Cromwell 36. Jobs are submitted, etc. However, I keep seeing **disk full errors** with any real workflows. I started looking into how the autoscaling of the filesystem is working. It appears that the autoscaling is set up to scale `/scratch`, but not `/cromwell_root`. I have tested that it is working in my custom AMI (created with the python script here: http://aws-genomics-workflows.s3-website-us-east-1.amazonaws.com/aws-batch/create-custom-ami/#create-a-custom-ami) by ssh'ing into a running container and creating some large files in `/scratch`. Doing the same in `/cromwell_root`, of course, does not result in growing the filesystem.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4322:12,test,testing,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4322,2,['test'],"['tested', 'testing']"
Testability,"I have caught cromwell red-handed! I did not realize that the cromwell timing was implemented in [TrumpScript](https://github.com/samshadwell/TrumpScript). **TL;DR** The timing diagram showed that my job took > 2 hours to run, even though half of that was spent on overhead in cromwell. ; ## Proof. Here is a snapshot of the timing diagram (see highlighted runtime below -- 2h 6m).; ![cromwell_snapshot_so_slow_lies](https://cloud.githubusercontent.com/assets/2152339/18798566/23db7738-81a1-11e6-8a39-43612a561aa7.png); Yet, when I check that job:. ```; $ head -5 cromwell-executions/case_gatk_acnv_workflow/0050770f-ad61-49e4-bc81-3b0e5f5e2203/call-TumorCalculateTargetCoverage/shard-10/execution/stdout. 17:06:18.839 INFO IntelGKLUtils - Trying to load Intel GKL library from:; jar:file:/root/gatk-protected/build/libs/gatk-protected-all-24e6bdc-SNAPSHOT-spark_standalone.jar!/com/intel/gkl/native/libIntelGKL.so; 17:06:19.327 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; 17:06:19.353 INFO CalculateTargetCoverage - Defaults.BUFFER_SIZE : 131072; 17:06:19.355 INFO CalculateTargetCoverage - Defaults.COMPRESSION_LEVEL : 5. $ tail -5 cromwell-executions/case_gatk_acnv_workflow/0050770f-ad61-49e4-bc81-3b0e5f5e2203/call-TumorCalculateTargetCoverage/shard-10/execution/stdout; 18:10:04.122 INFO CalculateTargetCoverage - Writing counts ...; 18:10:05.250 INFO CalculateTargetCoverage - Writing counts done.; 18:10:05.250 INFO CalculateTargetCoverage - Shutting down engine; ```. The job finished in about 64 minutes (please note that timezones are not concordant between timing and log messages).; This will likely (de facto) be addressed once the md5 issue is resolved in issue #1483",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1484:1599,log,log,1599,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1484,1,['log'],['log']
Testability,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2068:1272,test,testing,1272,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068,1,['test'],['testing']
Testability,"I have locally configured mariaDB my.cnf as follows：. > [mysqld]; max_connections=5024; thread_cache_size=1000; datadir=/zfsyt1/B2C_RD_P2/USER/fuxiangke/Cromwell/Data/; socket=/zfsyt1/B2C_RD_P2/USER/fuxiangke/Cromwell/socket/cromwell.sock; default-time-zone='+8:00'; port=3310; skip-character-set-client-handshake; init_connect='SET collation_connection = utf8mb4_unicode_ci'; init_connect='SET NAMES utf8mb4'; character-set-server=utf8mb4; collation-server=utf8mb4_unicode_ci; #open slow query logging; slow_query_log = ON; slow_query_log_file = /zfsyt1/B2C_RD_P2/USER/fuxiangke/Cromwell/log-files/slow_cromwell.log; long_query_time = 1; [mysqld_safe]; log-error=/zfsyt1/B2C_RD_P2/USER/fuxiangke/Cromwell/log-files/error.log; pid-file=/zfsyt1/B2C_RD_P2/USER/fuxiangke/Cromwell/pid/mysqld_cromwell.pid; [client]; default-character-set=utf8mb4; > . Then I configured the flow. The following error was reported when scatter 478 tasks were needed in one step：. > 2021-12-06 17:03:51,401 cromwell-system-akka.dispatchers.service-dispatcher-9 ERROR - Failed to summarize metadata. java.sql.SQLException: null; at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129); at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122); at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045); at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:388); at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java); at slick.jdbc.JdbcBackend$BaseSession.startInTransaction(JdbcBackend.scala:511); at slick.jdbc.JdbcActionComponent$StartTransaction$.run(JdbcActionComponent.scala:37); at slick.jdbc.JdbcActionComponent$StartTransaction$.run(JdbcActionComponent.scala:34); at slick.basic.BasicBackend$DatabaseDef$$anon$3.liftedTree1$1(BasicBackend.scala:276); at slick.basic.BasicBackend$DatabaseDef$$anon$3.run(BasicBackend.scala:276); at java.base/java.util.concurrent.ThreadPo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6583:495,log,logging,495,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6583,6,['log'],"['log', 'log-error', 'log-files', 'logging']"
Testability,"I have not actually tested the UAMI auth path here, since I'm having unrelated issues getting CoA working. I've been testing locally using CLI login. I put instructions for that in the ticket. ETA: Did end up testing on CoA, works fine.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6549:20,test,tested,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6549,4,"['log', 'test']","['login', 'tested', 'testing']"
Testability,"I have tried the [tutorial](https://cromwell.readthedocs.io/en/stable/tutorials/PipelinesApi101/) to run Cromwell on Google Cloud. I did not get very far. I have followed the long set of instructions. I have logged in with my `<google-user-id>`, I have set my own `<google-project-id>`. I have created my own bucket. I have generate my service account key with the command:; ```; gcloud iam service-accounts keys create sa.json --iam-account ""$EMAIL""; ```. Then I run the hello.wdl with the command:; ```; GOOGLE_APPLICATION_CREDENTIALS=sa.json; java -Dconfig.file=google.conf -jar cromwell-52.jar run hello.wdl -i hello.inputs; ```. But I get the following error:; ```; [2020-07-27 18:34:00,37] [error] PipelinesApiAsyncBackendJobExecutionActor [3d2d7a27wf_hello.hello:NA:1]: Error attempting to Execute; cromwell.engine.io.IoAttempts$EnhancedCromwellIoException: [Attempted 1 time(s)] - StorageException: xxx@xxx.iam.gserviceaccount.com does not have serviceusage.services.use access to the Google Cloud project.; Caused by: com.google.cloud.storage.StorageException: xxx@xxx.iam.gserviceaccount.com does not have serviceusage.services.use access to the Google Cloud project.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:227); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.create(HttpStorageRpc.java:308); 	at com.google.cloud.storage.StorageImpl$3.call(StorageImpl.java:213); 	at com.google.cloud.storage.StorageImpl$3.call(StorageImpl.java:210); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:105); 	at com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at com.google.cloud.storage.StorageImpl.internalCreate(StorageImpl.java:209); 	at com.google.cloud.storage.StorageImpl.create(StorageImpl.java:171); 	at cromwell.filesystems.gcs.GcsPath.request$1(GcsPathBuilder.scala:196); 	at cromwell.filesystems.gcs.GcsPath.$anonfun$writeContent$2",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5594:208,log,logged,208,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5594,1,['log'],['logged']
Testability,"I know there is a more serious ticket for this issue, but it seems like a number of centaur local tests have been failing again lately due to `expected ""hello"" but got """"` kind of errors.; I found this https://linux.die.net/man/2/sync and have been restarting centaur local on this branch a few times and none of them have failed so far. I don't think it entirely fixes the issue though.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1974:98,test,tests,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1974,1,['test'],['tests']
Testability,"I labeled ""do not merge"" since I would like discussion first and there are one or two items that I need to figure out a good way to test. Once merged and in image one would update JAVA_OPTS similar to below to enable and modify the defaults. JAVA_OPTS=""-DLOG_MODE=FILEROLLER -DFILEROLLER_NAMEPATTERN=%d{yyyyMMddHHmm} -DFILEROLLER_NAME=crom -DFILEROLLER_DIR=/local/cromwell -DFILEROLLER_MAXHISTORY=3"". To try it out prior a full build I did the following. 1. Copy the logback.xml from this branch into some directory. make a logs subdirectory; 2. from that directory run the following. docker run -it --rm -p 8000:8000 -v ${PWD}:/working -v ${PWD}/logs:/local/cromwell -e JAVA_OPTS=""-Dlogback.configurationFile=/working/logback.xml -DLOG_MODE=FILEROLLER -DFILEROLLER_NAMEPATTERN=%d{yyyyMMddHHmm} -DFILEROLLER_NAME=crom -DFILEROLLER_DIR=/local/cromwell -DFILEROLLER_MAXHISTORY=3"" broadinstitute/cromwell:0.22-881e7b7 server. after running for several minutes logs directory should end up looking like:. 201611182054-crom; 201611182056-crom; crom. NOTE: FileRoller rotation seems to only happen when logs are generated. So IF your cromwell is not generating any log messages the logfile won't be rotated. So in my example above the logfile ""crom"" may have messages from several minutes ago (in my case). But when the next message comes in - crom will be rotated prior to the new log message being written. I think the rotated logfile will get the timestamp based on the date of the last log message in that file. Which is why in the list above there is a gap.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1692:132,test,test,132,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1692,13,"['log', 'test']","['log', 'logback', 'logfile', 'logs', 'test']"
Testability,I mentioned in standup that I realize and apologize for the utter lack of unit testing here. You'll note some pre-existing FIXMEs which themselves are part of why testing this is hard - they **are** more easily solved now but open up a can of worms and this issue is blocking Mint. I'd like to get this in and then go back and fix those FIXMEs/lack of testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3485:79,test,testing,79,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3485,3,['test'],['testing']
Testability,"I noticed that WorkflowActorSpec is a bit flakey, specifically ""transition to InitializingWorkflowState with correct call assignments given workflow options"".  It fails with ""WorkflowFailedState was not equal to InitializingWorkflowState"".  I think the problem is that the test set the FSM state, fires a message and then checks the new state.  The FSM when it gets that message transitions to the right state (Initializing) and then transitions to the next state (failed) and sometimes the test misses the initializing. but all that might be because the runtime options aren't actually valid?  (sge backend) but I'm missing the purpose of that specific setting so I don't want to change it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/877:273,test,test,273,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/877,2,['test'],['test']
Testability,"I noticed that all the input files are always being copied, so I tried passing `-Dbackend.shared-filesystem.localization.0=hard-link` or `-Dbackend.shared-filesystem.localization.0=soft-link`. In both cases, `cromwell-0.19.jar` tries and fails to localize input files repeatedly. Localization by copy works. test.wdl:. ``` wdl; workflow test {; File in; call cat { input: in=in }; }. task cat {; File in; command {; cat ${in}; }; }; ```. test.inputs:. ``` json; {; ""test.in"": ""test.wdl""; }; ```. The command. ``` bash; java -Dbackend.shared-filesystem.localization.0=hard-link \; -jar ~/java/cromwell-0.19.jar \; run test.wdl test.inputs; ```. results in. ``` txt; 2016-06-24 21:57:15,613 ERROR - BackendCallExecutionActor [UUID(8a4e2219):cat]: Failures during localizationCould not localize test.wdl -> /Users/davids/work/wdl/cromwell-executions/test/8a4e2219-90e2-4210-a753-26b149c18b51/call-cat/Users/davids/work/wdl/test.wdl; cromwell.util.AggregatedException: Failures during localizationCould not localize test.wdl -> /Users/davids/work/wdl/cromwell-executions/test/8a4e2219-90e2-4210-a753-26b149c18b51/call-cat/Users/davids/work/wdl/test.wdl; at cromwell.util.TryUtil$.sequenceIterable(TryUtil.scala:118) ~[cromwell-0.19.jar:0.19]; at cromwell.util.TryUtil$.sequence(TryUtil.scala:125) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.SharedFileSystem$class.adjustSharedInputPaths(SharedFileSystem.scala:228) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.LocalBackend.adjustSharedInputPaths(LocalBackend.scala:94) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.LocalBackend.adjustInputPaths(LocalBackend.scala:96) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.LocalBackend.instantiateCommand(LocalBackend.scala:246) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.BackendCallJobDescriptor.instantiateCommand$lzycompute(JobDescriptor.scala:52) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.BackendCallJobDescriptor.instantiateCom",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1070:308,test,test,308,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1070,11,['test'],['test']
Testability,"I originally tried to do this with metrics because metrics >> logging. But our metrics require `ServiceRegistryActor` and passing it around everywhere became horrible ([non-compiling branch](https://github.com/broadinstitute/cromwell/compare/aen_wx_751)). I got interrupted 15 times by stuff last week and I just want to close out this ticket, so logging it is.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6939:62,log,logging,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6939,2,['log'],['logging']
Testability,"I ran into this during Centaur testing to confirm that the `memory` attribute is plumbed through to JES as expected. Cromwell is handling `memory` correctly (i.e. this is not a bug report), but I found the consequences of my chosen `memory` values somewhat surprising. JES guarantees a VM with at least as much memory as the user requests. But combining this fact with the [memory thresholds](https://cloud.google.com/compute/docs/machine-types) for standard instance types means that common memory specifications may procure a VM with nearly double the requested memory at [double the cost](https://cloud.google.com/compute/pricing#machinetype). For example:. ```; runtime {; memory: ""4 GB""; }; ```. or . ```; runtime {; memory: ""8 GB""; }; ```. These specifications might be expected to procure an n1-standard-1 (3.75 GB) and n1-standard-2 (7.5 GB). But JES guarantees a VM with _at least_ as much memory as requested, not _about_ as much memory as requested. So a request for 4 GB would procure a 7.5 GB n1-standard-2 and a request for 8 GB would procure a 15 GB n1-standard-3. It seems unlikely a WDL author intending to execute on JES would intentionally write `memory` values of 4 GB or 8 GB with this understanding of how JES interacts with GCE memory sizes.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1918:31,test,testing,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1918,1,['test'],['testing']
Testability,"I ran the WDL at the bottom of this issue using mock-jes. Initially it ran everything but then got stuck in a state with 2 jobs left and the 1 wf still ""running"". I looked and those 2 jobs had had 500 errors associated with them. . At a later point I restarted Cromwell, for a long (> 10 mins) period of time the stats endpoint was unresponsive although other endpoints were fine. After some period of time (< 1.5 hours) I came back and those 2 jobs had completed but the WF was still stuck as Running. task snooze {; command {; sleep 10 && ps > myfile.txt; }; output {; File procs = ""myfile.txt""; }; runtime {; docker: ""ubuntu:14.04""; preemptible: 3; cpu: 10; }; }. workflow one_step {; Array[Int] integers = range(20000); scatter(i in integers) {; call snooze; }; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1662:48,mock,mock-jes,48,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1662,1,['mock'],['mock-jes']
Testability,"I realize this may seem like a regression but hear my plea:. The output of `diff(expected, actual)` looks like; ```; [; {; ""op"": ""replace"",; ""path"": ""Chain(Left(calls), Left(test_custom_cacheworthy_attributes.custom_cacheworthy_attributes_task_should_not_cache), Right(0), Left(executionStatus))"",; ""value"": ""Done""; }; ]; ```; which is to say that the value at path; ```; /calls/test_custom_cacheworthy_attributes.custom_cacheworthy_attributes_task_should_not_cache/0/executionStatus; ```; is `Done` in `actual` and something else in `expected`. The problem is that `Done` sounds right and there is no way to tell what is in `expected`! In this style of tests `expected` is computed from actual metadata and I think it's the cause of the flakiness. Perhaps we are retrieving `expected` metadata before the task finishes, or it is being call-cached when it should not be.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6435:654,test,tests,654,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6435,1,['test'],['tests']
Testability,I removed the default gcs prefix and default docker conf thinking that they only existed for conformance tests but maybe we want to keep them for other purposes ?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3171:105,test,tests,105,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3171,1,['test'],['tests']
Testability,"I restarted Cromwell with one workflow running and one of my tasks failed with this exception: . 2016-04-07 20:32:28,188 cromwell-system-akka.actor.default-dispatcher-20 ERROR - WorkflowActor [UUID(03db4daf)]: Completion work failed for call CollectQualityYieldMetrics:9.; com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '27-PairedEndSingleSampleWorkflow.CollectQualityYieldMetrics-metr' for key 'UK_SYM_WORKFLOW_EXECUTION_ID_SCOPE_NAME_ITERATION_IO'. the logs can be found on gotc-staging - 20160407-cromwell.log",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/684:500,log,logs,500,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/684,2,['log'],"['log', 'logs']"
Testability,"I tested it on a local backend. If you use a non-empty array then it works fine with cromwell-36. But with an empty array it fails. workflow:; ```; workflow test_opt_array {; #Array[File] arr1 = [""0.txt"",""1.txt"",""2.txt"",""3.txt"",""4.txt""]; Array[File] arr1 = []. Boolean go = true; if ( go ) {; scatter( i in range(5) ) {; call t1 {input: i=i}; }; }; Array[File] arr2 = select_first([t1.out, arr1]); }. task t1 {; Int i; command {; echo ${i} > out.txt; }; output {; File out = 'out.txt'; }; }; ```. This workflow worked fine with cromwell-34.; ```; $ java -jar ~/cromwell-34.jar run test_opt_array.wdl; Picked up _JAVA_OPTIONS: -Xms256M -Xmx1024M -XX:ParallelGCThreads=1; [2018-10-25 21:20:58,35] [info] Running with database db.url = jdbc:hsqldb:mem:a975ddc6-f298-4393-b1f0-e93250d3cca8;shutdown=false;hsqldb.tx=mvcc; [2018-10-25 21:21:07,82] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2018-10-25 21:21:07,84] [info] [RenameWorkflowOptionsInMetadata] 100%; [2018-10-25 21:21:07,95] [info] Running with database db.url = jdbc:hsqldb:mem:d98689d1-c87b-486c-aa55-626823fb3bb1;shutdown=false;hsqldb.tx=mvcc; [2018-10-25 21:21:08,32] [info] Slf4jLogger started; [2018-10-25 21:21:08,56] [info] Workflow heartbeat configuration:; {; ""cromwellId"" : ""cromid-fcf9c1d"",; ""heartbeatInterval"" : ""2 minutes"",; ""ttl"" : ""10 minutes"",; ""writeBatchSize"" : 10000,; ""writeThreshold"" : 10000; }; [2018-10-25 21:21:08,59] [info] Metadata summary refreshing every 2 seconds.; [2018-10-25 21:21:08,63] [info] KvWriteActor configured to flush with batch size 200 and process rate 5 seconds.; [2018-10-25 21:21:08,64] [info] CallCacheWriteActor configured to flush with batch size 100 and process rate 3 seconds.; [2018-10-25 21:21:08,64] [info] WriteMetadataActor configured to flush with batch size 200 and process rate 5 seconds.; [2018-10-25 21:21:09,79] [info] JobExecutionTokenDispenser - Distribution rate: 50 per 1 seconds.; [2018-10-25 ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4318:2,test,tested,2,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4318,1,['test'],['tested']
Testability,"I tested this manually by changing the values in the swagger pages and watching the returned `metadataSource` in the response change. I didn't add explicit regression tests for the feature in _this_ PR because:. 1. It's not a production feature, and we're testing the default ""not specified"" case with the existing metadata requests; 2. I anticipate the upcoming ""before vs after"" centaur additions to pretty heavily exercise this functionality",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5430:2,test,tested,2,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5430,3,['test'],"['tested', 'testing', 'tests']"
Testability,"I think I am experiencing a bug in cromwell version 37. The problem occurs when I submit a job to SLURM. The job gets submitted but cromwell crashes without waiting for the job to finish. Cromwell works fine when run locally or when I use version 36. . ## my command ; java is v1.8; ```; java -Dconfig.file=cori.conf -jar cromwell-37.jar run test.wdl ; ```. ## wdl ; ```; workflow jgi_dap_leo {. call doSomething { }. }. task doSomething {; runtime {; mem: ""8G""; cpu: 1; time: ""0:60:0""; backend: ""SLURM""; }; command {; free; }; }; ```. ## config ; ```; include required(classpath(""application"")). system {; job-rate-control {; jobs = 1; per = 1 second; }; }. backend {; default=""Local""; providers {; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; String time; Int cpu; String mem; """""". submit = """"""; sbatch -J leo_dap -t ${time} -c ${cpu} --mem=${mem} -C haswell -q regular -A m342 --wrap ""/bin/bash ${script}""; """"""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; }; }; ```. ## system I'm running on . NERSC's cori machines:; Cray XC40, comprised of Intel Xeon ""Haswell"" processor nodes. ## cromwell logs; [cromwellError.txt](https://github.com/broadinstitute/cromwell/files/2866540/cromwellError.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4651:342,test,test,342,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4651,2,"['log', 'test']","['logs', 'test']"
Testability,"I tried out underscore 1.13.1 to address a [dependabot alert](https://github.com/broadinstitute/cromwell/security/dependabot) for a [CVE](https://github.com/broadinstitute/cromwell/security/dependabot/cwl/src/test/resources/cwl/underscore.js/underscore/open), but unfortunately this crashes with the default `null` value of `self` in CWL. At least for the `template` function, lodash is a drop-in replacement for underscore.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6343:209,test,test,209,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6343,1,['test'],['test']
Testability,"I tried to ask this on the broad forums but got an error.""You need the Garden.Community.Manage permission to do that."", ""Class"": ""Gdn_UserException"" . I have been using a . backend.default = SGE. Line in my config file. This has been working until now, with my jobs submitted using my defined SGE backend. Today I changed some other parts of the server, unrelated and numerous. Now SOME jobs are being submitted on the SGE backend, and some on the Local backend. (I did not configure a local backend, but I assume one is built in to cromwell. How is the backend to run on chosen by cromwell? (I know of backend.default, and I beleive there is a wdl.task.runtime.backend parameter also (undocumented from what I can tell)). How can I prevent any task ever running on the local backend? I want this to be a hard error, and not overload my sge login node. . Thanks",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3533:841,log,login,841,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3533,1,['log'],['login']
Testability,I tried to step through the logic of the terminal-related code and this looks right to me. Granted I'm not a human formal verification tool. 👍,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2457:28,log,logic,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2457,1,['log'],['logic']
Testability,"I used cromwell-38.jar for testing. It looks like outputs from tasks with the same task-name and shard index in different scatter blocks share the same scratch directory in a container. Output files are written on this shared directory and globbed at the end of each task and then moved to S3 bucket together with all text/log files. This can result in globbing of wrong output files (from tasks with the same task-name but different alias).; ```; workflow cromwell_aws_glob_test {; scatter(i in range(2)) {; call t1 { input: i=i, alias = ""t1"" }; }. scatter(i in range(2)) {; call t1 as t2 { input: i=i, alias = ""t2"" }; }; }. task t1 {; Int i; String alias; command {; echo ""${alias},${i}"" > ${alias}-${i}.txt; }; output {; Array[File] outs = glob(""*.txt""); }; }; ```; On the execution directory for task t1 on S3. Everything looks okay. We don't have any t2 things.; ubuntu@ip-172-30-0-96:~/test_cromwell$ aws s3 ls s3://encode-pipeline-test-runs/test2/cromwell_aws_glob_test/d3fb65e0-54d0-495c-8bea-503a91d9dff3/call-t1/shard-0/; PRE glob-ef5df339533c1334f081dc8cc75ee4f3/; 2019-04-11 20:30:54 0; 2019-04-11 20:32:48 30 glob-ef5df339533c1334f081dc8cc75ee4f3.list; 2019-04-11 20:30:54 2238 script; 2019-04-11 20:32:49 2 t1-0-rc.txt; 2019-04-11 20:32:51 0 t1-0-stderr.log; 2019-04-11 20:32:50 0 t1-0-stdout.log. But the glob directory has outputs from task t2.; ubuntu@ip-172-30-0-96:~/test_cromwell$ aws s3 ls s3://encode-pipeline-test-runs/test2/cromwell_aws_glob_test/d3fb65e0-54d0-495c-8bea-503a91d9dff3/call-t1/shard-0/glob-ef5df339533c1334f081dc8cc75ee4f3/; 2019-04-11 20:32:47 277 cromwell_glob_control_file; 2019-04-11 20:32:47 5 t1-0.txt; 2019-04-11 20:32:47 2 t2-0-rc.txt; 2019-04-11 20:32:47 5 t2-0.txt",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4834:27,test,testing,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4834,6,"['log', 'test']","['log', 'test-runs', 'testing']"
Testability,"I want reduce the length of bash command line when perform the joint-genotyping on thousands samples, so that I'm using InitialWorkDirRequirement to create a file path list. Here's the example CWL:; ```; #!/usr/bin/env cwl-runner. cwlVersion: v1.0. class: CommandLineTool. requirements:; - class: InlineJavascriptRequirement; - class: DockerRequirement; dockerPull: quay.io/shenglai/alpine_with_bash:1.0; - class: InitialWorkDirRequirement; listing:; - entryname: ""files.json""; entry: $(inputs.files.basename); inputs:; files: File. outputs:; output:; type: File; outputBinding:; glob: ""files.json"". baseCommand: []; ```; the input is; ```; {; ""files"": {""class"": ""File"", ""path"": ""/mnt/glusterfs/a.file""}; }; ```; the cwltool output `files.json` is. ```; {""basename"":""a.file"",""nameroot"":""a"",""nameext"":"".file"",""location"":""file:///mnt/glusterfs/a.file"",""path"":""/var/lib/cwl/stg1a204114-8318-47ee-b5d0-7454ab87f7df/a.file"",""dirname"":""/var/lib/cwl/stg1a204114-8318-47ee-b5d0-7454ab87f7df"",""class"":""File"",""size"":0}; ```. the cromwell one is; ```; {""nameext"":"".file"",""location"":""/mnt/glusterfs/a.file"",""path"":""/mnt/glusterfs/a.file"",""size"":0,""dirname"":""/mnt/glusterfs"",""secondaryFiles"":[],""basename"":""a.file"",""class"":""File"",""nameroot"":""a""}; ```. As you can see, from cwltool, it actually returns a mapped path under `path`, so the later docker command can pick that up.; On the other hand, cromwell only returns the host path, which can not be found in docker. I only tested the piece with SLURM. I would assume it also fails on local run.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4533:1461,test,tested,1461,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4533,1,['test'],['tested']
Testability,"I was running through the tutorial, https://cromwell.readthedocs.io/en/develop/tutorials/ServerMode/. I typed the inputs.json file with a tab instead of spaces. ```curl -X POST http://localhost:8000/api/workflows/v1 -F workflowSource=@hello.wdl -F workflowInputs=@inputs.json```. ```; {; ""status"": ""fail"",; ""message"": ""Error(s): Input file is not valid yaml nor json: while scanning for the next token\nfound character '\\t(TAB)' that cannot start any token. (Do not use \\t(TAB) for indentation)\n in 'reader', line 2, column 1:\n \t\""test.hello.name\"": \""World\""\n ^\n""; }; ```. However per the JSON spec, tabs, or any whitespace, ""can be inserted between any pair of tokens"" https://www.json.org/. Python:; ```; json.loads(""{\n\t\""valid\"":\""json\""\n}""); ```. Sadly I do not know Java very well or I would just check and or fix whichever parser you are using. Thanks",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3487:536,test,test,536,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3487,1,['test'],['test']
Testability,I was trying to restart a cromwell instance on server mode after modified config file. but the log was:; `2023-07-05 08:21:07 cromwell-system-akka.actor.default-dispatcher-25 ERROR - Bind failed for TCP channel on endpoint [/10.10.200.221:8000]`; Is there any way to stop an exist instance or restart it by API or something can automate by script.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7170:95,log,log,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7170,1,['log'],['log']
Testability,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2041:257,log,logs,257,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041,1,['log'],['logs']
Testability,I'm aware that there are no unit tests and that there's some serious placeholder (e.g. there's no way to get a workflow's status). Putting this out here now to start iterating on comments sooner than later.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/16:33,test,tests,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/16,1,['test'],['tests']
Testability,"I'm going to merge https://github.com/broadinstitute/wdl4s/pull/175 in case people are waiting for it, but I still need to ungrossify some of the CWL stuff. I think that's going to be better addressed in a later PR so it gets the attention it will need in PR. Specifically:; - [x] Uncomment the two tests in `CWLWorkflowWomSpec.scala`; - [ ] Remove the `.getOrElse(???)` in `WorkflowStep.scala`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2556:299,test,tests,299,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2556,1,['test'],['tests']
Testability,"I'm not sure which of the many possible reasons is causing this. Try running https://github.com/broadinstitute/centaur/blob/cjl_define_defined/src/main/resources/standardTestCases/defined_function/defined_function.wdl after un-commenting the defined_in_task lines. You would expect to see `dit_out` have the value `[""file_0"", ""no file"", ""file_2"", ""no file""]` but instead get `[""no file"", ""no file"", ""no file"", ""no file""]`. - [ ] Make this work; - [ ] Re-enable the rest of the test lines; - [ ] Add correct expectations to the centaur test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1982:477,test,test,477,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1982,2,['test'],['test']
Testability,"I'm noticing that in the outputs section of a task, that the basename is automatically applied. For example, running the following workflow:. ```wdl; version development. task basenametest {; input {; 	File inp; }. command <<<; echo '~{basename(inp)}'; >>>; ; output {; String outname = inp; String outbasename = basename(inp); String out = read_string(stdout()); }; }; ```. with:. ```bash; echo '{""inp"": ""inputs.json""}' >> inputs.json; java -jar cromwell-52.jar run basenametest.wdl --inputs ""inputs.json""; ```. I receive the output:. ```json; {; ""outputs"": {; ""escapetest.outname"": ""test.bam"",; ""escapetest.out"": ""test.bam"",; ""escapetest.outbasename"": ""test.bam""; },; ""id"": ""<id>""; }; ```. ---. I think this might be logical, but differs from the spec and MiniWDL. I've put a message in the OpenWDL slack for clarification, but through me off a bit.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5785:585,test,test,585,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5785,4,"['log', 'test']","['logical', 'test']"
Testability,"I'm running a WDL workflow using Cromwell AWS in run mode. I noticed that workflow level log that is generated is actually on the local disk where the workflow is running. The final workflow log is not being copied over to S3. Also, if I provide a s3 path in `workflow-log-dir`, it will just create a folder locally. Is there a way to get the workflow log copied over to s3 automatically after the workflow is finished?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4446:89,log,log,89,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4446,4,['log'],"['log', 'log-dir']"
Testability,"I'm running a pipeline and for some of the tasks, sometime I get the following error:. `[E::hts_open_format] Failed to open file ...`. What I find weird is that if I re-run it, it runs successfully. It looks a ""stochastic"" error. Below you can find the full logs for that task and, as you can see, the file was successfully localized. ```; timestamp,message; 1608596940672,*** LOCALIZING INPUTS ***; 1608596942260,download: s3://focal-gwf-core/cromwell-execution/GATKSVPipelineSingleSample/41bca0c7-e664-486c-8c40-52fd6cfb0636/call-Module00c/Module00c/7d4766c9-ce90-47ed-b14e-7c68055d8b1c/call-EvidenceMerging/EvidenceMerging/4eaf013d-9a23-49ef-bd67-4e88965c2e01/call-SetSampleIdSR/shard-47/cacheCopy/SR00c.HG02019.txt.gz.tbi to focal-gwf-core/cromwell-execution/GATKSVPipelineSingleSample/41bca0c7-e664-486c-8c40-52fd6cfb0636/call-Module00c/Module00c/7d4766c9-ce90-47ed-b14e-7c68055d8b1c/call-EvidenceMerging/EvidenceMerging/4eaf013d-9a23-49ef-bd67-4e88965c2e01/call-SetSampleIdSR/shard-47/cacheCopy/SR00c.HG02019.txt.gz.tbi; 1608596944807,download: s3://focal-gwf-core/cromwell-execution/GATKSVPipelineSingleSample/41bca0c7-e664-486c-8c40-52fd6cfb0636/call-Module00c/Module00c/7d4766c9-ce90-47ed-b14e-7c68055d8b1c/call-EvidenceMerging/EvidenceMerging/4eaf013d-9a23-49ef-bd67-4e88965c2e01/call-SetSampleIdSR/shard-81/cacheCopy/SR00c.HG03449.txt.gz to focal-gwf-core/cromwell-execution/GATKSVPipelineSingleSample/41bca0c7-e664-486c-8c40-52fd6cfb0636/call-Module00c/Module00c/7d4766c9-ce90-47ed-b14e-7c68055d8b1c/call-EvidenceMerging/EvidenceMerging/4eaf013d-9a23-49ef-bd67-4e88965c2e01/call-SetSampleIdSR/shard-81/cacheCopy/SR00c.HG03449.txt.gz; 1608596946491,download: s3://focal-gwf-core/cromwell-execution/GATKSVPipelineSingleSample/41bca0c7-e664-486c-8c40-52fd6cfb0636/call-Module00c/Module00c/7d4766c9-ce90-47ed-b14e-7c68055d8b1c/call-EvidenceMerging/EvidenceMerging/4eaf013d-9a23-49ef-bd67-4e88965c2e01/call-SetSampleIdSR/shard-94/cacheCopy/SR00c.HG03789.txt.gz.tbi to focal-gwf-core/cromwell-ex",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6141:258,log,logs,258,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6141,1,['log'],['logs']
Testability,"I'm running on the local backend with the mySQL database. It's taking Cromwell 10 minutes to process call caching. Relevant portion of the run log:. ```; [2023-03-29 12:24:32,94] [info] BT-322 b303ae23:expanse_figures.CBL_hom_not_SNP_assoc:-1:1 is eligible for call caching with read = true and write = true; [2023-03-29 12:24:32,94] [info] BT-322 b303ae23:expanse_figures.CBL_assoc:-1:1 is eligible for call caching with read = true and write = true; [2023-03-29 12:24:32,97] [info] BT-322 b303ae23:expanse_figures.CBL_hom_SNP_assoc:-1:1 is eligible for call caching with read = true and write = true; [2023-03-29 12:35:42,07] [warn] b303ae23-e1e5-4cde-832b-70114e9efdad-BackendCacheHitCopyingActor-b303ae23:expanse_figures.CBL_hom_SNP_assoc:-1:1-20000000023 [b303ae23expanse_figures.CBL_hom_SNP_assoc:NA:1]: Unrecognized runtime attribute keys: shortTask, dx_timeout; [2023-03-29 12:35:42,07] [info] BT-322 b303ae23:expanse_figures.CBL_hom_SNP_assoc:-1:1 cache hit copying success with aggregated hashes: initial = B4BFDDD19BC42B30ED73AB035F6BF1DE, file = 93DAD89F707FA490E2A46FFAC924DFFF.; [2023-03-29 12:35:42,07] [info] b303ae23-e1e5-4cde-832b-70114e9efdad-EngineJobExecutionActor-expanse_figures.CBL_hom_SNP_assoc:NA:1 [b303ae23]: Call cache hit process had 0 total hit failures before completing successfully; [2023-03-29 12:35:42,08] [warn] b303ae23-e1e5-4cde-832b-70114e9efdad-BackendCacheHitCopyingActor-b303ae23:expanse_figures.CBL_hom_not_SNP_assoc:-1:1-20000000024 [b303ae23expanse_figures.CBL_hom_not_SNP_assoc:NA:1]: Unrecognized runtime attribute keys: shortTask, dx_timeout; [2023-03-29 12:35:42,08] [info] BT-322 b303ae23:expanse_figures.CBL_hom_not_SNP_assoc:-1:1 cache hit copying success with aggregated hashes: initial = B4BFDDD19BC42B30ED73AB035F6BF1DE, file = EA2DED52B795D0B2EA5091B00E8F7A88.; [2023-03-29 12:35:42,08] [info] b303ae23-e1e5-4cde-832b-70114e9efdad-EngineJobExecutionActor-expanse_figures.CBL_hom_not_SNP_assoc:NA:1 [b303ae23]: Call cache hit process had 0 total",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7108:143,log,log,143,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7108,1,['log'],['log']
Testability,"I'm running the ENCODE ATAC SEQ pipeline [https://github.com/ENCODE-DCC/atac-seq-pipeline.git](url) on a SGE cluster.; We don't allow hard-links in my facility (beegfs filesystem). Therefore I've been trying to use the localization parameters in the cromwell configuration file but to no avail. The backend file is being used since I can get errors message by putting non supported keyword in the localization array. I've been trying it with different version of CROMWELL (30.2, 31, 32, 32). Here is the script generated by cromwell based on my WDL file :. ```cd /sandbox/users/foucal-a/test_atac-pipe/cromwell-executions/atac/f4fd93fa-6f3a-42a6-94f2-459901d245c4/call-trim_adapter/shard-0/execution; # make the directory which will keep the matching files; mkdir /sandbox/users/foucal-a/test_atac-pipe/cromwell-executions/atac/f4fd93fa-6f3a-42a6-94f2-459901d245c4/call-trim_adapter/shard-0/execution/glob-4f26c666d13d1cb48973da7f646a7de2. # symlink all the files into the glob directory; ( ln -L merge_fastqs_R?_*.fastq.gz /sandbox/users/foucal-a/test_atac-pipe/cromwell-executions/atac/f4fd93fa-6f3a-42a6-94f2-459901d245c4/call-trim_adapter/shard-0/execution/glob-4f26c666d13d1cb48973da7f646a7de2 2> /dev/null ) || ( ln merge_fastqs_R?_*.fastq.gz /sandbox/users/foucal-a/test_atac-pipe/cromwell-executions/atac/f4fd93fa-6f3a-42a6-94f2-459901d245c4/call-trim_adapter/shard-0/execution/glob-4f26c666d13d1cb48973da7f646a7de2 ). # list all the files that match the glob into a file called glob-[md5 of glob].list; ls -1 /sandbox/users/foucal-a/test_atac-pipe/cromwell-executions/atac/f4fd93fa-6f3a-42a6-94f2-459901d245c4/call-trim_adapter/shard-0/execution/glob-4f26c666d13d1cb48973da7f646a7de2 > /sandbox/users/foucal-a/test_atac-pipe/cromwell-executions/atac/f4fd93fa-6f3a-42a6-94f2-459901d245c4/call-trim_adapter/shard-0/execution/glob-4f26c666d13d1cb48973da7f646a7de2.list; ```; I have the error when the script tries to symlink all the files into the glob directory.; Here is the WDL code : ; ```; ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3876:564,sandbox,sandbox,564,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3876,2,['sandbox'],['sandbox']
Testability,"I'm seeing tons of these info logging messages from the checkpointing system (shown below). Is there a way to turn them off or set them to a 'debug' rather than an 'info' logging level?. [2021-05-06 08:27:27,34] [info] Checkpoint start; [2021-05-06 08:27:27,34] [info] checkpointClose start; [2021-05-06 08:27:27,34] [info] checkpointClose synched; [2021-05-06 08:27:27,34] [info] checkpointClose script done; [2021-05-06 08:27:27,34] [info] dataFileCache commit start; [2021-05-06 08:27:27,34] [info] dataFileCache commit end; [2021-05-06 08:27:27,36] [info] checkpointClose end; [2021-05-06 08:27:27,36] [info] Checkpoint end - txts: 6340; [2021-05-06 08:27:27,36] [info] Checkpoint start; [2021-05-06 08:27:27,36] [info] checkpointClose start; [2021-05-06 08:27:27,36] [info] checkpointClose synched; [2021-05-06 08:27:27,37] [info] checkpointClose script done; [2021-05-06 08:27:27,37] [info] dataFileCache commit start; [2021-05-06 08:27:27,37] [info] dataFileCache commit end; [2021-05-06 08:27:27,39] [info] checkpointClose end; [2021-05-06 08:27:27,39] [info] Checkpoint end - txts: 6347; [2021-05-06 08:27:27,39] [info] Checkpoint start; [2021-05-06 08:27:27,39] [info] checkpointClose start; [2021-05-06 08:27:27,39] [info] checkpointClose synched; [2021-05-06 08:27:27,39] [info] checkpointClose script done; [2021-05-06 08:27:27,39] [info] dataFileCache commit start; [2021-05-06 08:27:27,39] [info] dataFileCache commit end; [2021-05-06 08:27:27,41] [info] checkpointClose end; [2021-05-06 08:27:27,41] [info] Checkpoint end - txts: 6349; [2021-05-06 08:27:27,41] [info] Checkpoint start; [2021-05-06 08:27:27,41] [info] checkpointClose start; [2021-05-06 08:27:27,41] [info] checkpointClose synched; [2021-05-06 08:27:27,41] [info] checkpointClose script done; [2021-05-06 08:27:27,41] [info] dataFileCache commit start; [2021-05-06 08:27:27,41] [info] dataFileCache commit end; [2021-05-06 08:27:27,42] [info] checkpointClose end; [2021-05-06 08:27:27,42] [info] Checkpoint end - txts: ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6337:30,log,logging,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6337,2,['log'],['logging']
Testability,"I'm still hoping to add some metrics around this, but ""log if metadata is dropped"" seems like it could be a valuable ""really quick win""?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4837:55,log,log,55,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4837,1,['log'],['log']
Testability,"I've been working on testing the AWS Batch Cromwell support, following documentation from @wleepang (https://docs.opendata.aws/genomics-workflows) in the CWL hackathon with @cjllanwarne and @aednichols. The workflow is a small test with everything in an S3 bucket:; ; https://github.com/bcbio/test_bcbio_cwl/tree/master/aws. I'm happy to report that I made good progress and have bcbio-vm using CloudFormation templates to setup the Cromwell batch ready AMI and AWS Batch requirements. I can then generate the right Cromwell AWS configuration and launch jobs to AWS batch. I see them get submitted, EC2 resources get spun up and jobs get queued and run. Awesome. When they're all ready and prepped to run, the instances fail with not finding the `cwl.inputs.json` file staged into the working directory:; ```; [2019-01-25 13:53:43,03] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10prep_samples_to_rec:NA:1]: Status change from Initializing to Running; [2019-01-25 13:53:59,61] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10alignment_to_rec:NA:1]: Status change from Initializing to Running; [2019-01-25 13:58:25,58] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10alignment_to_rec:NA:1]: Status change from Running to Failed; [2019-01-25 13:58:39,11] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10prep_samples_to_rec:NA:1]: Status change from Running to Failed; [2019-01-25 13:58:40,06] [error] WorkflowManagerActor Workflow 2c2e5a10-8c57-4f9f-8d80-c2fccacbb452 failed (during ExecutingWorkflowState): Job alignment_to_rec:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-alignment_to_rec/alignment_to_rec-stderr.log.; Traceback (most recent call last):; File ""/usr/local/bin/bcbio_nextgen.py"", lin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4586:21,test,testing,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4586,2,['test'],"['test', 'testing']"
Testability,ID-377 Add drshub consumer test url resolution,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7142:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7142,1,['test'],['test']
Testability,ID-377 Setup pact for consumer contract testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7123:40,test,testing,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7123,1,['test'],['testing']
Testability,ID-377 Setup pact for consumer contract testing. Retry,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7147:40,test,testing,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7147,1,['test'],['testing']
Testability,"INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib/WorkflowInitializationActor-fd304efe-2bba-4859-9ffd-6ef7d4ae29d5] State is now terminal. Shutting down.; [WARN] [06/02/2016 19:49:46.381] [test-system-akka.actor.default-dispatcher-3] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$ib]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.495] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$kb] $$kb transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [WARN] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$kb]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb/WorkflowInitial",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:1714,test,test-system,1714,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,1,['test'],['test-system']
Testability,IO logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5984:3,log,logging,3,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5984,1,['log'],['logging']
Testability,IO logging: print error message,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5989:3,log,logging,3,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5989,1,['log'],['logging']
Testability,"IR=""$tmpDir""; export HOME=""$HOME""; (; cd /cromwell_root. ); (; cd /cromwell_root. set -ex -o pipefail. if [ -d /mnt/tmp ]; then; TMPDIR=/mnt/tmp; fi; FLOWCELL_DIR=$(mktemp -d). read_utils.py extract_tarball \; /Volumes/nextseq_ngs/180405_NB501680_0019_AHKGNJBGX5.tar.lz4 $FLOWCELL_DIR \; --loglevel=DEBUG. # find 95% memory; mem_in_mb=`/opt/viral-ngs/source/docker/mem_in_mb_95.sh`. # note that we are intentionally setting --threads to about 2x the core; # count. seems to still provide speed benefit (over 1x) when doing so.; illumina.py illumina_demux \; $FLOWCELL_DIR \; 1 \; . \; \; \; --outMetrics=metrics.txt \; --commonBarcodes=barcodes.txt \; \; \; --max_mismatches=1 \; \; \; \; --minimum_quality=10 \; \; --JVMmemory=""$mem_in_mb""m \; --threads=64 \; --compression_level=5 \; --loglevel=DEBUG. rm -f Unmatched.bam; for bam in *.bam; do; fastqc_out=$(basename $bam .bam)_fastqc.html; reports.py fastqc $bam $fastqc_out; done; ) > '/cromwell_root/illumina_demux-stdout.log' 2> '/cromwell_root/illumina_demux-stderr.log'; echo $? > /cromwell_root/illumina_demux-rc.txt.tmp; (; # add a .file in every empty directory to facilitate directory delocalization on the cloud; cd /cromwell_root; find . -type d -empty -print | xargs -I % touch %/.file; ); (; cd /cromwell_root; sync; # make the directory which will keep the matching files; mkdir /cromwell_root/glob-3bcbe4e7489c90f75e0523ac6f3a9385. # create the glob control file that will allow for the globbing to succeed even if there is 0 match; echo ""This file is used by Cromwell to allow for globs that would not match any file.; By its presence it works around the limitation of some backends that do not allow empty globs.; Regardless of the outcome of the glob, this file will not be part of the final list of globbed files."" > /cromwell_root/glob-3bcbe4e7489c90f75e0523ac6f3a9385/cromwell_glob_control_file. # symlink all the files into the glob directory; ( ln -L *.bam /cromwell_root/glob-3bcbe4e7489c90f75e0523ac6f3a9385 2> /dev/null )",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:16367,log,log,16367,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['log']
Testability,"Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:1587,test,tests,1587,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,1,['test'],['tests']
Testability,"If a WDL task generates a file with a space in its name, and that file is an output, Cromwell fumbles the outputs and throws an error (at least on GCP-Terra!Cromwell). Additionally, this doesn't seem to be logged clearly. This workflow takes in a bunch of BioSample accessions, downloads their associated run FASTQs, and processes them. https://dockstore.org/workflows/github.com/aofarrel/myco/myco_sra:4.1.2?tab=files. During one run, I accidentally passed in a file of BioSample accessions which had two spaces before each accession, eg; ```; SAMEA104027315; SAMEA104027345; SAMEA104027406; SAMEA104164787; SAMEA104172469; SAMEA104172474; SAMEA104172508; SAMEA104221066; SAMEA104362398; SAMEA104394395; SAMEA104394505; SAMEA104414628; SAMEA104446901; ```. The workflow is scattered per BioSample, so one instance of the scattered task takes in ` SAMEA104027315` as the input `biosample_accession` (type String). The task writes a file like this:. ```; echo ""~{biosample_accession}"" >> ~{biosample_accession}_pull_results.txt; ```; eg ` SAMEA104027315_pull_results.txt`. The workflow output section contains:. ```; String results = read_string(""~{biosample_accession}_pull_results.txt""); ```. eg ` SAMEA104027315_pull_results.txt`, same as what's in the command section. . In the task level logs, I see . ```; 2023/04/18 21:54:34 Starting delocalization.; 2023/04/18 21:54:35 Delocalization script execution started...; 2023/04/18 21:54:35 Delocalizing output /cromwell_root/memory_retry_rc -> gs://fc-caa84e5a-8ef7-434e-af9c-feaf6366a042/submissions/93bf6971-bfa1-4cb8-bb22-c8a753f58c49/myco/10fa31a8-acbe-4ab7-a96a-6550ec08df12/call-pull/shard-0/memory_retry_rc; 2023/04/18 21:54:37 Delocalizing output /cromwell_root/rc -> gs://fc-caa84e5a-8ef7-434e-af9c-feaf6366a042/submissions/93bf6971-bfa1-4cb8-bb22-c8a753f58c49/myco/10fa31a8-acbe-4ab7-a96a-6550ec08df12/call-pull/shard-0/rc; 2023/04/18 21:54:39 Delocalizing output /cromwell_root/stdout -> gs://fc-caa84e5a-8ef7-434e-af9c-feaf6366a042/submis",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7121:206,log,logged,206,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7121,1,['log'],['logged']
Testability,"If a java.util.concurrent.ExecutionException, check if it has an inner cause that is actually fatal.; Pre-update to SBT 1.x.; The cromwell multi-project with SBT 1.x consumes a lot of memory. To avoid OOME:; - Bump IntelliJ from 768 to something like 1786.; - Bump .sbtopts to something like 3072. Build updates while prepping fo sbt version bump, including using sbt-doge temporarily for simplified SBT 0.13 cross version build syntax.; DRYed out a bit of the module dependency graph.; Publish hotfix libraries, not just executables.; Replaced deprecated commons-lang with commons-text replacements.; Fixed test class errantly nested within its companion object.; Fixed test that was only liquibasing metadata, and not the original database.; Removed unused TestActorSystem.; Fixed missing test in ""common"".; Removed old ""common"" sbt files.; Cleaner version of assembly.; SwaggerUI injected into the cromwell-version.conf, so it only needs to be editted in one place.; Replaced usage of 'sbt ""project foo"" sometask' with 'sbt foo/sometask'.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2821:608,test,test,608,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2821,4,"['Test', 'test']","['TestActorSystem', 'test']"
Testability,"If running the script fails, printing out the tail of the logs.; Modified `CromwellTestkitSpec` and `SampleWdl.HelloWorld` to pass custom runtimes.; DSDEEPB-1331",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/200:58,log,logs,58,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/200,1,['log'],['logs']
Testability,"If someone wants to see these kinds messages, they can change the configuration of akka (see http://doc.akka.io/docs/akka/current/java/logging.html#Auxiliary_logging_options), instead. - went through the `whenUnhandled` handlers and removed logging calls that had no or very little info; - removed one test that was associated with one of those logs",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4260:135,log,logging,135,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4260,4,"['log', 'test']","['logging', 'logs', 'test']"
Testability,"If this PR feels like déjà vu, it's because these are the same changes as #6474 with [a different branch name](https://github.com/broadinstitute/cromwell/pull/6474#issuecomment-1081217208). ---. - Bypass aging Scala Mockito wrappers with new custom wrapper, mostly; - For hard to port Mockito wrappers instead use Java API; - Only run ScalaTest, not Specs2 nor ScalaCheck; - Ported generator specs to scalatestplus-scalacheck; - Unignored and fixed up tests taggeed with PostWomTest; - Turned off ScalaTest HTML reports & removed out of date rendering dependencies",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6735:216,Mock,Mockito,216,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6735,3,"['Mock', 'test']","['Mockito', 'tests']"
Testability,"If you use the example in the docs at https://github.com/broadinstitute/cromwell#database. you'll get a warning:. `Move the configuration directly under the 'database' element, and remove the key 'database.config'.`. The docs should be updated. Below is the config given in the readme. database {; config = main.mysql. main {; mysql {; db.url = ""jdbc:mysql://localhost:3306/cromwell""; db.user = ""root""; db.password = """"; db.driver = ""com.mysql.jdbc.Driver""; db.connectionTimeout = 5000 # NOTE: The default 1000ms is often too short for production mysql use; driver = ""slick.driver.MySQLDriver$""; }; }. test {; ...; }; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1730:602,test,test,602,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1730,1,['test'],['test']
Testability,Ignore broken CRON tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3272:19,test,tests,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3272,1,['test'],['tests']
Testability,Ignore locally broken test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1675:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1675,1,['test'],['test']
Testability,Ignore refresh token tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4502:21,test,tests,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4502,1,['test'],['tests']
Testability,Ignore that failing PAPIv1 test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4948:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4948,1,['test'],['test']
Testability,Ignore valid new values when asserting against JM metadata pulls [CROM-6740],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6467:29,assert,asserting,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6467,1,['assert'],['asserting']
Testability,"Im testing moving LSAPI runs to Batch with v86, and I keep getting the following error:. textPayload: ""docker: invalid spec: /mnt/disks/cromwell_root:/mnt/disks/cromwell_root:: empty section between colons."". for this command:; Executing runnable container:{image_uri:""gcr.io/google.com/cloudsdktool/cloud-sdk:434.0.0-alpine"" commands:""-c"" commands:""printf '%s %s\\n' \""$(date -u '+%Y/%m/%d %H:%M:%S')\"" Starting\\ container\\ setup."" entrypoint:""/bin/sh"" volumes:""/mnt/disks/cromwell_root:/mnt/disks/cromwell_root:""} timeout:{seconds:300} labels:{key:""logging"" value:""ContainerSetup""} for Task task/job-49cc8a88-722b-43067ba4-ab34-48bc00-group0-0/0/0 in TaskGroup group0 of Job job-49cc8a88-722b-43067ba4-ab34-48bc00. The docker volumes are defined as:; volumes:""/mnt/disks/cromwell_root:/mnt/disks/cromwell_root:""}. Shouldn't there be a rw permissions entry after the last colon? As far as I know, there is no way for users to modify the docker launch config to fix this. Is there something I have malformed or missing in my conf file?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7408:3,test,testing,3,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7408,2,"['log', 'test']","['logging', 'testing']"
Testability,"Implement any necessary logic to calculate hashes. Follow the pattern of the FileHasherActor: The EJHA creates an actor which can make the hash. This actor sends each hash result back to the EngineJobHashingActor individually and lets it do the magic of combining everything together.; - [x] command string (one of the initial hashes in `EJHA`); - [x] all outputs expressions (one of the initial hashes in `EJHA`); - [x] all non-file inputs (included in the set of initial hashes in `EJHA`); - [x] dockerhub/GCR hash (`EngineDockerHashingActor`) or docker name (tuple3 of (namespace, repository, tag, one of the initial hashes in `EJHA`) depending on configuration; - [x] runtime attributes (`BackendRuntimeAttributeHashingActor`); - [x] file inputs (`FileHasherActor`, and onwards to GCS, SFS specific `XYZFileHasherActor`s)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1230:24,log,logic,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1230,1,['log'],['logic']
Testability,Implement basic soak test for Cromwell,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1822:21,test,test,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822,1,['test'],['test']
Testability,Implement scatter execution and re-organize Execution related code; - [x] Write engine scatter test; - [ ] Write more ?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/818:95,test,test,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/818,1,['test'],['test']
Testability,Implement workflow logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/814:19,log,logging,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/814,1,['log'],['logging']
Testability,Implemented cromwell consumer test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7251:30,test,test,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7251,1,['test'],['test']
Testability,"Implements HybridMetadataReadDecider logic from https://docs.google.com/document/d/1VYnzk97yTtllozO9ivZpZQTwrsY5T0wGqxlvAbrEQgg/edit#bookmark=id.mwkzc5gtae81. * Asks classic metadata service for archive status ; * Depending on the response, forwards the original query to either the classic or carbonite metadata service",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5205:37,log,logic,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5205,1,['log'],['logic']
Testability,"Imports of local files seem to be broken in the development version of cromwell. The paths to the imported wdl files seem to be expected to be absolute paths. Any relative path is treated as relative to the root directory of the system. . For example:; In the following workflow, test.wdl is imported. If test.wdl is located in the same directory as this workflow it can't be found (`/home/<various directories>/test/test.wdl`), however, if test.wdl is located in the root directory it will be found (`/test.wdl`).; ```; version 1.0. import ""test.wdl"" as test. workflow test2 {; call test.sayHello as blah {; input:; name=""Grog""; }. output {; String out = blah.blah; }; }; ```; test.wdl looks like this:; ```; version 1.0. task sayHello {; input {; String name; }. command {; echo Hello, ~{name}; }. output {; String blah = read_string(stdout()); }; }; ```; The following is mentioned in the printed output:; ```; Failed to import 'test.wdl' (reason 1 of 2): Failed to resolve 'test.wdl' using resolver: 'relative to directory / (without escaping None)' (reason 1 of 1): Import file not found: test.wdl; Failed to import 'test.wdl' (reason 2 of 2): Failed to resolve 'test.wdl' using resolver: 'http importer' (reason 1 of 1): Cannot import 'test.wdl' relative to nothing; ```; Looking at the cromwell source code I suspect the problem lies with the directory path being given to `DirectoryResolver` in `localFilesystemResolvers` ([this line](https://github.com/broadinstitute/cromwell/blob/develop/engine/src/main/scala/cromwell/engine/workflow/lifecycle/materialization/MaterializeWorkflowDescriptorActor.scala#L271)). <!--; Hi! Thanks for taking the time to report feedback. Before posting an issue here, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-fi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3986:280,test,test,280,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3986,12,['test'],['test']
Testability,Improve AWS Integration:. - Docker Hub Authentication; - awsBatchRetryAttempts; - ulimits; - Call Caching with ECR private ([geertvandeweyer](https://github.com/geertvandeweyer) and [markjschreiber](https://github.com/markjschreiber/cromwell/)); - revised localization functions to improve stability ([geertvandeweyer](https://github.com/geertvandeweyer)); - Extra failure handling for Batch ([geertvandeweyer](https://github.com/geertvandeweyer)); - AWS/Batch error handling improvements ([geertvandeweyer](https://github.com/geertvandeweyer)); - Correct retry logic for spot kills ([geertvandeweyer](https://github.com/geertvandeweyer)); - handling of very rare early/late job killing ([geertvandeweyer](https://github.com/geertvandeweyer)); - Sychronize multipart uploads between callcache and jobscripts ([geertvandeweyer](https://github.com/geertvandeweyer)),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6835:562,log,logic,562,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6835,1,['log'],['logic']
Testability,Improve DRS Localizer error logging [WA-373],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5908:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5908,1,['log'],['logging']
Testability,"Improved ""error 10"" tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5101:20,test,tests,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5101,1,['test'],['tests']
Testability,"Improves our ""munge this NIO path string into what Cromwell expects"" logic to handle paths that were initially passed into the Azure NIO library as full `http://` paths. I also added a config path (unpublished, intended for devs only) for passing a token through to TES requests. This enables us to locally submit work to a TES server in a (modified to expose TES) instance of the Azure app.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7138:69,log,logic,69,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7138,1,['log'],['logic']
Testability,"In 0.22 you could have something like this in config backend:; ```; runtime_attributes = """"""; String? pbs_email; """"""; ```; And then reference `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(T",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1765:896,test,testMe,896,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765,2,['test'],['testMe']
Testability,"In Cromwell 29, having a ':' character present in the filename of a non-glob task output results in a workflow failure. It does not matter whether this is hard-coded or simply in the filename. . `WorkflowManagerActor Workflow 1356670a-cea2-45b7-a9c4-e379dc601f9f failed (during ExecutingWorkflowState): Could not evaluate A.out = ""A:out""; java.lang.RuntimeException: Could not evaluate A.out = ""A:out""`. This is reproducible with the following wdl:; ```; workflow colon_filename{; 	call A {}; }. task A{; 	command{; 		echo ""testing"" > A:out; 	}; 	output{; 		File out = ""A:out""; 	}; }. ```; Task A completes normally with return code 0 and creates the file A:out. . I expected this workflow to complete normally without error. . Workaround; -; I have an acceptable workaround where I simply replace all ':' characters with '-'.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2919:524,test,testing,524,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2919,1,['test'],['testing']
Testability,"In Google Compute Engine, one can create custom networks and even delete the default network. ; Docs: https://cloud.google.com/vpc/docs/using-vpc; List of networks: https://console.cloud.google.com/networking/networks/list. This is commonly done for projects that have high security requirements to enforce firewalls etc. The ability to specify a network where operations are created is supported in v2alpha1, but there is no place to specify it in Cromwell (which always uses the ""default"" network). AC: Add an option to Cromwell's global config where a user can specify the VPC network name, for the PAPI v2 backend. This would override the current ""default"" network used by Cromwell. Testing Criteria:; - Confirm that Cromwell honors using a non-default network when specified via the config.; - If the network name specified doesn't exist, the error returned to the user contains information about 1) a link to documentation on how to create a network and 2) how to confirm a network exists through the cloud console.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4017:687,Test,Testing,687,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4017,1,['Test'],['Testing']
Testability,"In PR #2925, the `no_new_calls` test sometimes generates a cromwell log [message](https://github.com/broadinstitute/cromwell/blob/c6ed64617c51c572863b87d324fa8e68fa085b1a/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/WorkflowExecutionActor.scala#L118-L121):. > Cromwell server was restarted while this workflow was running. As part of the restart process, Cromwell attempted to reconnect to this job, however it was never started in the first place. This is a benign failure and not the cause of failure for this workflow, it can be safely ignored. This occurs when cromwell is restarted while `shouldSucceed` is still running. `shouldSucceed` finishes, and then a `Restarting calls: no_new_calls.delayedTask:NA:1` is generated, even though `boundToFail` has already failed and NoNewCalls should be started. The easiest way to reproduce this locally and see the delay is to increase the sleep in the wdl from 100 to something like 300 (five minutes). FYI if cromwell is not restarted, `delayedTask` does not start, does not fail, and does not have a metadata stanza for the call.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2926:32,test,test,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2926,2,"['log', 'test']","['log', 'test']"
Testability,"In WDL 1.0, variables defined in nested if-statements are ""doubly optional"" (`Int??`) and break `select_first()`. Note that the degree of optionality maxes out at two, regardless of how deep the nesting is. This workflow is fine; ```; workflow Test {. Int a = 5. if (true) {; if (true) {; if (true) {; Int b = 5; }; }; }. Int c = select_first([a, b]); }; ```; but this one fails; ```; version 1.0. workflow Test {. Int a = 5. if (true) {; if (true) {; if (true) {; Int b = 5; }; }; }. Int c = select_first([a, b]); }; ```; with error; ```; Failed to process workflow definition 'Test' (reason 1 of 1):; Failed to process declaration 'Int c = select_first([a, b])' (reason 1 of 1):; Cannot coerce expression of type 'Int??' to 'Int'; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3766:244,Test,Test,244,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3766,3,['Test'],['Test']
Testability,"In a case where a very large amount of metadata needs to be written at the same time, even with batching, it can take a significant amount of time for the DB to absorb it, in which case the eventual consistency can be of several minutes.; A pathological test case with a 200K wide scatter, all finishing at the same time but with minimal metadata entries to be written (1 input, no output, not backend execution events), can take around 15 minutes after the workflow finished to be reported as ""Done"" in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2086:254,test,test,254,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2086,1,['test'],['test']
Testability,"In a conformance test and the wild we've seen expressions such as:. `$(self.nameroot).idx6$(self.nameext)` seen [here](https://github.com/common-workflow-language/common-workflow-language/blob/3b747ab973fd05b663182fd1b166bcd114d7d569/v1.0/v1.0/search.cwl#L40).; `$(runtime.outdir)/output.vcf.gz` seen in MuTect2.; ; The spec has a couple discrepancies: ; * String interpolation (a.k.a. ""Template literals"") is a feature in ECMAScript 6, whereas the spec designates 5.1 as the supported version.; * String interpolation is performed using braces, and not parens. In other words **it appears as though this is not valid ECMAScript**.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3196:17,test,test,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3196,1,['test'],['test']
Testability,"In a conversation with @hjfbynara he referenced seeing an issue a few more times which had come up in the past. I remembered that @kshakir posted the following in slack and wanted to capture it for posterity here:. the firecloud thingy is “worked around”. cromwell 1 and 2 were restarted, and both started running jobs again. ruchi and I glanced at the supervision in the CromwellRootActor of the WorkflowStoreActor, and didn’t see anything special that would catch 100% of errors*. However— it was only a hypothesis that the WorkflowStoreActor was dead, as doug and henry reported little to no cpu activity from cromwell if I recall correctly. * The WorkflowStoreActor appears to be supervised for initialization exceptions, but the rest are handled with a “default”. It looks like default might be equal restart, but as of this second I don’t know what exact state a new instance of a WSA actor/fsm restarts based on the akka spec. Also there was some error logging on db futures within the WSA, but it’s possible an exception was throws before the `Future` got a chance to wrap the exception in a failure? All guesses at this point that could be way off target.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1874:960,log,logging,960,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1874,1,['log'],['logging']
Testability,In addition to automated testing I tested workflow execution locally with an engine-read file. I confirmed we get the expected results:; * Matching md5 -> workflow succeeds; * Absent md5 -> workflow succeeds; * Mismatched md5 -> workflow fails; * Manually restored correct md5 -> workflow succeeds,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6838:25,test,testing,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6838,2,['test'],"['tested', 'testing']"
Testability,"In an issue [BA-5929](https://broadworkbench.atlassian.net/browse/BA-5929) a problem with big numbers, exceeding Int capacity, was introduced. Therefore, I decided to add BigDecimal type support in WDL language.; Changes:; - BigDecimal type introduced in WDL; - Basic binary and unary operations for number types are implemented for BigDecimal. ---; I referred to this list during operations implementation:; https://software.broadinstitute.org/wdl/documentation/spec#types. Manually tested on:; ### inputs.json:; ```json; {; ""my_wf.largenumber"": 7000000000; }; ```. ### workflow; ```; workflow my_wf {; BigDecimal largenumber. call print_number {; input: largenumber=largenumber; }; }; task print_number {; BigDecimal largenumber; BigDecimal largeNumIncr = largenumber + 42; command {; echo SOME_LARGE_NUMBER ${largeNumIncr}; }; output {; String lnum=read_string(stdout()); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5135:484,test,tested,484,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5135,1,['test'],['tested']
Testability,"In https://github.com/broadinstitute/cromwell/pull/4502 I ignored three tests related to the refresh token functionality because they were blocking all other merges and I had no idea how to fix them. My rationale for doing so is my impression the feature is unused/end-of-life. @ruchim to decide whether we; 1. Fix the tests; or; 2. Delete the feature . <!--; Hi! Thanks for taking the time to report feedback. Before posting an issue here, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-firecloud-team; WDL https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; CWL https://www.biostars.org/; -->. <!-- Are you seeing something that looks like a bug? Then great! You're in the right place. -->. <!-- Which backend are you running? -->. <!-- Paste/Attach your workflow if possible: -->. <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORDS, TOKENS AND OTHER SENSITIVE MATERIAL: -->",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4504:72,test,tests,72,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4504,2,['test'],['tests']
Testability,"In order to improve our scalability, performance, and resilience, we would like to be able to demonstrate measurable improvements. This epic lists the performance tests we would like to run as part of this effort, as well as what to measure.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4796:163,test,tests,163,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4796,1,['test'],['tests']
Testability,In particular the behavior for `Timeout` is indirectly tested currently by CromwellApiServiceSpec. Test this behavior directly in the (currently nonexistent) CromwellServerActorSpec instead,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1829:55,test,tested,55,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1829,2,"['Test', 'test']","['Test', 'tested']"
Testability,In response to:. * Issue with being too generous in production https://broadworkbench.atlassian.net/browse/PROD-137; * The (hopefully) safe but low sanity limit introduced in https://github.com/broadinstitute/firecloud-develop/pull/1652. AC: We should be able to:; * Perf test various values for this field in a repeatable way; * Make sure we don't regress on the level we find; * Set the production value to something more informed than just a wild guess,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4990:272,test,test,272,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4990,1,['test'],['test']
Testability,"In response to:; 1. the difficulty of debugging https://github.com/broadinstitute/cromwell/issues/4555 and https://github.com/broadinstitute/cromwell/issues/4512 due to excessive, unformatted output; 2. the lack of tests on the error message generation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4661:215,test,tests,215,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4661,1,['test'],['tests']
Testability,"In support of #4117. I picked two strategic places to dump some info about a workflow's imports zip (if present):; - Right as the workflow is submitted; - Did we receive the zip and correctly write it to the workflow store table?; - Immediately before we attempt to instantiate the workflow; - Did we unzip the zip and create a viable `DirectoryResolver` from it?; - Based on this log output, we can SSH into the server and look at the actual directory created, in the pattern `/tmp/99104084175675660.zip2922990665093481334`. No tests specifically for this, but you can see the new log statements in the CI output. (That's where you'll find this pudding's proof.)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4389:381,log,log,381,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4389,3,"['log', 'test']","['log', 'tests']"
Testability,In testing my async submit branch I noticed that the batch submit endpoint will hang if you only supply a WDL and no inputs - which somewhat makes sense as it is batching on the inputs. I just checked and the same behavior occurs in develop so I'm (probably) not going to fix in the async submit branch,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1134:3,test,testing,3,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1134,1,['test'],['testing']
Testability,"In the PAPI v1 backend, there was a that any job using a docker with an entrypoint failed to run. In addition, Cromwell has no way to override entrypoint on the docker run command for the PAPI v1 backend. . However, in PAPI v2 backend -- Cromwell controls the `docker run` command and should make sure it overrides in the entrypoint. AC:; - Document entrypoint restrictions for the PAPI backend, and the differences in how v1 and v2 handle this; - Add a test for the v2 backend to ensure that we're regression testing for the entrypoint override",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3976:454,test,test,454,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3976,2,['test'],"['test', 'testing']"
Testability,"In the attached WDL, note that the input_table parameter is fed to an executing R script using the optional inputs syntax: ${""-t""+input_table}. In the attached bad-script.txt file (the ""script"" file generated by cromwell at runtime), note that the file given to the -t flag does not begin with an absolute path localized to the execution container. This yields a ""file not found"" problem at runtime (as shown in the attached bad-stderr.txt). If I simply change the WDL syntax to -t${input_table} then execute the same test with the exact same inputs, the -t flag is properly prefixed with an absolute path localized to the container (as shown in script-good.txt), enabling the file to be found and the successful completion of the workflow. [bad-stderr.txt](https://github.com/broadinstitute/cromwell/files/774453/bad-stderr.txt); [bad-script.txt](https://github.com/broadinstitute/cromwell/files/774447/bad-script.txt); [example_wdl.txt](https://github.com/broadinstitute/cromwell/files/774444/example_wdl.txt); [good-script.txt](https://github.com/broadinstitute/cromwell/files/774491/good-script.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1983:518,test,test,518,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1983,1,['test'],['test']
Testability,In the course of responding to a bug report with Abort @mcovarr quickly found several other related bugs in Abort which points to the fact that we should have better testing of the Abort endpoint,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1396:166,test,testing,166,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1396,1,['test'],['testing']
Testability,"In the horizontal world, there will be many Cromwell nodes brought up in the perf script. . ## What we have today ; One node is brought up and that node runs the test in its startup script. ## What we want; The nodes are brought up and do nothing other than run Cromwell. Something else (probably Jenkins) runs the test script against them. --. Probably a generalization of #4251.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4844:162,test,test,162,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4844,2,['test'],['test']
Testability,"In the logs, I noticed a few instances of `Changing status from Running to Running`. This turned out to be because `Running(None) != Running(someCostData)`. I updated the code so that the cost data from the old status is passed into the new status (which also improves the polling behavior that was happening)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7448:7,log,logs,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7448,1,['log'],['logs']
Testability,Include attempt number with shard index in Centaur metadata assertions [BW-482],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6158:60,assert,assertions,60,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6158,1,['assert'],['assertions']
Testability,"Includes a Centaur smoke test. Pay no mind to the additional entry in `skipped_tests.csv`, nothing to see there.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3609:25,test,test,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3609,1,['test'],['test']
Testability,"Includes:. * Primarily, a test that metadata will get deleted only after a minimum time has passed.; * A fix to return the _archived_ version of metadata for workflows in the `ArchivedAndPurged` state.; * Modification to a number of ""did anything change"" tests functions to use previously stored results as their expectations (rather than comparing against fresh results fetched with `metadataSource=Unarchived`). This allows the comparisons to run even after metadata has been deleted. Does not include (but you might think that this would be a nice idea?):. * Checking that after the workflow metadata is deleted, the `metadataSource: Unarchived` version of metadata includes only (a) workflow ID, (b) `metadataSource` and (c) `labels`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5440:26,test,test,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5440,2,['test'],"['test', 'tests']"
Testability,Includes:. * Saloni's fixes for the monitoring test breakage; * Dan's fixes for GPU test breakages; * A revert of external contribution #5113 that was never run through full CI before merge to develop and causes PAPI v2 builds to hang,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5133:47,test,test,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5133,2,['test'],['test']
Testability,Increase connection pool timeout for unit tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4525:42,test,tests,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4525,1,['test'],['tests']
Testability,Initial commit of test code with singleton actor and poll async.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6969:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6969,1,['test'],['test']
Testability,Initial conversions and tests from WDLOM to WOM,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3267:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3267,1,['test'],['tests']
Testability,Initial draft 3 objects and some new (ignored) tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3265:47,test,tests,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3265,1,['test'],['tests']
Testability,"Initially, this PR was aimed to fix issue #5085. But it turned out that there are other related issues.; It looks like [test case](https://github.com/broadinstitute/cromwell/issues/4969#issuecomment-492445214) made by @jeremiahsavage in issue #4969 has nothing to do with a zip file subdirectories. At least his test works fine if you apply the changes made in this PR.; Another issue described in [JIRA](https://broadworkbench.atlassian.net/browse/BA-5873). Although workflows fail and throw an exception even with changes in this PR, the exception is different. The exact reason is unclear for me, but this workflow fails even when you submit a task in a server mode, so maybe something is wrong with the workflow. It turns out the problem with running CWL files on Cromwell was caused by this [PR](https://github.com/broadinstitute/cromwell/pull/3988).; Something was changed in this PR, which required changes to the [`validateSubmitArguments`](https://github.com/broadinstitute/cromwell/pull/3988/files#diff-9ed42892250e1b424f671593631297a5R174) method of the `CromwellEntryPoint` object. But since the [`validateRunArguments`](https://github.com/broadinstitute/cromwell/pull/3988/files#diff-9ed42892250e1b424f671593631297a5R201) method is almost identical to the `validateSubmitArguments` method, similar changes should have been made there too. But this was not noticed, and therefore this problem arose. Therefore, to fix the issues it is enough to use in the `validateRunArguments` method the same logic as in the `validateSubmitArguments` method.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5104:120,test,test,120,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5104,3,"['log', 'test']","['logic', 'test']"
Testability,"Input:. 1. Cromwell commit [`53c4693a0508518e9a6f957fbba2b1afc7dc90b5`](https://github.com/broadinstitute/cromwell/pull/6739/commits/53c4693a0508518e9a6f957fbba2b1afc7dc90b5); - I ran the job on my own branch for testing, but I updated the job to point to `develop` by PR time. Outputs:. 1. Commit to `main` in Cromwhelm: https://github.com/broadinstitute/cromwhelm/commit/0218cf0ccad9a7e9a74c785c2101ecb77ec56a13. 2. [Image in Docker Hub](https://hub.docker.com/layers/cromwell/broadinstitute/cromwell/79-cba6c97-SNAP/images/sha256-9cd6b3e404efbd1a8610b45ae606dde056dd172e6f1a83fbae36e340fb0103ea?context=explore). 3. [Complete log output of action.](https://github.com/broadinstitute/cromwell/runs/6097432895?check_suite_focus=true). ---. The action runs on self-hosted instances created by devops (`runs-on: self-hosted`) which are 2x as powerful as Travis. The whole build takes ~7 minutes, including `sbt server/docker`. My high spec Broad laptop is just a little faster at ~5 minutes. ~There is a prequisite PR https://github.com/broadinstitute/terraform-ap-deployments/pull/616 that is very close pending a naming discussion.~ Merged. ---. Now we are cool like the other repos that deploy continuously. This is near and dear to my heart:. <img width=""1159"" alt=""Screen Shot 2022-04-20 at 11 58 40 AM"" src=""https://user-images.githubusercontent.com/1087943/164273206-134f1b88-d1bb-447e-b56e-7d01c2e1cada.png"">",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6739:213,test,testing,213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6739,2,"['log', 'test']","['log', 'testing']"
Testability,"Inspired by https://github.com/broadinstitute/cromwell/compare/rsa_ss_crom_6443, this should stop workflows from being deleted from the workflow store before their final metadata has been written to the database. * Workflows now request confirmation on the push of their final status to metadata.; * Workflows are not removed from the WorkflowStore until that confirmation happens. Bonus:. * Workflow actor states that follow on from completion (like log copying, output copying, metadata integrity checking, ...) are now recorded as ""Finalizing"" in metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6196:451,log,log,451,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6196,1,['log'],['log']
Testability,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2016:384,log,log,384,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016,2,['log'],['log']
Testability,InstrumentationServiceActorSpec.scala:16) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4468,Test,TestFramework,4468,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestFramework']
Testability,IntelliJ automatically locates this file in the repo and shows it as a run configuration. More convenient to clone that template & modify than to fill in all these fields manually based on prose documentation. Tested by sending to Bec and it was recognized.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6304:210,Test,Tested,210,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6304,1,['Test'],['Tested']
Testability,Intermittent failure in test StandardFileHashingActorSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2816:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2816,1,['test'],['test']
Testability,Introduced testcontainers-scala for DBMS test suite [NOJIRA],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5432:11,test,testcontainers-scala,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5432,2,['test'],"['test', 'testcontainers-scala']"
Testability,"Issues addressed:. - Custom-named stdout or stderr files were not being delocalized.; - The wrong stdout and stderr files were being delocalized (user action instead of user command).; - Optional output files that were not produced were being published to metadata as if they had been produced.; - Existence check for optional files was a `-a` test not actually supported by Alpine's `/bin/sh`. This failed with a zero error code and only minor noise to stderr.; - The fallback non-link chasing symlink that fails noisily for `cwl.output.json` and other no-match globs should now fail silently.; - The output manipulator didn't handle cases of > 1 type (optionals, coproducts) correctly in most cases. This is only a partial fix since it turned out not to be required for this test.; - Several non-WDL classes were found in a `wdl` package.; - The `read_tsv` Centaur test was falsely claiming success when the files referenced in the generated TSV were never delocalized from the VM to their stated cloud locations.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3668:344,test,test,344,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3668,3,['test'],['test']
Testability,"Issues addressed:. - ~~Custom-named stdout or stderr files were not being delocalized.~~ Handled in #3695 instead; - ~~The wrong stdout and stderr files were being delocalized (user action instead of user command).~~ Handled in #3695 instead; - ~~Optional output files that were not produced were being published to metadata as if they had been produced.~~ Revert fixes for this due to existence check performance issues; - Existence check for optional files was a `-a` test not actually supported by the delocalization Docker's `/bin/sh`. This failed with a zero error code and only minor noise to stderr.; - ~~The fallback non-link chasing symlink that fails noisily for `cwl.output.json` and other no-match globs should now fail silently.~~ Reverted by reviewer request.; - The output manipulator didn't handle cases of > 1 type (optionals, coproducts) correctly in most cases. This is only a partial fix since it turned out not to be required for this test.; - Several non-WDL classes were found in a `wdl` package. Now correctly moved thanks to reviewer input. 🙂 ; - The `read_tsv` Centaur test was falsely claiming success when the files referenced in the generated TSV were never delocalized from the VM to their stated cloud locations. With the existence checks removed from Cromwell proper this has reverted back to ""failing to fail"" which is mistaken for success.; - File literals now actually create a file, needed because the OutputManipulator does existence checks on outputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3682:470,test,test,470,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3682,3,['test'],['test']
Testability,Issues for making small improvements in our testing strategy. See [this Googledoc](https://docs.google.com/document/d/1tQdHfgZrxQZmbbAQef9GCJ9wc2_60KjvHbsxqO79-o8/edit#) for a glossary of Cromwell issues with testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2109:44,test,testing,44,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2109,2,['test'],['testing']
Testability,"It appears that the `evaluateFiles` method on `WomExpression` first tries to evaluate the expression, basically calling `evaluateValue`.; In the case of globs, this means trying to read the file containing the list of files that have been globbed, which is; 1) (Almost - see 2)) bound to fail since `evaluateFiles` is called before the task is run to determine the output files that _will_ be generated by an expression, therefore trying to evaluate the glob is pointless and generates unnecessary I/O.; 2) If for some reason the list file _is_ there but is invalid, the result of `evaluateFiles` will be invalid. Why 2) would happen is unknown at the moment, but some of our centaur integration test (dontglobinputs) present very odd failure mode consistent with 2)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4202:696,test,test,696,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4202,1,['test'],['test']
Testability,"It looks like the parent `PipelinesApiRequestManager` may be handling this okay but that should be confirmed. ```; ERROR akka.actor.OneForOneStrategy - 502 Bad Gateway; <!DOCTYPE html>; <html lang=en>; <meta charset=utf-8>; <meta name=viewport content=""initial-scale=1, minimum-scale=1, width=device-width"">; <title>Error 502 (Server Error)!!1</title>; <style>; *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}; </style>; <a href=//www.google.com/><span id=logo aria-label=Google></span></a>; <p><b>502.</b> <ins>That’s an error.</ins>; <p>The server encountered a temporary error and could not complete your request.<p>Please try again in 30 seconds. <ins>That’s all we know.</ins>. com.google.api.client.http.HttpResponseException: 502 Bad Gateway; <!DOCTYPE html>; <html lang=en>; <meta charset=utf-8>; <meta name=viewport content=""initial-scale=1, minimum-scale=1, width=device-width"">; <title>Error 502 (Server E",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4917:841,log,logo,841,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4917,2,['log'],['logo']
Testability,It looks like with .21 there is a an extra `resources` key with default values in the pipeline args section when you describe a jes job. When I ran the 50 workflow test with .21 none of my jobs seemed to get preempted which seems unusual and I want to make sure this extra `resources` stanza with default values isn't causing issues. from .19:. ```; resources:; bootDiskSizeGb: 10; disks:; - autoDelete: true; mountPoint: /cromwell_root; name: local-disk; sizeGb: 208; type: PERSISTENT_HDD; minimumCpuCores: 1; minimumRamGb: 10; preemptible: true; zones:; - us-central1-b; - us-central1-c; pipelineArgs:; clientId: ''; inputs:; exec: gs://broad-gotc-prod-cromwell-execution/PairedEndSingleSampleWorkflow/0e160d60-4f48-4058-84c3-36351a7b2cbd/call-HaplotypeCaller/shard-17/exec.sh; input_bam-0: gs://broad-gotc-prod-cromwell-execution/PairedEndSingleSampleWorkflow/0e160d60-4f48-4058-84c3-36351a7b2cbd/call-GatherBamFiles/NWD989972.bam; input_bam_index-0: gs://broad-gotc-prod-cromwell-execution/PairedEndSingleSampleWorkflow/0e160d60-4f48-4058-84c3-36351a7b2cbd/call-GatherBamFiles/NWD989972.bai; interval_list-0: gs://broad-references/hg38/v0/scattered_calling_intervals/temp_0018_of_50/scattered.interval_list; ref_dict-0: gs://broad-references/hg38/v0/Homo_sapiens_assembly38.dict; ref_fasta-0: gs://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; ref_fasta_index-0: gs://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai; logging:; gcsPath: gs://broad-gotc-prod-cromwell-execution/PairedEndSingleSampleWorkflow/0e160d60-4f48-4058-84c3-36351a7b2cbd/call-HaplotypeCaller/shard-17/HaplotypeCaller-17.log; outputs:; HaplotypeCaller-17-rc.txt: gs://broad-gotc-prod-cromwell-execution/PairedEndSingleSampleWorkflow/0e160d60-4f48-4058-84c3-36351a7b2cbd/call-HaplotypeCaller/shard-17/HaplotypeCaller-17-rc.txt; NWD989972.vcf.gz: gs://broad-gotc-prod-cromwell-execution/PairedEndSingleSampleWorkflow/0e160d60-4f48-4058-84c3-36351a7b2cbd/call-HaplotypeCaller/shard-17/NWD989972.vcf.gz; NWD98,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1501:164,test,test,164,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1501,1,['test'],['test']
Testability,"It seems that cromwell is not localizing input files (generated by previous calls) correctly when I restart a workflow with callcaching enabled. Inputs which originate from the same directory are getting split up in the inputs directory inside cromwell-executions. For example, given a workflow like this:; ```wdl; version 1.0; workflow test {; call touch as t1 {; input:; name = ""[...]/cromwell_test/testFile""; }; call touch as t2 {; input:; name = ""[...]/cromwell_test/companionCube""; }; call blah {; input:; file = t1.out,; filesBuddy = t2.out; } ; }; task touch {; input {; String name; }; command {; touch ~{name}; }; output {; File out = name; }; }; task blah {; input {; File file; File filesBuddy; }; command {; exit 1; }; }; ```; We get the following (correct) localization for the initial run:; ```; [...]/cromwell_test/cromwell-executions/test/6d5571c1-6612-4107-bcf5-0b40791d17fb/call-blah/inputs⟫ ls -R; .:; 1981809718. ./1981809718:; companionCube testFile. ```; And the following (incorrect) localization for the rerun:; ```; [...]/cromwell_test/cromwell-executions/test/8aa01c35-d095-483d-84e5-3d72ead73344/call-blah/inputs⟫ ls -R; .:; -1523004024 -1523004025. ./-1523004024:; companionCube. ./-1523004025:; testFile; ```. <!--; Hi! Thanks for taking the time to report feedback. Before posting an issue here, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-firecloud-team; WDL https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; CWL https://www.biostars.org/; -->. <!-- Are you seeing something that looks like a bug? Then great! You're in the right place. -->. <!-- Which backend are you running? -->. <!-- Paste/Attach your workflow if possible: -->. <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORD",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4965:337,test,test,337,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4965,4,['test'],"['test', 'testFile']"
Testability,"It seems that the HealthMonitor relies on a specific type of response from Pipelines API v2 to determine health of the sub-services. The PAPI response about operation metadata is different between v1 and v2, and the HealthMonitor expectations are tied to the type of response returned from v1. This essentially prevents one from running a HealthMonitor against the v2 backend --which is going to be a requirement of enabling Pipelines API v2 in FireCloud production. AC: Be able to perform HealthMonitoring on both the PAPI v1 and PAPI v2 google backend. Testing criteria: Enable HealthMonitoring for PAPI v1 and PAPI v2 centaur tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4029:555,Test,Testing,555,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4029,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"It seems that with some version change, Cromwell started deforming certain dates [see below]. This is breaking Tableau's tool reporting. It would be great to investigate when and how this change happened, and why our tests didn't catch it. Need to confirm which version of Cromwell is seeing this change.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4818:217,test,tests,217,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4818,1,['test'],['tests']
Testability,It seems the sentry configuration is generating too much log from log.error due to log level set to WARN or above. So removing this configuration altogether from logback.xml.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5065:57,log,log,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5065,4,['log'],"['log', 'logback']"
Testability,"It will not be merged into Cromwell, just assumed this was the easiest way to get it reviewed. It's simply a start at automating the release process, lots of feedback is welcome. . Warning: Not been completely tested.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1780:210,test,tested,210,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1780,1,['test'],['tested']
Testability,"It would be great to have at least some unit tests targeted towards key request flows that CromIAM is expected to perform.; This should include correct order of the requests between SAM <-> CromIAM <-> Cromwell and validity of the responses.; Mocks of SAM and Cromwell could be useful to not depend on real implementation. A/C: This ticket is a good example of something that it would be nice for those unit tests to catch: https://github.com/broadinstitute/cromwell/issues/4284; Other example would be:; - A submit requests first goes to sam to check against the whitelist before going to Cromwell (if whitelisted), or returning an error (if not)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4286:45,test,tests,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4286,3,"['Mock', 'test']","['Mocks', 'tests']"
Testability,"It would be helpful, for our production pipeline, if Cromwell's copying of workflow outputs and logs had an option to ""flatten"" the outputs by writing all to a single directory, instead of including the directory hierarchy when copying. We are careful to avoid file name collisions in our output and logs so handling that case wouldn't be an issue for us -- but might for other users.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1641:96,log,logs,96,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1641,2,['log'],['logs']
Testability,"It's possible for Cromwell to not write a `start` time against a call in metadata. ### Impact ; If this happens, Cromwell's metadata ends up with a call with no `start` time but with an `end` time. This causes problems amongst many clients, not least of which is Job Manager which returns a `500` error page and no further details. . ### Cause. #### Why is the start time not set?; This appears to be happening if the `input` section of a call has an expression which fails to evaluate:; Here's a potential example which might cause this:; ```wdl; Array[String] strings = [""0"", ""1""]; call foo { input:; x = strings[2]; }; ```. #### Why is Job Manager Unhappy?; From the logs, the error is being caused by: ; ```; May 16 14:41:51 gce-job-manager-prod101 job-manager-api[2834]: File ""/home/vmagent/app/jobs/controllers/jobs_controller.py"", line 126, in get_job; May 16 14:41:51 gce-job-manager-prod101 job-manager-api[2834]: sorted_tasks = sorted(tasks, key=lambda t: t.start); May 16 14:41:51 gce-job-manager-prod101 job-manager-api[2834]: TypeError: can't compare datetime.datetime to NoneType; ```. ### What to do about it. This ticket is to address this problem in two ways:; * Cromwell should not be writing calls to metadata with no `start` time (especially if they *do* have an end time. It's hard to prove this 100%, but at least for the above case we should be resilient.; * Job Manager should not return a 500 error code if a `start` time is missing. It should be resilient enough to render the tasks (even if the sorting is awkward). Bonus points for indicating bad metadata somehow so that the user can forward on the problematic metadata to us.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4978:670,log,logs,670,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4978,1,['log'],['logs']
Testability,"Iterate at whatever pace makes sense towards running a 10K JG w/ the mock WDL. If there issues (errors and/or things which seem unreasonably pokey) follow this decision tree:. - If the problem seems small, fix it and continue; - If the problem seems large but there's a clear hack/workaround, file a ticket and do the hack/workaround then continue; - If the problem seems large but there is no clear hack/workaround, bring this up with the team to figure out how to proceed",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2145:69,mock,mock,69,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2145,1,['mock'],['mock']
Testability,Iterate towards 10K w/ mock WDL,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2145:23,mock,mock,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2145,1,['mock'],['mock']
Testability,"Iterator.foreach$(Iterator.scala:929); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417); [2018-03-09 15:38:57,90] [warn] Couldn't find a suitable DSN, defaulting to a Noop one.; [2018-03-09 15:42:11,14] [info] Using noop to send events.; [2018-03-09 15:49:48,68] [warn] Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:9518,log,logback,9518,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,1,['log'],['logback']
Testability,"I’ve got a workflow in the 900 genomes run that appears to be an example of Cromwell losing a job. One of the haplotype scatters, which should take a day, instead has been going for 4 days. JES thinks it’s done. [This is the workflow link in FireCloud](https://portal.firecloud.org/#workspaces/engle-macarthur-ccdd%3Agenomes-reprocessing/Monitor/d2237443-0fd7-45fa-99c7-ae25ae5e3c68). The workflow id is 9d16d8cf-7470-422d-8329-0a55a89f6411. The operation id is ELnDoOadKxj3jPfVxujN5Vwgy_-Z2IQbKg9wcm9kdWN0aW9uUXVldWU. Attached are the cromwell logs and the operations id info. [operation-metadata.txt](https://github.com/broadinstitute/cromwell/files/739430/operation-metadata.txt); [cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt](https://github.com/broadinstitute/cromwell/files/739431/cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1928:545,log,logs,545,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1928,3,['log'],"['logs', 'logs-']"
Testability,"JDX0dTVVRJTD0kPwppZiBbICIkUkNfR1NVVElMIiAhPSAiMCIgXTsgdGhlbgogIHByaW50ZiAnJXMgJXNcbicgIiQoZGF0ZSAtdSAnKyVZLyVtLyVkICVIOiVNOiVTJykiIGdzdXRpbFwgXCBcIGNwXCAvY3JvbXdlbGxfcm9vdC9yY1wgZ3M6Ly9zc19jcm9td2VsbF9idWNrZXQvY3JvbXdlbGwtZXhlY3V0aW9uL2V4Y2VlZF9kaXNrX3NpemUvYThlMzJjZDItZTMwNi00OGI2LTlkNWMtODQ3YjFlZDg1NzU0L2NhbGwtc2ltcGxlX2xvY2FsaXplX2FuZF9mZXRjaF9zaXplL1wgZmFpbGVkCiAgIyBQcmludCB0aGUgcmVhc29uIG9mIHRoZSBmYWlsdXJlCiAgY2F0IGdzdXRpbF9vdXRwdXQudHh0CiAgCiAgIyBDaGVjayBpZiBpdCBtYXRjaGVzIHRoZSBCdWNrZXRJc1JlcXVlc3RlclBheXNFcnJvck1lc3NhZ2UKICBpZiBncmVwIC1xICJCdWNrZXQgaXMgcmVxdWVzdGVyIHBheXMgYnVja2V0IGJ1dCBubyB1c2VyIHByb2plY3QgcHJvdmlkZWQuIiBnc3V0aWxfb3V0cHV0LnR4dDsgdGhlbgogICAgcHJpbnRmICclcyAlc1xuJyAiJChkYXRlIC11ICcrJVkvJW0vJWQgJUg6JU06JVMnKSIgUmV0cnlpbmdcIHdpdGhcIHVzZXJcIHByb2plY3QKICAgIGdzdXRpbCAtdSBicm9hZC1kc2RlLWNyb213ZWxsLWRldiAgY3AgL2Nyb213ZWxsX3Jvb3QvcmMgZ3M6Ly9zc19jcm9td2VsbF9idWNrZXQvY3JvbXdlbGwtZXhlY3V0aW9uL2V4Y2VlZF9kaXNrX3NpemUvYThlMzJjZDItZTMwNi00OGI2LTlkNWMtODQ3YjFlZDg1NzU0L2NhbGwtc2ltcGxlX2xvY2FsaXplX2FuZF9mZXRjaF9zaXplLwogIGVsc2UKICAgIGV4aXQgIiRSQ19HU1VUSUwiCiAgZmkKZWxzZQogIGV4aXQgMApmaQogICkKICBSQz0kPwogIGlmIFsgIiRSQyIgPSAiMCIgXTsgdGhlbgogICAgYnJlYWsKICBmaQogIGlmIFsgJGkgLWx0IDMgXTsgdGhlbgogICAgcHJpbnRmICclcyAlc1xuJyAiJChkYXRlIC11ICcrJVkvJW0vJWQgJUg6JU06JVMnKSIgV2FpdGluZ1wgNVwgc2Vjb25kc1wgYW5kXCByZXRyeWluZwogICAgc2xlZXAgNQogIGZpCmRvbmUKZXhpdCAiJFJDIg==\\\""));' > /tmp/c7f23139-58e4-466e-b109-c06db3209f35.sh && chmod u+x /tmp/c7f23139-58e4-466e-b109-c06db3209f35.sh && sh /tmp/c7f23139-58e4-466e-b109-c06db3209f35.sh\"": ""; }; ]; ```. AC:; Improve this error message by...; 1. Removing all of the message starting from ` Unexpected exit status 1 while running ....`; 2. Replace:; `Execution failed: action 9: unexpected exit status 1 was not ignored\n[Localization] Input name: input_file `; with something similar to:; `Execution failed: action 9: Failed to copy input <input_name> <input_path ie, gs://.....>. Please check the log file for more details: <link to call log>`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4603:9265,log,log,9265,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4603,2,['log'],['log']
Testability,JES backend does not persist execution logs nor execution results for failed workflow,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1357:39,log,logs,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1357,1,['log'],['logs']
Testability,JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); at org.scalatest.concurrent.Eventually.makeAValiantAttempt$1(Eventually.scala:395); at org.scalatest.concurrent.Eventually.tryTryAgain$1(Eventually.scala:409); at org.scalatest.concurrent.Eventually.eventually(Eventually.scala:439); at org.scalatest.concurrent.Eventually.eventually$(Eventually.scala:391); at cromwell.CromwellTestKitSpec.eventually(CromwellTestKitSpec.scala:251); at cromwell.CromwellTestKitSpec.runWdlAndAssertOutputs(CromwellTestKitSpec.scala:344); at cromwell.WorkflowOutputsSpec.$anonfun$new$4(WorkflowOutputsSpec.scala:38); at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85); at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83); at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104); at org.scalatest.Transformer.apply(Transformer.scala:22); at org.scalatest.Transformer.apply(Transformer.scala:20); at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078); at org.scalatest.TestSuite.withFixture(TestSuite.scala:196); at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195); at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076); at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088); at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289); at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088); at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070); at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396); at scala.collection.immutable.List.foreach(List.scala:389); at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384); at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410);,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:6763,Test,TestSuite,6763,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,1,['Test'],['TestSuite']
Testability,"Javascript requirements have the option of declaring JS functions to be used in expressions thereafter. One may also include a file containing functions, as a conformance tests demonstrate. Most of the changes here are the ripple effect of passing this library around. I was forced to disable the ""strict"" javascript option in order to pass a conformance test. The library it imported used a ""with"" clause that is evidently verboten in strict world.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3140:171,test,tests,171,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3140,2,['test'],"['test', 'tests']"
Testability,"Jeff, Thibault and all;; I'm testing the latest development Cromwell which supports GCP runs using CWL (#3724). Thank you so much for this support. My bcbio test pipelines are running but I'm hitting an issue during copying input files from some nested subworkflows. There appears to be a 1024 character limit which we hit due to the combination of the root execution directory and the nested sub-workflow path from Cromwell:; ```; Copying file:///cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-calculate_sv_coverage/shard-0/cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-calculate_sv_bins/cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-postprocess_alignment/shard-0/cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-postprocess_alignment_to_rec/cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-alignment/shard-0/wf-alignment.cwl/94c8f53c-dad4-4c48-9e09-f6927356f352/call-merge_split_alignments/cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-alignment/shard-0/wf-alignment.cwl/94c8f53c-dad4-4c48-9e09-f6927356f352/call-process_alignment/shard-0/cromwell_root/align/Test2/Test2-sort.bam [Content-Type=application/octet-stream]...; / [0/1 files][ 0.0 B/ 3.7 MiB] 0% Done ; BadRequestException: 400 The maximum object length is 1024 characters, but got a name with 1055 characters: ''gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-...''; CommandException: 1 file/object could not be transferred.; Copying file:///cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-calculate_sv_coverage/shard-0/cromwell_root/bcbiotest/gcp/work_cromwell/main-somatic.cwl/c21b8bf4-9f80-45a3-9a23-f345b4d8f295/call-calculate_",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4471:29,test,testing,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4471,2,['test'],"['test', 'testing']"
Testability,"Jira: https://broadworkbench.atlassian.net/browse/WX-1670. ### Description. Cromwell will use information provided in the new GROUP_METRICS_ENTRY table to allocate new tokens for job requests whose hog group is not experiencing any cloud quota exhaustion. Note that this will be applied to jobs seeking ""execution"" tokens. Jobs seeking ""restart"" tokens are not affected by this change. . TODO:; - [x] test changes in BEE; - [x] fix unit tests; - [x] add new unit tests; - [x] update Changelog?. ### Release Notes Confirmation. #### `CHANGELOG.md`; - [x] I updated `CHANGELOG.md` in this PR; - [ ] I assert that this change shouldn't be included in `CHANGELOG.md` because it doesn't impact community users. #### Terra Release Notes; - [ ] I added a suggested release notes entry in this Jira ticket; - [x] I assert that this change doesn't need Jira release notes because it doesn't impact Terra users",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7520:401,test,test,401,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7520,5,"['assert', 'test']","['assert', 'test', 'tests']"
Testability,Jira: https://broadworkbench.atlassian.net/browse/WX-1675. ### Description. - Records quota exhaustion for a hog group to the new `GroupMetrics` table when a job runs into `AwaitingCloudQuota` state; - This PR adds a new singleton Actor called `GroupMetricsActor` which takes in currently `RecordGroupQuotaExhaustion` message to record the group that ran into quota exhaustion into the new table. Example screenshot:; ![Screenshot 2024-08-20 at 4 27 49 PM](https://github.com/user-attachments/assets/fe403e65-d7f2-41b3-8279-38a05b3cbb6b). <!-- What is the purpose of this change? What should reviewers know? -->. ### Release Notes Confirmation. #### `CHANGELOG.md`; - [ ] I updated `CHANGELOG.md` in this PR; - [ ] I assert that this change shouldn't be included in `CHANGELOG.md` because it doesn't impact community users. #### Terra Release Notes; - [ ] I added a suggested release notes entry in this Jira ticket; - [x] I assert that this change doesn't need Jira release notes because it doesn't impact Terra users,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7501:717,assert,assert,717,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7501,2,['assert'],['assert']
Testability,Job retry logic doc [BA-6139],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5304:10,log,logic,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5304,1,['log'],['logic']
Testability,Jobs which fail for user error logged with error severity,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3962:31,log,logged,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3962,1,['log'],['logged']
Testability,"Just a feature request (not a roadblock to anything we are doing), but it would be useful to be able to track a batch ID when submitting batch jobs. Batch jobs are often a set of related jobs that can be thought of as a logical unit.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1666:220,log,logical,220,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1666,1,['log'],['logical']
Testability,Just after merging the runtime attributes validation I realized that there is a better way to get a JesBackend instance in the tests than mocking half of Cromwell.. so here it is,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/388:127,test,tests,127,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/388,2,"['mock', 'test']","['mocking', 'tests']"
Testability,"Just some lessons learned while trying to run tests on the Local backend using a non-CI config, though the main lesson learned was to just use the CI config if possible.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4748:46,test,tests,46,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4748,1,['test'],['tests']
Testability,Just to be clear on this - The SqlDatabase and its Slick implementation are not split out. Only the business logic code calling these SQL methods with primitive types has been scattered across sub-projects.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1193:109,log,logic,109,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1193,1,['log'],['logic']
Testability,"Khalid mentioned that we need to incorporate SGE testing into Centaur soon and some thoughts that came up from today's tech talk:; - There's a docker image with SGE on it, and we can use that through Centaur to test SGE backend (Similar to how we make a special JES-Refresh backend to test refresh tokens); - Re-use existing WDL's from Centaur instead of writing anything new, and confirm that all applicable WDL functionalities work as expected.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1180:49,test,testing,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1180,3,['test'],"['test', 'testing']"
Testability,"Kind of related to BA-6087 (though maybe not as much as I originally thought when I started on this), only unexpand subworkflows in the root workflow. i.e. don't piggyback on the depth-first search logic used for label upserting as that may end up doing a lot of unnecessary unexpansions in lower-level subworkflows whose parents are later unexpanded.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5303:198,log,logic,198,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5303,1,['log'],['logic']
Testability,Known TODOs (maybe in later tickets); - Backends should use runtime attributes in jobDescriptor instead of recomputing them; - SharedFileSystem `runtimeAttributeDefinitions` are static instead of dynamic; - No short-circuiting if cache miss is known and cache writing is off; - Test writing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1307:278,Test,Test,278,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1307,1,['Test'],['Test']
Testability,Known issues: . - A `WomMaybeListedDirectory` used as input to an IWDR expression does not have its `listing` attribute populated as expected.; - Even if this directory's `listing` attribute is force-populated the files are not copied to the IWDR.; - Even if the files are force-copied to the IWDR the test runs a `find` command that does not tolerate the presence of detritus.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3575:302,test,test,302,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3575,1,['test'],['test']
Testability,Known test failures:; - [x] cromwell.SimpleWorkflowActorSpec; - [x] cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec; - [x] cromwell.ArrayWorkflowSpec; - [x] cromwell.engine.workflow.SingleWorkflowRunnerActorWithMetadataSpec; - [x] cromwell.ArrayOfArrayCoercionSpec; - [x] cromwell.WdlFunctionsAtWorkflowLevelSpec; - [x] cromwell.MapWorkflowSpec; - [x] cromwell.WorkflowOutputsSpec; - [x] cromwell.engine.workflow.SingleWorkflowRunnerActorWithMetadataOnFailureSpec; - [x] cromwell.WorkflowFailSlowSpec; - [x] cromwell.FilePassingWorkflowSpec; - [x] cromwell.engine.workflow.SingleWorkflowRunnerActorNormalSpec; - [x] cromwell.engine.WorkflowManagerActorSpec; - [x] cromwell.MultipleFilesWithSameNameWorkflowSpec; - [x] cromwell.CopyWorkflowOutputsSpec; - [x] cromwell.PostfixQuantifierWorkflowSpec; - [x] cromwell.ScatterWorkflowSpec. Ready for review!,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1371:6,test,test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1371,1,['test'],['test']
Testability,Kv testdoc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2641:3,test,testdoc,3,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2641,1,['test'],['testdoc']
Testability,"Last [CRON errors](https://travis-ci.org/broadinstitute/cromwell/jobs/340487274):. ```scala; java.lang.Exception: Task Mutect2.oncotate_m2:NA:1 failed. Job exit code 1. Check gs://cloud-cromwell-dev/cromwell_execution/travis/Mutect2/a5d2b104-647b-45fa-8149-7bddf6bc2094/call-oncotate_m2/oncotate_m2-stderr.log for more information. PAPI error code 5. Message: 10: Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/HCC1143.maf.annotated -> gs://cloud-cromwell-dev/cromwell_execution/travis/Mutect2/a5d2b104-647b-45fa-8149-7bddf6bc2094/call-oncotate_m2/HCC1143.maf.annotated (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/HCC1143.maf.annotated gs://cloud-cromwell-dev/cromwell_execution/travis/Mutect2/a5d2b104-647b-45fa-8149-7bddf6bc2094/call-oncotate_m2/HCC1143.maf.annotated, command failed: CommandException: No URLs matched: /mnt/local-disk/HCC1143.maf.annotated\nCommandException: 1 file/object could not be transferred.\n)""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3271:306,log,log,306,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3271,3,['log'],['log']
Testability,"Last time we tried to upgrade this we [ran into a bug](https://github.com/googleapis/java-storage-nio/issues/691), but it [has now been fixed](https://github.com/googleapis/java-storage-nio/pull/719) and we have a [unit test](https://github.com/broadinstitute/cromwell/pull/6491) for the library that verifies the fix. Besides generally keeping important libraries up to date, there is a chance that recent fixes to requester pays ([Google PR](https://github.com/googleapis/java-storage-nio/pull/858), [GATK PR](https://github.com/broadinstitute/gatk/pull/7730)) implemented by our own very Methods team may solve an issue users are seeing in Terra:; ```; User project specified in the request is invalid.; ```. [Terra User Liaison Slack link.](https://broadinstitute.slack.com/archives/CBJJ7U293/p1657731546766919); [DSP Methods Slack link.](https://broadinstitute.slack.com/archives/C1H82GH41/p1647028919917549?thread_ts=1645714642.593619&cid=C1H82GH41)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6804:220,test,test,220,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6804,1,['test'],['test']
Testability,"Launch any workflow, let it run long enough to start a job in GCP Batch. Shut down Cromwell, restart Cromwell:. ```; 2024-08-19 14:47:51 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - Cromwell 88-e59a6aa-SNAP service started on 0:0:0:0:0:0:0:0:8000...; 2024-08-19 14:47:51 cromwell-system-akka.dispatchers.engine-dispatcher-55 INFO - MaterializeWorkflowDescriptorActor [UUID(119e11a5)]: Call-to-Backend assignments: wf_hello.hello -> GCPBATCH; 2024-08-19 14:47:52 cromwell-system-akka.dispatchers.engine-dispatcher-54 INFO - WorkflowExecutionActor-119e11a5-b981-4510-a6d9-b5c26dfbb4e3 [UUID(119e11a5)]: Restarting wf_hello.hello; 2024-08-19 14:47:53 cromwell-system-akka.dispatchers.engine-dispatcher-53 INFO - Assigned new job restart checking tokens to the following groups: 119e11a5: 1; 2024-08-19 14:47:55 cromwell-system-akka.dispatchers.engine-dispatcher-49 INFO - Not triggering log of restart checking token queue status. Effective log interval = None; 2024-08-19 14:47:55 cromwell-system-akka.dispatchers.engine-dispatcher-41 INFO - Triggering log of execution token queue status. Effective log interval = 300 seconds; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-47 INFO - Assigned new job execution tokens to the following groups: 119e11a5: 1; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-47 INFO - BT-322 119e11a5:wf_hello.hello:-1:1 is eligible for call caching with read = true and write = true; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-43 INFO - BT-322 119e11a5:wf_hello.hello:-1:1 cache hit copying nomatch: could not find a suitable cache hit.; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-43 INFO - 119e11a5-b981-4510-a6d9-b5c26dfbb4e3-EngineJobExecutionActor-wf_hello.hello:NA:1 [UUID(119e11a5)]: Could not copy a suitable cache hit for 119e11a5:wf_hello.hello:-1:1. No copy attempts were made.; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.backend-disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7495:899,log,log,899,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7495,2,['log'],['log']
Testability,Leaving in draft mode until I see whether tests pass.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7164:42,test,tests,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7164,1,['test'],['tests']
Testability,Less centaur/carbonite logging for travis's sake [BA-6114],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5275:23,log,logging,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5275,1,['log'],['logging']
Testability,Lets us trickle declarations and call outputs down into nested workflows. Eg this wdl:; ```wdl; workflow nested_lookups {; Int i = 27; if(true) {; if(true) {; if(true) {; call mirror as m1 { input: i = i}; }; }; }; }; ```. Gives us this womgraph:; ![test](https://user-images.githubusercontent.com/13006282/32580790-0eb26dc8-c4b5-11e7-8852-99d941823a2d.png),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2841:250,test,test,250,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2841,1,['test'],['test']
Testability,"Like reported in the title, `write_map` will write a TSV without a line ending `\n` for the last pair. Minimal example; This will yield 1, as opposed to the expected 2. ```wdl; workflow TestWriteMap {; call WriteAMap {; input: input_map = {'A': 1, 'B': 2}; }; output {; Int tsv_len = WriteAMap.tsv_len; }; }. task WriteAMap {; input {; Map [String, String] input_map; }; command <<<; set -eux. two_col_tsv=~{write_map(input_map)}; wc -l ""${two_col_tsv}"" | awk '{print $1}' > ""map_tsv_len.txt""; >>>; output {; Int tsv_len = read_int(""map_tsv_len.txt""); }; runtime {docker: ""gcr.io/cloud-marketplace/google/ubuntu2004:latest""}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7021:186,Test,TestWriteMap,186,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7021,1,['Test'],['TestWriteMap']
Testability,Like.$anonfun$run$1(WordSpecLike.scala:1192); at org.scalatest.SuperEngine.runImpl(Engine.scala:521); at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192); at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190); at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250); at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314); at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507); at sbt.TestRunner.runTest$1(TestFramework.scala:113); at sbt.TestRunner.run(TestFramework.scala:124); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282); at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFunction.apply(TestFramework.scala:294); at sbt.Tests$.processRunnable$1(Tests.scala:347); at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353); at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46); at sbt.std.Transform$$anon$4.work(System.scala:67); at sbt.Execute.$anonfun$submit$2(Execute.scala:269); at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16); at sbt.Execute.work(Execute.scala:278); at sbt.Execute.$anonfun$submit$1(Execute.scala:269); at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178); at sbt.CompletionService$$anon$2.call(CompletionService.scala:37); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:9792,Test,Tests,9792,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,3,['Test'],['Tests']
Testability,Limit Centaur TES tests at 4 threads in attempt to prevent exceeding open files limit [BA-6153],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5336:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5336,2,['test'],['tests']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/CommandLineTool.html#DockerRequirement. Example conformance test(s):. - <span>#</span>5 [v1.0/cat1-testcli.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/cat1-testcli.cwl); - <span>#</span>95 [v1.0/docker-output-dir.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/docker-output-dir.cwl). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2996:106,test,test,106,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2996,4,['test'],"['test', 'testcli']"
Testability,Link to spec:; - http://www.commonwl.org/v1.0/CommandLineTool.html#EnvVarRequirement. Example conformance test(s):. - <span>#</span>41 [v1.0/env-wf1.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/env-wf1.cwl); - <span>#</span>42 [v1.0/env-wf2.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/env-wf2.cwl); - <span>#</span>43 [v1.0/env-wf3.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/env-wf3.cwl). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2997:106,test,test,106,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2997,2,['test'],['test']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/CommandLineTool.html#ShellCommandRequirement. Example conformance test(s):. - <span>#</span>10 [v1.0/stderr.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/stderr.cwl); - <span>#</span>11 [v1.0/stderr-shortcut.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/stderr-shortcut.cwl); - <span>#</span>12 [v1.0/stderr-mediumcut.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/stderr-mediumcut.cwl); - <span>#</span>107 [v1.0/shellchar.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/shellchar.cwl); - <span>#</span>108 [v1.0/shellchar2.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/shellchar2.cwl). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2998:112,test,test,112,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2998,2,['test'],['test']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/Workflow.html#InitialWorkDirRequirement. Example conformance test(s):. - <span>#</span>51 [v1.0/rename.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/rename.cwl); - <span>#</span>81 [v1.0/stagefile.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/stagefile.cwl) (also uses docker). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3001:107,test,test,107,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3001,2,['test'],['test']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement. Example conformance test(s):. - <span>#</span>26 [v1.0/count-lines7-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/count-lines7-wf.cwl); - <span>#</span>63 [v1.0/step-valuefrom2-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/step-valuefrom2-wf.cwl) (also uses StepInputExpressionRequirement). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3002:113,test,test,113,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3002,2,['test'],['test']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/Workflow.html#ScatterFeatureRequirement. Example conformance test(s):. - <span>#</span>30 [v1.0/scatter-wf1.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/scatter-wf1.cwl); - <span>#</span>31 [v1.0/scatter-wf2.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/scatter-wf2.cwl); - <span>#</span>32 [v1.0/scatter-wf3.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/scatter-wf3.cwl); - <span>#</span>33 [v1.0/scatter-wf4.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/scatter-wf4.cwl). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2999:107,test,test,107,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2999,2,['test'],['test']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/Workflow.html#StepInputExpressionRequirement. Example conformance test(s):. - <span>#</span>62 [v1.0/step-valuefrom-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/step-valuefrom-wf.cwl); - <span>#</span>63 [v1.0/step-valuefrom2-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/step-valuefrom2-wf.cwl); - <span>#</span>64 [v1.0/step-valuefrom3-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/step-valuefrom3-wf.cwl). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3000:112,test,test,112,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3000,2,['test'],['test']
Testability,Link to spec:; - http://www.commonwl.org/v1.0/Workflow.html#SubworkflowFeatureRequirement. Example conformance test(s):. - <span>#</span>40 [v1.0/count-lines8-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/count-lines8-wf.cwl); - <span>#</span>91 [v1.0/count-lines10-wf.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/count-lines10-wf.cwl). A/C: This or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2991:111,test,test,111,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2991,2,['test'],['test']
Testability,Link to specs:; - http://www.commonwl.org/v1.0/CommandLineTool.html#Directory; - http://www.commonwl.org/v1.0/Workflow.html#Directory. Example conformance test(s):. - <span>#</span>78 [v1.0/dir3.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/dir3.cwl); - <span>#</span>85 [v1.0/dir6.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/dir6.cwl); - <span>#</span>93 [v1.0/dir7.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/dir7.cwl); - <span>#</span>99 [v1.0/recursive-input-directory.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/recursive-input-directory.cwl). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3004:155,test,test,155,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3004,2,['test'],['test']
Testability,Link to specs:; - http://www.commonwl.org/v1.0/CommandLineTool.html#InlineJavascriptRequirement; - http://www.commonwl.org/v1.0/Workflow.html#InlineJavascriptRequirement. Example conformance tests:; - <span>#</span>16 [v1.0/null-expression1-tool.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/null-expression1-tool.cwl); - <span>#</span>17 [v1.0/null-expression2-tool.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/null-expression2-tool.cwl); - <span>#</span>52 [v1.0/wc4-tool.cwl](https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/wc4-tool.cwl) (Parses file contents in JS). A/C: These or similar CWL should run to `WorkflowSucceeded` via centaur; Bonus: CWL conformance test passes (may also be a future ticket),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2995:191,test,tests,191,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2995,2,['test'],"['test', 'tests']"
Testability,Log access URLs with sensitive parts masked BT-235,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6333:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6333,1,['Log'],['Log']
Testability,Log configured batch size and max flush intervals.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2543:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2543,1,['Log'],['Log']
Testability,Log every call to Google,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1368:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1368,1,['Log'],['Log']
Testability,"Log from broad-dsde-dev here: https://gist.githubusercontent.com/scottfrazer/a0838aa2180e7972da84c4730975b9f5/raw/d0cebdd317489298d6553e5602bfd4b775ab9ea3/gistfile1.txt. Most specifically:. ```; WorkflowActor [UUID(0790bc7e)]: Beginning transition from Running to Aborting.; WorkflowActor [UUID(0790bc7e)]: transitioning from Running to Aborting.; JES Run [UUID(0790bc7e):hello]: Status change from Running to Success; ERROR - 400 Bad Request; {; ""code"" : 400,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""Precondition check failed."",; ""reason"" : ""failedPrecondition""; } ],; ""message"" : ""Precondition check failed."",; ""status"" : ""FAILED_PRECONDITION""; }; com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request; {; ""code"" : 400,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""Precondition check failed."",; ""reason"" : ""failedPrecondition""; } ],; ""message"" : ""Precondition check failed."",; ""status"" : ""FAILED_PRECONDITION""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/700:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/700,1,['Log'],['Log']
Testability,Log instead of store CC fails by default BA-5721,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5095:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5095,1,['Log'],['Log']
Testability,Log metadata summarization totals,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4645:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4645,1,['Log'],['Log']
Testability,Log on Failures during retry.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/256:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/256,1,['Log'],['Log']
Testability,Log parallel cwl conformance test results.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3631:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3631,2,"['Log', 'test']","['Log', 'test']"
Testability,"Log smarter, not harder",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/778:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/778,1,['Log'],['Log']
Testability,Log some call caching metrics [BT-322],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6383:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6383,1,['Log'],['Log']
Testability,Log warnings for long running jobs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4872:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4872,1,['Log'],['Log']
Testability,Log workflow IDs and counts if metadata fails to be written,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4837:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4837,1,['Log'],['Log']
Testability,"Log workflow IDs and counts, and retry, if metadata fails to be written",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4838:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4838,1,['Log'],['Log']
Testability,"Log workflow id, start, and end",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2891:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2891,1,['Log'],['Log']
Testability,Log workflows producing large metadata counts [BW-969],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6641:0,Log,Log,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6641,1,['Log'],['Log']
Testability,Logging does not match cromwell's stdout,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4310:0,Log,Logging,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4310,1,['Log'],['Logging']
Testability,Logic to convert draft-3 AstNodes into wdlom expression elements,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3299:0,Log,Logic,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3299,1,['Log'],['Logic']
Testability,Logically revert #4263 since multi-Cromwell deployments no longer need a specific abort server. A simple git revert has a ton of conflicts but hopefully this shouldn't be too tough.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4596:0,Log,Logically,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4596,1,['Log'],['Logically']
Testability,Login to most docker.io centaur requests BT-141,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6192:0,Log,Login,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6192,1,['Log'],['Login']
Testability,"Logs captured from alpha environment:; ```; November 2nd 2018, 20:16:15.000 | 2018-11-03 00:16:15 [cromwell-system-akka.actor.default-dispatcher-57321] ERROR c.e.w.w.WorkflowStoreSubmitActor - Workflow com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction submit failed.; -- | --.   | November 2nd 2018, 20:16:15.000 | 2018-11-03 00:16:15 [cromwell-system-akka.actor.default-dispatcher-57321] ERROR c.e.w.w.WorkflowStoreSubmitActor - Workflow com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction submit failed.   | November 2nd 2018, 10:16:21.000 | 2018-11-02 14:16:21 [cromwell-system-akka.actor.default-dispatcher-42970] ERROR c.e.w.w.WorkflowStoreEngineActor - Error trying to fetch new workflows; com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure. The last packet successfully received from the server was 1 milliseconds ago. The last packet sent successfully to the server was 1 milliseconds ago.; 	at sun.reflect.GeneratedConstructorAccessor75.newInstance(Unknown Source); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425); 	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990); 	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562); 	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462); 	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3905); 	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530); 	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683); 	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2491); 	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4807); 	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4360:0,Log,Logs,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4360,1,['Log'],['Logs']
Testability,Looks like a wandering closing brace means this test was not asserting correctly,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5996:48,test,test,48,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5996,2,"['assert', 'test']","['asserting', 'test']"
Testability,"Looks like the relative output paths tests are breaking our AWS CI tests:; ```; should successfully run relative_output_paths *** FAILED *** (28 minutes, 35 seconds); centaur.test.CentaurTestException: Expected to find 1 item(s) at /tmp/outputs/relative_output_paths/greatpress.txt but got 0; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4833:37,test,tests,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4833,3,['test'],"['test', 'tests']"
Testability,Looks to be caused by . ```; [WARN] [06/30/2016 11:18:20.900] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/workflow-actor-747f3560-2635-4390-b126-fd8249b44bea]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1101:63,test,test-system-akka,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1101,4,"['Test', 'test']","['TestActor', 'test-system', 'test-system-akka']"
Testability,"Lots of INFO messages still: https://ci.commonwl.org/job/cromwell/150/consoleText; Perhaps the logger's level needs to be adjusted? Then all those `if (!args.quiet) ` could be removed. With regards to https://github.com/broadinstitute/cromwell/blob/97b7d324c5cbec4b29093aa26c5b10f5086b54bb/centaurCwlRunner/src/main/scala/centaur/cwl/CentaurCwlRunner.scala#L192; The result should **always** be output to stdout (and nothing else), regardless of `--quiet` . Cheers,",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3633:95,log,logger,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3633,1,['log'],['logger']
Testability,"Lots of changes to `SingleWorkflowRunnerActor`:; - Clients communicate with SWRA via an ask, giving callers like `Main` a `Future` whose success status can be used to generate an exit code.; - SWRA no longer manages shutting down the actor system, that becomes the responsibility of the caller. This allows tests that want to see certain error messages to shut down the system only after the error messages are seen by an event filter. The previous structure allowed for a race condition where messages that filters wanted to see were produced, but the actor system was torn down before the messages were delivered to the filters.; - SWRA is now an FSM. Also increased the default patience in `CromwellTestkitSpec` for `InputLocalizationWorkflowSpec` and friends. Does _not_ include any changes to address MySQL connection issues sporadically seen in SlickDataAccessSpec; per discussion with Jeff I'll ticket that separately.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/311:307,test,tests,307,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/311,1,['test'],['tests']
Testability,Lots of nesting centaur test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3403:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3403,1,['test'],['test']
Testability,"Made GoogleAuthMode scopes optional via a param/conf, still defaulting to the pipelines api scopes.; Removed unused scopes and data-dirs from google auth modes that do not uses them.; Moved access token TTL refresher from GcrAbstractFlow to GoogleAuthMode.; Fixed queryPostRoute logging method as ""GET"" instead of ""POST"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3369:279,log,logging,279,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3369,1,['log'],['logging']
Testability,"Made a small change to the preStart method of WFMA, it only tries to re-start incomplete workflows when the config ""workflow-restart"" is set to true. I don't know if I loved how I named that field, and I'm open to suggestions. . Since we don't have restarts configured right now, I didn't have a chance to test this change. I didn't update the Readme yet either, since this is not a change users can use yet, I'm realizing now we do need some way to keep track of all the documentation changes we'll need to make.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/823:306,test,test,306,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/823,1,['test'],['test']
Testability,"Made some changes to our Github Actions that should prevent certain slack messages from getting lost. Notes:; - Slack messages are sent to `#cromwell-integration-action`; - Slight change in behavior: We will get a message for any integration test that fails against `develop`, even if that failure didn't happen during a nightly run.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7159:242,test,test,242,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7159,1,['test'],['test']
Testability,"Mainly this is moving tests for functionality which isn't there yet into different files. One test remains, and two placeholders",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1052:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1052,2,['test'],"['test', 'tests']"
Testability,Make /query endpoint accessible for testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4715:36,test,testing,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4715,1,['test'],['testing']
Testability,Make a hybrid of something a lot like Kristian's [deadlock tester docker-compose](https://github.com/broadinstitute/cromwell/blob/develop/src/ci/bin/testDockerDeadlock.sh) with the existing Centaur system. The result should be Centaur running the full PAPI test suite against a horizontal Cromwell system.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4742:59,test,tester,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4742,3,['test'],"['test', 'testDockerDeadlock', 'tester']"
Testability,Make mock-jes great again!,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1571:5,mock,mock-jes,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1571,1,['mock'],['mock-jes']
Testability,"Make some values lazy, move a one-use function inside its caller, add a test case",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4876:72,test,test,72,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4876,1,['test'],['test']
Testability,"Make sure supplied inputs were wanted, reenable more tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2969:53,test,tests,53,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2969,1,['test'],['tests']
Testability,Make sure the test configs can cascade through,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/534:14,test,test,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/534,1,['test'],['test']
Testability,Make workflows/{version}/{id}/logs great again,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/946:30,log,logs,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/946,1,['log'],['logs']
Testability,Make-work the centaur test: https://github.com/broadinstitute/centaur/pull/148,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1940:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1940,1,['test'],['test']
Testability,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2077:184,log,logic,184,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077,1,['log'],['logic']
Testability,Makes ~ 2 * &lt;base&gt;^2 rows of metadata (~80000 as currently configured) in one burst. I Intentionally did not write a .test for this as I doubt Travis would survive. Not sure where this should live.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5504:124,test,test,124,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5504,1,['test'],['test']
Testability,"Making small changes to accommodate the Refresh_Token test in Centaur. NOTE: There's a todo that requires changing the centaur.wdl command from ""git checkout rm_refreshToken_test"" --> ""git checkout develop"". Must merge the refresh_token test into Centaur first before the develop branch will pass.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1183:54,test,test,54,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1183,2,['test'],['test']
Testability,Making tests consistent with prod/prodlike in https://github.com/broadinstitute/terra-helmfile/pull/5335,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7396:7,test,tests,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7396,1,['test'],['tests']
Testability,Manual Call Caching Testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1986:20,Test,Testing,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986,1,['Test'],['Testing']
Testability,Manually tested and working for public PDC and Kids First staging data. Not currently working for controlled access staging data though I suspect the issue is not in this code. I do not currently know of controlled access PDC data.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6485:9,test,tested,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6485,1,['test'],['tested']
Testability,"Many tools get input files and create the output files in the same folder as the input instead of the execution folder, as a result, I have nothing in execution folder but in the input folder I have a newly created file.; For instance, if I have a task; ```; task create_reference_fai {; input {; File reference; }. String name = sub(basename(reference, "".fasta""), "".fa"", """"). command { ; samtools faidx ~{reference}; }; runtime {; docker: ""quay.io/biocontainers/samtools@sha256:97b9627711c16125fe1b57cf8745396064fd88ebeff6ab00cf6a68aeacecfcda"" #1.2-0; }. output {; File out = name+"".fai""; }; }; ```; It will fail, because samtools faidx created the "".fai"" file in the Input folder as it is the same folder that is reference.fast ( /data/cromwell-executions/index_reference/8b9eaeee-bb8e-4754-9a6b-a853c772cf03/call-create_reference_fai/inputs/1627505414/ in my case) instead of execution ( /data/cromwell-executions/index_reference/8b9eaeee-bb8e-4754-9a6b-a853c772cf03/call-create_reference_fai/execution/ in my case) folder. I believe that Cromwell should control for this as it is against logic to have newly created files in the Input folder. Note: I use latest cromwell release with local backend on Ubuntu 18.10",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5482:1092,log,logic,1092,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5482,1,['log'],['logic']
Testability,"May fix weird test failures. I began getting test failures on my BackendConfiguration branch after I rebased on develop unrelated to anything I had changed. It looks like the workflow from the KV store test is visible to the test that runs after it, which led to more success messages than the assertions expected. Making this a separate PR in case the problem is waiting to bite anyone else.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/706:14,test,test,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/706,5,"['assert', 'test']","['assertions', 'test']"
Testability,Metadata decider logic BA-5978,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5205:17,log,logic,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5205,1,['log'],['logic']
Testability,"MetadataValue.apply was throwing an NPE exception when passed null, even though it had a call to .getOrElse("""").; Consolidated standard backend runtimeAttributeDefinitions implementation.; Added a GoogleAuthModeSpec.assumeHasApplicationDefaultCredentials in tests that use application default credentials.; Refactored away JesBackendLifecycleActorFactory's toJes, only used in one place where a similar standard method now exists.; Refactored away JesBackendLifecycleActorFactory's staticRuntimeAttributeDefinitions, only used in specs.; CromwellServer no longer hard codes the binding timeout.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1823:258,test,tests,258,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1823,1,['test'],['tests']
Testability,"Might not eliminate the ""programmer errors"" just yet, but does improve logging on (unexpected) restarts and eliminates the weird and unintentional parenting of the RootWorkflowFileHashCacheActor by the WorkflowManagerActor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5358:71,log,logging,71,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5358,1,['log'],['logging']
Testability,"Minimal example:. ```; workflow wf {; scatter (example in non_existent_scatter_variable) {}; }; ```. Produces similar output on firecloud (489f66b), but tested also on develop (5588e73):; ```java; 2017-02-22 13:49:48,448 cromwell-system-akka.dispatchers.api-dispatcher-23 INFO - Workflow 56b1f228-8054-4947-8dc3-372363c5e94b submitted.; 2017-02-22 13:49:57,791 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - 1 new workflows fetched; 2017-02-22 13:49:57,792 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Starting workflow UUID(56b1f228-8054-4947-8dc3-372363c5e94b); 2017-02-22 13:49:57,798 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Successfully started WorkflowActor-56b1f228-8054-4947-8dc3-372363c5e94b; 2017-02-22 13:49:57,799 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2017-02-22 13:49:58,220 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - MaterializeWorkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2020:153,test,tested,153,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020,1,['test'],['tested']
Testability,Minor changes to enable fetching of all logs for all calls in a workflow.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/129:40,log,logs,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/129,1,['log'],['logs']
Testability,Missing changelog message regarding Logback environment variables. Closes #345,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/530:36,Log,Logback,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/530,1,['Log'],['Logback']
Testability,Modified CallCacheReadActor to enable routing/pooling and better testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1326:65,test,testing,65,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1326,1,['test'],['testing']
Testability,Modify Docker file-passing test to pass deterministic content so assertions can be made to see if the files were actually passed!,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/87:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/87,2,"['assert', 'test']","['assertions', 'test']"
Testability,More centaur patience and logging.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4956:26,log,logging,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4956,1,['log'],['logging']
Testability,More logging / customization of the cromwell_id.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4763:5,log,logging,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4763,1,['log'],['logging']
Testability,"More logging for IO with explicit duration, class, and thread names",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5982:5,log,logging,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5982,1,['log'],['logging']
Testability,More logging for call caching metrics [BT-322],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6434:5,log,logging,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6434,1,['log'],['logging']
Testability,More reassuring log message when pipelines request fails,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4976:16,log,log,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4976,1,['log'],['log']
Testability,More tests for conf and db,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1949:5,test,tests,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1949,1,['test'],['tests']
Testability,"More use (and naming) of `OffsetDateTime`, less of `Timestamp`.; Replaced use of `java.util.Date` with `OffsetDateTime`.; Removed use of `OffsetDateTime.toInstant` & `.toEpochSecond`.; Using `OffsetDateTime.now` instead of the `KnowsWhatTimeItIs` trait.; Using `OffsetDateTime.toString` instead of `DateTimeFormatter.ISO_OFFSET_DATE_TIME`.; Removed unused `joda-convert` dependency, plus relying on transitive project dependencies.; `TestableJesJobExecutionActor` no longer tries to interact with the services in the engine.; Cleaned up a few more places where `MetadataValue.apply` was called with an extra `.toString`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/909:434,Test,TestableJesJobExecutionActor,434,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/909,1,['Test'],['TestableJesJobExecutionActor']
Testability,Most of this PR is noisy and does not change logic. This is caused by moving all JS stuff to CWL project and consolidated JsEncoder/Decoder into CwlJsEncoder/Decoder. I have a couple small outstanding things to clean up:. * remove Rhino dependency from WOM?; * figure out why encodeString needs to be used to form Map w/ String values. this may be a nashorn artifact.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3320:45,log,logic,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3320,1,['log'],['logic']
Testability,Most of this code is just propagating the IOFunction ErrorOr to the edges. `GlobFunctions` used some existing logic to re-create globbing function.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2656:110,log,logic,110,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2656,1,['log'],['logic']
Testability,"Most of this is just wiring so start by looking at the changes in CallCacheReadActor. I've updated it and made it accessed via a global, routed actor in CromwellRoot. Tests will inject their own dummy version. Mainly this makes testing easier as it's easier to inject the actor rather than relying on it being created to aim at an empty database. Potential downside: actor hierarchy is a little bit more top heavy now :(",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1326:167,Test,Tests,167,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1326,2,"['Test', 'test']","['Tests', 'testing']"
Testability,Motivating test case: https://github.com/broadinstitute/cromwell/pull/3331/files#diff-41a60e0223c67aab34606c0453d71b9f. - [x] Requires rebase onto develop after https://github.com/broadinstitute/cromwell/pull/3330 merges,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3331:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3331,1,['test'],['test']
Testability,Move Centaur tests requiring Vault to CircleCI [BT-97],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6187:13,test,tests,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6187,1,['test'],['tests']
Testability,Move conformance deviations to end of logs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3689:38,log,logs,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3689,1,['log'],['logs']
Testability,Move cromwell workflow testing up-front,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3503:23,test,testing,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3503,1,['test'],['testing']
Testability,Move cwl tests to sequential test suite so that they're not being restarted,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3070:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3070,2,['test'],"['test', 'tests']"
Testability,Move import tests back to 'develop',MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4154:12,test,tests,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4154,1,['test'],['tests']
Testability,Move job retry logic into EJEA,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1117:15,log,logic,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1117,1,['log'],['logic']
Testability,"Moved mysql dependency to test, and the server actually uses google-api-services-drive at runtime.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/74:26,test,test,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/74,1,['test'],['test']
Testability,"Moved parts of the shadow local backend into a new background executor.; Patches to tests based on changed to local: now with job id, fewer processes running in three step, using sfs config.; Replaced SGE backend with a config based version and added LSF example.; Revert: Jes's poll backoff starting at 30s up to 10 minutes is completely inappropriate for shared file system polling.; Docker Hub appears to have busted the v1 enpoint so disabling the test for now.; Sleep a second before letting the `WorkflowExecutionActorSpec` check for metadata status.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1252:84,test,tests,84,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1252,2,['test'],"['test', 'tests']"
Testability,Moved supervision from JES down into Standard trait.; Fixed some vals in the Standard trait.; Fixed non-Travised integration test `JesAttributesSpec`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1781:125,test,test,125,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1781,1,['test'],['test']
Testability,Moved tests into the correct directory.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/572:6,test,tests,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/572,1,['test'],['tests']
Testability,Multiple tickets have a root cause of CromwellTestKitSpec and are leading to frequent enough failures in QA Triage to warrant some eyeballs. These tickets include (but are not limited to):. #4457 ; #4454 ; #4453 ; #4418 ; #4469; #4470 ; #4521. --. https://fc-jenkins.dsp-techops.broadinstitute.org/view/Testing/view/Test%20Runners/job/cromwell-test-runner/2438,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4458:303,Test,Testing,303,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4458,3,"['Test', 'test']","['Test', 'Testing', 'test-runner']"
Testability,"My assumption is that by using log4j + logback for our logging infrastructure, we actually offer end users quite a bit of configurability in both what is logged as well as to where (e.g. appenders). However, without example and docs users don't know how to do this. For example, rather than using a log4j rotating log appender, Henry instead piped stdout into a standalone log appender. This means he had to build his own docker rather than use our published one.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1622:39,log,logback,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1622,5,['log'],"['log', 'logback', 'logged', 'logging']"
Testability,"My group has been running Cromwell with AWS Batch as part of our pipeline development process and we've observed several cases of workflows ""silently"" failing where no Batch jobs have failed but the workflow log points to missing RC files. From our testing, this issue seems to affect ~10% of the samples that we try to process, although the issue appears ""randomly"" as there is no single set of samples that reproduces the error time after time. After digging through several logs, I believe I've traced the error to an issue where a batch job is being submitted, but it the service finds a previously run job that uses a completely different set of input files and runs that job instead. This incorrect job runs to completion, but the outputs are written to the location specified in the original job, hence that failure to read the RC file. Below is an edited workflow log that demonstrates the failure:; ```; [2019-05-22 18:42:19,86] [info] Running with database db.url = jdbc:hsqldb:mem:7e164ea8-21fd-4b3a-864c-f8a8ea97645f;shutdown=false;hsqldb.tx=mvcc; [2019-05-22 18:42:25,85] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2019-05-22 18:42:25,86] [info] [RenameWorkflowOptionsInMetadata] 100%; [2019-05-22 18:42:25,92] [info] Running with database db.url = jdbc:hsqldb:mem:d3111f9f-5515-48da-b4c2-c9014a6eb8ab;shutdown=false;hsqldb.tx=mvcc; [2019-05-22 18:42:26,15] [warn] Unrecognized configuration key(s) for AwsBatch: auth, numCreateDefinitionAttempts, numSubmitAttempts; [2019-05-22 18:42:26,41] [info] Slf4jLogger started; [2019-05-22 18:42:26,62] [info] Workflow heartbeat configuration:; {; ""cromwellId"" : ""cromid-c5da692"",; ""heartbeatInterval"" : ""2 minutes"",; ""ttl"" : ""10 minutes"",; ""writeBatchSize"" : 10000,; ""writeThreshold"" : 10000; }; [2019-05-22 18:42:26,66] [info] Metadata summary refreshing every 2 seconds.; [2019-05-22 18:42:26,69] [info] WriteMetadataActor configured to flush with batch size 20",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5004:208,log,log,208,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5004,4,"['log', 'test']","['log', 'logs', 'testing']"
Testability,MySQL tests are no longer optional when running DbmsTests.; Removed duplicate hsqldb test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/721:6,test,tests,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/721,2,['test'],"['test', 'tests']"
Testability,"NJBGX5.tar.lz4 exists on a filesystem not supported by this instance of Cromwell. Supported filesystems are: s3. Please refer to the documentation for more information on how to configure filesystems: http://cromwell.readthedocs.io/en/develop/backends/HPC/#filesystems; 	at cromwell.core.path.PathParsingException.<init>(PathParsingException.scala:5); 	... 35 common frames omitted; 2018-06-13 14:29:48,013 cromwell-system-akka.dispatchers.backend-dispatcher-95 WARN - AwsBatchAsyncBackendJobExecutionActor [UUID(a67833cb)demux_only.illumina_demux:NA:1]: Unrecognized runtime attribute keys: preemptible, dx_instance_type; 2018-06-13 14:29:48,218 cromwell-system-akka.dispatchers.backend-dispatcher-95 INFO - AwsBatchAsyncBackendJobExecutionActor [UUID(a67833cb)demux_only.illumina_demux:NA:1]: `set -ex -o pipefail. if [ -d /mnt/tmp ]; then; TMPDIR=/mnt/tmp; fi; FLOWCELL_DIR=$(mktemp -d). read_utils.py extract_tarball \; /Volumes/nextseq_ngs/180405_NB501680_0019_AHKGNJBGX5.tar.lz4 $FLOWCELL_DIR \; --loglevel=DEBUG. # find 95% memory; mem_in_mb=`/opt/viral-ngs/source/docker/mem_in_mb_95.sh`. # note that we are intentionally setting --threads to about 2x the core; # count. seems to still provide speed benefit (over 1x) when doing so.; illumina.py illumina_demux \; $FLOWCELL_DIR \; 1 \; . \; \; \; --outMetrics=metrics.txt \; --commonBarcodes=barcodes.txt \; \; \; --max_mismatches=1 \; \; \; \; --minimum_quality=10 \; \; --JVMmemory=""$mem_in_mb""m \; --threads=64 \; --compression_level=5 \; --loglevel=DEBUG. rm -f Unmatched.bam; for bam in *.bam; do; fastqc_out=$(basename $bam .bam)_fastqc.html; reports.py fastqc $bam $fastqc_out; done`; 2018-06-13 14:29:48,871 INFO - Submitting job to AWS Batch; 2018-06-13 14:29:48,871 INFO - dockerImage: quay.io/broadinstitute/viral-ngs; 2018-06-13 14:29:48,871 INFO - jobQueueArn: arn:aws:batch:us-east-1:140059717706:job-queue/funnel-job-queue; 2018-06-13 14:29:48,871 INFO - commandLine: set -ex -o pipefail. if [ -d /mnt/tmp ]; then; TMPDIR=/mnt/",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:13131,log,loglevel,13131,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['loglevel']
Testability,"NOTE: This ticket refinement will require work with Google/Verily. Currently at the start of a call a PAPI-client must register a path to be delocalized via [`gsutil`](https://cloud.google.com/genomics/reference/rest/v1alpha2/pipelines#pipelineparameter). The PAPI `gsutil cp` does not use [`-r`](https://cloud.google.com/storage/docs/gsutil/commands/cp#description), so it does not work for nested directories. For POSIX-globs the cromwell ~~JES~~ PAPI backend is able to delocalize by creating a new folder containing matches of each of the outputs. We could try to flatten a directory in the same way to delocalize all the files nested inside the top level directory, but ideally we would maintain the paths to the directories. For example if a WDL command were to create a structure like:; ```; out/normal/sample.bam; out/tumor/sample.bam; ```. Even using our globs with `Array[File] bams = glob(""out/*/sample.bam"")` would cause problems right now with the way we flatten globs into a single directory. Cromwell creates a directory (sort-of) named `out/cromwell-glob-1/`, and then hard links in each of the `sample.bam` files. This won't work with the aforementioned glob as >1 file match the same name and will collide in the links. A/C: Delocalize globs and nested-directories with paths-in-the-cloud similar to the path-generated-by-the-command. A test should be created to ensure that a collision like the above delocalizes correctly. This will like require updates to the PAPI API, possibly even an implementation of a custom (de-)localizer in cromwell.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3173:1355,test,test,1355,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3173,1,['test'],['test']
Testability,"NOTE: if the PAPI v2 upgrade happens in all environments before horizontaling, this ticket becomes unnecessary and should be closed as a noop. OTHERWISE:. Adapt the existing Centaur test for PAPI v1 to PAPI v2 upgrade for a horizontal Cromwell configuration.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4801:182,test,test,182,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4801,1,['test'],['test']
Testability,Needs cleanup and some testing around JES restart in particular but AFAICT works.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/427:23,test,testing,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/427,1,['test'],['testing']
Testability,"Never merge this.; Need sanity checking. Testing method which I used was to run HelloWorld workflow using Cromwell built from this branch and wait for successful Carboniting (or OOM, or Cromwell starting to crumble in other ways).; Modifications made in this branch force Cromwell to copy the given number of root workflow's metadata jsons into the resulted carbonited json as if they were subworkflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5525:41,Test,Testing,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5525,1,['Test'],['Testing']
Testability,New centaur version test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2187:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2187,1,['test'],['test']
Testability,New describe endpoint test fails 100% of QA test runs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4494:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4494,2,['test'],['test']
Testability,New womgraph for the WDL in #2992:. ![test](https://user-images.githubusercontent.com/13006282/33627312-20999554-d9cb-11e7-9fef-e876f6714bb2.png),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3003:38,test,test,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3003,1,['test'],['test']
Testability,"Next phase of #2835. A CWL centaur test should be added that validates expected call/workflow outputs. The famous 3-step workflow uses `ps` to generate outputs, meaning that the actual content is highly variable depending on what other processes are running at the time. Instead, a stable output should be generated, something like [`""OH NO!\nOH NO!\n1""`](https://github.com/broadinstitute/cromwell/blob/f2d1c3bdd5535d9f6a997eadaf136742d86adbe5/centaur/src/main/resources/standardTestCases/continue_on_return_code.test#L11). If the output of the task is a File (path or CWL-File), the output may be affected by #2899.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2924:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2924,2,['test'],['test']
Testability,Nightly test for Cromwell Publish WDL,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4994:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4994,1,['test'],['test']
Testability,"No issues found with the production code, but a recent CaaS scare led to one additional unit and Centaur test each. The Centaur test would definitely benefit from some ""flock programming"" (h/t @aednichols) for more robust metadata assertions. Right now the only assertion is workflow success, which seems pretty weak except that it's better than what CaaS reported. Ideally I'd like to assert on something like the following: . From ; `; curl --silent -X GET ""http://localhost:8000/api/workflows/v1/<<UUID>>/metadata?expandSubWorkflows=false"" -H ""accept: application/json"" | jq -M '[.calls[""error_10_preemptible.delete_self_if_preemptible""] | .[] | {attempt,preemptible,retryableFailure,executionStatus,backendStatus} | del(.[]| nulls)]'; `. ```; [; {; ""attempt"": 1,; ""preemptible"": true,; ""retryableFailure"": true,; ""executionStatus"": ""RetryableFailure"",; ""backendStatus"": ""Preempted""; },; {; ""attempt"": 2,; ""preemptible"": false,; ""executionStatus"": ""Done"",; ""backendStatus"": ""Success""; }; ]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5101:105,test,test,105,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5101,5,"['assert', 'test']","['assert', 'assertion', 'assertions', 'test']"
Testability,No longer materializing workflows when testing `SlickDataAccess`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/721:39,test,testing,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/721,1,['test'],['testing']
Testability,"No one was paying attention to test coverage in slack, so removing the alerts.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5550:31,test,test,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5550,1,['test'],['test']
Testability,No real tests or docs yet but good enough for gulling.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4359:8,test,tests,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4359,1,['test'],['tests']
Testability,No reason to limit this now that the BCS tests are turned off. (also I'm not sure this was actually doing what it looks like it should be doing),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3636:41,test,tests,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3636,1,['test'],['tests']
Testability,"No regressions tests in the PR, but the following cases were tested manually:. - A bad key, never becoming good: failed after 5 minutes; - A bad key, becoming good after 1 minute: the workflow picked up and succeeded; - A bad key, followed by an abort after 1 minute: the workflow aborted successfully",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6983:15,test,tests,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6983,2,['test'],"['tested', 'tests']"
Testability,No tests yet.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/205:3,test,tests,3,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/205,1,['test'],['tests']
Testability,Non-summarizable metadata (>>> 99% of real world metadata) uses the fast insertion path. Currently includes some spamming code for testing that definitely should not be merged.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5509:131,test,testing,131,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5509,1,['test'],['testing']
Testability,Not actually much change required in Cromwell - mostly just bringing in the changes in https://github.com/broadinstitute/wdl4s/pull/42. NB: Won't pass tests until the wdl4s PR merges,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1627:151,test,tests,151,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1627,1,['test'],['tests']
Testability,"Not quite similar to #4001 and #3998, but also related to a call-cached-and-retried-centaur-test. In this case the workflow succeeds, producing a metadata key that should _not_ be written. The test is retried, the workflow call-caches, and then copies the same metadata key over, failing again. Example log: [retried_found_unwanted_keys_in_metadata.txt](https://github.com/broadinstitute/cromwell/files/2295492/retried_found_unwanted_keys_in_metadata.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4014:92,test,test,92,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4014,3,"['log', 'test']","['log', 'test']"
Testability,"Not terribly convinced of the value of the canary test when compared to the interesting five dollar genome case, but put here as the OKR asked for it. Also note that the original canary was a submission of 30k workflows, not a scatter. I modified it to fit in a single workflow run.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5196:50,test,test,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5196,1,['test'],['test']
Testability,"Not too happy that I had to change the way the FSM test worked, but the WorkflowActor seemed to be running fine.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/233:51,test,test,51,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/233,1,['test'],['test']
Testability,"Note that there is already `debug` level logging for the actual flush events, which might be a good idea to turn on to see if the settings we've chosen are reasonable or whether we're just flushing constantly and blowing up the Slick queue.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2543:41,log,logging,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2543,1,['log'],['logging']
Testability,Note that there's no documentation nor testing for this atm. Yes I'm aware of that :). Initial health monitor support; o Provide health monitor infrastructure to provide ability to attach checks for underlying subsystems; o Provide status endpoint which will query current contents of health monitor implementation; o Moved some google code to a new cloudSupport project; o Moved some general docker code to core from the dockerHashing project,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2582:39,test,testing,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2582,1,['test'],['testing']
Testability,"Note these fixes only apply to the config backend; JES does not currently seem to have a provision for specifying users other than root. This uses `/cromwell-executions` rather than `/root` as the execution root inside the container. Permissions of files and directories are liberalized for the users inside and outside of the container. All tests pass if I change `reference.conf` to say `String docker_user = ""nobody""`, but I've currently left `docker_user` as an unfilled (old-fashioned) `String?`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1865:342,test,tests,342,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1865,1,['test'],['tests']
Testability,"Note to @kcibul - this is just a placeholder for now, not a would-be punching bag like ""log smarter, not harder"" :). As I'm rewriting CromwellTestKitSpec and thus going through all of the variations of the ""run a wdl and check outputs/logs/etc"" tests in the codebase, I'm realizing that the extent of overlap with Centaur is even larger than I'd previously thought. We need to bring sanity to this ...; - On one hand, all of these ""run a full workflow"" type tests belong in Centaur. If not, define what Centaur is for, if anything; - On the other hand, having rapid feedback via sbt test is useful; - And people find it annoying to write proper ""unit"" tests on behavior; - I'd argue this is a code smell, our business logic is too wrapped up with the actor-y stuff. But that's part of what we need to decide. At the very least, we need to hash out WTF _is_ a ""unit test"" (i.e. running by 'sbt test'), what belongs in Centaur, etc.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1269:88,log,log,88,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1269,9,"['log', 'test']","['log', 'logic', 'logs', 'test', 'tests']"
Testability,"Note to reviewers: it is highly recommended to ignore the 'mass renames' commit and probably the 'enter the restart check token dispenser' commit too, those are nearly all noisy mechanical refactors. In addition to the regular job ""execution"" token dispenser, these changes add a second job ""restart check"" token dispenser that can be configured with a different rate limit. Apart from that there are some fairly minor changes to the EJEA FSM to account for the new token type. As warned about above, a lot of the changes here are mechanical noise; the conceptual changes are not really that big. I'm happy to walk through this in person if it isn't clear from looking through these diffs. EJEA tests are known to be failing which isn't surprising, still grinding through some fixes for those...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6590:695,test,tests,695,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6590,1,['test'],['tests']
Testability,Note to reviewers:; * The majority of the content of this PR is two metadata test cases. Feel free to skip over those. Reminder to myself: . - [x] Rebase onto develop when.`cjl_6346_extractor` merged. Question for pythonistas:; * ~Is there a more canonical way to lay out python test cases~. A thought for later:; * Can we add python tests to our travis CI?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5486:77,test,test,77,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5486,3,['test'],"['test', 'tests']"
Testability,"Note: Treat this as a draft/early look/WIP rather than a request to merge immediately. I forgot to push the ""draft"" button. A bunch of bash scripts to be run by Jenkins and executed on VMs in order to get overnight centaur testing of our performance scripts. * Lets the overnight perf tests work again; * Splits the logic into stages so that we aren't doing everything on a single VM (unblocking the transition to horicromtal); * See https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-perf-composite-deploy-and-centaur and the sub-jobs which it calls (especially https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-perf-run-centaur), which make use of these scripts.; * See https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-perf-composite-all-centaur-tests for a jenkins job which runs *all* of our centaur tests against ad-hoc perf Cromwells. TODOs:; - [ ] Document these changes in the google doc; - [ ] Better error reporting(?); - [x] Compile into a suite in jenkins(?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5075:223,test,testing,223,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5075,5,"['log', 'test']","['logic', 'testing', 'tests']"
Testability,Note:; * [x] Resolve rebase on top of test timeouts before merging. Worth checking before merging:. * [x] Travis CI; * [x] Jenkins PAPIv2 CI ([jenkins results](https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2-alpha1/776/)),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5929:38,test,test,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5929,1,['test'],['test']
Testability,"Nothing really clever about this PR, just cashing in on past investments in separation of concerns. 1. Remove SBT projects; - Clean compile time 64s -> 53s on M1; - Dependencies removed, no longer subject to security updates or conflicts (see https://github.com/broadinstitute/cromwell/pull/6948); 2. Remove Centaur integration tests; - Slightly improved Travis build time; - Less stuff to port when we leave Travis; 3. Sever connections between CWL and the rest of Cromwell; - Because of Cromwell's extremely compartmentalized design, only two files really reference CWL directly:; - Entry point for server mode; - Entry point for command-line Womtool; - Only small logic updates needed; 4. Can now safely delete top-level `cwl` directory because nothing depends on it. ---. Reviewer's guide:; - Commits up through [Remove obsolete tests](https://github.com/broadinstitute/cromwell/pull/6955/commits/7a26149d9e70818edf852a16b114809ca9c0dc29) are self-contained and pass CI on their own; - [No longer minimal](https://github.com/broadinstitute/cromwell/pull/6955/commits/557d7b72a97651bcdca8ee27590ebfa29473ad05) removes most of the code; - [Remove *.cwl files](https://github.com/broadinstitute/cromwell/pull/6955/commits/eb4eaef0574ec06a256d38bb222d01ebc44a7e9f) speaks for itself",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6955:328,test,tests,328,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6955,3,"['log', 'test']","['logic', 'tests']"
Testability,"Noticed that cached-copy localization strategy is broken in Cromwell-51. This test works on a cluster where `execution-dir` is some place to do execution and copy the inputs to, and `/different/file/system/` is on a different disk. Small task (`catsmallfile.wdl`):. ```wdl; version development. task CatSmallFile {; input {; File inp; }; command {; cat ${inp}; }; output {; String out = read_string(stdout()); }; }; ```. Config (`cromwell.conf`):; ```hocon; include required(classpath(""application"")). backend: {; ""default"": ""Local"",; ""providers"": {; ""Local"": {; ""actor-factory"": ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"",; ""config"": {; ""root"": ""<execution-dir>"",; ""filesystems.local.duplication-strategy"": [; ""cached-copy""; ]; }; }; }; }; ```. Command:. ```bash; echo ""Goodbye, call-caching"" >> /different/file/system/inp.txt; echo '{""inp"": ""/different/file/system/inp.txt""}' >> inputs.json. java -Dconfig.file=cromwell.conf -jar cromwell-50.jar run catsmallfile.wdl -i inputs.json; # <execution-dir>/cached-inputs/ is empty. java -Dconfig.file=cromwell.conf -jar cromwell-50.jar run catsmallfile.wdl -i inputs.json; # <execution-dir>/cached-inputs/ is populated; ```. ----. Anecdotally, I've noticed some of the permissions of localised files have changed, I wonder if this is related to that?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5533:78,test,test,78,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5533,1,['test'],['test']
Testability,"Noticed the integration tests were failing. . After looking into it a little, I'm pretty sure that what happened is that when [this commit](https://github.com/broadinstitute/cromwell/commit/cc636457bf46d6fec001976ee830ad81eaed35b8) un-hardcoded the aws region, the integration tests started trying to submit batches to `batch.default.amazonaws.com` rather than `batch.us-east-1.amazonaws.com`. I think that whatever library is importing the credentials file for use with in AwsAuthMode.scala isn't defaulting to `us-east-1` as advertised. . I believe this will fix the issue but you might prefer to solve the problem by correcting the default behavior instead; if so feel free to close this.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4326:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4326,2,['test'],['tests']
Testability,"Now and then we see jobs get wedged in a state where the following exception kicks in infinitely (as far as we've seen - at least several hours). Restarting cromwell and reattaching those jobs will immediately resolve it - implying that the error wasn't ""real"" at least not any more and that something was bonkers on our side. Standard logging doesn't reveal anything interesting that I've seen. It's not something I've found a way to reproduce reliably - at least not consistently. ```2016-12-09 16:45:21,896 cromwell-system-akka.dispatchers.backend-dispatcher-28 WARN - JesAsyncBackendJobExecutionActor [UUID(50f9b932)JointGenotyping.SplitGlob:72:1]: could not download return code file, retrying:; com.google.cloud.storage.StorageException: Remote host closed connection during handshake; at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:322); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:182); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:179); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:179); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:193); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:144); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:53); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:258); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:222); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.Files.readAllBytes(Files.java:315",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1782:336,log,logging,336,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782,1,['log'],['logging']
Testability,Now newly possible:; ```; sbt test; ```. (previously); ```; sbt -mem 4096 test; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3440:30,test,test,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3440,2,['test'],['test']
Testability,"Now that #4308 has merged, point the test URLs back to the develop branch. - [x] And then delete branch `cjl_cwl_relative_imports`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4397:37,test,test,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4397,1,['test'],['test']
Testability,"Now that our python dependency has been updated, the drslocalizer should work again and our tests should pass again.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7148:92,test,tests,92,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7148,1,['test'],['tests']
Testability,"Now that we're stopping the appenders for workflow logs, access to the underlying Logback context must be synchronized since an underlying non-threadsafe java.util.HashMap is being modified.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3956:51,log,logs,51,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3956,4,"['Log', 'log']","['Logback', 'logs']"
Testability,"Now that we've updated our WDLs to 1.0, we've found that `womtool graph` no longer works. It looks like it only supports draft2 and earlier WDL. `test.wdl`:; ```; version 1.0. workflow Test { }; ```. ```; $ java -jar womtool-35.jar graph /tmp/test.wdl ; Exception in thread ""main"" wdl.draft2.parser.WdlParser$SyntaxError: ERROR: Finished parsing without consuming all tokens. version 1.0; ^; ; 	at wdl.draft2.parser.WdlParser.parse(WdlParser.java:2330); 	at wdl.draft2.parser.WdlParser.parse(WdlParser.java:2335); 	at wdl.draft2.model.AstTools$.getAst(AstTools.scala:266); 	at wdl.draft2.model.WdlNamespace$.$anonfun$load$1(WdlNamespace.scala:160); 	at scala.util.Try$.apply(Try.scala:209); 	at wdl.draft2.model.WdlNamespace$.load(WdlNamespace.scala:160); 	at wdl.draft2.model.WdlNamespace$.loadUsingSource(WdlNamespace.scala:156); 	at wdl.draft2.model.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:571); 	at womtool.graph.GraphPrint$.generateWorkflowDigraph(GraphPrint.scala:19); 	at womtool.WomtoolMain$.graph(WomtoolMain.scala:94); 	at womtool.WomtoolMain$.dispatchCommand(WomtoolMain.scala:48); 	at womtool.WomtoolMain$.runWomtool(WomtoolMain.scala:125); 	at womtool.WomtoolMain$.delayedEndpoint$womtool$WomtoolMain$1(WomtoolMain.scala:130); 	at womtool.WomtoolMain$delayedInit$body.apply(WomtoolMain.scala:18); 	at scala.Function0.apply$mcV$sp(Function0.scala:34); 	at scala.Function0.apply$mcV$sp$(Function0.scala:34); 	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12); 	at scala.App.$anonfun$main$1$adapted(App.scala:76); 	at scala.collection.immutable.List.foreach(List.scala:389); 	at scala.App.main(App.scala:76); 	at scala.App.main$(App.scala:74); 	at womtool.WomtoolMain$.main(WomtoolMain.scala:18); 	at womtool.WomtoolMain.main(WomtoolMain.scala); ```; ; The `womgraph` command still works, but the output from that command is so verbose it's unusable for viewing our workflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4234:146,test,test,146,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4234,3,"['Test', 'test']","['Test', 'test']"
Testability,"OM)\n# https://askubuntu.com/a/823798\ntail /dev/zero"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://lifesciences.googleapis.com/"",; ""machineType"": ""custom-1-2048"",; ""googleProject"": ""encode-dcc-1016"",; ""monitoringScript"": ""gs://caper-data/scripts/resource_monitor/resource_monitor.sh"",; ""executionBucket"": ""gs://encode-pipeline-test-runs/caper_out_10"",; ""zone"": ""us-central1-b"",; ""instanceName"": ""google-pipelines-worker-ead27fbad8aa73b157bfc126cd63331f""; },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""[0,137]"",; ""docker"": ""ubuntu:latest"",; ""maxRetries"": ""1"",; ""cpu"": ""1"",; ""cpuMin"": ""1"",; ""noAddress"": ""false"",; ""zones"": ""us-central1-b"",; ""memoryMin"": ""2 GB"",; ""memory"": ""2 GB""; },; ""callCaching"": {; ""allowResultReuse"": true,; ""hit"": false,; ""result"": ""Cache Miss"",; ""hashes"": {; ""output count"": ""CFCD208495D565EF66E7DFF9F98764DA"",; ""runtime attribute"": {; ""failOnStderr"": ""68934A3E9455FA72420237EB05902327"",; ""docker"": ""A84529F7A095541F1249576699F24AA1"",; ""continueOnReturnCode"": ""614DAABB2D7AAB5D41921614A49E4F92""; },; ""input count"": ""CFCD208495D565EF66E7DFF9F98764DA"",; ""backend name"": ""50F66ECBC45488EE5826941BFBC50411"",; ""command template"": ""F41FEBA57D556A16A5F6C4EEF68ED1E0""; },; ""effectiveCallCachingMode"": ""ReadAndWriteCache""; },; ""inputs"": {},; ""backendLabels"": {; ""wdl-task-name"": ""fail-oom"",; ""cromwell-workflow-id"": ""cromwell-87492280-9828-4afa-b53e-bec675103c42""; },; ""labels"": {; ""wdl-task-name"": ""fail_oom"",; ""cromwell-workflow-id"": ""cromwell-87492280-9828-4afa-b53e-bec675103c42""; },; ""failures"": [; {; ""causedBy"": [],; ""message"": ""The compute backend terminated the job. If this termination is unexpected, examine likely causes such as preemption, running out of disk or memory on the compute instance, or exceeding the backend's maximum job duration.""; }; ],; ""jobId"": ""projects/99884963860/locations/us-central1/operations/1374639517116411519"",; ""monitoringLo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5815:3670,test,test-runs,3670,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5815,1,['test'],['test-runs']
Testability,"OT/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1; tmpDir=$(mkdir -p ""/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/tmp.bf92fa27"" && echo ""/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/tmp.bf92fa27""); chmod 777 ""$tmpDir""; export _JAVA_OPTIONS=-Djava.io.tmpdir=""$tmpDir""; export TMPDIR=""$tmpDir""; export HOME=""$HOME""; (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1. ); outed746149=""${tmpDir}/out.$$"" erred746149=""${tmpDir}/err.$$""; mkfifo ""$outed746149"" ""$erred746149""; trap 'rm ""$outed746149"" ""$erred746149""' EXIT; tee '/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-stdout.log' < ""$outed746149"" &; tee '/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-stderr.log' < ""$erred746149"" >&2 &; (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1. /usr/bin/aws s3 cp s3://pipeline.poc/sampledata/PSNL/FASTQS/HCC-1187BL-replicate_CAATGAGC-TATCGCAC.merged_R2.fq.gz .; ) > ""$outed746149"" 2> ""$erred746149""; echo $? > /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-rc.txt.tmp; (; # add a .file in every empty directory to facilitate directory delocalization on the cloud; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1; find . -type d -exec sh -c '[ -z ""$(ls -A '""'""'{}'""'""')"" ] && touch '""'""'{}'""'""'/.file' \;; ); (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1; sync. ); mv /gstore/cromwell_executi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5421:1730,log,log,1730,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5421,1,['log'],['log']
Testability,"Often we call a bash command in a task, read in the stdout, and set a variable to the string read in. When a cromwell job is submitted to SGE, however, cromwell prints the SGE job id to the stdout (don't know when or how often). When we then read from the stdout, the job id gets read in addition to the real output we are interested in. . The example test wdl can be found in /humgen/gsa-hpprojects/dev/tsato/wdl/testSGE.wdl. The output of `GetBamFileName` starts with the job-id + newline character. We don't want them. The same workflow runs as expected on a GSAx server.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1512:352,test,test,352,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1512,2,['test'],"['test', 'testSGE']"
Testability,"Ok, ok. This is less ""fixup"" and more ""start again and try to preserve the spirit of the test cases""...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1077:89,test,test,89,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1077,1,['test'],['test']
Testability,"On a restart, especially in a `NoNewCalls` state, cromwell shouldn't try to reconnect to dependent jobs if it isn't even readyToStart, aka the parent job is still running. In the `no_new_calls` test, `delayedTask1` should never be reconnected. - The workflow is submitted with options specifying [""workflowFailureMode"": ""NoNewCalls""](https://github.com/broadinstitute/cromwell/blob/4a37f95cc49567505ad50907f85c4fa046ac596e/centaur/src/main/resources/standardTestCases/no_new_calls/no_new_calls.options#L2); - Both `shouldSucceed` and `boundToFail` start ~simultaneously; - `boundToFail` fails quickly, putting the workflow in a state of not-starting-any-new-calls; - cromwell restarts; - shouldSucceed finishes minutes later; - A/C: cromwell should never try to reconnect to `delayedTask1`, meaning that no metadata key [should be found](https://github.com/broadinstitute/cromwell/blob/4a37f95cc49567505ad50907f85c4fa046ac596e/centaur/src/main/resources/standardTestCases/no_new_calls.test#L21-L33)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3011:194,test,test,194,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3011,2,['test'],['test']
Testability,"On behalf of @leepc12, opening this as a new issue (previously a comment in #2992). Another if-scatter bug.; i built a new `cromwell-31-d716fd2-SNAP.jar` from your `develop` branch.; ```wdl; workflow test {; 	Boolean b0 = true; 	Boolean b1 = true; 	Boolean b2 = true; 	scatter( i in range(3) ) {; 		if ( b0 ) {; 			call t0 as t1 { input: i=i }; 		}; 	}; 	if ( b1 ) {; 		scatter( i in range(3) ) {; 			call t0 as t2 { input: i=t1.out[i] }; 		}; 	}; 	if ( b1 && b2 ) {; 		scatter( i in range(3) ) {; 			call t0 as t3 { input: i=t2.out[i] }; 		}; 	}; }. task t0 {; 	Int? i; 	command {; 		echo ${i}; 	}; 	output {; 		Int out = read_int(stdout()); 	}; }; ```; error log; ```; $ java -jar /users/leepc12/code/cromwell/./target/scala-2.12/cromwell-31-d716fd2-SNAP.jar run test_conditionals_in_cromwell-30.wdl; Picked up _JAVA_OPTIONS: -Xms256M -Xmx1024M -XX:ParallelGCThreads=1; [2017-12-05 20:11:15,13] [info] Running with database db.url = jdbc:hsqldb:mem:7e58cfd2-b9b6-47f9-bda1-6fe045e7a665;shutdown=false;hsqldb.tx=mvcc; [2017-12-05 20:11:21,83] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2017-12-05 20:11:21,84] [info] [RenameWorkflowOptionsInMetadata] 100%; [2017-12-05 20:11:22,02] [info] Running with database db.url = jdbc:hsqldb:mem:e02f9206-cb15-468a-929a-82676a83a9b8;shutdown=false;hsqldb.tx=mvcc; [2017-12-05 20:11:22,47] [info] Slf4jLogger started; [2017-12-05 20:11:22,67] [info] Metadata summary refreshing every 2 seconds.; [2017-12-05 20:11:22,68] [info] Starting health monitor with the following checks: DockerHub, Engine Database; [2017-12-05 20:11:22,69] [info] WriteMetadataActor configured to write to the database with batch size 200 and flush rate 5 seconds.; [2017-12-05 20:11:22,71] [info] CallCacheWriteActor configured to write to the database with batch size 100 and flush rate 3 seconds.; [2017-12-05 20:11:23,78] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-12-05 20:11:23,82",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3007:200,test,test,200,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3007,2,"['log', 'test']","['log', 'test']"
Testability,"Once wdl4s memory validation removal PR is merge, enable ignored unit test cases and create missing one if there is one for this functionality.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/726:70,test,test,70,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/726,1,['test'],['test']
Testability,"Once we merge PR #15, funnel is going to start respecting resource requests from tasks. The defaults in the Cromwell TES backend are 1 cpu and 2 GB of RAM. So if we want the centaur tests to finish in a reasonable timeframe we need to hard code in local resources into Funnel's config.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2070:182,test,tests,182,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2070,1,['test'],['tests']
Testability,One of the request pays tests is failing fairly frequently. ![image](https://user-images.githubusercontent.com/165320/46824117-ef956c80-cd5d-11e8-88f1-7c17678b8329.png),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4233:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4233,1,['test'],['tests']
Testability,Only fixes this one test (hopefully).; Once the - vs _ battle settles we can act accordingly.; A few things to consider are:; - ~most of our settings in application.conf are -; - All akka/spray conf settings are -; - All our workflow options are _; - There can be no - in wdl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/473:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/473,1,['test'],['test']
Testability,"Only run sbt tests, not the full CI suite",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5488:13,test,tests,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5488,1,['test'],['tests']
Testability,"Only store null instead of """" for a clob.; Only store null instead of Array.empty[Byte] for a blob.; All lob columns are now nullable.; Added test to ensure that all lob columns are nullable.; Updated SqlConverters for converting to/from Option and empty lobs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1927:142,test,test,142,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1927,1,['test'],['test']
Testability,Oops. Restore insecure test skipping.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3687:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3687,1,['test'],['test']
Testability,"Opened a [Centaur ticket](https://github.com/broadinstitute/centaur/issues/234) to provide centaur testing for this, but since this won't be used in anger for a while punting for now.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2676:99,test,testing,99,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2676,1,['test'],['testing']
Testability,"Or, ""unflakify `WriteMetadataSpec`"". This test's assertions that metadata write batching and retrying would happen in the way it was expecting them to was upset if a scheduled metadata flush occurred before the first batch was full. This was leading to a non-trivial rate of sbt tests failing with messages like ""expected 50 database writes but got 52""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4898:42,test,test,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4898,3,"['assert', 'test']","['assertions', 'test', 'tests']"
Testability,"Order of events:. Start with #3344 and #3342 as those are the requirements for having multiple writer-Cromwell nodes share a database. Next, start #4239 to re-create a deadlocking issue, and address it with a solution:; #4249; #4240 . Generate test cases to make sure Cromwell is able to recover appropriately in case of shutdown:; #4242 ; And test cases to ensure that Cromwell is running/aborting workflows as expected across multiple nodes:; #4241",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4369:244,test,test,244,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4369,2,['test'],['test']
Testability,"Order of events:. Start with #3344 and #3342 as those are the requirements for having multiple writer-Cromwell nodes to safely share a database. Next, start #4239 de-serialize workflow heartbeats, and build a test case #4414 to re-create the deadlocking issue we've seen before in production. Follow up that work with a solution that addresses the deadlock. Below are two ideas brainstormed in the past:; #4249; #4240. Generate test cases to make sure Cromwell is able to recover appropriately in case of shutdown:; #4242. And test cases to ensure that Cromwell is running/aborting workflows as expected across multiple nodes:; #4241 . GDoc of plan as of March '19; https://docs.google.com/document/d/10AGE3foZsKOHlgUpq3BE4mkUYphcjYyxMt0miQz4FGk/edit?usp=sharing",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4370:209,test,test,209,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4370,3,['test'],['test']
Testability,"Originally filed by @helgridly as DataBiosphere/firecloud-app#118. The description there is:. > Here's a timing diagram for a workflow which has completed:; > ; > ![image](https://user-images.githubusercontent.com/775136/42900318-9d6210c6-8a96-11e8-99f2-27000ec27ba3.png); > ; > Here's one for a workflow which is still running:; > ; > ![image](https://user-images.githubusercontent.com/775136/42900360-bb327bae-8a96-11e8-893e-e8b05d6d08de.png); > ; > It stays like this until the workflow is complete. If I click the JES Operations link I see that my workflow has indeed gone through the pulling-docker, and localization steps and is now on running-docker, but that information isn't displayed in the timing diagram.; > ; > Can it be? I think it was once; I can't see any mention of `retry-1` in the operation info, so I'm wondering if we're failing to parse the response correctly if the workflow is running as opposed to done. My admittedly quick investigation shows that cromwell's workflow metadata API returns no `executionEvents` for running calls while those calls are in pulling-docker, localization, etc. steps. It seems the `executionEvents` only appear when the call is done or very close to done (I'm testing by hand). This is on PAPIv1 if that matters.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4487:1214,test,testing,1214,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4487,1,['test'],['testing']
Testability,"Our Python scripts can only be run by Python version >= 3.6, because we use string interpolation which was introduced in Python 3.6. But Travis environment is Ubuntu 16.04 Xenial LTS, which officially supports only Python <=3.5.; Thus running Python tests in Docker container.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5502:250,test,tests,250,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5502,1,['test'],['tests']
Testability,Our integration testing environments always stand up a Cromwell server. We need something to provide some testing for single workflow mode.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2411:16,test,testing,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2411,2,['test'],['testing']
Testability,Our new saner TES polling defaults noticeably increased the runtime of our TES integration tests. Reverting CI to old behavior with config update.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7126:91,test,tests,91,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7126,1,['test'],['tests']
Testability,OutOfMemoryError in run mode when log output exceeds 2GB,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7217:34,log,log,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7217,1,['log'],['log']
Testability,"Output/execution/script.submit""; [2016-11-24 15:22:45,18] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.testZippedOutput:NA:1]: job id: 26744; [2016-11-24 15:22:45,21] [info] WorkflowExecutionActor-d6475258-0f55-449c-be0b-e08e1e0c5049 [d6475258]: Starting calls: testMe.printPairStringString:0:1, testMe.printPairStringString:1:1, testMe.printPairStringString:2:1; [2016-11-24 15:22:45,22] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:0:1]: echo ""foo1 bar1""; [2016-11-24 15:22:45,22] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:1:1]: echo ""foo2 bar2""; [2016-11-24 15:22:45,22] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:2:1]: echo ""foo3 bar3""; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:0:1]: executing: /bin/bash /home/conradL/cromwell-executions/testMe/d6475258-0f55-449c-be0b-e08e1e0c5049/call-printPairStringString/shard-0/execution/script; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:0:1]: command: ""/bin/bash"" ""/home/conradL/cromwell-executions/testMe/d6475258-0f55-449c-be0b-e08e1e0c5049/call-printPairStringString/shard-0/execution/script.submit""; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:1:1]: executing: /bin/bash /home/conradL/cromwell-executions/testMe/d6475258-0f55-449c-be0b-e08e1e0c5049/call-printPairStringString/shard-1/execution/script; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:1:1]: command: ""/bin/bash"" ""/home/conradL/cromwell-executions/testMe/d6475258-0f55-449c-be0b-e08e1e0c5049/call-printPairStringString/shard-1/execution/script.submit""; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:2:1]: executing: /bin/bash",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1703:2069,test,testMe,2069,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1703,1,['test'],['testMe']
Testability,Outputs and logs return 404 if empty for a workflow,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1138:12,log,logs,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1138,1,['log'],['logs']
Testability,"Over the last 7 days, the `invalidate_bad_caches_jes_no_copy` test has failed over twice as often as the next flakiest test, and nearly 6 times as often as the next one after that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4891:62,test,test,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4891,2,['test'],['test']
Testability,Overhaul bcbio testing strategy,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4613:15,test,testing,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4613,1,['test'],['testing']
Testability,Overriding `WorkflowLogger.getName`.; Lookup loggers without synchronization. Create loggers with synchronization.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1456:45,log,loggers,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1456,2,['log'],['loggers']
Testability,"P Batch. Shut down Cromwell, restart Cromwell:. ```; 2024-08-19 14:47:51 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - Cromwell 88-e59a6aa-SNAP service started on 0:0:0:0:0:0:0:0:8000...; 2024-08-19 14:47:51 cromwell-system-akka.dispatchers.engine-dispatcher-55 INFO - MaterializeWorkflowDescriptorActor [UUID(119e11a5)]: Call-to-Backend assignments: wf_hello.hello -> GCPBATCH; 2024-08-19 14:47:52 cromwell-system-akka.dispatchers.engine-dispatcher-54 INFO - WorkflowExecutionActor-119e11a5-b981-4510-a6d9-b5c26dfbb4e3 [UUID(119e11a5)]: Restarting wf_hello.hello; 2024-08-19 14:47:53 cromwell-system-akka.dispatchers.engine-dispatcher-53 INFO - Assigned new job restart checking tokens to the following groups: 119e11a5: 1; 2024-08-19 14:47:55 cromwell-system-akka.dispatchers.engine-dispatcher-49 INFO - Not triggering log of restart checking token queue status. Effective log interval = None; 2024-08-19 14:47:55 cromwell-system-akka.dispatchers.engine-dispatcher-41 INFO - Triggering log of execution token queue status. Effective log interval = 300 seconds; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-47 INFO - Assigned new job execution tokens to the following groups: 119e11a5: 1; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-47 INFO - BT-322 119e11a5:wf_hello.hello:-1:1 is eligible for call caching with read = true and write = true; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-43 INFO - BT-322 119e11a5:wf_hello.hello:-1:1 cache hit copying nomatch: could not find a suitable cache hit.; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.engine-dispatcher-43 INFO - 119e11a5-b981-4510-a6d9-b5c26dfbb4e3-EngineJobExecutionActor-wf_hello.hello:NA:1 [UUID(119e11a5)]: Could not copy a suitable cache hit for 119e11a5:wf_hello.hello:-1:1. No copy attempts were made.; 2024-08-19 14:48:00 cromwell-system-akka.dispatchers.backend-dispatcher-84 ERROR - GcpBatchAsyncBackendJobExecutionActor [UUID(11",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7495:1066,log,log,1066,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7495,1,['log'],['log']
Testability,PAPI Conformance 74: Test support for reading cwl.output.json when running in a Docker container and just 'location' is provided.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3702:21,Test,Test,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3702,1,['Test'],['Test']
Testability,PAPI GPU tests apparently now need a larger boot disk [BA-6177],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5365:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5365,1,['test'],['tests']
Testability,PAPI conformance tests and eager size retrieval,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3492:17,test,tests,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3492,1,['test'],['tests']
Testability,"PAPI error code 2. Execution failed: pulling image: docker login: generic::unknown: retry budget exhausted (10 attempts): running docker login: exit status 1 (standard error: ""WARNING! Using --password via the CLI is insecure. Use --password-stdin.\nError response from daemon: Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers). Seen [here](https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2/170)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4438:59,log,login,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4438,2,['log'],['login']
Testability,PAPI v2 Error logging again,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4445:14,log,logging,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4445,1,['log'],['logging']
Testability,PAPI v2 stdout/stderr log annotation,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4026:22,log,log,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4026,1,['log'],['log']
Testability,PAPIv2 upgrade test requires secure,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4196:15,test,test,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4196,1,['test'],['test']
Testability,"PK, FK, UC, and IX names all use a standard naming pattern, and synced up clob/varchar lengths.; Added specs that check for the above.; Removed checks for unique index mismatches, as we have none.; Added blob implicits to match clob implicits.; Reimplemented database deadlock test.; Added an eventually wrapper within MetadataServiceActorSpec.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1905:277,test,test,277,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1905,1,['test'],['test']
Testability,"PR 1 of 3:; 1. Remove cromwell-core dependency from cloud-support; 2. Run jes centaur on travis; 3. Generate coverage for integration tests. ---. Instead of credentials requiring WorkflowOptions, any String => String will do, including Map[String, String].; Retrieving credentials only requires actorSystem/executionContext when retrying.; Moved logback dependencies from common library over to testing.; Added mockito to all artifact tests.; Fixed akka-stream-testkit dependency appearing in core's main instead of test.; Split confusingly named baseDependencies into configDependencies ++ catsDependencies.; Other dependency cleanup to reduce duplicates and extra transitive dependencies.; Log stderr from centaur'ed cromwell failures.; The total attempt time to connect to cromwell for a test is now longer than the timeout of a cromwell restart.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2938:134,test,tests,134,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2938,9,"['Log', 'log', 'mock', 'test']","['Log', 'logback', 'mockito', 'test', 'testing', 'testkit', 'tests']"
Testability,"PR 2 of 3:; 1. Remove cromwell-core dependency from cloud-support; 2. Run jes centaur on travis; 3. Generate coverage for integration tests. ---. Centaur now uses configurable cloudSupport for auth, instead of always using application-default.; Refresh token is passed as a file path, then read by centaur.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2948:134,test,tests,134,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2948,1,['test'],['tests']
Testability,PR 3 of 3:; 1. Remove cromwell-core dependency from cloud-support; 2. Run jes centaur on travis; 3. Generate coverage for integration tests. ---. Publishing test validates executables and cross-versioned libraries/docs.; Updated run_tests_parallel.sh for centaur monorepo.; Quieted centaur runs of sbt assembly and coverage gen/upload.; Don't run problematic no_new_calls on TES.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2955:134,test,tests,134,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2955,2,['test'],"['test', 'tests']"
Testability,PR clone to run tests: #5217,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5251:16,test,tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5251,1,['test'],['tests']
Testability,Papi network config updates and tests BT-372,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6476:32,test,tests,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6476,1,['test'],['tests']
Testability,"Part 2 of implementing the ""Remove Object"" [PR in OpenWDL](https://github.com/openwdl/wdl/pull/228). Allow us to treat calls as structs of their outputs, for purposes of evaluating downstream expressions, eg:; ```wdl; workflow blah { ; call foo; FooOutputStruct foo_outputs = foo; }. task foo {; # ... output {; Int i = ...; String s = ...; }; }. struct FooOutputStruct {; Int i; String s; }; ```. TODOs:; - [x] Simple use case (eg the example above); - [x] Within `scatter`s and `if`s; - [x] Don't disrupt the `after` logic; - [ ] Make sure WDL draft-2 and 1.0 still can't do this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4535:519,log,logic,519,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4535,1,['log'],['logic']
Testability,"Part II of the ""unexpected `JobFailedNonRetryable` during cache output copying"" saga. - Stop using the confusing `JobFailedNonRetryable` response when an output copy fails (it's not like `JobSucceeded` which correctly tells us that the job has already succeeded); - Update the tests to reflect this; - Add some sanity checks to the EJEA's handlers (specifically - did we copy the right outputs, and did we fetch the right outputs from the database)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4091:277,test,tests,277,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4091,1,['test'],['tests']
Testability,"Partition same-named file inputs from other kinds of inputs for special `gsutil -m cp` treatment. . `lots_of_inputs` Centaur test 400-input timings on the (misleadingly named) `do_nothing` call:. * Cromwell 44: 4765.68 seconds / 400 inputs = 11.91 seconds / input; * Cromwell 45: 1181.64 seconds / 400 inputs = 2.95 seconds / input; * Cromwell 46: 200.82 seconds / 400 inputs = 0.50 seconds / input. But 400 inputs isn't really ""lots"", so trying this test again on 46 with 20,000 inputs to drown out the lower order terms:. * Cromwell 46: 2663.71 seconds / 20,000 inputs = 0.13 seconds / input",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5141:125,test,test,125,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5141,2,['test'],['test']
Testability,"Passed in this jenkins run https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/740 (which still failed from other tests, hopefully fixed by https://github.com/broadinstitute/cromwell/pull/4296)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4301:90,test,test-runner,90,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4301,2,['test'],"['test-runner', 'tests']"
Testability,Patched swagger-ui routes and added tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/119:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/119,1,['test'],['tests']
Testability,Patches for problematic tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2975:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2975,1,['test'],['tests']
Testability,"Path+modtime should guarantee that files are the same. . I have expanded the SFS test scala file so it properly tests the new `cached-inputs` strategy. I have added information on how to use the strategy in the docs, and added this PR to the changelog. ### Help still needed. There are two things that I could not figure out without cromwell developer help:. ~~* Checking whether a file exists and copying it to the cache should never be done by multiple threads simeltaneously. I have used the `synchronized` method to prevent this. I used an object for this, because I am sure it is unique within the JVM at cromwell runtime. This works fine, but I can imagine this can be solved in a nicer way using akka? However the akka documentation is an extensive jungle on its own, and requires quite some expertise to navigate. I could not find very quickly what I needed, and the `synchronization` primitive works fine. It is also **just 2 lines of extra code**. So if the akka solution is quite elegant as well I would like to learn about that. If not, well, it is not too bad having 2 lines of understandable commented code that is not ""the proper way of doing things(TM)"".~~. * I used the SFS scalatests to make sure everything worked correctly. However this did not test whether the thread safety was working correctly. I have added a test wdl in centaur: `standardTestCases/cached_copy/cached_copy.wdl`. This workflow creates 10 jobs that read the same input file. This workflow will crash if the `cached-inputs` cache is not used in a thread-safe way. I tested this manually with `java -Dbackend.providers.Local.config.filesystems.local.localization.0=""cached-copy"" -jar server/target/scala-2.12/cromwell-41-*-SNAP.jar run centaur/src/main/resources/standardTestCases/cached_copy/cached_copy.wdl` . Is there a way to integrate such a test in scalatest file? I have tried the `.par` method, but that did not quite work. I hope you will consider this PR as it solves an important issue for us. Thanks!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4900:2989,test,test,2989,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4900,4,['test'],"['test', 'tested']"
Testability,"Per #4826, when Cromwell is configured with `workflow-log-temporary: false` and workflow does not specify `final_workflow_log_dir`, Cromwell server does not close the log file resulting in a file handle leak. The lack of a file close also prevents certain FUSE drivers from flushing any file contents to remote storage, making it impossible for clients to actually read the logs until the server is terminated (which may be never). . Looking at the code, there is no call to `workflowLogger.close()` or `workflowLogger.close(andDelete = false)` unless the file is being copied. This line in WorkflowActor.scala:; `case None if WorkflowLogger.isTemporary => workflowLogger.close(andDelete = true)`; should change to:; `case None => workflowLogger.close(andDelete = WorkflowLogger.isTemporary)`. At this point in the code, the log contents have been fully written and the log should be closed, regardless of whether the logs are temporary or not. . I've tested that this fix resolves the issue according to repro instructions in #4826.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5016:54,log,log-temporary,54,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5016,7,"['log', 'test']","['log', 'log-temporary', 'logs', 'tested']"
Testability,"Per our test review meeting, we see this is one of the more commonly failing tests. . ![image](https://user-images.githubusercontent.com/165320/46823419-236f9280-cd5c-11e8-8f32-0401c7bdee71.png). (working on a BQ sample of an error for some more details)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4232:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4232,2,['test'],"['test', 'tests']"
Testability,"Per the CWL Specifications, section 3.3:. > Requirements are inherited. A requirement specified in a Workflow applies to all workflow steps; a requirement specified on a workflow step will apply to the process implementation of that step and any of its substeps. It appears that Cromwell does not correctly implement the above. For example, a `dockerPull` requirement specified in a workflow, does not get applied to a command in a subworkflow. Cromwell version: `cromwell-36`. `test.cwl`; ```; #!/usr/bin/env cwl-runner. cwlVersion: v1.0; class: Workflow. requirements:; - class: SubworkflowFeatureRequirement; - class: DockerRequirement; dockerPull: ubuntu. inputs: []. steps:; substep:; run: subworkflow.cwl; in: []; out: [container]; ; outputs:; container:; type: File; outputSource: substep/container; ```. `subworkflow.cwl`; ```; #!/usr/bin/env cwl-runner. cwlVersion: v1.0; class: Workflow. requirements:; - class: SubworkflowFeatureRequirement. inputs: []. steps:; substep:; run: command.cwl; in: []; out: [container]; ; outputs:; container:; type: File; outputSource: substep/container; ```. `command.cwl`; ``` ; cwlVersion: v1.0 ; class: CommandLineTool. baseCommand: ['grep', 'docker', '/proc/1/cgroup']. inputs: []; outputs:; container:; type: stdout; ```. `test.yaml`; ```; {}; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4544:479,test,test,479,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4544,2,['test'],['test']
Testability,Per-workflow log file does not get closed in server mode,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4826:13,log,log,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4826,1,['log'],['log']
Testability,Per-workflow logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/254:13,log,logging,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/254,1,['log'],['logging']
Testability,Perf Testing: Workflow launch script,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4090:5,Test,Testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4090,1,['Test'],['Testing']
Testability,Perf test to find an appropriate max-scatter-width-per-scatter,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4990:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4990,1,['test'],['test']
Testability,"Perf testing has shown that removing this query improves CC time and reduces DB load (see last row in CC google doc); Unclear if it's worth keeping it as a configurable thing ?; This keeps storing the individual hashes, it just stops using them for ""fast"" cache miss detection.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4121:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4121,1,['test'],['testing']
Testability,Perf testing- Metadata keys needed for metrics,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4189:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4189,1,['test'],['testing']
Testability,Performance Test for Query Endpoints,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4717:12,Test,Test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4717,1,['Test'],['Test']
Testability,Performance tests for DOS inputs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4300:12,test,tests,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4300,1,['test'],['tests']
Testability,Periodically copy workflow level logs to bucket,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1448:33,log,logs,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1448,1,['log'],['logs']
Testability,Persistence updates rebased on logging improvements.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/67:31,log,logging,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/67,1,['log'],['logging']
Testability,Phil's cpuPlatform runtime attribute + a Centaur test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4704:49,test,test,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4704,1,['test'],['test']
Testability,"Picking up from #1816. Setup for Centaur testing. The current TES [schema](https://github.com/ga4gh/task-execution-schemas) doesn't allow for changing the default user, so centaur fails on:; - non_root_specified_user. Is there a way to configure Centaur to skip specific tests?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1979:41,test,testing,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1979,2,['test'],"['testing', 'tests']"
Testability,"Pipeline developers like me would benefit from being able to parse the wdl language model so I can write tests that aren't covered by the current wdltool validate. . I hear this could be easily accomplished by wdl4s dumping to json, which users could then parse with custom tools. . Desired tests:; 1. Specified inputs exist and are accessible (depends on backend); 2. Docker images exist and can be read/pulled; 3. dependencies.zip contains all of the necessary files to run the workflow.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3502:105,test,tests,105,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3502,2,['test'],['tests']
Testability,"Please check this issue.; When I configure the aws, I followed up this page. (https://docs.opendata.aws/genomics-workflows/; ); I did not use the all-in-one template. With 3 step configure, I setup the cromwell server (Custom AMI -> VPC..and etc -> cromwell server instance). <!-- Which backend are you running? -->; aws. <!-- Paste/Attach your workflow if possible: -->; ```; task echoHello{; command {; echo ""Hello AWS!""; }; runtime {; docker: ""ubuntu:latest""; }. }. workflow printHelloAndGoodbye {; call echoHello; }; ```. <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORDS, TOKENS AND OTHER SENSITIVE MATERIAL: -->; [cromwell-server.log](https://github.com/broadinstitute/cromwell/files/2897001/cromwell-server.log)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4677:657,log,log,657,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4677,2,['log'],['log']
Testability,"Please ignore the giant metadata blob, that was generated from the nested workflows purely for testing purposes.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5223:95,test,testing,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5223,1,['test'],['testing']
Testability,Possibly removes some flakiness in sbt test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3455:39,test,test,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3455,1,['test'],['test']
Testability,PostMVPified (and/or just deleted) some tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1107:40,test,tests,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1107,1,['test'],['tests']
Testability,"Potential fix for CROM-6807, putting up draft PR to see test results.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6654:56,test,test,56,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6654,1,['test'],['test']
Testability,Pre-processing of CWL workflows and tools for conformance tests on PAPI,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3171:58,test,tests,58,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3171,1,['test'],['tests']
Testability,PreparationActor_for_d5800039:assemble_de\; novo_with_deplete.deplete_taxa:-1:1 [UUID(d5800039)]: Docker lookup failed; java.lang.Exception: Docker image quay.io/broadinstitute/viral-ngs@sha256:be458fe91e176102c9c8e2933c9ff430d899a0ec8f919939cbdb26f2d4c7\; d4be not found; at cromwell.engine.workflow.WorkflowDockerLookupActor.cromwell$engine$workflow$WorkflowDockerLookupActor$$handleLookupFailure(\; WorkflowDockerLookupActor.scala:194); at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:86); at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:70); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); at akka.actor.FSM.processEvent(FSM.scala:684); at akka.actor.FSM.processEvent$(FSM.scala:681); at cromwell.engine.workflow.WorkflowDockerLookupActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowDockerLookupActor.scal\; a:37); at akka.actor.LoggingFSM.processEvent(FSM.scala:820); at akka.actor.LoggingFSM.processEvent$(FSM.scala:802); at cromwell.engine.workflow.WorkflowDockerLookupActor.processEvent(WorkflowDockerLookupActor.scala:37); at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:678); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:672); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); at cromwell.docker.DockerClientHelper$$anonfun$dockerResponseReceive$1.applyOrElse(DockerClientHelper.scala:16); at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:172); - at akka.actor.Actor.aroundReceive(Actor.scala:517); at akka.actor.Actor.aroundReceive$(Actor.scala:515); at cromwell.engine.workflow.WorkflowDockerLookupActor.aroundReceive(WorkflowDockerLookupActor.scala:37); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588); at akka.actor.ActorCell.invoke(ActorCell.scala:557); at akka.dispatch,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4912:1349,Log,LoggingFSM,1349,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4912,1,['Log'],['LoggingFSM']
Testability,Preprocess workflow and inputs for conformance tests on PAPI,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3169:47,test,tests,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3169,1,['test'],['tests']
Testability,Pretty much all the tests have already been re-written in each backend implementation. The missing ones were added.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1046:20,test,tests,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1046,1,['test'],['tests']
Testability,"Prevent workflow log file handle leakage. There are two distinct workflow log shutdown paths depending on whether the `final_workflow_log_dir` workflow option is set, this addresses both.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3770:17,log,log,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3770,2,['log'],['log']
Testability,"Previously only returned outputs for in-memory workflows.; With DSDEEPB-364 storing outputs for JES in the db, this should satisfy DSDEEPB-393; Also added slightly faster debugging of failed workflow tests, with the `fsm.stateData` of why the test actually failed, instead of just timing out.; TODO: For even more helpful debugging, print stderr during tests, or capture tail of stderr to `fsm.stateData` object.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/105:200,test,tests,200,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/105,3,['test'],"['test', 'tests']"
Testability,"Probably mixed up the name while refactoring, the log path needs to be a file path (ie gs://balblabl/jes.log) for JES to use it as a filename when delocalizing its logs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/303:50,log,log,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/303,3,['log'],"['log', 'logs']"
Testability,"Produces a 500 error like; ```; {; ""status"": ""error"",; ""message"": ""Statement cancelled due to timeout or client request""; }; ```; TODO: if the 55-second request timeout fires and kills the request, we should still make sure the 60-second query kill also gets logged somehow.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5087:259,log,logged,259,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5087,1,['log'],['logged']
Testability,Production is hitting an error handler [0] that attempts to stringify too large a value and causes the server to crash before it manages to emit the log. This is a common enough situation that we have a library function for it. [0] https://github.com/broadinstitute/cromwell/blob/aen_wx_892/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/stores/ValueStore.scala#L117,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6981:149,log,log,149,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6981,1,['log'],['log']
Testability,"Program_required_data/deFuse/defuse-data/gmap/est4/est4.ref153offsets64strm...done (331,380,368 bytes, 38.82 sec); Pre-loading ref positions, kmer 15, interval 3......done (625,955,632 bytes, 54.79 sec); Starting alignment; No paths found for 279; No paths found for 396; No paths found for 1308; No paths found for 1785; No paths found for 1880; No paths found for 1883; No paths found for 1947; No paths found for 1948; No paths found for 2184; No paths found for 2262; No paths found for 2403; No paths found for 2536; No paths found for 2577; No paths found for 2742; No paths found for 2756; No paths found for 2907; No paths found for 2919; No paths found for 2921; No paths found for 3058; No paths found for 3298; No paths found for 3837; No paths found for 3942; No paths found for 4020; No paths found for 4124; No paths found for 4274; Processed 405 queries in 703.84 seconds (0.58 queries/sec); Removed existing memory for shmid 262152; Removed existing memory for shmid 131076; ; real 14m1.724s; user 3m28.053s; sys 0m13.563s; ```. - The WDL I am using: [defuse.wdl.txt](https://github.com/broadinstitute/cromwell/files/2651338/defuse.wdl.txt). The commands I use when running this in the docker container interactively are the same. - I encounter the same error using Cromwell 32 and Cromwell 36. - A similar error was reported [here](https://bitbucket.org/dranew/defuse/issues/36/defuse-with-segmentation-error) for when deFuse was run on a server. I tried running the failing gmap command alone through Cromwell and it succeeded. - The breakpoints files that gmap uses as input for the failing steps differ (deFuse generates these files in earlier steps). - Many gmap steps are run in deFuse; some do succeed when run through Cromwell. - The full log for the Cromwell version: ; [defuse.log](https://github.com/broadinstitute/cromwell/files/2653318/defuse.log); - The full log for the docker version: ; [defuse.log](https://github.com/broadinstitute/cromwell/files/2653319/defuse.log)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4465:6943,log,log,6943,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4465,6,['log'],['log']
Testability,Programmer error and logging in PAPI request manager,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4671:21,log,logging,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4671,1,['log'],['logging']
Testability,Proposing this change to the docker deadlock test since it progressed past the database connection issues 8/8 times in https://travis-ci.com/broadinstitute/cromwell/builds/132908257,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5241:45,test,test,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5241,1,['test'],['test']
Testability,Prototype to inform conversation on WDL directories in OpenWDL (https://github.com/openwdl/wdl/pull/241). TODO:; - [x] Add a test to ensure I didn't accidentally add this to WDL 1.0 (where `Directory` would be treated like a `struct` name). Limits:; - Pipelines API v1 cannot handle sub-directories.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3980:125,test,test,125,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3980,1,['test'],['test']
Testability,Provide automated integration testing for cromwell `run` mode,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2411:30,test,testing,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2411,1,['test'],['testing']
Testability,Provide better documentation/examples for logging configuration,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1622:42,log,logging,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1622,1,['log'],['logging']
Testability,Publish additional metadata for recordkeeping and Centaur testability. Closes #1006,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1020:58,test,testability,58,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1020,1,['test'],['testability']
Testability,Pull docker images before running tests with short timeouts BT-144 BT-146,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6228:34,test,tests,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6228,1,['test'],['tests']
Testability,Pull request for #BA-5929 issue:; https://broadworkbench.atlassian.net/browse/BA-5929. Changes:; Implemented store larger values in WomFloat type via changing Double implementation to BigDecimal.; Also added validation logic of type compatibility.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5203:219,log,logic,219,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5203,1,['log'],['logic']
Testability,"Pull request for https://github.com/broadinstitute/cromwell/issues/4982 issue.; Changes:; - Implemented file transferring via TransferManager; - Removed assertions that caused `copying directories is not yet supported` exception; - Fixed incorrect work of `use_relative_output_paths` option; - Fixed logs and output files copying (tested manually on following backends: local, AWS, GCP).; - Added support for `AWS` filesystem in centaur's `fileSystemCheck` ; - Refactored `CheckFiles`; - Added an integration tests checking that workflow execution results and logs are correctly copied",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5110:153,assert,assertions,153,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5110,5,"['assert', 'log', 'test']","['assertions', 'logs', 'tested', 'tests']"
Testability,"Put in testing for restarts. . A possible (and preferred by this author) solution would be to seed a database with a known state and make sure a launching cromwell picks things up properly. That sounds like it'd probably be in the Centaur-ish space, but perhaps not. Another possibility (and not preferred by this author) would be to have a system that submits stuff, shuts down that cromwell, launches another cromwell and goes to town.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1329:7,test,testing,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1329,1,['test'],['testing']
Testability,"Putting up for early review before OOO, have not tested manually nor automatically.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6948:49,test,tested,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6948,1,['test'],['tested']
Testability,"R2=trim_end_R2,; monitoring_script=monitoring_script,; memory_task2=memory_task2,; TAG=TAG; }; }; call trimAdapters {; input:; input_r1=trimCellBarcode.fastqDebarcodedR1,; input_r2=trimCellBarcode.fastqDebarcodedR2,; sampleName=sampleName,; barcode=barcode,; low_quality_cutoff=low_quality_cutoff,; read_length_cutoff=read_length_cutoff,; adapters_1=adapters_1,; adapters_2=adapters_2,; trim_start_R1=trim_start_R1,; trim_end_R1=trim_end_R1,; trim_start_R2=trim_start_R2,; trim_end_R2=trim_end_R2,; monitoring_script=monitoring_script,; memory_task2=memory_task2,; TAG=TAG; }; } ; }. task trimCellBarcode {; File f1; File f2; String sampleName; String? barcode; File command; Int bases; File? monitoring_script; Int memory_task1. command <<<; set -euo pipefail. #if the WDL/task contains a monitoring script as input; if [ ! -z ""${monitoring_script}"" ]; then; chmod a+x ${monitoring_script}; ${monitoring_script} > monitoring.log &; else; echo ""No monitoring script given as input"" > monitoring.log &; fi. perl ${command} paired ${f1} ${f2} ${bases} ${sampleName}.${barcode}.R1.debarcoded.fq.gz ${sampleName}.${barcode}.R2.debarcoded.fq.gz; >>>. runtime {; cpu : 1; memory : '${memory_task1} MB'; time : 24; }. output {; File fastqDebarcodedR1 = ""${sampleName}.${barcode}.R1.debarcoded.fq.gz""; File fastqDebarcodedR2 = ""${sampleName}.${barcode}.R2.debarcoded.fq.gz""; }; }; ; task trimAdaptersWithoutBarcodes {; File input_r1; File input_r2; Int low_quality_cutoff; Int read_length_cutoff; String adapters_1; String adapters_2; Int trim_start_R1; Int trim_end_R1; Int trim_start_R2; Int trim_end_R2; String TAG; String sampleName; Int memory_task2; File? monitoring_script. command <<<; set -euo pipefail. #if the WDL/task contains a monitoring script as input; if [ ! -z ""${monitoring_script}"" ]; then; chmod a+x ${monitoring_script}; ${monitoring_script} > monitoring.log &; else; echo ""No monitoring script given as input"" > monitoring.log &; fi. cutadapt -f fastq -q ${low_quality_cutoff} -m ${rea",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5396:4012,log,log,4012,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5396,1,['log'],['log']
Testability,REMOVE /workflows/{version}/{id}/[logs/outputs]/{call},MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/984:34,log,logs,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/984,1,['log'],['logs']
Testability,Raise exception instead of silently retrying in case when Centaur test fails with exception type other than CentaurTestException [BT-145],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6197:66,test,test,66,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6197,1,['test'],['test']
Testability,"Ran a workflow using V40 Cromwell on AWSBATCH that had as outputs (one outputfile.vcf for each of the shards in the workflow):. ```; output {; Array[File] outputs = task.outputvcf; }; ```. I used the following workflow options:; ```; {; ""workflow_failure_mode"": ""NoNewCalls"",; ""default_runtime_attributes"": {; ""maxRetries"": 1; },; ""final_workflow_outputs_dir"": ""s3://bucket/Cromwell/results"",; ""use_relative_output_paths"": ""false"",; ""final_workflow_log_dir"": ""s3://bucket/Cromwell/workflowLogs"",; ""final_call_logs_dir"": ""s3://bucket/Cromwell/workflowLogs""; }; ```. All calls of the workflow completed successfully but the workflow itself failed. . Error Message I got:; `""copying directories is not yet supported: s3://s3.amazonaws.com/bucket/Cromwell/results/workflowName/1ec38d0b-afc4-4cd5-90f1-f015395d6e36/call-task/shard-0/outputfile.vcf""`. Oddly enough, the correct prefixes for the output files were created in the correct S3 bucket, they just don't have an object there, and via the CLI they appear as directories. ??? . For the logs, a prefix was made that is empty, and the log file was written successfully to one level higher than the prefix it is supposed to be in. So instead of:; ```; s3://bucket/Cromwell/workflowLogs/workflowName/<workflowid>.log; ```; there is:; ```; s3://bucket/Cromwell/workflowLogs/workflowName/ (empty prefix); s3://bucket/Cromwell/workflowLogs/<workflowid>.log (successfully written file). ```; Thoughts?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4982:1037,log,logs,1037,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4982,4,['log'],"['log', 'logs']"
Testability,Re-armor the Rhino in a way that plays nice with real world CWLs like Wash U rnaseq and doesn't do this:. ```; Caused by: java.lang.IllegalStateException; at org.mozilla.javascript.ContextFactory.initGlobal(ContextFactory.java:177); at cwl.internal.EnhancedRhinoSandbox.assertContextFactory(EnhancedRhinoSandbox.scala:94); at cwl.internal.EnhancedRhinoSandbox.eval(EnhancedRhinoSandbox.scala:42); at cwl.internal.EcmaScriptUtil$.evalRaw(EcmaScriptUtil.scala:71); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3410:270,assert,assertContextFactory,270,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3410,1,['assert'],['assertContextFactory']
Testability,"Re-enable and make the `""handle coercion failures gracefully""` test in `MaterializeWorkflowDescriptorActorSpec` work again",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1067:63,test,test,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1067,1,['test'],['test']
Testability,Re-enable draft3_read_write_functions test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3636:38,test,test,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3636,1,['test'],['test']
Testability,Re-organize the running state of EJEA and tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3373:42,test,tests,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3373,1,['test'],['tests']
Testability,Re-pin the conformance hash and fix the most recently added CWL conformance test by creating a directory for Directories without a `path` or `location`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3649:76,test,test,76,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3649,1,['test'],['test']
Testability,Re-review the code around all caching matches and confirm that the expected components are being checked. Flush out the unit tests to make sure those components all have some kind of test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1987:125,test,tests,125,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1987,2,['test'],"['test', 'tests']"
Testability,Recent change to JES travis test made it blind to failures,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1353:28,test,test,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1353,1,['test'],['test']
Testability,Recent changes in Cromwell has made it such that mock-jes no longer works. . https://www.youtube.com/watch?v=DtRNg5uSKQ0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1571:49,mock,mock-jes,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1571,1,['mock'],['mock-jes']
Testability,Redirect extra logging generated during DRS file localization [WA-307],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5740:15,log,logging,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5740,1,['log'],['logging']
Testability,Redo of #3667 with language and version inference. Also logs and metadata's the *actual* language factory we end up using,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3676:56,log,logs,56,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3676,1,['log'],['logs']
Testability,"Reduce number of logged ""unhandled"" messages",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4260:17,log,logged,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4260,1,['log'],['logged']
Testability,Reduce number of parallel tests running on TES backend [BT-101],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6174:26,test,tests,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6174,1,['test'],['tests']
Testability,Reduce quantity of scary logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1421:25,log,logging,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1421,1,['log'],['logging']
Testability,"Reduce quantity of scary logging (and don't rely on scary logging in the tests) Closes 1311, Closes 1422",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1422:25,log,logging,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1422,3,"['log', 'test']","['logging', 'tests']"
Testability,Reduced test framework dependencies,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6474:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6474,1,['test'],['test']
Testability,"Reducing tests parallelism level: first, sequentially run all test, which may involve restarting Cromwell, and only afterwards run all other test (which are not triggering Cromwell restart) in parallel",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5325:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5325,3,['test'],"['test', 'tests']"
Testability,Refactor CAJEA pollStatus logic,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4654:26,log,logic,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4654,1,['log'],['logic']
Testability,Refactor perf tests and support horicromtal [BA-4842],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5077:14,test,tests,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5077,1,['test'],['tests']
Testability,"Refactor perf tests from ""all-in-one"" to ""modular"" [BA-4842 part 1]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5075:14,test,tests,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5075,1,['test'],['tests']
Testability,Refactor run mode tests [BA-5963],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5147:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5147,1,['test'],['tests']
Testability,"Refactor, Rebase, Merge + Test WDL4S PR",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1522:26,Test,Test,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1522,1,['Test'],['Test']
Testability,"Refactored from its original version, this creates the structure to support multiple access token strategies but does not bring in the logic from BT-426 to actually get an access token for Azure. That latter bit is now the subject of a separate ticket BT-436.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6553:135,log,logic,135,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6553,1,['log'],['logic']
Testability,Reference Disk Manifest Builder App Test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7017:36,Test,Test,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7017,1,['Test'],['Test']
Testability,"Refined as:. - One log message when a hog group begins to be limited; - One log message when a hog group is no longer being limited; - One log message at a configurable interval, listing *all* hog groups being limited (and their total jobs)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4557:19,log,log,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4557,3,['log'],['log']
Testability,Refresh token functionality: fix tests or remove feature,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4504:33,test,tests,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4504,1,['test'],['tests']
Testability,Regression test for comments before 'version',MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4384:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4384,1,['test'],['test']
Testability,Regression testing for CWL on Local backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3734:11,test,testing,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3734,1,['test'],['testing']
Testability,Reinstante invalid_runtime_attributes test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2940:38,test,test,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2940,1,['test'],['test']
Testability,Reinstate a whole bunch of centaur tests. Let the shoes drop...!,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2858:35,test,tests,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2858,1,['test'],['tests']
Testability,Reinstate centaur test:; - [ ] `no_new_calls`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2865:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2865,1,['test'],['test']
Testability,Reinstate centaur tests:; - [x] `write_lines`; - [ ] `fofn_caching`; - [x] `array_io`; - [x] `write_lines_files`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2864:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2864,1,['test'],['tests']
Testability,Reinstate refresh_token tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2911:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2911,1,['test'],['tests']
Testability,Reinstated no_new_calls centaur test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2925:32,test,test,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2925,1,['test'],['test']
Testability,"Related maybe: https://github.com/broadinstitute/cromwell/issues/3905. When my job is killed by our cluster (SGE or Slurm) the rc file will not appear anymore. Cromwell then stay forever waiting on this file.; When manual writing this file (aka `echo ""2"" > rc`) cromwell does see this as a failed job. I have tested this also on a Local backend but here the problem does not exists. I think this is because cromwell stays connected to the process. I have tested cromwell 34 and the current develop branch (ce27a93). For testing I have used this workflow:; ```; version 1.0. workflow Test {; input {; }. call Echo as echo {; input:; }. output {; }; }. task Echo {; input {; }. command {; # killing bash process; kill -9 $$; echo test; }. output {; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4050:309,test,tested,309,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4050,5,"['Test', 'test']","['Test', 'test', 'tested', 'testing']"
Testability,"Related to (but does not close) https://github.com/broadinstitute/cromwell/issues/4051. In the issue above, doubt was raised whether we correctly support tabs. I wanted to test whether we do and add a test, and this change does both.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4059:172,test,test,172,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4059,2,['test'],['test']
Testability,Related:; - Allow centaur tests to disable retries.; - Add the `test_timestamp` to bigquery reports.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4178:26,test,tests,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4178,1,['test'],['tests']
Testability,Relative imports regression fix and test [BA-6006],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5183:36,test,test,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5183,1,['test'],['test']
Testability,Remove KV test in ServiceRegistryActorSpec Closes #1039,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1048:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1048,1,['test'],['test']
Testability,Remove LoggingReceive on metadata service actors [BA-5986 fixup],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5193:7,Log,LoggingReceive,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5193,1,['Log'],['LoggingReceive']
Testability,Remove MetadataAck from dead letter logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1023:36,log,logging,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1023,1,['log'],['logging']
Testability,"Remove bashisms from conformance test wdl.; Pick at most one assembly jar for the centaurCwlRunner.; Killing cromwell on parallel conformance test exit.; Renamed ""travis"" directory to the more generic ""ci"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3631:33,test,test,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3631,2,['test'],['test']
Testability,Remove deprecated perf test from release docs [CROM-6795],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6488:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6488,1,['test'],['test']
Testability,Remove logging that could error with multiple compute environments [BT-429],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6547:7,log,logging,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6547,1,['log'],['logging']
Testability,"Remove notests config, assembly is now testless",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/560:39,test,testless,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/560,1,['test'],['testless']
Testability,"Remove refresh token docs, tests [CROM-6719]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6331:27,test,tests,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6331,1,['test'],['tests']
Testability,Remove unnecessary(?) application.conf in bcs tests [BA-5964],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5144:46,test,tests,46,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5144,1,['test'],['tests']
Testability,Remove waiting for queue space status (and add testing via Dummy backend) [BW-387],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6047:47,test,testing,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6047,1,['test'],['testing']
Testability,Removed `/workflows/{version}/{id}/[logs/outputs]/{call}` endpoints. Closes #984,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/989:36,log,logs,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/989,1,['log'],['logs']
Testability,"Removed `WorkflowDescriptorSpec`. Most tests were about copying logs and outputs which lives in a different (better) place now.; The one test regarding caching config that might be useful later was moved to the backend project and left ignored, with some pre-work to prepare it for whenever it will be prioritized.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1061:39,test,tests,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1061,3,"['log', 'test']","['logs', 'test', 'tests']"
Testability,Removed unused `TestBackendLifecycleActorFactory`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2547:16,Test,TestBackendLifecycleActorFactory,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2547,1,['Test'],['TestBackendLifecycleActorFactory']
Testability,Rename server logging to file logging since we don't seem to use serv…,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/270:14,log,logging,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/270,2,['log'],['logging']
Testability,Rendered file: [job retry logic doc](https://github.com/broadinstitute/cromwell/blob/a5926453aaf94ee73167f99c54ebe21e064f6e92/docs/developers/bitesize/jobRetryLogic/jobRetryLogic.md),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5304:26,log,logic,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5304,1,['log'],['logic']
Testability,Reopening after moving tests over to wdl4s and bumping the wdl4s version.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1833:23,test,tests,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1833,1,['test'],['tests']
Testability,"Reopening https://github.com/broadinstitute/cromwell/pull/5545 as an internal branch so tests run correctly. Changelog:. - Added config option `docker.perform-registry-lookup-if-digest-is-provided` with default True (https://github.com/broadinstitute/cromwell/pull/5545/commits/e9965d8f9a385b289f15b23b3fb923ecb8c0ea38); - Added logic to `DockerConfiguration.scala` to `sendDockerRequest` if `performRegistryLookupIfDigestIsProvided` is `true`, else just `lookupKvsOrBuildDescriptorAndStop`. . Motivation:. - Cromwell only allows call-caching when a digest is provided.; - The digest registry lookup fails because Cromwell isn't respecting the system proxy. ; - This disables call-caching, even though we've provided the digest. From original PR:. > This PR is based on a comment in the Slack, and ongoing conversation in How to configure proxies? (which stems from #5006).; >; > Essentially, I don't want Cromwell to lookup my container when I provide it as a digest, because if the request fails (because Cromwell isn't respecting the system proxy), I still want call-caching to work. The main reason Cromwell seems to want to lookup the external registry is for the docker size which gets logged to metadata and doesn't seem to be used again. Thanks @mcovarr for the initial feedback, and sorry it took so long to action your suggestions. I've moved this to an internal branch so tests run automatically (as suggested in the past). I've included some of your feedback (that the dockerSize is used in the Google Backends) to the `reference.conf` and the `DockerConfiguration.scala`. I haven't included it in the documentation, but it's documented in the `reference.conf`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6140:88,test,tests,88,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6140,4,"['log', 'test']","['logged', 'logic', 'tests']"
Testability,Replace blacklisted cache entry log message with metric [BA-6311],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5470:32,log,log,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5470,1,['log'],['log']
Testability,Replace no-longer-available tutum/curl for CI curl test [CROM-6757],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6360:51,test,test,51,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6360,1,['test'],['test']
Testability,"Replaces #5075. For best results, review in conjunction with:. - Updated perf [documentation](https://docs.google.com/document/d/1cv338uMqTNVVYVEC78k4iMTG_zyZloon3v9e4l3TdM8) ; - NB: check whether this has been updated yet in the TODOs list below); - Refactored Jenkins scripts (see [documentation](https://docs.google.com/document/d/1cv338uMqTNVVYVEC78k4iMTG_zyZloon3v9e4l3TdM8)). TODOs:; - [x] Update perf [documentation](https://docs.google.com/document/d/1cv338uMqTNVVYVEC78k4iMTG_zyZloon3v9e4l3TdM8). TODOs (but not in this ticket):; - [ ] Come up with a test case to exercise horicromtal; - [ ] Add a load balancer in front of multiple readers? (for the api tests)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5077:560,test,test,560,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5077,2,['test'],"['test', 'tests']"
Testability,"Reported by @asmirnov239. Cromwell 30.2 doesn't seem to short-circuit for logical operators so that the following fails to evaluate when `optional_int` is undefined:. ```wdl ; Integer? optional_int; if (defined(optional_int) && select_first([optional_int]) == 2 ) {; #expresssions to do if optional_int is defined and equal to 2; }; ```. expected behavior: if `optional_int` is undefined, if statement evaluates to false. ; actual behavior: cromwell fails and stops with the error: . >Evaluating defined(gc_low_high_filter_params) && select_first([gc_low_high_filter_params]) == 2 failed: select_first failed. All provided values were empty. While it hasn't been tested, I presume that cromwell doesn't short-circut for the `||` operator...but it should!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3384:74,log,logical,74,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3384,2,"['log', 'test']","['logical', 'tested']"
Testability,"Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2037:8189,log,log,8189,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037,1,['log'],['log']
Testability,"Required for the Wash U CWL and conformance test 93. I originally wrote this to demonstrate that handling of array of file secondary files was broken in Cromwell, but actually it looks like even regular file secondary files are broken on the Docker local backend. 😢. This must use the branch `cwl_secondary_files` as it requires a fix for a shellquoting bug wrt CWL expressions that is only on this branch. The `cwl_secondary_files` conformance test demonstrates these issues in the context of inputs to a CommandLineTool. To test with cwltool:. ```; cd ${CROMWELL_REPO}/centaur/src/main/resources/standardTestCases/cwl_secondary_files; cwltool cwl_secondary_files.cwl cwl_secondary_files.json; ```. Note from the cwltool output how each primary input file is put into its own separate staging directory alongside all of its secondary files. 🤔 . For Cromwell this needs to be tested with server mode since run mode blows up. Start up a server:. ```; cd ${CROMWELL_REPO}/centaur/src/main/resources/standardTestCases/cwl_secondary_files; java -jar /path/to/cromwell.jar server; ```. Then run the Centaur test:. ```; cd ${CROMWELL_REPO}; sbt ""centaur/it:testOnly * -- -n cwl_secondary_files""; ```. Note that in Cromwell none of the secondary files are staged into the inputs directory, not even for the single file. This Centaur test requires files to be staged in the same directory where the Cromwell server is running which I don't think is something the Travis Centaur setup currently supports. However once this bug is fixed conformance test 93 may be sufficiently equivalent and perhaps this test can just be deleted. Please don't delete the expression shellquoting fix though, we want to keep that. 🙂 It would be nice to find a test other than this that exercises it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3317:44,test,test,44,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3317,10,['test'],"['test', 'testOnly', 'tested']"
Testability,Resolve issues below. . https://github.com/broadinstitute/cromwell/issues/7238; https://github.com/broadinstitute/cromwell/issues/7232. Trailing colon as added to mount before this. Now batch returns trailing colon. Also fixes now failing unit tests for GCP Batch. Add ability to define specific multiple zones in workflow. Single zone and region were already supported.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7240:244,test,tests,244,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7240,1,['test'],['tests']
Testability,"Resolves flaky tests, and covers real-users too in case they ever run into a similar situation.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6381:15,test,tests,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6381,1,['test'],['tests']
Testability,Restart Testing Project,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2354:8,Test,Testing,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2354,1,['Test'],['Testing']
Testability,"Restart tests are those that command Centaur to restart Cromwell partway through. They [run sequentially](https://github.com/broadinstitute/cromwell/blob/d60b2a225a32960970890d1253374c7e057db3b7/centaur/src/main/scala/centaur/test/standard/CentaurTestFormat.scala#L43), meaning they don't start until after all the other tests have finished. Some of them also run really long, extending completion times a lot. Technically this change means that the restart test will no longer be in a horicromtal-style suite, but the main point of those suites is to verify that workflows get distributed across runners anyway. The new [restart-only suite](https://github.com/broadinstitute/cromwell/actions/runs/7107864176/job/19350092073) ran in 36 minutes. | |Before this sprint| This PR |; | --- | ------------- | ------------- |; | Centaur Papi V2 Beta|1:08|[0:56](https://github.com/broadinstitute/cromwell/actions/runs/7107864176/job/19350091880)|; | Centaur Horicromtal PapiV2 Beta | 1:34 |[1:02](https://github.com/broadinstitute/cromwell/actions/runs/7107864176/job/19350093905)|; |Centaur Papi V2 Beta (restart)|N/A|[0:38](https://github.com/broadinstitute/cromwell/actions/runs/7107864176/job/19350092073)|. In this pre-refactor sample run, `restart_while_failing` alone bloated runtime by 24 minutes:; ```; Late finishers; +--------------------------------------+-----------------+----------------------------+----------------------------+; | name | runtime_minutes | start | END |; +--------------------------------------+-----------------+----------------------------+----------------------------+; | restart_while_failing | 27 | 2023-12-05 22:00:46.653000 | 2023-12-05 22:28:14.005000 |; | draft3_call_cache_capoeira | 38 | 2023-12-05 21:25:25.583000 | 2023-12-05 22:04:17.569000 |; | sub_workflow_abort | 6 | 2023-12-05 21:53:35.602000 | 2023-12-05 21:59:55.385000 |; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7333:8,test,tests,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7333,4,['test'],"['test', 'tests']"
Testability,Restore Centaur BCS from cron nightly testing to per commit,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3554:38,test,testing,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3554,1,['test'],['testing']
Testability,Restore Centaur BCS to cron nightly testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3555:36,test,testing,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3555,1,['test'],['testing']
Testability,Restore PAPI v1 stdout/stderr log streaming.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3984:30,log,log,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3984,1,['log'],['log']
Testability,"Restore missing && to test, correct expectation.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/452:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/452,1,['test'],['test']
Testability,Restore test runs to cromwell-test-executions,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/451:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/451,2,['test'],"['test', 'test-executions']"
Testability,Retry call caching centaur tests BT-271,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6344:27,test,tests,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6344,1,['test'],['tests']
Testability,Retry centaur tests after logging to Sentry.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4000:14,test,tests,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4000,2,"['log', 'test']","['logging', 'tests']"
Testability,Retry output assertion in tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/920:13,assert,assertion,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/920,2,"['assert', 'test']","['assertion', 'tests']"
Testability,"Retrying these will always fail because they'll get cache hits from the initial attempt, rather than the workflow they expect. (Just triggering Jenkins tests for now...)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6657:152,test,tests,152,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6657,1,['test'],['tests']
Testability,"Revert ""ID-377 Setup pact for consumer contract testing.""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7146:48,test,testing,48,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7146,1,['test'],['testing']
Testability,"Revert ""WX-927 Lots of Centaur tests for GCPBATCH (#7496)""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7512:31,test,tests,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7512,1,['test'],['tests']
Testability,Reverts broadinstitute/cromwell#7123. Test to see if this fixes issues with our build+release process.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7146:38,Test,Test,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7146,1,['Test'],['Test']
Testability,"Reworking ""run a wdl"" tests, first blast",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1259:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1259,1,['test'],['tests']
Testability,"Reworks the stats actor to passively receive information about workflows / jobs instead of asking for them.; Job status changes are published every time the execution store is modified.; Workflow status changes are published every time the WA changes state. When a workflow execution completes (ie the WEA sends back a terminal response), jobs run by this workflow are removed from the count.; When a workflow completes (ie the WA dies) it's removed from the count. Also logs periodically (in single workflow mode only) the number of jobs in each status.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1778:471,log,logs,471,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1778,1,['log'],['logs']
Testability,"Right now logs are copied after the workflow finishes as opposed to the JES/stdout/stderr logs of yore, which do this periodically. The logs are useful to know what is going on _while_ a workflow is running. . Also when the workflow fails we want to make sure that the workflow logs appear as this is the most common time you'd need to look at them (debugging)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1448:10,log,logs,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1448,4,['log'],['logs']
Testability,"Right now per-workflow logs are not (ever?) copied when the workflow fails. We need these logs to help debug issues in execution, so they are most helpful when the workflow fails.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1621:23,log,logs,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1621,2,['log'],['logs']
Testability,Robustify Centaur tests to a restarting Cromwell,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2352:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2352,1,['test'],['tests']
Testability,Root cause is absolutely our old friend `CromwellTestKitSpec`. Jenkins job # 1778; Jenkins job # 1838. Jenkins job # 2607 w/ the following .... ```; org.scalatest.exceptions.TestFailedDueToTimeoutException: The code passed to eventually never returned normally. Attempted 210 times over 3.3457535841 minutes. Last failure message: Submitted did not equal Succeeded.; at org.scalatest.concurrent.Eventually.tryTryAgain$1(Eventually.scala:432); at org.scalatest.concurrent.Eventually.eventually(Eventually.scala:439); at org.scalatest.concurrent.Eventually.eventually$(Eventually.scala:391); at cromwell.CromwellTestKitSpec.eventually(CromwellTestKitSpec.scala:251); at cromwell.CromwellTestKitSpec.runWdlAndAssertOutputs(CromwellTestKitSpec.scala:344); at cromwell.WorkflowOutputsSpec.$anonfun$new$4(WorkflowOutputsSpec.scala:38); at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85); at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83); at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104); at org.scalatest.Transformer.apply(Transformer.scala:22); at org.scalatest.Transformer.apply(Transformer.scala:20); at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078); at org.scalatest.TestSuite.withFixture(TestSuite.scala:196); at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195); at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076); at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088); at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289); at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088); at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070); at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396); at scala.collection.immutable.List.fo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:174,Test,TestFailedDueToTimeoutException,174,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,1,['Test'],['TestFailedDueToTimeoutException']
Testability,"Run @ruchim 's Travis test in a different mode, or branch, that shuts down and brings back up. Does a count right after to check that the right number of jobs are recovered (no duplicates). TO DO:; - [ ] Make sure you have as many JES jobs as you think you have; - [ ] If not, fix it!; - [ ] If so, yay!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2111:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2111,1,['test'],['test']
Testability,Run CWL test with output(s) in Centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2924:8,test,test,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2924,1,['test'],['test']
Testability,Run CWL tests in Centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2835:8,test,tests,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2835,1,['test'],['tests']
Testability,Run Cromwell in CWL test dir,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2994:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2994,1,['test'],['test']
Testability,Run JUnit tests for CromwellRefdiskManifestCreator detached Maven sub-project as part of the CI procedure [BA-6528],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5597:10,test,tests,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5597,1,['test'],['tests']
Testability,Run a nightly test of running BCBIO CWL workflows against the PAPI backend.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3723:14,test,test,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3723,1,['test'],['test']
Testability,Run abort tests sequentially in centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3042:10,test,tests,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3042,1,['test'],['tests']
Testability,Run automation unit tests in Jenkins,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4155:20,test,tests,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4155,1,['test'],['tests']
Testability,Run bare minimum tests on AWS backend until it supports authentication with docker repos [BT-57],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6110:17,test,tests,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6110,1,['test'],['tests']
Testability,Run cleanup explicitly since disabled tests no longer do it. Closes #854,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/859:38,test,tests,38,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/859,1,['test'],['tests']
Testability,Run individual conformance tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3030:27,test,tests,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3030,1,['test'],['tests']
Testability,"Running 3step workflow on JES with a workflow options file that looks like this. ``` json; {; ""monitoring_script"": ""gs://sfrazer-dev/monitor.sh""; }; ```. the `monitor.sh` script contains:. ``` bash; echo this; echo is; echo a; echo test; ```. It seems that for my three invocations of this workflow, they all had the correct data in `monitoring.log` for the `ps` sub-command, but not the other two commands.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1158:232,test,test,232,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1158,2,"['log', 'test']","['log', 'test']"
Testability,"Running Centaur has several ""noop"" tasks. When passed to AWS Batch, we see failing tests and errors from the AWS SDK that the Command field cannot have empty strings. Assuming Cromwell expects no output/return code 0, this can be special-cased in AWSBatchJob.scala.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3737:83,test,tests,83,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3737,1,['test'],['tests']
Testability,"Running a CWL workflow with local relative imports seems to fail. This is possibly related to #4308 but unsure. . Running with cromwell 36. . Process looks like the following; ```; $ git clone https://github.com/dockstore-testing/dockstore-workflow-md5sum-unified.git; $ cd dockstore-workflow-md5sum-unified; $ cwltool checker_workflow_wrapping_workflow.cwl md5sum.json; /usr/local/bin/cwltool 1.0.20180403145700; <snip>; Final process status is success; $ wget https://github.com/broadinstitute/cromwell/releases/download/36/cromwell-36.jar; $ java -jar cromwell-36.jar run https://raw.githubusercontent.com/dockstore-testing/dockstore-workflow-md5sum-unified/develop/checker_workflow_wrapping_workflow.cwl --inputs md5sum.json; <snip>; [2018-11-07 14:34:25,13] [info] Pre-Processing /tmp/cwl_temp_dir_7264114231127246601/cwl_temp_file_a3cb6a14-3672-4132-8a24-2e0a4e66ff96.cwl; [2018-11-07 14:34:34,94] [error] WorkflowManagerActor Workflow a3cb6a14-3672-4132-8a24-2e0a4e66ff96 failed (during MaterializingWorkflowDescriptorState): cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; running cwltool on file /tmp/cwl_temp_dir_7264114231127246601/cwl_temp_file_a3cb6a14-3672-4132-8a24-2e0a4e66ff96.cwl failed with Traceback (most recent call last):; File ""/home/dyuen/dockstore_tools/dockstore-workflow-md5sum-unified/cromwell-36.jar/Lib/heterodon/__init__.py"", line 24, in apply; File ""<string>"", line 1, in <module>; File ""<string>"", line 12, in cwltool_salad; File ""/home/dyuen/dockstore_tools/dockstore-workflow-md5sum-unified/cromwell-36.jar/Lib/cwltool/load_tool.py"", line 279, in validate_document; File ""/home/dyuen/dockstore_tools/dockstore-workflow-md5sum-unified/cromwell-36.jar/Lib/schema_salad/ref_resolver.py"", line 915, in resolve_all; File ""/home/dyuen/dockstore_tools/dockstore-workflow-md5sum-unified/cromwell-36.jar/Lib/schema_salad/ref_resolver.py"", line 1087, in validate_links; schema_salad.validate.V",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4366:222,test,testing,222,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4366,2,['test'],['testing']
Testability,Running dockers for postgres and mariadb during tests BA-5665,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5018:48,test,tests,48,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5018,1,['test'],['tests']
Testability,"Running locally a scatter job with 2102 jobs causes an out-of-memory error after finishing job 1427 (reproduced twice) . The command that I run was using the wrapper script from **brew**:. ```; JAVA_OPTS=""-Dconfig.file=local.conf"" cromwell run --inputs inputs.json --metadata-output metadata-output.json workflow.wdl; ```. Where the local configuration looks like this:. ```; include required(classpath(""application"")). ## keep always the workflow logs; workflow-options.workflow-log-temporary: false; workflow-options.workflow-log-dir: ""/Volumes/Temp/E43CEE02/data/freqs/haf/base-all/w100000_2.0x/workflow-logs"". # Allows re-use of existing results for jobs you've already run; call-caching.enabled: true. backend.providers.Local.config {; ## limit the number of jobs; concurrent-job-limit = 10; # set the root directory to the run; root = ""/Volumes/Temp/E43CEE02/data/freqs/haf/base-all/w100000_2.0x/execution""; filesystems.local {; ## do not allow copy (too huge files); ## prefer hard-links, to don't remove data and kept analysis intact; localization: [""hard-link"", ""soft-link""]; caching.duplication-strategy: [""hard-link"", ""soft-link""]; }; # custom submit-docker to workaround detached container due to timeout in the virtual machine; # first, we do not remove the container until it really finishes (no --rm flag); # if the docker run command fails, then it runs docker wait to wait until it finishes and store the return code; # if the docker run command fails, then it runs docker wait to return the real exit code even if detached; # once it finishes, removes the docker container with docker rm; # finally, returns the ""real return code"" stored; submit-docker = """"""; docker run \; --cidfile ${docker_cid} \; -i \; ${""--user "" + docker_user} \; --entrypoint /bin/bash \; -v ${cwd}:${docker_cwd} \; ${docker} ${script}; rc=$(docker wait `cat ${docker_cid}`); docker rm `cat ${docker_cid}`; exit $rc; """"""; }; ```. The log shows the following stack-trace:. ```; [2018-03-09 15:31:16,47] [error]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:448,log,logs,448,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,4,['log'],"['log-dir', 'log-temporary', 'logs']"
Testability,"Running this WDL (with a wider scatter count... start with 250) fails with a database persistence error like:. > The size of BLOB/TEXT data inserted in one transaction is greater than 10% of redo log size. Increase the redo log size using innodb_log_file_size. On Google, the redo size is fixed at 536,870,912 bytes, which means the maximum BLOB/TEXT size is ~53mb. ```; task FileSpam {; String sample_name = ""DeliciousFileSpam""; Int index. command <<<; mkdir ${sample_name}_${index}; for i in `seq 0 900`; do; echo $i > ${sample_name}_${index}_$i.txt; echo $i > ${sample_name}_${index}/$i.txt; done; >>>; runtime {; docker: ""ubuntu:latest""; memory: ""3 GB""; cpu: ""1""; disks: ""local-disk 5 HDD""; preemptible: 3; }; output {; Array[File] outer = glob(""${sample_name}_${index}_*""); Array[File] inner = glob(""${sample_name}_${index}/*""); }; }. task MatrixRotation {; Array[Array[String]] input_matrix. command <<<; python <<CODE; import csv; import sys; with open('${write_tsv(input_matrix)}') as tsv_in:; input_matrix = [line.strip().split('\t') for line in tsv_in]; final_matrix = [["""" for x in range(len(input_matrix))] for y in range(len(input_matrix[0]))]; for x in range(len(input_matrix)):; for y in range(len(input_matrix[0])):; final_matrix[y][x] = input_matrix[x][y]; with open(""output.tsv"", ""w"") as tsv_out:; # lineterminator is a workaround for a cromwell bug that doesnt allow for '\r\n' line endings which this outputs by default; writer = csv.writer(tsv_out, delimiter='\t', lineterminator='\n'); writer.writerows(final_matrix); CODE; >>>. runtime {; docker: ""python:2.7""; memory: ""1 GB""; preemptible: 3; }. output {; File out = ""output.tsv""; Array[Array[String]] output_matrix = read_tsv(out); }; }. workflow DeliciousFileSpam {; Array[Int] indexing_list = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,; 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,; 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,; 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,; 51, 52, 53, 54, 55, 56, 57, 58, 59",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/910:196,log,log,196,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/910,2,['log'],['log']
Testability,"Running this WDL (with a wider scatter count... start with 250) fails with a database persistence error like:. > The size of BLOB/TEXT data inserted in one transaction is greater than 10% of redo log size. Increase the redo log size using innodb_log_file_size. Which we can't do with CloudSQL on Google. task FileSpam {; String sample_name = ""DeliciousFileSpam""; Int index. command <<<; mkdir ${sample_name}_${index}; for i in `seq 0 900`; do; echo $i > ${sample_name}_${index}_$i.txt; echo $i > ${sample_name}_${index}/$i.txt; done. > > > runtime {; > > > docker: ""ubuntu:latest""; > > > memory: ""3 GB""; > > > cpu: ""1""; > > > disks: ""local-disk 5 HDD""; > > > preemptible: 3; > > > }; > > > output {; > > > Array[File] outer = glob(""${sample_name}_${index}__""); > > > Array[File] inner = glob(""${sample_name}_${index}/_""); > > > }; > > > }. task MatrixRotation {; Array[Array[String]] input_matrix. ```; command <<<; python <<CODE; import csv; import sys; with open('${write_tsv(input_matrix)}') as tsv_in:; input_matrix = [line.strip().split('\t') for line in tsv_in]; final_matrix = [["""" for x in range(len(input_matrix))] for y in range(len(input_matrix[0]))]; for x in range(len(input_matrix)):; for y in range(len(input_matrix[0])):; final_matrix[y][x] = input_matrix[x][y]; with open(""output.tsv"", ""w"") as tsv_out:; # lineterminator is a workaround for a cromwell bug that doesnt allow for '\r\n' line endings which this outputs by default; writer = csv.writer(tsv_out, delimiter='\t', lineterminator='\n'); writer.writerows(final_matrix); CODE; >>>. runtime {; docker: ""python:2.7""; memory: ""1 GB""; preemptible: 3; }. output {; File out = ""output.tsv""; Array[Array[String]] output_matrix = read_tsv(out); }; ```. }. workflow DeliciousFileSpam {; Array[Int] indexing_list = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,; 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,; 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,; 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,; 51, 52, 53, 54, 55, 56, ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/911:196,log,log,196,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/911,2,['log'],['log']
Testability,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1958:110,test,testMe,110,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958,2,"['log', 'test']","['logs', 'testMe']"
Testability,"Safety net against long running ""log an event"" actions",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4947:33,log,log,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4947,1,['log'],['log']
Testability,"Sample query shapes:. ### “labelAnd” (used to filter by submission ID, for example) style:; ```; SELECT summaryTable.workflow_execution_uuid, ; summaryTable.workflow_name, ; summaryTable.workflow_status, ; summaryTable.start_timestamp, ; summaryTable.end_timestamp, ; summaryTable.submission_timestamp, ; summaryTable.workflow_metadata_summary_entry_id ; FROM workflow_metadata_summary_entry summaryTable ; JOIN custom_label_entry labelAndTable0 ; ON summaryTable.workflow_execution_uuid = ; labelAndTable0.workflow_execution_uuid ; JOIN custom_label_entry labelAndTable1 ; ON summaryTable.workflow_execution_uuid = ; labelAndTable1.workflow_execution_uuid ; WHERE ( ( labelAndTable0.custom_label_key = ? ; AND labelAndTable0.custom_label_value = ? ) ; AND ( labelAndTable1.custom_label_key = ? ; AND labelAndTable1.custom_label_value = ? ) ) ; ORDER BY workflow_metadata_summary_entry_id DESC ; ```. ### “labelOr” (used to assert at least one collection ID, for example) style:; ```; SELECT summaryTable.workflow_execution_uuid, ; summaryTable.workflow_name, ; summaryTable.workflow_status, ; summaryTable.start_timestamp, ; summaryTable.end_timestamp, ; summaryTable.submission_timestamp, ; summaryTable.workflow_metadata_summary_entry_id ; FROM workflow_metadata_summary_entry summaryTable ; JOIN custom_label_entry labelsOrMixin ; ON summaryTable.workflow_execution_uuid = ; labelsOrMixin.workflow_execution_uuid ; WHERE ( ( labelsOrMixin.custom_label_key = ? ; AND labelsOrMixin.custom_label_value = ? ) ; OR ( labelsOrMixin.custom_label_key = ? ; AND labelsOrMixin.custom_label_value = ? ) ) ; ORDER BY workflow_metadata_summary_entry_id DESC ; ```. ### excludeLabelsAnd style (not sure Job Manager uses this):; ```; SELECT summaryTable.workflow_execution_uuid, ; summaryTable.workflow_name, ; summaryTable.workflow_status, ; summaryTable.start_timestamp, ; summaryTable.end_timestamp, ; summaryTable.submission_timestamp, ; summaryTable.workflow_metadata_summary_entry_id ; FROM workflow_metada",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4702:924,assert,assert,924,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4702,1,['assert'],['assert']
Testability,Saving mistakes in Cromwell logs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2210:28,log,logs,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210,1,['log'],['logs']
Testability,"Say you get 4500 ""Quota Exceeded"" log messages. You don't want to ignore them, but you don't want 4500 entries in the cromwell log either. Perhaps there's a middle ground where they get aggregated and you only get one summary message every 10 minutes?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1505:34,log,log,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1505,2,['log'],['log']
Testability,"Scala steward updates: awssdk, mouse, specs2-mock, sbt-scoverage [BW-932]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6573:45,mock,mock,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6573,1,['mock'],['mock']
Testability,"Scala steward updates: scala-library, kind-projector, MockFtpServer, scalactic, swagger-parser [BW-937]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6576:54,Mock,MockFtpServer,54,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6576,1,['Mock'],['MockFtpServer']
Testability,"Scala steward: google-cloud-resourcemanager, grpc-core, logback, postgresql, sentry-logback [BW-936]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6574:56,log,logback,56,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6574,2,['log'],['logback']
Testability,Scala-Steward: Update MockFtpServer from 2.7.1 to 2.8.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6271:22,Mock,MockFtpServer,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6271,1,['Mock'],['MockFtpServer']
Testability,Scala-Steward: Update MockFtpServer from 2.8.0 to 3.0.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6528:22,Mock,MockFtpServer,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6528,1,['Mock'],['MockFtpServer']
Testability,Scala-Steward: Update MockFtpServer from 3.0.0 to 3.1.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7071:22,Mock,MockFtpServer,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7071,1,['Mock'],['MockFtpServer']
Testability,Scala-Steward: Update azure-core-test from 1.18.0 to 1.18.1,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7264:33,test,test,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7264,1,['test'],['test']
Testability,Scala-Steward: Update delight-rhino-sandbox from 0.0.11 to 0.0.12,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5935:36,sandbox,sandbox,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5935,1,['sandbox'],['sandbox']
Testability,Scala-Steward: Update delight-rhino-sandbox from 0.0.11 to 0.0.13,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6085:36,sandbox,sandbox,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6085,1,['sandbox'],['sandbox']
Testability,Scala-Steward: Update delight-rhino-sandbox from 0.0.12 to 0.0.15,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6269:36,sandbox,sandbox,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6269,1,['sandbox'],['sandbox']
Testability,"Scala-Steward: Update logback-access, logback-classic, ... from 1.2.10 to 1.2.11",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6842:22,log,logback-access,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6842,2,['log'],"['logback-access', 'logback-classic']"
Testability,"Scala-Steward: Update logback-access, logback-classic, ... from 1.2.11 to 1.2.12",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7260:22,log,logback-access,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7260,2,['log'],"['logback-access', 'logback-classic']"
Testability,"Scala-Steward: Update logback-access, logback-classic, ... from 1.2.11 to 1.4.5",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7026:22,log,logback-access,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7026,2,['log'],"['logback-access', 'logback-classic']"
Testability,"Scala-Steward: Update logback-access, logback-classic, ... from 1.2.5 to 1.2.6",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6511:22,log,logback-access,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6511,2,['log'],"['logback-access', 'logback-classic']"
Testability,"Scala-Steward: Update logback-access, logback-classic, ... from 1.2.6 to 1.2.10",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6598:22,log,logback-access,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6598,2,['log'],"['logback-access', 'logback-classic']"
Testability,Scala-Steward: Update mockito-core from 3.11.2 to 3.12.4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6889:22,mock,mockito-core,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6889,1,['mock'],['mockito-core']
Testability,Scala-Steward: Update mockito-core from 3.12.4 to 5.1.1,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7072:22,mock,mockito-core,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7072,1,['mock'],['mockito-core']
Testability,Scala-Steward: Update mockito-core from 4.11.0 to 5.7.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7315:22,mock,mockito-core,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7315,1,['mock'],['mockito-core']
Testability,Scala-Steward: Update mockserver-netty from 5.11.2 to 5.14.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6888:22,mock,mockserver-netty,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6888,1,['mock'],['mockserver-netty']
Testability,Scala-Steward: Update mockserver-netty from 5.14.0 to 5.15.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7070:22,mock,mockserver-netty,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7070,1,['mock'],['mockserver-netty']
Testability,Scala-Steward: Update mockserver-netty from 5.5.4 to 5.11.1,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5760:22,mock,mockserver-netty,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5760,1,['mock'],['mockserver-netty']
Testability,Scala-Steward: Update reactor-test from 3.4.29 to 3.4.34,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7296:30,test,test,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7296,1,['test'],['test']
Testability,Scala-Steward: Update scala-logging from 3.9.2 to 3.9.3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6259:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6259,1,['log'],['logging']
Testability,Scala-Steward: Update scala-logging from 3.9.3 to 3.9.4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6406:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6406,1,['log'],['logging']
Testability,Scala-Steward: Update scala-logging from 3.9.4 to 3.9.5,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6871:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6871,1,['log'],['logging']
Testability,Scala-Steward: Update sentry-logback from 1.7.30 to 3.0.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5902:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5902,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 1.7.30 to 3.1.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5945:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5945,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 1.7.30 to 3.1.1,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5956:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5956,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 1.7.30 to 3.1.2,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6016:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6016,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 1.7.30 to 3.1.3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6024:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6024,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 1.7.30 to 3.2.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6068:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6068,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 5.1.2 to 5.2.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6525:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6525,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 5.2.0 to 5.2.4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6619:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6619,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 5.2.4 to 5.7.4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6877:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6877,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 5.7.4 to 6.14.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7053:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7053,1,['log'],['logback']
Testability,Scala-Steward: Update sentry-logback from 5.7.4 to 7.0.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7297:29,log,logback,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7297,1,['log'],['logback']
Testability,Scala-Steward: Update specs2-mock from 4.10.2 to 4.10.4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5928:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5928,1,['mock'],['mock']
Testability,Scala-Steward: Update specs2-mock from 4.10.2 to 4.10.5,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5944:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5944,1,['mock'],['mock']
Testability,Scala-Steward: Update specs2-mock from 4.10.5 to 4.10.6,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6277:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6277,1,['mock'],['mock']
Testability,Scala-Steward: Update specs2-mock from 4.10.6 to 4.12.2,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6424:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6424,1,['mock'],['mock']
Testability,Scala-Steward: Update specs2-mock from 4.12.12 to 4.13.1,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6631:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6631,1,['mock'],['mock']
Testability,Scala-Steward: Update specs2-mock from 4.12.3 to 4.12.12,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6534:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6534,1,['mock'],['mock']
Testability,Scala-Steward: Update specs2-mock from 4.4.1 to 4.10.3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5752:29,mock,mock,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5752,1,['mock'],['mock']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.1 to 0.38.3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5835:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5835,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.3 to 0.38.4",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5895:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5895,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.4 to 0.38.5",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6015:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6015,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.4 to 0.38.6",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6027:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6027,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.4 to 0.38.7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6079:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6079,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.6 to 0.38.9",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6242:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6242,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.38.9 to 0.39.5",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6389:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6389,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.39.6 to 0.39.8",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6512:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6512,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.39.6 to 0.39.8 (BW-923).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6566:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6566,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.39.8 to 0.39.12",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6603:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6603,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.40.10 to 0.40.12",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7031:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7031,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.40.10 to 0.40.17",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7270:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7270,1,['test'],['testcontainers-scala-mariadb']
Testability,"Scala-Steward: Update testcontainers-scala-mariadb, ... from 0.40.2 to 0.40.10",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6849:22,test,testcontainers-scala-mariadb,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6849,1,['test'],['testcontainers-scala-mariadb']
Testability,"See @Horneth 's laptop, test the pieces of the Green team's pipeline. Do what the Green team (or workbench team) is doing. Capture it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2112:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2112,1,['test'],['test']
Testability,"See [BA-3823](https://broadworkbench.atlassian.net/browse/BA-6065) for bug details.; See [release notes](https://github.com/slick/slick/releases) for slick 3.3.0. The proof of the ""does it fix it"" pudding will be in the eating, but unless tests break, I don't see why we shouldn't update the version regardless. UPDATE: Tests did break. The ""inspired by a github comment"" upsert code was having issues, and wasn't obviously fixable. I replaced it with what seems like a far more canonical way of doing the same upserts.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5332:239,test,tests,239,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5332,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"See [declaration_chain.wdl](https://github.com/broadinstitute/cromwell/compare/cjl_first_wdlgraph?expand=1#diff-444c3d4a82de93c01c7cc237702c565f) for the motivating WDL for this PR. Allows us to make the correct WOM graph from these Declaration elements, and tests that centaur is able to run the workflow.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3307:259,test,tests,259,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3307,1,['test'],['tests']
Testability,See [here](https://github.com/broadinstitute/cromwell/blob/cjl_initial_work_dir_requirement_6/centaur/src/main/resources/standardTestCases/InitialWorkDirRequirement/file_array_listing.cwl#L10) for the motivating use case. . This needs improving as a centaur tests because we need to generate the file so that it can be passed in (which needs a WF rather than a simple CLT).,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3106:258,test,tests,258,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3106,1,['test'],['tests']
Testability,"See below for motivating use case WDL (now a test). The throwaways need OGINs to reference the `i`, but we weren't recording the OGINs that they were making. The upshot was that multiple usages of the same variable in a nested scope was producing multiple OGINs for the same value, and that was causing the ""duplicate FQN"" errors to trigger. ```; workflow nested_lookups {; Int i = 27; if(true) {; Int? throwaway = i # Make sure this 'i' OGIN doesn't duplicate the nested m1's 'i' OGIN; Int? throwaway2 = i # Make sure this 'i' OGIN doesn't duplicate the nested m1's 'i' OGIN; if(true) {; if(true) {; call mirror as m1 { input: i = i}; }; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2855:45,test,test,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2855,1,['test'],['test']
Testability,"See corresponding wdl4s changes: https://github.com/broadinstitute/wdl4s/pull/9. We can now do stuff like this. ```; task test {; String tag; Int disk_gb; Int memory_gb. command { ps }; runtime {; docker: ""ubuntu:"" + tag; defaultDisks: ""Disk1 "" + disk_gb + "" SSD""; memory: memory_gb + "" GB""; }; }. workflow w {; call test; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/420:122,test,test,122,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/420,2,['test'],['test']
Testability,See http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/ for an example. It looks like AsyncAppender could help improve our logging performance albeit with some potential for messages to be dropped.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1809:62,log,logging-with-,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809,3,['log'],"['logback-tweaks', 'logging', 'logging-with-']"
Testability,See https://doc.akka.io/docs/akka-http/current/routing-dsl/testkit.html#increase-timeout,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4250:59,test,testkit,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4250,1,['test'],['testkit']
Testability,"See https://github.com/broadinstitute/cromwell/issues/3074 for a description of the problem. This re-uses the values from the cache instead of re-running the job.; The call cache capoeira test was failing in centaur intermittently because a side effect of the issue was that the hashes were not published to metadata, which was failing the test.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3476:188,test,test,188,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3476,2,['test'],['test']
Testability,"See https://github.com/broadinstitute/cromwell/pull/4022 - originally closed because I wasn't sure it was the right thing, and I didn't see a way to test it. I'm now more certain it's worth trying. Even if this doesn't actually fix the deadlock and we need to use one of the other solutions, I think this may still be worth having because it will save the RDBMS a lot of work coordinating transactions. [`autocommit` documentation](https://dev.mysql.com/doc/refman/8.0/en/innodb-autocommit-commit-rollback.html); [Slick transactions and pinned sessions](http://slick.lightbend.com/doc/3.2.0/dbio.html#transactions-and-pinned-sessions). Acceptance criteria:; - [ ] Not a performance regression - heartbeats are still efficiently written to the DB in batches; - [ ] Prevents the deadlock",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4249:149,test,test,149,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4249,1,['test'],['test']
Testability,See the corresponding wdl4s change: https://github.com/broadinstitute/wdl4s/pull/6; See the corresponding Tyburn change: https://github.com/broadinstitute/tyburn/pull/17. Instead of creating these files:. ```; gs://path/to/call/jes.log; gs://path/to/call/jes-stdout.log; gs://path/to/call/jes-stderr.log; ```. We will now create (`hello` is the name of the call). ```; gs://path/to/call/hello.log; gs://path/to/call/hello-stdout.log; gs://path/to/call/hello-stderr.log; ```. We no longer manually redirect the stdout/stderr and let JES take care of it. [Example output](https://console.developers.google.com/storage/browser/cromwell-dev/stdout_stderr_passing/0f3758c3-b186-41d3-86c1-d92e55b24332/?project=broad-dsde-dev&pli=1) of running the WDL in https://github.com/broadinstitute/tyburn/pull/17,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/378:232,log,log,232,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/378,6,['log'],['log']
Testability,"See the various commit test timings to see whether tests did or did not run. Idea:; * One green light is as good as two since in any real situation the 'push' tests would be restarted if the 'PR' tests are green.; * We can still test on push if we really want to, using `FORCETEST` in the commit message; * We won't have so many ""background"" tests running at any given time, hopefully reducing the queue-time for PRs. In other words:; * Should significantly *increase* cycle time for PRs and *reduce* developer time shepherding PRs through two sets of identical tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4839:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4839,7,['test'],"['test', 'tests']"
Testability,Seeing a lot of centaur `cwl-cache-within-workflow` tests failing. It expects a cache hit and is getting a cache miss.; Just putting it out there whenever someone feels like reducing travis flakiness.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3782:52,test,tests,52,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3782,1,['test'],['tests']
Testability,"Seeing issues around OWL parsing like #4210, may need to retry more. . ```text; Error loading schemas: Problem parsing file:./cwl/src/test/resources/cwl/ontology/EDAM.owl Could not parse ontology. Either a suitable parser could not be found, or parsing failed. See parser logs below for explanation. The following parsers were tried: 1) org.semanticweb.owlapi.manchestersyntax.parser.ManchesterOWLSyntaxOntologyParser@35c1a1aa 2) org.semanticweb.owlapi.rdf.turtle.parser.TurtleOntologyParser@4e879e3e 3) org.semanticweb.owlapi.oboformat.OBOFormatOWLAPIParser@6bd28ad6 4) org.semanticweb.owlapi.krss2.parser.KRSS2OWLParser@5326aaf7 Detailed logs: -------------------------------------------------------------------------------- Parser: org.semanticweb.owlapi.manchestersyntax.parser.ManchesterOWLSyntaxOntologyParser@35c1a1aa Stack trace: Encountered '<?xml version=""1.0""?>' at line 1 column 1. Expected either 'Ontology:' or 'Prefix:' (Line 1) org.semanticweb.owlapi.manchestersyntax.parser.ManchesterOWLSyntaxOntologyParser.parse(ManchesterOWLSyntaxOntologyParser.java:81) uk.ac.manchester.cs.owl.owlapi.OWLOntologyFactoryImpl.loadOWLOntology(OWLOntologyFactoryImpl.java:193) uk.ac.manchester.cs.owl.owlapi.OWLOntologyManagerImpl.load(OWLOntologyManagerImpl.java:1071) uk.ac.manchester.cs.owl.owlapi.OWLOntologyManagerImpl.loadOntology(OWLOntologyManagerImpl.java:1033) uk.ac.manchester.cs.owl.owlapi.OWLOntologyManagerImpl.loadOntologyFromOntologyDocument(OWLOntologyManagerImpl.java:974) cwl.ontology.Schema$.$anonfun$loadOntologyFromIri$5(Schema.scala:155) cats.effect.internals.IORunLoop$.cats$effect$internals$IORunLoop$$loop(IORunLoop.scala:85) cats.effect.internals.IORunLoop$RestartCallback.signal(IORunLoop.scala:336) cats.effect.internals.IORunLoop$RestartCallback.apply(IORunLoop.scala:357) cats.effect.internals.IORunLoop$RestartCallback.apply(IORunLoop.scala:303) -------------------------------------------------------------------------------- Parser: org.semanticweb.owlapi.rdf.turtle.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4372:134,test,test,134,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4372,3,"['log', 'test']","['logs', 'test']"
Testability,"Seeing this during testing for call cache perfomance:. I'm submitting a fairly small scatter workflow to the batch endpoint, with 3000 (empty) inputs to launch 3000 copies of the workflow. It takes several minutes for Cromwell to produce a response, by which time the client has timed out. So Cromwell is going to run all these workflows but the client doesn't know their IDs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2025:19,test,testing,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2025,1,['test'],['testing']
Testability,"Seemingly the cause of many of my centaur woes: if any CWL test happens to be caught up in a restart, the JobStore lookup fails and so does the workflow",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3035:59,test,test,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3035,1,['test'],['test']
Testability,Seems that the call logs are not being copied to the final directory when run on the TES backend. This test is failing: https://github.com/broadinstitute/centaur/blob/develop/src/test/scala/centaur/FinalDirsSpec.scala#L64. using these parameters:; https://github.com/broadinstitute/centaur/blob/develop/src/main/resources/finalCopy/final_call_logs_dir_tes.test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2285:20,log,logs,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2285,4,"['log', 'test']","['logs', 'test']"
Testability,"Seems to generally improve centaur robustness, although it still drops the ball sometimes and the test script just exits for no apparent reason.; Fixes the `cwl_cache_between_workflows` and `cwl_cache_within_workflows` tests; Unit tests transient failures remain",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3827:98,test,test,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3827,3,['test'],"['test', 'tests']"
Testability,"Seen in FC alpha, two workflow ids and were still listed as `Running` even though the summarizer had already passed the `Succeeded` entries written in for their metadata both at `22:14:47`.; - `c5b6ee46-1f09-4830-91a8-fd814866d664`; - `c5d48405-06ca-4207-9d1a-5923a9eb0fcd`. `Succeeded` entries written seconds before and seconds after were summarized correctly. ```; $ docker [redacted] -e alpha; Welcome to the MariaDB monitor. Commands end with ; or \g.; Your MySQL connection id is 2786095; Server version: 5.6.36-google-log (Google). Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\h' for help. Type '\c' to clear the current input statement. MySQL [cromwell]> select * from SUMMARY_STATUS_ENTRY;; +-------------------------+---------------------------------+-----------------------+------------+; | SUMMARY_STATUS_ENTRY_ID | SUMMARY_TABLE_NAME | SUMMARIZED_TABLE_NAME | MAXIMUM_ID |; +-------------------------+---------------------------------+-----------------------+------------+; | 1 | WORKFLOW_METADATA_SUMMARY_ENTRY | METADATA_ENTRY | 2993666495 |; +-------------------------+---------------------------------+-----------------------+------------+; 1 row in set (0.05 sec). MySQL [cromwell]> select * from METADATA_ENTRY where METADATA_JOURNAL_ID >= 2993666495;; +---------------------+--------------------------------------+--------------+----------+-------------------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+---------------------+; | METADATA_JOURNAL_ID | WORKFLOW_EXECUTION_UUID | METADATA_KEY | CALL_FQN | JOB_SCATTER_INDEX | JOB_RETRY_ATTEMPT | METADATA_VALUE | METADATA_TIMESTAMP | METADATA_VALUE_TYPE |; +---------------------+--------------------------------------+--------------+----------+-------------------+-------------------+-----------------------------------------------------",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4511:525,log,log,525,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4511,1,['log'],['log']
Testability,"Seen in [Jenkins build 577](https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/577/) but also in a couple of my branches, where I seem to be able to reliably trigger it w/ some seemingly unrelated changes. . Sometimes they manifest as timeouts, in other cases the [wrong data is coming back](https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/577/testReport/junit/cromwell.webservice/MetadataBuilderActorSpec/MetadataParser_should_support_nested_lists/). In my branches I'm reliably able to get `should build workflow scope tree from metadata events` fail by simply changing the package of `CromwellApiServiceSpec` (see branch `jg_hmm`). That error is not in this jenkins run, but I've seen those other failures in some of my other experiments (see branch `jg_refactor_reality` although that's just a series of me making strange edits to see what happens)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4288:91,test,test-runner,91,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4288,3,['test'],"['test-runner', 'testReport']"
Testability,"Sending JMUI style call failures to Sentry.; Wired in the ability for Centaur integration tests to get data directly from the Cromwell database.; Added a `queryJobKeyValueEntries` to return all job key/values for a workflow.; Removed deprecation exception for old database config syntax.; Flatten metadata only during comparison, passing the original internally.; Removed secure env variables that were always true in Sentry.; Refactored centaur secure config rendering.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4055:90,test,tests,90,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4055,1,['test'],['tests']
Testability,"Sending error info to sentry during centaur testing before retrying.; Encrypting sensitive variables using a random key during centaur tests, jic they are sent to sentry.; Rendering secure resources during _all_ tests.; When secure variables cannot be rendered, only fail when secure variables are required, otherwise producing only info/warning messages.; Disabled caches during tests that read `backendStatus` call metadata.; Allow `test_cromwell.sh` to use a centaur config file.; Enable GcsPathBuilderFactory to retry more than zero times.; Lazy load centaur `*.inputs` & `*.options` so that they aren't required to load `*.test` files.; Relatedly, so that one doesn't (try to) accidentally commit the changes, `git rm` the options file that was being rendered.; Moved logback.xml out of transitive core library and into executables, next to application.conf files.; Pin `cwltool` version.; Use a workaround to pass `--timeout` through `run_test.sh` to `cwltest`.; Using `better.files` instead of `java.nio.Path`, and passing `IO` monads further up.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4000:44,test,testing,44,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4000,6,"['log', 'test']","['logback', 'test', 'testing', 'tests']"
Testability,Separate PR for broken gcloud rsync that flustered the Centaur `space` test https://github.com/GoogleCloudPlatform/gsutil/issues/806,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5049:71,test,test,71,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5049,1,['test'],['test']
Testability,Separated service/biz objects (enums) and logic from data/sql objects.; Removed unused methods.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4368:42,log,logic,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4368,1,['log'],['logic']
Testability,Serializable summarization idea: see if tests pass,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5123:40,test,tests,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5123,1,['test'],['tests']
Testability,ServiceRegistryActor tests. Closes #1047,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1142:21,test,tests,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1142,1,['test'],['tests']
Testability,Set CWL repo git hash to stabilize conformance tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3250:47,test,tests,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3250,1,['test'],['tests']
Testability,Set TMPDIR and HOME as expected by CWL conformance tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3223:51,test,tests,51,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3223,1,['test'],['tests']
Testability,Shard logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/251:6,log,logging,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/251,1,['log'],['logging']
Testability,"SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:1:1]: job id: 26767; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:2:1]: job id: 26770; [2016-11-24 15:22:45,23] [info] SharedFileSystemAsyncJobExecutionActor [d6475258testMe.printPairStringString:0:1]: job id: 26763; [2016-11-24 15:22:46,77] [info] WorkflowExecutionActor-d6475258-0f55-449c-be0b-e08e1e0c5049 [d6475258]: Starting calls: Collector-printPairStringString; [2016-11-24 15:22:46,80] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-2119125994] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-d6475258-0f55-449c-be0b-e08e1e0c5049#337013427] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2016-11-24 15:22:46,81] [error] WorkflowManagerActor Workflow d6475258-0f55-449c-be0b-e08e1e0c5049 failed (during ExecutingWorkflowState): WdlPair(WdlString(foo1),WdlString(bar1)) (of class wdl4s.values.WdlPair); scala.MatchError: WdlPair(WdlString(foo1),WdlString(bar1)) (of class wdl4s.values.WdlPair); 	at cromwell.util.JsonFormatting.WdlValueJsonFormatter$WdlValueJsonFormat$.write(WdlValueJsonFormatter.scala:10); 	at cromwell.util.JsonFormatting.WdlValueJsonFormatter$WdlValueJsonFormat$$anonfun$write$2.apply(WdlValueJsonFormatter.scala:17); 	at cromwell.util.JsonFormatting.WdlValueJsonFormatter$WdlValueJsonFormat$$anonfun$write$2.apply(WdlValueJsonFormatter.scala:17); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIter",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1703:4546,log,log-dead-letters,4546,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1703,1,['log'],['log-dead-letters']
Testability,"Should help with debugging occasional failures like this in travis by replacing ""not found"" with ""this looks similar"":. ```; StatsDInstrumentationServiceActorSpec:; StatsDInstrumentationServiceActor; - should increment counters (1 second, 193 milliseconds); - should add count (1 second, 9 milliseconds); - should set gauges (1 second, 10 milliseconds); info- should set timings *** FAILED *** (3 seconds, 701 milliseconds); info Missing packet: prefix_value.cromwell.test_prefix.test.metric.bucket.timing.stddev:0.00|g (StatsDInstrumentationServiceActorSpec.scala:83); info org.scalatest.exceptions.TestFailedException:; info ...[0m[0m; info at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.$anonfun$new$4(StatsDInstrumentationServiceActorSpec.scala:83); info at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.$anonfun$new$4$adapted(StatsDInstrumentationServiceActorSpec.scala:83); info at scala.collection.immutable.Set$Set4.foreach(Set.scala:206); info at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.$anonfun$new$2(StatsDInstrumentationServiceActorSpec.scala:83); info at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); info at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85); info at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83); info ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4387:485,test,test,485,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4387,2,"['Test', 'test']","['TestFailedException', 'test']"
Testability,"Should pass without any dev changes, but this will:; - highlight regressions; - host the files in github for a `by_url` test to find and use",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4244:120,test,test,120,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4244,1,['test'],['test']
Testability,"Similar to #3998 (`backendStatus`), but for the metadata key `dockerImageUsed`. This call metadata key is written during job success by the engine. This key may be missing due to restarts of cromwell during centaur tests. Automated restarts of the centaur test end up call caching, where this key isn't written. As a call cache hit technically doesn't _have_ a dockerImage, it should be decided like in #3998 if the key `dockerImageUsed` should be written for cache hits. https://github.com/broadinstitute/cromwell/blob/9bee537c5f6a9ff4e8597f75b6844c0eaee721cc/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/job/EngineJobExecutionActor.scala#L279-L281. Example log of a failure during WIP of #3658 ; [dockerImageUsed_missing.txt](https://github.com/broadinstitute/cromwell/files/2284646/dockerImageUsed_missing.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4001:215,test,tests,215,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4001,3,"['log', 'test']","['log', 'test', 'tests']"
Testability,Simplification of #5415 removing the `attempt-1` redirection. ~Starting out with Don't Look At Me because I anticipate there might be some test fixup before it's ready for prime time.~ Now available for looking at.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5429:139,test,test,139,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5429,1,['test'],['test']
Testability,Simplified 'Event' and `Pipeline` deserialization logic for PAPI v2beta [BA-6365],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5480:50,log,logic,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5480,1,['log'],['logic']
Testability,"Since read_json and write_json are not implemented yet, I'm documenting for my team which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2152:479,test,tested,479,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152,1,['test'],['tested']
Testability,"Since the `monitoring_log` test checks whether the monitoring script is working normally, which it is, for the time being fix the memory expectation to unblock other PRs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5132:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5132,1,['test'],['test']
Testability,"Since this is all in flux at the moment at the behest of external testing, I'm going to just merge this unless someone raises a good reason not to by the time I loop back around in the AM",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4025:66,test,testing,66,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4025,1,['test'],['testing']
Testability,"Since this is fairly backend-specific I've implemented as a `cromwell.backend.google.pipelines.common.api.RunStatus` instead of a `cromwell.core.ExecutionStatus`. It also reduces the scope of changes. Feedback welcome. Looks like this in metadata requests:; ```; ""calls"": {; ""sleepy_sleep.sleep"": [; {; ""preemptible"": false,; ""executionStatus"": ""Running"",; ""stdout"": ""gs://cloud-cromwell-dev-self-cleaning/cromwell_execution/ci/sleepy_sleep/058bff35-4a55-4c0f-9113-0885f4119cd9/call-sleep/stdout"",; ""backendStatus"": ""AwaitingCloudQuota"",; ""compressedDockerSize"": 28566425,; ""commandLine"": ""sleep 180;\nls -la"",; ""shardIndex"": -1,; ""jes"": {; ""executionBucket"": ""gs://cloud-cromwell-dev-self-cleaning/cromwell_execution/ci"",; ""endpointUrl"": ""https://lifesciences.googleapis.com/"",; ""googleProject"": ""broad-dsde-cromwell-dev""; },; ```; The Terra UI workflow dashboard currently makes calls that look like; ```; https://rawls.dsde-dev.broadinstitute.org/api/workspaces/general-dev-billing-account/anichols-post-ppw/submissions/a7cfb487-9c30-4fd7-b10f-19d6f3c1d192/workflows/f52e4e4b-0299-44b7-a16f-904d2ee3f1e9; ?includeKey=end; &includeKey=executionStatus; &includeKey=failures; &includeKey=start; &includeKey=status; &includeKey=submittedFiles:workflow; &includeKey=workflowLog; &includeKey=workflowName; &includeKey=callCaching:result; &includeKey=callCaching:effectiveCallCachingMode; ```; so it would be easy to add a `&includeKey=backendStatus` and logic to evaluate something like; ```; if (executionStatus == ""Running"" && backendStatus == ""AwaitingCloudQuota"") {; msg = ""Trying to run but needs quota""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6655:1451,log,logic,1451,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6655,1,['log'],['logic']
Testability,"Single version across all artifacts in the repo/sbt aggregate project, published together and referring to each other.; Publishing releases and snapshots to Broad artifactory using lenthall's build bash ported to sbt, appropriate for publishing our multi-module, multi-build-type setup.; Stop wasting time assembling fat jars for artifacts _except_ the root.; Renamed Travis' build types from centaur/test to centaur/sbt.; Split up and thinned compile and test dependency statements, artifacts sometimes depend only on another artifacts tests, but not the same artifact's main code.; Just as many (most?) artifacts depend on other artifacts, rearranged dependencies in a similar way. Test dependencies are now embedded in the artifacts that use them. So jars like spray-testkit are no longer added to the classpath of the gcs filesystem, for example.; Centaur build in Travis now prints a heartbeat '…' every 60 seconds, instead of using the log destroying `travis_wait`.; No longer echoing line for line most bash scripts via `set -x`.; Fixed scaladoc in `SlickDatabase`.; Reverted `sbt-git` back to `0.7.1` due to issues with detached git submodules.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1141:401,test,test,401,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1141,6,"['Test', 'log', 'test']","['Test', 'log', 'test', 'testkit', 'tests']"
Testability,"Sketch of updates for CROM-6718 call caching location checking. This is only a sketch, I did not even attempt to get the tests passing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6366:121,test,tests,121,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6366,1,['test'],['tests']
Testability,"Sketch workflow restart using DataAccess API, needs tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/53:52,test,tests,52,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/53,1,['test'],['tests']
Testability,Skip all tests except `checkPublish` if only documentation has changed [BA-6138],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5301:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5301,1,['test'],['tests']
Testability,Skip failing cron tests for AWS,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4778:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4778,1,['test'],['tests']
Testability,SlickDatabase.scala:103); 	at cromwell.database.slick.MetadataSlickDatabase$class.refreshMetadataSummaryEntries(MetadataSlickDatabase.scala:133); 	at cromwell.database.slick.SlickDatabase.refreshMetadataSummaryEntries(SlickDatabase.scala:54); 	at cromwell.services.metadata.impl.MetadataDatabaseAccess$class.refreshWorkflowMetadataSummaries(MetadataDatabaseAccess.scala:146); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.refreshWorkflowMetadataSummaries(MetadataSummaryRefreshActor.scala:35); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:45); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:43); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.akka$actor$LoggingFSM$$super$processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.aroundReceive(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2182:3039,Log,LoggingFSM,3039,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182,1,['Log'],['LoggingFSM']
Testability,Slim logs to get them back under Travis' 4mb limit.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4133:5,log,logs,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4133,1,['log'],['logs']
Testability,Small bundle of new centaur and unit tests for draft 3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3559:37,test,tests,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3559,1,['test'],['tests']
Testability,"Small but annoying bug in WDL 1.0 support identified on the openWDL slack channel. The evaluation logic was all present and correct, only the type evaluators were not set up to determine the types of the expressions correctly, and returning errors inappropriately.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5598:98,log,logic,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5598,1,['log'],['logic']
Testability,Smoke test Cromwell and Womtool artifacts when publishing [BA-6593],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5917:6,test,test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5917,1,['test'],['test']
Testability,"So given the following directory structure : ; ```; base; ├── imported_workflow; │   ├── wdl_tasks; │   │   ├── taska.wdl; │   │   └── taskb.wdl; │   └── workflow_b.wdl; ├── task_wdls; │   ├── task1.wdl; │   └── task2.wdl; └── workflow.wdl; ```. In `workflow.wdl` I have; ```WDL; import ""task_wdls/task1.wdl"" as task1; import ""task_wdls/task2.wdl"" as task2; import ""imported_workflow/workflow_b.wdl"" as workflow_b; ```. In `imported_workflow/worflow_b.wdl` I have; ```WDL; import ""wdl_tasks/taska.wdl"" as taska; import ""wdl_tasks/taskb.wdl"" as taskb; ```. If I run cromwell from the directory `base` and run `workflow.wdl`. I will stumble upon an error. It will try to import `wdl_tasks/taska.wdl` from the base directory instead of from the `imported_workflow` directory where `workflow_b.wdl` is located. ```; Failed to import workflow wdl_tasks/taska.wdl.:; File not found /home/ruben/test/base/wdl_tasks/taska.wdl; ```. This has also been discussed at: https://gatkforums.broadinstitute.org/wdl/discussion/11330/how-to-import-workflows-that-also-have-imports-themselves. Evaluating import statements for the directory where cromwell is executed is ""bad"" because; * Where you run cromwell matters. Even if using the same workflows. In terms of reproducibility this is not very nice.; * You cannot see from the WDL file what the base importing directory was meant to be. This follows from where cromwell is run, and this is not specified in the file itself.; * Because of this context dependence, sub workflows are not modular building blocks which can be moved around freely between workflows. This severely handicaps the usefulness of WDL. Import statements should be evaluated from the files which they are in because:; * It makes sub-workflows modular building blocks that can be moved around; * It makes it easier to review and understand the import statements.; * It follows the principle of least surprise.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3241:888,test,test,888,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3241,1,['test'],['test']
Testability,So it can manipulated safely by concurrent workflow actors in the WorkflowManagerActorSpec and tests pass consistently.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/76:95,test,tests,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/76,1,['test'],['tests']
Testability,So that we can have a more interesting set of examples for WomExpression tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2534:73,test,tests,73,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2534,1,['test'],['tests']
Testability,"Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/tmp.bf92fa27"" && echo ""/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/tmp.bf92fa27""); chmod 777 ""$tmpDir""; export _JAVA_OPTIONS=-Djava.io.tmpdir=""$tmpDir""; export TMPDIR=""$tmpDir""; export HOME=""$HOME""; (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1. ); outed746149=""${tmpDir}/out.$$"" erred746149=""${tmpDir}/err.$$""; mkfifo ""$outed746149"" ""$erred746149""; trap 'rm ""$outed746149"" ""$erred746149""' EXIT; tee '/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-stdout.log' < ""$outed746149"" &; tee '/gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-stderr.log' < ""$erred746149"" >&2 &; (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1. /usr/bin/aws s3 cp s3://pipeline.poc/sampledata/PSNL/FASTQS/HCC-1187BL-replicate_CAATGAGC-TATCGCAC.merged_R2.fq.gz .; ) > ""$outed746149"" 2> ""$erred746149""; echo $? > /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-rc.txt.tmp; (; # add a .file in every empty directory to facilitate directory delocalization on the cloud; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1; find . -type d -exec sh -c '[ -z ""$(ls -A '""'""'{}'""'""')"" ] && touch '""'""'{}'""'""'/.file' \;; ); (; cd /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1; sync. ); mv /gstore/cromwell_execution/FE_Somatic_Mutect2/ed746149-883f-4ef1-8b95-d3e9d7cd1423/call-download_normal/shard-1/download_normal-1-rc.txt.tmp /gstore/cromwell_execution/FE_Somatic_Mu",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5421:1897,log,log,1897,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5421,1,['log'],['log']
Testability,"Some background about this fix:; 1. Centaur submits a workflow to Cromwell; 2. Workflow succeeds; 3. Some non-CentaurTestException exception occurs; 4. Centaur swallows it silently and resubmits the workflow.; 5. The resubmitted workflow succeeds using call cached results; 6. Centaur test fails because tasks of the workflow are not expected to be call cached. This fix alters #4 from the above list and makes Centaur to report the exception before resubmitting the workflow. It doesn't solve the flakiness problem itself, but at least we'll see what happened the during the failed attempt. Regarding the non-CentaurTestException which caused flakiness in the first place I suspect the TimeoutExceptions happening in CentaurCromwellClient, but not 100% sure",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6197:285,test,test,285,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6197,1,['test'],['test']
Testability,Some fixes to support a migrated HCA draft 3 workflow (and tests),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3577:59,test,tests,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3577,1,['test'],['tests']
Testability,"Some light reading for @Horneth and @kshakir. This is largely Frankensteining of ""Olde Style"" code. Known missing or broken, I need to confirm that appropriate tickets exist for the restoration of the following:; - [x] #753 Abort; - [x] #751 Recover; - [x] #749 Preemptibility; - [x] #785 Persistence of any data (note this would not be a ticket to create a KV / metadata service, but to integrate this backend with such a service); - [x] #809 Hashing (prereq for #750); - [x] #750 Caching; - [x] #806 implement Firecloud style auth upload / deletion (the code is not present here); - [x] #808 Retries were removed from command script upload and JES run creation. Lessons learned:; - [x] #811 #812 Actor Factories should be responsible for sanity-checking configs .; - [x] #813 Initialization actors should have the ability to create workflow-level resources that can be shared by the other actors collaborating in the workflow execution. e.g. GCS Filesystems need only be created once per workflow, not for every call.; - [x] It's not clear how workflow logging (or logging in general) should work.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/797:1055,log,logging,1055,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/797,2,['log'],['logging']
Testability,Some logging messages about completed jobs and (if possible) remaining jobs would be useful,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1593:5,log,logging,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1593,1,['log'],['logging']
Testability,"Some of the CWL conformance tests submit workflow files that contain an Array of Workflows/CLTs instead of a single one. The file path has a ""tag"" at the end specifying which workflow/CLT needs to be run in the array. Example: https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/conformance_test_v1.0.yaml#L250. To pass those tests we need to ; 1) Be able to parse arrays instead of single Workflow/CLT; 2) submit the file to Cromwell and (separately ?) the name of the Workflow?CLT to be run",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3043:28,test,tests,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3043,2,['test'],['tests']
Testability,Some refactoring: . * Separated the concepts of resolving and downloading.; * `DrsLocalizerMain#resolve` now chooses the `Downloader` implementation based on the content of the Martha response.; * The two downloader implementations support access and GCS URLs respectively.; * Tests for the downloader implementations have been separated from tests for the resolver.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6312:277,Test,Tests,277,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6312,2,"['Test', 'test']","['Tests', 'tests']"
Testability,Some tests were just failing because their input were not on GCS,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3621:5,test,tests,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3621,1,['test'],['tests']
Testability,Someone reported on an old issue that volcano.conf does not work. I can't test that myself; just making a new ticket so this reported issue doesn't get lost in the ether. _Originally posted by @zane529 in https://github.com/broadinstitute/cromwell/issues/6797#issuecomment-1509712509_,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7134:74,test,test,74,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7134,1,['test'],['test']
Testability,"Something appears to be wrong in the credential building for PAPI v2 private Docker as turned up in @marctalbott's testing. It's not clear why this is not replicated by the `docker_hash_dockerhub_private_wf_options` Centaur test but from reading the code it does appear to be a real issue. ```; 2019-01-14 20:20:22,530 ERROR - Failed to instantiate Cromwell System. Shutting down Cromwell.; common.exception.AggregatedException: :; null; 	Unrecognized token 'user_service_account_json': was expecting ('true', 'false' or 'null'); at [Source: (ByteArrayInputStream); line: 1, column: 51]; 	at common.util.TryUtil$.sequenceIterable(TryUtil.scala:29); 	at common.util.TryUtil$.sequenceMap(TryUtil.scala:47); 	at cromwell.engine.backend.CromwellBackends.<init>(CromwellBackends.scala:14); 	at cromwell.engine.backend.CromwellBackends$.initBackends(CromwellBackends.scala:42); 	at cromwell.server.CromwellSystem.$init$(CromwellSystem.scala:62); 	at cromwell.CromwellEntryPoint$$anon$2.<init>(CromwellEntryPoint.scala:96); 	at cromwell.CromwellEntryPoint$.$anonfun$buildCromwellSystem$1(CromwellEntryPoint.scala:96); 	at scala.util.Try$.apply(Try.scala:209); 	at cromwell.CromwellEntryPoint$.buildCromwellSystem(CromwellEntryPoint.scala:96); 	at cromwell.CromwellEntryPoint$.runServer(CromwellEntryPoint.scala:50); 	at cromwell.CromwellApp$.runCromwell(CromwellApp.scala:15); 	at cromwell.CromwellApp$.delayedEndpoint$cromwell$CromwellApp$1(CromwellApp.scala:25); 	at cromwell.CromwellApp$delayedInit$body.apply(CromwellApp.scala:3); 	at scala.Function0.apply$mcV$sp(Function0.scala:34); 	at scala.Function0.apply$mcV$sp$(Function0.scala:34); 	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12); 	at scala.App.$anonfun$main$1$adapted(App.scala:76); 	at scala.collection.immutable.List.foreach(List.scala:389); 	at scala.App.main(App.scala:76); 	at scala.App.main$(App.scala:74); 	at cromwell.CromwellApp$.main(CromwellApp.scala:3); 	at cromwell.CromwellApp.main(CromwellApp.scala); ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4553:115,test,testing,115,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4553,2,['test'],"['test', 'testing']"
Testability,"Something seems to have changed in the import resolution logic between Cromwells 45.1 and 46, such that the latter doesn't resolve imports relative to the importing file (when neither are in the current working directory). ```. cat << 'EOF' > echo_task.wdl; version 1.0; task echo {; input {; String s; }. command {; echo ""~{s}""; }. output {; String t = read_string(stdout()); }; }; EOF; cat << 'EOF' > echo.wdl; version 1.0; import ""echo_task.wdl"" as lib; workflow echo {; input {; Array[String] ss; }; scatter (s in ss) {; call lib.echo { input:; s = s; }; }; }; EOF; mkdir -p subdir; cd subdir; # Succeeds:; java -DLOG_LEVEL=info -DLOG_MODE=pretty -jar ../cromwell-45.1.jar run ../echo.wdl -i <(echo '{""echo.ss"": [""Alice"", ""Bob""]}'); # Fails:; java -DLOG_LEVEL=info -DLOG_MODE=pretty -jar ../cromwell-46.jar run ../echo.wdl -i <(echo '{""echo.ss"": [""Alice"", ""Bob""]}'); ```. Cromwell 46 failure looks like:. ```; [2019-09-18 20:42:55,88] [info] WorkflowManagerActor Workflow 9c7ab81b-43b4-40ca-ab8a-99fe58326127 failed (during MaterializingWorkflowDescriptorState): cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; Failed to import 'echo_task.wdl' (reason 1 of 3): Failed to resolve 'echo_task.wdl' using resolver: 'relative to directory [...]/subdir (escaping allowed)' (reason 1 of 1): File not found: echo_task.wdl; Failed to import 'echo_task.wdl' (reason 2 of 3): Failed to resolve 'echo_task.wdl' using resolver: 'entire local filesystem (relative to '/')' (reason 1 of 1): File not found: echo_task.wdl; Failed to import 'echo_task.wdl' (reason 3 of 3): Failed to resolve 'echo_task.wdl' using resolver: 'http importer (no 'relative-to' origin)' (reason 1 of 1): Relative path; 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$materialization$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescripto",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5182:57,log,logic,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5182,1,['log'],['logic']
Testability,"Source: https://broadinstitute.atlassian.net/wiki/pages/viewpage.action?spaceKey=DSDEEPB&title=Cromwell+Release. There are specific portions in the Cromwell Release checklist that are common among all the repos and can become reusable/composable step in automating the Cromwell release. Turn those steps into an executable script. repos = [wdltool, lenthall, wdl4s, cromwell]. - [ ] Run tests locally on develop to ensure tests still pass; - [ ] Ensure the build.sbt file has the correct version. If it does not, adjust it, commit and push to develop.; - [ ] Merge develop into master.; - [ ] Tag the resulting merge commit on master with the version number (e.g. 0.10,1.2.0); - [ ] git push origin master; - [ ] git push --tags; - [ ] This should kick off the travis build of the tag. Ensure that it completes successfully. This job should also produce a JAR in artifactory: https://artifactory.broadinstitute.org/. Ensure that this JAR exists. For example for wdl4s it would be in: libs-release-local/org/broadinstitute/wdl4s_2.11; - [ ] On develop, update build.sbt with the next version number",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1673:387,test,tests,387,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1673,2,['test'],['tests']
Testability,Spec.org$scalatest$WordSpecLike$$super$run(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192) at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190) at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Thre,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:5178,Test,TestFramework,5178,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestFramework']
Testability,"Specifically, don't force on a `library/` prefix where none was explicitly specified. This looks ok in the debugger but I haven't figured out a good test for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2360:149,test,test,149,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2360,1,['test'],['test']
Testability,"Spoiler alert: The DB *does* have `WaitingForQueueSpace` statuses. Notes for reviewers:. * The metadata builder was throwing errors on old workflows which had previously generated `WaitingForQueueSpace` execution statuses (ie almost all of them).; * This PR fixes that by re-specifying that value as a valid status, even though nothing in the code _generates_ this status any more.; * The only ""live code"" changes are undoing the status deletion from https://github.com/broadinstitute/cromwell/pull/6047; * The test case is deliberately over-comprehensive (it makes sure the metadata builder can handle *ALL* current statuses). I'm trying to prevent future situations where statuses are removed from the list without realizing that that might break metadata builder logic.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6131:511,test,test,511,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6131,2,"['log', 'test']","['logic', 'test']"
Testability,Stabilize docker image for cache tests [CROM-6704],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6206:33,test,tests,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6206,1,['test'],['tests']
Testability,Stabilize tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/311:10,test,tests,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/311,1,['test'],['tests']
Testability,"Starting Cromwell on Windows and running any CWL workflow causes the server to crash and exit:; ```; Uncaught error from thread [cromwell-system-akka.dispatchers.engine-dispatcher-50]: ; java.lang.UnsatisfiedLinkError: could not locate stub library in jar file. Tried [jni/x86_64-Windows/jffi-1.2.dll, /jni/x86_64-Windows/jffi-1.2.dll]; ```; What's worse, if one starts Cromwell back up it picks up that same workflow from the workflow store and immediately crashes. Notably, one can't even run WDLs at this point because the server does not stay up. The only remedy is to edit rows in the DB. I realize running on Windows is a self-inflicted wound in my case, hence ""low priority"". It does seem likely that not every researcher who wants to use Cromwell works somewhere that can afford to issue Macs. [jython_trace.txt](https://github.com/broadinstitute/cromwell/files/3048143/jython_trace.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4802:236,stub,stub,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4802,1,['stub'],['stub']
Testability,"Starting last summer/fall, MySQL adopted a new release schedule that includes faster cycles with breaking changes [0]. We should stick to the 8.0.xx branch [1] as this is now considered LTS and will be best supported by tools like TestContainers and CloudSQL. [0] https://dev.mysql.com/blog-archive/introducing-mysql-innovation-and-long-term-support-lts-versions/; [1] https://github.com/testcontainers/testcontainers-java/pull/8131",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7360:231,Test,TestContainers,231,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7360,3,"['Test', 'test']","['TestContainers', 'testcontainers', 'testcontainers-java']"
Testability,"Statements=true""; user = ""fake""; password = ""fake""; driver = ""com.mysql.jdbc.Driver""; connectionTimeout = 5000; }; }. system {; # Maximum number of input file bytes allowed in order to read each type.; # If exceeded a FileSizeTooBig exception will be thrown.; input-read-limits {; lines = 128000000; string = 128000000; json = 128000000; tsv = 128000000; map = 128000000; object = 128000000; }; }. ```. <!-- Paste/Attach your workflow if possible: -->; a modified version of : https://github.com/gatk-workflows/gatk4-data-processing. [workflow.0263ce1e-e1da-44c4-a49f-56fea7a6e1ea.log](https://github.com/broadinstitute/cromwell/files/2143529/workflow.0263ce1e-e1da-44c4-a49f-56fea7a6e1ea.log). A workflow is failing. It looks like cromwell attempts to localise some folder, ; ```/share/ScratchGeneral/evaben/cromwell/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/0263ce1e-e1da-44c4-a49f-56fea7a6e1ea/call-SamToFastqAndBwaMem/inputs/-21323395/cromwell -> /share/ScratchGeneral/evaben/cromwell```; Is it attempting to localize my entire cromwell directory? IE the CWD of the cromwell server process?. This fails because a previously found workflow input (```/share/ScratchGeneral/evaben/cromwell/cromwell-executions/HaplotypeCallerGvcf_GATK4/f18cded7-24ae-470d-b58d-d87ce97f21cb/call-HaplotypeCaller/shard-6/inputs/share/ClusterShare/biodata/contrib/evaben/genome_one_na12878/reheader/NA12878_V2.5_Robot_1.dedup.realigned.recalibrated.bam.bai```) is a symlink to a file that no long exists. (NA12878_V2.5_Robot_1.dedup.realigned.recalibrated.bam.bai`). In addition that file is totally unrelated to the workflow I am trying to run ( it is from a different workflow, and a different call, and the inputs.json and wdl are totally different). I am confused about what is happening, none of the actions the log is mentioning as errors seem to be things cromwell should be attempting. The cache does not become invalidated (as it seems to in other cases where the cached file has disappeared).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3825:2877,log,log,2877,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3825,1,['log'],['log']
Testability,"Step Inputs have the task of tying wf inputs to their `run` command. This is done via the `source` field of a `WorkflowStepInput`, and there may be multiple, hence the name of this requirement. This logic falls into two buckets:. # Type. Determing the type of the element being passed to the input is a function of:; * what type the `run` is expecting; * whether the variable appears in a scatter ; * whether there is an expression in the `valueFrom` field; * How to ""merge"" when multiple sources are declared.; * the ""default"" (On which I am punting here). # Expression . The way the expression presents the inputs to the run command is determined by that `LinkMergeMethod` field i.e. how the run step expects the value to appear. . # Assumptions. The Spec says to use `merge_nested` as default, but also says:. > If ""merge_nested"" is specified with a single link, the value from the link must be wrapped in a single-item list. Thus it seemed that all values should be wrapped in a list. this is wrong and I'm going to ask on gitter what the deal is. # What I've punted on. the `default` field.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3252:199,log,logic,199,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3252,1,['log'],['logic']
Testability,Still does not honor the read limit config for WDL but makes it possible.; For CWL it does only stream the first 64KB. - [ ] Add a centaur test ?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3113:139,test,test,139,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3113,1,['test'],['test']
Testability,"Still looking at a Centaur test for this but I thought I'd let the seafowl have at it. Metadata looks like:. ```; {; ""workflowName"": ""three_step"",; ""submittedFiles"": {; ""workflow"": ""import \""3step-tasks.wdl\"" as tasks\nimport \""https://raw.githubusercontent.com/broadinstitute/centaur/591beaf8422af7c3faf51e437a91d94d13b76eba/src/main/resources/standardTestCases/aliased_subworkflows/subworkflow.wdl\"" as subworkflow\n\n\nworkflow three_step {\n call tasks.ps as ps\n call tasks.cgrep as cgrep {\n input: in_file = ps.procs\n }\n call tasks.wc as wc {\n input: in_file = ps.procs\n }\n output {\n cgrep.*\n wc.*\n }\n}\n"",; ""workflowType"": ""WDL"",; ""options"": ""{\n\n}"",; ""inputs"": ""{\""three_step.cgrep.pattern\"":\""mcovarr\""}"",; ""labels"": ""{}"",; ""imports"": {; ""https://raw.githubusercontent.com/broadinstitute/centaur/591beaf8422af7c3faf51e437a91d94d13b76eba/src/main/resources/standardTestCases/aliased_subworkflows/subworkflow.wdl"": ""task increment {\n Int i\n command {\n echo $(( ${i} + 1 ))\n }\n output {\n Int j = read_int(stdout())\n }\n runtime {\n docker: \""ubuntu:latest\""\n }\n}\n\nworkflow subwf {\n Array[Int] is\n scatter (i in is) {\n call increment { input: i = i }\n }\n output {\n Array[Int] js = increment.j\n }\n}\n"",; ""3step-tasks.wdl"": ""task ps {\n command {\n ps\n }\n output {\n File procs = stdout()\n }\n runtime {\n docker: \""ubuntu:latest\""\n }\n}\n\ntask cgrep {\n String pattern\n File in_file\n command {\n grep '${pattern}' ${in_file} | wc -l\n }\n output {\n Int count = read_int(stdout())\n }\n runtime {\n docker: \""ubuntu:latest\""\n }\n}\n\ntask wc {\n File in_file\n command {\n cat ${in_file} | wc -l\n }\n output {\n Int count = read_int(stdout())\n }\n runtime {\n docker: \""ubuntu:latest\""\n }\n}\n\n""; }; },; .; .; .; ```. So the http imports come in under ""submittedFiles"" which is maybe a little weird. But other options would have http imports either not being next to the file imports and/or having to change the metadata schema.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2802:27,test,test,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2802,1,['test'],['test']
Testability,"Still need to performance-test on alpha. Problematic pairs:; * fetch <-> heartbeat (already coordinated); * fetch <-> abort (newly coordinated); * fetch <-> delete (newly coordinated). Example queries from MySQL deadlock printout in prod:. **Abort**; ```; update ; `WORKFLOW_STORE_ENTRY` ; set ; `WORKFLOW_STATE` = 'Aborting' ; where ; `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = '109a9d01-10b6-425d-8381-12a9d3a2c134'. ```; **Delete from workflow store**; ```; delete `WORKFLOW_STORE_ENTRY` ; from ; `WORKFLOW_STORE_ENTRY` ; where ; `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = 'c4961523-321b-4172-abe8-e1e4eba94f43'. ```; **Fetch startable workflows**; ```; select ; `WORKFLOW_EXECUTION_UUID`, ; `WORKFLOW_DEFINITION`, ; `WORKFLOW_URL`, ; `WORKFLOW_ROOT`, ; `WORKFLOW_TYPE`, ; `WORKFLOW_TYPE_VERSION`, ; `WORKFLOW_INPUTS`, ; `WORKFLOW_OPTIONS`, ; `WORKFLOW_STATE`, ; `SUBMISSION_TIME`, ; `IMPORTS_ZIP`, ; `CUSTOM_LABELS`, ; `CROMWELL_ID`, ; `HEARTBEAT_TIMESTAMP`, ; `HOG_GROUP`, ; `WORKFLOW_STORE_ENTRY_ID` ; from ; `WORKFLOW_STORE_ENTRY` ; where ; (; (`HEARTBEAT_TIMESTAMP` is null) ; or (; `HEARTBEAT_TIMESTAMP` < '2020-09-18 05:08:18.823'; ); ) ; and (; not (`WORKFLOW_STATE` = 'On Hold'); ) ; order by ; `SUBMISSION_TIME` ; limit ; 30 for ; update; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5906:26,test,test,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5906,1,['test'],['test']
Testability,Still provides a tested utility function for replacing json values.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2516:17,test,tested,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2516,1,['test'],['tested']
Testability,Stop excluding AWS glob tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4958:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4958,1,['test'],['tests']
Testability,Stop explicitly logging unhandled messages,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1808:16,log,logging,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1808,1,['log'],['logging']
Testability,Stop installing the AWS CLI during centaur testing [no jira],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5765:43,test,testing,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5765,1,['test'],['testing']
Testability,"Straight from the log: ""Something has gone horribly wrong!"". Jenkins build 2475 (2 errors); Jenkins build 2470; Jenkins build 2426",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4520:18,log,log,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4520,1,['log'],['log']
Testability,Stub out IAM interaction functions,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2131:0,Stub,Stub,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2131,1,['Stub'],['Stub']
Testability,StubOut Concrete backends,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/650:0,Stub,StubOut,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/650,1,['Stub'],['StubOut']
Testability,Submit large N (perhaps 10K) workflows as fast as we can; ## Measure; * Observe any errors from submit endpoint; * How well is the summarizer keeping up with Metadata; * All workflows complete in < X Seconds; * CPU/memory usage of the Cromwell server ; * CPU/memory usage of the Database (directly from stackdriver) (TODO: Not sure we care?); ## Possible solutions; ### Mock-ify the Google backend; ## Goal; Submit workflows is successful and all return in < X seconds,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4793:370,Mock,Mock-ify,370,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4793,1,['Mock'],['Mock-ify']
Testability,"Submitting a workflow with wrong credentials (eg invalid refresh token) triggers retries which are bound to fail and are significantly delaying the response from JesBackend, which in turn seems to lead to 502 proxy errors.; This might not be the only cause of this error but when submitting a few workflow with wrong token there was a flood of retries in cromwell logs which probably slows everything down.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/313:364,log,logs,364,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/313,1,['log'],['logs']
Testability,Succeeded on this branch at https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2/222/ (VPN required). This test is identical to the one in the [test_bcbio_cwl repo](https://github.com/bcbio/test_bcbio_cwl) with one exception: all storage locations have been converted to `gs://` paths (true before this PR also). Brad's comment about `gs://` conversion:; >I believe Thibault was mapping over the relative file-based references into the equivalent gs:// URLs for Cromwell testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4528:131,test,test,131,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4528,2,['test'],"['test', 'testing']"
Testability,Succeeded on this branch at https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2/224/ (VPN required). This test is identical to the one in the [test_bcbio_cwl repo](https://github.com/bcbio/test_bcbio_cwl) with one exception: all storage locations have been converted to `gs://` paths (true before this PR also). Brad's comment about `gs://` conversion:; >I believe Thibault was mapping over the relative file-based references into the equivalent gs:// URLs for Cromwell testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4527:131,test,test,131,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4527,2,['test'],"['test', 'testing']"
Testability,Succeeded on this branch at https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2/230/ (VPN required). This test is identical to the one in the test_bcbio_cwl repo.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4532:131,test,test,131,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4532,1,['test'],['test']
Testability,Suggested comments for reviewers:; - [x] Needs a test; - [x] Needs docs; - [x] Add to changelog; - [x] How about a proper type for this?; - [x] Best code I've ever seen; - [x] The test is failing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/593:49,test,test,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/593,2,['test'],['test']
Testability,Suggestions for a better testing approach welcome.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5222:25,test,testing,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5222,1,['test'],['testing']
Testability,"Supersedes the work on sfrazer_bugs. Non-Docker tests pass on gce-ces-build, I don't know how to run Docker tests there from the CLI. This does not include @kshakir's MVCC database changes as those don't appear to be strictly necessary to solve these problems, though they might be desirable on their own merits.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/123:48,test,tests,48,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/123,2,['test'],['tests']
Testability,"Support ""flattening"" when copying logs and workflow outputs",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1641:34,log,logs,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1641,1,['log'],['logs']
Testability,Support dockeroutputdirectory (conformance test #102),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3543:43,test,test,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3543,1,['test'],['test']
Testability,Support for Asserts,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1146:12,Assert,Asserts,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1146,1,['Assert'],['Asserts']
Testability,Surface TES System Logs to Cromwell when TES backend returns task error status,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6972:19,Log,Logs,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6972,1,['Log'],['Logs']
Testability,Switch tests back to develop,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4397:7,test,tests,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4397,1,['test'],['tests']
Testability,Switched `WorkflowExecutionAux` Slick columns from `String` to `Clob`.; Added a test to store/retrieve the 441 char `/3step.wdl` resource paired with a ~10K generated json.; Fixed bug where workflow creation was storing `Call`s using `.taskFqn` instead of `.fullyQualifiedName`.; Added a set of permuted tests for regression checking fully qualified name inserts and updates.; Fixed typo in `to*Worfk*low` utility method.; Re-enabling connection pool for main and tests.; Switched off command line Hikari info & warning logging via logback.xml.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/78:80,test,test,80,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/78,5,"['log', 'test']","['logback', 'logging', 'test', 'tests']"
Testability,Switched logging to `pretty` and `standard`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/330:9,log,logging,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/330,1,['log'],['logging']
Testability,"Switches the cache tests to use the GATK image, on the assumption that its specifically versioned tag is much less likely to move than `ubuntu:latest`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6206:19,test,tests,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6206,1,['test'],['tests']
Testability,"Switching GraphNode.{equals, hashCode} from component-based to reference (object identity)-based. Update two unit tests to reflect the change.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2741:114,test,tests,114,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2741,1,['test'],['tests']
Testability,Sync centaur timeouts with heartbeats in test.inc.sh,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3874:41,test,test,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3874,1,['test'],['test']
Testability,Synch this error message with SFS for failing centaur test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1331:54,test,test,54,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1331,1,['test'],['test']
Testability,Synchronize access to Logback context.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3956:22,Log,Logback,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3956,1,['Log'],['Logback']
Testability,Synchronize access to Logback context. [34 hotfix],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3957:22,Log,Logback,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3957,1,['Log'],['Logback']
Testability,TES 4.4 requires a new backend parameter `internal_path_prefix` so it can create task files in a correct/configurable location. This PR adds that key/value pair to our `TesTask` and friends.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7189:169,TesT,TesTask,169,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7189,1,['TesT'],['TesTask']
Testability,TES 4.4 requires a new backend parameter internal_path_prefix so it can create task files in a correct/configurable location. This PR adds that key/value pair to our TesTask and friends.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7190:166,TesT,TesTask,166,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7190,1,['TesT'],['TesTask']
Testability,TES Centaur should run more tests sequentially,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3010:28,test,tests,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3010,1,['test'],['tests']
Testability,"TESK requires an FTP server that could accept concurrent connections for multiple conformance test suites running in parallel (as our CI runs for each commit / PR).; The one currently used in testing does not provide such scalability, at least not for a single user.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4007:94,test,test,94,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4007,2,['test'],"['test', 'testing']"
Testability,TEST Integration errors: Chaos Cromwell,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2113:0,TEST,TEST,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2113,1,['TEST'],['TEST']
Testability,TEST Recovering Jobs: Turn Cromwell off/on,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2111:0,TEST,TEST,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2111,1,['TEST'],['TEST']
Testability,TEST Scalability/Performance: Pieces of the Green team,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2112:0,TEST,TEST,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2112,1,['TEST'],['TEST']
Testability,"TTER_INDEX`,; `JOB_RETRY_ATTEMPT`,; `METADATA_KEY`,; `METADATA_VALUE`,; `METADATA_VALUE_TYPE`,; `METADATA_TIMESTAMP`,; `METADATA_JOURNAL_ID`; from; `METADATA_ENTRY`; where; (; (; `WORKFLOW_EXECUTION_UUID` = '69e8259c-856a-4d87-9cdf-bd709f8e5ce3'; ); and (; (; (; (; `METADATA_KEY` like 'vmStartTime%'; ); or (`METADATA_KEY` like 'vmEndTime%'); ); or (; `METADATA_KEY` like 'vmCostPerHour%'; ); ); or (; `METADATA_KEY` like 'subWorkflowId%'; ); ); ); and (; (not false); or (; (; (`CALL_FQN` is null); and (`JOB_SCATTER_INDEX` is null); ); and (`JOB_RETRY_ATTEMPT` is null); ); ); order by; `METADATA_TIMESTAMP`;; ```. This is how Liquibase checks for index existence on MySQL:. ```; SELECT ; TABLE_CATALOG AS TABLE_CAT, ; TABLE_SCHEMA AS TABLE_SCHEM, ; TABLE_NAME, ; NON_UNIQUE, ; NULL AS INDEX_QUALIFIER, ; INDEX_NAME, ; 3 AS TYPE, ; SEQ_IN_INDEX AS ORDINAL_POSITION, ; COLUMN_NAME, ; COLLATION AS ASC_OR_DESC, ; CARDINALITY, ; 0 AS PAGES, ; NULL AS FILTER_CONDITION ; FROM ; INFORMATION_SCHEMA.STATISTICS ; WHERE ; TABLE_SCHEMA = 'cromwell_test' ; AND INDEX_NAME = 'IX_METADATA_ENTRY_WEU_MK' ; ORDER BY ; NON_UNIQUE, ; INDEX_NAME, ; SEQ_IN_INDEX; ```. And this is the index create:. ```; CREATE INDEX `IX_METADATA_ENTRY_WEU_MK` ON `cromwell_test`.`METADATA_ENTRY`(; `WORKFLOW_EXECUTION_UUID`, `METADATA_KEY`; ); ```; ```; CREATE INDEX `IX_METADATA_ENTRY_WEU_CF_JSI_JRA_MK` ON `cromwell_test`.`METADATA_ENTRY`(; `WORKFLOW_EXECUTION_UUID`, `CALL_FQN`, ; `JOB_SCATTER_INDEX`, `JOB_RETRY_ATTEMPT`, ; `METADATA_KEY`; ); ```. A reincarnation of https://github.com/broadinstitute/cromwell/pull/4736. ### Release Notes Confirmation. #### `CHANGELOG.md`; - [x] I updated `CHANGELOG.md` in this PR; - [ ] I assert that this change shouldn't be included in `CHANGELOG.md` because it doesn't impact community users. #### Terra Release Notes; - [ ] I added a suggested release notes entry in this Jira ticket; - [x] I assert that this change doesn't need Jira release notes because it doesn't impact Terra users",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7567:1879,assert,assert,1879,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7567,2,['assert'],['assert']
Testability,Tag Call Caching & Restart tests as 'PostMVP' and exclude in 'sbt test',MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/996:27,test,tests,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/996,2,['test'],"['test', 'tests']"
Testability,Tagged Caching and Restart as PostMVP and re-enabled a few tests Closes #996,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1009:59,test,tests,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1009,1,['test'],['tests']
Testability,"Tagged all database specific tests as `IntegrationTest`.; As mysql now has 5s to timeout, increased the testing timeout used to detect if mysql is available.; Removed unused code and optimized imports.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/398:29,test,tests,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/398,2,['test'],"['testing', 'tests']"
Testability,Tagged integration tests as integration tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/357:19,test,tests,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/357,2,['test'],['tests']
Testability,"Takes WDL 1.0 case classes (`wdl.model.draft3.elements.FileElement` and its children) and writes them out as WDL source code. Test scheme:; 1. Load the WDL as case classes; 2. Write them out as source; 3. Load up the source from step 2 as case classes; 4. Verify the case classes from (1) and (3) are identical. I also uncovered some gaps in the set of WDLs we use for unit tests - I had gotten all the tests to pass, but there were still a handful of `???`'s in my code. Added test cases such that all of them were hit (and then implemented).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3601:126,Test,Test,126,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3601,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"Task `t` is called three times with different aliases. Is there any way to share the same string variable `a` for `t`, `t1` and `t2`?; ```; workflow test {; call t {}; call t as t1 {}; call t as t2 {}; }. task t {; String? a; command { ... }; }; ```; What I expected...; ```; input.json; {; ""test.t.a"" : ""hello world""; }; ```; But I had to use...; ```; input.json; {; ""test.t.a"" : ""hello world""; ""test.t1.a"" : ""hello world""; ""test.t2.a"" : ""hello world""; }; ```; I am developing a pipeline and it has 9 aliases for the same task. I actually don't want to define the same variable 9 times in `input.json`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2914:149,test,test,149,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2914,5,['test'],['test']
Testability,"Task failing with ""the local copy message must have path set"" but no other logs are output.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2791:75,log,logs,75,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2791,1,['log'],['logs']
Testability,"Terra/Cromwell workflows using data that has been exported from the UChicago Gen3/Windmill system or the HCA Data Browser with DRS URI data references frequently (always?) fail in the Ammonite script that performs the DRS resolution/localization. Failed workflows using DRS URI data references most often have error messages and logs as shown below. These examples are from the Terra workspace `firecloud-cgl/20190701 Test` in which a small number of files were exported from Windmill to Terra, and an md5sum workflow was exported from Dockstore. These same error messages and log entries have been seen in many other similar workspaces over the last couple/few months (no data before that). @abaumann has been recently and actively involved in the investigation of this problem, and has access to this workspace. ```; Task ga4ghMd5.md5:NA:1 failed. The job was stopped before the command finished. PAPI error code 10. The assigned worker has failed to complete the operation	. 2019/07/01 22:54:02 Starting container setup.; 2019/07/01 22:54:11 Done container setup.; 2019/07/01 22:54:17 Starting localization.; 2019/07/01 22:54:24 Localizing input dos://dg.4503/1406db81-91d7-4e57-ada3-40487199ed06 -> /cromwell_root/topmed-irc-share/genomes/NWD522711.b38.irc.v1.cram; Compiling (synthetic)/ammonite/predef/interpBridge.sc; ```. or. ```; Task ga4ghMd5.md5:NA:1 failed. The job was stopped before the command finished. PAPI error code 10. The assigned worker has failed to complete the operation	. 2019/07/10 19:25:06 Starting container setup.; 2019/07/10 19:25:14 Done container setup.; 2019/07/10 19:25:20 Starting localization.; 2019/07/10 19:25:26 Localizing input dos://dg.4503/1cba8116-a3d1-41e6-aab3-428e4f42e916 -> /cromwell_root/topmed-irc-share/genomes/NWD735861.b38.irc.v1.cram.crai; Compiling (synthetic)/ammonite/predef/interpBridge.sc; Compiling (synthetic)/ammonite/predef/DefaultPredef.sc; ```. In some cases, additional information is logged, as in the following example where Ammonit",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5069:329,log,logs,329,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5069,3,"['Test', 'log']","['Test', 'log', 'logs']"
Testability,Test CWL ECMAScript Functions,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2719:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2719,1,['Test'],['Test']
Testability,Test CWL in Centaur across Cromwell restarts,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3012:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3012,1,['Test'],['Test']
Testability,Test CWL parser against all CWL in the common-workflow-language v1 folder,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2710:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2710,1,['Test'],['Test']
Testability,Test Cromwell upgrades in GOTC staging environment,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2301:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2301,1,['Test'],['Test']
Testability,Test MySQL/HSQL in Travis/Centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1920:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1920,1,['Test'],['Test']
Testability,Test PAPI CWL in parallel.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3187:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3187,1,['Test'],['Test']
Testability,Test PAPI stdout & stderr streaming,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4187:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4187,1,['Test'],['Test']
Testability,Test PR - do not merge.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6317:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6317,1,['Test'],['Test']
Testability,Test SGE using Centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1180:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1180,1,['Test'],['Test']
Testability,Test and build updates Closes #1516,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1589:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1589,1,['Test'],['Test']
Testability,Test branch to address [WX-983](https://broadworkbench.atlassian.net/browse/WX-983). . Will build up GHA actions and Scala tests until it reaches an acceptable state. [WX-983]: https://broadworkbench.atlassian.net/browse/WX-983?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7202:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7202,2,"['Test', 'test']","['Test', 'tests']"
Testability,Test cases to follow.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/128:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/128,1,['Test'],['Test']
Testability,Test config overrides main config -- causes confusion,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/768:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/768,1,['Test'],['Test']
Testability,Test cross publishing on all projects,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2585:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2585,1,['Test'],['Test']
Testability,Test different Cromwell non backend specific confs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2896:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2896,1,['Test'],['Test']
Testability,Test draft PR so I can experience the integration test cycle.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6175:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6175,2,"['Test', 'test']","['Test', 'test']"
Testability,"Test environment is `sbt -mem 8192` with 3 cycles of `clean; compile` in order to warm up the JVM. Before:; ```; [info] compiling 23 Scala sources to /Users/anichols/Projects/cromwell/supportedBackends/google/pipelines/v2alpha1/target/scala-2.13/classes ...; [info] compiling 22 Scala sources to /Users/anichols/Projects/cromwell/supportedBackends/google/pipelines/v2beta/target/scala-2.13/classes ...; [info] compiling 4 Scala sources to /Users/anichols/Projects/cromwell/server/target/scala-2.13/classes ...; [success] Total time: 97 s (01:37), completed Dec 8, 2023, 4:04:43 PM; ```. After:; ```; [info] compiling 22 Scala sources to /Users/anichols/Projects/cromwell/supportedBackends/google/pipelines/v2beta/target/scala-2.13/classes ...; [info] compiling 23 Scala sources to /Users/anichols/Projects/cromwell/supportedBackends/google/pipelines/v2alpha1/target/scala-2.13/classes ...; [info] compiling 4 Scala sources to /Users/anichols/Projects/cromwell/server/target/scala-2.13/classes ...; [success] Total time: 34 s, completed Dec 8, 2023, 3:54:47 PM; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7339:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7339,1,['Test'],['Test']
Testability,Test fixing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/917:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/917,1,['Test'],['Test']
Testability,Test for object types in input jsons,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2895:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2895,1,['Test'],['Test']
Testability,"Test labels addition, update, and subsequent retrieval after archival [BA-6252]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5439:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5439,1,['Test'],['Test']
Testability,Test metadata deletion after carbonite [BA-6246],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5440:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5440,1,['Test'],['Test']
Testability,Test metadata for PAPI generated log names,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4188:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4188,2,"['Test', 'log']","['Test', 'log']"
Testability,"Test non-broken sub workflow declarations, and a bunch of other declarations too.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2910:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2910,1,['Test'],['Test']
Testability,Test output/log copying in new testing framework,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2884:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2884,3,"['Test', 'log', 'test']","['Test', 'log', 'testing']"
Testability,Test over ActorWorkflowManager,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/27:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/27,1,['Test'],['Test']
Testability,Test performance impact on /metadata endpoint of deleting indices METADATA_JOB_IDX and METADATA_JOB_AND_KEY_IDX,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4733:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4733,1,['Test'],['Test']
Testability,Test reliability: filesystem startup timeouts and docker health check errors [BA-6164],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5341:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5341,1,['Test'],['Test']
Testability,Test removing pullapprove,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4620:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4620,1,['Test'],['Test']
Testability,Test restart capabilities,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1329:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1329,1,['Test'],['Test']
Testability,Test script for DRS access [BT-539],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6667:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6667,1,['Test'],['Test']
Testability,Test struct localization and delocalization,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3547:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3547,1,['Test'],['Test']
Testability,Test temp DOS/DRS images in GCR on Papi BA-5953,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5142:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5142,1,['Test'],['Test']
Testability,Test that CromIAM can handle 200 status requests/s,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4614:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4614,1,['Test'],['Test']
Testability,Test that `chart_update_on_merge` runs properly when using a cronjob.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7458:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7458,1,['Test'],['Test']
Testability,"Test the Cromwell 27 upgrade for GOTC. Also, let's talk about what Green needs for integration testing in general, and what they need.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2301:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2301,2,"['Test', 'test']","['Test', 'testing']"
Testability,Test workflow pickup group priority [BW-568][BW-1128],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6706:0,Test,Test,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6706,1,['Test'],['Test']
Testability,TestKitSpec.scala:250) at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192) at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190) at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Th,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:5229,Test,TestFramework,5229,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestFramework']
Testability,Tested against 5GB stderr file,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4952:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4952,1,['Test'],['Tested']
Testability,Tested against a scuppered local backend (https://github.com/broadinstitute/cromwell/tree/cjl_scupper_local_backend) with a 100-wide hello-world. Not entirely obvious how to incorporate that into our test suite since the `executionStore.MaxJobsToStartPerTick` is a global rather than per-backend value.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5595:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5595,2,"['Test', 'test']","['Tested', 'test']"
Testability,"Tested by localizing a Blob file from Terra Prod, on a patched Cromwell in Terra Dev. This PR with foreign Blob URL:. ```; 2023-12-20 18:12:17.197 Tes.Runner.Transfer.BlobOperationPipeline[0] Completed download. Total bytes: 7,811,366,912 Filename: /mnt/batch/tasks/workitems/TES-ybjxkg-D5_v2-4yab26tn3af2kf6dfa755sbg5oeqevqw-6cylhedz/job-1/a7123170_f41bbba17a6f4409940127a60234695d-1/wd/wd/cromwell-executions/localizer_workflow/a7123170-1652-45b8-a8ba-c7bef84acac4/call-localizer_task/inputs/lz304a1e79fd7359e5327eda.blob.core.windows.net/sc-705b830a-d699-478e-9da6-49661b326e77/inputs/Rocky-9.2-aarch64-dvd.iso; 2023-12-20 18:12:17.200 Tes.Runner.Transfer.ProcessedPartsProcessor[0] All parts were successfully processed.; 2023-12-20 18:12:17.200 Tes.Runner.Transfer.PartsReader[0] All part read operations completed successfully.; 2023-12-20 18:12:17.201 Tes.Runner.Transfer.PartsWriter[0] All part write operations completed successfully.; 2023-12-20 18:12:17.201 Tes.Runner.Transfer.BlobOperationPipeline[0] Pipeline processing completed.; 2023-12-20 18:12:17.201 Tes.Runner.Transfer.BlobOperationPipeline[0] Waiting for processed part processor to complete.; 2023-12-20 18:12:17.201 Tes.Runner.Transfer.BlobOperationPipeline[0] Processed parts completed.; 2023-12-20 18:12:17.204 Tes.Runner.Executor[0] Executed Download. Time elapsed: 00:00:13.0435715 Bandwidth: 571.12 MiB/s; 2023-12-20 18:12:17.208 Tes.RunnerCLI.Commands.CommandHandlers[0] Total bytes transferred: 7,811,369,114; /cromwell-executions/localizer_workflow/a7123170-1652-45b8-a8ba-c7bef84acac4/call-localizer_task/execution; ```. This PR with a regular HTTPS URL from the 'net:; ```; 2023-12-20 18:42:08.430 Tes.Runner.Transfer.BlobOperationPipeline[0] Completed download. Total bytes: 1,553,924,096 Filename: /mnt/batch/tasks/workitems/TES-ybjxkg-D5_v2-4yab26tn3af2kf6dfa755sbg5oeqevqw-6cylhedz/job-1/f9b357bc_8d135cf26c4345599dbd046d5892d274-1/wd/wd/cromwell-executions/localizer_workflow/f9b357bc-4a13-4923-9b90-0f707ae9f435",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7347:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7347,1,['Test'],['Tested']
Testability,Tested changes on BEE by importing a private workflow and running it. ![Screenshot 2024-02-27 at 3 22 42 PM](https://github.com/broadinstitute/cromwell/assets/16748522/98bbca29-d594-4501-ba94-a68cf40804ac). Closes https://broadworkbench.atlassian.net/browse/WM-2461,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7373:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7373,1,['Test'],['Tested']
Testability,"Tested locally with a long pause inserted into the metadata write actor. Shutting down and restarting after the subworkflow ""finished"" but before the final state metadata was written did not cause inconsistency in statuses written to the DB.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6433:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6433,1,['Test'],['Tested']
Testability,"Tested the WDL below with 831512a and got the error below:. ```wdl; version 1.0. workflow wdl_v1_tests {; scatter (x in [0]) {; scatter (y in [0]) {; call input_default_not_used; }; }; }. task input_default_not_used {; input { String greeting = ""hello"" }; command { echo ~{greeting} }; runtime { docker: ""bash"" }; }; ```. ```; [2018-06-08 01:30:26,49] [error] WorkflowManagerActor Workflow 58ccc276-40f7-447c-bbff-87a47aa7163e failed (during MaterializingWorkflowDescriptorState): cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; key not found: wdl_v1_tests.input_default_not_used.greeting; scala.collection.immutable.Map$Map1.apply(Map.scala:111); wdl.draft3.transforms.wdlom2wom.graph.ScatterElementToGraphNode$.$anonfun$convertInnerScatter$8(ScatterElementToGraphNode.scala:103); scala.collection.immutable.List.map(List.scala:283); wdl.draft3.transforms.wdlom2wom.graph.ScatterElementToGraphNode$.$anonfun$convertInnerScatter$7(ScatterElementToGraphNode.scala:102); cats.data.Validated.map(Validated.scala:194); wdl.draft3.transforms.wdlom2wom.graph.ScatterElementToGraphNode$.convertInnerScatter(ScatterElementToGraphNode.scala:99); wdl.draft3.transforms.wdlom2wom.graph.ScatterElementToGraphNode$.convert(ScatterElementToGraphNode.scala:31); wdl.draft3.transforms.wdlom2wom.graph.WorkflowGraphElementToGraphNode$.convert(WorkflowGraphElementToGraphNode.scala:49); wdl.draft3.transforms.wdlom2wom.WorkflowDefinitionElementToWomWorkflowDefinition$.$anonfun$makeWomGraph$1(WorkflowDefinitionElementToWomWorkflowDefinition.scala:82); common.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:27); wdl.draft3.transforms.wdlom2wom.WorkflowDefinitionElementToWomWorkflowDefinition$.graphNodeCreationFold$1(WorkflowDefinitionElementToWomWorkflowDefinition.scala:77); wdl.draft3.transforms.wdlom2wom.WorkflowDefinitionElementToWomWorkflowDefinition$.$anonfun$makeWomGraph$6(WorkflowDefinitionElement",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3751:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3751,1,['Test'],['Tested']
Testability,Tested this out on a fork over here: https://github.com/mcovarr/cromwell,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2830:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2830,1,['Test'],['Tested']
Testability,"Tested using the included DRS Localizer repo template. Follow Janet's instructions for getting a B2C token, setting up a Key Vault, and storing the former in a secret within the latter. You should then be able to run the repo template with the coordinates for vault name, secret name, and client id plugged in to the invocation. Assuming your token is fresh (mine expired several times in one day while testing this), everything should Just Work. Oh and `getm` must be installed:. ```; pip3 install getm==0.0.4; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6560:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6560,2,"['Test', 'test']","['Tested', 'testing']"
Testability,"Tested using; ```; workflow my_workflow {; Float blobSize = size(""https://dspworkflowstestdata.blob.core.windows.net/joint-calling-examples/azure_sample_map.2samples.txt""); Float ghSize = size(""https://raw.githubusercontent.com/broadinstitute/cromwell/c2aa7561565c874316b7ed4047c44036534fa9b9/src/ci/resources/tes_application.conf""); output {; Float blobSizeOut = blobSize; Float ghSizeOut = ghSize; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7128:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7128,1,['Test'],['Tested']
Testability,"Tested with Cromwell 52, 53. `memory-retry` does not work as expected. First of all it's activated only when `continueOnReturnCode` is set as `true` or list of some return codes.; I think this is intended as described in the documentation but why?. This is very weird. In most cases, return code of OOM is just 137.; Why don't we have something like `memoryRetryReturnCode`. I think it's too dangerous too set `continueOnReturnCode` as `true`.; Cromwell will pass any failure in all tasks.; So I set it as `[0, 137]` to catch `SIGKILL` due to OOM.; I also tried with `true` though. Here is my simple OOM tester WDL. I tested it with PAPIv2 beta based on Life Sciences API. ```wdl; version 1.0. workflow mem_retry {; call fail_oom; }. task fail_oom {; command {; set -e; # This one-liner triggers OOM and hence 137 (SIGKILL); # https://askubuntu.com/a/823798; tail /dev/zero # <====== This WDL works fine without this line; }; runtime {; cpu: 1; memory: ""2 GB""; docker: ""ubuntu:latest""; continueOnReturnCode: [0, 137]; }; }; ```. Google backend (PAPI2 beta) in `backend.conf`, ; ```; config {; memory-retry {; error-keys = [""OutOfMemoryError"", ""Killed""]; multiplier = 1.5; }; }; ```. STDERR of task:; ```; $ gsutil cat gs://encode-pipeline-test-runs/caper_out_10/mem_retry/87492280-9828-4afa-b53e-bec675103c42/call-fail_oom/stderr; /cromwell_root/script: line 28: 17 Killed tail /dev/zero; ```. RC of task. It's weird that this is not caught in `metadata.json`.; ```; $ gsutil cat gs://encode-pipeline-test-runs/caper_out_10/mem_retry/87492280-9828-4afa-b53e-bec675103c42/call-fail_oom/rc; 137; ```. `memory_retry_rc`: So Cromwell found that it's failed due to OOM.; ```; $ gsutil cat gs://encode-pipeline-test-runs/caper_out_10/mem_retry/87492280-9828-4afa-b53e-bec675103c42/call-fail_oom/memory_retry_rc; 0; ```. `metadata.json`; ```; {; ""workflowName"": ""mem_retry"",; ""workflowProcessingEvents"": [; {; ""timestamp"": ""2020-08-29T00:00:38.724Z"",; ""cromwellVersion"": ""53"",; ""cromwellId"": ""cromid-0a29b92""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5815:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5815,3,"['Test', 'test']","['Tested', 'tested', 'tester']"
Testability,"Tested with the following workflow [1], workflow options [2], and config [3]. On `develop`, the workflow failed 20/20 times with an `IOException` [0]. On the PR branch, it succeeded 20/20 times. [0]; ```; IOException: Could not read from https://coaexternalstorage.blob.core.windows.net/inputs/test/inputFile.txt: ; /Users/anichols/Projects/cromwell/https:/coaexternalstorage.blob.core.windows.net/inputs/test/inputFile.txt; ```; [1]; ```; version 1.0. workflow my_workflow {; String s = read_string(""https://coaexternalstorage.blob.core.windows.net/inputs/test/inputFile.txt""); output {; String out = s; }; }; ```; [2]; ```; {; ""read_from_cache"": false,; ""write_to_cache"": false; }; ```; [3]; ```; filesystems {; blob {; class = ""cromwell.filesystems.blob.BlobPathBuilderFactory""; global {; class = ""cromwell.filesystems.blob.BlobFileSystemConfig""; config {; # workspace-manager-url = ""{PLACEHOLDER}""; }; }; }; http {; class = ""cromwell.filesystems.http.HttpPathBuilderFactory""; }; }. engine {; filesystems {; blob {; enabled: true; endpoint: ""https://coaexternalstorage.blob.core.windows.net""; container: ""inputs""; # sas-token: ""{PLACEHOLDER}""; # workspace-id: ""{PLACEHOLDER}""; }. http {; enabled: true; }; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6930:0,Test,Tested,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6930,4,"['Test', 'test']","['Tested', 'test']"
Testability,Testing Database Migration: spoof data and migrate,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2110:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2110,1,['Test'],['Testing']
Testability,Testing Improvements,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2109:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2109,1,['Test'],['Testing']
Testability,Testing Tidy and Integration/DBMS split,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/558:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/558,1,['Test'],['Testing']
Testability,"Testing conducted with local Cromwell running against Life Sciences with the following machine shape, localizing and delocalizing a 95 GB Chromosome 2 reference file [0]. ```; runtime {; docker: ""rockylinux:9""; disks: ""local-disk 2500 SSD""; cpu: 16; memory: ""32 GB""; cpuPlatform: ""Intel Ice Lake""; }; ```. ![Screenshot 2024-01-12 at 10 41 06](https://github.com/broadinstitute/cromwell/assets/1087943/b0a1925e-a243-4832-8023-1be336103e31). The result in Life Sciences above was confirmed manually using a [similarly configured GCE VM](https://console.cloud.google.com/compute/instancesDetail/zones/us-east4-c/instances/aen-build?project=broad-dsde-cromwell-dev) via SSH. ```; > gcloud storage --billing-project=broad-dsde-cromwell-dev cp gs://genomics-public-data/1000-genomes/vcf/ALL.chr2.integrated_phase1_v3.20101123.snps_indels_svs.genotypes.vcf .; Copying gs://genomics-public-data/1000-genomes/vcf/ALL.chr2.integrated_phase1_v3.20101123.snps_indels_svs.genotypes.vcf to file://./ALL.chr2.integrated_phase1_v3.20101123.snps_indels_svs.genotypes.vcf; Completed files 1/1 | 95.4GiB/95.4GiB | 519.7MiB/s . Average throughput: 1.2GiB/s; ```. Corresponding config synchronization: https://github.com/broadinstitute/terra-helmfile/pull/4987. [0] `gs://genomics-public-data/1000-genomes/vcf/ALL.chr2.integrated_phase1_v3.20101123.snps_indels_svs.genotypes.vcf`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7359:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7359,1,['Test'],['Testing']
Testability,Testing correctness of post-archival metadata retrieval [BA-6244],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5436:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5436,1,['Test'],['Testing']
Testability,Testing of multiple cromwells with a single shared database,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4241:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4241,1,['Test'],['Testing']
Testability,Testing out disabling CWL in FC so I set the CWL language factory to `enabled=false`. The error message was very wrong:. ```; cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; WDL draft 3 is not enabled; ```. Due to this [wonky bit](https://github.com/broadinstitute/cromwell/blob/develop/languageFactories/language-factory-core/src/main/scala/cromwell/languages/StandardLanguageFactoryConfig.scala#L10) of code.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3921:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3921,1,['Test'],['Testing']
Testability,"Testing the FSM state-by-state, testing what happens when transitions happen and then making assumptions about the starting conditions of subsequent states.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1407:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1407,2,"['Test', 'test']","['Testing', 'testing']"
Testability,Testing what the outside world sees,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7099:0,Test,Testing,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7099,1,['Test'],['Testing']
Testability,Tests for WdlBindings and ASTs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4:0,Test,Tests,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4,1,['Test'],['Tests']
Testability,Tests leak threads and memory,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/906:0,Test,Tests,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/906,1,['Test'],['Tests']
Testability,"Tests like `abort.scheduled_abort` should run also run sequentially, inline with the current Restart test cases. Otherwise, Travis+Centaur produces false negative results, requiring the test to be re-run, and delaying PR merges. There are currently two suites of tests: those that run in parallel, and those that run sequentially. The ""sequential"" tests are currently _only_ of the category ""start a workflow job, restart, then ensure that job still succeeds"". [Here ](https://travis-ci.org/broadinstitute/cromwell/jobs/312225757#L2955) is an example`abort.scheduled_abort` (wf 6d64cc05) running in parallel with a restart test case. The workflow job is supposed to abort. But because cromwell restarts during the middle of the job, TES is unable to tell if the job was running and marks it as [`Failed` instead of `Aborted`](https://travis-ci.org/broadinstitute/cromwell/jobs/312225757#L3534). The [`RestartTestCaseSpec`](https://github.com/broadinstitute/cromwell/blob/4a37f95cc49567505ad50907f85c4fa046ac596e/centaur/src/it/scala/centaur/RestartTestCaseSpec.scala) could be renamed to `Sync` or `Sequential` and also used for these additional tests. In theory this should only take a half-day to test and fix and would save frustration across multiple PRs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3010:0,Test,Tests,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3010,8,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"Tests pass with this new value, where they didn't before",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5128:0,Test,Tests,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5128,1,['Test'],['Tests']
Testability,Tests running twice in Travis,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/540:0,Test,Tests,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/540,1,['Test'],['Tests']
Testability,Tests validation of placeholder attributes and adds handling of the `true=` and `false=` attributes,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3572:0,Test,Tests,0,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3572,1,['Test'],['Tests']
Testability,"Thanks for the AWS backend, we've been looking forward to that for a long time!. It works fine when there's no proxy between cromwell server and the outside, but from behind our institute proxy it fails (detailed log here: https://gist.github.com/delocalizer/e31e2779b906fba85d99ab9f8eb485b1). The credentials are valid, it's just that the `STSClient` connection is timing out [here](https://github.com/broadinstitute/cromwell/blob/e9f47c923ab7ec0cf6b4c6b2ae45e66d0d88e907/cloudSupport/src/main/scala/cromwell/cloudsupport/aws/auth/AwsAuthMode.scala#L86) because it seems it's not respecting proxy settings specified either with environment variables:; ```; http_proxy; https_proxy; HTTP_PROXY; HTTPS_PROXY; ```; or to java directly with system properties; ```; http.proxyHost; http.proxyPort; https.proxyHost; https.proxyPort; ```. Using the version 1 of `aws-sdk-java` you coud configure clients with [ClientConfiguration](https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/index.html?com/amazonaws/ClientConfiguration.html) that by default picks up those settings. I don't know how (or even if you can) do that with the sdk version 2 that's being used here.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3969:213,log,log,213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3969,1,['log'],['log']
Testability,"Thanks for your work with Cromwell.; I think below may be not a bug.; I write a workflow in wdl and use glob to output the result, like this.; ```; task xxx {; output {; Array[File] output_files = glob(""~{output_basename}_?P.fq.gz""); }; }; ```; xxx is a task name.; I output the task result in the workflow output part. Besides, I using this options.json to change some workflow options.; ```; {; ""final_workflow_outputs_dir"": ""xxx"",; ""use_relative_output_paths"": true; }; ```; xxx is a absolute path.; When I test it on a cromwell server V49 running in a SGE cluster, the os is Centos7.4, everything seems ok. xxx folder contains the task xxx's result.; When I test it on a comwell server V50 running in the same SGE cluster, xxx folder contains a glob folder and the task result is in it.; I want all the result files in xxx folder. Is it possible in V50?; Thanks!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5524:510,test,test,510,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5524,2,['test'],['test']
Testability,"That Centaur JES test is broken for realz, let me figure that out before reviewing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2362:17,test,test,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2362,1,['test'],['test']
Testability,"The AWS needs to be able to correctly fill in the `JobExecutionResult` on completion. This isn't really a good enough long-term answer:. ```; [51] log.info(""AWS task completed!\n{}"", taskDescription.toString); [52] SucceededResponse(jobDescriptor.key, Option(0), Map.empty, None, Seq.empty); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1573:147,log,log,147,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1573,1,['log'],['log']
Testability,"The CWL Spec [says](http://www.commonwl.org/v1.0/CommandLineTool.html#File) that if a file named `cwl.outputs.json` is present in the output directory of the task, the `outputBinding` should be ignored and this file should be used as the output of the task.; It's hard to tell how extensively this functionality is used by real CWL workflows but at least 1 conformance test makes use of it (#2).; Implementing this might be a bit challenging (especially in JES where we need to know in advance what to delocalize, maybe we'll have to use some sort of special glob ?..)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3110:369,test,test,369,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3110,1,['test'],['test']
Testability,"The CWL [File](http://www.commonwl.org/v1.0/CommandLineTool.html#File) type requires a number of additional attributes to pass conformance tests. [Previously](https://travis-ci.org/broadinstitute/cromwell/jobs/298402505) Cromwell was returning:. ```json; {; ""ac159f70-2fcf-469f-a23f-e53b894533b1908791632707518014.output_file"": ""/home/travis/build/broadinstitute/cromwell/cromwell-executions/ac159f70-2fcf-469f-a23f-e53b894533b1908791632707518014/ac159f70-2fcf-469f-a23f-e53b894533b1/call-ac159f70-2fcf-469f-a23f-e53b894533b1908791632707518014/execution/error.txt""; }; ```. When the tests are expecting output like:. ```json; {; ""output_file"": {; ""checksum"": ""sha1$f1d2d2f924e986ac86fdf7b36c94bcdf32beec15"",; ""class"": ""File"",; ""location"": ""error.txt"",; ""size"": 4; }; }; ```. [Currently](https://travis-ci.org/broadinstitute/cromwell/jobs/302086244) there does not seem to be any outputs generated. After discussions, the `WomSingleFile` will be updated to support the new File attributes. TBD: CWL conformance tests must pass, but metadata responses must be backwards compatible for WDL run in Firecloud. Acceptance criteria; - [ ] CWL conformance test # 10 passes; - [ ] Metadata responses for Firecloud are still backwards compatible",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2899:139,test,tests,139,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2899,4,['test'],"['test', 'tests']"
Testability,"The CWL conformance tests have a new addition that is globbing everything in the current directory and expecting files based on what the command produced. It fails because in addition to those files Cromwell also has the script file, rc file etc...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3092:20,test,tests,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3092,1,['test'],['tests']
Testability,"The CopyWorkflowActor regularly gets timeouts when trying to copy the gigabytes of data that are typically associated with production workflows. Also this duplicates the amount of disk space used for a workflow. . This remedies that problem by hardlinking the files. It is much much faster, and the cromwell-executions folder can be safely removed afterward. This is very beneficial for people who run cromwell on a cluster backend in `run` mode. Ping @illusional . I have included a test case.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6672:484,test,test,484,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6672,1,['test'],['test']
Testability,The EJEA is becoming quite the beast. It's starting to get too big to fit into a mental model so maybe we should decompose it a little. One obvious choice might be to extract the CC output fetch and copying phases into a single state and do actual the logic in a subactor?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1374:252,log,logic,252,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1374,1,['log'],['logic']
Testability,"The Horicromtal Deadlock test started failing the morning of Monday, 2/26 with Docker pull failures:; ```; Head ""https://registry-1.docker.io/v2/dockercloud/haproxy/manifests/latest"":; error parsing HTTP 429 response body:; invalid character 'S' looking for beginning of value: ; ""Server capacity exceeded.\n""; ```; I was able to pull the [`dockercloud/haproxy` image](https://hub.docker.com/r/dockercloud/haproxy) locally but found that it was last updated 6 years ago. My suspicion is that ancient images are stored in a much less hot level of cache in the bowels of Docker Hub and may be more susceptible to capacity issues and timeouts. In order to adopt a current, official HAProxy image, I had to make a very basic config and we were off to the races. This is because the `dockercloud` image was a bit customized with special sauce to automatically configure itself by detecting running Docker containers. As a bonus, the new Alpine-based image is actually smaller than the ancient one, albeit only 25 MB vs. 43 MB.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7376:25,test,test,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7376,1,['test'],['test']
Testability,"The MWDA should use the configuration it is passed when determining backend assignments, not rely on the `shadowy` variables in `CromwellBackends` as it does currently. Re-enable the `""assign backends based on runtime attributes""`test in `MaterialiseWorkflowDescriptorActorSpec`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1075:230,test,test,230,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1075,1,['test'],['test']
Testability,"The Nirvana reference image I made about a month ago had all the right files on it, but due to some last minute updates the paths where they were located on the image were not consistent with the firecloud-develop manifest. The Centaur test did not catch this because it only checked that reference image usage had been activated and that inputs were symlinks as opposed to regular files; unfortunately the test did not check that the symlinks pointed to files that actually existed. . These changes harden the Centaur reference image test to validate the symlinks and update the manifest to point to a corrected Nirvana image I made today. I confirmed locally that this test fails on the 2023-01-03 Nirvana image and succeeds on the 2023-02-01 Nirvana image. Associated firecloud-develop [PR](https://github.com/broadinstitute/firecloud-develop/pull/3232/files)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6996:236,test,test,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6996,4,['test'],['test']
Testability,"The OGE back end shell script that is submitted to the task scheduler on SGE/OGE back ends is potentially missing a sync statement. . `; (; cd /SingleSampleWF/ffc0dbea-a292-4e24-833a-d2010d373600/call-DeliverReports/execution; sync; ). mv /SingleSampleWF/ffc0dbea-a292-4e24-833a-d2010d373600/call-DeliverReports/execution/rc.tmp /SingleSampleWF/ffc0dbea-a292-4e24-833a-d2010d373600/call-DeliverReports/execution/rc; `. We've had cases where job completed successfully, OGE reports the job as exiting normally, but the rc file is written with a '79' (undocumented behavior until we located it in the source code). And yet on examination of the logs, there were no errors, and the rc file was moved from rc.tmp (which is no longer there). Our assumption is that the mv command is not getting flushed to our storage system, and if cromwell polls for zombie tasks before that happens we will see it as a job failure. . See https://github.com/broadinstitute/cromwell/blob/68949364c7ffab8450116baa8e2a4e276bb16d70/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L465. which is not followed by SCRIPT_EPILOGUE that would add the required sync command after the mv.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6988:643,log,logs,643,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6988,1,['log'],['logs']
Testability,"The OSS filesystem is built on the OSS api. In the OSS api v3.1.0 the logging is [very verbose by default](https://github.com/aliyun/aliyun-oss-java-sdk/blob/3.1.0/src/main/java/com/aliyun/oss/model/WebServiceRequest.java#L34-L36). Some quieting in Cromwell was added to the PR #3525, but there was a note that this should be generalized:. > there should be a thing that takes an ossPath and returns a request with logging disabled. Alternatively the logging may be quieter by default in a future version of the OSS API.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3526:70,log,logging,70,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3526,3,['log'],['logging']
Testability,"The PAPI v2 reference disk feature validates crc32c values for every file listed in configured reference disk manifests (CI manifest [here](https://github.com/broadinstitute/cromwell/blob/77c369596a1ad1153aff3fd4c8753d8a28dd649c/src/ci/resources/papi_v2_reference_image_manifest.conf)). If a file's crc32c value in GCS does not match its crc32c value in the manifest, the file will be omitted from Cromwell's reference mapping. In this particular case`gs://gcp-public-data--broad-references/hg19/v0/README` was updated in GCS which changed its GCS crc32c, but the manifest was not similarly updated until now. Cromwell did [emit a warning for this](https://api.travis-ci.com/v3/job/543857965/log.txt#:~:text=09%3A31%2C195%20%20WARN%20%20--,The%20following%20files%20listed%20in%20references%20manifest%20have%20checksum%20mismatch%20with%20actual%20files%20in%20GCS%3A%20ReferenceFile(gcp-public-data--broad-references/hg19/v0/README%2C1479759245,-)%0A2021-10-18) but I didn't notice it until after I started debugging. As there are 1604 files in the current CI manifest and it appears the only file that has changed in 8 months is the one file we use for CI, it seems likely we didn't make the best choice of test data. Suggestion for a better alternative are welcome. 🙂",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6546:692,log,log,692,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6546,2,"['log', 'test']","['log', 'test']"
Testability,"The SharedFileSystem (SFS) backend that is the basis for the local and SGE backends currently has a race condition in the script:. ``` bash; #!/bin/sh; cd $cwd; $instantiatedCommand; echo $$? > rc; ```; 1. The `echo` needs to write to a `rc.tmp` and then use the atomic `mv rc.tmp rc`. Otherwise cromwell will (very very rarely?) pickup the existence of the file before bash has written, flushed, and closed the rc contents. This is not an issue on JES because the API is waiting for the script to exit, not the appearance of the `rc` file.; 2. The `rc` path should be absolute, whether inside or outside of docker. `echo $$? > $cwd/rc` may be enough? Not an issue on JES as it only writes to the dockerized rc path.; 3. The SFS (and probably JES for consistency, and backends in general?) should run the WDL command in a subshell, either with a (yet-another) call to bash, or using [bashisms](https://github.com/koalaman/shellcheck/wiki/SC2103#correct-code). This would better protect that the WDL from killing the current shell without writing an `rc`. A proper centaur test would contain _diabolical_ WDL such as:. ```; command {; exit; }; ```. ```; command {; mkdir newdir; cd newdir; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1383:1072,test,test,1072,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1383,1,['test'],['test']
Testability,"The SingleWorkflow mode, via `java -jar cromwell.jar run …`, does not always wait for metadata to be completely processed. Thus when the actor exits, it may write out incomplete metadata json. This mainly seen during intermittent test failures that are looking for expected metadata from the output file:. ```scala; [info] SingleWorkflowRunnerActorWithMetadataSpec:; [info] A SingleWorkflowRunnerActor should ; [info] - successfully run a workflow outputting metadata *** FAILED *** (6 seconds, 143 milliseconds); [info] java.util.NoSuchElementException: None.get; [info] at scala.None$.get(Option.scala:347); [info] at scala.None$.get(Option.scala:345); [info] at cromwell.engine.workflow.SingleWorkflowRunnerActorSpec$OptionJsValueEnhancer$.toStringValue$extension(SingleWorkflowRunnerActorSpec.scala:44); [info] at cromwell.engine.workflow.SingleWorkflowRunnerActorSpec$OptionJsValueEnhancer$.toOffsetDateTime$extension(SingleWorkflowRunnerActorSpec.scala:43); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1932:230,test,test,230,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1932,1,['test'],['test']
Testability,"The TES backend previously hardcoded the value of preemptible to false [[BA-6004](https://broadworkbench.atlassian.net/browse/BA-6004)]. This change reads the value in from either the backend runtime or workflow runtime config. . I manually tested that the setting gets picked up from the config (workflow runtime setting of preemptible successfully overrides backend runtime setting; absence of preemptible setting uses default of false) and gets put in the task message sent to the TES API. . I also made a few minor updates to the TES docs to describe preemptible and fix a couple broken links. . A quick test was run as follows to view the TES task submission message sent by Cromwell:. - In one window, listen on port 5000 and display anything sent to it. `ncat -l 5000 -k`. - In another window, submit workflow to Cromwell configured to talk to TES on port 5000 . `java -Dconfig.file=app.config -jar /c/git/cromwell/server/target/scala-2.12/cromwell-48-366e431-SNAP.jar run test.wdl --inputs test.json; `; - Check that proper `""resources"":{""preemptible"":<value>}}` field is contained in the TES message. . [app.config.txt](https://github.com/broadinstitute/cromwell/files/3822302/app.config.txt); [test.json.txt](https://github.com/broadinstitute/cromwell/files/3822303/test.json.txt); [test.wdl.txt](https://github.com/broadinstitute/cromwell/files/3822304/test.wdl.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5270:241,test,tested,241,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5270,8,['test'],"['test', 'tested']"
Testability,"The `DrsCloudNioFileSystemProvider` was wrapping the retries of the `DrsPathResolver` with another set of `CloudNioRetry` retries. The product of these two retries at the previous configuration values would wait around 35 minutes (~:20 + 10 x ~3:30) to fail for each doomed attempt. That combined with a fairly wide scatter and a typo'd DRS path for `file` in code like . ```; task size {; input {; File file; }. Int file_size = ceil(size(file)); ...; }; ```; would completely block all 10 of the `IoActor`s [NIO threads](https://github.com/broadinstitute/cromwell/blob/develop/engine/src/main/scala/cromwell/server/CromwellRootActor.scala#L108). These changes remove the nested retries in the engine and dial back the patience for retries. If we want the retries to be more patient we'll probably have to make other code that is competing for `IoActor` threads more patient as well. Utility files for reproducing this error can be cherry picked from commit `ff7bddc8830802f7a606177d0eaf19c8f47ca865`. I don't know how to programatically link Google accounts to NIH accounts in Bond to be able to include this Centaur test in CI, though maybe we don't need to be linked to make sure this negative case errors within a reasonable timeout?. Workflow`9635fbf0-00b1-4635-b482-5a782cda5cd5` induced this problem in production, its metadata shows multiple `HaplotypeCaller` shards erroring out with ; ```; Failed to evaluate input 'disk_size' (reason 1 of 1): [Attempted 1 time(s)] - RuntimeException: Unexpected response during DRS resolution: RuntimeException: Could not access object 'drs://dg4.DFC/...'. Status: 500, reason: 'Internal Server Error', Martha location: 'https://.../martha_v3', message: 'Received error while resolving DRS URL. getaddrinfo ENOTFOUND dg4.dfc'; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6439:1118,test,test,1118,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6439,1,['test'],['test']
Testability,"The `JobStore` sends responses for all attempted writes, but nothing is expecting them. The symptom is that we see messages like these in the logs:. For `WorkflowManagerActor`:. ```; 2016-07-20 15:02:17,967 cromwell-system-akka.dispatchers.engine-dispatcher-7 WARN - WorkflowManagerActor Unhandled message: JobStoreWriteSuccess(RegisterWorkflowCompleted(f8af17ab-2ea2-4f8e-b84b-959e45eeab06)); ```. and for `WorkflowExecutionActor`:. ```; 2016-07-20 15:02:08,782 cromwell-system-akka.dispatchers.engine-dispatcher-7 WARN - WorkflowExecutionActor-f8af17ab-2ea2-4f8e-b84b-959e45eeab06 [UUID(f8af17ab)]: WorkflowExecutionActor [UUID(f8af17ab)] received an unhandled message: JobStoreWriteSuccess(RegisterJobCompleted([...])) in state: WorkflowExecutionInProgressState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1191:142,log,logs,142,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1191,1,['log'],['logs']
Testability,"The `Map[String, File?] file_map = { ""always"": make_file.out, ""truth"": make_true.out, ""untruth"": make_false.out }` part of the centaur test `files_in_complex_types` should be enabled when map literals are changed so that they can refer to the output of upstream tasks.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1951:135,test,test,135,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1951,1,['test'],['test']
Testability,"The `SprayDockerRegistryApiClientSpec` check for the v1 docker repositories on the hub.docker.com registry are all returning 404. Tried switching the repository searched on the registry from [`ubuntu`](https://hub.docker.com/r/_/ubuntu/) to [`registry`](https://hub.docker.com/r/_/registry/), but that only worked for a day or two. Either the handshake for accessing the v1 hub.docker.com needs to be updated, or perhaps the test needs an edit / removal. Perhaps we may also decide to only support v2 registries. `sbt engine/alltests:test-only *SprayDockerRegistryApiClient` will run the tests including ""resolve docker hub image v1 layer ids"", that may be marked with ""ignore"" by the time this ticket is addressed. Haven't checked GCR (or artifactory, quay, etc.) recently, but perhaps most registries are all using v2 for looking up repositories and we may remove v1 support. NOTE: Docker Hub, even though it is technically a _docker registry_, did NOT implement the official Docker Registry API for a long time.; - http://dev.hpcloud.com/blog/2016/wrangling-different-docker-apis . See also:; - https://docs.docker.com/registry/spec/api/; - https://github.com/docker/distribution; - https://docs.docker.com/v1.7/docker/reference/api/docker-io_api/",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1251:425,test,test,425,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1251,3,['test'],"['test', 'test-only', 'tests']"
Testability,The `read_tsv` Centaur test wrongly succeeds on the PAPI backend when in fact none of the files referenced in the generated TSV were delocalized from the VM. This is a more general problem of indirect file references not unlike `cwl.output.json` or globbing which would possibly benefit from a general solution.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3698:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3698,1,['test'],['test']
Testability,"The `validateWomNamespace` method was using `NoIoFunctionSet` instead of the available ioFunctions, causing the workflow in the centaur test to fail",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3715:136,test,test,136,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3715,1,['test'],['test']
Testability,"The assignment of these variables into each task's descriptor naturally fits in MaterializeWorkflowDescriptorActor rather than relying on the backends to re-implement it. Re-enable test `""assign default runtime attributes""` in `MaterializeWorkflowDescriptorActorSpec`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1076:181,test,test,181,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1076,1,['test'],['test']
Testability,"The attached wdl and json file have an issue with the second call in the pipeline. It is scattered over the bam files output by the first call (RevertSam). The problem is that shard-5 grabs the wrong bam file to input into the second call (FirstSortSam). All of the other shards grab the correct file except for shard-5 which grabs the bam file that is the input to the RevertSam task (rather than its output). The workaround to fix this was to change the glob command to be more specific: if I change it from *.bam to *.unmapped.bam, then shard-5 is correct. [BrokenShard.wdl.txt](https://github.com/broadinstitute/cromwell/files/432898/BrokenShard.wdl.txt); [testBam.json.txt](https://github.com/broadinstitute/cromwell/files/432900/testBam.json.txt). Note the example files that are attached need access to the Broad file system to run.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1321:661,test,testBam,661,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1321,2,['test'],['testBam']
Testability,"The bug I mentioned this morning came from a change in the EJEA (it didn't get caught by unit tests because they're not being run, but that's another story..); They're still not being run in this PR so this is on hold until we fix this (@kshakir is on it); In the meantime I re-factored a bit the ""Running"" state of the EJEA to be able to understand what's going on and added more tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3373:94,test,tests,94,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3373,2,['test'],['tests']
Testability,"The call metadata key `backendStatus` is currently only generated while a polling for a running call, and right after the call succeeds/fails. 1. It appears that in some cases, (perhaps after restart?), the polling doesn't ever store a `backendStatus` entry with value `success`.; 2. It also appears that a call cache copy of a successful run does not have the `backendStatus` metadata key. TODO- Define acceptance criteria including:; - Should a call cache copy have a `backendStatus` field? ... do we also copy other backend info? What fields do we copy on a cache hit?; - Should call `backendStatus` use a [CRDT](https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type) like the summarized [`cromwell.core.WorkflowState`](https://github.com/broadinstitute/cromwell/blob/9bee537c5f6a9ff4e8597f75b6844c0eaee721cc/core/src/main/scala/cromwell/core/WorkflowState.scala#L9)?. This temporary log was generated as part of work-in-progress on #3658. The `backendStatus` fails to generate the first time, and then the jobs call cache on retry attempts. [missing_backend_status.txt](https://github.com/broadinstitute/cromwell/files/2279800/missing_backend_status.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3998:898,log,log,898,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3998,1,['log'],['log']
Testability,"The call metadata key `commandLine` is written during the creation of the command script. Automated retries of the centaur test end up call caching the original-otherwise-successful call, and the key written during the caching. A call cache hit should probably publish a metadata entry for the command, even though the caching does not execute its own `commandLine`. It should be decided like in #3998 and #4001 if the key `commandLine` should be written for cache hits. https://github.com/broadinstitute/cromwell/blob/246b4fb9cecd02385cdd45a23a1d67fa24b27b8a/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L315-L320. Example log of a failed local centaur run. NOTE: Unlike some of the similar issues, centaur definitely did not restart cromwell during this run.; [commandLine_missing.txt](https://github.com/broadinstitute/cromwell/files/2798625/commandLine_missing.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4590:123,test,test,123,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4590,2,"['log', 'test']","['log', 'test']"
Testability,"The centaur test `custom_mount_point` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n custom_mount_point""; ```. The error:. ```; - should successfully run custom_mount_point *** FAILED *** (2 minutes, 1 second); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/949:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/949,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `jesexercises` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n jesexercises""; ```. The error:. ```; - should successfully run jesexercises *** FAILED *** (4 minutes, 40 seconds); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/951:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/951,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `lots_of_inputs` is failing on JES. Sad! Make it great again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n lots_of_inputs""; ```. The error:. ```; - should successfully run lots_of_inputs *** FAILED *** (53 minutes, 12 seconds); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```. WARNING! It's also taking almost an hour to run...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/956:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/956,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `passingfiles` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n passingfiles""; ```. The error:. ```; - should successfully run passingfiles *** FAILED *** (3 minutes, 30 seconds); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/950:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/950,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `sizeenginefunction` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n sizeenginefunction""; ```. The error:. ```; - should successfully run sizeenginefunction *** FAILED *** (1 minute, 30 seconds); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/952:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/952,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `workspaceenginefunctions` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n workspaceenginefunctions""; ```. The error:. ```; - should successfully run workspaceenginefunctions *** FAILED *** (10 seconds, 11 milliseconds); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/953:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/953,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `write_lines` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n write_lines""; ```. The error:. ```; - should fail during execution write_lines *** FAILED *** (6 minutes, 0 seconds); java.lang.Exception: Unexpected terminal status Succeeded but was waiting for Failed; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/955:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/955,2,['test'],"['test', 'test-only']"
Testability,"The centaur test `write_tsv` is failing on JES. That's very sad. Make it work again! You can run it by checking out centaur and running:. ```; sbt ""test-only * -- -n write_tsv""; ```. The error:. ```; - should successfully run write_tsv *** FAILED *** (2 minutes); java.lang.Exception: Unexpected terminal status Failed but was waiting for Succeeded; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/954:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/954,2,['test'],"['test', 'test-only']"
Testability,The changes in #6668 and #6680 appear to have introduced consistent issues with workflow pickup in the horicromtal tests. This temporarily reverts both of those PRs until BW finds a way to roll this forward. More info in BW-1128.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6697:115,test,tests,115,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6697,1,['test'],['tests']
Testability,"The combination of a separate metadata database and -DLOG_LEVEL=DEBUG is causing an out of memory error when the log output exceeds the max size of a byte array. We are executing Cromwell locally in run mode with a long running workflow (about 24 hrs) that includes several scatter-gather blocks. We switched to a separate metadata database to address the Java heap problem that occurs with the in-memory database. We enabled debug logging to try and troubleshoot an unrelated problem. Most of the log output at the increased level is appears to be from HSQL. After running for about 8 hrs, the following error appears in the output and Cromwell hangs:; ```; Exception in thread ""Exec Stream Pumper"" java.lang.OutOfMemoryError: Required array length 2147483639 + 39 is too large; 	at java.base/jdk.internal.util.ArraysSupport.hugeLength(ArraysSupport.java:649); 	at java.base/jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:642); 	at java.base/java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100); 	at java.base/java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132); 	at org.apache.commons.io.output.ProxyOutputStream.write(ProxyOutputStream.java:92); 	at org.apache.commons.io.output.TeeOutputStream.write(TeeOutputStream.java:68); 	at org.apache.commons.exec.StreamPumper.run(StreamPumper.java:108); 	at java.base/java.lang.Thread.run(Thread.java:1623); ```. We are running Cromwell using Dockstore as a wrapper using the following command:; ```; dockstore workflow launch --local-entry BiobankScrubWorkflow.wdl --json inputs.json > dockstore.log 2>&1 &; ```. At the time the OOME occurs, the size of the dockstore.log file is approx 2147485425 bytes. Based on the ""Saving copy of Cromwell stdout to..."" messages at the end of a successful Cromwell run, it would appear that Cromwell is internally buffering the stdout and stderr streams to save at the end of the run. So when the size of the stdout or stderr exceeds the Java buffer max size, the ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7217:113,log,log,113,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7217,3,['log'],"['log', 'logging']"
Testability,"The complicated retry/ack dance between WA and CA is meant to ensure the proper sequencing of status writes. A more straightforward way to accomplish this would be to use CRDTs as per Kuhn and Allen Reactive Design Patterns. This way we don't have to care about the order of the writes, executions will always end up with the right status no matter which write attempt happens last. A superior sequel to this could use the EXECUTION_INFO table in an event sourcing-like append-only manner to record all statuses and the times at which they were generated within Cromwell. A database view could present an image of all this that looked the same as the EXECUTION table does now, except we'd have conflict-free writes, simplified Cromwell internals, and event data in the DB that ops currently has to scour logs to find. But the first paragraph here is a prerequisite for all this and a good place to start.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/596:804,log,logs,804,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/596,1,['log'],['logs']
Testability,"The configuration option ""final_workflow_outputs_dir"" is misleading. ; What many users commonly want to do is just to copy final results to the folder in case if the workflow succeded. Right now this option copies standard nested-trash like ""MyWorkflow/bc5f9f3e-0daf-4ee3-b0c2-35971af26772/call-hello/execution"" Although this nested structure is useful for the debugging, it is not what we expect as a final result. ; I suggest giving an option for a folder where _only_ final files will be copied without any nested folders and debugging files/logs/whatsoever.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2915:545,log,logs,545,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2915,1,['log'],['logs']
Testability,"The current de-localization logic for PAPIv2 (which goes into `gcp_transfer.sh`) de-localizes ""job"" outputs (the ones declared in the `output {}` section of a task) _first_. The problem with that is if the task command fails, then at least one of the ""job"" outputs never gets created, and so `gcp_transfer.sh` fails permanently (after a few unsuccessful retries to delocalize a ""job"" output), and never gets to de-localize ""helper"" files like `memory_retry_rc` (and `rc`) or `monitoring.log`. As a result, features like `memory-retry` or `monotiring_script` don't work when the task fails (for example, when it runs out of memory!), because they rely on the presence of those files in the GCS execution folder. I propose moving de-localization of ""helper"" files in front of the ""job"" outputs. This way, the ""helper"" files will always be de-localized first, because they're supposed to be always present, unlike declared ""outputs"" of the task, which depend on the success of the task command. JIRA reference: https://broadworkbench.atlassian.net/browse/BA-6112. Thanks!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5274:28,log,logic,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5274,2,['log'],"['log', 'logic']"
Testability,"The current de-localization logic for PAPIv2 (which goes into `gcp_transfer.sh`) de-localizes ""job"" outputs (the ones declared in the `output {}` section of a task) _first_. The problem with that is if the task command fails, then at least one of the ""job"" outputs never gets created, and so `gcp_transfer.sh` fails permanently (after a few unsuccessful retries to delocalize a ""job"" output), and never gets to de-localize ""helper"" files like `memory_retry_rc` (and `rc`) or `monitoring.log`. As a result, features like `memory-retry` or `monotiring_script` don't work when the task fails (for example, when it runs out of memory!), because they rely on the presence of those files in the GCS execution folder. I propose moving de-localization of ""helper"" files in front of the ""job"" outputs. This way, the ""helper"" files will always be de-localized first, because they're supposed to be always present, unlike declared ""outputs"" of the task, which depend on the success of the task command. JIRA reference: https://broadworkbench.atlassian.net/browse/BA-6112. Thanks!. Note: this is a re-submission of #5274",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5283:28,log,logic,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5283,2,['log'],"['log', 'logic']"
Testability,"The current de-localization logic for PAPIv2 (which goes into `gcp_transfer.sh`) de-localizes ""job"" outputs (the ones declared in the `output {}` section of a task) _first_. The problem with that is if the task command fails, then at least one of the ""job"" outputs never gets created, and so `gcp_transfer.sh` fails permanently (after a few unsuccessful retries to delocalize a ""job"" output), and never gets to de-localize ""helper"" files like `memory_retry_rc` (and `rc`) or `monitoring.log`. As a result, features like `memory-retry` or `monotiring_script` don't work when the task fails (for example, when it runs out of memory!), because they rely on the presence of those files in the GCS execution folder. I propose moving de-localization of ""helper"" files in front of the ""job"" outputs. This way, the ""helper"" files will always be de-localized first, because they're supposed to be always present, unlike declared ""outputs"" of the task, which depend on the success of the task command. JIRA reference: https://broadworkbench.atlassian.net/browse/BA-6112. Thanks!. Note: this is a re-submission of #5274 and #5283 (to overcome Travis hurdles..)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5288:28,log,logic,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5288,2,['log'],"['log', 'logic']"
Testability,"The current heartbeat-scanning code is incorrect and will attempt to relaunch workflows an hour after they start. Fortunately there is an error check that prevents workflows from actually being restarted but this situation is still less than ideal since these workflows cycle back to the top of the runnable queue an hour later (running workflows will have submission times earlier than submitted-but-never-started workflows and the sort is by submission time). Also some semi-alarming warning messages are generated for these failed starts. These changes should fix this problem by actually writing workflow heartbeats for running workflows. The current vitality logic is simply ""is this workflow actor not dead"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3493:664,log,logic,664,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3493,1,['log'],['logic']
Testability,"The default user agent `OpenAPI-Generator/30/java` is [not valid](https://stackoverflow.com/a/2601492/818054) and causes Akka to issue warnings. Updated to be compliant and actually tells us its identity and version. Tested by running `./scripts/gen_java_client.sh` and locating the following in the resulting `ApiClient.java`:; ```; private void init() {; verifyingSsl = true;. json = new JSON();. // Set default User-Agent.; setUserAgent(""Cromwell-Java-Client/f9ef79a"");. authentications = new HashMap<String, Authentication>();; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7087:217,Test,Tested,217,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7087,1,['Test'],['Tested']
Testability,"The easiest way to capture and compare metrics from performance runs is to push them into GCP Stackdriver Monitoring. We have an abstraction in the service registry for Instrumentation implementations, see the [StatsDInstrumentationServiceActor].(https://github.com/broadinstitute/cromwell/blob/develop/services/src/main/scala/cromwell/services/instrumentation/impl/statsd/StatsDInstrumentationServiceActor.scala). ## Library; `libraryDependencies += ""com.google.cloud"" % ""google-cloud-monitoring"" % ""1.66.0""`. ## Acceptance Criteria . * Metrics can be labeled from global config settings. Namely: ; * Global config setting for Role (reader, worker, summarizer); * Setting for Host name (e.g. ""gce-cromwell-perfX""); * Setting for stable identifier for the perf test (e.g. ""call-cache-whitelist"").; * Logger can be configured using Service Account from Config.; * Performance runs are visible in GCP Stackdriver graphs with all labels. # Reference. * [Configuring stackdriver agent, useful for service account creation](https://cloud.google.com/monitoring/agent/install-agent); * [v3 monitoring javadoc](https://googleapis.github.io/google-cloud-java/google-cloud-clients/apidocs/com/google/cloud/monitoring/v3/package-summary.html); * [GCP Client Libraries for monitoring](https://cloud.google.com/monitoring/docs/reference/libraries)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4788:761,test,test,761,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4788,2,"['Log', 'test']","['Logger', 'test']"
Testability,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2001:50,mock,mock,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001,3,"['log', 'mock']","['log', 'mock']"
Testability,"The file it was trying to read is gs://broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/9a7a405c-6b14-48cc-87e8-84ee4e7ef074/call-PreBqsrCheckContamination/PreBqsrCheckContamination-stdout.log. The task uses `read_float (stdout)` in its output block. . ```; 2016-06-01 09:47:17,888 cromwell-system-akka.actor.default-dispatcher-16 ERROR - CallActor [UUID(9a7a405c):PreBqsrCheckContamination]: Failing call: Error reading gs://broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/9a7a405c-6b14-48cc-87e... at position 0; cromwell.util.AggregatedException: Error reading gs://broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/9a7a405c-6b14-48cc-87e... at position 0;   at cromwell.util.TryUtil$.sequenceIterable(TryUtil.scala:118) ~[cromwell.jar:0.19];   at cromwell.util.TryUtil$.sequenceMap(TryUtil.scala:130) ~[cromwell.jar:0.19];   at cromwell.engine.backend.jes.JesBackend.postProcess(JesBackend.scala:625) ~[cromwell.jar:0.19];   at cromwell.engine.backend.jes.JesBackend$$anonfun$executionResult$1.apply(JesBackend.scala:664) ~[cromwell.jar:0.19];   at cromwell.engine.backend.jes.JesBackend$$anonfun$executionResult$1.apply(JesBackend.scala:659) ~[cromwell.jar:0.19];   at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[cromwell.jar:0.19];   at scala.concurrent.impl.Future$PromiseCompletingRunnable.run_aroundBody0(Future.scala:24) ~[cromwell.jar:0.19];   at scala.concurrent.impl.Future$PromiseCompletingRunnable$AjcClosure1.run(Future.scala:1) ~[cromwell.jar:0.19];   at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149) ~[cromwell.jar:0.19];   at kamon.scala.instrumentation.FutureInstrumentation$$anonfun$aroundExecution$1.apply(FutureInstrumentation.scala:44) ~[cromwell.jar:0.19];   at kamon.trace.Tracer$.withContext(TracerModule.scala:53) ~[cromwell.jar:0.19];   at kamon.scala.instrumentation.FutureInstrumentation.aroundExecution(FutureInstrumentation.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/928:213,log,log,213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/928,1,['log'],['log']
Testability,"The first step towards having great continuous performance assertions is owning the existing performance testing. This PR brings the performance tests under the auspices of the Cromwell team with the intention that we can thereafter perform, adapt, add to and maintain these processes ourselves. EDIT: See the change as a rendered `png` here: https://github.com/broadinstitute/cromwell/tree/cjl_diy_perf_testing/processes/release_processes#performance-testing",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4996:59,assert,assertions,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4996,4,"['assert', 'test']","['assertions', 'testing', 'tests']"
Testability,"The following Exception occurs using images from AWS ECR registry with the AWS backend; it appears harmless (the workflow proceeds to run just fine on AWS Batch) but is annoying in the logs:; ```; [2018-09-18 12:14:53,68] [warn] BackendPreparationActor_for_27e08249:wf_globtest.globtest:-1:1 [27e08249]: Docker lookup failed; java.lang.Exception: Registry Some(368678863429.dkr.ecr.ap-southeast-2.amazonaws.com) is not supported; at cromwell.engine.workflow.WorkflowDockerLookupActor.cromwell$engine$workflow$WorkflowDockerLookupActor$$handleLookupFailure(WorkflowDockerLookupActor.scala:196); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4171:185,log,logs,185,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4171,1,['log'],['logs']
Testability,"The following config used to work (0.22):; ```; PBS {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int memory_mb = 1000; String pbs_cpu = ""1""; String? pbs_email; String? pbs_queue; String pbs_walltime = ""1:00:00""; """"""; }; }; ```. Note the specification of `pbs_email` and `pbs_queue` as Optional String type. On upgrading to 23 and starting the server, the process hangs and this appears in the logs:; ```; [ERROR] [12/05/2016 13:28:57.994] [cromwell-system-akka.dispatchers.engine-dispatcher-30] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-8def86a5-13b1-4dc4-9cdf-d0ae2eedd7c9/WorkflowInitializationActor-8def86a5-13b1-4dc4-9cdf-d0ae2eedd7c9/PBS] Unsupported config runtime attribute WdlOptionalType(WdlStringType) pbs_email; java.lang.RuntimeException: Unsupported config runtime attribute WdlOptionalType(WdlStringType) pbs_email; 	at cromwell.backend.impl.sfs.config.DeclarationValidation$.fromDeclaration(DeclarationValidation.scala:41); 	at cromwell.backend.impl.sfs.config.DeclarationValidation$$anonfun$fromDeclarations$1.apply(DeclarationValidation.scala:17); 	at cromwell.backend.impl.sfs.config.DeclarationValidation$$anonfun$fromDeclarations$1.apply(DeclarationValidation.scala:17); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at cromwell.backend.impl.sfs.config.DeclarationValidation$.fromDeclarations(DeclarationValida",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1737:474,log,logs,474,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1737,1,['log'],['logs']
Testability,"The following minimal example fails on version 30-4fa75da:; ```; workflow Test {; String? testString. if(true) {; if (defined(testString)) {; call testTask {; input:; testString = testString; }; }; }; }. task testTask {; String? testString. command {; echo ""Hello world""; }. runtime {; docker: ""ubuntu""; }; }; ```; ```; {; ""Test.testString"": ""test""; }; ```; ---; The failures look like this:; ```; ""failures"": [{; ""causedBy"": [{; ""causedBy"": [],; ""message"": ""Unable to build WOM node for If '$if_0': Two or more nodes have the same FullyQualifiedName: ^.testString""; }]; }]; ```; ---; I think it's got something to do with evaluating `defined(testString)` within the inner conditional, because the following two wdl examples, with the same inputs as before, do not fail:; ```; workflow Test {; String? testString. if(true) {; Boolean testStringDefined = defined(testString); if (testStringDefined) {; call testTask {; input:; testString = testString; }; }; }; }. task testTask {; String? testString. command {; echo ""Hello world""; }. runtime {; docker: ""ubuntu""; }; }; ```; ```; workflow Test {; String? testString. if (defined(testString)) {; call testTask {; input:; testString = testString; }; }; }. task testTask {; String? testString. command {; echo ""Hello world""; }. runtime {; docker: ""ubuntu""; }; }; ```; ---; This was discovered during a run of [Arrays.wdl](https://github.com/broadinstitute/dsde-pipelines/blob/develop/genomes_in_the_cloud/arrays/ArraysWf.wdl) with [SimpleInput.json](https://github.com/broadinstitute/dsde-pipelines/blob/develop/genomes_in_the_cloud/arrays/tests/testing_input_files/SimpleInput.json). Let me know if there's any more information you need.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3190:74,Test,Test,74,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3190,32,"['Test', 'test']","['Test', 'test', 'testString', 'testStringDefined', 'testTask', 'tests']"
Testability,"The following path isn't copying into the task correctly:. `gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar`. It gives the following message in the JES logs:. ```; 2017/03/20 15:37:09 I: Docker file /cromwell_root/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar maps to host location /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar.; 2017/03/20 15:37:09 I: Copying gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar to /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; 2017/03/20 15:37:09 I: Running command: sudo gsutil -q -m cp gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; ```. And the `exec.sh` that it generates is:; ```bash; #!/bin/bash; export _JAVA_OPTIONS=-Djava.io.tmpdir=/cromwell_root/tmp; export TMPDIR=/cromwell_root/tmp. (; cd /cromwell_root; if [ false = false ]; \; then java -Xmx1g -jar gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar PadTargets --targets /cromwell_root/broad-dsde-methods/th/target/ice_targets.tsv --output targets.padded.tsv \; --padding 250 --help false --version false --verbosity INFO --QUIET false; \; else touch targets.padded.tsv; \; fi; ); echo $? > /cromwell_root/PadTargets-rc.txt.tmp; (; cd /cromwell_root. ); mv /cromwell_root/PadTargets-rc.txt.tmp /cromwell_root/PadTargets-rc.txt; ```. The WDL that has this issue is:; ```; workflow BrokenFilePath {; File targets = ""gs://broad-dsde-methods/th/target/ice_targets.tsv""; File GATK_protected_jar = ""gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar""; Boolean isWGS = false; Int padding = 250. call PadTargets {; input:; target_file=targets,; gatk_jar=GATK_protected_jar,; isWGS=isWGS,; mem=1,; padding=padding; }; }. task PadTargets {; File target_file; Int paddi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2078:180,log,logs,180,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2078,1,['log'],['logs']
Testability,"The following stack trace appears:. ```; 2017-01-27 11:43:10,369 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 268771d3-0303-45b1-ba0f-9c93c27b6784 failed (during ExecutingWorkflowState): JobStore write failure: Invalid position in SerialClob object set; java.lang.Exception: JobStore write failure: Invalid position in SerialClob object set; 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:239); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:235); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerTh",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1919:876,Log,LoggingFSM,876,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919,2,['Log'],['LoggingFSM']
Testability,"The following workflow failed in cromwell (3da6e34e-a2a1-49fb-8a84-4d62aada9b3d) on production. . ```; {; ""preemptible"": true,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/3da6e34e-a2a1-49fb-8a84-4d62aada9b3d/call-ApplyBQSR/shard-15/ApplyBQSR-15-stdout.log"",; ""backendStatus"": ""Success"",; ""shardIndex"": 15,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""3"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 200 HDD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadinstitute/genomes-in-the-cloud:2.0.0"",; ""cpu"": ""1"",; ""zones"": ""us-central1-c"",; ""memory"": ""3.5 GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_bam"": ""SortAndFixSampleBam.output_bam"",; ""ref_fasta"": ""ref_fasta"",; ""ref_dict"": ""ref_dict"",; ""recalibration_report"": ""GatherBqsrReports.output_bqsr_report"",; ""disk_size"": ""agg_medium_disk"",; ""output_bam_basename"": ""recalibrated_bam_basename"",; ""input_bam_index"": ""SortAndFixSampleBam.output_bam_index"",; ""ref_fasta_index"": ""ref_fasta_index"",; ""sequence_group_interval"": ""subgroup""; },; ""returnCode"": 0,; ""failures"": [{; ""failure"": ""Read timed out"",; ""timestamp"": ""2016-04-23T18:29:53.764Z""; }],; ""jobId"": ""operations/EK2_jqLEKhiCmbzn296gnv4BIJ-ikOmeDSoPcHJvZHVjdGlvblF1ZXVl"",; ""backend"": ""JES"",; ""end"": ""2016-04-23T18:29:54.000Z"",; ""stderr"": ""gs://broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/3da6e34e-a2a1-49fb-8a84-4d62aada9b3d/call-ApplyBQSR/shard-15/ApplyBQSR-15-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/3da6e34e-a2a1-49fb-8a84-4d62aada9b3d/call-ApplyBQSR/shard-15/ApplyBQSR-15.log""; },; ""start"": ""2016-04-23T17:56:02.000Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/738:328,log,log,328,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/738,4,['log'],['log']
Testability,"The following workflow failed in cromwell (4ef40f07-ff52-426b-9610-3c9dc66ec67e) on production. Looking metadata we have no logs for the step that failed. ```; {; ""executionStatus"": ""Failed"",; ""shardIndex"": 5,; ""outputs"": {. },; ""runtimeAttributes"": {. },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_bam"": ""SortAndFixSampleBam.output_bam"",; ""ref_fasta"": ""ref_fasta"",; ""ref_dict"": ""ref_dict"",; ""disk_size"": ""agg_medium_disk"",; ""dbSNP_vcf"": ""dbSNP_vcf"",; ""known_snps_sites_vcf"": ""known_snps_sites_vcf"",; ""dbSNP_vcf_index"": ""dbSNP_vcf_index"",; ""known_indels_sites_vcf_index"": ""known_indels_sites_vcf_index"",; ""input_bam_index"": ""SortAndFixSampleBam.output_bam_index"",; ""recalibration_report_filename"": ""sample_name + \"".recal_data.csv\"""",; ""known_snps_sites_vcf_index"": ""known_snps_sites_vcf_index"",; ""ref_fasta_index"": ""ref_fasta_index"",; ""sequence_group_interval"": ""subgroup"",; ""known_indels_sites_vcf"": ""known_indels_sites_vcf""; },; ""failures"": [{; ""failure"": ""Call failed to initialize: Could not persist runtime attributes: Timeout after 5059ms of waiting for a connection."",; ""timestamp"": ""2016-04-23T09:14:54.651Z""; }],; ""backend"": ""JES"",; ""end"": ""2016-04-23T09:14:56.000Z"",; ""attempt"": 1,; ""executionEvents"": [],; ""start"": ""2016-04-23T09:14:45.000Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/737:124,log,logs,124,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/737,1,['log'],['logs']
Testability,"The following workflow options are currently unsupported: . ```; ""workflowFailureMode"": ""ContinueWhilePossible""; ```. and . ```; ""workflowFailureMode"": ""NoNewCalls""; ```. Ruchi's PR in centaur (PR 69) contains a test for this which should be un-ignored.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1005:212,test,test,212,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1005,1,['test'],['test']
Testability,"The goal here is to gather reliability metrics on Cromwell. The theme here is basic.. the data is the most important artifact. Create something (e.g. a bash or python script) that ; ; - launches N (e.g. 50) workflows; - polls for workflow completion; - upon workflow completion, log workflow id + status (success/failure) and launch a new workflow. If a workflow fails, perhaps also grab the metadata for the workflow and write it out (although we could also query Cromwell for this later). This should run until we kill it. . Then start it up and let it run. Each day investigate workflow failures and generate a findings document which will feed into reliability ticket creation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1822:279,log,log,279,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822,1,['log'],['log']
Testability,"The goal here is to look at the tests in the spec, and determine; 1. does the test assess something valuable; 2. if no, delete it (with an explanation in the PR); 3. if yes, either fix it up so it passes, or reimplement... whatever is more expedient",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1024:32,test,tests,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1024,36,['test'],"['test', 'tests']"
Testability,"The highlight subcommand of cromwell strips out the runtime, param_meta and meta information. . test.wdl:. ```; task runtime_meta {; String memory_mb; String sample_id; String param; String sample_id. command {; java -Xmx${memory_mb}M -jar task.jar -id ${sample_id} -param ${param} -out ${sample_id}.out; }; output {; File results = ""${sample_id}.out""; }; runtime {; docker: ""broadinstitute/baseimg""; }; parameter_meta {; memory_mb: ""Amount of memory to allocate to the JVM""; param: ""Some arbitrary parameter""; sample_id: ""The ID of the sample in format foo_bar_baz""; }; meta {; author: ""Joe Somebody""; email: ""joe@company.org""; }; }. workflow test {; call runtime_meta; }; ```. The command `$ java -jar cromwell-0.15.jar highlight test.wdl console` outputs:. ```; task runtime_meta {; String memory_mb; String sample_id; String param; String sample_id. command {; java -Xmx${memory_mb}M -jar task.jar -id ${sample_id} -param ${param} -out ${sample_id}.out; }; output {; File results = ""${sample_id}.out""; }. workflow test {; call runtime_meta; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/360:96,test,test,96,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/360,4,['test'],['test']
Testability,"The large ""lines changed"" values are inflated by moving one long list of lines around, and adding test cases. Brief explanation:; - Most tests in our CI have metadata expectations. We keep polling the rest API until the metadata we get back matches our expectation.; - However, it's possible for extra values we aren't validating against to trickle in even after we validate it successfully.; - Our tests check ""job manager style metadata requests"" by re-polling the rest API, and making sure what we get back is only the fields we ask for, but otherwise exactly the same as the original poll.; - The primary change here is allowing values to trickle into fields which JM asks for and which weren't included in our original metadata validation. We should no longer be failing tests just because some extra metadata has arrived in a field and Cromwell has correctly returned it to us. Note: Also makes those long obnoxious JSON diffs very slightly less obnoxious.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6467:98,test,test,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6467,4,['test'],"['test', 'tests']"
Testability,"The limit of 300 is unsufficient for most tools, which log some startup messages before starting the actual work. This exceeds 300 characters easily. It results in not being able to see the actual error that crashed the job. This is quite annoying. Especially when the job fails on a CI job and you can't look into the logs on the remote CI server. 3000 is just another arbitrary limit, but hopefully better. EDIT: Example: https://github.com/biowdl/germline-DNA/pull/78/checks?check_run_id=1549055042",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6132:55,log,log,55,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6132,2,['log'],"['log', 'logs']"
Testability,The main thing which differs Horicromtal test logs from others - name of the Docker container in the beginning of each log line. Let's shorten those container names.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5556:41,test,test,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5556,3,"['log', 'test']","['log', 'logs', 'test']"
Testability,The metadata endpoint was previously not applying any business logic to workflow states so it simply returned the last state written to the journal. This adds specific resolution logic similar to that used for workflow summary.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/977:63,log,logic,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/977,2,['log'],['logic']
Testability,"The new `super_massive_array_output` test in centaur has found a problem in metadata reading. It turns out that it generates quite a bit of metadata:. ```; mysql> select count(*) from METADATA_JOURNAL where WORKFLOW_EXECUTION_UUID=""31861832-66ee-45e6-ae10-891f55d176df"";; +----------+; | count(*) |; +----------+; | 2278541 |; +----------+; ```. Luckily, most of it is either inputs or outputs:. ```; mysql> select count(*) from METADATA_JOURNAL where WORKFLOW_EXECUTION_UUID=""31861832-66ee-45e6-ae10-891f55d176df"" and `metadata_key` like ""%output%"" or `metadata_key` like ""%input%"";; +----------+; | count(*) |; +----------+; | 2268240 |; +----------+; ```. The cromwell service is simply unable to muster 2.3 million rows of metadata into JSON in time or in the memory it has. On scaling up the scatter from 500 to 20,000, the metadata rows required will almost certainly scale proportionally. Luckily, this is a read-time problem, Cromwell was able to perform the 500x scatter effortlessly and completed successfully. Only the post-facto attempt to see metadata caused problems.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/972:37,test,test,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/972,1,['test'],['test']
Testability,"The non-detritus parts of CWL conformance test ""Test dynamic initial work dir"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3609:42,test,test,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3609,2,"['Test', 'test']","['Test', 'test']"
Testability,"The only tests remaining in JesBackendSpec were all related to RefreshToken behavior, so just renaming the spec to reflect what it's testing. The tests in this spec check if workflow options are incomplete and that the refresh token is decrypted when retrieving it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1151:9,test,tests,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1151,3,['test'],"['testing', 'tests']"
Testability,The outputs query was changed such that the key the `MetadataBuilderActor` was looking for in the `WorkflowOutputsResponse` handler was never returned. `MetadataBuilderActor` quietly (some might say blithely) fell back to returning empty outputs. . It's alarming that this total breakage was not caught by any tests. But rather than add to the morass that is `CromwellTestKitSpec` I'm going to look at enhancing Centaur to be able to hit the outputs endpoint.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1275:310,test,tests,310,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1275,1,['test'],['tests']
Testability,"The parameters available to config scripts are mostly undocumented. A list can be reverse engineered using the cromwell.examples.conf file, and by forcing the parser to crash - which prints the generated submit wdl script to the log. I could then build this config:. ```; submit-docker = """"""; /usr/bin/env ${job_shell} ${script}; echo ${job_name}; echo ${cwd}; echo ${out}; echo ${err}; echo ${script}; echo ${job_shell}; echo ${docker_cid}; echo ${docker_cwd}; """"""; submit = """"""; /usr/bin/env ${job_shell} ${script}; echo ${job_name}; echo ${cwd}; echo ${out}; echo ${err}; echo ${script}; echo ${job_shell}; """"""; ```. (note while String job_id is available in the submit task, using it causes a crash-loop). . The values of cwd and docker_cwd make sense, cwd (in both scripts) refers to the 'shared file system' path to the cromwell created directory, and docker_cwd strips everything before 'cromwell-executions'. I do not see the necessity for docker_cwd, but fair enough. However 'out', 'err' and 'script' do not follow the pattern. In 'submit' they are sfs paths, but in submit-docker they are docker paths. This kind of inconsistency, combined with lack of documentation makes cromwell extremely frustrating to use.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4212:229,log,log,229,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4212,1,['log'],['log']
Testability,"The parseOutput function https://github.com/broadinstitute/cromwell/blob/aws_backend/supportedBackends/aws/src/main/scala/cromwell/backend/impl/aws/AwsBatchJob.scala#L55, is brittle, but at least it's slow and not idiomatic scala. On the plus side, it is working in simple cases and has a unit test around it. This should be processing output line by line and handle proper MIME multipart format. Speaking of which, we should be outputting to CloudWatch logs in MIME multipart format as well. We're missing the empty line between headers and body in both cases. As an edge case, if a task outputs ""Content-Disposition: attachment; filename=blahblah"" on it's own line anywhere in the body of stdout or stderr, the brittle code here will happily process it as a header. At least it should throw in these circumstances. Bonus points if negative unit tests for invalid logs output are also added. This last second change (d81b3e9) has also apparently has also broken a bunch of Centaur tests, probably due to the hacking it's doing to the script output (https://github.com/broadinstitute/cromwell/blob/aws_backend/supportedBackends/aws/src/main/scala/cromwell/backend/impl/aws/AwsBatchJob.scala#L150). The idea, at least, appears solid.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3748:294,test,test,294,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3748,5,"['log', 'test']","['logs', 'test', 'tests']"
Testability,The performance testing described has not run since May and I disabled the Jenkins job.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6488:16,test,testing,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6488,1,['test'],['testing']
Testability,"The purpose of this PR is to fix issue #4586.; It turns out that Cromwell looks for the ad hoc files in the wrong location while using AWS. These files placed in the S3 bucket, while Cromwell expects them to be in the root execution directory. There were already two PRs from us ([1](https://github.com/broadinstitute/cromwell/pull/5064), [2](https://github.com/broadinstitute/cromwell/pull/5057)) aimed to solve this issue, but these were not the appropriate solutions.; This time we found what part of GCP backend handles these ad hoc files and implemented the same logic on AWS. Also, in order to reduce the amount of duplicate code, we made a small refactoring.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5097:568,log,logic,568,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5097,1,['log'],['logic']
Testability,"The purpose of this PR is to fix issue #4586.; There's already a [PR](https://github.com/broadinstitute/cromwell/pull/5057) that fixes this issue. In the existing [PR](https://github.com/broadinstitute/cromwell/pull/5057) the issue was solved by changing the location of the file search. ; However, we are not sure if this is the best solution, as we are still waiting for your opinion. In case the existing [PR](https://github.com/broadinstitute/cromwell/pull/5057) is not consistent with the logic of the Cromwell, we have added another possible solution. In this PR the files themselves are moved to the place where the Cromwell expects them to be.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5064:494,log,logic,494,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5064,1,['log'],['logic']
Testability,"The purpose of this PR is to fix issue https://github.com/broadinstitute/cromwell/issues/4586.; It turns out that Cromwell looks for the ad hoc files in the wrong location, while using AWS. These files placed in the S3 bucket, while Cromwell expects them to be in the root execution directory.; Therefore, we have changed the place where Cromwell searches that files. We also added an integration test that reproduces the problem.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5057:397,test,test,397,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5057,1,['test'],['test']
Testability,"The purpose of this PR is to make `/metadata` more informative, as described in #4856.; It appears that Cromwell already stores the necessary info in a `stderr.log` file. Therefore, reading the content of that file and printing to the user should be enough.; However, one thing bothers us. In the method `handleExecutionResult` of the trait `StandardAsyncExecutionActor`, the comment says that ; ``` ; Only check stderr size if we need to, otherwise this results in a lot of unnecessary I/O that; may fail due to race conditions on quickly-executing jobs.; ```; But in order to give additional info to the user, we have to read the content of that file. Also, we do not understand, why this is such a big deal. The method `handleExecutionResult` must be called when the execution is finished and that file is written. What race conditions may arise and is it important in this case?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5089:160,log,log,160,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5089,1,['log'],['log']
Testability,"The purpose of this PR is to make `/metadata` more informative, as described in #4856.; It appears that Cromwell already stores the necessary info in a `stderr.log` file. Therefore, reading the content of that file and printing to the user should be enough.; However, one thing bothers us. In the method `handleExecutionResult` of the trait `StandardAsyncExecutionActor`, the comment says that; ```; Only check stderr size if we need to, otherwise this results in a lot of unnecessary I/O that; may fail due to race conditions on quickly-executing jobs.; ```; But in order to give additional info to the user, we have to read the content of that file. Also, we do not understand, why this is such a big deal. The method `handleExecutionResult` must be called when the execution is finished and that file is written. What race conditions may arise and is it important in this case?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5096:160,log,log,160,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5096,1,['log'],['log']
Testability,The reasons for doing this are chiefly:. * We now have centaur which tests much of this for us; * Doing a giant diff of this vs centaur is untenable; * It doesn't test JES; * We plan to reproduce the valuable single workflow runner aspect of this in a travis build (coming soon); * It is flaky as hell,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3419:69,test,tests,69,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3419,2,['test'],"['test', 'tests']"
Testability,The regular expression that verifies docker image is modified to handle optional port. It allows using private and local registries with a port. Test cases covering this situation are provided.; ; **Resolves:** [Support docker images and tags from local registry](https://github.com/broadinstitute/cromwell/issues/2592),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3612:145,Test,Test,145,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3612,1,['Test'],['Test']
Testability,"The release WDL makes some overly bold presumptions with respect to the platform and tools of its environment. `curl` seems pretty universal, but compatible versions of `python` and `jq` might not be. The release WDL's current ""upsert a jq"" logic might be especially troublesome for the wired ethernet set:. ```; which jq || brew install jq; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4869:241,log,logic,241,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4869,1,['log'],['logic']
Testability,"The resolution of #2035 exposed this issue. A centaur issue was mitigated by https://github.com/broadinstitute/centaur/pull/165. A proper fix in the [StandardBackend](https://github.com/broadinstitute/cromwell/blob/335e9838abce1405f0d26fe18c5dba2dfa7ad0f5/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L173) will enable a centaur test to run a task with command:. ```; command {; echo ""hello"" > tmp; }; ```. This regression centaur test should run on all backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2047:367,test,test,367,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2047,2,['test'],['test']
Testability,"The service registry actor internals (message flow, service lookup by name...) should be tested. An empty `ServiceRegistryActorSpec` file already exists for that purpose.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1047:89,test,tested,89,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1047,1,['test'],['tested']
Testability,"The singleton `JobExecutionTokenDispenserActor` seems to crash quite a bit with no cause currently known. The default Akka supervision strategy causes JETD to be restarted, but the reincarnated JETD knows nothing of its predecessors' token allocations. This will cause tokens to be dispensed as if none are outstanding and returned tokens to produce error messages like:. ```; 2019-04-26 19:40:20 [cromwell-system-akka.actor.default-dispatcher-1109] ERROR c.e.w.t.JobExecutionTokenDispenserActor - Job execution token returned from incorrect actor: 202ffd24-a696-4edc-b832-a75f1127fdb4-EngineJobExecutionActor-Gatk3BamToGVCF.PrintReads:1:1; ```. JETD restarts in production can be found by looking for `""log token queue events""` in Kibana where there is no corresponding Cromwell restart.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4908:704,log,log,704,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4908,1,['log'],['log']
Testability,"The spec declares that ECMAscript should be evaluated using ""strict mode"". (http://www.commonwl.org/v1.0/Workflow.html#Expressions). Conformance test of description ""Test InitialWorkDirRequirement ExpressionEngineRequirement.engineConfig feature"" (number 6 as of this writing) imports the library `underscore.js`, which in turn uses a `with` clause that is apparently forbidden in strict mode, at least according to the JDK Nashorn JS Engine. Thus, in order to pass this conformance test, *strict mode is not enabled* currently (1/16/18). So do we enable strict mode according to spec or do we do as people passing the conformance test do and not enable it?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3141:145,test,test,145,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3141,4,"['Test', 'test']","['Test', 'test']"
Testability,"The spec does say Array[?] is allowed so this should work. Tested on: d9b9262 and release 35. Test wdl:; ```wdl; version 1.0. workflow Test {; input {; }. # This fails currently; Array[SomeStruct] array = read_json(""test.json""). # This does work; SomeStructs array2 = read_json(""test2.json""). output {; }; }. struct SomeStruct {; String string; }. struct SomeStructs {; Array[SomeStruct] array; }; ```. test.json; ```json; [{""string"": ""bla""}]; ```. test2.json; ```json; {""array"": [{""string"": ""bla""}]}; ```. error:; ```; [2018-10-09 10:16:43,95] [error] WorkflowManagerActor Workflow 04cdb52a-6e98-4674-b313-f8f4d406ffb2 failed (during MaterializingWorkflowDescriptorState): cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; Failed to process workflow definition 'Test' (reason 1 of 1): Failed to process declaration 'Array[SomeStruct] array = read_json(""test.json"")' (reason 1 of 1): Cannot coerce expression of type 'Object' to 'Array[WomCompositeType {; string -> String ; }]'; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4219:59,Test,Tested,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4219,7,"['Test', 'test']","['Test', 'Tested', 'test']"
Testability,"The test `cromwell.backend.standard.callcaching.StandardFileHashingActorSpec` has a failing test that asserts ""send a timeout to the ioActor the command doesn't hash"". It intermittently fails when run, suggesting a race condition may exist",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2816:4,test,test,4,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2816,3,"['assert', 'test']","['asserts', 'test']"
Testability,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1819:217,test,test,217,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819,2,['test'],['test']
Testability,Then reinstate centaur tests:; - [ ] `sub_workflow_interactions_scatter`; - [ ] `sub_workflow_hello_world`; - [ ] `conditionals.lots_of_testing`; - [ ] `conditionals.subworkflows_in_ifs`; - [ ] `recursive_imports`; - [ ] `missing_import_failure`; - [ ] `sub_workflow_interactions`; - [ ] `public_http_import`; - [ ] `aliased_subworkflows` (addition: make sure WF inputs direct from `input.json` to the aliased subworkflows works); - [ ] `sub_workflow_var_refs`; - [ ] `refresh_token_sub_workflow`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2615:23,test,tests,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2615,1,['test'],['tests']
Testability,"There are at least four spots in `WorkflowExecutionActor` where `==` is invoked on `Scope`s. This is not so good as `==` in Scala does a deep equals, and the `Scope` implementations are case classes with compiler-generated `equals` and `hashCode` implementations. These implementations invoke `equals`/`hashCode` on their constructor fields, including `Task` which contains a lot of hairy stuff including ASTs. This is extra bad in `WorkflowExecutionActor` since these `==`s are invoked synchronously with message processing to update the execution store, and all this computation is effectively single-threaded within a workflow. In practice, for a 20K wide scatter this causes the `WorkflowExecutionActor` to spend upwards of 20 minutes from the time work finishes in (mock) JES to actually succeeding the workflow. I _think_ this might be fixed by chasing down all the spots where `==` is used on `Scope`s and replacing that with call FQN + index + attempt comparisons instead.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1457:771,mock,mock,771,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1457,1,['mock'],['mock']
Testability,There are still some JES dependencies in engine library: ; 1. cromwell/engine/src/test/scala/cromwell/engine/backend/jes/JesRuntimeInfoSpec.scala; 2. cromwell/engine/backend/jes/RunSpec.scala. Those are for testing purposes but it makes us to bring JES during our build process.; These should be moved to JES Backend.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1242:82,test,test,82,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1242,2,['test'],"['test', 'testing']"
Testability,"There is a bug in the owl library where ontology parsing can sometimes fail, causing tests to fail.; See https://github.com/protegeproject/webprotege/issues/298. For now retry parsing a few times. Should fix the `cwl_format***` transient centaur failures.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4210:85,test,tests,85,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4210,1,['test'],['tests']
Testability,"There is a claim of 5–10% faster compiler performance since 2.12.8, which seems worthwhile. Not super scientific, but a build test before and after (with warmed JVM) went down from about 106 to 97 seconds.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5106:126,test,test,126,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5106,1,['test'],['test']
Testability,"There is a need to integrate query API with some of the components I'm developing and while I was testing with different versions of Cromwell (0.24, 0.28 and 0.29) I found out the following:; - 0.24/0.28: when Cromwell is under load and trying to query +100 workflows, Cromwell (Slick) throws stack overflow exception.; - 0.29: seems to work fine but I found that query POST API was returning everything since query params where empty and request body was parsed. This is the fix that worked for me.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2447:98,test,testing,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2447,1,['test'],['testing']
Testability,"There is a potential race condition (which seems to have occurred at least once in our integration test) where Cromwell shuts down after submitting a job to PAPI but before writing the operation ID to the DB.; In this case, upon restart, the job will be submitted a second time, using the same bucket, causing all sorts of issues as 2 jobs are now concurrently reading from and writing to the same files.; [Example bucket](https://console.cloud.google.com/storage/browser/cloud-cromwell-dev/cromwell_execution/travis/dontglobinputs/c10b823f-7f7c-4442-b0d1-a90f0f4e39a7/call-globtask/?project=broad-dsde-cromwell-dev&organizationId=548622027621)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4209:99,test,test,99,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4209,1,['test'],['test']
Testability,"There is a requirement from CCC to be able to identify through logs why localization functionality fallback to an specific strategy. A simple solution would be to log failures in each strategy invoke but I'm open to any other alternative. OPEN: I made use of StrictLogging but if you think I should use a different implementation, just let me know and I will change it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1643:63,log,logs,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1643,2,['log'],"['log', 'logs']"
Testability,"There is evidence in centaur that CWL fully qualified names may not be stored in the database in a way CWL workflows survive a restart. Currently this occurs because the suite-of-restart-tests are running sequentially, while at the same time the suite-of-_non_-restart tests are running. If a restart test accidentally restarts during `three_step_cwl`, one might see the stack trace below. . A/C: Explicit centaur test that restarts in the middle of a CWL workflow. Example stack trace:; ```java; 2017-12-06 04:38:35,249 cromwell-system-akka.dispatchers.engine-dispatcher-29 INFO - WorkflowExecutionActor-20f2c75f-5250-4525-8e30-2330f25dbbec [UUID(20f2c75f)]: Restarting calls: ps:NA:1; 2017-12-06 04:38:35,277 cromwell-system-akka.dispatchers.engine-dispatcher-30 ERROR - JobStoreReadFailure; java.util.NoSuchElementException: key not found: ps-stdOut; 	at scala.collection.immutable.Map$Map1.apply(Map.scala:108); 	at cromwell.core.simpleton.WomValueBuilder$.$anonfun$toWdlValues$5(WomValueBuilder.scala:147); 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:234); 	at scala.collection.immutable.Map$Map1.foreach(Map.scala:120); 	at scala.collection.TraversableLike.map(TraversableLike.scala:234); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:227); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at cromwell.core.simpleton.WomValueBuilder$.toWdlValues(WomValueBuilder.scala:147); 	at cromwell.core.simpleton.WomValueBuilder$.toJobOutputs(WomValueBuilder.scala:133); 	at cromwell.jobstore.SqlJobStore.$anonfun$readJobResult$2(SqlJobStore.scala:74); 	at scala.Option.map(Option.scala:146); 	at cromwell.jobstore.SqlJobStore.$anonfun$readJobResult$1(SqlJobStore.scala:70); 	at scala.util.Success.$anonfun$map$1(Try.scala:251); 	at scala.util.Success.map(Try.scala:209); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:289); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29); 	at scala.concurrent.impl.Promise.$a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3012:187,test,tests,187,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3012,4,['test'],"['test', 'tests']"
Testability,"There is more than ""new shiny"" to this upgrade, it's supposed to be faster and better at IO and those are things we could very much use in our tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5161:143,test,tests,143,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5161,1,['test'],['tests']
Testability,There is nothing in the current Cromwell or Centaur testing protocols that checks the compatibility of our code with the Cloud SQL instances used in GOTC or FireCloud. Currently any incompatibility issues are discovered only during acceptance testing by those customers.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1726:52,test,testing,52,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1726,2,['test'],['testing']
Testability,"There seem to be intermittent Centaur failures on `invalid_runtime_attributes`. I investigated this for a while and found the following:. `WorkflowActor` will always try to run finalization, even if initialization fails. And if initialization fails there will be no initialization data, which means a `.get` on the optional initialization data will throw. Unfortunately this is exactly what `toJes` in `JesBackendLifecycleActorFactory` is doing:. ``` scala; def toJes = genericInitializationData collectFirst { case d: JesBackendInitializationData => d } get; ```. My guess is that this doesn't fail 100% of the time because there's already failure metadata generated (intentionally), and there's a race condition as to which failure event shows up first. If the intentional failure is generated first the test would pass.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1272:806,test,test,806,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1272,1,['test'],['test']
Testability,"There seems to be a failure mode where a workflow fails during centaur JES testing because the JES job can't find the auth JSON:. ```; java.lang.Exception: Task readFromCache.find:NA:1 failed. JES error code 3. Message: unable to load extra config: download from ""gs://cloud-cromwell-dev/cromwell_execution/travis/readFromCache/009bccc8-8e1b-49b3-bc7c-7d15c8255482/009bccc8-8e1b-49b3-bc7c-7d15c8255482_auth.json"" failed: exit status 1: Copying gs://cloud-cromwell-dev/cromwell_execution/travis/readFromCache/009bccc8-8e1b-49b3-bc7c-7d15c8255482/009bccc8-8e1b-49b3-bc7c-7d15c8255482_auth.json...; / [0 files][ 0.0 B/ 133.0 B] ; NotFoundException: 404 gs://cloud-cromwell-dev/cromwell_execution/travis/readFromCache/009bccc8-8e1b-49b3-bc7c-7d15c8255482/009bccc8-8e1b-49b3-bc7c-7d15c8255482_auth.json does not exist.; ```. This happened on the readFromCacheFalse JES centaur test. logs are at `gs://cloud-cromwell-dev/cromwell_execution/travis/centaur_workflow/61e52cbe-50f5-4e45-b8fb-a61c1f902426/call-centaur/cromwell_root/logs/`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2405:75,test,testing,75,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2405,4,"['log', 'test']","['logs', 'test', 'testing']"
Testability,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1995:517,test,tests,517,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995,1,['test'],['tests']
Testability,There was already a test for this in WorkflowExecutionActor. Just added some more metadata verification.; This also attempts to provide a different ServiceRegistryActor for every WorkflowManagerActor being build in the tests (which might help travis slowness ? @mcovarr).,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1060:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1060,2,['test'],"['test', 'tests']"
Testability,There's a Centaur test here that's not quite as exacting as I'd like it to be. Really we should make sure Cromwell never even looks at hits from calls with non-matching prefixes. We can TT how best to have automated assertions for this and other perfy sorts of features.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4104:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4104,2,"['assert', 'test']","['assertions', 'test']"
Testability,"There's an Akka Streams AbruptTerminationException being thrown by some process being shutdown unexpectedly. It's not causing any actual issues for users, however it's presence in the log is distracting. We should make sure that whatever process is throwing this error should be shut down more gracefully. ```[2017-06-05 16:56:14,16] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-6-0-unknown-operation#-1334744097]] terminated abruptly; [ERROR] [06/05/2017 16:56:14.156] [cromwell-system-akka.actor.default-dispatcher-37] [akka.actor.ActorSystemImpl(cromwell-system)] Outgoing request stream error (akka.stream.AbruptTerminationException)```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2340:184,log,log,184,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2340,1,['log'],['log']
Testability,"There's example code in the various `ex[1-7].scala` files that calls directly into the former wdl4s API. In one spot in `ex7.scala` there's a call to the `WdlTask#instantiateCommand` method that is now called only by this example and test code. There are other methods like `WdlTask#inputsFromMap` that are called only by tests. Basically there's tech debt here to clean up after the conversion to WOM, and also to show the correct usage of the WOM API in examples.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2944:234,test,test,234,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2944,2,['test'],"['test', 'tests']"
Testability,"There's some flakiness in the abort tests right now, I believe the reason is we tend to abort too quickly when a workflow is being restarted (for example if we receive an abort message during materialization, we'll assume that it's fine to stop without going further, which is not the case if the workflow is being restarted as jobs might be running and need to be reconnected to)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2820:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2820,1,['test'],['tests']
Testability,"These changes are side effects of my investigation into the `invalidate_bad_caches_jes_no_copy`; test on PAPIv1:. - Don't retry `invalidate_bad_caches_jes_no_copy` because it will never work the second time (even on v2); - Print out any failure metadata we get if we expected `Succeeded` to speed up the debug cycle; - Don't log the ""metadata mismatch"" as errors just because we're waiting for metadata consistency.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4951:97,test,test,97,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4951,2,"['log', 'test']","['log', 'test']"
Testability,These files now get left behind on test runs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/854:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/854,1,['test'],['test']
Testability,These may exist. Or they might not. They ought to. Also add unit tests as appropriate,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1276:65,test,tests,65,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1276,1,['test'],['tests']
Testability,These tests assert ~ 50 different nuances of JS evaluation.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3551:6,test,tests,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3551,2,"['assert', 'test']","['assert', 'tests']"
Testability,These tests have been ported from PAPIv2 backend.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7394:6,test,tests,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7394,1,['test'],['tests']
Testability,These tests have been ported from papi-common. Follows up from #7394.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7410:6,test,tests,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7410,1,['test'],['tests']
Testability,"Things Changed; - added a cromwell-master, which refreshes status metadata. There can be only one.; - created a pool of cromwell_norefresh, which has status refresh turned off, these can scale; - found race condition when multiple cromwells try to create the liquibase lock table at once, configured to have master go first; - updated scripts/compose to handle the above two kinds of cromwell; - increased to 100 batches of 10 workflow each; - changed timeout script to show number of completed workflows and break when done; - delete database at start of run, so the above works; - ran heartbeats in auto-commit mode rather than in a single transaction; - dump out logs at end of run for debugging. Things I'd like to share; - Lock Ordering in SELECT...FOR UPDATE no es bueno, there are great feature in MYSQL v8 (SKIP LOCKED) but we can't use those yet; - how to configure mysql for query logging, and what it shows; - heartbeat batches were never a batched update, just a big transaction; - slick terminology can give give the wrong intuition; - impact of cleaning db before each run; - No deadlocks!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4508:666,log,logs,666,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4508,2,['log'],"['logging', 'logs']"
Testability,Things to make Joel's testing easier...,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1907:22,test,testing,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1907,1,['test'],['testing']
Testability,This PR . - separates out the logic for getting the next workflow to archive and number of workflows left to archive; - adds a config option on how often we want to calculate number of workflows left to archive and schedules it ; - adds a comment for the reason behind naming convention of archived metadata files. Closes https://broadworkbench.atlassian.net/browse/BW-653; Closes https://broadworkbench.atlassian.net/browse/BW-658,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6325:30,log,logic,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6325,1,['log'],['logic']
Testability,"This PR addresses an issue found during testing of the creation of the custom AMI for the AWS backend. The stderr redirect to /dev/null was put in place to eliminate duplicate logging (proxy and task container). However, redirecting stderr to /dev/null also suppresses some docker error messages; most notably instances where the command executable does not exist in the image. It is not possible to segregate the docker error messages from stderr output from the task. This PR errs on the side of potential duplicate logging in order to catch docker-based errors.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4110:40,test,testing,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4110,3,"['log', 'test']","['logging', 'testing']"
Testability,"This PR addresses two bugs from WX-1260:; 1. An `echo` command that included asterisks wasn't wrapped in double quotes, causing an issue in some environments (the user's) but not others (the developer's). Added double quotes so this issue occurs in no environments. 2. The Script Preamble that exports the SAS token environment variable was running in a bash subshell, which means that the environment variable it populated wasn't available in the user's parent shell that is actually executing the task.; - To fix this, I added the option for script preambles to be executed in a bash subshell, or not. My thinking:; - It's generally good hygiene for scripts to run in their own subshell, and I didn't want to change anything about the GCP behavior, so I left that functionality as is.; - I didn't want to write a sas token to file in the subshell for the parent shell to read. Writing tokens to file seems not great for security.; - In order for the environment variable to be visible to the user command, I allowed the TES script to run in the parent shell. This bug revealed a gap in my testing: I had been confirming that my script could acquire the token successfully and correctly, but I hadn't actually tried to use that token inside the user command block. The concept of subshells eluded me at the time. After making this change, I've confirmed that the environment variable is indeed useable in the command block.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7326:1091,test,testing,1091,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7326,1,['test'],['testing']
Testability,"This PR adds `cloudPlatform` to DRS requests so we can prefer to use DRS files located in the same cloud as us. I also did some cleanup:; * `EngineDrsPathResolver` and `DrsLocalizerDrsPathResolver` had converged over time and were identical. Removed them and updated everything to use `DrsPathResolver` directly.; * Azure credential acquisition logic started in DRS, then was copied out to a common `cloudSupport` location. Updated DRS credentials to use the same logic everything else does rather than keeping its own copy.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7381:345,log,logic,345,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7381,2,['log'],['logic']
Testability,"This PR adds a workflow specific option (similar to `monitoring_script`) that will spin up an SSH server in a container on Google Genomics workers. It essentially uses the approach discussed [here](https://github.com/broadinstitute/cromwell/issues/4966#issuecomment-492863979) in an earlier GitHub issue, adding an additional Action that creates a Docker container with Google Genomics Tools'`ssh-server` entrypoint. (See [here]( https://github.com/googlegenomics/pipelines-tools/blob/749315a73e6c3bd5277351e32a365f42198db1ae/pipelines/internal/commands/run/run.go#L759-L766) for Google's implementation.). I also updated the documentation to include the new parameter, and have tested it in our GCP environment with the attached files. There is a corresponding JIRA issue here: https://broadworkbench.atlassian.net/browse/BA-4966. Happy to add or fix up anything on here, just let me know. Thanks!; Adam. `workflow.cwl`; ```; #!/usr/bin/env cwl-runner. cwlVersion: v1.0; class: CommandLineTool; baseCommand: sleep; requirements:; - class: DockerRequirement; dockerPull: ""debian:stretch""; inputs:; time:; type: int; inputBinding:; position: 1; outputs: []; ```. `workflow-inputs.yml`; ```; time: 600; ```. `options.json`; ```; {; ""enable_ssh_access"": true; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5353:679,test,tested,679,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5353,1,['test'],['tested']
Testability,This PR adds support for fetching Github token for user from ECM to support private workflows. Testing; I have tested these changes in Workflows and Cromwell Runner apps in dev by manually editing the config as well as updating the deployment with Cromwell image containing the changes. Screenshot of a successful run of private workflow. ![image](https://github.com/broadinstitute/cromwell/assets/16748522/fcd5bf8f-df9f-42de-a431-639681371c74). Closes ; - https://broadworkbench.atlassian.net/browse/WM-2500; - https://broadworkbench.atlassian.net/browse/WM-2502,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7392:95,Test,Testing,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7392,2,"['Test', 'test']","['Testing', 'tested']"
Testability,This PR adds unit tests for:. - Sam Client; - Engine routes; - Workflow routes; - Collection class; - Submission support class. Closes #4286,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4367:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4367,1,['test'],['tests']
Testability,This PR changes the cromwell.conf of test files to update metadata keys needed for metrics.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4189:37,test,test,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4189,1,['test'],['test']
Testability,This PR cherry picks the below features/functionalities from Cromwell 37 onto 36_hotfix:. - Statsd logging in CromIAM [link](https://github.com/broadinstitute/cromwell/pull/4293); - Call cache copy fail blacklisting [link](https://github.com/broadinstitute/cromwell/pull/4359); - Forbidden failures are recognized/treated as IO Failures [link](https://github.com/broadinstitute/cromwell/pull/4376); - Auto-sizing boot disk in PAPI v2 [link](https://github.com/broadinstitute/cromwell/pull/4472); - Allow for a 'name-for-call-caching-purposes' to override the backend name [link](https://github.com/broadinstitute/cromwell/pull/4490); - User-service-account auth for Pipelines API v2 [link](https://github.com/broadinstitute/cromwell/pull/4566); - Add the Token Queue info to Cromwell log [link](https://github.com/broadinstitute/cromwell/pull/4567); - Labels query performance update [link](https://github.com/broadinstitute/cromwell/pull/4610); - Workflow validation for labels PATCH goes to summary not metadata [link](https://github.com/broadinstitute/cromwell/pull/4617); - CI Updates [link](https://github.com/broadinstitute/cromwell/commit/1a739fc7aabb1c557d96b57944c50ddc2006236a),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4675:99,log,logging,99,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4675,2,['log'],"['log', 'logging']"
Testability,"This PR contains the two files necessary for us to run all Cromwell unit tests on Github Actions. The two YAML files:. **.github/workflows/cromwell_unit_tests.yml**: A workflow that starts 1 VM, sets up cromwell, and then runs all of cromwell's unit tests. **.github/set_up_cromwell_action/action.yml** A reusable/generalized action that executes the steps needed to get Cromwell up-and-running on an ubuntu VM. This is separated from the unit tests so we don't have to duplicate code the next time we want to set up a new Github Action.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6992:73,test,tests,73,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6992,3,['test'],['tests']
Testability,"This PR documents how to use the singularity cache in a way that every image only gets pulled once. It also documents why the `--containall` flag should be used with singularity at all times. Pinging @illusional @TMiguelT and @vsoch as heavy singularity promotors. What do you think of this?. EDIT: I cancelled the tests, as this is documentation and should not influence the Cromwell code. EDIT2: Fixes #5063",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5515:315,test,tests,315,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5515,1,['test'],['tests']
Testability,This PR extracts logging from [log_enhanced_53_hotfix](https://github.com/broadinstitute/cromwell/compare/53_hotfix...log_enhanced_53_hotfix) branch that we want in production. . Closes https://broadworkbench.atlassian.net/browse/BW-413,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5999:17,log,logging,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5999,2,['log'],['logging']
Testability,"This PR introduces two new config settings: `max-scatter-width-per-scatter` and `total-max-jobs-per-root-workflow`. Their purpose is:. - max-scatter-width-per-scatter: Maximum scatter width per scatter node. If a workflow has a scatter width more than this number, Cromwell will fail the workflow; - total-max-jobs-per-root-workflow: Total max. jobs that can be created per root workflow. If workflow tries to create jobs more than this number, Cromwell will fail the workflow by: no longer creating new jobs and let the jobs that have already been started finish, and then fail the workflow. Remaining: Update the default values of these two configurations in `reference.conf` based on threshold determined from Performance Tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4037:725,Test,Tests,725,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4037,1,['Test'],['Tests']
Testability,"This PR is based on a comment in the Slack, and ongoing conversation in [How to configure proxies?](https://broadworkbench.atlassian.net/browse/BA-5695) (which stems from #5006). Essentially, I don't want Cromwell to lookup my container when I provide it as a digest, because if the request fails (because Cromwell isn't respecting the system proxy), I still want call-caching to work. The main reason Cromwell seems to want to lookup the external registry is for the docker size which gets logged to metadata and doesn't seem to be used again. Disabling the digest-lookup doesn't actually stop the digest being looked up and disabled call-caching anyway.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5545:491,log,logged,491,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5545,1,['log'],['logged']
Testability,"This PR removes the agent/sidecar approach for a lighter proxy to be used in conjunction with a patched ecs agent running on the host. It removes the potential race caused by the agent watching the docker stream, as the ecs agent will launch the proxy directly. It resolves #3804 in all cases and allows the Haplotypecaller test to succeed.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4020:324,test,test,324,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4020,1,['test'],['test']
Testability,"This PR removes the option of using the OldeStyle mode. OldeStyle classes remain because it's still too painful to remove them but I've instead deprecated almost anything which isn't currently part of the shadow workflow lifecycle. Note to reviewers: If something is deprecated but you believe it will be useful **in its current form** then I should un-deprecate it. If you believe it will be useful **in a heavily modified form** then I will leave it deprecated. Likewise, if there are un-deprecated things which would match the above criteria, that's a valid comment too!; - [x] Remove tests which are failing",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/774:588,test,tests,588,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/774,1,['test'],['tests']
Testability,"This PR:; * Removes unused code and tests around filesystem token expiration; * Adds more tests of the new filesystem expiration logic; * Changes `AzureFilesystem` such that when its credential has no expiration, it is NEVER expired rather than ALWAYS expired; * Applies the fallback-to-public-creds behavior to native Azure access as well as WSM-mediated access",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7216:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7216,3,"['log', 'test']","['logic', 'tests']"
Testability,This adds 3step to the list of tests run by centaur. Running this test exposed a regression that is fixed in this PR. Unfortunately 1st-workflow is not suitable as it expects a file input but is added here anyway with the potential of running a modified version.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2843:31,test,tests,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2843,2,['test'],"['test', 'tests']"
Testability,"This adds a mechanism of gzipping the list of output files in the AWS backend to avoid the container override size limit. This mechanism was already in place for the inputs, this will simply utilize it for the outputs as well. I haven't tested this yet (hence the draft) and from what I have seen it isn't being tested by centaur either, so I'll still need to have a look at that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5441:237,test,tested,237,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5441,2,['test'],['tested']
Testability,"This adds on to mlc_persistence_rebased (#67):; - Removed a couple dead columns from the DB; - `[WORKFLOW_EXECUTION].[WDL_URI]`; - `[LOCAL_JOB].[COMMAND]`; - Removed the key `callFqn` stored, and unused, in trait `BackendInfo` ; - For command line use, added a default in memory DB initialized with Slick instead of Liquibase; - Tests against hsqldb, using the default db, plus a liquibase initialized test; - Optionally tests against mysql, throwing skip exceptions if it can't connect",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/68:329,Test,Tests,329,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/68,3,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,This affects to HtCondor backend. Given:; Following WDL task. ``` ; task Example {; command {; echo foo;; mkdir testFolder; }; } ; ```. When:; Runs workflow using HtCondor backend. Then:; It creates testFolder in docker host machine. Expected result:; Whole command executed within the container.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1719:112,test,testFolder,112,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1719,2,['test'],['testFolder']
Testability,"This allows for a log file per workflow, as well as the ability to specify the log root. This also allows for both stdout and file-logging simultaneously. This will allow us to have an API endpoint which just reads this the particular file for the workflow and sends it back over HTTP. Cromwell now accepts three Java Properties:; - `LOG_ROOT` - location where log files go (default `.`); - `LOG_MODE` - `server`, `console`, or `server,console` (default `console`); - `LOG_LEVEL` - info, debug, etc (default `info`). **Standard out logging and the main Cromwell log were not changed by this PR**. If the command `sbt -DLOG_MODE=server,console -DLOG_ROOT=log ""run run 3step.wdl 3step.json""` were run three times, we'd see this in the `log` directory:. ```; log; ├── cromwell.2015-10-26.log; ├── workflow.319df202-a60f-47c8-b886-bd4821747c68.log; ├── workflow.36e07688-9e47-45bd-9930-aff58471541e.log; └── workflow.7dad065d-9d7a-4450-91c8-1f7ece184851.log; ```. FAQ:. > Scott, why did you not use the `application.conf` file for things like log root, log mode? Seems obvious, right?. Glad you asked. I tried, for a very long time, to allow for the values to be set in `application.conf`. However, I was unable to get it to work. It seems that by querying for a value in `application.conf`, it causes the `logback.xml` to be read and processed. The logback.xml file does not recognize values in `application.conf` natively, it must have Java Properties set. > What the hell were you thinking with the `WorkflowLogger` class?. I'd be very happy to discuss how to do this better. The problem is this:; - We need to log to the Akka logger whenever we can because the tests depend on it; - Akka logger descends from the root logger (`logback.xml`); - A new logger needs to be created for each workflow.; - Both the Akka logger and the workflow logger descend from the root logger so they both can't propagate messages or we'll get doubles of everything in the root logger.; - Workflow logger is set to not pr",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/254:18,log,log,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/254,13,['log'],"['log', 'logging']"
Testability,This allows to do write directly the output of `womtool womgraph` into a valid `.dot` file without the extra logging from cwl pre-processing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3263:109,log,logging,109,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3263,1,['log'],['logging']
Testability,This almost certainly does not fix the underlying problem. Logging lines are added at the beginning and end of the localization script so we can determine if the hanging occurs in the final `gsutil` of the script or after that.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5340:59,Log,Logging,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5340,1,['Log'],['Logging']
Testability,This application.conf is preventing me from running unit tests locally. It appears to be unnecessary to the remaining test cases so I'm trying out removing it. Let's see what travis says... 🤞,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5144:57,test,tests,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5144,2,['test'],"['test', 'tests']"
Testability,"This branch enables our integration tests to be run on the Github Actions CI platform.; - Added a Github Actions workflow file that will run integration tests ; - Added logic to a few of our bash functions in order to support a Github Actions environment; - 10 integration tests are included in this Github Action. They should all pass consistently. A few more tests remain un-ported from Travis, but they will come in a later branch.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7012:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7012,5,"['log', 'test']","['logic', 'tests']"
Testability,"This bug was caused by ""userland"" (WDL) code throwing an exception where we did not expect it, causing issues for the ""kernel"" (Cromwell). Now we encapsulate possible exceptions in an `ErrorOr` so they can be safely evaluated in the `case Left(f) =>`. As a stylistic point, I changed `WomMap()` to `WomMap.apply()` to make it more obvious that we're really doing a lot of custom stuff and it's not just a regular old constructor. As a bonus, the new code detects all previous stuck-aborting workflows and fails them. After:; ```; INFO - WorkflowManagerActor: Workflow 1432d67e-3e95-40c8-acbd-d42f75040f1b failed (during ExecutingWorkflowState): cromwell.engine.workflow.lifecycle.execution.WdlRuntimeException: Failed to evaluate 'example2' (reason 1 of 1): Evaluating { ""second"": test, ""lowerLayer"": example1 } failed: Cannot construct WomMapType(WomStringType,WomAnyType) with mixed types in map values: [WomString(Hello World), WomObject(Map(first -> WomString(Hello World), number -> WomInteger(2)),WomCompositeType(Map(first -> WomStringType, number -> WomIntegerType),Some(firstLayer)))]; INFO - WorkflowManagerActor: Workflow actor for 1432d67e-3e95-40c8-acbd-d42f75040f1b completed with status 'Failed'. The workflow will be removed from the workflow store.; ```; ```; {; 	""status"": ""Failed"",; 	""id"": ""1432d67e-3e95-40c8-acbd-d42f75040f1b""; }; ```. Before:; ```; ERROR - Cannot construct WomMapType(WomStringType,WomAnyType) with mixed types in map values: [WomString(Hello World), WomObject(Map(first -> WomString(Hello World), number -> WomInteger(2)),WomCompositeType(Map(first -> WomStringType, number -> WomIntegerType),Some(firstLayer)))]; java.lang.UnsupportedOperationException: Cannot construct WomMapType(WomStringType,WomAnyType) with mixed types in map values: [WomString(Hello World), WomObject(Map(first -> WomString(Hello World), number -> WomInteger(2)),WomCompositeType(Map(first -> WomStringType, number -> WomIntegerType),Some(firstLayer)))]; 	at wom.values.WomMap.<init>(Wo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7385:781,test,test,781,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7385,1,['test'],['test']
Testability,"This change adds source code line number information to the WOM structures. It works for WDL, but not for CWL. The overall approach is to add a `LexicalInformation` structure to the top level wom package, and pass this information from Hermes, to the *wdlom*, and then *wom*. Here is a glossary of the changes made for the WDL draft3 case. ; ; `wdl.transforms.base.ast2wdlom.GenericAst`; Definition of the AST we get as a result of running Hermes. This is what a workflow starts as. `LexicalInformation`; Defined in wom.LexicalInformation. `model.draft3.elements.WorkflowDefinitionElement`; The wdlom definition for a workflow. has lexical information structure. `wom.callable.WorkflowDefinition`; The WOM definition for a workflow. Added a lexInfo field. `wdl.transforms.base.ast2wdlom.AstToWorkflowDefinitionElement`; conversion from; `wdl.transforms.base.ast2wdlom.GenericAst` (which is supposed to have been generated from a WDL workflow) to ; `model.draft3.elements.WorkflowDefinitionElement`. `wdl.transforms.base.wdlom2wom.WorkflowDefinitionElementToWomWorkflowDefinition`; conversion from; `model.draft3.elements.WorkflowDefinitionElement`; to; `wom.callable.WorkflowDefinition`. Compilation and testing were done on projects `wdlTransformsBiscayne, wdlTransformsDraft2, wdlTransformsDraft3, wom, womtool`. The top level tests, from the root project, require various initialization files that I don't have access to.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4938:1204,test,testing,1204,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4938,2,['test'],"['testing', 'tests']"
Testability,"This change attempts to fix the deadlock between [starting workflows](https://github.com/broadinstitute/cromwell/blob/develop/database/sql/src/main/scala/cromwell/database/slick/WorkflowStoreSlickDatabase.scala#L65) and [writing heartbeats](https://github.com/broadinstitute/cromwell/blob/develop/database/sql/src/main/scala/cromwell/database/slick/WorkflowStoreSlickDatabase.scala#L75) by removing transaction semantics from the heartbeat write query. This way, the second query no longer locks multiple rows at once. I am using Slick's [`withPinnedSession`](http://slick.lightbend.com/doc/3.2.0/dbio.html#transactions-and-pinned-sessions) to preserve the efficiency gain of having all the queries in a single session. The MySQL query log shows that `transactionally` and `withPinnedSession` both cause queries to execute in a single session, as evidenced by the setting of session variable `autocommit`:. - `database.run(action.transactionally)`:; ```; Query SET autocommit=0; Query update `WORKFLOW_STORE_ENTRY` set `HEARTBEAT_TIMESTAMP` = '2018-08-20 15:43:00.194' where `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = 'c8482924-ef9e-4b3f-930c-ab5f023eeb78'; Query update `WORKFLOW_STORE_ENTRY` set `HEARTBEAT_TIMESTAMP` = '2018-08-20 15:43:00.194' where `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = 'e79a1ee7-dd21-4a55-b52d-03f50031b75e'; Query update `WORKFLOW_STORE_ENTRY` set `HEARTBEAT_TIMESTAMP` = '2018-08-20 15:43:00.194' where `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = 'f0bae536-32c2-4f15-93af-f03515668faf'; Query update `WORKFLOW_STORE_ENTRY` set `HEARTBEAT_TIMESTAMP` = '2018-08-20 15:43:00.194' where `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = '9892d137-40b5-420c-94b4-88481c8ad249'; Query update `WORKFLOW_STORE_ENTRY` set `HEARTBEAT_TIMESTAMP` = '2018-08-20 15:43:00.194' where `WORKFLOW_STORE_ENTRY`.`WORKFLOW_EXECUTION_UUID` = '4447f78f-85d2-4c27-8d2f-ea230ca130c1'; Query update `WORKFLOW_STORE_ENTRY` set `HEARTBEAT_TIMESTAMP` = '2018-08-20 15:43:00.19",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4022:736,log,log,736,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4022,1,['log'],['log']
Testability,This change is because we're seeing in Travis:; ```; The log length has exceeded the limit of 4 MB (this usually means that the test suite is raising the same exception over and over). The job has been terminated; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1727:57,log,log,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1727,2,"['log', 'test']","['log', 'test']"
Testability,"This change is necessary, but not sufficient, for us to pass conformance #135, i.e. packed CWL. We do not yet run #135 because it was added after our pinned commit. Once the other other necessary change, https://github.com/common-workflow-language/common-workflow-language/pull/849, lands I will make a PR to bump the pinned test cases. I should disclose that I am aware of [an old comment](https://github.com/broadinstitute/cromwell/pull/3468#discussion_r178306868) explaining why the conditional is necessary, but conformance passes on the branch and as we say the proof of the pudding is in the eating.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4819:325,test,test,325,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4819,1,['test'],['test']
Testability,"This change makes workflows fail slow instead of fail fast. I'm uncomfortable committing this as-is because I don't fully understand when startRunnableCalls is used - and is it possible to miss the ""are we done (including failures)"" check. This _does_ work when a single call fails as part of a longer workflow. No other cases have been tested. Can anyone give me a quick tour of the control flow in WorkflowActor to make sure I haven't missed anything?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/436:337,test,tested,337,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/436,1,['test'],['tested']
Testability,This changes makes these error messages visible in the separate workflow log file we make available to users.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7220:73,log,log,73,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7220,1,['log'],['log']
Testability,"This code takes a json blob and can do things like keep keys or exclude them. ~Soon it will be able to~ It can add labels where they didn't exist and edit them in-place. ~Note Well: Will be in ""draft"" state until ready to fulfill the requirements stated in the ticket. So far it can:~. - [x] I have a full metadata JSON, but a user is requesting it rendered with includeKey or excludeKey options, return the desired result; - [x] I have a full metadata JSON, but the user is just requesting the outputs or logs (ie the /logs and /outputs endpoints). - [x] I have a full metadata JSON including subworkflows, but wish to exclude subworkflows. - [x] I have a full metadata JSON, but wish to edit the labels field. - [x] I have a full metadata JSON without labels, and wish to attach a labels field",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5086:506,log,logs,506,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5086,2,['log'],['logs']
Testability,"This contains a feature of accepting business events like workflow execution events and other events through the event bus provided by Akka framework and delegate them to centralized logging like Logstash, Fluentd etc for further Monitoring/UI status. There is also a wrapper that encapsulate event bus subscription/publication behaviour.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/400:183,log,logging,183,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/400,2,"['Log', 'log']","['Logstash', 'logging']"
Testability,"This could be painful in WOM, and I don't know whether anyone uses it, or whether we really want to support it... but if we do, reinstate the centaur test:; - [ ] `inter_scatter_dependencies`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2898:150,test,test,150,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2898,1,['test'],['test']
Testability,This does all the Cromwell restructuring required for CROM-6862 but does *not* actually update the `swagger-ui` dependency to >= 4.1.3 as CromIAM has not yet been similarly restructured so that its tests would pass. The Cromwell changes here work fine with the latest `swagger-ui` 4.5.0 ([earlier Travis run](https://app.travis-ci.com/github/broadinstitute/cromwell/builds/246599360) with only related CromIAM tests failing) so upgrading `swagger-ui` should be a [one line change](https://github.com/broadinstitute/cromwell/blob/690f9e7ae77924d99fc4c4a356e1d48ff2b659cd/project/Dependencies.scala#L129) when both Cromwell and CromIAM are ready for that.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6682:198,test,tests,198,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6682,2,['test'],['tests']
Testability,"This does appear to work for 3 step but I'd like to add metadata assertions to the existing Centaur test assuming the PR doesn't get gulled out of existence. TODO. - [x] Set parent workflow into subworkflows; - [x] Fix input path localization; - [x] Make ""please turn on Docker"" an explicit thing in `core`; - [x] Unbreak all the conformance tests that are broken on this branch; - [x] Centaur assertions that the expected Docker images are being used; - [ ] Turn on conformance tests in backends that require Docker; - [ ] Fix globs on JES; - [ ] Fix inputs on JES; - [ ] Return validation failures to the caller",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3040:65,assert,assertions,65,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3040,5,"['assert', 'test']","['assertions', 'test', 'tests']"
Testability,This does assert at least that the value is valid Json. We may consider going to a coproduct in the future but this will get us past parsing failure in the conformance tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2987:10,assert,assert,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2987,2,"['assert', 'test']","['assert', 'tests']"
Testability,"This draft PR is one half (WIP) of migrating the E2E workflow test over to the dsp-reusable-workflows repo. There is a sibling branch on that repo as well that also needs to be developed along side this (same branch name [`WX-1307-port`], but no PR made just yet.). The PR here simply reduces the workflow so that the run-script job simply generates a token and passes all required inputs to the test script workflow housed in the other repo. If this migration moves forward, the sibling branch must either be merged first or merged at the same time as this one to avoid having to worry about branch referencing in the workflow. If migrating is optional, then you can choose to move forward or drop it if other priorities pop up (since the vanilla `WX-1307` branch can be used to cover the e2e testing from the Cromwell repo).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7239:62,test,test,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7239,3,['test'],"['test', 'testing']"
Testability,"This enables tests on a lot of Slick code that's not actually used yet in the New Worlde (nothing writes to the core engine tables since only Recover needs that and Recover hasn't been implemented). So these changes are valuable iff the New Worlde ultimately uses an engine Slick API that looks a lot like that in the Olde Worlde. My guess is that will end up being true, but at this point that's only a guess. Some things here will certainly be nixed (ExecutionEvents) or are likely to be heavily modified (anything caching-related).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/942:13,test,tests,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/942,1,['test'],['tests']
Testability,"This extra logging should not merge into mainline `35_hotfix`; rather I'm using the PR as a mechanism for review and approval. Once approved, I'll work with Mint to deploy `35_hotfix_mint_logging` to their Cromwell. ---. Mint is running `cromwell-35-5f86a05-SNAP.jar`, which refers to [commit `5f86a05`](https://github.com/broadinstitute/cromwell/commit/5f86a055a03bacbe842181783e3ea02bf778d6a6). As far as I can tell, [`5f86a05`](https://github.com/broadinstitute/cromwell/commit/5f86a055a03bacbe842181783e3ea02bf778d6a6) is the same as [`b05e204`](https://github.com/broadinstitute/cromwell/pull/4091/commits/b05e2045eff34b179deb889f6c492dfd3c73b8b7), which is definitely present in `35_hotfix` (navigate to the [commit list](https://github.com/broadinstitute/cromwell/commits/35_hotfix?after=f3267d30aab008b00d04aeb6fdfcc35800b27c5e+34) and hit ""Older"" once). They'll get a few extra commits, but nothing too crazy. I felt this was a more understandable strategy than applying my changes to the (seemingly random) commit they're running.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4407:11,log,logging,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4407,1,['log'],['logging']
Testability,"This folds in the logging improvements that were merged to develop today. This is done on a separate branch/PR to be sure not to stomp on Khalid's work, though hopefully what he's working on is largely orthogonal to this anyway.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/67:18,log,logging,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/67,1,['log'],['logging']
Testability,"This happened after we turned off call caching to work around DSDEEPB-2938 for now and this error popped up in what seems to be post success processing of the task. Logs are in the comment. This was run on gotc-prod against JES-staging. ``` scala; 34108:2016-03-10 22:53:11,258 cromwell-system-akka.actor.default-dispatcher-8 INFO - JES Run [UUID(7721686a):StripBamExtension:8]: Status change from - to Initializing; 50265:2016-03-10 22:55:07,880 cromwell-system-akka.actor.default-dispatcher-27 INFO - JES Run [UUID(7721686a):StripBamExtension:8]: Status change from Initializing to Running; 64201:2016-03-10 22:57:00,293 cromwell-system-akka.actor.default-dispatcher-27 INFO - JES Run [UUID(7721686a):StripBamExtension:8]: Status change from Running to Success. 2016-03-10 22:57:05,450 cromwell-system-akka.actor.default-dispatcher-27 ERROR - CallActor [UUID(7721686a):StripBamExtension:8]: Failing call: 500 Internal Server Error; Internal Error; cromwell.util.AggregatedException: 500 Internal Server Error; Internal Error; at cromwell.util.TryUtil$.sequenceIterable(TryUtil.scala:112) ~[cromwell.jar:0.19]; at cromwell.util.TryUtil$.sequenceMap(TryUtil.scala:124) ~[cromwell.jar:0.19]; at cromwell.engine.backend.jes.JesBackend.postProcess(JesBackend.scala:623) ~[cromwell.jar:0.19]; at cromwell.engine.backend.jes.JesBackend$$anonfun$executionResult$1.apply(JesBackend.scala:662) ~[cromwell.jar:0.19]; at cromwell.engine.backend.jes.JesBackend$$anonfun$executionResult$1.apply(JesBackend.scala:657) ~[cromwell.jar:0.19]; at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[cromwell.jar:0.19]; at scala.concurrent.impl.Future$PromiseCompletingRunnable.run_aroundBody0(Future.scala:24) ~[cromwell.jar:0.19]; at scala.concurrent.impl.Future$PromiseCompletingRunnable$AjcClosure1.run(Future.scala:1) ~[cromwell.jar:0.19]; at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149) ~[cromwell.jar:0.19]; at kamon.scala.instrumentation.FutureIn",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/577:165,Log,Logs,165,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/577,1,['Log'],['Logs']
Testability,"This is a branch off of ks_liquibase_updates (since it has the most updated metadata CallCacheSpec requires to pass). The last few commits are to testing, the remainder is Khalid's hard work. Key changes:; - altered travis cromwell config to enable call-caching; - altered centaur.wdl in a way to checkout specific centaur branch (needs to be undone)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1459:146,test,testing,146,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1459,1,['test'],['testing']
Testability,"This is a bug report that seems to be caused by the `None` type introduced in version 1.1 not being handled properly when assigned to fields in custom structs. Consider the following minimal example:; ```; version development. struct OptionalFiles {; 	File required; 	File? optional; }. workflow TestNone {; 	input {; 		Array[File] letters = [""a.txt"", ""b.txt"", ""c.txt""]; 	}. 	scatter (letter in letters) {; 		OptionalFiles opt = {""required"": letter, ""optional"": None}; 	}. 	output {; 		Array[OptionalFiles] out = opt; 	}; }; ```; This is run in a directory containing empty files `a.txt`, `b.txt`, and `c.txt`. Assigning `None` to the `optional` field in type `OptionalFiles` seems to cause the following unhandled stacktrace:. ```; [2023-11-07 14:51:14,22] [info] MaterializeWorkflowDescriptorActor [4e522458]: Call-to-Backend assignments:; [2023-11-07 14:51:17,38] [error] Cannot construct WomMapType(WomStringType,WomOptionalType(WomAnyType)) with mixed types in map values: [WomOptionalValue(WomSingleFileType,Some(WomSingleFile(c.txt))), WomOptionalValue(WomAnyType,None)]; java.lang.UnsupportedOperationException: Cannot construct WomMapType(WomStringType,WomOptionalType(WomAnyType)) with mixed types in map values: [WomOptionalValue(WomSingleFileType,Some(WomSingleFile(c.txt))), WomOptionalValue(WomAnyType,None)]; 	at wom.values.WomMap.<init>(WomMap.scala:65); 	at wom.values.WomMap$.apply(WomMap.scala:50); 	at wom.values.WomMap$.coerceMap(WomMap.scala:30); 	at wom.values.WomMap$.apply(WomMap.scala:46); 	at wdl.transforms.base.linking.expression.values.LiteralEvaluators$$anon$5.$anonfun$evaluateValue$12(LiteralEvaluators.scala:89); 	at cats.data.Validated.map(Validated.scala:559); 	at wdl.transforms.base.linking.expression.values.LiteralEvaluators$$anon$5.evaluateValue(LiteralEvaluators.scala:86); 	at wdl.transforms.base.linking.expression.values.LiteralEvaluators$$anon$5.evaluateValue(LiteralEvaluators.scala:74); 	at wdl.model.draft3.graph.expression.ValueEvaluator$Ops.evaluateV",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7249:296,Test,TestNone,296,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7249,1,['Test'],['TestNone']
Testability,"This is a duplicate of #5478 but with a less intrusive code change. I bypass all the interfaces by setting a variable using a method. ~~It is gruesome, but much less lines need to be changed. I have some changes that it is slightly nicer. It still involves a `var` but now it is set only for the sfsBackend.~~ EDIT: It now looks quite OK. Only two lines of code in cromwell's general code. The rest of the bug is fixed specifically for the sfsBackend only. Most of the lines changed are the extra tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5495:497,test,tests,497,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5495,1,['test'],['tests']
Testability,This is a duplicate of PR [5104](https://github.com/broadinstitute/cromwell/pull/5104) to run tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5130:94,test,tests,94,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5130,1,['test'],['tests']
Testability,"This is a port of the original pull [request](https://github.com/broadinstitute/wdl4s/pull/256) to the Cromwell tree. I hope this was done correctly, while addressing the review comments. Thanks for pointing out how to use `Try` and `should equal` in the testing framework. There are two outstanding comments, which I am answering here, since I am assuming you want to dismantle the old wdl4s git repository. . 1) TypeEvaluator.scala; *Q: Isn't the caller perhaps trying to ascertain if the expression actually can be coerced to the declared type?* ; A: That could be added as an assert. . 2) WdlSubworkflowWomSpec.scala; *Q: The magic conversion of a single Thing to an Array[Thing] was a feature someone explicitly asked for way back when. I never liked this feature but I'm sure there's WDL out there that expects this to work.*; A: I can see why a user might want that. A side effect is that Array[T] can automatically be coerced to Array[Array[T]]. I ran into a case where Array[String] was coerced into Array[Array[File]]. For example, the workflow below executes under Cromwell v0.29, involving the coercion of `Array[Int]` to `Array[Array[Int?]]`.; ; ```; # Trying out file copy operations; task Num {; Array[Array[Int?]] numbers; command {; }; output {; Array[Array[Int?]] result = numbers; }; }. workflow w {; Array[Int] primes = [2, 3, 5, 7, 11]; call Num { input: numbers = primes }; output {; Num.result; }; }; ```. This raises two issues in my mind: ; 1) There are many ways to convert a single dimensional array into a two dimensional array. Which one does the WDL language specify? ; 2) A user can mistakenly pass an incorrectly typed argument to a task without getting a compiler error.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2807:255,test,testing,255,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2807,2,"['assert', 'test']","['assert', 'testing']"
Testability,"This is a proposal on how to solve the ""insufficient data written"" error that is due to the batch request doing PAPI job creation / polling being too large. The actual limit number is unknown yet (ticket is open with google).; Depending on their answer the solution might look different but this would be one way to fix it.; I tested it with @ruchim's WDL that reproduces this problem and didn't see it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2554:327,test,tested,327,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2554,1,['test'],['tested']
Testability,"This is a prototype backend that communicates via the GA4GH task execution [schema](https://github.com/ga4gh/task-execution-schemas). The reference implementation of the task server that we have been developing against is [here](https://github.com/bmeg/task-execution-server/tree/develop). This is a work in progress and definitely could use some feedback from you with regards to how to better fit this in with your current code base and future development plans. . In the coming weeks we plan to implement unit tests, add documentation and refactor the code based on your recommendations.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1816:513,test,tests,513,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1816,1,['test'],['tests']
Testability,This is a rebase of the changes pushed [here.](https://github.com/broadinstitute/cromwell/pull/6972) to enable the full suite of automated tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6980:139,test,tests,139,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6980,1,['test'],['tests']
Testability,"This is a resubmission by the Joint Genome Institute of https://github.com/broadinstitute/cromwell/pull/6140 to provide an option to disable digest lookups to support private docker registries with private images. We have long running workflows at JGI that use private images which cannot take advantage of Cromwell's call caching feartures - this is blocking a major analysis workflow's migration to Cromwell. Given that JGI also has other Docker images which are non-public, it is only the first of what is likely to be many other production workflows that cannot be used with Cromwell, blocking our institutional goal of consolidating JGI analysis workflows on Cromwell as our workflow engine. . Changelog:. Added config option docker.perform-registry-lookup-if-digest-is-provided with default True (https://github.com/broadinstitute/cromwell/commit/e9965d8f9a385b289f15b23b3fb923ecb8c0ea38); Added logic to DockerConfiguration.scala to sendDockerRequest if performRegistryLookupIfDigestIsProvided is true, else just lookupKvsOrBuildDescriptorAndStop.; Motivation:. Cromwell only allows call-caching when a digest is provided.; The digest registry lookup fails because Cromwell isn't respecting the system proxy.; This disables call-caching, even though we've provided the digest.; From original PR:. This PR is based on a comment in the Slack, and ongoing conversation in How to configure proxies? (which stems from https://github.com/broadinstitute/cromwell/issues/5006). Essentially, I don't want Cromwell to lookup my container when I provide it as a digest, because if the request fails (because Cromwell isn't respecting the system proxy), I still want call-caching to work. The main reason Cromwell seems to want to lookup the external registry is for the docker size which gets logged to metadata and doesn't seem to be used again. Thanks @mcovarr for the initial feedback, and sorry it took so long to action your suggestions. I've moved this to an internal branch so tests run automatical",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7114:902,log,logic,902,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7114,1,['log'],['logic']
Testability,This is a small batch to fix #4857 by implementing recoverAsync in AwsBatchAsyncBackendJobExecutionActor. I have tested this in our environment and it appears to work.; Implementation is based on pattern in other AsyncBackendJobExecutionActor classes,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5216:113,test,tested,113,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5216,1,['test'],['tested']
Testability,"This is a subset of [this PR](https://github.com/broadinstitute/cromwell/pull/7250) to keep us moving forward while we work out an issue with C3 machine types on GCP. . This branch adds cromwell support for the Intel Ice Lake CPU architecture. It is incredibly similar to the Intel Cascade lake CPU, so the code path + testing are pretty tried-n-true.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7252:319,test,testing,319,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7252,1,['test'],['testing']
Testability,This is a temporary stopgap do get our CI up-and-running again while we work through the issues described [here](https://broadinstitute.slack.com/archives/C01KXE68J5D/p1684245171656659). We will leave [WX-1108](https://broadworkbench.atlassian.net/browse/WX-1108?atlOrigin=eyJpIjoiYWViZWIwOWI3ZGY3NDhiNzk2ZTYyNDBlMTZiMTg3OWMiLCJwIjoiaiJ9) open until this PR is reverted and the tests are fixed again. . [WX-1108]: https://broadworkbench.atlassian.net/browse/WX-1108?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7145:378,test,tests,378,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7145,1,['test'],['tests']
Testability,This is all functionality now being tested by Centaur,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1334:36,test,tested,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1334,1,['test'],['tested']
Testability,"This is an attempt to make the separation between (JES / Local / SGE) and File systems (GCS, SharedFilesystem) more obvious. It enables implementation of more Backend / File systems combinations.; For example this wdl runs, on a Local cromwell instance :; Wdl: . ```; task hello {; String addressee; command {; echo ""Hello ${addressee}!""; }; output {; String fileoutput = read_string(stdout()); String salutation = read_string(""gs://tjeandet/wdl_input_public.txt""); }; }. workflow hello {; File infile; String instring = read_string(infile); call hello {input: addressee = instring}; }; ```. Inputs:. ```; {; ""hello.infile"": ""gs://tjeandet/wdl_input_public.txt""; }; ```. It also works with user-defined authentication for GCS (refresh token).; More tests / cleaning is needed before it's reviewable but I wanted to put it out there before Thanksgiving.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/305:749,test,tests,749,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/305,1,['test'],['tests']
Testability,"This is an extension of #1026, that will not fix this specific test. If mocking is not possible that it may require that an actual refresh token is used?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1081:63,test,test,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1081,4,"['mock', 'test']","['mocking', 'test']"
Testability,This is awkward. Some code which looks like it's designed to handle a special case was breaking a common case. Ho Hum... I want to make some JES tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/913:145,test,tests,145,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/913,1,['test'],['tests']
Testability,This is based off of Dan's branch as it needs it to parse array types correctly. I'll rebase on develop when `db_test_4` is merged but targeting it for now so this PR only shows the scatter changes.; There are a few other features missing to get all the scatter conformance tests passing but some of them do already.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3045:274,test,tests,274,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3045,1,['test'],['tests']
Testability,This is built in to akka and is a tunable setting: http://doc.akka.io/docs/akka/current/java/logging.html#Auxiliary_logging_options,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1808:93,log,logging,93,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1808,1,['log'],['logging']
Testability,"This is green and actually does appear to work with a couple of mods to the three-step workflow, one to fake the `ps` for deterministic results, another to fix a bug in the wc command. But this seriously needs refactoring:; 1. Proper concurrency handling for store updates. The current code is awful, the mutable stores are just passed around the various concurrently executing actors. Probably the stores should be behind an actor which the CallActor and WorkflowActor would `ask` for queries or updates, and then compose a `pipeTo` with the `Future` response.; 2. While the potential parallelism of the cgrep and wc calls does appear to work as intended, the current test does not assert this.; 3. The call dependency determination only works for member access expressions and is kind of gross.; 4. The connection of inputs to outputs requires member access expressions and uses logic very much like point 3. Also the way outputs are copied to inputs in the symbol store seems clunky and wasteful; if the input expressions could be truly evaluated at call invocation it wouldn't be necessary to create copies of this data.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/20:669,test,test,669,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/20,3,"['assert', 'log', 'test']","['assert', 'logic', 'test']"
Testability,"This is mainly just moving stuff around, pulling the metadata based routes into a separate trait out of CromwellApiService. . The **meat** of this was peeling out the inner bits of the metadata route logic into separate/composable functions so that I can access them via other incoming work. . Because @mcovarr are actively poking at the same areas of the code I wanted to get this more basic refactor out ASAP and can follow up with further refactoring at some later point when he's done.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4246:200,log,logic,200,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4246,1,['log'],['logic']
Testability,"This is more of an epic and not a right now thing, but I wanted to capture the thought for future consideration. In the author's not-so-humble opinion we log way too much stuff, to the point that logs aren't particularly useful unless you know exactly what you're looking for. We also know that Cromwell's logs are blowing apart loggly and stuff like that. We also manage to log some stuff (e.g. stacktraces) multiple times for one incident. We also have many issues where logs would be super helpful yet all we see is something like ""an error occurred"" without any context. We should sit down as a group and with focus groups of downstream clients (e.g. firecloud, gotc) and go through what we're logging and look for ways to both massively debulk our logs as well as making sure that we're logging the most useful stuff.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/778:154,log,log,154,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/778,9,['log'],"['log', 'logging', 'loggly', 'logs']"
Testability,"This is sent out by the `EmptySubWorkflowStoreActor` but but not waited for by the `SubWorkflowExecutionActor` (which indeed ignores it if it ever receives one). This is awkward because it means we sometimes get ""Message not delivered"" error logs. We should either remove this message entirely or, if it's used by tests, we should only send one out if the receiver is actually waiting for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2185:242,log,logs,242,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2185,2,"['log', 'test']","['logs', 'tests']"
Testability,This is the CromIAM analog to CROM-6862: it does all the restructuring required for [CROM-6870] but does not actually update the swagger-ui dependency to >= 4.1.3 as the Cromwell Swagger code on the target branch has not yet been similarly restructured so that its tests would pass. These changes work fine with the latest swagger-ui 4.5.0 (tested on CaaS dev) so upgrading swagger-ui should be a [one line change](https://github.com/broadinstitute/cromwell/blob/690f9e7ae77924d99fc4c4a356e1d48ff2b659cd/project/Dependencies.scala#L129) when both Cromwell and CromIAM are ready for that. [CROM-6870]: https://broadworkbench.atlassian.net/browse/CROM-6870?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6684:265,test,tests,265,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6684,2,['test'],"['tested', 'tests']"
Testability,"This is the PR I threatened in #2754 that just renames all the `WdlStuff` to `WomStuff`. This shouldn't need a real review. This was 100% IDE driven except for fixing the aftereffects of what appears to have been an IDE bug, and also patching one goofy test.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2755:253,test,test,253,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2755,1,['test'],['test']
Testability,This is the implementation of the rest of the expression evaluator. Most of it is just semantics for how operators behave on their operands and tests of that.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/14:144,test,tests,144,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/14,1,['test'],['tests']
Testability,"This is the logging that would have helped in our recent prod incident, in which runners mysteriously stopped picking up new workflows. It turned out to be because they were running huge numbers of subworkflows, which not clear from either logs or our metrics dashboard.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7246:12,log,logging,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7246,2,['log'],"['logging', 'logs']"
Testability,"This is the test `""assign default runtime attributes""` in `MaterializeWorkflowDescriptorActorSpec`. To avoid having to recompute the defaults separately in every backend, it should be filled in by the MWDA",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1068:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1068,1,['test'],['test']
Testability,This is to keep the rug from moving out from under us as far as CWL conformance tests is concerned.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3250:80,test,tests,80,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3250,1,['test'],['tests']
Testability,"This issue/PR is still work in progress. This PR adds initial support for submitting a WDL workflow using a URL in Server mode. (Initial support for the same in Run mode has been added, but is still not completely functional). Remaining:. - [x] Documentation; - [ ] Support in Run mode (will be part of another PR); - [x] Submitting CWL workflow; - [x] Few more tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3945:362,test,tests,362,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3945,1,['test'],['tests']
Testability,"This may be a known issue, in which case feel free to link this to that. If not... I ran a workflow on the DSDE-Methods server, which is running on P.API, and it failed when a file didn't exist. I was running a CNV pipeline to create a Panel of Normals, and a few of the bams (and their bai's) in the list did not exist. From @LeeTL1220: Cromwell can't localize a file because the file does not exist. As a result, instead of saying it, it does not create workflow root directory, doesn't make any usable log files.; The error message is just the name of the file, rather than to say that this file is missing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2774:505,log,log,505,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2774,1,['log'],['log']
Testability,This meta issue will serve to track Implementation of AwsBatchBackendLifecycleActorFactory. The following (non-test) classes are required:. - [x] AwsBatchBackendLifecycleActorFactory; - [x] AwsBatchInitializationActor; - [x] AwsBatchAsyncBackendJobExecutionActor; - [x] AwsBatchFinalizationActor; - [x] AwsBatchAsyncBackendJobExecutionActor; - [x] AwsBatchConfiguration; - [x] AwsBatchInitializationActorParams; - [x] AwsBatchFinalizationActorParams; - [x] AwsBatchBackendCacheHitCopyingActor; - [x] AwsBatchBackendSingletonActor; - [x] AwsBatchBackendFileHashingActor; - [x] AwsBatchBackendInitializationData,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3426:111,test,test,111,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3426,1,['test'],['test']
Testability,"This might be a noop but once the restarting Cromwell functionality is in place in Centaur, make sure that all the other tests don't fall over whilst Cromwell is off.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2352:121,test,tests,121,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2352,1,['test'],['tests']
Testability,"This might be as simple as updating the ""waited for"" status from `Failed` to `Succeeded`, since we expect workflow success in the metadata. And then reinstate centaur test:; - [ ] `restart_jes_with_recover`; - [ ] `restart_local_with_recover`; - [ ] `restart_tes_without_recover`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2866:167,test,test,167,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2866,1,['test'],['test']
Testability,"This might be related to centaur configuration, which IIRC requires specific, non-default, options for this test. NB fails on both `centaurLocal` and `centaurTest`. Once fixed, reinstate centaur test:; - [x] `invalidate_bad_caches_local`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2905:108,test,test,108,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2905,2,['test'],['test']
Testability,This might help Cromwell endpoints being overwhelmed during centaur testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3801:68,test,testing,68,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3801,1,['test'],['testing']
Testability,This needs refinement but it's rebased on scatter-gather branch and the tests pass.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/156:72,test,tests,72,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/156,1,['test'],['tests']
Testability,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1959:112,log,logs,112,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959,2,"['log', 'test']","['logs', 'testMe']"
Testability,This passes the test from Chris' branch with some limited (though perhaps alarming) changes. However this PR and #5292 have shed light on nearly complete lack of semantic understanding of Cromwell metadata in the Carbonite JSON editing code. i.e. I can imagine valid workflows that would completely break the Carbonited metadata endpoints and will likely require a significant rethink of how the JSON editor works with metadata.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5293:16,test,test,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5293,1,['test'],['test']
Testability,This patch adds the Pact dependencies to be able to write consumer contract tests in Cromwell.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6962:76,test,tests,76,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6962,1,['test'],['tests']
Testability,"This prepares the next PR that will implement support for `ExpressionTool`; The first 2 commits are pure renames.; The 3rd one breaks `CommandLineTool` apart:; Put `InputParameter` and `OutputParameter` in their own file, and make them trait so they can be extended by specific CWL objects (`WorkflowInputParameter`, `CommandInputParameter`, `ExpressionInputParameter`); Some logic in `CommandLineTool` is abstracted into a `Tool` trait (that will then be extended by `ExpressionTool`); TaskDefinition is also being turned into a trait so we can have `CommandTaskDefinition` and (in the next PR) `ExpressionTaskDefinition`. The general idea is to have `ExpressionTool` behave much like a `CommandLineTool`, including in WOM, except the actual work to be done is an expression to be evaluated by the engine (at least for now ?) instead of a command line run by the backend.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3200:376,log,logic,376,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3200,1,['log'],['logic']
Testability,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2048:224,log,logic,224,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048,1,['log'],['logic']
Testability,"This pull request will trigger CI to run for the newly added configuration. . ## What does it do?; Specifically, this test builds and deploys a docker development container with sbt and scala to build cromwell. . ## How is it tested?; The user is instructed to bind the source code with ""sbt assembly"" in the `/code` directory in the container after binding the root of this repository to `/code`. Since we cannot have volumes in circle, we instead just test the added code to the container, also located at `/code`. Since the purpose of this container is to be a clean slate with sbt, scala to build cromwell, the primary test that is important is ensuring that `sbt assembly` runs successfully without a hitch. Any other ""docker"" tests for the actual cromwell (not building it) would not belong here, but with Docker containers meant to deploy cromwell proper. # Where does it deploy?; The container will deploy to the `CONTAINER_NAME` defined in the circle environment settings (or in the circle config at `.circleci/config.yml`. By default, it will be tagged with the commit first 10 characters, and then latest, and you can change this behavior by defining `DOCKER_TAG` either in the config or circle environment (I don't see a reason to do this). Note that deploy is ONLY set up to happen on pushes to master (and you can change this to also be develop, if you choose, or to be both and then to deploy to tags `<branch>-<commit>` or something like that. ## Background; This was first done at the repo [vsoch/cromwell](https://github.com/vsoch/cromwell/pull/1) to test since I can't set it up for the broadinstitute. The (finally) working test is at [https://circleci.com/gh/vsoch/cromwell/11](https://circleci.com/gh/vsoch/cromwell/11). I forgot that I can't have volumes, so it took me many tries to remember this, derp :P . When adding to the repository here, the following additional work will be needed for setup:. - Turn on the repository to build at circleci. The first build, since there ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4015:118,test,test,118,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4015,5,['test'],"['test', 'tested', 'tests']"
Testability,"This removes several classes of confusing `ERROR` log messages that we're receiving under healthy conditions. For example, when calling `checkAccess` in the filesystem provider, which is intended to be used to detect whether a path exists, the library would log an error containing the path string. This resulted in several `ERROR` level log messages every time we created a directory structure.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6982:50,log,log,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6982,3,['log'],['log']
Testability,"This requirement boils down to declaring multiple sources of an input and providing them to a `valueFrom` expression to determine the actual value of the input. We should pass another valueFrom-related test (\#63) when ExpressionTool support is merged, which is imminent.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3204:202,test,test,202,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3204,1,['test'],['test']
Testability,This resolves the below error (which comes up when you run CromIAM):. `error while starting up loggers akka.ConfigurationException: Logger specified in config can't be loaded [akka.event.slf4j.Slf4jLogger] due to [java.lang.ClassNotFoundException: akka.event.slf4j.Slf4jLogger]`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4254:95,log,loggers,95,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4254,2,"['Log', 'log']","['Logger', 'loggers']"
Testability,"This reverts #7143 and adds an older type of Application Insights log integration. The newer version didn't give us enough control over what logs were sent. Specifically, the fact that Cromwell uses a per-workflow logger (to create user-accessible log files) in addition to the root logger resulted in all workflow-related messages being duplicated in Application Insights.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7157:66,log,log,66,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7157,5,['log'],"['log', 'logger', 'logs']"
Testability,"This reverts commit 7bb8d1f102560b625d260db0773f92981b05141d. I misremembered the Centaur `backendsMode` as defaulting to `any` when actually it defaults to `all`. Since there are no Cromwell server instances created in Cromwell CI with both PAPI and GCPBATCH backends, instead of turning on ~90 Centaur tests for GCPBATCH, my changes actually turned *off* ~90 Centaur tests for PAPIv2. 😬 . Current `develop` is green with this revert but I would strongly encourage rebasing any in-flight branches on these changes before merging!. ### Description. <!-- What is the purpose of this change? What should reviewers know? -->. ### Release Notes Confirmation. #### `CHANGELOG.md`; - [ ] I updated `CHANGELOG.md` in this PR; - [x] I assert that this change shouldn't be included in `CHANGELOG.md` because it doesn't impact community users. #### Terra Release Notes; - [ ] I added a suggested release notes entry in this Jira ticket; - [x] I assert that this change doesn't need Jira release notes because it doesn't impact Terra users",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7512:304,test,tests,304,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7512,4,"['assert', 'test']","['assert', 'tests']"
Testability,"This seems like a bug. In my inputs.json, I have an input file that is a URL. Cromwell (v84) fails to pull it when I'm not using ""Local"" as a backend. The only difference between a working case and failed case is the name of the backend in the cromwell config. If you just change the name from ""Local"" to ""MyLocal"", it will fail. For example,. this works; ```; default = ""Local""; providers; {; Local; ```. And this fails; ```; default = ""MyLocal""; providers; {; MyLocal; ```. Command to reproduce error. export _JAVA_OPTIONS=""--add-opens=java.base/sun.security.util=ALL-UNNAMED"". java -Dconfig.file=cromwell_docker.conf \; -Dbackend.providers.Local.config.dockerRoot=$(pwd)/cromwell-executions \; -Dbackend.providers.Local.config.root=$(pwd)/cromwell-executions \; -jar ~/cromwell/cromwell-84.jar run fq_count.wdl -i fq_count.json. Error:; java.lang.IllegalArgumentException: Could not build the path ""https://portal.nersc.gov/cfs/m342/jaws/test_data/sample.fastq"". It may refer to a filesystem not supported by this instance of Cromwell. Supported filesystems are: MacOSXFileSystem. Failures: . Required files; [test-files.zip](https://github.com/broadinstitute/cromwell/files/10387814/test-files.zip)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6977:1113,test,test-files,1113,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6977,2,['test'],['test-files']
Testability,"This seems to be the reason that this centaur test is failing even after #2900:; - [x] `globbingindex`; - [ ] `sub_workflow_var_refs` (in this case, the outputs depend on inputs)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2901:46,test,test,46,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2901,1,['test'],['test']
Testability,"This seems weird but Cromwell shouldn't crash. In Jeff's Wash U testing instance, `docker attach` to the container and then:. ```; java -jar /root/cromwell/target/scala-2.12/cromwell-*-SNAP.jar run \; /root/mgi/cancer-genomics-workflow/unaligned_bam_to_bqsr/downsample_workflow.cwl \; --inputs /root/mgi/inputs_downsample.yml -t CWL; ```; Pretty soon there's this exception:. ```; [2018-02-25 11:18:35,97] [error] WorkflowManagerActor Workflow d35a3d0d-f48d-429f-9120-31cf67bd3e55 failed (during ExecutingWorkflowState): actor name [d35a3d0d-f48d-429f-9120-31cf67bd3e55-EngineJobExecutionActor-downsample:0:1] is not unique!; akka.actor.InvalidActorNameException: actor name [d35a3d0d-f48d-429f-9120-31cf67bd3e55-EngineJobExecutionActor-downsample:0:1] is not unique!; 	at akka.actor.dungeon.ChildrenContainer$NormalChildrenContainer.reserve(ChildrenContainer.scala:129); 	at akka.actor.dungeon.Children.reserveChild(Children.scala:134); 	at akka.actor.dungeon.Children.reserveChild$(Children.scala:132); 	at akka.actor.ActorCell.reserveChild(ActorCell.scala:370); 	at akka.actor.dungeon.Children.makeChild(Children.scala:272); 	at akka.actor.dungeon.Children.actorOf(Children.scala:44); 	at akka.actor.dungeon.Children.actorOf$(Children.scala:43); 	at akka.actor.ActorCell.actorOf(ActorCell.scala:370); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.startEJEA(WorkflowExecutionActor.scala:546); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.$anonfun; ```. There's some odd looking CWL here in `/root/mgi/cancer-genomics-workflow/unaligned_bam_to_bqsr/downsample_workflow.cwl` but conformance test 75 does something very similar and we're passing that so the ""one element array of arrays"" thing may be a red herring. ```; steps:; downsample:; scatter: [bam]; scatterMethod: dotproduct; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3318:64,test,testing,64,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3318,2,['test'],"['test', 'testing']"
Testability,This should also fix transient failures of the `abort a workflow mid run and restart immediately abort.restart_abort_tes` centaur test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4197:130,test,test,130,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4197,1,['test'],['test']
Testability,"This test appears to not deal with eventual consistency correctly and sporadically fails for what looks like bogus reasons:. ```; [info] WorkflowExecutionActorSpec:; [info] WorkflowExecutionActor; [info] - should retry a job 2 times and succeed in the third attempt *** FAILED ***; [info] cromwell.core.package$CromwellFatalException: org.scalatest.exceptions.TestFailedException: ""Running"" was not equal to ""Preempted""; [info] at cromwell.core.retry.Retry$$anonfun$withRetry$3.applyOrElse(Retry.scala:44); [info] at cromwell.core.retry.Retry$$anonfun$withRetry$3.applyOrElse(Retry.scala:43); [info] at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:344); [info] at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:343); [info] at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); [info] at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); [info] at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); [info] at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); [info] at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); [info] at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); [info] ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1311:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1311,2,"['Test', 'test']","['TestFailedException', 'test']"
Testability,This test is verifying an incorrect behavior: https://github.com/broadinstitute/cromwell/blob/develop/wom/src/test/scala/wom/types/WomMapTypeSpec.scala#L77. See also:. - https://github.com/broadinstitute/cromwell/issues/4663 (I think this one is working as expected because we can't coerce a `WomMap` to a `WomString`),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4712:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4712,2,['test'],['test']
Testability,"This test was actually testing the KV service (which already has a test spec) through the ServiceRegistry.; The service registry should have its own tests to assert that the message flow / service lookup is working, but not to test all possible services it knows about. See https://github.com/broadinstitute/cromwell/issues/1047",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1048:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1048,6,"['assert', 'test']","['assert', 'test', 'testing', 'tests']"
Testability,This test was broken recently when MariaDB upgraded to 11.0.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7160:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7160,1,['test'],['test']
Testability,"This test was introduced in 2019 to verify an improved error message when localization fails ([issue](https://github.com/broadinstitute/cromwell/issues/4603), [PR](https://github.com/broadinstitute/cromwell/pull/4718)). It works by localizing an exactly 1 GB file onto a 1 GB disk, that presumably has other stuff on it, and verifying that it fails in the expected way. Unfortunately, the out-of-disk condition seems to trigger behavior in PAPI that causes the task to hang for half an hour!. Since PAPI is on its way out and this error message still seems to be checked in [a different test case](https://github.com/broadinstitute/cromwell/pull/4718/files#diff-a348345a036a680f8e29070f0972f61b09f3f640f26b188504d69d5a7f71b554), I am recommending we just delete the test instead of spending any more time on this. ```; > gcloud beta lifesciences operations describe projects/1005074806481/locations/us-central1/operations/8650136336352694244 --format=json; {; ""done"": true,; ""error"": {; ""code"": 9,; ""message"": ""Execution failed: generic::failed_precondition: while running \""-c /bin/bash /cromwell_root/gcs_localization.sh\"": unexpected exit status 1 was not ignored""; },; ""metadata"": {; ""@type"": ""type.googleapis.com/google.cloud.lifesciences.v2beta.Metadata"",; ""createTime"": ""2023-12-04T20:36:45.056562Z"",; ""endTime"": ""2023-12-04T21:10:43.697318162Z"" # <- WTF!!; }; [...]; ```. ```; Long duration; Warning: arning] Using a password on the command line interface can be insecure.; +--------------------------------------+-----------------+----------------------------+----------------------------+; | name | RUNTIME_MINUTES | start | end |; +--------------------------------------+-----------------+----------------------------+----------------------------+; | localize_file_larger_than_disk_space | 35 | 2023-12-05 01:01:27.836000 | 2023-12-05 01:37:10.789000 |; | lots_of_inputs | 32 | 2023-12-05 01:02:03.292000 | 2023-12-05 01:34:26.490000 |; | draft3_call_cache_capoeira | 27 | 2023-12-05 01:03:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7330:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7330,3,['test'],['test']
Testability,"This updates the 2 caching tests that we have been seeing cache hit failure with so that they do not attempt to read from the cache on their first run. For commentary, see https://broadworkbench.atlassian.net/browse/CROM-6807?focusedCommentId=52973. Proof that the different options are being respected:. 2021-11-04 18:54:05,200 cromwell-system-akka.dispatchers.engine-dispatcher-12 INFO - BT-322 3a536714:cacheBetweenWF.getAverage:-1:1 is eligible for call caching with **read = false** and write = true. 2021-11-04 18:54:55,200 cromwell-system-akka.dispatchers.engine-dispatcher-30 INFO - BT-322 ce702d83:cacheBetweenWF.getAverage:-1:1 is eligible for call caching with **read = true** and write = true",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6557:27,test,tests,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6557,1,['test'],['tests']
Testability,This was a clean cherry pick so i'm just going to wait for the tests to go green,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3163:63,test,tests,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3163,1,['test'],['tests']
Testability,This was bugging me as I write a bunch of CWL Centaur tests but I didn't want to mix this in with substantive changes so here's a PR that's nearly all noise.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3504:54,test,tests,54,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3504,1,['test'],['tests']
Testability,"This was inspired by the surprise discovery of several suspiciously long running PAPI jobs. We can find these by running ad-hoc database queries but I personally like the idea of a more proactive warning being emitted. Sample log message: `2019-04-19 15:26:56,383 cromwell-system-akka.dispatchers.backend-dispatcher-53 WARN - Job with ID 'projects/broad-dsde-cromwell-dev/operations/17748569219664621060' has been running since 2019-04-19T15:26:23.283-04:00 and might not be making progress`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4872:226,log,log,226,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4872,1,['log'],['log']
Testability,"This was previously failing because the foreach was sending 10 events to the `WriteMetadataActor`. Unfortunately the actor was waiting for the events to be strictly greater than 10 before triggering the write... it occasionally worked because we weren't replacing the actor between tests and the leftover state was giving us a push over the top. It was also possible for the `WriteMetadataActor` to write the entries to its database and revert back to `WaitingToWrite` before our code was testing what state it was in. So, I've fixed this test up by removing the inter-test dependency and precisely controlling when the actor completes its ""database write"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2195:282,test,tests,282,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2195,4,['test'],"['test', 'testing', 'tests']"
Testability,This was requested by @patmagee - I agree that it's a good idea. Find a way to detect if a liquibase migration is pending if Cromwell starts. Add a config option (defaulting to a safe mode) such that if this option is enabled and a liquibase migration is required that the process will exit with an error message stating:. - That a migration is necessary; - Encouragement to the user to backup their database and/or do further testing if in a production environment; - Describe how to override (including via command line) the setting to allow Cromwell to start properly.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2429:427,test,testing,427,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2429,1,['test'],['testing']
Testability,"This wasn't as simple as just a one line ""add singularity to the list"" of cacheable attributes, because `singularity` is a user-generated attribute specified in the Config backend's configuration. So the change ended up being:. * Allow additional config allowing users to specify which runtime attributes are call-cacheable; * Wiring that through the runtime attribute validators to include the correct call-cacheable-ness; * Unit and centaur tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5543:443,test,tests,443,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5543,1,['test'],['tests']
Testability,This will allow us to make other changes to Cromwell and have the tests pass while we figure out what's wrong with SSH access.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6728:66,test,tests,66,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6728,1,['test'],['tests']
Testability,This will be a precursor to then having tickets that un-ignore those tests (either by fixing or removing),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1149:69,test,tests,69,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1149,1,['test'],['tests']
Testability,This works on Kristian's testing branch without Thibault's #873 fixes and will also be useful for the forthcoming Query API work.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/874:25,test,testing,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/874,1,['test'],['testing']
Testability,"Thread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:16597,test,tests,16597,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,1,['test'],['tests']
Testability,"Three tests are still ignored-- not sure if they are worth keeping. Small changes to the structure of the case classes of KeyValueService. Hoping to reduce having to pass around scopes just to gather basic call information like fqn, index and attempt.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1278:6,test,tests,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1278,1,['test'],['tests']
Testability,"Ticket: https://broadworkbench.atlassian.net/browse/ID-1207. We want to know where DRS Requests are coming from. So, let DRSHub know!. ### Release Notes Confirmation. #### `CHANGELOG.md`; - [ ] I updated `CHANGELOG.md` in this PR; - [ ] I assert that this change shouldn't be included in `CHANGELOG.md` because it doesn't impact community users. #### Terra Release Notes; - [ ] I added a suggested release notes entry in this Jira ticket; - [x] I assert that this change doesn't need Jira release notes because it doesn't impact Terra users",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7461:239,assert,assert,239,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7461,2,['assert'],['assert']
Testability,To address this problem seen in sbt tests:; ```; LargeScaleJobExecutionTokenDispenserActorSpec:; JobExecutionTokenDispenserActor with concurrent demands; [...]; - should be able to restrain two workflows in the same hog group to a total of half of the total token pool *** FAILED *** (17 milliseconds); akka.actor.InvalidActorNameException: actor name [multipleTokenUsingActor2] is not unique!; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4383:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4383,1,['test'],['tests']
Testability,"To avoid lossy conversion during Centaur tests metadata assertions for a shard that has multiple attempts, this PR adds attempt number in the flattened metadata structure:. ```; <workflow_name>.<task_name>.<shard_index>.<attempt_number>.<metadata_key>; ```. Closes https://broadworkbench.atlassian.net/browse/BW-482",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6158:41,test,tests,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6158,2,"['assert', 'test']","['assertions', 'tests']"
Testability,"To fix the ""unmatched case"" error in #4651 :. * Make states a strict ADT rather than string-based; * Hopefully made the `pollStatus` logic a little easier to follow. Closes #4651",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4654:133,log,logic,133,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4654,1,['log'],['logic']
Testability,"To recreate:; - Make a submission via swagger with a WDL and an `inputs.json`; - Look to the logs. Lo:; ```; The 'wdlDependencies' parameter name has been deprecated in favor of 'workflowDependencies'.; Support for 'wdlDependencies' will be removed from future versions of Cromwell.; Please switch to using 'workflowDependencies' in future submissions.; ```. I didn't specify any dependencies, and swagger shouldn't be submitting them as `wdlDependencies` anyway. Maybe our REST deprecation is triggering too eagerly?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2854:93,log,logs,93,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2854,1,['log'],['logs']
Testability,"Today -- there seems to be a lot of failures on both the v1 and v2 backend related to the caching tests. Many call caching tests are structured in a way that a workflow runs one time --and second run of the workflow caches to the results of the first run. The issue here is that if Cromwell restarts during the first run --then its possible the first workflow caches to itself, which causes the test to fail. . AC: To prevent this from happening, we should change test expectations such that the first time a call caching test is run --read_from_cache is set to false so regardless of when the Cromwell restart occurs, the jobs of the first workflow aren't call cached but forced to run.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4046:98,test,tests,98,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4046,5,['test'],"['test', 'tests']"
Testability,"Today when using Cromwell to copy cache hits to an RP enabled bucket (as the execution directory), there are issues where the the copying of outputs times out:. ```; ""hitFailures"":[{""e831b105-209d-44a4-b550-92ac77c2076e:test.hello:-1"":[{""message"":""The Cache hit copying actor timed out waiting for a response to copy gs://fc-ec2179fb-ab57-4867-b548-b6728060cdef/92241ad8-4f27-4112-826c-8c5230d9a2e0/test/e831b105-209d-44a4-b550-92ac77c2076e/call-hello/stdout to gs://fc-ec2179fb-ab57-4867-b548-b6728060cdef/9d516b3c-5b7f-4241-9929-99b54ef7e7e1/test/102e99b1-26b2-4bf4-80ec-fcc02c32136d/call-hello/stdout"",""causedBy"":[]}]; ```. AC: For the functions used to copy cached outputs, incorporate retry logic when the action fails due to a `400 UserProjectMissing error`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4771:220,test,test,220,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4771,4,"['log', 'test']","['logic', 'test']"
Testability,"Today, since Cromwell utilizes the backend name as a part of the caching algorithm, when a user has both PAPI v1 and the PAPI v2 backends enabled -- the jobs between them cannot be cached to each other. It's quite possible that users will want both backends enabled, or be able to rename their backends without losing caching history. . AC: To accomodate for both of those cases, Cromwell will need to drop backend name from its caching algorithm. Testing Criteria: . - [ ] - Ensure that when both v1 & v2 backends are enabled, outputs from the v1 backend are cacheable from the v2 backend.; - [ ] - Ensure that renaming a backend from ""JES"" to ""PAPIv1"" doesn't break call caching",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4027:448,Test,Testing,448,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4027,1,['Test'],['Testing']
Testability,Token Queue Logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4567:12,Log,Logging,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4567,1,['Log'],['Logging']
Testability,Token logging language tweak [no JIRA],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5404:6,log,logging,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5404,1,['log'],['logging']
Testability,Token logging sanity log,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4644:6,log,logging,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4644,2,['log'],"['log', 'logging']"
Testability,Travis Call Caching -- unexpected caching between tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4058:50,test,tests,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4058,1,['test'],['tests']
Testability,Travis passing with broken (non-compiling) tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/888:43,test,tests,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/888,1,['test'],['tests']
Testability,"Travis smoke test, please ignore for now 🙏",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6665:13,test,test,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6665,1,['test'],['test']
Testability,Trusty Tahr Tames Testy Travis?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/319:18,Test,Testy,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/319,1,['Test'],['Testy']
Testability,"Try it yourself, if you think you're fast enough (you probably are):. - Run a simple workflow with a few small tasks; - Watch like a hawk for a ""workflow done"" in the Cromwell log; - Quickly stop the server; - On restart, presto chango, the `executionStatus` remains `Running` forever!; - ...; - Weep?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2445:176,log,log,176,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2445,1,['log'],['log']
Testability,Try to actually filter out the flakey MainSpec tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1145:47,test,tests,47,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1145,1,['test'],['tests']
Testability,"Trying to print stdout and stderr to files so that I can see what my command is doing. I broke it down to the simple example shown in the docs. . ```task echo {; command <<< ; echo ""hello world"" ; echo ""another world""; >&2 echo ""hello world""; >>>; output {; File message = stdout(); File message2 = stderr(); }; }; ```. Both stdout and stderr return empty. My goal is to capture all stdout and stderr from whatever is in the command section. . On real workflows, I also get a bunch of nonsense in the stdout stderr logs. If my run fails I want to know what caused it. Using cromwell version 72. Any help?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6686:515,log,logs,515,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6686,1,['log'],['logs']
Testability,"Trying to read an object that has the same name as a variable causes Cromwell to abort not just the workflow, but the entire Cromwell instance; WDL file:; ```; task TestTask {; 	; 	command {; 		echo ""Hello World!"" > hello_world.txt; 	}. 	output {; 		File exists = ""hello_world.txt""; 	}. 	runtime {; 		docker: will_fail.docker; 		memory: will_fail.memory; 		disks: ""local-disk "" + will_fail.small_disk + "" HDD""; 	}; }. workflow KillsCromwell {; 	String test_string. # This here kills Cromwell; 	Object runtime_params = read_object(runtime_params). 	call TestTask ; }; ```. Inputs File:; ```; {; 	""KillsCromwell.test_string"": ""This is a string"",; 	""KillsCromwell.runtime_params"": {; 		""genomes_cloud_image"": ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282"",; 		""small_disk"": 100,; 		""medium_disk"": 200,; 		""large_disk"": 300,; 		""x_large_disk"": 400,; 		""preemptible_tries"": 3; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1946:165,Test,TestTask,165,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1946,2,['Test'],['TestTask']
Testability,Turn back on the sample wdl integration test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2951:40,test,test,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2951,1,['test'],['test']
Testability,Turn strict back as conformance tests were fixed,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3221:32,test,tests,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3221,1,['test'],['tests']
Testability,Turned on mysql testing on travis.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/74:16,test,testing,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/74,1,['test'],['testing']
Testability,"Turns out the batch size for write metadata was ignored (we were looking at the wrong config path); Also turns out it doesn't matter that much when load is very high.; That is mostly because when we flush the event queue, we flush all of it, not just `dbBatchSize` of it.; This added to the fact that the flushes are controlled by messages we sent to `self` that can get lost in an ocean of metadata event messages, we can end up flushing queues of several million events at once, in one transaction, which can take quite some time for slick to do. The more time it takes, the more events we accumulate before the next flush, so the next flush takes even more time etc... ; I'll have a follow up PR to re-factor this a bit, with stats to be able to compare. TODO:; - [x] Add some tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3294:780,test,tests,780,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3294,1,['test'],['tests']
Testability,Tweaks to test timeouts.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4296:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4296,1,['test'],['test']
Testability,"Two new centaur tests (test types actually):. * Simulates the transition from PAPI v1 to PAPI v2. Start with an FC-like config where PAPI v1 is the default `Papi` backend and PAPI v2 is available in a `Papiv2` backend. Launch a workflow into this system with two sequential calls. Shut down Cromwell once the second call starts. Tweak the Cromwell config to add `name-for-call-caching-purposes = ""Papi""` to the `Papiv2` backend. Bring Cromwell back up and let the previously-running workflow finish. Then launch a second workflow identical to the first except that its options request `{ ""backend"": ""Papiv2""}`. Let this workflow finish and confirm it call cached both calls from the first workflow despite running on different versions of PAPI. * Simulates the new steady-state after the v2 transition when new workflows are submitted with `{""backend"": ""Papiv2""}`. Run a workflow, shut down Cromwell in the middle of its execution, then bring Cromwell back up. Confirm this workflow completes successfully. Launch a second copy of the workflow also requesting `{""backend"": ""Papiv2""}` and confirm it completes successfully and caches to all the calls of the first run and that both executed on PAPI v2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4490:16,test,tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4490,2,['test'],"['test', 'tests']"
Testability,"Two tests in the SingleWorkflowRunnerActorSpec 0.19_hotfix have been ignored because the Workflows don't stop running when the test ends. The reason they are ignored is because they break the WorkflowManagerActorSpec tests when workflow restarts are being tested, the WFMA expects 0 wofklows to be restartable but finds that singleWorkflowRunnerActor workflows show up as being ""restartable"" since they never completed initially. The test behaviors that have been ignored are: ; ""successfully terminate the system on an exception; ""successfully warn about unexpected output"". AC: They both require cleanup so that the workflows end up with a terminal state when the test spec end.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/967:4,test,tests,4,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/967,6,['test'],"['test', 'tested', 'tests']"
Testability,"UBERCULOSIS/7570b5dc-4714-48a7-96b2-9c62245e3618/call-get_organism_names/shard-885"",; ""Mode"": """",; ""RW"": true,; ""Propagation"": ""rprivate""; }; ],; ""Config"": {; ""Hostname"": ""cf6f4828adc6"",; ""Domainname"": """",; ""User"": """",; ""AttachStdin"": true,; ""AttachStdout"": true,; ""AttachStderr"": true,; ""Tty"": false,; ""OpenStdin"": true,; ""StdinOnce"": true,; ""Env"": [; ""PATH=/root/miniconda3/bin:/bin:/root/edirect/:/bin/sratoolkit.3.0.0-ubuntu64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"",; ""PERL5LIB=/perlstuff:""; ],; ""Cmd"": [; ""/bark-bark/IS_THIS_TUBERCULOSIS/7570b5dc-4714-48a7-96b2-9c62245e3618/call-get_organism_names/shard-885/execution/script""; ],; ""Image"": ""ashedpotatoes/sranwrp@sha256:15a8875a024231bd0bf3b5cfc0c4fd4cdb654e9475cd44b2ca251c75dae7fee8"",; ""Volumes"": null,; ""WorkingDir"": """",; ""Entrypoint"": [; ""/bin/bash""; ],; ""OnBuild"": null,; ""Labels"": {}; },; ""NetworkSettings"": {; ""Bridge"": """",; ""SandboxID"": """",; ""HairpinMode"": false,; ""LinkLocalIPv6Address"": """",; ""LinkLocalIPv6PrefixLen"": 0,; ""Ports"": {},; ""SandboxKey"": """",; ""SecondaryIPAddresses"": null,; ""SecondaryIPv6Addresses"": null,; ""EndpointID"": """",; ""Gateway"": """",; ""GlobalIPv6Address"": """",; ""GlobalIPv6PrefixLen"": 0,; ""IPAddress"": """",; ""IPPrefixLen"": 0,; ""IPv6Gateway"": """",; ""MacAddress"": """",; ""Networks"": {; ""bridge"": {; ""IPAMConfig"": null,; ""Links"": null,; ""Aliases"": null,; ""NetworkID"": """",; ""EndpointID"": """",; ""Gateway"": """",; ""IPAddress"": """",; ""IPPrefixLen"": 0,; ""IPv6Gateway"": """",; ""GlobalIPv6Address"": """",; ""GlobalIPv6PrefixLen"": 0,; ""MacAddress"": """",; ""DriverOpts"": null; }; }; }; }; ]; ```. ### Terminal output (first couple shards trimmed of course); ```; [2022-11-08 21:36:56,76] [info] BackgroundConfigAsyncJobExecutionActor [7570b5dcIS_THIS_TUBERCULOSIS.get_organism_names:981:1]: executing: docker run \; --rm -i \; \; --entrypoint /bin/bash \; -v /private/var/folders/vp/327wktbj3wqb65q3v3n8qpxc0000gn/T/1667969838761-0/dockstore-is-cool/IS_THIS_TUBERCULOSIS/7570b5dc-4714-48a7-96b2-9c62245e3618/call-get",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6946:7442,Sandbox,SandboxID,7442,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6946,2,['Sandbox'],"['SandboxID', 'SandboxKey']"
Testability,Un-disable JDR tests WA-382,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5938:15,test,tests,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5938,1,['test'],['tests']
Testability,Uncomment the tests in `WdlNestedConditionalWomSpec` and remove the commented `throwaway` declarations in `nested_lookups.wdl`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2850:14,test,tests,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2850,1,['test'],['tests']
Testability,"Under load Cromwell seems to have a large number of engine dispatcher threads blocked with stack traces like the following:. ```; ""cromwell-system-akka.dispatchers.engine-dispatcher-107"" #455 prio=5 os_prio=0 tid=0x00007fa5b8075000 nid=0x4598 waiting for monitor entry [0x00007fa7999d8000]; java.lang.Thread.State: BLOCKED (on object monitor); at cromwell.core.logging.WorkflowLogger$.makeFileLogger(WorkflowLogger.scala:26); - waiting to lock <0x00000000ca4a8b40> (a cromwell.core.logging.WorkflowLogger$); at cromwell.core.logging.WorkflowLogger.<init>(WorkflowLogger.scala:108); at cromwell.core.logging.WorkflowLogging$class.workflowLogger(WorkflowLogger.scala:21); at cromwell.engine.workflow.WorkflowActor.workflowLogger$lzycompute(WorkflowActor.scala:151); - locked <0x00000000eceaf5f0> (a cromwell.engine.workflow.WorkflowActor); at cromwell.engine.workflow.WorkflowActor.workflowLogger(WorkflowActor.scala:151); at cromwell.engine.workflow.WorkflowActor$$anonfun$8.applyOrElse(WorkflowActor.scala:262); at cromwell.engine.workflow.WorkflowActor$$anonfun$8.applyOrElse(WorkflowActor.scala:260); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$$anonfun$handleTransition$1.apply(FSM.scala:606); at akka.actor.FSM$$anonfun$handleTransition$1.apply(FSM.scala:606); at scala.collection.immutable.List.foreach(List.scala:381); at akka.actor.FSM$class.handleTransition(FSM.scala:606); at akka.actor.FSM$class.makeTransition(FSM.scala:688); at cromwell.engine.workflow.WorkflowActor.makeTransition(WorkflowActor.scala:151); at akka.actor.FSM$class.applyState(FSM.scala:673); at cromwell.engine.workflow.WorkflowActor.applyState(WorkflowActor.scala:151); at akka.actor.FSM$class.processEvent(FSM.scala:668); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1445:361,log,logging,361,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1445,4,['log'],['logging']
Testability,Under test as: https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2-alpha1/773/console. EDIT: Timeout needed to be reset to 10h. Retrying as:; * PAPIv2-alpha: https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2-alpha1/774/console; * PAPIv2-beta: https://gotc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-cron-papiv2-beta/165/console,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5924:6,test,test,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5924,1,['test'],['test']
Testability,Unignore JesInitializationActorSpec: log a warning message when there are unsupported runtime attributes,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1674:37,log,log,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1674,1,['log'],['log']
Testability,Unit Test CromIAM,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4286:5,Test,Test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4286,1,['Test'],['Test']
Testability,Unit testing for performance comparison python scripts [BA-6392],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5502:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5502,1,['test'],['testing']
Testability,Unit tests had new issues arise from adding mounts and new metadata. Fixed tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7186:5,test,tests,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7186,2,['test'],['tests']
Testability,Unitized the tests since it appears the coercions under test happen during the building of the executables so running the workflow isn't really necessary.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4529:13,test,tests,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4529,2,['test'],"['test', 'tests']"
Testability,"Unlike WDL, our CWL test set relies on input files already existing (especially the one-step CLTs).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3020:20,test,test,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3020,1,['test'],['test']
Testability,Unreliable test: memory_units [BT-271],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6335:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6335,1,['test'],['test']
Testability,"Untag ""PostMVP"" tests so we can collect metrics on how many ignored, etc.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1149:16,test,tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1149,1,['test'],['tests']
Testability,"Unwired the `DockerHashLookupWorkerActor`.; Removed the unused docker registry client.; Cleaned up spray dependencies now that the spray-client is no longer used.; Refactored places that were sending spray classes down into the business logic.; Turned back on deprecation warnings.; Fixed scalaz flatMap deprecation warning by adding Y.A. implicit import.; Undeprecated `TerminalUtil` used by the single workflow runner's pretty printer.; Removed empty files from git.; Bumped timeout for `SharedFileSystemJobExecutionActorSpec.recoverSpec` up to 10 seconds dilated.; Increased sleep for `WorkflowExecutionActorSpec.""retry a job 2 times""` up to 3 seconds dilated.; Updated scalatest to 3.0.0.; Removed leftover bits of `DontUseMainSpecTest`.; Printing test times, minimal stack traces, and resummarizing tests failures, via http://www.scalatest.org/user_guide/running_your_tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1338:237,log,logic,237,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1338,3,"['log', 'test']","['logic', 'test', 'tests']"
Testability,Up the CWL conformance test timeout BT-272,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6336:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6336,1,['test'],['test']
Testability,Update 1/8: build 2588. https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/881/ (not **quite** the same stack trace but very similar); https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/936/; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1132/; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1211; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1352; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1363. org.scalatest.exceptions.TestFailedException at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:528) at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527) at cromwell.CromwellTestKitSpec.newAssertionFailedException(CromwellTestKitSpec.scala:251) at org.scalatest.Assertions.fail(Assertions.scala:1121) at org.scalatest.Assertions.fail$(Assertions.scala:1117) at cromwell.CromwellTestKitSpec.fail(CromwellTestKitSpec.scala:251) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$20(SingleWorkflowRunnerActorSpec.scala:266) at akka.testkit.EventFilter.intercept(TestEventListener.scala:111) at cromwell.CromwellTestKitSpec$.waitForErrorWithException(CromwellTestKitSpec.scala:153) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(Ou,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:87,test,test-runner,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,15,"['Assert', 'Test', 'test']","['Assertions', 'TestFailedException', 'test-runner']"
Testability,"Update BCBIO prealign with the latest fix. Will fix the PAPIv2 CRON job.; At this point we should be able to run the workflows without modification. However there seems to be a bug preventing referencing the workflow by http directly, see https://github.com/broadinstitute/cromwell/issues/4235#issuecomment-445825939; If that worked we could point to it directly in the centaur test.; Otherwise we could modify the cron scripts to pull the git repos and submit using the local file.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4477:378,test,test,378,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4477,1,['test'],['test']
Testability,Update CWL conformance test git hash,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3627:23,test,test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3627,1,['test'],['test']
Testability,Update HCA test in Cromwell to use JDR URI [BT-82],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6200:11,test,test,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6200,1,['test'],['test']
Testability,Update Wom/Cromwell to return a CWL File for conformance tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2899:57,test,tests,57,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2899,1,['test'],['tests']
Testability,Update comment about disabling SSH access test [CROM-6872],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6732:42,test,test,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6732,1,['test'],['test']
Testability,Update delight-rhino-sandbox to 0.0.11,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5666:21,sandbox,sandbox,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5666,1,['sandbox'],['sandbox']
Testability,Update index.md test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5461:16,test,test,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5461,1,['test'],['test']
Testability,Update mockserver-netty to 5.5.4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5669:7,mock,mockserver-netty,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5669,1,['mock'],['mockserver-netty']
Testability,Update no_input_delete source files directory and assert their accessibility [CROM-6890],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6727:50,assert,assert,50,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6727,1,['assert'],['assert']
Testability,Update our JES jars to match what Tester has,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/152:34,Test,Tester,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/152,1,['Test'],['Tester']
Testability,Update performance testing process during release to FC [BA-5766],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5047:19,test,testing,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5047,1,['test'],['testing']
Testability,Update sentry-logback to 1.7.30,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5647:14,log,logback,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5647,1,['log'],['logback']
Testability,Update specs2-mock to 4.10.1,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5679:14,mock,mock,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5679,1,['mock'],['mock']
Testability,Update specs2-mock to 4.10.2,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5696:14,mock,mock,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5696,1,['mock'],['mock']
Testability,"Update testcontainers-scala-mariadb, ... to 0.38.1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5609:7,test,testcontainers-scala-mariadb,7,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5609,1,['test'],['testcontainers-scala-mariadb']
Testability,"Update the `query` endpoint to take in an `additionalKeys` parameter, which will include the specified keys in the returned workflow metadata. This currently just supports ""labels"" and ""parentWorkflowId"" but can be expanded later if necessary. E.g. A GET request to `http://localhost:8000/api/workflows/v1/query?additionalKeys=parentWorkflowId` would return: . ```; {; ""results"": [; {; ""name"": ""test"",; ""id"": ""4e1bf4b5-caea-4e8a-9cd3-f48ac8d11393"",; ""status"": ""Failed"",; ""parentWorkflowId"": ""21b58d24-7f14-4e45-a45a-5e8678fd83cb"",; ""end"": ""2017-12-01T19:00:23.778-05:00"",; ""start"": ""2017-12-01T19:00:16.738-05:00""; }; ]; }; ```. A GET request to `http://localhost:8000/api/workflows/v1/query?additionalKeys=labels` would return: . ```; {; ""results"": [; {; ""name"": ""use_sub_wfs"",; ""id"": ""21b58d24-7f14-4e45-a45a-5e8678fd83cb"",; ""labels"": {; ""project"": ""test"",; ""version"": ""2"",; ""cromwell-workflow-id"": ""cromwell-21b58d24-7f14-4e45-a45a-5e8678fd83cb""; },; ""status"": ""Failed"",; ""end"": ""2017-12-01T19:00:24.627-05:00"",; ""start"": ""2017-12-01T19:00:14.210-05:00""; }; ]; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2971:395,test,test,395,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2971,2,['test'],['test']
Testability,Update to integration tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3700:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3700,1,['test'],['tests']
Testability,Updated GCR integration test to check for additional errors.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/366:24,test,test,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/366,1,['test'],['test']
Testability,"Updated Language Spec: https://github.com/broadinstitute/wdl/blob/spec/SPEC.md#workflow-description-language. What you'll find in here:; - Updates to the parser for the various syntax changes we decided on. Tests have also been updated and all WDL files I could find have been updated for the new syntax.; - `EngineFunctions` -> `WdlStandardLibraryFunctions` with stubs for everything that's in the specification.; - Implemented the following on `LocalEngineFunctions`: `write_map()`, `read_map()`, `write_lines()`. Tests also added for these; - Refactoring of parts of the backend to be able to accommodate the implementation of the functions described above.; - Syntax Highlighter updated for new syntax; - Map literals now allowed in WDL source. Tests included.; - Slightly better coercion semantics: Added an identity coercion ; - Remove / refactor a lot of tech debt.; - Removed the `Command` class, now consumed into `Task` class. Since the spec change, Commands needed to know more about stuff defined at the task level (specifically, Declarations).; - Exposure of workflow outputs section in the `Workflow` class, they are not honored further than that though.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/135:207,Test,Tests,207,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/135,4,"['Test', 'stub']","['Tests', 'stubs']"
Testability,Updated README means updated crc32c for reference disk test [BT-428],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6546:55,test,test,55,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6546,1,['test'],['test']
Testability,Updated `broad-references` bucket name to `gcp-public-data--broad-references` in test workflows [BA-6256],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5410:81,test,test,81,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5410,1,['test'],['test']
Testability,Updated patterns on a collection of tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/923:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/923,1,['test'],['tests']
Testability,Updated release process to include checking on recent results of Jenkins tests prior to starting the release [BA-6551],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5877:73,test,tests,73,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5877,1,['test'],['tests']
Testability,"Updates ; * [ch.qos.logback:logback-access](https://github.com/qos-ch/logback); * [ch.qos.logback:logback-classic](https://github.com/qos-ch/logback); * [ch.qos.logback:logback-core](https://github.com/qos-ch/logback). from 1.2.11 to 1.4.5. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""ch.qos.logback"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""ch.qos.logback"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7026:20,log,logback,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7026,11,['log'],"['logback', 'logback-access', 'logback-classic', 'logback-core']"
Testability,"Updates ; * [com.dimafeng:testcontainers-scala-mariadb](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-mysql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-postgresql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-scalatest](https://github.com/testcontainers/testcontainers-scala). from 0.39.6 to 0.39.8.; [GitHub Release Notes](https://github.com/testcontainers/testcontainers-scala/releases/tag/v0.39.8) - [Version Diff](https://github.com/testcontainers/testcontainers-scala/compare/v0.39.6...v0.39.8). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6512:26,test,testcontainers-scala-mariadb,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6512,16,['test'],"['testcontainers', 'testcontainers-scala', 'testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * [com.dimafeng:testcontainers-scala-mariadb](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-mysql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-postgresql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-scalatest](https://github.com/testcontainers/testcontainers-scala). from 0.39.8 to 0.39.12. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6603:26,test,testcontainers-scala-mariadb,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6603,12,['test'],"['testcontainers', 'testcontainers-scala', 'testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * [com.dimafeng:testcontainers-scala-mariadb](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-mysql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-postgresql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-scalatest](https://github.com/testcontainers/testcontainers-scala). from 0.40.10 to 0.40.12.; [GitHub Release Notes](https://github.com/testcontainers/testcontainers-scala/releases/tag/v0.40.12) - [Version Diff](https://github.com/testcontainers/testcontainers-scala/compare/v0.40.10...v0.40.12). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""com.dimafeng"" }; }]; ```; </details>. labels: test-library-update, early-semver-minor, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7031:26,test,testcontainers-scala-mariadb,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7031,17,['test'],"['test-library-update', 'testcontainers', 'testcontainers-scala', 'testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * [com.dimafeng:testcontainers-scala-mariadb](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-mysql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-postgresql](https://github.com/testcontainers/testcontainers-scala); * [com.dimafeng:testcontainers-scala-scalatest](https://github.com/testcontainers/testcontainers-scala). from 0.40.2 to 0.40.10.; [GitHub Release Notes](https://github.com/testcontainers/testcontainers-scala/releases/tag/v0.40.10) - [Version Diff](https://github.com/testcontainers/testcontainers-scala/compare/v0.40.2...v0.40.10). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.dimafeng"" }; }]; ```; </details>. labels: test-library-update, early-semver-minor, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6849:26,test,testcontainers-scala-mariadb,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6849,17,['test'],"['test-library-update', 'testcontainers', 'testcontainers-scala', 'testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * [com.typesafe.akka:akka-actor](https://github.com/akka/akka); * [com.typesafe.akka:akka-slf4j](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream-testkit](https://github.com/akka/akka); * [com.typesafe.akka:akka-testkit](https://github.com/akka/akka). from 2.5.23 to 2.5.31.; [GitHub Release Notes](https://github.com/akka/akka/releases/tag/v2.5.31) - [Version Diff](https://github.com/akka/akka/compare/v2.5.23...v2.5.31). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5634:236,test,testkit,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5634,2,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-actor](https://github.com/akka/akka); * [com.typesafe.akka:akka-slf4j](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream-testkit](https://github.com/akka/akka); * [com.typesafe.akka:akka-testkit](https://github.com/akka/akka). from 2.5.31 to 2.6.8.; [GitHub Release Notes](https://github.com/akka/akka/releases/tag/v2.6.8) - [Version Diff](https://github.com/akka/akka/compare/v2.5.31...v2.6.8). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/e6e484297151f4295e46ab0ef4aeb2de13a91724/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5755:236,test,testkit,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5755,2,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-actor](https://github.com/akka/akka); * [com.typesafe.akka:akka-slf4j](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream-testkit](https://github.com/akka/akka); * [com.typesafe.akka:akka-testkit](https://github.com/akka/akka). from 2.6.8 to 2.6.9.; [GitHub Release Notes](https://github.com/akka/akka/releases/tag/v2.6.9) - [Version Diff](https://github.com/akka/akka/compare/v2.6.8...v2.6.9). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/e243c83e9a1ecb490a2f5ee163ab6feb857bd29d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5840:236,test,testkit,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5840,2,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-actor](https://github.com/akka/akka); * [com.typesafe.akka:akka-slf4j](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream](https://github.com/akka/akka); * [com.typesafe.akka:akka-stream-testkit](https://github.com/akka/akka); * [com.typesafe.akka:akka-testkit](https://github.com/akka/akka). from 2.6.9 to 2.6.10.; [GitHub Release Notes](https://github.com/akka/akka/releases/tag/v2.6.10) - [Version Diff](https://github.com/akka/akka/compare/v2.6.9...v2.6.10). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/0484b2e331da8203ec4270291416c96540bebe35/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5927:236,test,testkit,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5927,2,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-http](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-spray-json](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-testkit](https://github.com/akka/akka-http). from 10.1.12 to 10.2.0.; [GitHub Release Notes](https://github.com/akka/akka-http/releases/tag/v10.2.0) - [Version Diff](https://github.com/akka/akka-http/compare/v10.1.12...v10.2.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/e6e484297151f4295e46ab0ef4aeb2de13a91724/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>; <details>; <summary>Applied Migrations</summary>. * dependency:MigrateToServerBuilder@com.typesafe.akka:akka-http-scalafix-rules:10.2.0. Documentation:. * https://doc.akka.io/docs/akka-http/10.2/migration-guide/migration-guide-10.2.x.html#akka-http-10-1-x-10-2-0; </details>. labels: library-update, semver-minor, scalafix-migrations",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5757:188,test,testkit,188,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5757,1,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-http](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-spray-json](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-testkit](https://github.com/akka/akka-http). from 10.1.12 to 10.2.1.; [GitHub Release Notes](https://github.com/akka/akka-http/releases/tag/v10.2.1) - [Version Diff](https://github.com/akka/akka-http/compare/v10.1.12...v10.2.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2cea0f1f72f13b38f3b5cb01ae3cad04a58aff0/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>; <details>; <summary>Applied Migrations</summary>. * dependency:MigrateToServerBuilder@com.typesafe.akka:akka-http-scalafix-rules:10.2.0. Documentation:. * https://doc.akka.io/docs/akka-http/10.2/migration-guide/migration-guide-10.2.x.html#akka-http-10-1-x-10-2-0; </details>. labels: library-update, semver-minor, scalafix-migrations",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5913:188,test,testkit,188,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5913,1,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-http](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-spray-json](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-testkit](https://github.com/akka/akka-http). from 10.1.15 to 10.2.9.; [GitHub Release Notes](https://github.com/akka/akka-http/releases/tag/v10.2.9) - [Version Diff](https://github.com/akka/akka-http/compare/v10.1.15...v10.2.9). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Applied Scalafix Migrations</summary>. * com.typesafe.akka:akka-http.*:10.2.0 (created no change); * dependency:MigrateToServerBuilder@com.typesafe.akka:akka-http-scalafix-rules:10.2.0; * Documentation: https://doc.akka.io/docs/akka-http/10.2/migration-guide/migration-guide-10.2.x.html#akka-http-10-1-x-10-2-0; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.typesafe.akka"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, scalafix-migrations, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6869:188,test,testkit,188,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6869,1,['test'],['testkit']
Testability,"Updates ; * [com.typesafe.akka:akka-http](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-spray-json](https://github.com/akka/akka-http); * [com.typesafe.akka:akka-http-testkit](https://github.com/akka/akka-http). from 10.1.9 to 10.1.12.; [GitHub Release Notes](https://github.com/akka/akka-http/releases/tag/v10.1.12) - [Version Diff](https://github.com/akka/akka-http/compare/v10.1.9...v10.1.12). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.akka"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5635:188,test,testkit,188,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5635,1,['test'],['testkit']
Testability,"Updates ; * [org.slf4j:log4j-over-slf4j](http://www.slf4j.org); * [org.slf4j:slf4j-api](http://www.slf4j.org). from 1.7.30 to 1.7.31. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.7.30).; You might want to review and update them manually.; ```; core/src/main/scala/cromwell/core/logging/LoggerWrapper.scala; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.slf4j"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6423:850,log,logging,850,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6423,2,"['Log', 'log']","['LoggerWrapper', 'logging']"
Testability,"Updates ; * [org.typelevel:alleycats-core](https://github.com/typelevel/cats); * [org.typelevel:cats-core](https://github.com/typelevel/cats). from 2.7.0 to 2.8.0.; [GitHub Release Notes](https://github.com/typelevel/cats/releases/tag/v2.8.0) - [Version Diff](https://github.com/typelevel/cats/compare/v2.7.0...v2.8.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.7.0).; You might want to review and update them manually.; ```; services/src/test/scala/cromwell/services/database/QueryTimeoutSpec.scala; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.typelevel"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.typelevel"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6897:1014,test,test,1014,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6897,1,['test'],['test']
Testability,"Updates ; * [org.typelevel:alleycats-core](https://github.com/typelevel/cats); * [org.typelevel:cats-core](https://github.com/typelevel/cats). from 2.7.0 to 2.9.0.; [GitHub Release Notes](https://github.com/typelevel/cats/releases/tag/v2.9.0) - [Version Diff](https://github.com/typelevel/cats/compare/v2.7.0...v2.9.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.7.0).; You might want to review and update them manually.; ```; services/src/test/scala/cromwell/services/database/QueryTimeoutSpec.scala; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.typelevel"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""org.typelevel"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, version-scheme:early-semver, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7077:1014,test,test,1014,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7077,1,['test'],['test']
Testability,"Updates ; * ch.qos.logback:logback-access; * ch.qos.logback:logback-classic; * ch.qos.logback:logback-core. from 1.2.10 to 1.2.11. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""ch.qos.logback"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""ch.qos.logback"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6842:19,log,logback,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6842,8,['log'],"['logback', 'logback-access', 'logback-classic', 'logback-core']"
Testability,"Updates ; * ch.qos.logback:logback-access; * ch.qos.logback:logback-classic; * ch.qos.logback:logback-core. from 1.2.5 to 1.2.6. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.2.5).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""ch.qos.logback"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6511:19,log,logback,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6511,8,"['log', 'test']","['logback', 'logback-access', 'logback-classic', 'logback-core', 'test']"
Testability,"Updates ; * ch.qos.logback:logback-access; * ch.qos.logback:logback-classic; * ch.qos.logback:logback-core. from 1.2.6 to 1.2.10. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""ch.qos.logback"" } ]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6598:19,log,logback,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6598,7,['log'],"['logback', 'logback-access', 'logback-classic', 'logback-core']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.35.2 to 0.38.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5609:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5609,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.1 to 0.38.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/5e7fd713ca5ed5fb400c4f4a7d7194fc5905c7f0/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5835:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5835,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.3 to 0.38.4. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/c2f8651b27f1d1f1a9b3fe31cff369b1aa8f38e1/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5895:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5895,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.4 to 0.38.5. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/241699fed34d4870884f4f086e6f107da0954d21/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6015:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6015,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.4 to 0.38.6. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/7a0d73f56c10291c30f5bb84d1bca29837247450/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6027:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6027,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.4 to 0.38.7. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b2eed9079613d597cbfc793c459df7e361ac36f0/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6079:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6079,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.6 to 0.38.9. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6242:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6242,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates ; * com.dimafeng:testcontainers-scala-mariadb; * com.dimafeng:testcontainers-scala-mysql; * com.dimafeng:testcontainers-scala-postgresql; * com.dimafeng:testcontainers-scala-scalatest. from 0.38.9 to 0.39.5. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.dimafeng"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6389:25,test,testcontainers-scala-mariadb,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6389,4,['test'],"['testcontainers-scala-mariadb', 'testcontainers-scala-mysql', 'testcontainers-scala-postgresql', 'testcontainers-scala-scalatest']"
Testability,"Updates Cromwell with the latest changes from wdl4s; I was able to unignore half of the unit tests that were previously ignored, and re-enable 60 centaur tests (on local and TES).; I haven't looked at the JES failures yet, so this is not be merged until they're fixed, but I though I would make a PR a bit early as this re-wires a decent amount of stuff that was broken due to missing FQNs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2680:93,test,tests,93,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2680,2,['test'],['tests']
Testability,"Updates [com.eed3si9n:sbt-assembly](https://github.com/sbt/sbt-assembly) from 1.0.0 to 1.1.0.; [GitHub Release Notes](https://github.com/sbt/sbt-assembly/releases/tag/v1.1.0) - [Version Diff](https://github.com/sbt/sbt-assembly/compare/v1.0.0...v1.1.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.0.0).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; filesystems/drs/src/main/scala/cromwell/filesystems/drs/DrsResolver.scala; project/Dependencies.scala; scripts/perf/vm_scripts/cromwell-dashboard.json; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.eed3si9n"", artifactId = ""sbt-assembly"" } ]; ```; </details>. labels: sbt-plugin-update, semver-minor, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6513:943,test,test,943,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6513,1,['test'],['test']
Testability,"Updates [com.eed3si9n:sbt-assembly](https://github.com/sbt/sbt-assembly) from 1.1.1 to 1.2.0.; [GitHub Release Notes](https://github.com/sbt/sbt-assembly/releases/tag/v1.2.0) - [Version Diff](https://github.com/sbt/sbt-assembly/compare/v1.1.1...v1.2.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.1.1).; You might want to review and update them manually.; ```; womtool/src/test/resources/validate/wdl_draft3/valid/arrays_v1/arrays_v1.inputs.json; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.eed3si9n"", artifactId = ""sbt-assembly"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""com.eed3si9n"", artifactId = ""sbt-assembly"" }; }]; ```; </details>. labels: sbt-plugin-update, early-semver-minor, semver-spec-minor, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7032:947,test,test,947,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7032,1,['test'],['test']
Testability,"Updates [com.github.kxbmap:configs](https://github.com/kxbmap/configs) from 0.5.0 to 0.6.0.; [GitHub Release Notes](https://github.com/kxbmap/configs/releases/tag/v0.6.0) - [Version Diff](https://github.com/kxbmap/configs/compare/v0.5.0...v0.6.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (0.5.0).; You might want to review and update them manually.; ```; src/ci/bin/testCentaurTes.sh; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.github.kxbmap"", artifactId = ""configs"" } ]; ```; </details>. labels: library-update, semver-minor, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6244:940,test,testCentaurTes,940,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6244,1,['test'],['testCentaurTes']
Testability,"Updates [com.github.kxbmap:configs](https://github.com/kxbmap/configs) from 0.6.0 to 0.6.1.; [GitHub Release Notes](https://github.com/kxbmap/configs/releases/tag/v0.6.1) - [Version Diff](https://github.com/kxbmap/configs/compare/v0.6.0...v0.6.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (0.6.0).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.github.kxbmap"", artifactId = ""configs"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6392:937,test,test,937,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6392,1,['test'],['test']
Testability,"Updates [com.github.scopt:scopt](https://github.com/scopt/scopt) from 4.0.0 to 4.0.1.; [GitHub Release Notes](https://github.com/scopt/scopt/releases/tag/v4.0.1) - [Version Diff](https://github.com/scopt/scopt/compare/v4.0.0...v4.0.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (4.0.0).; You might want to review and update them manually.; ```; CromwellRefdiskManifestCreator/pom.xml; centaur/src/main/resources/integrationTestCases/germline/haplotype-caller-workflow/HaplotypeCallerWF.aws.inputs.json; centaur/src/main/resources/integrationTestCases/germline/joint-discovery-gatk/joint-discovery-gatk4.hg38.wgs.inputs.json; centaur/src/main/resources/integrationTestCases/germline/single-sample-workflow/processing-for-variant-discovery-gatk4.hg38.wgs.aws.inputs.json; core/src/test/resources/hello_papiv2.json; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.github.scopt"", artifactId = ""scopt"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6245:1351,test,test,1351,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6245,1,['test'],['test']
Testability,"Updates [com.google.api:gax-grpc](https://github.com/googleapis/gax-java) from 2.4.0 to 2.4.1.; [GitHub Release Notes](https://github.com/googleapis/gax-java/releases/tag/v2.4.1) - [Changelog](https://github.com/googleapis/gax-java/blob/master/CHANGELOG.md) - [Version Diff](https://github.com/googleapis/gax-java/compare/v2.4.0...v2.4.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.4.0).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.google.api"", artifactId = ""gax-grpc"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6515:1029,test,test,1029,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6515,1,['test'],['test']
Testability,"Updates [com.google.auth:google-auth-library-oauth2-http](https://github.com/googleapis/google-auth-library-java) from 1.5.3 to 1.10.0.; [GitHub Release Notes](https://github.com/googleapis/google-auth-library-java/releases/tag/v1.10.0) - [Version Diff](https://github.com/googleapis/google-auth-library-java/compare/v1.5.3...v1.10.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.5.3).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.google.auth"", artifactId = ""google-auth-library-oauth2-http"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.google.auth"", artifactId = ""google-auth-library-oauth2-http"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6857:1025,test,test,1025,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6857,1,['test'],['test']
Testability,"Updates [com.google.cloud:google-cloud-resourcemanager](https://github.com/googleapis/java-resourcemanager) from 1.2.5 to 1.2.11.; [GitHub Release Notes](https://github.com/googleapis/java-resourcemanager/releases/tag/v1.2.11) - [Version Diff](https://github.com/googleapis/java-resourcemanager/compare/v1.2.5...v1.2.11). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.2.5).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.google.cloud"", artifactId = ""google-cloud-resourcemanager"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.google.cloud"", artifactId = ""google-cloud-resourcemanager"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6861:1011,test,test,1011,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6861,1,['test'],['test']
Testability,"Updates [com.iheart:ficus](https://github.com/iheartradio/ficus) from 1.5.1 to 1.5.2.; [GitHub Release Notes](https://github.com/iheartradio/ficus/releases/tag/v1.5.2) - [Version Diff](https://github.com/iheartradio/ficus/compare/v1.5.1...v1.5.2). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.5.1).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.iheart"", artifactId = ""ficus"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.iheart"", artifactId = ""ficus"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6865:937,test,test,937,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6865,1,['test'],['test']
Testability,"Updates [com.lihaoyi:ammonite-ops](https://github.com/com-lihaoyi/Ammonite) from 2.4.0 to 2.4.1.; [GitHub Release Notes](https://github.com/com-lihaoyi/Ammonite/releases/tag/2.4.1) - [Version Diff](https://github.com/com-lihaoyi/Ammonite/compare/2.4.0...2.4.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.4.0).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.lihaoyi"", artifactId = ""ammonite-ops"" } ]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6613:951,test,test,951,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6613,1,['test'],['test']
Testability,"Updates [com.storm-enroute:scalameter](http://scalameter.github.io/) from 0.19 to 0.21. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (0.19).; You might want to review and update them manually.; ```; CHANGELOG.md; database/migration/src/main/resources/changesets/restart_and_recover_migration.xml; docs/developers/bitesize/workflowParsing/wdlToWdlom_hermes.svg; scripts/metadata_comparison/test/resources/comparer/papiv1_version3_good.json; scripts/metadata_comparison/test/resources/comparer/papiv2_version3_good.json; scripts/metadata_comparison/test/resources/comparer/version3_comparison_good.csv; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.storm-enroute"", artifactId = ""scalameter"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.storm-enroute"", artifactId = ""scalameter"" }; }]; ```; </details>. labels: library-update, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6867:958,test,test,958,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6867,3,['test'],['test']
Testability,"Updates [com.typesafe.sbt:sbt-git](https://github.com/sbt/sbt-git) from 1.0.0 to 1.0.1.; [GitHub Release Notes](https://github.com/sbt/sbt-git/releases/tag/v1.0.1) - [Version Diff](https://github.com/sbt/sbt-git/compare/v1.0.0...v1.0.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.0.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/standardTestCases/papi_v2_plain_detritus/papi_v2_plain_detritus.wdl; cwl/src/test/resources/cwl/lodash.js; filesystems/drs/src/main/scala/cromwell/filesystems/drs/DrsResolver.scala; project/Dependencies.scala; scripts/perf/vm_scripts/cromwell-dashboard.json; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.sbt"", artifactId = ""sbt-git"" } ]; ```; </details>. labels: sbt-plugin-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6405:1023,test,test,1023,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6405,1,['test'],['test']
Testability,"Updates [com.typesafe.scala-logging:scala-logging](https://github.com/lightbend/scala-logging) from 3.9.2 to 3.9.3.; [GitHub Release Notes](https://github.com/lightbend/scala-logging/releases/tag/v3.9.3) - [Version Diff](https://github.com/lightbend/scala-logging/compare/v3.9.2...v3.9.3). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.scala-logging"", artifactId = ""scala-logging"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6259:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6259,7,['log'],['logging']
Testability,"Updates [com.typesafe.scala-logging:scala-logging](https://github.com/lightbend/scala-logging) from 3.9.3 to 3.9.4.; [GitHub Release Notes](https://github.com/lightbend/scala-logging/releases/tag/v3.9.4) - [Version Diff](https://github.com/lightbend/scala-logging/compare/v3.9.3...v3.9.4). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.scala-logging"", artifactId = ""scala-logging"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6406:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6406,7,['log'],['logging']
Testability,"Updates [com.typesafe.scala-logging:scala-logging](https://github.com/lightbend/scala-logging) from 3.9.4 to 3.9.5.; [GitHub Release Notes](https://github.com/lightbend/scala-logging/releases/tag/v3.9.5) - [Version Diff](https://github.com/lightbend/scala-logging/compare/v3.9.4...v3.9.5). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.scala-logging"", artifactId = ""scala-logging"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.typesafe.scala-logging"", artifactId = ""scala-logging"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6871:28,log,logging,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6871,9,['log'],['logging']
Testability,"Updates [io.sentry:sentry-logback](https://github.com/getsentry/sentry-java) from 5.1.2 to 5.2.0.; [GitHub Release Notes](https://github.com/getsentry/sentry-java/releases/tag/5.2.0) - [Changelog](https://github.com/getsentry/sentry-java/blob/master/CHANGELOG.md) - [Version Diff](https://github.com/getsentry/sentry-java/compare/5.1.2...5.2.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (5.1.2).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-minor, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6525:26,log,logback,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6525,3,"['log', 'test']","['logback', 'test']"
Testability,"Updates [io.sentry:sentry-logback](https://github.com/getsentry/sentry-java) from 5.2.0 to 5.2.4.; [GitHub Release Notes](https://github.com/getsentry/sentry-java/releases/tag/5.2.4) - [Version Diff](https://github.com/getsentry/sentry-java/compare/5.2.0...5.2.4). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6619:26,log,logback,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6619,2,['log'],['logback']
Testability,"Updates [io.sentry:sentry-logback](https://github.com/getsentry/sentry-java) from 5.2.4 to 5.7.4.; [GitHub Release Notes](https://github.com/getsentry/sentry-java/releases/tag/5.7.4) - [Version Diff](https://github.com/getsentry/sentry-java/compare/5.2.4...5.7.4). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""io.sentry"", artifactId = ""sentry-logback"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6877:26,log,logback,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6877,3,['log'],['logback']
Testability,"Updates [io.sentry:sentry-logback](https://github.com/getsentry/sentry-java) from 5.7.4 to 6.14.0.; [GitHub Release Notes](https://github.com/getsentry/sentry-java/releases/tag/6.14.0) - [Version Diff](https://github.com/getsentry/sentry-java/compare/5.7.4...6.14.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""io.sentry"", artifactId = ""sentry-logback"" }; }]; ```; </details>. labels: library-update, early-semver-major, semver-spec-major, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7053:26,log,logback,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7053,3,['log'],['logback']
Testability,"Updates [io.sentry:sentry-logback](https://github.com/getsentry/sentry-java/tree/main) from 1.7.30 to 3.2.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/928dbc6c4aa0c8a6aef19af027ec7112700b8163/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6068:26,log,logback,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6068,2,['log'],['logback']
Testability,"Updates [io.swagger:swagger-parser](https://github.com/swagger-api/swagger-parser) from 1.0.51 to 1.0.53.; [GitHub Release Notes](https://github.com/swagger-api/swagger-parser/releases/tag/v1.0.53) - [Version Diff](https://github.com/swagger-api/swagger-parser/compare/v1.0.51...v1.0.53). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/a7c22fedabcbcc26a43ebe18e299248be60b178a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6099:1019,test,test-library-update,1019,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6099,1,['test'],['test-library-update']
Testability,"Updates [io.swagger:swagger-parser](https://github.com/swagger-api/swagger-parser) from 1.0.52 to 1.0.54.; [GitHub Release Notes](https://github.com/swagger-api/swagger-parser/releases/tag/v1.0.54) - [Version Diff](https://github.com/swagger-api/swagger-parser/compare/v1.0.52...v1.0.54). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6264:1019,test,test-library-update,1019,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6264,1,['test'],['test-library-update']
Testability,"Updates [io.swagger:swagger-parser](https://github.com/swagger-api/swagger-parser) from 1.0.54 to 1.0.55.; [GitHub Release Notes](https://github.com/swagger-api/swagger-parser/releases/tag/v1.0.55) - [Version Diff](https://github.com/swagger-api/swagger-parser/compare/v1.0.54...v1.0.55). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6413:1019,test,test-library-update,1019,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6413,1,['test'],['test-library-update']
Testability,"Updates [io.swagger:swagger-parser](https://github.com/swagger-api/swagger-parser) from 1.0.55 to 1.0.56.; [GitHub Release Notes](https://github.com/swagger-api/swagger-parser/releases/tag/v1.0.56) - [Version Diff](https://github.com/swagger-api/swagger-parser/compare/v1.0.55...v1.0.56). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6526:1019,test,test-library-update,1019,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6526,1,['test'],['test-library-update']
Testability,"Updates [io.swagger:swagger-parser](https://github.com/swagger-api/swagger-parser) from 1.0.56 to 1.0.61.; [GitHub Release Notes](https://github.com/swagger-api/swagger-parser/releases/tag/v1.0.61) - [Version Diff](https://github.com/swagger-api/swagger-parser/compare/v1.0.56...v1.0.61). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""io.swagger"", artifactId = ""swagger-parser"" }; }]; ```; </details>. labels: test-library-update, early-semver-patch, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6878:1237,test,test-library-update,1237,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6878,1,['test'],['test-library-update']
Testability,"Updates [io.swagger:swagger-parser](https://github.com/swagger-api/swagger-parser) from 1.0.56 to 1.0.64.; [GitHub Release Notes](https://github.com/swagger-api/swagger-parser/releases/tag/v1.0.64) - [Version Diff](https://github.com/swagger-api/swagger-parser/compare/v1.0.56...v1.0.64). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""io.swagger"", artifactId = ""swagger-parser"" }; }]; ```; </details>. labels: test-library-update, early-semver-patch, semver-spec-patch, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7054:1236,test,test-library-update,1236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7054,1,['test'],['test-library-update']
Testability,"Updates [net.thisptr:jackson-jq](https://github.com/eiiches/jackson-jq) from 1.0.0-preview.20190925 to 1.0.0-preview.20191208.; [GitHub Release Notes](https://github.com/eiiches/jackson-jq/releases/tag/1.0.0-preview.20191208) - [Version Diff](https://github.com/eiiches/jackson-jq/compare/1.0.0-preview.20190925...1.0.0-preview.20191208). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""net.thisptr"", artifactId = ""jackson-jq"" } ]; ```; </details>. labels: test-library-update, semver-pre-release",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5652:1056,test,test-library-update,1056,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5652,1,['test'],['test-library-update']
Testability,"Updates [net.thisptr:jackson-jq](https://github.com/eiiches/jackson-jq) from 1.0.0-preview.20191208 to 1.0.0-preview.20201123.; [GitHub Release Notes](https://github.com/eiiches/jackson-jq/releases/tag/1.0.0-preview.20201123) - [Version Diff](https://github.com/eiiches/jackson-jq/compare/1.0.0-preview.20191208...1.0.0-preview.20201123). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/04b9d423d4830f1fd86d680ecef2d6372c8ec937/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""net.thisptr"", artifactId = ""jackson-jq"" } ]; ```; </details>. labels: test-library-update, semver-pre-release",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6082:1066,test,test-library-update,1066,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6082,1,['test'],['test-library-update']
Testability,"Updates [org.apache.commons:commons-lang3](https://gitbox.apache.org/repos/asf?p=commons-lang.git) from 3.11 to 3.12.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.11).; You might want to review and update them manually.; ```; CromIAM/src/main/scala/cromiam/webservice/CromIamApiService.scala; CromIAM/src/test/scala/cromiam/webservice/SwaggerUiHttpServiceSpec.scala; docs/developers/bitesize/ci/Cromwell_Deployment_Strategies.svg; project/Dependencies.scala; scripts/metadata_comparison/test/resources/comparer/papiv1_version3_good.json; scripts/metadata_comparison/test/resources/comparer/papiv2_version3_good.json; scripts/metadata_comparison/test/resources/comparer/version3_comparison_good.csv; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.apache.commons"", artifactId = ""commons-lang3"" } ]; ```; </details>. labels: library-update, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6266:879,test,test,879,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6266,4,['test'],['test']
Testability,"Updates [org.apache.tika:tika-core](http://tika.apache.org/) from 1.25 to 1.26. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.25).; You might want to review and update them manually.; ```; docs/developers/bitesize/ci/Cromwell_Deployment_Strategies.svg; docs/developers/bitesize/workflowParsing/wdlToWdlom_hermes.svg; docs/developers/bitesize/workflowParsing/wdlmap.svg; scripts/metadata_comparison/test/resources/comparer/papiv2_version3_good.json; scripts/metadata_comparison/test/resources/forkjoin_metadata_papi_v2alpha1.json; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.apache.tika"", artifactId = ""tika-core"" } ]; ```; </details>. labels: library-update, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6267:969,test,test,969,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6267,2,['test'],['test']
Testability,"Updates [org.apache.tika:tika-core](https://tika.apache.org/) from 2.1.0 to 2.2.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.1.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/integrationTestCases/hca/HISAT2.wdl; womtool/src/test/resources/inputs/wdl_draft3/smartseq2_single_sample/all.inputs.json; womtool/src/test/resources/validate/wdl_draft3/valid/smartseq2_single_sample/HISAT2.wdl; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.apache.tika"", artifactId = ""tika-core"" } ]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6622:840,test,test,840,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6622,2,['test'],['test']
Testability,"Updates [org.apache.tika:tika-core](https://tika.apache.org/) from 2.3.0 to 2.4.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.3.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/integrationTestCases/germline/single-sample-workflow/processing-for-variant-discovery-gatk4.hg38.wgs.aws.inputs.json; centaur/src/main/resources/integrationTestCases/germline/single-sample-workflow/processing-for-variant-discovery-gatk4.hg38.wgs.inputs.json; cwl/src/test/resources/cwl/lodash.js; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.apache.tika"", artifactId = ""tika-core"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.apache.tika"", artifactId = ""tika-core"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6882:1058,test,test,1058,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6882,1,['test'],['test']
Testability,"Updates [org.codehaus.janino:janino](https://github.com/janino-compiler/janino) from 3.1.2 to 3.1.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.1.2).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.codehaus.janino"", artifactId = ""janino"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6268:790,test,test,790,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6268,1,['test'],['test']
Testability,"Updates [org.codehaus.janino:janino](https://github.com/janino-compiler/janino) from 3.1.3 to 3.1.4. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.1.3).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.codehaus.janino"", artifactId = ""janino"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6414:790,test,test,790,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6414,1,['test'],['test']
Testability,"Updates [org.codehaus.janino:janino](https://github.com/janino-compiler/janino) from 3.1.6 to 3.1.7.; [GitHub Release Notes](https://github.com/janino-compiler/janino/releases/tag/v3.1.7) - [Version Diff](https://github.com/janino-compiler/janino/compare/v3.1.6...v3.1.7) - [Version Diff](https://github.com/janino-compiler/janino/compare/3.1.6...3.1.7). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.1.6).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.codehaus.janino"", artifactId = ""janino"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.codehaus.janino"", artifactId = ""janino"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6883:1044,test,test,1044,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6883,1,['test'],['test']
Testability,"Updates [org.glassfish.jersey.inject:jersey-hk2](https://github.com/eclipse-ee4j/jersey) from 2.32 to 2.39.; [GitHub Release Notes](https://github.com/eclipse-ee4j/jersey/releases/tag/2.39) - [Version Diff](https://github.com/eclipse-ee4j/jersey/compare/2.32...2.39). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.32).; You might want to review and update them manually.; ```; project/Dependencies.scala; scripts/metadata_comparison/test/resources/comparer/papiv1_version3_good.json; scripts/metadata_comparison/test/resources/comparer/papiv2_version3_good.json; scripts/metadata_comparison/test/resources/comparer/version3_comparison_good.csv; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.glassfish.jersey.inject"", artifactId = ""jersey-hk2"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""org.glassfish.jersey.inject"", artifactId = ""jersey-hk2"" }; }]; ```; </details>. labels: library-update, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7064:1004,test,test,1004,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7064,3,['test'],['test']
Testability,"Updates [org.javadelight:delight-rhino-sandbox](https://github.com/javadelight/delight-rhino-sandbox) from 0.0.10 to 0.0.11. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.javadelight"", artifactId = ""delight-rhino-sandbox"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5666:39,sandbox,sandbox,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5666,3,['sandbox'],['sandbox']
Testability,"Updates [org.javadelight:delight-rhino-sandbox](https://github.com/javadelight/delight-rhino-sandbox) from 0.0.11 to 0.0.12. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/70c5cce7975167543ded62798cbe74ff42b62d3a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.javadelight"", artifactId = ""delight-rhino-sandbox"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5935:39,sandbox,sandbox,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5935,3,['sandbox'],['sandbox']
Testability,"Updates [org.javadelight:delight-rhino-sandbox](https://github.com/javadelight/delight-rhino-sandbox) from 0.0.11 to 0.0.13. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/04b9d423d4830f1fd86d680ecef2d6372c8ec937/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.javadelight"", artifactId = ""delight-rhino-sandbox"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6085:39,sandbox,sandbox,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6085,3,['sandbox'],['sandbox']
Testability,"Updates [org.javadelight:delight-rhino-sandbox](https://github.com/javadelight/delight-rhino-sandbox) from 0.0.12 to 0.0.15. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.javadelight"", artifactId = ""delight-rhino-sandbox"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6269:39,sandbox,sandbox,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6269,3,['sandbox'],['sandbox']
Testability,"Updates [org.lz4:lz4-java](https://github.com/lz4/lz4-java) from 1.7.1 to 1.8.0.; [GitHub Release Notes](https://github.com/lz4/lz4-java/releases/tag/1.8.0) - [Changelog](https://github.com/lz4/lz4-java/blob/master/CHANGES.md) - [Version Diff](https://github.com/lz4/lz4-java/compare/1.7.1...1.8.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.7.1).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; project/Dependencies.scala; src/ci/bin/test_bcs.inc.sh; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.lz4"", artifactId = ""lz4-java"" } ]; ```; </details>. labels: library-update, semver-minor, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6417:989,test,test,989,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6417,1,['test'],['test']
Testability,"Updates [org.mariadb.jdbc:mariadb-java-client](https://github.com/mariadb-corporation/mariadb-connector-j) from 2.7.0 to 2.7.2.; [GitHub Release Notes](https://github.com/mariadb-corporation/mariadb-connector-j/releases/tag/2.7.2) - [Changelog](https://github.com/mariadb-corporation/mariadb-connector-j/blob/master/CHANGELOG.md) - [Version Diff](https://github.com/mariadb-corporation/mariadb-connector-j/compare/2.7.0...2.7.2). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.7.0).; You might want to review and update them manually.; ```; services/src/test/scala/cromwell/services/database/QueryTimeoutSpec.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mariadb.jdbc"", artifactId = ""mariadb-java-client"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6270:1124,test,test,1124,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6270,1,['test'],['test']
Testability,"Updates [org.mock-server:mockserver-netty](https://www.mock-server.com) from 5.11.2 to 5.14.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mock-server"", artifactId = ""mockserver-netty"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.mock-server"", artifactId = ""mockserver-netty"" }; }]; ```; </details>. labels: test-library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6888:13,mock,mock-server,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6888,8,"['mock', 'test']","['mock-server', 'mockserver-netty', 'test-library-update']"
Testability,"Updates [org.mock-server:mockserver-netty](https://www.mock-server.com) from 5.14.0 to 5.15.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mock-server"", artifactId = ""mockserver-netty"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""org.mock-server"", artifactId = ""mockserver-netty"" }; }]; ```; </details>. labels: test-library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7070:13,mock,mock-server,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7070,8,"['mock', 'test']","['mock-server', 'mockserver-netty', 'test-library-update']"
Testability,"Updates [org.mockftpserver:MockFtpServer](https://mockftpserver.org) from 3.0.0 to 3.1.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.0.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/integrationTestCases/green/arrays/arrays.options; database/sql/src/main/scala/cromwell/database/slick/SlickDatabase.scala; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mockftpserver"", artifactId = ""MockFtpServer"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""org.mockftpserver"", artifactId = ""MockFtpServer"" }; }]; ```; </details>. labels: test-library-update, early-semver-minor, semver-spec-minor, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7071:13,mock,mockftpserver,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7071,8,"['Mock', 'mock', 'test']","['MockFtpServer', 'mockftpserver', 'test-library-update']"
Testability,"Updates [org.mockito:mockito-core](https://github.com/mockito/mockito) from 3.12.4 to 5.1.1.; [GitHub Release Notes](https://github.com/mockito/mockito/releases/tag/v5.1.1) - [Version Diff](https://github.com/mockito/mockito/compare/v3.12.4...v5.1.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/9367739b48d1bae5766674e547f8cdf8a82d318a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mockito"", artifactId = ""mockito-core"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""org.mockito"", artifactId = ""mockito-core"" }; }]; ```; </details>. labels: library-update, early-semver-major, semver-spec-major, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7072:13,mock,mockito,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7072,12,['mock'],"['mockito', 'mockito-core']"
Testability,"Updates [org.scala-sbt:sbt](https://github.com/sbt/sbt) from 1.4.9 to 1.5.4.; [GitHub Release Notes](https://github.com/sbt/sbt/releases/tag/v1.5.4) - [Version Diff](https://github.com/sbt/sbt/compare/v1.4.9...v1.5.4). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.4.9).; You might want to review and update them manually.; ```; project/build.properties; project/project/build.properties; publish/docker-setup.sh; scripts/docker-develop/Dockerfile; src/ci/bin/test.inc.sh; src/ci/docker-compose/cromwell-test/docker-setup.sh; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scala-sbt"", artifactId = ""sbt"" } ]; ```; </details>. labels: library-update, semver-minor, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6419:1031,test,test,1031,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6419,2,['test'],['test']
Testability,"Updates [org.scala-sbt:sbt](https://github.com/sbt/sbt) from 1.5.5 to 1.5.8.; [GitHub Release Notes](https://github.com/sbt/sbt/releases/tag/v1.5.8) - [Version Diff](https://github.com/sbt/sbt/compare/v1.5.5...v1.5.8). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.5.5).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; project/build.properties; project/project/build.properties; publish/docker-setup.sh; scripts/docker-develop/Dockerfile; src/ci/bin/test.inc.sh; src/ci/docker-compose/cromwell-test/docker-setup.sh; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scala-sbt"", artifactId = ""sbt"" } ]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6628:908,test,test,908,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6628,3,['test'],['test']
Testability,"Updates [org.scalacheck:scalacheck](https://github.com/typelevel/scalacheck) from 1.14.3 to 1.15.0.; [GitHub Release Notes](https://github.com/typelevel/scalacheck/releases/tag/1.15.0) - [Changelog](https://github.com/typelevel/scalacheck/blob/master/CHANGELOG.markdown) - [Version Diff](https://github.com/typelevel/scalacheck/compare/1.14.3...1.15.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/277938a66b148ef84c771a27f772f690aaf228cf/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalacheck"", artifactId = ""scalacheck"" } ]; ```; </details>. labels: test-library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6009:1084,test,test-library-update,1084,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6009,1,['test'],['test-library-update']
Testability,"Updates [org.scalacheck:scalacheck](https://github.com/typelevel/scalacheck) from 1.14.3 to 1.15.1.; [GitHub Release Notes](https://github.com/typelevel/scalacheck/releases/tag/1.15.1) - [Changelog](https://github.com/typelevel/scalacheck/blob/master/CHANGELOG.markdown) - [Version Diff](https://github.com/typelevel/scalacheck/compare/1.14.3...1.15.1). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/8e304dec90b4fd6d16691e94f33d6c40327886d9/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalacheck"", artifactId = ""scalacheck"" } ]; ```; </details>. labels: test-library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6023:1084,test,test-library-update,1084,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6023,1,['test'],['test-library-update']
Testability,"Updates [org.scalacheck:scalacheck](https://github.com/typelevel/scalacheck) from 1.15.1 to 1.15.3.; [GitHub Release Notes](https://github.com/typelevel/scalacheck/releases/tag/1.15.3) - [Changelog](https://github.com/typelevel/scalacheck/blob/master/CHANGELOG.markdown) - [Version Diff](https://github.com/typelevel/scalacheck/compare/1.15.1...1.15.3). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalacheck"", artifactId = ""scalacheck"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6273:1084,test,test-library-update,1084,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6273,1,['test'],['test-library-update']
Testability,"Updates [org.scalacheck:scalacheck](https://github.com/typelevel/scalacheck) from 1.15.3 to 1.15.4.; [GitHub Release Notes](https://github.com/typelevel/scalacheck/releases/tag/1.15.4) - [Changelog](https://github.com/typelevel/scalacheck/blob/master/CHANGELOG.markdown) - [Version Diff](https://github.com/typelevel/scalacheck/compare/1.15.3...1.15.4). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalacheck"", artifactId = ""scalacheck"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6420:1084,test,test-library-update,1084,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6420,1,['test'],['test-library-update']
Testability,"Updates [org.scalactic:scalactic](https://github.com/scalatest/scalatest) from 3.2.10 to 3.2.13.; [GitHub Release Notes](https://github.com/scalatest/scalatest/releases/tag/release-3.2.13) - [Version Diff](https://github.com/scalatest/scalatest/compare/release-3.2.10...release-3.2.13). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.10).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; project/Dependencies.scala; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalactic"", artifactId = ""scalactic"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.scalactic"", artifactId = ""scalactic"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6893:977,test,test,977,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6893,1,['test'],['test']
Testability,"Updates [org.scalactic:scalactic](https://github.com/scalatest/scalatest) from 3.2.3 to 3.2.6.; [GitHub Release Notes](https://github.com/scalatest/scalatest/releases/tag/release-3.2.6) - [Version Diff](https://github.com/scalatest/scalatest/compare/release-3.2.3...release-3.2.6). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.3).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; database/sql/src/main/scala/cromwell/database/slick/SlickDatabase.scala; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalactic"", artifactId = ""scalactic"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6274:971,test,test,971,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6274,1,['test'],['test']
Testability,"Updates [org.scalactic:scalactic](https://github.com/scalatest/scalatest) from 3.2.9 to 3.2.10.; [GitHub Release Notes](https://github.com/scalatest/scalatest/releases/tag/release-3.2.10) - [Version Diff](https://github.com/scalatest/scalatest/compare/release-3.2.9...release-3.2.10). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.9).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalactic"", artifactId = ""scalactic"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6531:974,test,test,974,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6531,1,['test'],['test']
Testability,"Updates [org.scalamock:scalamock](https://github.com/paulbutcher/ScalaMock) from 4.1.0 to 4.4.0.; [GitHub Release Notes](https://github.com/paulbutcher/ScalaMock/releases/tag/v4.4.0) - [Version Diff](https://github.com/paulbutcher/ScalaMock/compare/v4.1.0...v4.4.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalamock"", artifactId = ""scalamock"" } ]; ```; </details>. labels: test-library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5675:985,test,test-library-update,985,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5675,1,['test'],['test-library-update']
Testability,"Updates [org.scalamock:scalamock](https://github.com/paulbutcher/ScalaMock) from 4.4.0 to 5.0.0.; [GitHub Release Notes](https://github.com/paulbutcher/ScalaMock/releases/tag/5.0.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/6fa5051c5aeeaaae7870cefd2d9908da221f2f61/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalamock"", artifactId = ""scalamock"" } ]; ```; </details>. labels: test-library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5771:901,test,test-library-update,901,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5771,1,['test'],['test-library-update']
Testability,"Updates [org.scalamock:scalamock](https://github.com/paulbutcher/ScalaMock) from 5.0.0 to 5.1.0.; [GitHub Release Notes](https://github.com/paulbutcher/ScalaMock/releases/tag/5.1.0) - [Version Diff](https://github.com/paulbutcher/ScalaMock/compare/5.0.0...5.1.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/cdfccb498a4c89b70d290be3993ca3f3f1075b19/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalamock"", artifactId = ""scalamock"" } ]; ```; </details>. labels: test-library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6127:992,test,test-library-update,992,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6127,1,['test'],['test-library-update']
Testability,"Updates [org.scalamock:scalamock](https://github.com/paulbutcher/ScalaMock) from 5.1.0 to 5.2.0.; [GitHub Release Notes](https://github.com/paulbutcher/ScalaMock/releases/tag/5.2.0) - [Version Diff](https://github.com/paulbutcher/ScalaMock/compare/5.1.0...5.2.0). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalamock"", artifactId = ""scalamock"" } ]; ```; </details>. labels: test-library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6629:992,test,test-library-update,992,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6629,1,['test'],['test-library-update']
Testability,"Updates [org.scalatest:scalatest](https://github.com/scalatest/scalatest) from 3.2.10 to 3.2.13.; [GitHub Release Notes](https://github.com/scalatest/scalatest/releases/tag/release-3.2.13) - [Version Diff](https://github.com/scalatest/scalatest/compare/release-3.2.10...release-3.2.13). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.10).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; project/Dependencies.scala; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalatest"", artifactId = ""scalatest"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.scalatest"", artifactId = ""scalatest"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6894:977,test,test,977,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6894,1,['test'],['test']
Testability,"Updates [org.scalatest:scalatest](https://github.com/scalatest/scalatest) from 3.2.3 to 3.2.6.; [GitHub Release Notes](https://github.com/scalatest/scalatest/releases/tag/release-3.2.6) - [Version Diff](https://github.com/scalatest/scalatest/compare/release-3.2.3...release-3.2.6). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.3).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; database/sql/src/main/scala/cromwell/database/slick/SlickDatabase.scala; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalatest"", artifactId = ""scalatest"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6275:971,test,test,971,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6275,1,['test'],['test']
Testability,"Updates [org.scalatest:scalatest](https://github.com/scalatest/scalatest) from 3.2.9 to 3.2.10.; [GitHub Release Notes](https://github.com/scalatest/scalatest/releases/tag/release-3.2.10) - [Version Diff](https://github.com/scalatest/scalatest/compare/release-3.2.9...release-3.2.10). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.9).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; project/Dependencies.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalatest"", artifactId = ""scalatest"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6532:974,test,test,974,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6532,1,['test'],['test']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2) from 4.10.2 to 4.10.4. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/0484b2e331da8203ec4270291416c96540bebe35/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5928:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5928,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2) from 4.10.2 to 4.10.5. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/70862b7263be540409b11ad2c14f1fe8fbc0ff26/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5944:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5944,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2) from 4.10.5 to 4.10.6. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6277:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6277,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2) from 4.4.1 to 4.10.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5679:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5679,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2) from 4.4.1 to 4.10.2. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/12cad616e6adbc68ad8487e1fcb064c6ef8f3d9c/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5696:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5696,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2) from 4.4.1 to 4.10.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/1c915c0a1f36f16f611c05a475189a31bc5c124a/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5752:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5752,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2.git) from 4.10.6 to 4.12.2. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6424:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6424,2,['mock'],['mock']
Testability,"Updates [org.specs2:specs2-mock](https://github.com/etorreborre/specs2.git) from 4.12.3 to 4.12.12. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6534:27,mock,mock,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6534,2,['mock'],['mock']
Testability,"Updates [org.typelevel:mouse](https://github.com/typelevel/mouse) from 1.0.0 to 1.0.3.; [GitHub Release Notes](https://github.com/typelevel/mouse/releases/tag/v1.0.3) - [Version Diff](https://github.com/typelevel/mouse/compare/v1.0.0...v1.0.3). I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.0.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/standardTestCases/papi_v2_plain_detritus/papi_v2_plain_detritus.wdl; cwl/src/test/resources/cwl/lodash.js; filesystems/drs/src/main/scala/cromwell/filesystems/drs/DrsResolver.scala; project/Dependencies.scala; project/plugins.sbt; scripts/perf/vm_scripts/cromwell-dashboard.json; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.typelevel"", artifactId = ""mouse"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6428:1030,test,test,1030,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6428,1,['test'],['test']
Testability,"Updates com.google.cloud:google-cloud-monitoring from 3.0.2 to 3.0.6. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.0.2).; You might want to review and update them manually.; ```; project/Dependencies.scala; project/swagger2markup.sbt; src/ci/bin/test.inc.sh; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.google.cloud"", artifactId = ""google-cloud-monitoring"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6518:818,test,test,818,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6518,1,['test'],['test']
Testability,"Updates com.google.cloud:google-cloud-monitoring from 3.2.5 to 3.2.9. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (3.2.5).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.google.cloud"", artifactId = ""google-cloud-monitoring"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.google.cloud"", artifactId = ""google-cloud-monitoring"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6859:759,test,test,759,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6859,1,['test'],['test']
Testability,"Updates com.google.cloud:google-cloud-storage from 2.1.0 to 2.1.6. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.1.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/integrationTestCases/hca/HISAT2.wdl; project/Dependencies.scala; womtool/src/test/resources/inputs/wdl_draft3/smartseq2_single_sample/all.inputs.json; womtool/src/test/resources/validate/wdl_draft3/valid/smartseq2_single_sample/HISAT2.wdl; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.google.cloud"", artifactId = ""google-cloud-storage"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6520:852,test,test,852,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6520,2,['test'],['test']
Testability,"Updates com.typesafe.sbt:sbt-git from 1.0.2 to 2.0.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.0.2).; You might want to review and update them manually.; ```; centaur/src/main/resources/integrationTestCases/Somatic/Mutect2/Mutect2.wdl; src/ci/bin/test.inc.sh; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""com.typesafe.sbt"", artifactId = ""sbt-git"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""com.typesafe.sbt"", artifactId = ""sbt-git"" }; }]; ```; </details>. labels: sbt-plugin-update, early-semver-major, semver-spec-major, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6870:823,test,test,823,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6870,1,['test'],['test']
Testability,"Updates io.github.swagger2markup:swagger2markup from 1.3.3 to 1.3.4. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (1.3.3).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/ontology/EDAM.owl; ```; </details>; <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.github.swagger2markup"", artifactId = ""swagger2markup"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""io.github.swagger2markup"", artifactId = ""swagger2markup"" }; }]; ```; </details>. labels: library-update, early-semver-patch, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6875:758,test,test,758,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6875,1,['test'],['test']
Testability,"Updates io.sentry:sentry-logback from 1.7.17 to 1.7.30. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5647:25,log,logback,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5647,2,['log'],['logback']
Testability,"Updates io.sentry:sentry-logback from 1.7.30 to 3.0.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/699e420f7466287c6f3c21ddb906c21b4ab27f3d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5902:25,log,logback,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5902,2,['log'],['logback']
Testability,"Updates io.sentry:sentry-logback from 1.7.30 to 3.1.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/8853889b19d5f226b195d46df032c05250479bcc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5945:25,log,logback,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5945,2,['log'],['logback']
Testability,"Updates io.sentry:sentry-logback from 1.7.30 to 3.1.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/b907255ee3866c4752ec1ab927b784c5a4b3d260/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5956:25,log,logback,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5956,2,['log'],['logback']
Testability,"Updates io.sentry:sentry-logback from 1.7.30 to 3.1.2. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/241699fed34d4870884f4f086e6f107da0954d21/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6016:25,log,logback,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6016,2,['log'],['logback']
Testability,"Updates io.sentry:sentry-logback from 1.7.30 to 3.1.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b39f66e9e52c1afeea26901c5aff972e27907584/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.sentry"", artifactId = ""sentry-logback"" } ]; ```; </details>. labels: library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6024:25,log,logback,25,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6024,2,['log'],['logback']
Testability,"Updates io.swagger:swagger-parser from 1.0.41 to 1.0.51. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5649:777,test,test-library-update,777,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5649,1,['test'],['test-library-update']
Testability,"Updates io.swagger:swagger-parser from 1.0.51 to 1.0.52. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/19da014de4d7ffaaf25485ab05efa66bc7748c1f/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.swagger"", artifactId = ""swagger-parser"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5952:777,test,test-library-update,777,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5952,1,['test'],['test-library-update']
Testability,"Updates org.hsqldb:hsqldb from 2.5.1 to 2.5.2. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/92f43ce5f010fa03daeb2625a3f9c1b1be80cca5/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.5.1).; You might want to review and update them manually.; ```; centaurCwlRunner/src/main/resources/application.conf; centaurCwlRunner/src/main/resources/logback.xml; services/src/main/scala/cromwell/services/womtool/impl/WomtoolServiceInCromwellActor.scala; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.hsqldb"", artifactId = ""hsqldb"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6416:818,log,logback,818,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6416,1,['log'],['logback']
Testability,"Updates org.liquibase:liquibase-core from 4.4.0 to 4.4.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (4.4.0).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.liquibase"", artifactId = ""liquibase-core"" } ]; ```; </details>. labels: library-update, semver-patch, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6527:747,test,test,747,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6527,1,['test'],['test']
Testability,"Updates org.mock-server:mockserver-netty from 5.5.1 to 5.5.4. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mock-server"", artifactId = ""mockserver-netty"" } ]; ```; </details>. labels: test-library-update, semver-patch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5669:12,mock,mock-server,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5669,5,"['mock', 'test']","['mock-server', 'mockserver-netty', 'test-library-update']"
Testability,"Updates org.mock-server:mockserver-netty from 5.5.4 to 5.11.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/e6e484297151f4295e46ab0ef4aeb2de13a91724/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mock-server"", artifactId = ""mockserver-netty"" } ]; ```; </details>. labels: test-library-update, semver-minor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5760:12,mock,mock-server,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5760,5,"['mock', 'test']","['mock-server', 'mockserver-netty', 'test-library-update']"
Testability,"Updates org.mockftpserver:MockFtpServer from 2.7.1 to 2.8.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/b48aba70ec793405c98788a322d160987ba51d3e/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (2.7.1).; You might want to review and update them manually.; ```; centaur/src/main/resources/standardTestCases/scatter_simples/bag_of_tasks.wdl; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mockftpserver"", artifactId = ""MockFtpServer"" } ]; ```; </details>. labels: test-library-update, semver-minor, old-version-remains",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6271:12,mock,mockftpserver,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6271,5,"['Mock', 'mock', 'test']","['MockFtpServer', 'mockftpserver', 'test-library-update']"
Testability,"Updates org.mockftpserver:MockFtpServer from 2.8.0 to 3.0.0. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/6472b97b3365f2800f4202d1bf6b1d647bd2b0cc/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mockftpserver"", artifactId = ""MockFtpServer"" } ]; ```; </details>. labels: test-library-update, semver-major",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6528:12,mock,mockftpserver,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6528,5,"['Mock', 'mock', 'test']","['MockFtpServer', 'mockftpserver', 'test-library-update']"
Testability,"Updates org.mockito:mockito-core from 3.11.2 to 3.12.4. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/2dc2301e75aea6c2d0c49b89d6092f7d4f134b40/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.mockito"", artifactId = ""mockito-core"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""@monthly"" },; dependency = { groupId = ""org.mockito"", artifactId = ""mockito-core"" }; }]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6889:12,mock,mockito,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6889,6,['mock'],"['mockito', 'mockito-core']"
Testability,"Updates org.scalacheck:scalacheck from 1.14.0 to 1.14.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/fthomas/scala-steward/blob/a2a47735b8b5ce3b0b0a9fa0a2cdf3b8405ff98d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.scalacheck"", artifactId = ""scalacheck"" } ]; ```; </details>; <details>; <summary>Applied Migrations</summary>. * github:typelevel/scalacheck/v1_14_1?sha=3fc537dde9d8fdf951503a8d8b027a568d52d055; </details>. labels: test-library-update, semver-patch, scalafix-migrations",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5691:923,test,test-library-update,923,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5691,1,['test'],['test-library-update']
Testability,"Updates org.specs2:specs2-mock from 4.12.12 to 4.13.1. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.specs2"", artifactId = ""specs2-mock"" } ]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-minor, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6631:26,mock,mock,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6631,2,['mock'],['mock']
Testability,"Updates org.typelevel:kind-projector from 0.10.0 to 0.10.3. I'll automatically update this PR to resolve conflicts as long as you don't change it yourself. If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below. Configure Scala Steward for your repository with a [`.scala-steward.conf`](https://github.com/scala-steward-org/scala-steward/blob/00809e6249b134635f71919c17c1c81603beb22d/docs/repo-specific-configuration.md) file. Have a fantastic day writing Scala!. <details>; <summary>Files still referring to the old version number</summary>. The following files still refer to the old version number (0.10.0).; You might want to review and update them manually.; ```; cwl/src/test/resources/cwl/lodash.js; ```; </details>; <details>; <summary>Ignore future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""org.typelevel"", artifactId = ""kind-projector"" } ]; ```; </details>. labels: library-update, early-semver-minor, semver-spec-patch, old-version-remains, commit-count:1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6633:750,test,test,750,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6633,1,['test'],['test']
Testability,Updates the perf script so they can be used by this [CRON job](https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-perf-cron/) that will run all perf tests on develop every night and put the results [here](https://console.cloud.google.com/storage/browser/cromwell-perf-test-reporting/cron/develop/?project=broad-dsde-cromwell-perf),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4329:161,test,tests,161,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4329,2,['test'],"['test-reporting', 'tests']"
Testability,Updates to workflow logger creation.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1456:20,log,logger,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1456,1,['log'],['logger']
Testability,Updates:; - Restores cron build.; - Moved chunks of duplicated scripts and confs into includes.; - Scripts and confs are now each under 100 lines.; - Switch Local backend CWL conformance testing from serial to parallel.; - With minimal prep (ex: vault auth) run test scripts on your laptop. Future:; - More refactoring might possible but at some point conditionals-in-common-code grows exponentially.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3642:187,test,testing,187,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3642,2,['test'],"['test', 'testing']"
Testability,Upgrade Testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4101:8,Test,Testing,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4101,1,['Test'],['Testing']
Testability,Upgrade logback to > 1.2.9 [CROM-6856],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6643:8,log,logback,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6643,1,['log'],['logback']
Testability,Upgrade sentry-logback and silence init warnings. Closes #3657,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3907:15,log,logback,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3907,1,['log'],['logback']
Testability,"Upon a commit to ""a branch"" (TBD, develop, maybe) deploy centaur-cromwell-mysql infrastructure and run ""short"" tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/776:111,test,tests,111,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/776,1,['test'],['tests']
Testability,"Usability testing showed that users had a challenging time filtering by Job name because the column is called job but the filter is called name, and the disconnect was very confusing for folks. AC: Rename the ""Job"" column to ""name"" so it makes filtering much more intuitive.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4332:10,test,testing,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4332,1,['test'],['testing']
Testability,"Use [Apache bench](https://httpd.apache.org/docs/2.4/programs/ab.html) or similar to measure how many requests per second we can handle. To submit the multi-part form, use the `-p` option for a post data file, example contents below. You can generate your own by capturing the network requests Swagger makes.; ```; ------WebKitFormBoundaryRwwHyBadF8e8Mwbp; Content-Disposition: form-data; name=""workflowUrl"". https://firecloud-orchestration.dsde-alpha.broadinstitute.org/ga4gh/v1/tools/anichols:cnv_somatic_pair_workflow/versions/1/plain-WDL/descriptor; ------WebKitFormBoundaryRwwHyBadF8e8Mwbp; Content-Disposition: form-data; name=""workflowType"". WDL; ------WebKitFormBoundaryRwwHyBadF8e8Mwbp; Content-Disposition: form-data; name=""workflowTypeVersion"". draft-2; ------WebKitFormBoundaryRwwHyBadF8e8Mwbp--; ```; In my preliminary testing, throughput was about 15 validations per second of the workflow above. I had `ab` make multiple requests simultaneously with the `-c` option (don't remember the concurrency level though). N.B. the above us a pretty tough scenario - workflow by URL with many HTTP imports. Our production use case uses files, not URLs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4573:832,test,testing,832,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4573,1,['test'],['testing']
Testability,"Use case: Once there is support for [optional file localization](https://cromwell.readthedocs.io/en/develop/optimizations/FileLocalization/#the-localization_optional-optimization), presumably every future version of Cromwell (v33 and beyond) will always not localize files as it contains logic to call cache without localization. However, a WDL author would need to to test whether a task w/`optional_localization` enabled for file inputs has the ability to run successfully in both cases of having access to file localization or file streaming. AC: Regardless of whether a file is marked for localization or not, override that logic on the workflow level so the workflow submitter has the option to enforce file localization, even if the WDL author has written the task to be compatible with remote files and the backend supports that functionality.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3798:288,log,logic,288,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3798,3,"['log', 'test']","['logic', 'test']"
Testability,Use images from GCR instead of Dockerhub in `fofn` Centaur test [BT-149],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6214:59,test,test,59,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6214,1,['test'],['test']
Testability,Use lodash instead of underscore in CWL testing [BT-280],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6343:40,test,testing,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6343,1,['test'],['testing']
Testability,Use new AWS stack for tests (again) [NOJIRA],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5571:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5571,3,['test'],['tests']
Testability,Use new AWS stack for tests [NOJIRA],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5568:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5568,1,['test'],['tests']
Testability,"User reported issue: https://gatkforums.broadinstitute.org/gatk/discussion/12759/womtool-should-tell-me-to-not-use-the-reserved-keyword-output-upon-validate. AC: Ensure that Womtool returns the true cause for an invalid workflow (in this case its using the ""output"" keyword as a variable name instead of a misleading/unrelated(?) error. Testing Criteria: Add a test for certain reserved keywords, such as `input`, `output`, `command` and possibly others to ensure that using them in unexpected ways in a WDL yields the appropriate error.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4031:337,Test,Testing,337,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4031,2,"['Test', 'test']","['Testing', 'test']"
Testability,Uses liquibase [custom change](http://www.liquibase.org/documentation/changes/custom_change.html) to write classes that transform pre-0.20 existing data into 0.20 metadata.; - [x] Test at scale,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1277:180,Test,Test,180,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1277,1,['Test'],['Test']
Testability,"Using `better.files` for metadata writing, and removed heaviest duplicated `FileUtil` similarity.; Refactored `Main` to avoid test issues with `DelayedInit`, `System.exit`, consistent error generation, etc.; Removed blocking code from `SingleWorkflowRunnerActor`, and passing `Shutdown` as message now, instead of killing system directly.; Reused / refactored some of the test methods for actors, and removed bitrotted `DefaultWorkflowManagerActor`.; Left comments (warnings?) about possible bugs / improvements to workflow `Actor` messaging.; Replaced use of Java `SystemProperties` with Scala `sys.props`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/265:126,test,test,126,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/265,2,['test'],['test']
Testability,"Using cromwell v36, not all log output appears to be captured even if log level set to DEBUG. For example, using the HaplotypeCallerGvcf_GATK4 reference on GitHub, if an non-existent path is provided for `input_bam` in the inputs file, this line will cause its workflow to fail:; ```; Int disk_size = ceil(((size(input_bam, ""GB"") + 30) / hc_scatter) + ref_size) + 20; ```. The resulting 'file not found' error is printed (50x, one per shard) on cromwell's stdout, but not captured anywhere in the logs written to disk. The workflow execution directory in `cromwell-executions/HaplotypeCallerGvcf_GATK4/{guid}` is just an empty folder and its workflow log (if preserved) indicates the workflow was started but no errors:; ```; ...; 2018-10-24 13:29:31,409 INFO - WorkflowExecutionActor-28a80dbf-a2ae-4fc8-96e6-0279c32a0e13 [UUID(28a80dbf)]: Starting HaplotypeCallerGvcf_GATK4.HaplotypeCaller (50 shards); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4310:28,log,log,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4310,4,['log'],"['log', 'logs']"
Testability,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1799:481,log,logging,481,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799,1,['log'],['logging']
Testability,"Using the 0.22 release jar. The default value of a Boolean variable is always used regardless of what is passed in the inputs file. . WDL:. ```; task test {; File testFile; Boolean long = false. command {; ls \; ${true='-l' false='' long} \; ${testFile}; }. output {; File foo = stdout(); }. runtime {; docker: 'ubuntu:14.04'; }; }. workflow run {; call test; }; ```. inputs:. ```; {; ""run.test.testFile"": ""/tmp/tmpfile"",; ""run.test.long"": true; }; ```. Results in the command:; `ls /tmp/tmpfile` rather than `ls -l /tmp/tmpfile` as expected. Additionally, if I try to specify a default value for a Boolean `${true='-l' false='' default=true long}`, this translates to 'true' being passed in to the command line rather than '-l' as expected. It also doesn't seem to matter if I pass the default as a string or boolean.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1632:150,test,test,150,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1632,7,['test'],"['test', 'testFile']"
Testability,"Using the AWS backend with Cromwell 85, if the S3 key of the input contains spaces, the generated commands for localizing the inputs seem to be incorrect, with the command line argument to the the `aws s3 cp` command not being quoted. ### Steps to reproduce. Run a workflow using the AWS backend where the S3 uri of an input contains the space character. Here is a minimal WDL for reproducing; basically any task that uses a File input will do.; ```; version 1.0; task repro_task {; input {; File in; }; command <<<; cat '~{in}'; >>>; output {; Array[String] out = read_lines(stdout()); }; runtime {; docker: ""debian:bullseye-slim""; }; }; ```. And here is an example inputs JSON:; ```; {; ""in"": ""s3://bucket-name/test/somewhere containing spaces/filename.txt""; }; ```. ### Observed result. Here is a line from the script that is generated, a bit below the line that reads `echo '*** LOCALIZING INPUTS ***'`. ```; /usr/local/aws-cli/v2/current/bin/aws s3 cp --no-progress s3://bucket-name/test/somewhere containing spaces/filename.txt /tmp/scratch/bucket-name/test/somewhere%20containing%20spaces/filename.txt; ```. This leads to `aws s3 cp` to fail with an error message like this:; ```; Unknown options: spaces/filename.txt,/tmp/scratch/bucket-name/test/somewhere%20containing%20spaces/filename.txt; ```. ### Expected result. I think that in the script the argument to `aws s3 cp` should be quoted, for example like this:. ```; /usr/local/aws-cli/v2/current/bin/aws s3 cp --no-progress 's3://bucket-name/test/somewhere containing spaces/filename.txt' /tmp/scratch/bucket-name/test/somewhere%20containing%20spaces/filename.txt; ```. ### Additional information. The location in the code where the command line is created would seem to be at [AwsBatchJob.scala:132](https://github.com/broadinstitute/cromwell/blob/85/supportedBackends/aws/src/main/scala/cromwell/backend/impl/aws/AwsBatchJob.scala#L132).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7102:713,test,test,713,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7102,6,['test'],['test']
Testability,"Using the Google Cloud backend, is there a way to calculate the total cost of a pipeline run? . The only thing I've been able to do is dump the billing logs to a JSON file, but unfortunately none of these logs have identifiable information that might let me connect it to a given pipeline",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4394:152,log,logs,152,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4394,2,['log'],['logs']
Testability,"Using wom-tool-30.2, the following wdl validates using `java -jar womtool-30.2.jar validate test.wdl` and shows no inputs with `java -jar womtool-30.2.jar inputs test.wdl`. I think this should fail validation because the variable `to_echo` is used without being declared. . ```; workflow test_validation{; # missing variable; #String to_echo; 	call example{ input:; 		to_echo = to_echo; 	}; }. task example{; 	String to_echo; 	; 	command{; 		echo ""${to_echo}""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3381:92,test,test,92,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3381,2,['test'],['test']
Testability,Validation tests for validating sub-workflow inputs [womtool],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3565:11,test,tests,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3565,1,['test'],['tests']
Testability,"Version: Cromwell v38; Backend: PAPI v2. Running a hello world workflow on Pipelines API v2 against inputs originating from a Requester Pays bucket. The job finishes running, generates a 0 return code and detritus logs (stdout/stderr). However the workflow failures with an error message (full message attached).; [failed-workflow-metadata.txt](https://github.com/broadinstitute/cromwell/files/3008597/failed-workflow-metadata.txt). ```Unable to complete JES Api Request. Caught NPE while processing operation projects/dvoet-prod-test-20190305-3/operations/11506961050484846699```. Searched the code and found the error here:; https://github.com/broadinstitute/cromwell/blob/2d8ff3b0962bbe84828445fd3ac77d2379e499c2/supportedBackends/google/pipelines/v2alpha1/src/main/scala/cromwell/backend/google/pipelines/v2alpha1/api/request/GetRequestHandler.scala#L49-L83. Operation metadata attached as well.; [operation-metadata.yaml.txt](https://github.com/broadinstitute/cromwell/files/3008623/operation-metadata.yaml.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4772:214,log,logs,214,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4772,2,"['log', 'test']","['logs', 'test-']"
Testability,"Very much a DRAFT. But following a discussion in the Cromwell Slack (tagging @patmagee), I wanted to test how easy it would be to create a webhook metadata actor that could post metadata to some user-specified URL. . It's pretty basic, in your config, you specify class `...WebHookMetadataServiceActor` (or `WebHookHybridMetadataServiceActor`) with a config.url, eg:. ```hocon; services {; MetadataService {; class = ""cromwell.services.metadata.impl.webhook.WebHookMetadataServiceActor""; config {; url = ""http://localhost:8080""; }; }; }; ```. With a stupidly simple python server listening on 8080, I received metadata responses. Todo:; - Fix the content to be a proper JSON object (rather than comma separated JSON objects), Request library is complaining about this. Long goal:; - Filter metadata events by type, but unless there's serious request for this, it's outside the scope (as I don't know what types of metadata events there are).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5813:101,test,test,101,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5813,1,['test'],['test']
Testability,"WARNING: This PR is huge and needs to be reviewed carefully, we have already performed many manual tests + ported many other tests from PAPI. ## Intro. The main goal is to refactor Batch backend to include [PipelinesApiRequestManager](https://github.com/broadinstitute/cromwell/blob/5448b85bf334e0970665a69549e796199acc8bd7/supportedBackends/google/pipelines/common/src/main/scala/cromwell/backend/google/pipelines/common/api/PipelinesApiRequestManager.scala) and [PipelinesApiRequestWorker](https://github.com/broadinstitute/cromwell/blob/5448b85bf334e0970665a69549e796199acc8bd7/supportedBackends/google/pipelines/common/src/main/scala/cromwell/backend/google/pipelines/common/api/PipelinesApiRequestWorker.scala). This also fixes a few missing details from the initial Batch integration (#7177), for example:; 1. Missing metrics are now published.; 2. The job status is queried before deleting it to try preventing the deletion of jobs that are in a final state (PAPI can abort jobs but Batch deletes them instead). I have been trying to split this into multiple smaller PRs, please let me know if you can find any piece that can be submitted independently, previous PRs:. - #7413; - #7394 ; - #7411; - #7410 ; - #7393; - #7421; - #7428. <details>; <summary>Questions (already resolved)</summary>. ## Questions. 1. There is a centaur test included in the Batch suite, still, this seems to invoke a papi test [testCentaurGcpBatch.sh](https://github.com/broadinstitute/cromwell/blob/5448b85bf334e0970665a69549e796199acc8bd7/src/ci/bin/testCentaurGcpBatch.sh#L25) (see [papi_v2alpha1_gcsa.test](https://github.com/broadinstitute/cromwell/blob/5448b85bf334e0970665a69549e796199acc8bd7/centaur/src/main/resources/standardTestCases/papi_v2alpha1_gcsa.test#L3), the test itself says that batch backend is not used). Could this be related to the false-alarms from codecoverage's bot?; 2. There warnings raised by codecov which seem wrong, for example, the lines mentioned on [GcpBatchGroupedRequests](https",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7412:99,test,tests,99,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7412,2,['test'],['tests']
Testability,"WOM the tests and former wdl4s examples, remove obsolete WDL code",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2944:8,test,tests,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2944,1,['test'],['tests']
Testability,WX-1101 Modernize test image,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7158:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7158,1,['test'],['test']
Testability,WX-1106 Add logging for failed docker manifest pulls,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7135:12,log,logging,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7135,1,['log'],['logging']
Testability,WX-1122 Use legacy AppInsights to get better control over logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7157:58,log,logging,58,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7157,1,['log'],['logging']
Testability,WX-1179 Enable GCP Batch Integration Tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7199:37,Test,Tests,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7199,1,['Test'],['Tests']
Testability,WX-1210-2 Testing GH workflow actions,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7182:10,Test,Testing,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7182,1,['Test'],['Testing']
Testability,WX-1225 Print TES error messages to job logger,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7220:40,log,logger,40,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7220,1,['log'],['logger']
Testability,WX-1230 Ignore `invalidate_bad_caches_use_good_local.test`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7197:53,test,test,53,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7197,1,['test'],['test']
Testability,WX-1306 Added python script to automate workflow submission for Azure E2E testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7230:74,test,testing,74,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7230,1,['test'],['testing']
Testability,WX-1307 Azure E2E test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7239:18,test,test,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7239,1,['test'],['test']
Testability,WX-1333 Improve logging visibility for load management,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7253:16,log,logging,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7253,1,['log'],['logging']
Testability,WX-1338 Fix cron invocation of E2E test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7244:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7244,1,['test'],['test']
Testability,WX-1341 Better logging when a runner stops picking up new workflows,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7246:15,log,logging,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7246,1,['log'],['logging']
Testability,WX-1351 Remove slow/misbehaving localization test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7330:45,test,test,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7330,1,['test'],['test']
Testability,WX-1351 Split out restart tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7333:26,test,tests,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7333,1,['test'],['tests']
Testability,WX-1385 Remove SAS tokens from TES input log printouts,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7358:41,log,log,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7358,1,['log'],['log']
Testability,WX-1407 Fix contract tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7340:21,test,tests,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7340,1,['test'],['tests']
Testability,WX-1444 Use MySQL LTS in DBMS tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7360:30,test,tests,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7360,1,['test'],['tests']
Testability,WX-1489 Hopefully reduce CI flakiness by modernizing deadlock test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7376:62,test,test,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7376,1,['test'],['test']
Testability,"WX-1513 TEST, IGNORE ME",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7401:8,TEST,TEST,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7401,1,['TEST'],['TEST']
Testability,"WX-1515 TEST, IGNORE ME",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7403:8,TEST,TEST,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7403,1,['TEST'],['TEST']
Testability,WX-1538 Add more tests to the GCP Batch backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7410:17,test,tests,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7410,1,['test'],['tests']
Testability,WX-1550 Don't pointlessly continue running integration tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7400:55,test,tests,55,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7400,1,['test'],['tests']
Testability,WX-1557 Add more tests to the GCP Batch backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7394:17,test,tests,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7394,1,['test'],['tests']
Testability,WX-1595 Port more tests from papi-common to the GCP Batch backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7413:18,test,tests,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7413,1,['test'],['tests']
Testability,WX-1653 Remove getm debug logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7445:26,log,logging,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7445,1,['log'],['logging']
Testability,WX-1682 Use stable image in Quay test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7454:33,test,test,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7454,1,['test'],['test']
Testability,WX-1716 Extract outputs path logic to shared location,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7479:29,log,logic,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7479,1,['log'],['logic']
Testability,WX-1767 Use Papi log for retry with more memory.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7430:17,log,log,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7430,1,['log'],['log']
Testability,WX-1820 GCP Batch VPC test and doc updates,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7538:22,test,test,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7538,1,['test'],['test']
Testability,WX-1835 Tweak to quota exhaustion logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7561:34,log,logging,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7561,1,['log'],['logging']
Testability,"WX-1836 Azure testing, CI adjustments",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7524:14,test,testing,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7524,1,['test'],['testing']
Testability,WX-863 Turn off Azure NIO logging,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6982:26,log,logging,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6982,1,['log'],['logging']
Testability,WX-876 Surface TES System Logs to Cromwell when TES backend returns task error status,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6979:26,Log,Logs,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6979,2,['Log'],['Logs']
Testability,WX-892 Hopefully stop log-related OOMs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6981:22,log,log-related,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6981,1,['log'],['log-related']
Testability,WX-903 Pre-GHA test suite disablement,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7010:15,test,test,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7010,1,['test'],['test']
Testability,WX-906 Sbt Unit Tests as Github Actions,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6992:16,Test,Tests,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6992,1,['Test'],['Tests']
Testability,"WX-927 Fix 2 PAPI v2 Centaur tests, add Papi v2 run config",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7511:29,test,tests,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7511,1,['test'],['tests']
Testability,WX-927 GCP Batch custom mount points tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7534:37,test,tests,37,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7534,1,['test'],['tests']
Testability,WX-927 GCP Batch labels tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7523:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7523,1,['test'],['tests']
Testability,WX-927 GCP Batch: LogsPolicy is now configurable,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7491:18,Log,LogsPolicy,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7491,1,['Log'],['LogsPolicy']
Testability,WX-927 GCP Batch: LogsPolicy.PATH now streams the logs to GCS,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7529:18,Log,LogsPolicy,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7529,2,"['Log', 'log']","['LogsPolicy', 'logs']"
Testability,"WX-927 GCPBATCH retry with more memory and error message fixes, Centaur tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7494:72,test,tests,72,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7494,1,['test'],['tests']
Testability,WX-927 Lots of Centaur tests for GCPBATCH,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7496:23,test,tests,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7496,1,['test'],['tests']
Testability,WX-927 Parallel composite upload tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7543:33,test,tests,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7543,1,['test'],['tests']
Testability,WX-927 Task log streaming for GCP Batch,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7540:12,log,log,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7540,1,['log'],['log']
Testability,"WX-927 Turn all the Papiv2 tests on for GCPBATCH, see what happens",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7519:27,test,tests,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7519,1,['test'],['tests']
Testability,WX-927 Turn on GPU tests for PAPIv2 and GCPBATCH,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7517:19,test,tests,19,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7517,1,['test'],['tests']
Testability,WX-927 enabling lots of GCP Batch Centaur tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7546:42,test,tests,42,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7546,1,['test'],['tests']
Testability,WX-927 monitoring log fixes for GCP Batch backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7549:18,log,log,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7549,1,['log'],['log']
Testability,"WX-927 service account scope fixes, GCSA tests",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7553:41,test,tests,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7553,1,['test'],['tests']
Testability,WX-950 Upgrade Azure libs to probably fix extraneous log,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7088:53,log,log,53,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7088,1,['log'],['log']
Testability,WX-966 Post-merge branch cleanup + test fix,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7149:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7149,1,['test'],['test']
Testability,WX-983 Prototype Azure e2e workflow test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7202:36,test,test,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7202,1,['test'],['test']
Testability,"WX-984 Revert ""WX-950 Upgrade Azure libs to probably fix extraneous log""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7090:68,log,log,68,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7090,1,['log'],['log']
Testability,WaaS /describe: performance testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4573:28,test,testing,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4573,1,['test'],['testing']
Testability,Wait for MySQL before running tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4030:30,test,tests,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4030,1,['test'],['tests']
Testability,"Warn on async failures, we're not logging debug and this is a bad state.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/376:34,log,logging,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/376,1,['log'],['logging']
Testability,"Warning: kind of a trainwreck. This PR is aimed in the general direction of #580 but ""closes"" might be too strong a term for this. . This has a DO NOT MERGE on it since it definitely shouldn't go into 0.19, and maybe also for the trainwreck comment above. Naughty list:; - Might break GCS with Local and SGE backends; - Doesn't cleanly deal with filesystems, so configuration is currently duplicated among backends. Blech. Nice list:; - Does get the config closer to what it should look like for PBEs.; - Might be able to plug in a backend type that isn't compiled in. Maybe.; - Might be able to do sneaky things like have the LocalBackend specified twice with two different names to test call-granular backends. Again, maybe.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/627:684,test,test,684,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/627,1,['test'],['test']
Testability,Was failing 70-80% of the time only during the PapiV2 centaur tests.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4669:62,test,tests,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4669,1,['test'],['tests']
Testability,"Was meaning to push this before heading out for the week: . A work-in-progress Job Store writer which skirts the problem of databases by not actually ever using one. Instead, every Job has a known filesystem location and we just write to and (not yet) read back from disk. Currently has all of the hooks and wiring needed to write jobs the JobStore and clear them out on workflow completion. All that should be left is to update the JobStoreReader to read back the JSON from an appropriate file (but the tests are there for the JSON implicits and they seems good). NB I went down the JSON route because I anticipate an eventual DB schema more like the metadata, to avoid having to store multiple MBs or GBs in a single cell.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1155:504,test,tests,504,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1155,1,['test'],['tests']
Testability,"We are running joint-discovery-gatk4 in slurm with Cromwell 46. . Only a small fraction of the shards are being processed concurrently. What adjustments can be made to process more or all shards concurrently?. Running joint-discovery-gatk4 with 50 GVCFs completed successfully in 12 hours. . Running joint-discovery-gatk4 with 100 GVCFs has been running for over 3 days. Given that we plan to scale this to thousands of samples, this will lead to unacceptable runtimes. . This is the WDL that is being used: [https://github.com/gatk-workflows/gatk4-germline-snps-indels/blob/master/joint-discovery-gatk4.wdl](https://github.com/gatk-workflows/gatk4-germline-snps-indels/blob/master/joint-discovery-gatk4.wdl). Intervals are the same as those found here: [https://github.com/gatk-workflows/gatk4-germline-snps-indels/blob/master/joint-discovery-gatk4.hg38.wgs.inputs.json](https://github.com/gatk-workflows/gatk4-germline-snps-indels/blob/master/joint-discovery-gatk4.hg38.wgs.inputs.json). Test WGS GVCF files (average size = 9G) were generated via HaplotypeCaller 3.5-0 with the parameter emitRefConfidence=GVCF. . In the cromwell config file, concurrent-job-limit is set to 1000. To verify that it is functioning, it was set to 2 and 2 concurrent cromwell jobs were observed. . Call caching on or off as well as adjusting batch_size did not impact this issue. . All other throttling settings are set to default settings. . Thank you for your help.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5218:990,Test,Test,990,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5218,1,['Test'],['Test']
Testability,"We are seeing infrequent situations where JES says a call is done but cromwell thinks it is still running. I see the call starting in the logs:; ```; 2017-02-08 18:55:58,500 cromwell-system-akka.dispatchers.engine-dispatcher-963 INFO - WorkflowExecutionActor-fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 [UUID(fa7e25a2)]: Starting calls: pon_gatk_workflow.PadTargets:NA:1; ```. Then the only suspicious things I see later in the logs are these messages (which could be completely unrelated however they do start to appear 2.5 minutes after the job completes on JES):; ```; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-424 INFO - The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$Enn#762671444] unexpectedly terminated while conducting 100 polls. Making a new one...; java.lang.NullPointerException: null; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-246 ERROR - null; ```. For future reference by a FireCloud admin the operations id is ELSl1PihKxjdhp-6gvr3weYBILma7PWMHyoPcHJvZHVjdGlvblF1ZXVl and the workflow id is fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 and the workflow was aborted 3PM Feb 8.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1965:138,log,logs,138,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1965,2,['log'],['logs']
Testability,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1885:765,test,test,765,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885,4,"['log', 'test']","['logs', 'test']"
Testability,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2037:575,log,log,575,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037,1,['log'],['log']
Testability,"We are using a local docker registry to run WDL workflows. A typical format of the image from local registry is as such: `example.com:port/imageName:tag`. However, when hash-lookup local method is enabled, it adds a 'library' repository to the image path. Final image path for the above image then becomes: `example.com:port/library/imageName:tag`.; The onus of providing optional repository field to the image path should be on the User, rather than Cromwell trying to guess the repository name and also as long as Docker is able to correctly parse this, it should not be a fail criteria; (Please correct me if I am missing something here). Also, the example image I pasted above, is a valid format and docker is able to pull the image with this path with no issues. I tested this with disabling `docker.hash-lookup.enable=false`. The workflow was able to run successfully. . For context pasting the offending line here:; https://github.com/broadinstitute/cromwell/blob/88765daeb265b66d2f2a87f62635b50e4f95733a/dockerHashing/src/main/scala/cromwell/docker/DockerImageIdentifier.scala#L17",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6172:770,test,tested,770,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6172,1,['test'],['tested']
Testability,"We can not get memory retry to work. Have not not found anywhere a complete example showing it working, including what should be int eh .conf file. If such an example exists, please point us to it,. Command:; nohup java -Dconfig.file=My.conf -jar cromwell-87-5448b85-SNAP-pre-edits.jar run ~/MemoryRetryTest.wdl 2>&1 > nohup.out. MemoryRetryTest.wdl:; workflow MemoryRetryTest {; 	String message = ""Killed""; 	; 	call TestOutOfMemoryRetry {}; 	call TestBadCommandRetry {}; }. task TestOutOfMemoryRetry {; 	command <<<; 		free -h; 		df -h; 		cat /proc/cpuinfo. 		echo ""Killed"" >&2; 		tail /dev/zero; 	>>>; 	; 	runtime {; 		cpu: ""1""; 		memory: ""1 GB""; 		maxRetries: 4; 		continueOnReturnCode: 0; 	}; 	; }. task TestBadCommandRetry {; 	command <<<; free -h; df -h; cat /proc/cpuinfo. 		echo ""Killed"" >&2; 		bedtools intersect nothing with nothing; 	>>>; 	; 	runtime {; 		cpu: ""1""; 		memory: ""1 GB""; 		maxRetries: 4; 		continueOnReturnCode: 0; 	}; }. My.conf:. include required(classpath(""application"")). system {; memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; }. backend {; default = PAPIv2. providers {; PAPIv2 {; actor-factory = ""cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"". system {; memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; }; config {; project = ""$my_project""; root = ""$my_bucket""; name-for-call-caching-purposes: PAPI; slow-job-warning-time: 24 hours; genomics-api-queries-per-100-seconds = 1000; maximum-polling-interval = 600. # Setup GCP to give more memory with each retry; system {; memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; }; system.memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; memory_retry_multiplier = 4; ; # Number of workers to assign to PAPI requests; request-workers = 3. virtual-private-cloud {; network-label-key = ""network-key""; network-name = ""network-name""; subnetwork-name = ""subnetwork-name""; auth = ""auth""; }; pipeline-timeout = 7 days; genomics {; auth = ""auth""; comp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7451:417,Test,TestOutOfMemoryRetry,417,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7451,4,['Test'],"['TestBadCommandRetry', 'TestOutOfMemoryRetry']"
Testability,We currently do not have automated CWL testing in Centaur. this puts us at risk for regressions. Start w/ ; * 1st-workflow.cwl; * three_step.cwl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2835:39,test,testing,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2835,1,['test'],['testing']
Testability,"We get noisy messages in our logs that seem to come from [this line of code](https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/core/azure-core/src/main/java/com/azure/core/util/serializer/SerializerEncoding.java#L62) in the Azure SDK.; ```; 2023-02-17 16:30:13 reactor-http-nio-2 WARN - 'Content-Type' not found. Returning default encoding: JSON; ```; Searching for the error, I found [an issue](https://github.com/Azure/azure-sdk-for-java/issues/32250) and [fix PR](https://github.com/Azure/azure-sdk-for-java/pull/32833) mentioning it (in rhyming but not identical circumstances). I confirmed that going from `1.7.1` to `1.10.2` brings in the improved handling by examining the copy of `HttpResponseBodyDecoder.java` that SBT downloads.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7088:29,log,logs,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7088,1,['log'],['logs']
Testability,"We had a regression in the copy workflow logs actor which would have been caught by exercising this in centaur. . Test `final_workflow_log_dir`, `final_call_logs_dir`, `final_workflow_outputs_dir`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1877:41,log,logs,41,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1877,2,"['Test', 'log']","['Test', 'logs']"
Testability,"We had a situation where develop was broken (grab commit 0ff86c409d2e5dac4b766fceb89f47ba3c304f99). If you run ""sbt test"" it fails with a compilation error about HtCondorInitializationActorSpec.scala. However, Travis for this is green. Travis is running:. sbt -Dbackend.providers.Local.config.filesystems.local.localization.0=copy clean coverage nointegration:test coverageReport && sbt coverageAggregate && sbt assembly. Which if you run it locally yields a successful test. First thought was that it was because this test was flagged as ""nointegration"" but that's not even the case. However even if it were, we should be checking that things compile even if we don't run a certain class of tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/888:116,test,test,116,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/888,5,['test'],"['test', 'tests']"
Testability,"We have a cromwell task that failed with the unhelpful error message: `Unexpected failure in EJEA (root cause not captured).` After investigation we found that the task was being killed by the google cloud compute system:; ```; ""error"": {; ""code"": 1,; ""message"": ""Operation canceled at 2017-07-23T01:01:39-07:00 because it is older than 6 days""; },; ```; It would be better if cromwell was able to report this error directly, so we don't have to look at the gcloud operations properties. Looking at the cromwell logs I see this sequence:; ```; 2017-07-23 08:09:42 [cromwell-system-akka.actor.default-dispatcher-3449] WARN c.e.w.l.e.WorkflowExecutionActor - WorkflowExecutionActor-f15009ab-b5bc-47ac-b832-3d0ae2f15888 [UUID(f15009ab)]: WorkflowExecutionActor [UUID(f15009ab)] received an unhandled message: AbortedResponse(PairedEndSingleSampleWorkflow.MarkDuplicates:-1:1) in state: WorkflowExecutionInProgressState; 2017-07-23 08:09:47 [cromwell-system-akka.actor.default-dispatcher-3375] ERROR c.e.workflow.WorkflowManagerActor - WorkflowManagerActor Workflow f15009ab-b5bc-47ac-b832-3d0ae2f15888 failed (during ExecutingWorkflowState): Unexpected failure in EJEA (root cause not captured).; ```. In this case the google operations ID is `EOjNtPvUKxiOgeqc763--TEgn6KQ6Z4NKg9wcm9kdWN0aW9uUXVldWU`. I can provide more operations IDs if necessary.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2496:512,log,logs,512,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2496,1,['log'],['logs']
Testability,"We have a workflow that scatters 95 wide as its first step. When running with `read_from_cache=false` the workflow chugs along normally. When we allow the same workflow to read from the cache, Cromwell seems to lock up after the first handful of cache hits(~30). Cromwell will stop responding to api requests and after some time with logs being written the workflow that was getting the cache hits will hit 503 and timeout errors. When running the workflow with `read_from_cache=false` we run into none of these errors. Timeout Error. ```; 2016-05-05 17:37:02,285 cromwell-system-akka.actor.default-dispatcher-25 WARN - Configured registration timeout of 1 second expired, stoppingw; ```. 503 Error. ```; Exception occurred while attempting to copy outputs from gs://broad-gotc-dev-storage/cromwell_execution/JointGenotyping/ccba2c79-c998-4f03-b736-af097391db66/call-SplitGvcf/shard-50 to gs://broad-gotc-dev-storage/cromwell_execution/JointGenotyping/7164dc88-af61-4ea6-8a73-f0b79594ae9a/call-SplitGvcf/shard-50. com.google.api.client.googleapis.json.GoogleJsonResponseException: 503 Service Unavailable. {. ""code"" : 503,. ""errors"" : [ {. ""domain"" : ""global"",. ""message"" : ""Backend Error"",. ""reason"" : ""backendError"". } ],. ""message"" : ""Backend Error"". }. at com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:145) ~[cromwell.jar:0.19]. at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113) ~[cromwell.jar:0.19]. at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40) ~[cromwell.jar:0.19]. at com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321) ~[cromwell.jar:0.19]. at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1056) ~[cromwell.jar:0.19]. at com.google.api.client.google",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/794:334,log,logs,334,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/794,1,['log'],['logs']
Testability,"We have several cromwell jobs that appear to be running, but are done with a task that should have been recognized as complete. An example is f86ff9ef-ea1c-47f3-a513-8d6311a27c7b - running on gotc prod; https://cromwell.gotc-prod.broadinstitute.org/api/workflows/v1/f86ff9ef-ea1c-47f3-a513-8d6311a27c7b/metadata; The workflow was launched on May 15 and ran normally until; A task - 'ValidateAggregatedSamFile' was preempted. A retry was then attempted, and that retry is stuck in status 'Running' although the job appeared to have executed correctly:; see expected/normal output in:; https://console.cloud.google.com/storage/browser/broad-gotc-prod-storage/cromwell_execution/PairedEndSingleSampleWorkflow/f86ff9ef-ea1c-47f3-a513-8d6311a27c7b/call-ValidateAggregatedSamFile/. Looking at the logs on gotc-cromwell-prod201 (/local/cromwell_logs/20160516-cromwell.log). It looks like the retried job never switched to 'Initializing' (the log says it was changing the jobs status but the database does not reflect that); i.e. this line:; 2016-05-16 20:17:22,463 cromwell-system-akka.actor.default-dispatcher-22 INFO - JES Run [UUID(f86ff9ef):ValidateAggregatedSamFile:2]: JES Run ID is operations/EPaL3dnLKhiY9KCP1rC04ekBIJ-ikOmeDSoPcHJvZHVjdGlvblF1ZXVl; 2016-05-16 20:17:22,484 cromwell-system-akka.actor.default-dispatcher-17 INFO - JES Run [UUID(f86ff9ef):ValidateAggregatedSamFile:2]: Status change from - to Initializing. But the database says the job is still 'Running'.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/904:791,log,logs,791,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/904,3,['log'],"['log', 'logs']"
Testability,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1978:157,test,test,157,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978,4,"['log', 'test']","['logs', 'test']"
Testability,We now invoke run mode from the command line instead of testing the actor in a special (and flakey) test harness.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5147:56,test,testing,56,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5147,2,['test'],"['test', 'testing']"
Testability,"We saw during JG testing that a stray non-`lazy` instance variable in `JesAsyncBackendJobExecutionActor` led to an exception being thrown during `<init>`. This exception wasn't handled by any supervisor nor by JABJEA itself, so the JABJEA (and possibly `JesJobExecutionActor` and other actors) simply crashed. The net result was the `WorkflowExecutionActor` stayed `Running` forever, waiting for a terminal job message that would never come.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1435:17,test,testing,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1435,1,['test'],['testing']
Testability,We should be able to grab the principal ID from the HTTP header via the apache proxy. Get this info from DevOps and demonstrate capability to grab this in the HTTP code. I suspect the easiest path here would be to talk to some folks in firecloud on how to handle this for testing and such when the proxy is not available,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2132:272,test,testing,272,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2132,1,['test'],['testing']
Testability,"We want to run green workflows with slimmed down inputs to make sure we haven't broken any of the features they currently use with our changes. First try will be with using Travis and probably moving to Jenkins if it can't be done. This test could be run nightly/weekly, discuss with the team once things are set up.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2336:237,test,test,237,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2336,1,['test'],['test']
Testability,"We want to run green workflows with slimmed down inputs to make sure we haven't broken any of the features they currently use with our changes. The easiest first step would be to make this a part of the Tyburn daily test we already have on Jenkins. This test should probably run weekly, discuss with the team once things are set up.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2337:216,test,test,216,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2337,2,['test'],['test']
Testability,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1937:94,test,testing,94,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937,1,['test'],['testing']
Testability,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1910:656,log,logged,656,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910,1,['log'],['logged']
Testability,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1912:646,log,logged,646,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912,1,['log'],['logged']
Testability,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1955:694,test,tested,694,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955,1,['test'],['tested']
Testability,"We're soon to have a staging environment for CaaS, which is great for multiple reasons - including we said that we wanted a staging environment to help test upgrading versions of Cromwell. It'd be great to be able to point Centaur at this Cromwell (at least prior to release) but I don't believe Centaur will be able to do that due to auth reasons. . NB: It's possible that we might be able to point centaur directly at the underlying Cromwell server which would be a Good Enough For Now thing (depending on when this is picked up), worth exploring",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2903:152,test,test,152,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2903,1,['test'],['test']
Testability,We've seen a few times the IO error `Failed to evaluate job outputs [...] Futures timed out after [10 seconds]` in tests. I hypothesize that file read times from buckets may suffer from occasional outliers due to 🌩. I know this is the right timeout to change thanks to [this branch](https://github.com/broadinstitute/cromwell/compare/aen_make_it_timeout?expand=1) where I induced error `Failed to evaluate job outputs [...] Futures timed out after [10 microseconds]`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4036:115,test,tests,115,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4036,1,['test'],['tests']
Testability,We've seen in centaur local testing that we fail at times because cromwell is reading an output file before all of its contents has been written and we have no way to detect this (except via the artificial expectation management of centaur). There was some handwaving about filesystems and putting in sleeps but both of these seem like the wrong path. @kcibul this seems like this could go under the reliability umbrella?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1868:28,test,testing,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1868,1,['test'],['testing']
Testability,"Wee PR that fixes a conformance test. This turns on quoting around `StringCommandPart`s which still isn't 100% right since it doesn't pay attention to `shellQuote` and also doesn't turn on quoting for any other command part. But quoting on is the default CWL behavior and this does allow more conformance tests to pass (one here, more in the next PR).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3147:32,test,test,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3147,2,['test'],"['test', 'tests']"
Testability,"What I started to get from time to time is that some jobs keep running forever while no files are created in its executions folder (incl. technical files like script and script.submit). If happens (althoug not deterministically, I cannot get 100% reproducibility) in the latest versions (like cromwell-31-d84be2e-SNAP.jar) of cromwell when I have folders as File inputs for both workflow and tasks.; When I looked into cromwell logs I noticed:; ```; [ERROR] [03/09/2018 00:55:25.108] [cromwell-system-akka.dispatchers.engine-dispatcher-27] [akka://cromwell-system/user/cromwell-service/WorkflowManager; Mar 09 00:55:25 web start-cromwell.sh[110916]: java.io.IOException: Is a directory; Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.FileDispatcherImpl.read0(Native Method); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.FileDispatcherImpl.read(FileDispatcherImpl.java:46); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.IOUtil.read(IOUtil.java:197); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:159); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109); Mar 09 00:55:25 web start-cromwell.sh[110916]: at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103); Mar 09 00:55:25 web start-cromwell.sh[110916]: at org.apache.commons.codec.digest.DigestUtils.updateDigest(DigestUtils.java:794); Mar 09 00:55:25 web start-cromwell.sh[110916]: at org.apache.commons.codec.digest.DigestUtils.digest(DigestUtils.java:50); Mar 09 00:55:25 web start-cromwell.sh[110916]: at org.apache.commons.codec.digest.DigestUtils.md5(DigestUtils.java:274); Mar 09 00:55:25 web start-cromwell.sh[110916]: at org.apache.commons.code",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3383:428,log,logs,428,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3383,1,['log'],['logs']
Testability,"What do you mean ""metricable"" isn't a word?. \<looks quickly on google\>. ... ""I am **not** using [Metrizable](https://www.yourdictionary.com/metrizable)...!"". ---. Additional commentary and/or things worth sanity checking me on:. * We lose ""root workflow ID"" and ""bucket"" from the log message.; * We gain task name and hog group in the metric path.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5470:282,log,log,282,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5470,1,['log'],['log']
Testability,"What it would look like if #1149 were satisfied. We do have real restart testing now, and the rest is all call caching tests; I'm looking over what we for that over in Centaur-land.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2566:73,test,testing,73,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2566,2,['test'],"['testing', 'tests']"
Testability,What to expect:; - Add labels through a new endpoint; - stop storing jes labels in metadata/custom_labels table; - stop publishing custom labels to jes metadata. - [x] Update Swagger; - [x] Update Readme; - [x] Update Changelog; - [x] More tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2357:240,test,tests,240,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2357,1,['test'],['tests']
Testability,"What's happening here is that we're breaking the command on newlines, specifically `[\r\n]+` and then reassembling the pieces with `.mkString("""")` effectively removing all newlines from a user's command. This not a problem for one line commands and also many multi-line commands, but it is a problem for commands that are whitespace dependent (see the test case for an example).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/132:352,test,test,352,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/132,1,['test'],['test']
Testability,What's not there yet:; - Private dockerhub; - ~~GPU support~~. Everything else should work ~~once the resilience fix for dockerhub is deployed in PAPI.~~. 95% of the relevant code of this PR is in the `cromwell.backend.google.pipelines.v2alpha1` package. The 5% left is due to refactoring to better isolate what is V1 logic and V2 logic.; The rest is noise due to renaming JES stuff to PAPI stuff.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3583:318,log,logic,318,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3583,2,['log'],['logic']
Testability,"When Cromwell is configured with `workflow-log-temporary: false` and workflow does not specify `final_workflow_log_dir`, Cromwell server does not close the log file. ; When `final_workflow_log_dir` is specified the original log file is correctly closed and copied. ; In my case, this prevents blobfuse (waits for the file to be closed) from transferring the log files to Azure storage. . Looking at the code, there is no call to `workflowLogger.close() `or `workflowLogger.close(andDelete = false)` unless the file is being copied. . Probably this line in WorkflowActor.scala:; `case None if WorkflowLogger.isTemporary => workflowLogger.close(andDelete = true)` ; needs to change to:; `case None => workflowLogger.close(andDelete = WorkflowLogger.isTemporary)`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4826:43,log,log-temporary,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4826,4,['log'],"['log', 'log-temporary']"
Testability,"When Cromwell is finding a successful call cache hit, it is failing to copy the file even though the user has access to it. This causes the workflow to be rerun rather than copying the cached results. . Inside Failures you can see the following error:; ```[Attempted 1 time(s)] - HttpResponseException: 400 Bad Request { ""error"": { ""errors"": [ { ""domain"": ""global"", ""reason"": ""required"", ""message"": ""Bucket is requester pays bucket but no user project provided."" } ], ""code"": 400, ""message"": ""Bucket is requester pays bucket but no user project provided."" } }```. https://portal.firecloud.org/#workspaces/dvoet-prod-test-20190305-3/dvoet_tutorial_requester_pays/monitor/9d516b3c-5b7f-4241-9929-99b54ef7e7e1/102e99b1-26b2-4bf4-80ec-fcc02c32136d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4756:616,test,test-,616,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4756,1,['test'],['test-']
Testability,"When Cromwell returns the name for the docker container, there are often non compliant characters for the unix filesystem ('/', '@', ':'). When pulling and rebuilding the container, replace non alphabetical, numerical or some symbols (`[A-Za-z0-9._-]`) with an underscore (`_`). And ensure that Singularity isn't constantly rebuilding containers with no reason. Even if this doesn't get merged, I think it could potentially be valuable for someone. Basically, I just added these three lines to the `docker-submit` script for SLURM (applicable for all batch systems). It might be valuable to change `-f` to `-x`, to check if a file is executable by you (`help test`). ```bash; DOCKER_NAME=$(sed -e 's/[^A-Za-z0-9._-]/_/g' <<< ${docker}); IMAGE=${cwd}/$DOCKER_NAME.sif; if [ ! -f $IMAGE ]; then; singularity pull $IMAGE docker://${docker}; fi; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4797:659,test,test,659,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4797,1,['test'],['test']
Testability,"When I run logs API on workflow that failed before execution (for instance, when wdl file was damaged) and query for its logs I do not see ""calls"" field. I think it will be good just to give empty ; ```; ""calls"": {}; ```; field instead of omitting it at all.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2917:11,log,logs,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2917,2,['log'],['logs']
Testability,"When I try to use tabs as whitespace in cromwell I'm getting a error:; ```; [2018-08-29 09:25:20,10] [error] WorkflowManagerActor Workflow 1ed0e19c-fa18-4241-8f6b-0b72e181f59a failed (during MaterializingWorkflowDescriptorState): cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; Boxed Error; ```. The specs say this should be possible, 0x9 == tab:; https://github.com/openwdl/wdl/blob/master/versions/1.0/SPEC.md#whitespace-strings-identifiers-constants. I have tested cromwell 34 and the current develop branch (ce27a93). wdl file that I used (replaced '\t' with '\<tab\>'); ```; version 1.0. workflow Test {; <tab>input {; <tab><tab>; <tab>}. <tab>call Echo as echo {; <tab>input:; <tab>}. <tab>output {; <tab>}; }. task Echo {; <tab>input {; <tab>}. <tab>command {; <tab><tab>kill -9 $$; <tab><tab>echo test; <tab>}. <tab>output {; <tab>}; }; ```. Full stacktrace:; ```; [2018-08-29 09:25:20,10] [error] WorkflowManagerActor Workflow 1ed0e19c-fa18-4241-8f6b-0b72e181f59a failed (during MaterializingWorkflowDescriptorState): cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anon$1: Workflow input processing failed:; Boxed Error; scala.concurrent.impl.Promise$.resolver(Promise.scala:83); scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolveTry(Promise.scala:75); scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:280); scala.concurrent.Promise.complete(Promise.scala:49); scala.concurrent.Promise.complete$(Promise.scala:48); scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183); scala.concurrent.Promise.failure(Promise.scala:100); scala.concurrent.Promise.failure$(Promise.scala:100); scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183); cats.effect.IO.$anonfun$unsafeToFuture$2(IO.scala:341); scala.util.Either.fold(Either.scala:189); cats.effect.IO.$anonfun$unsafeToFuture$1(IO.scala:341); cats.e",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4051:543,test,tested,543,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4051,3,"['Test', 'test']","['Test', 'test', 'tested']"
Testability,"When I use Cromwell to create a task, the output log shows that I have submitted the task and there is a UUID, but I cannot find the corresponding file in the local file system. Using the REST API, the task is shown as completed, but sometimes the same data appears and sometimes it does not. What could be causing this? I want them all to be generated in the local directory. There is enough space on the local hard disk. Here are some relevant images:. ![微信截图_20230413113314](https://user-images.githubusercontent.com/18135396/231642190-252a04dc-4889-4c02-b756-0f27e96996d3.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7119:49,log,log,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7119,1,['log'],['log']
Testability,"When a step in a workflow fails, you can go read the `stderr` file for logs which are very informative. Cromwell also logs useful information to stdout. But checking the `/metadata` API endpoint always gives the same message: ; ```; ""executionStatus"": ""Failed"",; ""failures"": [; {; ""causedBy"": [],; ""message"": ""Job rna.kallisto:0:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.""; }; ],; ```. It only tells you that the return code was not registered, not a clue into what might have caused the error. Could this be improved?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4856:71,log,logs,71,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4856,2,['log'],['logs']
Testability,"When a workflow fails and jobs were in flight, some `IssuePollRequest` and `RunStatus` messages end up in the dead letters mailbox and are logged as such.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2212:139,log,logged,139,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2212,1,['log'],['logged']
Testability,"When having a tool that sometimes creates a group of files or not (depending on the data sometimes even) a optional struct in the output would be nice to have. As a user This is nice to have but as a developer I also see some issues here. For me best combination would be to to create Some(file) when all files are existing, a None when all files are not existing and still raise an error when 1 File is found but an other is not found.; Of course this only count for required files in the structs, optional files inside the structs already works. . Example below does not work on version d9b9262; ```; version 1.0. workflow Test {; input {; }. call Echo as echo. output {; Out? bla2 = echo.s; }; }. task Echo {; input {; }. command {; echo bla; }. output {; Out? s = object {; file: ""some_none_existing_file"",; index: ""some_none_existing_index""; }; }; }. struct Out {; File f; }; ```. error:; ```; [2018-09-18 11:11:06,16] [error] WorkflowManagerActor Workflow 1beb17d5-1c5d-489b-9750-6c54d17a77de failed (during ExecutingWorkflowState): java.io.FileNotFoundException: Could not process output, file not found: /home/pjvan_thof/src/all-pipelines/cromwell-executions/Test/1beb17d5-1c5d-489b-9750-6c54d17a77de/call-echo/execution/some_none_existing_file; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4111:625,Test,Test,625,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4111,2,['Test'],['Test']
Testability,"When running [this workflow step](https://github.com/genome/cancer-genomics-workflow/blob/c5eabd41d5cba375bec79eaffed97c80ab24babb/umi_alignment/extract_umis.cwl#L22), the constructed command-line was different than expected for the `--read-structure` parameter. This short CWL demonstrates:. `test.cwl`:; ```cwl; #!/usr/bin/env cwl-runner; cwlVersion: v1.0; class: CommandLineTool; baseCommand: ['/bin/echo']; stdout: ""hello.txt""; inputs:; bonus:; type: string[]; inputBinding:; prefix: ""--bonus""; outputs:; hello:; type: stdout; ```; `test.yml`:; ```yml; bonus: [""first"", ""second""]; ```. Running with `cwltool test.cwl test.yml` yields:; `hello.txt`:; ```; --bonus first second; ```; Running with `/usr/bin/java -jar cromwell-32-0c557ab-SNAP.jar run -t cwl -i test.yml test.cwl` yields:; `cromwell-executions/test.cwl/6817868a-76e6-48b6-8702-4fe456b23277/call-test.cwl/execution/hello.txt`:; ```; --bonus --bonus first --bonus second; ```. The result from `cwltool` is what I would expect based on the `filesA` example in [this user guide](http://www.commonwl.org/user_guide/09-array-inputs/).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3589:294,test,test,294,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3589,8,['test'],['test']
Testability,When running on the BCS backend a dir called tmp should not be present within the execution directory. The BCS backend currently runs directly on the VM without docker. Thus this issue may or may not be a problem when running on the BCS backend with docker. A/C:; - Restore the test `tmp_dir` in `testCentaurBcs.sh`; - If the BCS backend is allowed to run with & without docker ensure there are centaur tests for both cases,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3524:278,test,test,278,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3524,3,['test'],"['test', 'testCentaurBcs', 'tests']"
Testability,"When running workflow below I would expect to able to use this value:; `Test.test2.Echo.text`. But cromwell / womtools does use this value:; `Test.test2.Test2.Echo.text`. There is a double nested value there. Does not seems to be happening or was this intended?. tested version: d9b9262. test.wdl; ```; version 1.0. import ""test2.wdl"" as test2. workflow Test {; input {; }. call test2.Test2 as test2 {; input:; }. output {; }; }; ```. test2.wdl; ```; version 1.0. workflow Test2 {; input {; }. call Echo {; input:; }. output {; }; }. task Echo {; input {; String? text; }. command {; echo ~{text}; }. output {; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4079:72,Test,Test,72,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4079,5,"['Test', 'test']","['Test', 'test', 'tested']"
Testability,"When switching to the last version of WDL4s, one noticeable change is that a task cannot share its name with the workflow name. I realized that there are close to a dozen ""hello world"" WDLs in the test suite scattered across projects but also duplicated within the same project. This probable is somehow close to the idea of having a canonical test suite for backends that we talked about before.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1581:197,test,test,197,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1581,2,['test'],['test']
Testability,"When testing our workflow, we are seeing variations in some calculations based on the cpu architecture chosen for a VM. In PAPI V1, we worked around this issue by restricting the test to only run in a single region. This caused the same cpu to be used for all of the affected tests, and we were able to easily validate the workflow output. Now that we are testing the workflow under PAPI V2, we are running into the same issue, and setting the region no longer fixes the issue. It looks like the `minCpuPlatform` pipelines API setting would be sufficient for this. See [Specifying a Minimum CPU Platform for VM Instances](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform). Does this sound like a reasonable feature to add to cromwell's PAPI V2 support?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4608:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4608,4,['test'],"['test', 'testing', 'tests']"
Testability,"When testing out a change to a CWL workflow I ran into a RuntimeException:; ```; java.lang.RuntimeException: Unhandled CwlExpressionCommandPart value 'WomCoproductValue(WomCoproductType(NonEmptyList(WomStringType, WomIntegerType)),WomString(42))' of type Coproduct[String, Int]; ```; This simple CWL file will reproduce the error:; ```cwl; #!/usr/bin/env cwl-runner. cwlVersion: v1.0; class: CommandLineTool. baseCommand: [""/bin/echo""]; arguments: [""I got this value:""]; stdout: response.txt; inputs:; value:; type:; - string; - int; - ""null""; inputBinding:; position: 1; outputs:; response:; type: stdout; ```; with an appropriate input YAML, e.g.:; ```yaml; value: 42; ```. The first commit in this PR was enough to get past that error; however, there was another issue if one of the possible types was instead a `File`. The file did not appear to be getting localized. So, a second example:. ```cwl; #!/usr/bin/env cwl-runner. cwlVersion: v1.0; class: CommandLineTool. baseCommand: [""/bin/echo""]; arguments: [""I got this value:""]; stdout: response.txt; inputs:; value:; type:; - string; - File; - ""null""; secondaryFiles: [.fai, .ann, .index]; inputBinding:; position: 1; outputs:; response:; type: stdout; ```. The second commit to this PR addresses that issue. (Without this commit Cromwell did not crash when run locally without Docker, but did crash with an `IllegalArgumentException` from calling `subpath` with an invalid range [here](https://github.com/broadinstitute/cromwell/blob/384f0b8f22399342705dc43ab9dac2d6b16bbf3b/backend/src/main/scala/cromwell/backend/io/JobPathsWithDocker.scala#L57) with Docker.). These changes were enough to get my workflow running, but I'm not sure if there are other changes that should be made to properly handle `WomCoproductValue`. (For instance, I have not tried it in GCP yet.)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5143:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5143,1,['test'],['testing']
Testability,"When testing/adapting production WDLs for public use, I often run into the problem that some of the input files are in private buckets. Because there are many input files, it's tedious to check all of them. So I tend to miss one or two that eventually make my workflows fail, often in late stages of the workflow. This can also happen if you get something wrong in a file path (typo, forgot a subdirectory etc). . It would be incredibly helpful if there was an option to have Cromwell check that all the external input files (specified with full paths to eg a gs:// bucket) are available and reachable (meaning we have permission to read them) before kicking off the actual workflow, and fail with an informative error if it's not the case. This would save a fair amount of iteration on large workflows with many external inputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2163:5,test,testing,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2163,1,['test'],['testing']
Testability,"When the workflow logs are copied over from a bucket to an RP-enabled bucket, Cromwell fails to do the operation today and returns the error:; <img width=""1261"" alt=""Screen Shot 2019-03-25 at 12 57 13 PM"" src=""https://user-images.githubusercontent.com/14941133/54967379-ceac8680-4f4d-11e9-9f2a-3c2b0edab7f6.png"">. AC: Correct and incorporate the workflow log copying behavior to retry such failures with the defined google project.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4770:18,log,logs,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4770,2,['log'],"['log', 'logs']"
Testability,"When the workflow-restart config option is set to false, incomplete workflows will not be restarted, and instead all incomplete workflows are aborted. . Note: Still need to update ReadMe. Questions: The sys.addShutdownHook takes about a minute to start startup (there's a minute long wait between the logs) which seems too long?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/841:301,log,logs,301,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/841,1,['log'],['logs']
Testability,"When there are a lot (~1800 or as many as 3000) of cache hits in a workflow, timeouts or other errors talking to Google often occur (probably can all be fixed with added retries). Impact: High. Prevents us from using call caching for 20k sample sets, which in turn requires us to manually stitch together outputs from multiple workflows to gather all the successes together, which is prone to error. When it is feasible to use, this problem still often requires us to repeatedly relaunch the same workflow, duplicating the data many times. This can be tested by the same WDL used to verify #1185",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1444:552,test,tested,552,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1444,1,['test'],['tested']
Testability,"When trying one of our new CWL workflow steps in Cromwell, we're encountering an unexpected error with an optional output when that output isn't present:; ```; Bad output 'test.cwl.not_found': No coercion defined from wom value(s) '[]' of type 'Array[Nothing]' to 'class wom.types.WomMaybePopulatedFileType$?'.; ```; This only seems to occur when the `glob` in the outputBinding contains a `*`. A small test case (run with `/usr/bin/java -jar cromwell-34.jar run -t cwl -i test.yml test.cwl` demonstrates this:; #### test.cwl; ```yaml; #!/usr/bin/env cwl-runner; cwlVersion: v1.0; class: CommandLineTool; requirements:; - class: ShellCommandRequirement; baseCommand: ['/bin/echo', ""this is a""]; arguments: [; { valueFrom: '>', shellQuote: false },; 'some_output.txt'; ]; inputs:; bonus:; type: string; inputBinding:; position: -1; outputs:; found:; type: File; outputBinding:; glob: '*output.txt'; not_found:; type: File?; outputBinding:; glob: '*extra.txt'; ```; #### test.yaml; ```yaml; bonus: ""test""; ```. `cwltool` handles this case as expected:; ```; $ cwltool test.cwl test.yml; /usr/local/bin/cwltool 1.0.20170822192924; Resolved 'test.cwl' to 'file:///home/tmooney/cromwell_test/glob/test.cwl'; [job test.cwl] /tmp/tmpqeLl9_$ /bin/sh \; -c \; '/bin/echo' 'this is a' 'test' > 'some_output.txt'; [job test.cwl] completed success; {; ""found"": {; ""checksum"": ""sha1$6476df3aac780622368173fe6e768a2edc3932c8"", ; ""basename"": ""some_output.txt"", ; ""nameext"": "".txt"", ; ""nameroot"": ""some_output"", ; ""location"": ""file:///home/tmooney/cromwell_test/glob/some_output.txt"", ; ""path"": ""/home/tmooney/cromwell_test/glob/some_output.txt"", ; ""class"": ""File"", ; ""size"": 15; }, ; ""not_found"": null; }; Final process status is success; ```. Cromwell fails with this error:; ```; [2018-08-14 16:14:05,89] [info] MaterializeWorkflowDescriptorActor [a3d3e011]: Parsing workflow as CWL v1.0; [2018-08-14 16:14:07,03] [info] MaterializeWorkflowDescriptorActor [a3d3e011]: Call-to-Backend assignments: test.cwl -> Local",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4004:172,test,test,172,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4004,7,['test'],['test']
Testability,"When trying to run a workflow locally with docker containers, I found that sometime (not always, and depends on the context, and not always in the same part of the pipeline) there is an error about time out operation. It looks that some tasks that take longer does not get a response for the container (although it is still running) and thus cromwell assumes a failure (because docker returns -1 although it is still running) and the workflow finishes with errors. In the logs for the task, embedded into the standard error from the operations, I get the following signature:. ```; time=""2018-03-07T14:17:55+01:00"" level=error msg=""error waiting for container: read tcp 192.168.99.1:56961->192.168.99.101:2376: read: operation timed out""; ```. And the `rc` file is marked with `-1`. I cannot continue on this return code, because the task is still running on the container and continuing assumes that the operation is finished. My local configuration file looks like this:. ```; include required(classpath(""application"")). ## keep always the workflow logs; workflow-options.workflow-log-temporary: false. backend.providers.Local.config {; ## limit the number of jobs; concurrent-job-limit = 10; filesystems.local {; ## do not allow copy (huge files); ## prefer hard-links; localization: [""hard-link"", ""soft-link""]; caching.duplication-strategy: [""hard-link"", ""soft-link""]; }; }; ```. And the cromwell command is (using a `brew` installed wrapper):. ```bash; JAVA_OPTS=""-Dconfig.file=local.conf"" cromwell run --inputs inputs.json --metadata-output metadata-output.json workflow.wdl; ```. This error is happening for different workflows and tasks, so it is very difficult to account for it. In addition, a long-run workflow stops for this and requires a retry of the whole pipeline in my system, so it is really a problem when trying to run a time-consuming workflow that requires re-start for non-real failures. Is there any way that the local backend (or any backend) catch the docker timeout failures",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3370:472,log,logs,472,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3370,1,['log'],['logs']
Testability,"When using Pipelines API v2 on Cromwell v38 -- it seems like if localization fails, Cromwell tries to delocalize files and then prints an error message (printed below) that is essentially impossible to debug. AC:; 1. Upon localization failure, Cromwell shouldn't run any other actions.; 2. Upon localization failure, the error message returned should print the *file* that couldn't be localized and the error message it failed with. Along with a link to the log for this job. ```Task depthOfCoverageTest.depthOfCov:NA:1 failed. The job was stopped before the command finished. PAPI error code 9. Execution failed: while running ""/bin/sh -c python -c 'import base64; print(base64.b64decode(\""IyEvYmluL2Jhc2gKCmZvciBpIGluICQoc2VxIDMpOyBkbwogICgKICAgIHJtIC1mICRIT01FLy5jb25maWcvZ2Nsb3VkL2djZSAmJiBnc3V0aWwgIGNwIGdzOi8vZmMtZjExMDcxOTktNGQwMi00Y2E0LWJlZGYtOTA3MDkyZDUxMzMyL2NnYWV4dC9zdTJjL3VrX2djdC9fRUdBUjAwMDAxMjg4NjM0X0VHQVMwMDAwMTAwMTA4NF9MNjc1Ml9nYXRrMi5iYWkgL2Nyb213ZWxsX3Jvb3QvZmMtZjExMDcxOTktNGQwMi00Y2E0LWJlZGYtOTA3MDkyZDUxMzMyL2NnYWV4dC9zdTJjL3VrX2djdC9fRUdBUjAwMDAxMjg4NjM0X0VHQVMwMDAwMTAwMTA4NF9MNjc1Ml9nYXRrMi5iYWkgPiBnc3V0aWxfb3V0cHV0LnR4dCAyPiYxCiMgUmVjb3JkIHRoZSBleGl0IGNvZGUgb2YgdGhlIGdzdXRpbCBjb21tYW5kIHdpdGhvdXQgcHJvamVjdCBmbGFnClJDX0dTVVRJTD0kPwppZiBbICIkUkNfR1NVVElMIiAhPSAiMCIgXTsgdGhlbgogIHByaW50ZiAnJXMgJXNcbicgIiQoZGF0ZSAtdSAnKyVZLyVtLyVkICVIOiVNOiVTJykiIHJtXCAtZlwgXCRIT01FLy5jb25maWcvZ2Nsb3VkL2djZVwgXCZcJlwgZ3N1dGlsXCBcIGNwXCBnczovL2ZjLWYxMTA3MTk5LTRkMDItNGNhNC1iZWRmLTkwNzA5MmQ1MTMzMi9jZ2FleHQvc3UyYy91a19nY3QvX0VHQVIwMDAwMTI4ODYzNF9FR0FTMDAwMDEwMDEwODRfTDY3NTJfZ2F0azIuYmFpXCAvY3JvbXdlbGxfcm9vdC9mYy1mMTEwNzE5OS00ZDAyLTRjYTQtYmVkZi05MDcwOTJkNTEzMzIvY2dhZXh0L3N1MmMvdWtfZ2N0L19FR0FSMDAwMDEyODg2MzRfRUdBUzAwMDAxMDAxMDg0X0w2NzUyX2dhdGsyLmJhaVwgZmFpbGVkCiAgIyBQcmludCB0aGUgcmVhc29uIG9mIHRoZSBmYWlsdXJlCiAgY2F0IGdzdXRpbF9vdXRwdXQudHh0CgogICMgQ2hlY2sgaWYgaXQgbWF0Y2hlcyB0aGUgQnVja2V0SXNSZXF1ZXN0ZXJQYXlzRXJyb3JNZXNzYWdlCiAgaWYgZ3JlcCAtcSAiQnVja2V0IGlzIHJlcXVlc3RlciBwYXlzIGJ1Y2tldC",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4809:458,log,log,458,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4809,1,['log'],['log']
Testability,"When using `TestKit`, there is a [note](https://github.com/akka/akka/blob/v2.3.12/akka-testkit/src/main/scala/akka/testkit/TestKit.scala#L705-L706):. > the ActorSystem passed into the constructor needs to be shutdown, otherwise thread pools and memory will be leaked. We have dozens of specs that use an `ActorSystem`, but recently in PBE specs have not been cleaning up after themselves. It's possible that this is the reason we suddenly need 2GB of memory to run tests.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/906:12,Test,TestKit,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/906,5,"['Test', 'test']","['TestKit', 'testkit', 'tests']"
Testability,"When using a TES backend, Cromwell will now include two additional paths in the call metadata. These paths point to log files that Azure TES creates during call execution.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7210:116,log,log,116,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7210,1,['log'],['log']
Testability,"When using call-caching using a MySQL database, one of my jobs gets incorrectly rerun. It finishes successfully on the first run, and it's output isn't deleted or changed afterwards.; This happens in the `samtoolsIndex` call in this workflow: https://github.com/biowdl/aligning/tree/BIOWDL-25 which is run as a subworkflow of this one: https://github.com/biowdl/RNA-seq. I noticed that the command which is run on the rerun is different from the one during the initial run.; The initial run produces this command:; ```; samtools index /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/257197fe-a034-4c51-addc-3dc47564b967/call-sample/shard-0/sample/0e4e2e8d-d042-4907-9fb5-1d4f894f8366/call-library/shard-0/library/d995de1f-ecc6-4034-b35b-a860506821ff/call-starAlignment/AlignStar/d339740c-c1be-44ae-b4dd-8db2b47237c7/call-samtoolsIndex/inputs/exports/sasc/biowdl-testing/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam /exports/sasc/biowdl-testing/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam.bai; ```; The rerun uses this:; ```; samtools index /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-samtoolsIndex/inputs/exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-star/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3717:556,test,testing,556,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3717,2,['test'],['testing']
Testability,"When using write_lines() on an Array[File] object, the paths in the resulting file are the original file paths rather than the localized ones, causing tasks to fail. I have the following WDL:; ```; task aggregate_mafs {; Array[File]+ mafpaths; String out_prefix; String? out_suffix. command {; python /src/Merge_MAFs.py ${""--suffix "" + out_suffix} ${out_prefix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:891,test,test,891,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,1,['test'],['test']
Testability,"When we interact with Google APIs, including JES and GCS sometimes things go awry for transient reasons. The belief is that retrying a bit would make it go green. We want to handle this automatically for the user. We shall:. - Retry up to N times via an exponential backoff. N is TBD (10?); - Upon each retry, emit a log message; - If N is reached the job will fail w/ the last error event as the failure reason. TBD: Design discussion on how to implement this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1914:317,log,log,317,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1914,1,['log'],['log']
Testability,"When we traced through the new actor model there was a lot of wonkiness in how an abort request works its way through the system. There were end runs being made, direct shortcuts to specific things, etc. . Our thoughts were:; - Make sure that the whole process is async. An abort request returns immediately and the workflow is set to an `aborting` state (as opposed to `aborted` and ??? if it fails to abort); - Have the abort request work its way through the workflow in a more logical manner, working down from the `WorkflowActor` to the `WorkflowExecutionActor` to the `EJEA`, etc; - Have each stage watch for all of its children (not necessarily in a supervision sense) to complete or not before sending the success/failure response back up",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1414:480,log,logical,480,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1414,1,['log'],['logical']
Testability,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2210:85,log,logs,85,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210,5,['log'],"['log', 'logs']"
Testability,"Whenever I try to use read_json it does not work.; For instance, when I make a simple wdl like:; ```wdl; workflow quantification {. File references; Map[String, String] indexes = read_json(references); }; where test.json is:; ```json; {; ""quantification.references"": ""/home/antonkulaga/rna-seq/workflows/rna-seq/quantification/inputs/test.json""; }; ```; ```; it tells; ```; Unable to build WOM node for Declaration 'indexes': Return type of read_json() can't be known statically; 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$materialization$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:211); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:181); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:176); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); ```; That means I cannot just load a file and parse it, so how else can I read JSON then?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3306:211,test,test,211,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3306,2,['test'],['test']
Testability,"Whenever SAM returns a successful response the content is JSON. When there's an error, say a `HTTP 500` the SAM response is HTML. However in all cases CromIAM tries to deserialize the response into JSON. The effect is that the original error message is lost producing a stack trace similar to the one below. A/C: SAM errors are reported and/or logged with original/redacted information, and NOT logged with the error below. . ```java; [INFO] [05/14/2018 18:08:50.471] [default-akka.actor.default-dispatcher-5853] [CromIamServer$(akka://default)] Requesting authorization for view access for user [REDACTED] on a request to view for collection [REDACTED]; [ERROR] [05/14/2018 18:08:50.507] [CromIamServer-akka.actor.default-dispatcher-443] [CromIamServer$(akka://default)] Request failed java.lang.RuntimeException: Unable to look up collections for user [REDACTED]: Unsupported Content-Type, supported: application/json; java.lang.RuntimeException: Unable to look up collections for user [REDACTED]: Unsupported Content-Type, supported: application/json; 	at cromiam.webservice.QuerySupport.$anonfun$preprocessQuery$3(QuerySupport.scala:67); 	at akka.http.scaladsl.server.Directive$SingleValueModifiers.$anonfun$flatMap$1(Directive.scala:141); 	at akka.http.scaladsl.server.Directive.$anonfun$tflatMap$2(Directive.scala:69); 	at akka.http.scaladsl.server.directives.FutureDirectives.$anonfun$onComplete$3(FutureDirectives.scala:37); 	at akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$2(FastFuture.scala:37); 	at akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41); 	at akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:52); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3622:344,log,logged,344,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3622,2,['log'],['logged']
Testability,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1810:6,benchmark,benchmarking,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810,1,['benchmark'],['benchmarking']
Testability,"While investigating the Dockerhub outage [0][1] and the Quay outage [2] we found that Cromwell can get into a bad state that interferes with Docker hash lookups. Rebooting Cromwell fixes the problem. On Friday 6/12 I was demoing the repro scenario I've been working on and I mentioned that I can't easily go from a ""broken Quay"" to a ""working Quay"" scenario because I have to restart Cromwell to pick up the DNS change... _restart Cromwell to pick up the DNS change_. _restart Cromwell to pick up the DNS change?_. _restart Cromwell to pick up the DNS change!!!_. Yesterday 6/15 I discovered that the JVM has a DNS cache with an infinite TTL [3]. Lowering this to a reasonable value allowed my test scenario to work without restarting the JVM, which it didn't before. Here is my theory:; 1. A Docker repo starts taking on water and engineers scramble to fix it; 2. They make infrastructure changes that change DNS records.; 3. Cromwell's retained DNS record breaks the ability to communicate with the repo indefinitely, even after the outage is resolved.; 4. Restarting Cromwell clears the cache. [0] https://broadworkbench.atlassian.net/browse/PROD-272; [1] https://broadworkbench.atlassian.net/browse/BA-6070; [2] https://broadworkbench.atlassian.net/browse/BA-6454; [3] https://www.ibm.com/support/pages/gis-dns-cache-never-updates-ip-after-dns-name-ip-changes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5546:694,test,test,694,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5546,1,['test'],['test']
Testability,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1807:117,log,logging,117,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807,3,['log'],['logging']
Testability,While poking at #5216 I found that several Centaur tests that had been excluded for AWS are now passing. 🎉,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5225:51,test,tests,51,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5225,1,['test'],['tests']
Testability,"While running a CWL workflow, cromwell writes files to disk so that [cwltool](https://github.com/broadinstitute/cromwell/issues/2718) may salad them. While the top-level CWL is read back into memory (& db??) the top-level CWL often refers to other relative files on disk. These relative files are required to remain for the duration of the workflow. After the workflow completes the files should be deleted. Otherwise after a large number of workflows the local disk will fill up. Right now, the salad files are being written to a random path. For the purposes of this ticket the files could be written to a directory based on the stable `workflowId` (a `UUID`). The per-workflow logs do something similar, and are deleted at the end of the workflow in a way that the cwl files should be also.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3186:680,log,logs,680,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3186,1,['log'],['logs']
Testability,"While scale testing a pipeline last week, we saw this failure message in Cromwell-as-a-Service on 3/999 workflows:. `Failed to import workflow SmartSeq2SingleSample.wdl.:\nBad import SmartSeq2SingleSample.wdl: Failed to resolve 'SmartSeq2SingleSample.wdl' using resolver: 'http importer (no 'relative-to' origin)' (reason 1 of 1): Relative path""`. All 999 workflows are the same and were started programmatically, but the three that have this import error are missing ""imports"" in the Cromwell metadata. We are providing a zipped directory containing all of the workflow dependencies instead of using http imports. It's unclear whether there was an issue submitting these workflows to Cromwell, or if the zip file was received by Cromwell but was not passed on to the workflow. . Here are the workflow IDs for the failed workflows:; - 8eb0f933-5e9c-477c-9de8-6ef03049aafa; - 96ca1d93-78c6-4eae-ba03-b540728353ca; - c548deda-e518-4a15-8191-97e73b68cd4b",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4117:12,test,testing,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4117,1,['test'],['testing']
Testability,While testing C31 perf I noticed the statsd service can get very slow which translates in metrics being largely out of dates.; I traced this to an issue with how gauges are being updated.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3404:6,test,testing,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3404,1,['test'],['testing']
Testability,"While testing cromwell-36 with AWS batch I was able to reproduce this error:. ```; 2019-02-25 09:38:52,508 cromwell-system-akka.dispatchers.engine-dispatcher-24 ERROR - WorkflowManagerActor Workflow b6b9322c-3929-4b72-9598-45d97dfb858d failed (during ExecutingWorkflowState): cromwell.backend.standard.StandardAsyncExecutionActor$$anon$2: Failed to evaluate job outputs:; Bad output 'print_nach_nachman_meuman.out': [Attempted 1 time(s)] - IOException: Could not read from s3://nrglab-cromwell-genomics/cromwell-execution/run_multiple_tests/b6b9322c-3929-4b72-9598-45d97dfb858d/call-test_cromwell_on_aws/shard-61/SingleTest.test_cromwell_on_aws/f8ecf673-ed61-4b06-b1d6-c20f7efe986e/call-print_nach_nachman_meuman/print_nach_nachman_meuman-stdout.log: Cannot access file: s3://s3.amazonaws.com/nrglab-cromwell-genomics/cromwell-execution/run_multiple_tests/b6b9322c-3929-4b72-9598-45d97dfb858d/call-test_cromwell_on_aws/shard-61/SingleTest.test_cromwell_on_aws/f8ecf673-ed61-4b06-b1d6-c20f7efe986e/call-print_nach_nachman_meuman/print_nach_nachman_meuman-stdout.log; at cromwell.backend.standard.StandardAsyncExecutionActor.$anonfun$handleExecutionSuccess$1(StandardAsyncExecutionActor.scala:867); ```. The error occurs when running many sub-workflows within a single wrapping workflow.; The environment is configured correctly, and the test usually passes when running <30 subworkflows. Here are the workflows:. run_multiple_test.wdl; ```; import ""three_task_sequence.wdl"" as SingleTest. workflow run_multiple_tests {; scatter (i in range(30)){; call SingleTest.three_task_sequence{}; }; }; ```. three_task_sequence.wdl; ```; workflow three_task_sequence{; call print_nach. call print_nach_nachman {; input:; previous = print_nach.out; }. call print_nach_nachman_meuman{; input:; previous = print_nach_nachman.out; }; output{; Array[String] out = print_nach_nachman_meuman.out; }; }. task print_nach{; command{; echo ""nach""; }; output{; Array[String] out = read_lines(stdout()); }; runtime {; 	 docker",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4687:6,test,testing,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4687,2,"['log', 'test']","['log', 'testing']"
Testability,"While trying to write call caching tests. Note the `rCopy` is just a recycled `float` input. ```; {; ""radius"": 1.0; }; ```. ```; cwlVersion: v1.0; class: Workflow; # Workflow-level DockerRequirement; requirements:; DockerRequirement:; dockerPull: ""ubuntu:latest""; inputs:; - id: radius; type: float; outputs:; - id: area; outputSource: ""#one/rSquared""; type: float; steps:; - id: one; in:; - id: radius; source: ""#radius""; out:; - id: rSquared; - id: rCopy; run:; inputs:; - id: radius; type: float; outputs:; - id: rSquared; outputBinding:; glob: stdout.txt; loadContents: true; outputEval: $(parseFloat(self[0].contents)); type: float; - id: rCopy; outputBinding:; outputEval: $(inputs.radius); type: float; class: CommandLineTool; requirements:; - class: ShellCommandRequirement; arguments:; - valueFrom: echo; - valueFrom: ""`expr ""; shellQuote: false; - valueFrom: $(inputs.radius); - valueFrom: ""*""; shellQuote: false; - valueFrom: $(inputs.radius); - valueFrom: ""`""; shellQuote: false; stdout: stdout.txt; ```. ```; name: cwl_caching; testFormat: workflowsuccess; backendsMode: ""only""; backends: [Local]; tags: [localdockertest]. files {; wdl: cwl_caching/cwl_caching.cwl; inputs: cwl_caching/cwl_caching.json; }. metadata {; status: Succeeded; }. workflowType: CWL; workflowTypeVersion: v1.0; ```. ```; cromwell.backend.standard.StandardAsyncExecutionActor$$anon$2: Failed to evaluate job outputs:; Bad output 'rCopy': No coercion defined from '1' of type 'Int' to 'Float'.; 	at cromwell.backend.standard.StandardAsyncExecutionActor.$anonfun$handleExecutionSuccess$1(StandardAsyncExecutionActor.scala:688); 	at scala.util.Success.$anonfun$map$1(Try.scala:251); 	at scala.util.Success.map(Try.scala:209); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:289); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60); 	at akka.dispatch.Bat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3480:35,test,tests,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3480,1,['test'],['tests']
Testability,"While using Jes + call caching enabled, if you call on a task with a new name, then when Jes will copy the outputs from the previously performed task but will not rename the files to the new name. For example, my WDL has a task two, and in the workflow I ""call two as four"". ; - When I check within the google bucket for call four, all the files are named as ""two-stdout.log"", ""call two-stderr.log"". ; - When I check within the google bucket for call two, there are a group of files named call two and a group of files named call four. It appears that although the appropriate files for call four are created, they aren't moved into the call four directory in google. So when I run the WF, I get this error: ; ""failure"": ""Item not found: cloud-cromwell-dev/cromwell-executions/cacheWithinWF/c972cace-b423-4c1c-87e4-01356163757f/call-four/four-stdout.log"". Because although the file four-stdout.log actually exists, it exists under the directory call-two instead of call-four.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/781:371,log,log,371,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/781,4,['log'],['log']
Testability,"While validating Google authentication, [currently](https://github.com/broadinstitute/cromwell/blob/8ededf0995d7fef1914cb744a1124e4c96328106/filesystems/gcs/src/main/scala/cromwell/filesystems/gcs/auth/GoogleAuthMode.scala#L65) only the exception message is logged. If the exception itself contains a causal exception, that information is discarded.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2090:258,log,logged,258,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2090,1,['log'],['logged']
Testability,While working on #4815 I had some issues getting the testing going with centaur. I have updated the documentation so it will be (hopefully) a bit easier or the next person who reads it. There were some things that I did find in the code and in the centaur tests that I could not find information on. These are marked with `TODO`. I hope the cromwell devs will fill in the blanks.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4827:53,test,testing,53,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4827,2,['test'],"['testing', 'tests']"
Testability,"Whilst working on env vars I noticed the Run / WorkflowStep / Workflow relationship wasn't modeled correctly wrt Requirements. That's something the env var conformance tests in particular will check, but it's generally useful to have this be correct so here it is in its own wee PR.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3108:168,test,tests,168,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3108,1,['test'],['tests']
Testability,Wire cromwell into cwl conformance tester,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2590:35,test,tester,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2590,1,['test'],['tester']
Testability,"With a local MySQL config, Local backend and call caching enabled, the following Centaur tests consistently fail for me regardless of horicromtal or unicromtal:. - [x] draft3_call_cache_capoeira_local; - [x] call_cache_capoeira_local; - [ ] cwl_dynamic_initial_workdir; - [x] long_cmd",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4725:89,test,tests,89,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4725,1,['test'],['tests']
Testability,"With apologies to @Horneth, I merged too soon! This unfortunately caused `sbt ""test-only cromwellSimpleWorkflowActorSpec""` to hang indefinitely.; - Lazy-fiy workflowPaths to prevent actor from throwing during instantiation; - Handle ActorInitFailure with supervision; - with default'; - cleanup Workflow finalization; - clean imports; - PR commnet",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1102:79,test,test-only,79,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1102,1,['test'],['test-only']
Testability,With apologies to @kshakir for stealing his thunder and then forgetting to turn the test back on...,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2956:84,test,test,84,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2956,1,['test'],['test']
Testability,"With https://github.com/broadinstitute/cromwell/pull/2988 it should enable a bunch of new CWL conformance tests to run on travis. They will still need the outputs to look right to fully ""pass""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2994:106,test,tests,106,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2994,1,['test'],['tests']
Testability,Wom: Fix restart tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2866:17,test,tests,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2866,1,['test'],['tests']
Testability,Wom: Reinstate refresh_token tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2862:29,test,tests,29,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2862,1,['test'],['tests']
Testability,Womtool endpoint - sleep well at night tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4821:39,test,tests,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4821,1,['test'],['tests']
Testability,Work as an ambassador to FireCloud to have them test out v0.20 in their standard tests (especially access token related) to quick resolve issues and file any necessary tickets.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/998:48,test,test,48,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/998,2,['test'],"['test', 'tests']"
Testability,Work as an ambassador to GOTC to have them test out v0.20 in their standard tests (50 concurrent genomes) to quick resolve issues and file any necessary tickets.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/997:43,test,test,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/997,2,['test'],"['test', 'tests']"
Testability,Work with FireCloud to have them test v0.20,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/998:33,test,test,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/998,1,['test'],['test']
Testability,Work with GOTC to have them test v0.20,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/997:28,test,test,28,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/997,1,['test'],['test']
Testability,"Workaround for ""The job exceeded the maximum log length, and has been terminated"" Travis error [BA-6480]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5553:45,log,log,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5553,1,['log'],['log']
Testability,Workflow ID validation + Outputs/Logs non-404ing. Closes #1138,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1154:33,Log,Logs,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1154,1,['Log'],['Logs']
Testability,Workflow Log does not get copied over to S3 after workflow finished,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4446:9,Log,Log,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4446,1,['Log'],['Log']
Testability,Workflow failed because it cannot capture docker logs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3615:49,log,logs,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3615,1,['log'],['logs']
Testability,Workflow failure mode tests. Closes #1034,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1216:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1216,1,['test'],['tests']
Testability,Workflow log copying with RP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4770:9,log,log,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4770,1,['log'],['log']
Testability,Workflow logging. Closes #814,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1018:9,log,logging,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1018,1,['log'],['logging']
Testability,Workflow logs are great again. Closes #946,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1008:9,log,logs,9,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1008,1,['log'],['logs']
Testability,Workflow pickup testing [BW-1128],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6701:16,test,testing,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6701,1,['test'],['testing']
Testability,"Workflow submission has a form field `customLabels` whereas the label update endpoint has the form field `labels`. When one is trying to abstract logic involving labels to the akka http DSL this makes it yucky. There's no reason why these need to be different. Unify them to `labels` terminology. There are still internal references to customLabels, but not in a user visible way. edit: Looks like the command line API also has `labels` as the terminology",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2935:146,log,logic,146,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2935,1,['log'],['logic']
Testability,Workflows are coming from [here](https://github.com/bcbio/test_bcbio_cwl) and [here](https://github.com/bcbio/bcbio_validation_workflows/tree/master/wes-agha-test/wes_chr21_test-workflow-gcp),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4420:158,test,test,158,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4420,1,['test'],['test']
Testability,"Works on LocalBackend, code is in place for SGEBackend but not tested yet.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/177:63,test,tested,63,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/177,1,['test'],['tested']
Testability,Wrap test in eventually to make sure metadata of workflow is flushed before we ask for it. This changed a bit when we set the default batch size from 1 -> 200,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2395:5,test,test,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2395,1,['test'],['test']
Testability,Write Centaur Tests for DELETE endpoint,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4649:14,Test,Tests,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4649,1,['Test'],['Tests']
Testability,Write some stub functions to request if access should be granted or to associate a workflow id with a principal. At this stage the responses can be completely mocked,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2131:11,stub,stub,11,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2131,2,"['mock', 'stub']","['mocked', 'stub']"
Testability,Y_ATTEMPT | METADATA_VALUE | METADATA_TIMESTAMP | METADATA_VALUE_TYPE |; +---------------------+--------------------------------------+--------------+----------+-------------------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+---------------------+; | 2993666495 | d94ec518-40a0-4aee-a6f1-6a2930cb9fc0 | status | NULL | NULL | NULL | Succeeded | 2019-01-03 01:32:47.210000 | string |; | 2993666496 | 8c3beb53-cc65-4550-991f-575ba451b9ec | workflowLog | NULL | NULL | NULL | gs://fc-7c9fbaa1-4118-444c-b200-a0329625c88e/8805268f-7677-4fa7-a5ae-ca0094d5d9d0/workflow.logs/workflow.8c3beb53-cc65-4550-991f-575ba451b9ec.log | 2019-01-03 01:32:47.404000 | string |; | 2993666497 | c6a5f8f2-c927-42c6-8379-a7c1830c5f34 | workflowLog | NULL | NULL | NULL | gs://fc-7c9fbaa1-4118-444c-b200-a0329625c88e/8805268f-7677-4fa7-a5ae-ca0094d5d9d0/workflow.logs/workflow.c6a5f8f2-c927-42c6-8379-a7c1830c5f34.log | 2019-01-03 01:32:47.452000 | string |; | 2993666498 | d94ec518-40a0-4aee-a6f1-6a2930cb9fc0 | workflowLog | NULL | NULL | NULL | gs://fc-7c9fbaa1-4118-444c-b200-a0329625c88e/8805268f-7677-4fa7-a5ae-ca0094d5d9d0/workflow.logs/workflow.d94ec518-40a0-4aee-a6f1-6a2930cb9fc0.log | 2019-01-03 01:32:47.464000 | string |; +---------------------+--------------------------------------+--------------+----------+-------------------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+---------------------+; 4 rows in set (0.06 sec). MySQL [cromwell]> select * from METADATA_ENTRY where (WORKFLOW_EXECUTION_UUID='c5d48405-06ca-4207-9d1a-5923a9eb0fcd' OR WORKFLOW_EXECUTION_UUID='c5b6ee46-1f09-4830-91a8-fd814866d664') and METADATA_KEY='status' AND METADATA_TIMESTAMP > '2019-01-02 22:14:47' ORDER BY METADATA_JOURN,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4511:2740,log,logs,2740,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4511,1,['log'],['logs']
Testability,"Yesterday there was a config change that targeted the /stats endpoint rather than /status to assess Cromwell vitality. Unfortunately this accidentally seems to have DOSed Cromwell and produced tons of messages like the following in the logs. Cromwell effectively locked up and needed a hard restart to recover. I don't think the rate at which /stats was called was excessively high. The counting mechanism is apparently sending messages around to the whole graph of execution actors when it seems like a more efficient means of answering the stats question should be possible. Even if turns out a more efficient calculation isn't possible, the current system doesn't appear to be taking sub workflow actors into account correctly and I don't even know how the MWDA and WIA got caught up in this. ```; WARN c.e.w.l.e.SubWorkflowExecutionActor - unhandled event JobCountQuery in state SubWorkflowRunningState; ```. ```; WARN c.e.w.l.m.MaterializeWorkflowDescriptorActor - MaterializeWorkflowDescriptorActor [UUID(XXXXX)]: received an unhandled message Event(JobCountQuery,()) in state MaterializingState; ```. ```; WARN c.e.w.l.i.WorkflowInitializationActor - WorkflowInitializationActor-XXXXX [UUID(XXXXX)]: received an unhandled message: Event(JobCountQuery,WorkflowLifecycleActorData(Set(Actor[XXXXX]),List(),Map(),List())); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3683:236,log,logs,236,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3683,1,['log'],['logs']
Testability,"[""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1875:2168,test,tests,2168,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875,2,['test'],['tests']
Testability,"[2018-03-09 15:49:48,68] [warn] Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:9775,Log,Logger,9775,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,1,['Log'],['Logger']
Testability,"[2018-03-09 15:56:36,88] [warn] Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:18775,Log,Logger,18775,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,1,['Log'],['Logger']
Testability,[34] Conditional predicates don't need to be logged.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3995:45,log,logged,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3995,1,['log'],['logged']
Testability,[34] Restore PAPI v1 stdout/stderr log streaming.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3983:35,log,log,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3983,1,['log'],['log']
Testability,[40 hotfix] Replay the AWS and BCS test fixups,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4926:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4926,1,['test'],['test']
Testability,"[40 hotfix] Safety net against long running ""log an event"" actions",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4954:45,log,log,45,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4954,1,['log'],['log']
Testability,[47 hotfix] PAPI GPU tests apparently now need a larger boot disk [BA-6177],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5364:21,test,tests,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5364,1,['test'],['tests']
Testability,[48 hotfix] PAPI GPU tests apparently now need a larger boot disk [BA-6177],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5366:21,test,tests,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5366,1,['test'],['tests']
Testability,[52 Hotfix] Give the IoClientHelper a chance to interpret messages before running our FSM specific logic [BA-6524],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5593:99,log,logic,99,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5593,1,['log'],['logic']
Testability,[53 Log Enhancement] Log IO action durations,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5983:4,Log,Log,4,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5983,2,['Log'],['Log']
Testability,[53 hotfix] Enhanced logging around IO actions [BW-413],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6003:21,log,logging,21,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6003,1,['log'],['logging']
Testability,[53 hotfix] GCS IO safety and test bucket size calls [BW-411],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5997:30,test,test,30,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5997,1,['test'],['test']
Testability,"[53 log enhancements] Bonus JobStoreReaderActor and EJEA logging, batch actor timing metrics",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5981:4,log,log,4,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5981,2,['log'],"['log', 'logging']"
Testability,"[68 hotfix] Revert `google-cloud-nio` to previously used version, unit test [BW-808]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6491:71,test,test,71,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6491,1,['test'],['test']
Testability,[BT-698] first pass on BlobTokenGenerator with E2E test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6824:51,test,test,51,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6824,1,['test'],['test']
Testability,[BT-717] BlobPathBuilderSpec E2E test: generate SAS token,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6819:33,test,test,33,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6819,1,['test'],['test']
Testability,[BW-1090] - Disable CWL tests due to PAPI 503 flakiness,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6694:24,test,tests,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6694,1,['test'],['tests']
Testability,[BW-1128] Pick up workflows code and flaky test fix,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6709:43,test,test,43,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6709,1,['test'],['test']
Testability,[CROM-6831][BW-961] - Add more logging for Docker auth,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6589:31,log,logging,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6589,1,['log'],['logging']
Testability,[DO NOT MERGE] Run all PAPI Centaur tests against GCPBATCH,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7514:36,test,tests,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7514,1,['test'],['tests']
Testability,[DO NOT MERGE] [DDO-2190] Add more logging to CromIAM,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6802:35,log,logging,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6802,1,['log'],['logging']
Testability,[DO NOT MERGE] scalafmt testing PR,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7338:24,test,testing,24,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7338,1,['test'],['testing']
Testability,[DONT MERGE] business logging and Pub sub,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/400:22,log,logging,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/400,1,['log'],['logging']
Testability,"[Disclaimer]; This ~~heavily~~ lacks unit ~~and integration~~ testing.; See ~~https://github.com/broadinstitute/cromwell/issues/4010~~, https://github.com/broadinstitute/cromwell/issues/4009, ~~https://github.com/broadinstitute/cromwell/issues/4007~~. Edit: ; - Closed 4010 after new tests were added for the ftp impl of cloud nio. The core cloud nio code is still largely untested so leaving 4009 open.; - CWL conformance tests can be run on Travis as a CRON job once this PR is merged, which should be enough for 4007. ---. I tried to split commits by general topics if that helps...; Contains:; - The ~woodward~ [Woodard](https://en.wikipedia.org/wiki/Alfre_Woodard) abstraction; - An FTP implementation of the abstraction (more on that below); - Changes to the TES backend to accommodate for other filesystems than SFS; - Configurable glob command (the one that links files to be globbed into a directory); - Setup for testing the cwl conformance suite on Travis. ~~Disabled because it would very likely fail most of the time since I doubt the FTP server we have could handle concurrent travis runs.~~ (now as a CRON job). Since FTP inherently does not allow parallelism and concurrent requests, it is necessary to create as many connections as concurrent requests we want. Because most ftp servers will limit the number of concurrent connections, the FTP implementation pools FTP clients and reuses them across async operations in Cromwell. That's the reason for all the pooling logic. Threads in need of a client when the pool is empty will block until they can get one.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4008:62,test,testing,62,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4008,5,"['log', 'test']","['logic', 'testing', 'tests']"
Testability,"[Jira issue](https://broadworkbench.atlassian.net/browse/BA-5943). Using Cromwell 44 and PAPI v2, occasionally machines in GCE are preempted but not handled as such. Metadata snippet:. ```; ""failures"": [; {; ""causedBy"": [],; ""message"": ""Task test_combine.combine:NA:1 failed. The job was stopped before the command finished. PAPI error code 10. The assigned worker has failed to complete the operation""; }; ],; ""jobId"": ""projects/finngen-refinery-dev/operations/18318369325465658337"",; ""backend"": ""PAPIv2"",; ""end"": ""2019-08-20T14:54:37.214Z"",; ```. Stackdriver log snippet:. ```; {; ""insertId"": ""15cmu2qg1chkm09"",; ""jsonPayload"": {; ""event_timestamp_us"": ""1566312261571808"",; ""actor"": {; ""user"": ""system""; },; ""resource"": {; ""name"": ""google-pipelines-worker-6eba778d59d69dcfe9189620b91117c5"",; ""type"": ""instance"",; ""zone"": ""europe-west1-b"",; ""id"": ""1966470788939888666""; },; ""trace_id"": ""systemevent-1566312254625-5908d7d8b55f5-68011c08-d6e13e66"",; ""event_type"": ""GCE_OPERATION_DONE"",; ""operation"": {; ""id"": ""1400679280860576170"",; ""name"": ""systemevent-1566312254625-5908d7d8b55f5-68011c08-d6e13e66"",; ""type"": ""operation"",; ""zone"": ""europe-west1-b""; },; ""event_subtype"": ""compute.instances.preempted"",; ""info"": [; {; ""code"": ""STATUS_MESSAGE"",; ""detail_message"": ""Instance was preempted.""; }; ],; ""version"": ""1.2""; },; ```. Although this happens rarely, it causes large workflows to fail and we'd like to avoid rerunning such workflows because at scale other issues may arise with e.g. call caching timeouts, and things are more manageable without otherwise unnecessary reruns. Any help would be much appreciated!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5136:561,log,log,561,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5136,1,['log'],['log']
Testability,[Release process] Don't update Agora/Rawls and skip smoke tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4941:58,test,tests,58,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4941,1,['test'],['tests']
Testability,[TES Backend] run centaur tests against Funnel version 0.5.0,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3150:26,test,tests,26,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3150,1,['test'],['tests']
Testability,[TEST] Scala-steward shepherding consolidation (6259 to 6263),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6378:1,TEST,TEST,1,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6378,1,['TEST'],['TEST']
Testability,[Test Flakiness] Unique names for multipletokenusingactors,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4383:1,Test,Test,1,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4383,1,['Test'],['Test']
Testability,[Test Reliability] Better message around StatsDInstrumentationSpec failures,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4387:1,Test,Test,1,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4387,1,['Test'],['Test']
Testability,[Test Reliability] More time for SubmissionSupportSpec,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4385:1,Test,Test,1,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4385,1,['Test'],['Test']
Testability,[This PR](https://github.com/broadinstitute/cromwell/pull/3769) fixes an issue where non-localized paths were used to evaluate adhoc expressions.; Unfortunately the test still fails on TES backend.; AC: `cwl_input_json` centaur test passes on TES backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3807:165,test,test,165,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3807,2,['test'],['test']
Testability,[WM-2291] Callback API contract tests between Cromwell and CBAS,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7251:32,test,tests,32,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7251,1,['test'],['tests']
Testability,[WM-2555] Cromwell -> ECM contract test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7405:35,test,test,35,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7405,1,['test'],['test']
Testability,"[WX-1107](https://broadworkbench.atlassian.net/browse/WX-1107?atlOrigin=eyJpIjoiNTM5ZGY2MzMyYWM5NGE2MThjMzg3NDAzOTY0YjZmMzYiLCJwIjoiaiJ9). One of our Integration Tests was failing due to a python dependency issue described [here](https://github.com/docker/docker-py/issues/3113). Long story short, using an older version of `requests` is a workaround to an issue that exists in the python `docker` package. Until that package gets updated, our script will fail due to the docker library passing an invalid argument to the requests library. . This fix forces the github runner that is running the HoricromtalDeadlock test to downgrade its `requests` package, resolving the issue. This change will not affect anything other than that one test. . [WX-1107]: https://broadworkbench.atlassian.net/browse/WX-1107?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7131:162,Test,Tests,162,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7131,3,"['Test', 'test']","['Tests', 'test']"
Testability,[WX-1108] Add tests back,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7148:14,test,tests,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7148,1,['test'],['tests']
Testability,[WX-1108] Disable drs tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7145:22,test,tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7145,1,['test'],['tests']
Testability,[WX-1136] Docker Build Test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7151:23,Test,Test,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7151,1,['Test'],['Test']
Testability,[WX-1168] TES Log Paths,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7210:14,Log,Log,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7210,1,['Log'],['Log']
Testability,"[WX-1317](https://broadworkbench.atlassian.net/jira/software/c/projects/WX/boards/174?selectedIssue=WX-1317). Changed an Akka configuration setting so it no longer includes information about itself in all of Cromwell's HTTP responses. . before:; ```; content-length: 108 ; content-type: text/plain; charset=UTF-8 ; date: Mon,04 Mar 2024 18:39:50 GMT ; server: akka-http/10.1.15 ; ```. after:; ```; content-length: 108 ; content-type: text/plain; charset=UTF-8 ; date: Mon,04 Mar 2024 18:39:50 GMT ; ```. I figure omitting the `server` header altogether is better than including just the string `akka` or `akka-http`. I don't think the `server` header is required by anything (see [mozilla docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server)), but I plan to test this out in `dev` on both Azure and GCP to make sure the setting propagates correctly and we can complete workflows. . [WX-1317]: https://broadworkbench.atlassian.net/browse/WX-1317?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7379:777,test,test,777,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7379,1,['test'],['test']
Testability,[WX-1394] Upgrade Logback Core to address CVE-2023-6378,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7332:18,Log,Logback,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7332,1,['Log'],['Logback']
Testability,[WX-1448] Add verbose logging and timeout for getm,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7416:22,log,logging,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7416,1,['log'],['logging']
Testability,[WX-1629] Add metadata value type tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7433:34,test,tests,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7433,1,['test'],['tests']
Testability,[WX-1655] Test Cronjob,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7458:10,Test,Test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7458,1,['Test'],['Test']
Testability,[WX-1660] Fix Failing Tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7446:22,Test,Tests,22,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7446,1,['Test'],['Tests']
Testability,[WX-1835] Scheduled logging for list of groups experiencing quota exhaustion,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7539:20,log,logging,20,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7539,1,['log'],['logging']
Testability,[WX-1849] Stop Logging No-Op Status Changes,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7536:15,Log,Logging,15,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7536,1,['Log'],['Logging']
Testability,"[WX-968](https://broadworkbench.atlassian.net/browse/WX-968). - Gave Centaur the ability to authenticate with Azure Blob Storage and count files at a particular path. ; - Added file counting to our single, lonely, overworked, and under-appreciated azure integration test. . I'm new to Scala. Please feel free to be pedantic and nitpicky in your comments! . [WX-968]: https://broadworkbench.atlassian.net/browse/WX-968?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7104:266,test,test,266,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7104,1,['test'],['test']
Testability,"[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.LocalBackend.instantiateCommand(LocalBackend.scala:246) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.BackendCallJobDescriptor.instantiateCommand$lzycompute(JobDescriptor.scala:52) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.BackendCallJobDescriptor.instantiateCommand(JobDescriptor.scala:52) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.LocalBackend$$anonfun$execute$1.apply(LocalBackend.scala:115) ~[cromwell-0.19.jar:0.19]; at cromwell.engine.backend.local.LocalBackend$$anonfun$execute$1.apply(LocalBackend.scala:113) ~[cromwell-0.19.jar:0.19]; at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[cromwell-0.19.jar:0.19]; at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24) ~[cromwell-0.19.jar:0.19]; at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40) [cromwell-0.19.jar:0.19]; at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:397) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [cromwell-0.19.jar:0.19]; ```. Full log:; [workflow.8a4e2219-90e2-4210-a753-26b149c18b51.txt](https://github.com/broadinstitute/cromwell/files/332863/workflow.8a4e2219-90e2-4210-a753-26b149c18b51.txt). ``` bash; $ java -version; java version ""1.8.0_25""; Java(TM) SE Runtime Environment (build 1.8.0_25-b17); Java HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode); ```. ``` bash; $ uname -a; Darwin aer 13.4.0 Darwin Kernel Version 13.4.0: Wed Mar 18 16:20:14 PDT 2015; root:xnu-2422.115.14~1/RELEASE_X86_64 x86_64; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1070:3169,log,log,3169,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1070,1,['log'],['log']
Testability,[develop edition] GCS IO safety and test bucket size calls [BW-411],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5993:36,test,test,36,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5993,1,['test'],['test']
Testability,"[develop] Revert `google-cloud-nio` to previously used version, unit test [BW-808]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6490:69,test,test,69,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6490,1,['test'],['test']
Testability,[don't merge needs rebase] Fix bug discovered in load testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/410:54,test,testing,54,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/410,1,['test'],['testing']
Testability,[hotfix edition] Relative imports regression fix and test [BA-6006],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5186:53,test,test,53,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5186,1,['test'],['test']
Testability,"[space_glob.zip](https://github.com/broadinstitute/cromwell/files/2209665/space_glob.zip); It looks like glob fails to find `${pattern}*` if `pattern` contains a space. All three glob patterns work when using an underscore instead of a space. Tested using `cromwell 31.1`, `cromwell 32`, `cromwell 33.1`. ```; [2018-07-19 13:17:05,99] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""wf.glob1"": [],; ""wf.glob2"": [""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_1"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_10"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_2"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_3"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_4"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_5"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_6"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_7"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_8"", ""/home/redmar/devel/wdl/test/",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3908:243,Test,Tested,243,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3908,1,['Test'],['Tested']
Testability,[test] Update .travis.yml,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/6494:1,test,test,1,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/6494,1,['test'],['test']
Testability,"_JOB_AND_KEY_IDX dropped from table METADATA_ENTRY; 2019-07-21 23:34:35,936 INFO - DROP INDEX METADATA_JOB_IDX ON cromwell.METADATA_ENTRY; 2019-07-21 23:34:35,947 INFO - Index METADATA_JOB_IDX dropped from table METADATA_ENTRY; 2019-07-21 23:34:35,948 INFO - ChangeSet metadata_changesets/metadata_index_removals.xml::metadata_index_removals::mcovarr ran successfully in 24ms; 2019-07-21 23:34:35,949 INFO - INSERT INTO cromwell.SQLMETADATADATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, `DESCRIPTION`, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('metadata_index_removals', 'mcovarr', 'metadata_changesets/metadata_index_removals.xml', NOW(), 8, '8:b32b63103dfbe3664806be3eccf78b09', 'dropIndex indexName=METADATA_JOB_AND_KEY_IDX, tableName=METADATA_ENTRY; dropIndex indexName=METADATA_JOB_IDX, tableName=METADATA_ENTRY', '', 'EXECUTED', NULL, NULL, '3.6.3', '3752074629'); 2019-07-21 23:34:35,956 INFO - Successfully released change log lock; 2019-07-21 23:34:36,224 WARN - Unrecognized configuration key(s) for Jes: filesystems.gcs.project, name-for-call-caching-purposes, slow-job-warning-time; 2019-07-21 23:34:36,976 INFO - Slf4jLogger started; 2019-07-21 23:34:37,408 cromwell-system-akka.dispatchers.engine-dispatcher-7 INFO - Workflow heartbeat configuration:; {; ""cromwellId"" : ""cromid-673c553"",; ""heartbeatInterval"" : ""2 minutes"",; ""ttl"" : ""10 minutes"",; ""failureShutdownDuration"" : ""5 minutes"",; ""writeBatchSize"" : 10000,; ""writeThreshold"" : 10000; }; 2019-07-21 23:34:37,771 cromwell-system-akka.actor.default-dispatcher-3 INFO - KvWriteActor configured to flush with batch size 200 and process rate 5 seconds.; 2019-07-21 23:34:37,918 cromwell-system-akka.dispatchers.service-dispatcher-14 INFO - Metadata summary refreshing every 1 second.; 2019-07-21 23:34:38,046 WARN - 'docker.hash-lookup.gcr-api-queries-per-100-seconds' is being deprecated, use 'docker.hash-lookup.gcr.throttle' instead (see reference.conf); 2019-07-21 23:3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5084:1314,log,log,1314,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5084,1,['log'],['log']
Testability,"__init__; File ""/home/cdompierre/gdc-client/bin/build/gdc-client/out00-PYZ.pyz/socket"", line 224, in meth; error: AF_UNIX path too long; ```. The Python `mulitprocessing` library appears to create sockets in `$TMPDIR`. If the `$TMPDIR` path is too long then the path to the socket extends past the length limits for socket paths. This can be reproduced by running the following command with `tmp_dbg` set to 80 characters long. 79 characters works ok. ```shell; docker run -it --rm docker.io/broadinstitute/gdc_downloader:1.0 bash -c '; # 1 2 3 4 5 6 7 8; tmp_dbg=/234567890123456789012345678901234567890123456789012345678901234567890123456789; tmp_dbg=/2345678901234567890123456789012345678901234567890123456789012345678901234567890; tmpDir=$(; set -e; tmpDir=""$(mkdir -p ""${tmp_dbg}"" && echo ""${tmp_dbg}"")""; echo ""$tmpDir""; ); chmod 777 ""$tmpDir""; export _JAVA_OPTIONS=-Djava.io.tmpdir=""$tmpDir""; export TMPDIR=""$tmpDir"". python /opt/src/gdc_downloader.py 6ca4c640-758d-455d-ba5b-b965069a39b4/nationwidechildrens.org_biospecimen.TCGA-4C-A93U.xml; '; ```. A/C:; - A centaur test that checks that generated `$TMPDIR` paths are always shorter than some reasonable length. Because different backends with-or-without docker may generate different paths for `$TMPDIR` the test should only use `<=` not `=` to verify the length of the environment variable. Other links:; - https://gatkforums.broadinstitute.org/firecloud/discussion/11980/problem-running-gdc-client-tool; - https://stackoverflow.com/questions/34829600/why-is-the-maximal-path-length-allowed-for-unix-sockets-on-linux-108; - https://unix.stackexchange.com/questions/367008/why-is-socket-path-length-limited-to-a-hundred-chars; - https://github.com/Ericsson/codechecker/issues/1533; - https://bugs.chromium.org/p/chromium/issues/detail?id=326203; - https://docs.python.org/2/library/multiprocessing.html; - https://docs.python.org/3/library/multiprocessing.html; - https://superuser.com/questions/807573/how-to-find-length-of-string-in-shell",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3647:2119,test,test,2119,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3647,2,['test'],['test']
Testability,"_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286238890). Devs are busy and say to send this to redteam@broad. So @katevoss if you find there is no obvious answer, please be sure to seek help. ---. @sooheelee com",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2064:1259,test,test-data,1259,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064,1,['test'],['test-data']
Testability,"_bam_basename}.bam. >>>; #runtime {; # backend: ""SLURM""; # memory: mem_size; # cpus: num_cpu; #}; output {; File output_bam = ""${output_bam_basename}.bam""; File bwa_stderr_log = ""${output_bam_basename}.bwa.stderr.log""; }; }. all parameters goes ok, but below are some problems:. 1:; Caused by: common.exception.AggregatedMessageException: Error(s):; :; Could not localize -> /nfs/disk3/user/gaoyuhui/github/test/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test:; doesn't exist; Cannot localize directory with symbolic links; /nfs/disk3/user/gaoyuhui/github/test/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test -> /nfs/disk3/user/gaoyuhui/github/test: Operation not permitted. 2：; ...; ...; amToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-workflow-logs/workflow.8fc94dc1-722b-40d5-9840-9d6e4a66db21.log: File name too long; at common.validation.Validation$ValidationTry$.toTry$extension1(Validation.scala:68); at common.validation.Validation$ValidationTry$.toTry$extension0(Validation.scala:64); at cromwell.backend.standard.StandardAsyncExecutionActor.ins",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4703:2224,test,test,2224,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4703,1,['test'],['test']
Testability,"_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stdout.log"",; ""shardIndex"": 4,; ""stderr"": ""gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stderr.log"",; ""attempt"": 1,; ""backendLogs"": {; ""log"": ""gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4.log""; }; }```. ```tlangs at some_computer in /a/working/directory; $ gsutil cat gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stdout.log; CommandException: No URLs matched: gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/HaplotypeCaller-4-stdout.log. tlangs at some_computer in /a/working/directory; $ gsutil cat gs://cromwell_execution_bucket/280d07ef-7130-47b7-a5da-e3d0c4705a3e/call-HaplotypeCaller/shard-4/attempt-2/HaplotypeCaller-4-stdout.log; 21:45:13.012 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/usr/gitc/gatk4/gatk-package-4.beta.5-local.jar!/com/intel/gkl/native/libgkl_compression.so; 21:45:13.215 INFO PrintReads - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 21:45:13.216 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 21:45:13.216 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 21:45:13.216 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 21:45:13.217 INFO PrintReads - Deflater: IntelDeflater; 21:45:13.217 INFO PrintReads - Inflater: IntelInflater; 21:45:13.218 INFO PrintReads - GCS max retries/reopens: 20; 21:45:13.218 INFO PrintReads - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 21:45:13.218 INFO PrintReads - Initializing engine; 21:45:16.218 INFO IntervalArgumentCollection - Processing 292450248 bp from intervals; 21:45:16",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3929:1050,log,log,1050,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3929,1,['log'],['log']
Testability,"_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:1833,test,tests,1833,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,1,['test'],['tests']
Testability,"`CromwellServer` now exits with a 1 if the server does not start up. Still could use clean termination handling (via lenthall?).; Refactored the `WorkflowManagerSystem` passing into `Main`, including ensuring that during tests the internal actor system does get shut down, but not prematurely.; Made the `PromiseActor` more generic. TODO: Could move to lenthall, and possibly make it even easier to use, as right now it requires using `tell` instead of `!` to ensure the `sender` is set correctly.; `sys.exit()` is only called in the `object Main`, not conditionally in the `class Main`.; Moved `getAction()` from the `Main` class to the object.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/347:221,test,tests,221,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/347,1,['test'],['tests']
Testability,"`FinalCallJobDescriptor`, `JobDescriptor`, and `BackendCallJobDescriptors` merged into one.; BIG TODO: Final calls ""run"" on the local backend via a `FinalCallCopyHack` that runs them in process.; Moved final call tests from `WorkflowDescriptorSpec` to `FinalCallSpec`. Creating a pull request to review current changes, while discussing best ways to execute copies out of process.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/694:213,test,tests,213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/694,1,['test'],['tests']
Testability,`Futures timed out after [1 second]`. `tc: SwaggerService should return valid swagger (twice with same test case)`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4247:103,test,test,103,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4247,1,['test'],['test']
Testability,"`IoReadForbiddenFailure` was introduced [here](https://github.com/broadinstitute/cromwell/pull/4359/files#diff-a3a03acc0bf129942cf77c19d96e9128R30); However some code ([example](https://github.com/broadinstitute/cromwell/blob/develop/backend/src/main/scala/cromwell/backend/standard/callcaching/StandardFileHashingActor.scala#L94)) is still expecting to receive an `IoFailure`, which `IoReadForbiddenFailure` isn't, hence logging an unexpected message received and hanging indefinitely (waiting for a never coming `IoFailure`)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4374:422,log,logging,422,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4374,1,['log'],['logging']
Testability,"`JesCallPaths` extends `JesWorkflowPaths` and appears to create a lot of workflow-level data redundantly. Besides wasting time and possibly money, this causes unnecessary calls to Google APIs which count against our QPS limits. During 9/16 JG testing we saw an error creating `storage` in `JesWorkflowPaths` (which should have been treated as a transient error per #1436), but it seems that storage should have been created as part of the `JesBackendInitializationData` by the `JesInitializationActor` and then simply passed to the job actors.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1437:243,test,testing,243,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1437,1,['test'],['testing']
Testability,"`Retryable` tag meaning that the retry code could be widely applied while only running on certain tagged tests. Here is an example output of a tagged test retried by ScalaTest:. ```; [info] All tests passed.; [info] FlakySpec:; [info] Flaky ; [info] - should maybe fail !!! CANCELED !!! (9 milliseconds); [info] Test canceled because flickered: initially failed, but succeeded on retry (Retries.scala:349); [info] Passed: Total 104, Failed 0, Errors 0, Passed 104, Canceled 1; ```. Because these `TestCanceled` events are likely to be ignored by developers the error events should be reported and aggregated. ScalaTest allows one to create a custom `Reporter` to catch `TestFailed` or `TestCanceled` events. A custom reporter could be built that captures the failed and flickering test events and forwards them to an external system for aggregation and reporting. Unfortunately as shown above the behavior of `org.scalatest.Retries.withRetry` is to try twice and upon secondary success return a `TestCanceled` event to each `Reporter` _without_ the original exception. The original error `Outcome` does not seem to be forwarded to the `Reporter`. Instead we may need to implement our own fork of `withRetry` that captures and forwards the original exception before retrying the test, wiring the original error to our custom `Reporter` in some way or via some singleton cache. For an external system to aggregate the errors something like https://logit.io/ could be used but https://sentry.io/ is specifically built for error triage. As the above features will only be implemented for ScalaTest, any tests using ScalaCheck directly should be refactored to use ScalaTest's ""ScalaCheck-style"" property based testing. That way any failing property based tests will be tracked as well using our reporting. Because this feature is likely to be used across all cromwell artifacts/subprojects we should decide if we either want to either:; 1. Update every project in `build.sbt` with a `.dependsOn(common, ""t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3658:1594,Test,TestCanceled,1594,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3658,1,['Test'],['TestCanceled']
Testability,"```$anon$1 was thrown during property evaluation. (SharedFileSystemJobExecutionActorSpec.scala:119)&#010; Message: A timeout occurred waiting for a future to complete. Queried 21 times, sleeping 500 milliseconds between each query.```. ```A timeout occurred waiting for a future to complete. Queried 21 times, sleeping 500 milliseconds between each query.```. https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/165/. If one needs more info please talk to @ndbolliger",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4222:423,test,test-runner,423,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4222,1,['test'],['test-runner']
Testability,"```; The code passed to eventually never returned normally. Attempted 14 times over 5.123310162 seconds. Last failure message: Vector(""hola"", ""hello"", ""bonjour"") was not equal to Vector(""hola"", ""hello"", ""bonjour"", ""aurevoir"").; ```. ```; tc: BatchingDbWriter should process again when previous processing finished and we're still over batch size (each time with same test case); ```. https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/161/testReport/cromwell.core.actor/BatchActorSpec/BatchingDbWriter_should_process_again_when_previous_processing_finished_and_we_re_still_over_batch_size/. If one needs more info, please talk to @ndbolliger",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4223:367,test,test,367,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4223,3,['test'],"['test', 'test-runner', 'testReport']"
Testability,"```; [INFO] [06/02/2016 19:49:46.376] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$$ib/$a] $a: Call-to-Backend assignments: hello.hello -> local; [INFO] [06/02/2016 19:49:46.376] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$ib] $$ib transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [INFO] [06/02/2016 19:49:46.377] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$$ib/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib/WorkflowInitializationActor-fd304efe-2bba-4859-9ffd-6ef7d4ae29d5] State is now terminal. Shutting down.; [WARN] [06/02/2016 19:49:46.381] [test-system-akka.actor.default-dispatcher-3] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$ib]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.495] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$kb] $$kb transitioning from WorkflowUnstartedState to Mater",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:39,test,test-system-akka,39,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,9,['test'],"['test-system', 'test-system-akka']"
Testability,"```; task test {; String? s. command { ; echo ""Here's s:""; echo ""${s}""; }; }. workflow printString {; String? inputS; call test {input: s = inputS}; }; ```. Acceptance criteria: make the above work... or have it report an error",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/575:10,test,test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/575,2,['test'],['test']
Testability,"```; workflow test {; 	call t1 { input : flag1 = false, }; }. task t1 {; 	Boolean? flag1; 	command {; 		echo test1 > test1.txt; 		echo test2 > test2.txt; 	}; 	output {; 		File out_false = if false then glob('test1.txt')[0] else glob('test2.txt')[0] # try commenting this out; 		File out = if select_first([flag1,false]) then glob('test1.txt')[0] else glob('test2.txt')[0]; 	}; }; ```; This code works fine. But If you comment out a line `File out_false = if false then glob('test1.txt')[0] else glob('test2.txt')[0] # try commenting this out` in output {}, then I get an error. ```; $ java -jar ../cromwell-29.jar run test_select_first_in_if_in_output.wdl; Picked up _JAVA_OPTIONS: -Xms256M -Xmx1024M -XX:ParallelGCThreads=1; [2017-12-01 20:00:53,03] [info] Running with database db.url = jdbc:hsqldb:mem:6ae82874-e5ea-4c15-9f1d-09f8d0406019;shutdown=false;hsqldb.tx=mvcc; [2017-12-01 20:01:00,60] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2017-12-01 20:01:00,61] [info] [RenameWorkflowOptionsInMetadata] 100%; [2017-12-01 20:01:01,07] [info] Slf4jLogger started; [2017-12-01 20:01:01,35] [info] Metadata summary refreshing every 2 seconds.; [2017-12-01 20:01:01,37] [info] WriteMetadataActor configured to write to the database with batch size 200 and flush rate 5 seconds.; [2017-12-01 20:01:01,51] [info] CallCacheWriteActor configured to write to the database with batch size 100 and flush rate 3 seconds.; [2017-12-01 20:01:02,89] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-12-01 20:01:02,94] [info] Workflow 132d7527-a0af-4f08-8291-d935e7cd5632 submitted.; [2017-12-01 20:01:02,94] [info] SingleWorkflowRunnerActor: Workflow submitted 132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,95] [info] 1 new workflows fetched; [2017-12-01 20:01:02,95] [info] WorkflowManagerActor Starting workflow 132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,96] [info] WorkflowManagerActor Su",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2972:14,test,test,14,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2972,1,['test'],['test']
Testability,```The code passed to eventually never returned normally. Attempted 51 times over 3.8950992149999997 seconds. Last failure message: HighLoad was not equal to NormalLoad.```. `https://broadinstitute.atlassian.net/browse/GAWB-3876`. ```tc: LoadControllerServiceActor should update global load level periodically (each time with same test case)```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4237:331,test,test,331,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4237,1,['test'],['test']
Testability,`absent-metadata-keys` tests fail on retry due to cached metadata,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4014:23,test,tests,23,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4014,1,['test'],['tests']
Testability,"`centaurCwlConformancePAPI` doesn't have the same credential check as `centaurJes`, and so is failing when users external users try to contribute patches. - Example [checking for creds](https://github.com/broadinstitute/cromwell/blob/e7b0833d53a305039af7224879cd26ceab1f1881/src/bin/travis/testCentaurJes.sh#L3-L12) and NOP passing: ; https://travis-ci.org/broadinstitute/cromwell/jobs/324545050; - Example [missing](https://github.com/broadinstitute/cromwell/blob/develop/src/bin/travis/testCentaurCwlConformancePAPI.sh) the above check and failing CI: ; https://travis-ci.org/broadinstitute/cromwell/jobs/324545054",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3102:290,test,testCentaurJes,290,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3102,2,['test'],"['testCentaurCwlConformancePAPI', 'testCentaurJes']"
Testability,`excludeLabelAnd` and `excludeLabelOr` have their own performance issues for which I haven't found query rewrite optimizations like those for `label` and and `labelOr` in #4598. Breaking this out as a separate issue since it is not believed to be as important as positive label assertions in #4598.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4601:278,assert,assertions,278,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4601,1,['assert'],['assertions']
Testability,`handleWorkflowSuccess` in `WorkflowExecutionActor` attempts to print out a log message which include the outputs. This doesn't go so well when the outputs are ginormous.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1770:76,log,log,76,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1770,1,['log'],['log']
Testability,`name-for-call-caching-purposes` and a couple of tests to prove it works,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4490:49,test,tests,49,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4490,1,['test'],['tests']
Testability,"a.dispatchers.backend-dispatcher-34 INFO - Request manager PAPIQueryManager created new PAPI request worker PAPIQueryWorker-9bdf68fb-2a83-40d7-9836-596fb3ff4aa2 with batch interval of 33333 milliseconds; 2021-09-27 13:48:00,381 cromwell-system-akka.dispatchers.backend-dispatcher-34 INFO - Request manager PAPIQueryManager created new PAPI request worker PAPIQueryWorker-51f769c6-7a82-4746-810c-c31fa5342ca3 with batch interval of 33333 milliseconds; 2021-09-27 13:48:00,382 cromwell-system-akka.dispatchers.backend-dispatcher-34 INFO - Request manager PAPIQueryManager created new PAPI request worker PAPIQueryWorker-d221f12d-7c19-49a6-a189-cef13e87c273 with batch interval of 33333 milliseconds; 2021-09-27 13:48:01,696 cromwell-system-akka.dispatchers.engine-dispatcher-9 INFO - Cromwell 68 service started on 10.153.114.15:3721...; 2021-09-27 13:48:04,270 cromwell-system-akka.dispatchers.engine-dispatcher-12 INFO - Not triggering log of token queue status. Effective log interval = None; 2021-09-27 13:48:13,186 cromwell-system-akka.dispatchers.api-dispatcher-41 INFO - Unspecified type (Unspecified version) workflow 075e0cf3-194b-4f53-a43d-d31f0b370f79 submitted; 2021-09-27 13:48:20,474 cromwell-system-akka.dispatchers.engine-dispatcher-32 INFO - 1 new workflows fetched by cromid-69bdc1a: 075e0cf3-194b-4f53-a43d-d31f0b370f79; 2021-09-27 13:48:20,484 cromwell-system-akka.dispatchers.engine-dispatcher-9 INFO - WorkflowManagerActor: Starting workflow UUID(075e0cf3-194b-4f53-a43d-d31f0b370f79); 2021-09-27 13:48:20,511 cromwell-system-akka.dispatchers.engine-dispatcher-9 INFO - WorkflowManagerActor: Successfully started WorkflowActor-075e0cf3-194b-4f53-a43d-d31f0b370f79; 2021-09-27 13:48:20,511 cromwell-system-akka.dispatchers.engine-dispatcher-9 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2021-09-27 13:48:20,547 cromwell-system-akka.dispatchers.engine-dispatcher-28 INFO - WorkflowStoreHeartbeatWriteActor configured to flush with batch size 10000 and process rate 2 mi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6506:8474,log,log,8474,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6506,1,['log'],['log']
Testability,a.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); at org.scalatest.concurrent.Eventually.makeAValiantAttempt$1(Eventually.scala:395); at org.scalatest.concurrent.Eventually.tryTryAgain$1(Eventually.scala:409); at org.scalatest.concurrent.Eventually.eventually(Eventually.scala:439); at org.scalatest.concurrent.Eventually.eventually$(Eventually.scala:391); at cromwell.CromwellTestKitSpec.eventually(CromwellTestKitSpec.scala:251); at cromwell.CromwellTestKitSpec.runWdlAndAssertOutputs(CromwellTestKitSpec.scala:344); at cromwell.WorkflowOutputsSpec.$anonfun$new$4(WorkflowOutputsSpec.scala:38); at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85); at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83); at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104); at org.scalatest.Transformer.apply(Transformer.scala:22); at org.scalatest.Transformer.apply(Transformer.scala:20); at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078); at org.scalatest.TestSuite.withFixture(TestSuite.scala:196); at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195); at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076); at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088); at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289); at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088); at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070); at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396); at scala.collection.immutable.List.foreach(List.scala:389); at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384); at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(En,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:6741,Test,TestSuite,6741,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,1,['Test'],['TestSuite']
Testability,"a.wdl; ```; workflow a {}. task t {; command {}; output { String s = """" }; }; ```. b.wdl; ```; import ""a.wdl"" as a; workflow b {. call a.t {}. String x = a.t.s; }; ```. Womtool Validate results:; ```; $ java -jar ~/womtool-33.1.jar validate b.wdl . ERROR: Missing value or call: Couldn't find value or call with name 'a' in workflow (line 6):. String x = a.t.s; ^; ```. The declaration for `String x` seems to be spec compliant and yet womtool can't validate this expression properly. . The current workaround is to provide a call alias for the imported task, which passes validation.; ```; import ""a.wdl"" as a; workflow b {. call a.t as test {}. String x = test.s; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3942:638,test,test,638,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3942,2,['test'],['test']
Testability,"a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 submitted.; [2017-01-20 09:31:10,63] [info] SingleWorkflowRunnerActor: Workflow submitted 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:11,29] [info] Running with database db.url = jdbc:hsqldb:mem:396f6af4-b493-451b-ad19-2042625bf63e;shutdown=false;hsqldb.tx=mvcc; [2017-01-20 09:31:15,99] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2017-01-20 09:31:16,00] [info] [Rename",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:8720,test,tests,8720,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,1,['test'],['tests']
Testability,a:12); at org.scalatest.concurrent.Eventually.makeAValiantAttempt$1(Eventually.scala:395); at org.scalatest.concurrent.Eventually.tryTryAgain$1(Eventually.scala:409); at org.scalatest.concurrent.Eventually.eventually(Eventually.scala:439); at org.scalatest.concurrent.Eventually.eventually$(Eventually.scala:391); at cromwell.CromwellTestKitSpec.eventually(CromwellTestKitSpec.scala:251); at cromwell.CromwellTestKitSpec.runWdlAndAssertOutputs(CromwellTestKitSpec.scala:344); at cromwell.WorkflowOutputsSpec.$anonfun$new$4(WorkflowOutputsSpec.scala:38); at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85); at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83); at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104); at org.scalatest.Transformer.apply(Transformer.scala:22); at org.scalatest.Transformer.apply(Transformer.scala:20); at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078); at org.scalatest.TestSuite.withFixture(TestSuite.scala:196); at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195); at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076); at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088); at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289); at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088); at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070); at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396); at scala.collection.immutable.List.foreach(List.scala:389); at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384); at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410); at scala.collection.immutable.List.foreach(L,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:6802,Test,TestSuite,6802,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,1,['Test'],['TestSuite']
Testability,a:137); at scala.collection.TraversableLike$class.map(TraversableLike.scala:245); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at cromwell.engine.workflow.WorkflowActor.buildSymbolStoreEntries(WorkflowActor.scala:1049); at cromwell.engine.workflow.WorkflowActor.createWorkflow(WorkflowActor.scala:241); at cromwell.engine.workflow.WorkflowActor$Start.runInitialization(WorkflowActor.scala:120); at cromwell.engine.workflow.WorkflowActor.cromwell$engine$workflow$WorkflowActor$$initializeExecutionStore(WorkflowActor.scala:326); at cromwell.engine.workflow.WorkflowActor$$anonfun$1.applyOrElse(WorkflowActor.scala:364); at cromwell.engine.workflow.WorkflowActor$$anonfun$1.applyOrElse(WorkflowActor.scala:360); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:604); at cromwell.engine.workflow.WorkflowActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowActor.scala:237); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:734); at cromwell.engine.workflow.WorkflowActor.processEvent(WorkflowActor.scala:237); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:598); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:592); at akka.actor.Actor$class.aroundReceive(Actor.scala:467); at cromwell.engine.workflow.WorkflowActor.aroundReceive(WorkflowActor.scala:237); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:516); at akka.actor.ActorCell.invoke(ActorCell.scala:487); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:238); at akka.dispatch.Mailbox.run(Mailbox.scala:220); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:397); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/520:2232,Log,LoggingFSM,2232,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/520,1,['Log'],['LoggingFSM']
Testability,a:14) at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379) at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461) at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750) at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749) at cromwell.core.actor.RobustClientHelperSpec.runTests(RobustClientHelperSpec.scala:14) at org.scalatest.Suite.run(Suite.scala:1147) at org.scalatest.Suite.run$(Suite.scala:1129) at cromwell.core.TestKitSuite.org$scalatest$BeforeAndAfterAll$$super$run(TestKitSuite.scala:16) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.core.actor.RobustClientHelperSpec.org$scalatest$FlatSpecLike$$super$run(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.core.actor.RobustClientHelperSpec.run(RobustClientHelperSpec.scala:14) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4351:2969,Test,TestKitSuite,2969,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4351,1,['Test'],['TestKitSuite']
Testability,a:16) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Thre,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4525,Test,TestFramework,4525,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestFramework']
Testability,a:528) at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527) at cromwell.CromwellTestKitSpec.newAssertionFailedException(CromwellTestKitSpec.scala:251) at org.scalatest.Assertions.fail(Assertions.scala:1121) at org.scalatest.Assertions.fail$(Assertions.scala:1117) at cromwell.CromwellTestKitSpec.fail(CromwellTestKitSpec.scala:251) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$20(SingleWorkflowRunnerActorSpec.scala:266) at akka.testkit.EventFilter.intercept(TestEventListener.scala:111) at cromwell.CromwellTestKitSpec$.waitForErrorWithException(CromwellTestKitSpec.scala:153) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076) at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088) at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289) at org.scala,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:1677,test,testkit,1677,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['test'],['testkit']
Testability,"aching using a MySQL database, one of my jobs gets incorrectly rerun. It finishes successfully on the first run, and it's output isn't deleted or changed afterwards.; This happens in the `samtoolsIndex` call in this workflow: https://github.com/biowdl/aligning/tree/BIOWDL-25 which is run as a subworkflow of this one: https://github.com/biowdl/RNA-seq. I noticed that the command which is run on the rerun is different from the one during the initial run.; The initial run produces this command:; ```; samtools index /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/257197fe-a034-4c51-addc-3dc47564b967/call-sample/shard-0/sample/0e4e2e8d-d042-4907-9fb5-1d4f894f8366/call-library/shard-0/library/d995de1f-ecc6-4034-b35b-a860506821ff/call-starAlignment/AlignStar/d339740c-c1be-44ae-b4dd-8db2b47237c7/call-samtoolsIndex/inputs/exports/sasc/biowdl-testing/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam /exports/sasc/biowdl-testing/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam.bai; ```; The rerun uses this:; ```; samtools index /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-samtoolsIndex/inputs/exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-star/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3717:999,test,testing,999,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3717,1,['test'],['testing']
Testability,actor.ActorCell.attachChild(ActorCell.scala:431) at akka.actor.ActorSystemImpl.systemActorOf(ActorSystem.scala:745) at akka.testkit.TestKitBase.$init$(TestKit.scala:170) at akka.testkit.TestKit.<init>(TestKit.scala:896) at akka.testkit.TestProbe.<init>(TestKit.scala:954) at akka.testkit.TestProbe.<init>(TestKit.scala:956) at akka.testkit.TestProbe$.apply(TestKit.scala:990) at cromwell.core.actor.RobustClientHelperSpec.$anonfun$new$7(RobustClientHelperSpec.scala:109) at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1682) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.core.actor.RobustClientHelperSpec.withFixture(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680) at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692) at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289) at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692) at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674) at cromwell.core.actor.RobustClientHelperSpec.runTest(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410) at scala.collection.immutable.List.foreach(List.sca,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4351:1447,Test,TestSuite,1447,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4351,1,['Test'],['TestSuite']
Testability,"ad-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$ib] $$ib transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [INFO] [06/02/2016 19:49:46.377] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$$ib/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib/WorkflowInitializationActor-fd304efe-2bba-4859-9ffd-6ef7d4ae29d5] State is now terminal. Shutting down.; [WARN] [06/02/2016 19:49:46.381] [test-system-akka.actor.default-dispatcher-3] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$ib]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.495] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$kb] $$kb transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [WARN] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$kb]: cromwell.engine.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:1213,test,test-system-akka,1213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,1,['test'],['test-system-akka']
Testability,add integration test capability,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/2375:16,test,test,16,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2375,1,['test'],['test']
Testability,added server logging for error code 10 [BA-5703],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5030:13,log,logging,13,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5030,1,['log'],['logging']
Testability,added support for a FileRoller logback configuration,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1692:31,log,logback,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1692,1,['log'],['logback']
Testability,added support for a FileRoller logback configuration (#1692),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1710:31,log,logback,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1710,1,['log'],['logback']
Testability,"ah@localhost cromwell]$ java -Dconfig.file=/home/jeremiah/cromwell.mysql.conf -jar server/target/scala-2.12/cromwell-37-56b0390-SNAP.jar server; 2019-01-31 18:29:28,169 INFO - Running with database db.url = jdbc:mysql://localhost/cromwell?rewriteBatchedStatements=true; 2019-01-31 18:29:32,763 INFO - SELECT COUNT(*) FROM cromwell.DATABASECHANGELOGLOCK; 2019-01-31 18:29:32,786 INFO - CREATE TABLE cromwell.DATABASECHANGELOGLOCK (ID INT NOT NULL, `LOCKED` BIT(1) NOT NULL, LOCKGRANTED datetime NULL, LOCKEDBY VARCHAR(255) NULL, CONSTRAINT PK_DATABASECHANGELOGLOCK PRIMARY KEY (ID)); 2019-01-31 18:29:32,845 INFO - SELECT COUNT(*) FROM cromwell.DATABASECHANGELOGLOCK; 2019-01-31 18:29:32,853 INFO - DELETE FROM cromwell.DATABASECHANGELOGLOCK; 2019-01-31 18:29:32,854 INFO - INSERT INTO cromwell.DATABASECHANGELOGLOCK (ID, `LOCKED`) VALUES (1, 0); 2019-01-31 18:29:32,869 INFO - SELECT `LOCKED` FROM cromwell.DATABASECHANGELOGLOCK WHERE ID=1; 2019-01-31 18:29:32,888 INFO - Successfully acquired change log lock; 2019-01-31 18:29:35,077 INFO - Creating database history table with name: cromwell.DATABASECHANGELOG; 2019-01-31 18:29:35,078 INFO - CREATE TABLE cromwell.DATABASECHANGELOG (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED datetime NOT NULL, ORDEREXECUTED INT NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35) NULL, `DESCRIPTION` VARCHAR(255) NULL, COMMENTS VARCHAR(255) NULL, TAG VARCHAR(255) NULL, LIQUIBASE VARCHAR(20) NULL, CONTEXTS VARCHAR(255) NULL, LABELS VARCHAR(255) NULL, DEPLOYMENT_ID VARCHAR(10) NULL); 2019-01-31 18:29:35,271 INFO - SELECT COUNT(*) FROM cromwell.DATABASECHANGELOG; 2019-01-31 18:29:35,279 INFO - Reading from cromwell.DATABASECHANGELOG; 2019-01-31 18:29:35,280 INFO - SELECT * FROM cromwell.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC; 2019-01-31 18:29:35,282 INFO - SELECT COUNT(*) FROM cromwell.DATABASECHANGELOGLOCK; 2019-01-31 18:29:35,461 INFO - Successfully released change",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4605:1175,log,log,1175,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4605,1,['log'],['log']
Testability,"ailed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at akka.dispatch.forkjoin.ForkJ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:9833,log,logback,9833,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,2,['log'],['logback']
Testability,"ailed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.warn(Logger.java:716); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$2(Slf4jLogger.scala:75); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:75); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at akka.dispatch.forkjoin.ForkJo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:3454,log,logback,3454,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['logback']
Testability,"ailure received from the backend; max-retries = 10. // If 'true' then when Cromwell starts up, it tries to restart incomplete workflows; workflow-restart = true. // Cromwell will cap the number of running workflows at N; max-concurrent-workflows = 5000. // Cromwell will launch up to N submitted workflows at a time, regardless of how many open workflow slots exist; max-workflow-launch-count = 50. // Number of seconds between workflow launches; new-workflow-poll-rate = 20. // Since the WorkflowLogCopyRouter is initialized in code, this is the number of workers; number-of-workflow-log-copy-workers = 10; }. workflow-options {; // These workflow options will be encrypted when stored in the database; encrypted-fields: []. // AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". // Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". // When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. // Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; // Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; //workflow-failure-mode: ""ContinueWhilePossible""; }. // Optional call-caching configuration.; call-caching {; enabled = true. // The Docker image specified in the 'runtime' section of a task can be used as-is; // or Cromwell can lookup this Docker image to get a complete hash. For example,; // if a task specifies docker: ""ubuntu:latest"" and if lookup-docker-hash is true,; // Then Cromwell would query DockerHub to resolve ""ubuntu:latest"" to something like; // a2c950138e95bf603d919d0f74bec16a81d5cc1e3c3d574e8d5ed59795824f47; //; // A value of 'true' means that call hashes will more accurately represent the; // Docker image that was used to run the call, but at a cost of having to make a; // request to an external serv",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1480:85683,log,logs,85683,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1480,2,['log'],"['log-temporary', 'logs']"
Testability,"airedSingleSampleWf](https://github.com/broadinstitute/wdl/blob/develop/scripts/broad_pipelines/PublicPairedSingleSampleWf_160927.wdl) using Cromwell 0.19.3 and it was consistently failing with the following:. ```; 2016-10-06 21:32:38,239 cromwell-system-akka.actor.default-dispatcher-41 INFO - JES Run [UUID(65d59b8b):SamToFastqAndBwaMem:1]: Status change from Running to Success; 2016-10-06 21:32:38,586 cromwell-system-akka.actor.default-dispatcher-4 ERROR -WorkflowActor [UUID(65d59b8b)]: Completion work failed for call SamToFastqAndBwaMem:1.; java.sql.SQLDataException: data exception: string data, right truncation; table: EXECUTION_EVENT column: DESCRIPTION; at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[cromwell.jar:0.19]; at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[cromwell.jar:0.19]; at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source) ~[cromwell.jar:0.19]; at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source) ~[cromwell.jar:0.19]; <snip>; ```. I had run the previous version of the PublicPairedSingleSampleWf successfully. I finally realized that it had nothing to do with the workflow, but rather because I changed the GCS path for Cromwell's `baseExecutionBucket` to something much longer. Instead of my previous:. ```; gs://my-bucket/gatk-test/; ```. I had changed to:. ```; gs://my-bucket/broad_pipelines/PublicPairedSingleSampleWf_160927/; ```. When I went back and shortened the path, everything worked again. Along the way, I ran a similar test where I changed the task name for my test [vcf_chr_count.wdl](https://github.com/googlegenomics/pipelines-api-examples/blob/master/wdl_runner/workflows/vcf_chr_count/vcf_chr_count.wdl) from:. ```; task vcf_split; ```. to . ```; task vcf_split_what_if_i_have_a_really_long_task_is_that_the_problem; ```. This also generated the same exception:. ```; java.sql.SQLDataException: data exception: string data, right truncation; table: EXECUTION_EVENT column: DESCRIPTION; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1555:1352,test,test,1352,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1555,3,['test'],['test']
Testability,akka.dispatchers.engine-dispatcher-33 WARN - BackendPreparationActor_for_0845428a:myworkflow.mytask:-1:1 [UUID(0845428a)]: Docker lookup failed; cromwell_1 | java.lang.Exception: Unauthorized to get docker hash eu.gcr.io/project/image_name:tag; cromwell_1 | 	at cromwell.engine.workflow.WorkflowDockerLookupActor.cromwell$engine$workflow$WorkflowDockerLookupActor$$handleLookupFailure(WorkflowDockerLookupActor.scala:279); cromwell_1 | 	at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:93); cromwell_1 | 	at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:78); cromwell_1 | 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:35); cromwell_1 | 	at akka.actor.FSM.processEvent(FSM.scala:707); cromwell_1 | 	at akka.actor.FSM.processEvent$(FSM.scala:704); cromwell_1 | 	at cromwell.engine.workflow.WorkflowDockerLookupActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowDockerLookupActor.scala:45); cromwell_1 | 	at akka.actor.LoggingFSM.processEvent(FSM.scala:847); cromwell_1 | 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:829); cromwell_1 | 	at cromwell.engine.workflow.WorkflowDockerLookupActor.processEvent(WorkflowDockerLookupActor.scala:45); cromwell_1 | 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:701); cromwell_1 | 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:695); cromwell_1 | 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:35); cromwell_1 | 	at cromwell.docker.DockerClientHelper$$anonfun$dockerResponseReceive$1.applyOrElse(DockerClientHelper.scala:16); cromwell_1 | 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:269); cromwell_1 | 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:270); cromwell_1 | 	at akka.actor.Actor.aroundReceive(Actor.scala:539); cromwell_1 | 	at akka.actor.Actor.aroundReceive$(Actor.scala:537); cromwell_1 | 	at c,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7356:4475,Log,LoggingFSM,4475,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7356,1,['Log'],['LoggingFSM']
Testability,al run.; The initial run produces this command:; ```; samtools index /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/257197fe-a034-4c51-addc-3dc47564b967/call-sample/shard-0/sample/0e4e2e8d-d042-4907-9fb5-1d4f894f8366/call-library/shard-0/library/d995de1f-ecc6-4034-b35b-a860506821ff/call-starAlignment/AlignStar/d339740c-c1be-44ae-b4dd-8db2b47237c7/call-samtoolsIndex/inputs/exports/sasc/biowdl-testing/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam /exports/sasc/biowdl-testing/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam.bai; ```; The rerun uses this:; ```; samtools index /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-samtoolsIndex/inputs/exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-star/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam /exports/sasc/biowdl-testing/src/04_RNA-seq/cromwell-executions/pipeline/14df3e76-ea79-4423-bfa2-1198de69cd1b/call-sample/shard-0/sample/0380d883-7bc4-4ef5-ac60-b3bbee90e53d/call-library/shard-0/library/c6c844c8-6e18-44ac-9cff-01a9da900159/call-starAlignment/AlignStar/bb11fd8a-33f9-4343-bf4b-bf397e063ecc/call-star/analysis/04_RNA-seq/samples/S1/lib_lib1/star/S1-lib1.Aligned.sortedByCoord.out.bam.bai; ```; The second argument changes from the intended path to a path inside of the execution folder. It looks like the output from the preceding mapping job gets linked to in the execution fold,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3717:1163,test,testing,1163,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3717,2,['test'],['testing']
Testability,ala:1129) at cromwell.core.TestKitSuite.org$scalatest$BeforeAndAfterAll$$super$run(TestKitSuite.scala:16) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.core.actor.RobustClientHelperSpec.org$scalatest$FlatSpecLike$$super$run(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.core.actor.RobustClientHelperSpec.run(RobustClientHelperSpec.scala:14) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4351:3937,Test,TestRunner,3937,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4351,1,['Test'],['TestRunner']
Testability,ala:1129); at cromwell.CromwellTestKitSpec.org$scalatest$BeforeAndAfterAll$$super$run(CromwellTestKitSpec.scala:251); at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213); at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210); at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208); at cromwell.CromwellTestKitWordSpec.org$scalatest$WordSpecLike$$super$run(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192); at org.scalatest.SuperEngine.runImpl(Engine.scala:521); at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192); at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190); at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250); at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314); at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507); at sbt.TestRunner.runTest$1(TestFramework.scala:113); at sbt.TestRunner.run(TestFramework.scala:124); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282); at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFunction.apply(TestFramework.scala:294); at sbt.Tests$.processRunnable$1(Tests.scala:347); at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353); at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46); at sbt.std.Transform$$anon$4.work(System.scala:67); at sbt.Execute.$anonfun$submit$2(Execute.scala:269); at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16); at sbt.Execute.work(Execute.scala:278); at sbt.Execute.$anonfun$submit$1(Execute.scala:269); at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178); at sbt.Compl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:3770,Test,TestRunner,3770,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,2,['Test'],['TestRunner']
Testability,ala:250); at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192); at org.scalatest.SuperEngine.runImpl(Engine.scala:521); at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192); at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190); at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250); at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314); at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507); at sbt.TestRunner.runTest$1(TestFramework.scala:113); at sbt.TestRunner.run(TestFramework.scala:124); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282); at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFunction.apply(TestFramework.scala:294); at sbt.Tests$.processRunnable$1(Tests.scala:347); at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353); at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46); at sbt.std.Transform$$anon$4.work(System.scala:67); at sbt.Execute.$anonfun$submit$2(Execute.scala:269); at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16); at sbt.Execute.work(Execute.scala:278); at sbt.Execute.$anonfun$submit$1(Execute.scala:269); at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178); at sbt.CompletionService$$anon$2.call(CompletionService.scala:37); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.la,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:4203,Test,TestFramework,4203,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,2,['Test'],['TestFramework']
Testability,ala:47) at akka.actor.ActorCell.attachChild(ActorCell.scala:431) at akka.actor.ActorSystemImpl.systemActorOf(ActorSystem.scala:745) at akka.testkit.TestKitBase.$init$(TestKit.scala:170) at akka.testkit.TestKit.<init>(TestKit.scala:896) at akka.testkit.TestProbe.<init>(TestKit.scala:954) at akka.testkit.TestProbe.<init>(TestKit.scala:956) at akka.testkit.TestProbe$.apply(TestKit.scala:990) at cromwell.core.actor.RobustClientHelperSpec.$anonfun$new$7(RobustClientHelperSpec.scala:109) at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1682) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.core.actor.RobustClientHelperSpec.withFixture(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680) at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692) at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289) at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692) at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674) at cromwell.core.actor.RobustClientHelperSpec.runTest(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410) at scala.collection.immutable.List,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4351:1424,Test,TestSuite,1424,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4351,1,['Test'],['TestSuite']
Testability,alatest$BeforeAndAfterAll$$super$run(SwaggerServiceSpec.scala:17) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromiam.webservice.SwaggerServiceSpec.run(SwaggerServiceSpec.scala:17) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.la,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4357:4399,Test,TestFunction,4399,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4357,1,['Test'],['TestFunction']
Testability,alatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.org$scalatest$FlatSpecLike$$super$run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4295,Test,TestFramework,4295,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestFramework']
Testability,alatest.concurrent.Eventually.makeAValiantAttempt$1(Eventually.scala:395); at org.scalatest.concurrent.Eventually.tryTryAgain$1(Eventually.scala:409); at org.scalatest.concurrent.Eventually.eventually(Eventually.scala:439); at org.scalatest.concurrent.Eventually.eventually$(Eventually.scala:391); at cromwell.CromwellTestKitSpec.eventually(CromwellTestKitSpec.scala:251); at cromwell.CromwellTestKitSpec.runWdlAndAssertOutputs(CromwellTestKitSpec.scala:344); at cromwell.WorkflowOutputsSpec.$anonfun$new$4(WorkflowOutputsSpec.scala:38); at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85); at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83); at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104); at org.scalatest.Transformer.apply(Transformer.scala:22); at org.scalatest.Transformer.apply(Transformer.scala:20); at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078); at org.scalatest.TestSuite.withFixture(TestSuite.scala:196); at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195); at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076); at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088); at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289); at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088); at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070); at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396); at scala.collection.immutable.List.foreach(List.scala:389); at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384); at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373); at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410); at scala.collection.immutable.List.foreach(List.scala:389); a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:6825,Test,TestSuite,6825,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,1,['Test'],['TestSuite']
Testability,"all-Haplotypecaller/shard-0/hc.Haplotypecaller/755021ae-948b-47f9-94a8-66b486bda47d/call-HC_GVCF/shard-6/HC_GVCF-6-rc.txt; Caused by: java.nio.file.NoSuchFileException: s3://s3.amazonaws.com/s4-pbg-hc/HC_Dev_Run_5/Pipeline/RSM278260-6_8plex/pipeline_workflow/3997371c-9513-4386-a579-a72639c6e960/call-Haplotypecaller/shard-0/hc.Haplotypecaller/755021ae-948b-47f9-94a8-66b486bda47d/call-HC_GVCF/shard-6/HC_GVCF-6-rc.txt; ...; [2019-05-22 19:42:10,31] [info] WorkflowManagerActor WorkflowActor-3997371c-9513-4386-a579-a72639c6e960 is in a terminal state: WorkflowFailedState; [2019-05-22 19:42:59,50] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; ...; Workflow 3997371c-9513-4386-a579-a72639c6e960 transitioned to state Failed; ```. Pulling the actual AWS Batch Job parameters for the ""failed"" job (7c2d29c2-f04e-4b3f-8579-915a6fbc9033) I see the following:; ```; {""jobs"": [{; ""status"": ""SUCCEEDED"", ; ""container"": {; ""mountPoints"": [{""sourceVolume"": ""local-disk"", ""containerPath"": ""/cromwell_root""}], ; ""taskArn"": ""arn:aws:ecs:us-east-1:260062248592:task/78221618-403c-4b10-b9e1-6c1534a44723"", ; ""logStreamName"": ""hc_Haplotypecaller-hc_HC_GVCF/default/78221618-403c-4b10-b9e1-6c1534a44723"", ; ""image"": ""260062248592.dkr.ecr.us-east-1.amazonaws.com/s4-TN-alignandmolvar:1.3.2"", ; ""containerInstanceArn"": ""arn:aws:ecs:us-east-1:260062248592:container-instance/3cfe8456-fd3e-420d-91bc-aa1d8d134194"", ; ""environment"": [; {""name"": ""AWS_CROMWELL_LOCAL_DISK"", ""value"": ""/cromwell_root""}, ; {""name"": ""AWS_CROMWELL_CALL_ROOT"", ; ""value"": ""s3://dev-nphi-cromwell-v8/cromwell-execution/TN_workflow/2b65d83d-7d30-465e-9127-95c6886056e4/call-Haplotypecaller/shard-1/hc.Haplotypecaller/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/call-HC_GVCF/shard-23""}, ; {""name"": ""AWS_CROMWELL_OUTPUTS"", ; ""value"": ""Run02_Pair003_Lane1_Tumor.hc.gvcf.gz,s3://dev-nphi-cromwell-v8/cromwell-execution/TN_workflow/2b65d83d-7d30-465e-9127-95c6886056e4/call-Haplotypecaller/shard-1/hc.Haplotypecaller/cfe96bd8-ee6b-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5004:12653,log,logStreamName,12653,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5004,1,['log'],['logStreamName']
Testability,"alse. // Max number of retries per job that the engine will attempt in case of a retryable failure received from the backend; max-retries = 10. // If 'true' then when Cromwell starts up, it tries to restart incomplete workflows; workflow-restart = true. // Cromwell will cap the number of running workflows at N; max-concurrent-workflows = 5000. // Cromwell will launch up to N submitted workflows at a time, regardless of how many open workflow slots exist; max-workflow-launch-count = 50. // Number of seconds between workflow launches; new-workflow-poll-rate = 20. // Since the WorkflowLogCopyRouter is initialized in code, this is the number of workers; number-of-workflow-log-copy-workers = 10; }. workflow-options {; // These workflow options will be encrypted when stored in the database; encrypted-fields: []. // AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". // Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". // When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. // Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; // Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; //workflow-failure-mode: ""ContinueWhilePossible""; }. // Optional call-caching configuration.; call-caching {; enabled = true. // The Docker image specified in the 'runtime' section of a task can be used as-is; // or Cromwell can lookup this Docker image to get a complete hash. For example,; // if a task specifies docker: ""ubuntu:latest"" and if lookup-docker-hash is true,; // Then Cromwell would query DockerHub to resolve ""ubuntu:latest"" to something like; // a2c950138e95bf603d919d0f74bec16a81d5cc1e3c3d574e8d5ed59795824f47; //; // A value of 'true' means that call hashes will more accurately represent the; // Docker image that",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1480:85606,log,logs,85606,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1480,3,['log'],"['log-dir', 'logs']"
Testability,"always, and depends on the context, and not always in the same part of the pipeline) there is an error about time out operation. It looks that some tasks that take longer does not get a response for the container (although it is still running) and thus cromwell assumes a failure (because docker returns -1 although it is still running) and the workflow finishes with errors. In the logs for the task, embedded into the standard error from the operations, I get the following signature:. ```; time=""2018-03-07T14:17:55+01:00"" level=error msg=""error waiting for container: read tcp 192.168.99.1:56961->192.168.99.101:2376: read: operation timed out""; ```. And the `rc` file is marked with `-1`. I cannot continue on this return code, because the task is still running on the container and continuing assumes that the operation is finished. My local configuration file looks like this:. ```; include required(classpath(""application"")). ## keep always the workflow logs; workflow-options.workflow-log-temporary: false. backend.providers.Local.config {; ## limit the number of jobs; concurrent-job-limit = 10; filesystems.local {; ## do not allow copy (huge files); ## prefer hard-links; localization: [""hard-link"", ""soft-link""]; caching.duplication-strategy: [""hard-link"", ""soft-link""]; }; }; ```. And the cromwell command is (using a `brew` installed wrapper):. ```bash; JAVA_OPTS=""-Dconfig.file=local.conf"" cromwell run --inputs inputs.json --metadata-output metadata-output.json workflow.wdl; ```. This error is happening for different workflows and tasks, so it is very difficult to account for it. In addition, a long-run workflow stops for this and requires a retry of the whole pipeline in my system, so it is really a problem when trying to run a time-consuming workflow that requires re-start for non-real failures. Is there any way that the local backend (or any backend) catch the docker timeout failures and re-attach? Or maybe that the `script.submit` or `script.backgound` checks that the ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3370:1083,log,log-temporary,1083,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3370,1,['log'],['log-temporary']
Testability,amespace from workflow: Failed to import workflow SomaticPairedSingleSampleWf.wdl.: File not found /wdl_runner/SomaticPairedSingleSampleWf.wdl at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:186) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:156) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:151) at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34) at akka.actor.FSM.processEvent(FSM.scala:663) at akka.actor.FSM.processEvent$(FSM.scala:660) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:114) at akka.actor.LoggingFSM.processEvent(FSM.scala:799) at akka.actor.LoggingFSM.processEvent$(FSM.scala:781) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:114) at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:657) at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651) at akka.actor.Actor.aroundReceive(Actor.scala:513) at akka.actor.Actor.aroundReceive$(Actor.scala:511) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:114) at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527) at akka.actor.ActorCell.invoke(ActorCell.scala:496) at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257) at akka.dispatch.Mailbox.run(Mailbox.scala:224) at akka.dispatch.Mailbox.exec(Mailbox.scala:234) at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) at ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4482:1267,Log,LoggingFSM,1267,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4482,1,['Log'],['LoggingFSM']
Testability,"ameters"": {}, ; ""jobDefinition"": ""arn:aws:batch:us-east-1:260062248592:job-definition/hc_Haplotypecaller-hc_HC_GVCF:19527"", ; ""statusReason"": ""Essential container in task exited"", ; ""jobId"": ""7c2d29c2-f04e-4b3f-8579-915a6fbc9033"", ; ""attempts"": [{; ""startedAt"": 1558552881926, ""container"": {; ""taskArn"": ""arn:aws:ecs:us-east-1:260062248592:task/78221618-403c-4b10-b9e1-6c1534a44723"", ; ""containerInstanceArn"": ""arn:aws:ecs:us-east-1:260062248592:container-instance/3cfe8456-fd3e-420d-91bc-aa1d8d134194"", ; ""logStreamName"": ""hc_Haplotypecaller-hc_HC_GVCF/default/78221618-403c-4b10-b9e1-6c1534a44723"", ; ""exitCode"": 0}, ""stoppedAt"": 1558553539743, ""statusReason"": ""Essential container in task exited""}], ; ""jobQueue"": ""arn:aws:batch:us-east-1:260062248592:job-queue/GenomicsDefaultQueue-80d8b8f0-15ed-11e9-b8b7-12ddf705bbc4"", ; ""dependsOn"": [], ; ""startedAt"": 1558552881926, ; ""jobName"": ""Haplotypecaller_HC_GVCF"", ; ""createdAt"": 1558552763368, ""stoppedAt"": 1558553539743}]}; ```. Clearly, the AWS Batch job parameters are referencing a completely different set of input files from the set described in the workflow log. In this particular case, the job described in the log was started via cromwell run using v36 on an isolated EC2 instance, while the workflow described by the job parameters json was submitted to a cromwell v36.1 server running on a completely separate EC2 instance. This would point to call caching NOT being the problem but a more fundamental issue with how Cromwell interfaces with the AWS Batch backend to submit jobs. We've also observed this result using Cromwell v40 and 41, the latter using a completely new stack created just for that version, in both run and server modes. If more information is needed, please reach out and we'll provide what we can; the transient nature of the Batch job parameters and the lack of a set of cases that reliably reproduce this error has made it difficult for us to investigate and we're hoping developer assistance can get this resolved.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5004:16111,log,log,16111,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5004,2,['log'],['log']
Testability,ances$$anon$1.traverse(list.scala:72); 	at cats.instances.ListInstances$$anon$1.traverse(list.scala:12); 	at cats.Traverse$Ops.traverse(Traverse.scala:19); 	at cats.Traverse$Ops.traverse$(Traverse.scala:19); 	at cats.Traverse$ToTraverseOps$$anon$3.traverse(Traverse.scala:19); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableNodes(WorkflowExecutionActor.scala:504); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$5.applyOrElse(WorkflowExecutionActor.scala:186); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$5.applyOrElse(WorkflowExecutionActor.scala:184); 	at scala.PartialFunction$OrElse.apply(PartialFunction.scala:168); 	at akka.actor.FSM.processEvent(FSM.scala:687); 	at akka.actor.FSM.processEvent$(FSM.scala:681); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:49); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:820); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:802); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:49); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:678); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:672); 	at akka.actor.Actor.aroundReceive(Actor.scala:517); 	at akka.actor.Actor.aroundReceive$(Actor.scala:515); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$Timers$$super$aroundReceive(WorkflowExecutionActor.scala:49); 	at akka.actor.Timers.aroundReceive(Timers.scala:51); 	at akka.actor.Timers.aroundReceive$(Timers.scala:40); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:49); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588); 	at akka.actor.ActorCell.invoke(ActorCell.scala:557); 	a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4526:5242,Log,LoggingFSM,5242,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4526,1,['Log'],['LoggingFSM']
Testability,arm64 build test,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7154:12,test,test,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7154,1,['test'],['test']
Testability,"artTime"": ""2018-08-14T16:14:32.007439Z"",; ""description"": ""Stopped pulling \""ubuntu@sha256:3f119dc0737f57f704ebecac8a6d8477b0f6ca1ca0332c7ee1395ed2c6a82be7\"""",; ""endTime"": ""2018-08-14T16:14:32.463087Z""; },; {; ""startTime"": ""2018-08-14T16:17:06.327716Z"",; ""description"": ""Worker released"",; ""endTime"": ""2018-08-14T16:18:14.462Z""; },; {; ""startTime"": ""2018-08-14T16:16:58.180303Z"",; ""description"": ""Started running \""\/bin\/sh -c retry() { for i in `seq 3`; do gsutil -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/google\/logs\/output gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/t.log 2> gsutil_output.txt; RC_GSUTIL=$?; if [[ \\\""$RC_GSUTIL\\\"" -eq 1 && grep -q \\\""Bucket is requester pays bucket but no user project provided.\\\"" gsutil_output.txt ]]; then\\n echo \\\""Retrying with user project dos-testing\\\"" && gsutil -u dos-testing -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/google\/logs\/output gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/t.log; fi ; RC=$?; if [[ \\\""$RC\\\"" -eq 0 ]]; then break; fi; sleep 5; done; return \\\""$RC\\\""; }; retry\"""",; ""endTime"": ""2018-08-14T16:17:00.575023Z""; },; {; ""startTime"": ""2018-08-14T16:13:13.678Z"",; ""description"": ""Pending"",; ""endTime"": ""2018-08-14T16:13:13.678Z""; },; {; ""startTime"": ""2018-08-14T16:16:42.510303Z"",; ""description"": ""Stopped running \""\/bin\/sh -c retry() { for i in `seq 3`; do gsutil -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/cromwell_root\/stderr gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/ 2> gsutil_output.txt; RC_GSUTIL=$?; if [[ \\\""$RC_GSUTIL\\\"" -eq 1 && grep -q \\\""Bucket is requester pays bucket but no user project provided.\\\"" gsutil_output.txt ]]; then\\n echo \\\""Retrying with user project dos-testing\\",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4162:18213,test,testing,18213,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4162,3,"['log', 'test']","['logs', 'testing']"
Testability,"ase {; db {; connectionTimeout = 30000; numThreads = 1; url = ""jdbc:hsqldb:file:/opt/caper/default_file_db;shutdown=false;hsqldb.tx=mvcc;hsqldb.lob_compressed=true;hsqldb.default_table_type=cached;hsqldb.result_max_memory_rows=10000;hsqldb.large_data=true;hsqldb.applog=1;hsqldb.script_format=3""; }; }; aws {; application-name = ""cromwell""; auths = [; {; name = ""default""; scheme = ""default""; }; ]; region = ""us-east-1""; }; engine {; filesystems {; s3 {; auth = ""default""; }; }; }; ```. Even with the `reference` strategy, Cromwell still make a `cacheCopy` of previous outputs. Here is the `metadata.json` from a pipeline run with `reference` strategy. Cromwell still makes a `cacheCopy` directory.; ```; {; ""calls"": {; ""atac.bam2ta"": [; {; ""executionStatus"": ""Done"",; ""stdout"": ""s3://caper4-04-20-2021/out/atac/b59c0d05-5210-4341-b4f0-dcbf5b9e74c1/call-bam2ta/shard-0/bam2ta-0-stdout.log"",; ""compressedDockerSize"": 963995760,; ""shardIndex"": 0,; ""outputs"": {; ""ta"": ""s3://caper4-04-20-2021/out/atac/b59c0d05-5210-4341-b4f0-dcbf5b9e74c1/call-bam2ta/shard-0/cacheCopy/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz""; },; ""callCaching"": {; ""allowResultReuse"": true,; ""hit"": true,; ""result"": ""Cache Hit: 4f56e5c0-5c52-4f67-aa11-35be0336e2bf:atac.bam2ta:0"",; ""hashes"": {; ""output count"": ""C4CA4238A0B923820DCC509A6F75849B"",; ""runtime attribute"": {; ""docker"": ""A2DD51631B4B22941E9794A812F024BE"",; ""failOnStderr"": ""68934A3E9455FA72420237EB05902327"",; ""continueOnReturnCode"": ""CFCD208495D565EF66E7DFF9F98764DA""; },; ""output expression"": {; ""File ta"": ""9EB184A935F0EDE297EE65CA4AE0260B""; },; ""input count"": ""C51CE410C124A10E0DB5E4B97FC2AF39"",; ""backend name"": ""AC68BBF921D953D1CFAB916CB6120864"",; ""command template"": ""1EB01D534768C933E7F9F2951CA3E27C"",; ""input"": {; ""Boolean disable_tn5_shift"": ""68934A3E9455FA72420237EB05902327"",; ""String mito_chr_name"": ""4A8385B4D27A8EEDB503793999FE2D1B"",; ""Boolean paired_end"": ""B326B5062B2F0E6904681071753",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6327:3002,log,log,3002,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6327,1,['log'],['log']
Testability,"astq_align/transform_pack.cwl#readgroup.yml/readgroups_bam_uuid,Some([Lcwl.InputRecordField;@775ffa16),record,None)).; 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$materialization$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:211); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:181); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:176); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); 	at akka.actor.FSM.processEvent(FSM.scala:684); 	at akka.actor.FSM.processEvent$(FSM.scala:681); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:820); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:802); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:678); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:672); 	at akka.actor.Actor.aroundReceive(Actor.scala:517); 	at akka.actor.Actor.aroundReceive$(Actor.scala:515); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588); 	at akka.actor.ActorCell.invoke(ActorCell.scala:557); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258); 	at akka.dispatch.Mailbox.run(Mailbox.scala:225); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:235); 	at akka.dispatch.forkjoi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4103:6615,Log,LoggingFSM,6615,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4103,1,['Log'],['LoggingFSM']
Testability,"at is specified for the task is in a private repo to which the Centaur service account has been granted access. This test passes on PAPI v2 but on GCP Batch jobs fail with messages like the following visible in `gcloud batch jobs describe`:. ```; Job state is set from RUNNING to FAILED for job projects/1005074806481/locations/us-central1/jobs/job-27607753-d2d5-404d-89af-a786da8ad383.Job; failed due to task failure. Specifically, task with index 0 failed due to the; following task event: ""Task state is updated from RUNNING to FAILED on zones/us-central1-b/instances/8098872438472929780; with exit code 125."". ```. Exit code 125 being a typical ""[something's wrong with that Docker invocation](https://stackoverflow.com/questions/53640424/exit-code-125-from-docker-when-trying-to-run-container-programmatically)"" error. in Cloud Logging I see the following, including what looks like a plaintext password which I have x'd out below:. ```; Executing runnable container:{image_uri:""broadinstitute/cloud-cromwell@sha256:0d51f90e1dd6a449d4587004c945e43f2a7bbf615151308cff40c15998cc3ad4"" commands:""/mnt/disks/cromwell_root/script"" entrypoint:""/bin/bash"" volumes:""/mnt/disks/cromwell_root:/mnt/disks/cromwell_root"" username:""firecloud"" password:""xxxxx""} labels:{key:""tag"" value:""UserRunnable""} for Task task/job-27607753-d2d5-132dc052-df92-4db100-group0-0/0/0 in TaskGroup group0 of Job job-27607753-d2d5-132dc052-df92-4db100.; ```. So it looks like the GCP Batch backend has acquired and plumbed through the required Docker credentials, but the login to Docker Hub doesn't seem to have happened. ### Release Notes Confirmation. #### `CHANGELOG.md`; - [ ] I updated `CHANGELOG.md` in this PR; - [x] I assert that this change shouldn't be included in `CHANGELOG.md` because it doesn't impact community users. #### Terra Release Notes; - [ ] I added a suggested release notes entry in this Jira ticket; - [x] I assert that this change doesn't need Jira release notes because it doesn't impact Terra users",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7515:1927,log,login,1927,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7515,3,"['assert', 'log']","['assert', 'login']"
Testability,at java.lang.Long.parseLong(Long.java:578); 	at java.lang.Long.valueOf(Long.java:776); 	at java.lang.Long.decode(Long.java:928); 	at java.util.UUID.fromString(UUID.java:198); 	at cromwell.core.WorkflowId$.fromString(WorkflowId.scala:11); 	at cromwell.engine.workflow.lifecycle.execution.callcaching.CallCacheDiffActor.cromwell$engine$workflow$lifecycle$execution$callcaching$CallCacheDiffActor$$makeMetadataQuery(CallCacheDiffActor.scala:298); 	at cromwell.engine.workflow.lifecycle.execution.callcaching.CallCacheDiffActor$$anonfun$1.applyOrElse(CallCacheDiffActor.scala:59); 	at cromwell.engine.workflow.lifecycle.execution.callcaching.CallCacheDiffActor$$anonfun$1.applyOrElse(CallCacheDiffActor.scala:56); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); 	at akka.actor.FSM.processEvent(FSM.scala:663); 	at akka.actor.FSM.processEvent$(FSM.scala:660); 	at cromwell.engine.workflow.lifecycle.execution.callcaching.CallCacheDiffActor.akka$actor$LoggingFSM$$super$processEvent(CallCacheDiffActor.scala:53); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:799); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:781); 	at cromwell.engine.workflow.lifecycle.execution.callcaching.CallCacheDiffActor.processEvent(CallCacheDiffActor.scala:53); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor.aroundReceive(Actor.scala:502); 	at akka.actor.Actor.aroundReceive$(Actor.scala:500); 	at cromwell.engine.workflow.lifecycle.execution.callcaching.CallCacheDiffActor.aroundReceive(CallCacheDiffActor.scala:53); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289); 	at java.util.concu,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2453:1208,Log,LoggingFSM,1208,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2453,1,['Log'],['LoggingFSM']
Testability,at org.scalatest.Suite.run$(Suite.scala:1129); at cromwell.CromwellTestKitSpec.org$scalatest$BeforeAndAfterAll$$super$run(CromwellTestKitSpec.scala:251); at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213); at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210); at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208); at cromwell.CromwellTestKitWordSpec.org$scalatest$WordSpecLike$$super$run(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192); at org.scalatest.SuperEngine.runImpl(Engine.scala:521); at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192); at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190); at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250); at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314); at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507); at sbt.TestRunner.runTest$1(TestFramework.scala:113); at sbt.TestRunner.run(TestFramework.scala:124); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282); at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFunction.apply(TestFramework.scala:294); at sbt.Tests$.processRunnable$1(Tests.scala:347); at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353); at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46); at sbt.std.Transform$$anon$4.work(System.scala:67); at sbt.Execute.$anonfun$submit$2(Execute.scala:269); at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16); at sbt.Execute.work(Execute.scala:278); at sbt.Execute.$anonfun$submit$1(Execute.scala:269); at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(Concurrent,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:3737,Test,TestFramework,3737,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,2,['Test'],['TestFramework']
Testability,atSpecLike.scala:1793) at cromiam.webservice.SwaggerServiceSpec.org$scalatest$BeforeAndAfterAll$$super$run(SwaggerServiceSpec.scala:17) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromiam.webservice.SwaggerServiceSpec.run(SwaggerServiceSpec.scala:17) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4357:4310,Test,TestFramework,4310,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4357,1,['Test'],['TestFramework']
Testability,"atch suite, still, this seems to invoke a papi test [testCentaurGcpBatch.sh](https://github.com/broadinstitute/cromwell/blob/5448b85bf334e0970665a69549e796199acc8bd7/src/ci/bin/testCentaurGcpBatch.sh#L25) (see [papi_v2alpha1_gcsa.test](https://github.com/broadinstitute/cromwell/blob/5448b85bf334e0970665a69549e796199acc8bd7/centaur/src/main/resources/standardTestCases/papi_v2alpha1_gcsa.test#L3), the test itself says that batch backend is not used). Could this be related to the false-alarms from codecoverage's bot?; 2. There warnings raised by codecov which seem wrong, for example, the lines mentioned on [GcpBatchGroupedRequests](https://github.com/broadinstitute/cromwell/blob/a333f65b8e80ae37091a5629e0331c2105aeefeb/supportedBackends/google/batch/src/main/scala/cromwell/backend/google/batch/api/request/GcpBatchGroupedRequests.scala) are covered by [GcpBatchGroupedRequestsSpec](https://github.com/broadinstitute/cromwell/blob/a333f65b8e80ae37091a5629e0331c2105aeefeb/supportedBackends/google/batch/src/test/scala/cromwell/backend/google/batch/api/request/GcpBatchGroupedRequestsSpec.scala); 3. Should we set [GcpBatchAsyncBackendJobExecutionActor#requestsAbortAndDiesImmediately](https://github.com/broadinstitute/cromwell/blob/a333f65b8e80ae37091a5629e0331c2105aeefeb/supportedBackends/google/batch/src/main/scala/cromwell/backend/google/batch/actors/GcpBatchAsyncBackendJobExecutionActor.scala#L220) to `false`? this is set by PAPI but it causes a centaur test to fail.; 4. While this is inherited from PAPI, I think we need to change the behavior but I'd like to get a 2nd option, increasing `request-workers` also increases the worker's delay to pull work, for example, setting this value to `100` or above causes would cause the delay to become ~18m which seems insane (see [BatchApiRequestManager.scala](https://github.com/broadinstitute/cromwell/blob/cee36d98755d2163f279600786bd60d6226835f0/supportedBackends/google/batch/src/main/scala/cromwell/backend/google/batch/api/BatchApiR",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7412:2373,test,test,2373,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7412,1,['test'],['test']
Testability,"ate directory '/cromwell_root/glob-b34dfc006a981a93d6da067cf50036fe': Permission denied; ; 04:26:11; /bin/bash: line 66: /cromwell_root/glob-b34dfc006a981a93d6da067cf50036fe/cromwell_glob_control_file: No such file or directory; ; 04:26:11; ln: failed to access '/cromwell_root/cwl.output.json': No such file or directory; ; 04:26:11; /bin/bash: line 72: /cromwell_root/glob-b34dfc006a981a93d6da067cf50036fe.list: Permission denied; ; 04:26:11; ls: cannot access '/cromwell_root/glob-b34dfc006a981a93d6da067cf50036fe': No such file or directory; ; 04:26:11; mv: cannot stat '/cromwell_root/bbmap-rc.txt.tmp': No such file or directory; ; 04:26:11; MIME-Version: 1.0; ; 04:26:11; Content-Type: multipart/alternative; boundary=278185423cec5467d351ab751807c36a; ; 04:26:11; --278185423cec5467d351ab751807c36a; ; 04:26:11; Content-Type: text/plain; ; 04:26:11; Content-Disposition: attachment; filename=rc.txt; ; 04:26:11; cat: /cromwell_root/bbmap-rc.txt: No such file or directory; ; 04:26:11; --278185423cec5467d351ab751807c36a; ; 04:26:11; Content-Type: text/plain; ; 04:26:11; Content-Disposition: attachment; filename=stdout.txt; ; 04:26:11; cat: /cromwell_root/bbmap-stdout.log: No such file or directory; ; 04:26:11; --278185423cec5467d351ab751807c36a; ; 04:26:11; Content-Type: text/plain; ; 04:26:11; Content-Disposition: attachment; filename=stderr.txt; ; 04:26:11; cat: /cromwell_root/DA0000317_WSU-DLCL.qcstats: No such file or directory; ; 04:26:11; --278185423cec5467d351ab751807c36a--; ; 04:26:11; cat: /cromwell_root/bbmap-rc.txt: No such file or directory; ; 04:26:11; rm: cannot remove '/out.1': No such file or directory; ; 04:26:11; rm: cannot remove '/err.1': No such file or directory; ```; I have also tried to login to the node, and explicitly specify 777 permissions to /cromwell-root but the result was the same.; Are there any specific considerations regarding the docker image or any additional configuration required? . Thanks in advance for your help",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4542:7266,log,log,7266,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4542,2,['log'],"['log', 'login']"
Testability,"ate): Job helloHaplotypeCaller.haplotypeCaller:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /home/centos/cromwell-executions/helloHaplotypeCaller/bf90a37b-6ffa-4122-a12c-24aced32f3b6/call-haplotypeCaller/execution/stderr; [2017-10-04 06:07:31,37] [info] WorkflowManagerActor WorkflowActor-bf90a37b-6ffa-4122-a12c-24aced32f3b6 is in a terminal state: WorkflowFailedState; [2017-10-04 06:07:35,37] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2017-10-04 06:07:35,41] [info] Message [cromwell.engine.workflow.WorkflowManagerActor$RetrieveNewWorkflows$] without sender to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor#-1816723107] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; Workflow bf90a37b-6ffa-4122-a12c-24aced32f3b6 transitioned to state Failed; [2017-10-04 06:07:35,44] [info] Automatic shutdown of the async connection; [2017-10-04 06:07:35,44] [info] Gracefully shutdown sentry threads.; [2017-10-04 06:07:35,44] [info] Shutdown finished.; ```. Ans this is the output from the stderr file; ```; vi /home/centos/cromwell-executions/helloHaplotypeCaller/bf90a37b-6ffa-4122-a12c-24aced32f3b6/call-haplotypeCaller/execution/stderr; ^[[32m BwaSpark ^[[31m(BETA Tool) ^[[36mBWA on Spark^[[0m; ^[[32m CollectBaseDistributionByCycleSpark ^[[31m(BETA Tool) ^[[36mCollectBaseDistributionByCycle on Spark^[[0m; ^[[32m CollectInsertSizeMetricsSpark ^[[31m(BETA Tool) ^[[36mCollect Insert Size Distribution on Spark^[[0m; ^[[32m CollectMultipleMetricsSpark ^[[31m(BETA Tool) ^[[36mA ""meta-metrics"" calculating program that produces multiple metrics for the provided SAM/BAM/CRAM file^[[0m; ^[[32m CollectQualityYieldMetricsSpark ^",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2673:6663,log,log-dead-letters,6663,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2673,1,['log'],['log-dead-letters']
Testability,"ate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. I should also mention that this was in v21, when I attempted in v24, I got a more spectacular failure - `java.lang.UnsupportedOperationException: Could not evaluate expression: ""--maf2 "" + write_lines(maf2)`, and then what appeared to be an infinite loop of the exact same stack trace over and over, which after a standard `ctrl-c` kill became `Waiting for 1 workflows to abort...` over and over again, which finally necessitated a `kill -9`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1875:15514,test,tests,15514,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875,2,['test'],['tests']
Testability,"ategy (above) is set to ""soft-link"",; # in order to allow for the original file path to be hashed.; # Default: file; hashing-strategy: ""path""; }; }; }; ...; backend.default = SGE; database {; profile = ""slick.jdbc.MySQLProfile$""; db {; url = ""jdbc:mysql://0.0.0.0:40001/testuser_db?useSSL=false&rewriteBatchedStatements=true""; user = ""fake""; password = ""fake""; driver = ""com.mysql.jdbc.Driver""; connectionTimeout = 5000; }; }. system {; # Maximum number of input file bytes allowed in order to read each type.; # If exceeded a FileSizeTooBig exception will be thrown.; input-read-limits {; lines = 128000000; string = 128000000; json = 128000000; tsv = 128000000; map = 128000000; object = 128000000; }; }. ```. <!-- Paste/Attach your workflow if possible: -->; a modified version of : https://github.com/gatk-workflows/gatk4-data-processing. [workflow.0263ce1e-e1da-44c4-a49f-56fea7a6e1ea.log](https://github.com/broadinstitute/cromwell/files/2143529/workflow.0263ce1e-e1da-44c4-a49f-56fea7a6e1ea.log). A workflow is failing. It looks like cromwell attempts to localise some folder, ; ```/share/ScratchGeneral/evaben/cromwell/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/0263ce1e-e1da-44c4-a49f-56fea7a6e1ea/call-SamToFastqAndBwaMem/inputs/-21323395/cromwell -> /share/ScratchGeneral/evaben/cromwell```; Is it attempting to localize my entire cromwell directory? IE the CWD of the cromwell server process?. This fails because a previously found workflow input (```/share/ScratchGeneral/evaben/cromwell/cromwell-executions/HaplotypeCallerGvcf_GATK4/f18cded7-24ae-470d-b58d-d87ce97f21cb/call-HaplotypeCaller/shard-6/inputs/share/ClusterShare/biodata/contrib/evaben/genome_one_na12878/reheader/NA12878_V2.5_Robot_1.dedup.realigned.recalibrated.bam.bai```) is a symlink to a file that no long exists. (NA12878_V2.5_Robot_1.dedup.realigned.recalibrated.bam.bai`). In addition that file is totally unrelated to the workflow I am trying to run ( it is from a different workflow, and a differen",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3825:1751,log,log,1751,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3825,1,['log'],['log']
Testability,atest$WordSpecLike$$super$run(CromwellTestKitSpec.scala:250); at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192); at org.scalatest.SuperEngine.runImpl(Engine.scala:521); at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192); at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190); at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250); at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314); at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507); at sbt.TestRunner.runTest$1(TestFramework.scala:113); at sbt.TestRunner.run(TestFramework.scala:124); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282); at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282); at sbt.TestFunction.apply(TestFramework.scala:294); at sbt.Tests$.processRunnable$1(Tests.scala:347); at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353); at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46); at sbt.std.Transform$$anon$4.work(System.scala:67); at sbt.Execute.$anonfun$submit$2(Execute.scala:269); at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16); at sbt.Execute.work(Execute.scala:278); at sbt.Execute.$anonfun$submit$1(Execute.scala:269); at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178); at sbt.CompletionService$$anon$2.call(CompletionService.scala:37); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4457:4151,Test,TestFramework,4151,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4457,2,['Test'],['TestFramework']
Testability,atest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.CromwellTestKitWordSpec.org$scalatest$WordSpecLike$$super$run(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192) at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190) at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:5089,Test,TestFramework,5089,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestFramework']
Testability,"atest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2037:2225,log,log,2225,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037,1,['log'],['log']
Testability,aticPairedSingleSampleWf.wdl.: File not found /wdl_runner/SomaticPairedSingleSampleWf.wdl at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:186) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:156) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:151) at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34) at akka.actor.FSM.processEvent(FSM.scala:663) at akka.actor.FSM.processEvent$(FSM.scala:660) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:114) at akka.actor.LoggingFSM.processEvent(FSM.scala:799) at akka.actor.LoggingFSM.processEvent$(FSM.scala:781) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:114) at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:657) at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651) at akka.actor.Actor.aroundReceive(Actor.scala:513) at akka.actor.Actor.aroundReceive$(Actor.scala:511) at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:114) at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527) at akka.actor.ActorCell.invoke(ActorCell.scala:496) at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257) at akka.dispatch.Mailbox.run(Mailbox.scala:224) at akka.dispatch.Mailbox.exec(Mailbox.scala:234) at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4482:1320,Log,LoggingFSM,1320,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4482,1,['Log'],['LoggingFSM']
Testability,"atus change from Initializing to Running; [2019-01-25 13:53:59,61] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10alignment_to_rec:NA:1]: Status change from Initializing to Running; [2019-01-25 13:58:25,58] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10alignment_to_rec:NA:1]: Status change from Running to Failed; [2019-01-25 13:58:39,11] [info] AwsBatchAsyncBackendJobExecutionActor [2c2e5a10prep_samples_to_rec:NA:1]: Status change from Running to Failed; [2019-01-25 13:58:40,06] [error] WorkflowManagerActor Workflow 2c2e5a10-8c57-4f9f-8d80-c2fccacbb452 failed (during ExecutingWorkflowState): Job alignment_to_rec:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-alignment_to_rec/alignment_to_rec-stderr.log.; Traceback (most recent call last):; File ""/usr/local/bin/bcbio_nextgen.py"", line 223, in <module>; runfn.process(kwargs[""args""]); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 48, in process; fnargs, parallel, out_keys, input_files = _world_from_cwl(args.name, fnargs[1:], work_dir); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 185, in _world_from_cwl; assert os.path.exists(os.path.join(work_dir, ""cwl.inputs.json"")); AssertionError. Job prep_samples_to_rec:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-prep_samples_to_rec/prep_samples_to_rec-stderr.log.; Traceback (most recent call last):; ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4586:1916,log,log,1916,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4586,1,['log'],['log']
Testability,"ault=""GVCF"" erc} \; -ploidy ${default=""2"" ploidy} \; -o ${out_gvcf_fn} \; 			--intervals ${interval} \; 			--interval_padding 100 \; -variant_index_type LINEAR \; -variant_index_parameter 128000 \; ${default=""\n"" extra_hc_params}; '''). run('echo DONE'); run('date'); "". echo ""$python_cmd""; set +e; python -c ""$python_cmd""; export exit_code=$?; set -e; echo exit code is $exit_code; ls. # create bundle conditional on failure of the Python section; if [[ ""${debug_dump_flag}"" == ""always"" || ( ""${debug_dump_flag}"" == ""onfail"" && $exit_code -ne 0 ) ]]; then; echo ""Creating debug bundle""; # tar up the output directory; touch debug_bundle.tar.gz; tar cfz debug_bundle.tar.gz --exclude=debug_bundle.tar.gz .; else; touch debug_bundle.tar.gz; fi; /opt/src/algutil/monitor_stop.py. # exit statement must be the last line in the command block; exit $exit_code. }; output {; File out_gvcf = ""${out_gvcf_fn}""; File out_gvcf_index = ""${out_gvcf_fn}.tbi""; File monitor_start=""monitor_start.log""; File monitor_stop=""monitor_stop.log""; File dstat=""dstat.log""; File debug_bundle=""debug_bundle.tar.gz""; } runtime {; docker : ""gcr.io/btl-dockers/btl_gatk:1""; memory: ""${ram_gb}GB""; cpu: ""${cpu_cores}""; disks: ""local-disk ${output_disk_gb} HDD""; bootDiskSizeGb: ""${boot_disk_gb}""; preemptible: ""${preemptible}""; }; parameter_meta {. }. }. application.conf. ```; <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORDS, TOKENS AND OTHER SENSITIVE MATERIAL: -->. system.new-workflow-poll-rate=1; ```; google {. application-name = ""cromwell"". auths = [; {; name = ""application-default""; scheme = ""application_default""; },; {; }; ]; }. engine {; filesystems {; gcs {; }; }; }. call-caching {; enabled = true; invalidate-bad-cache-results = true; }. backend {; default = ""Jes""; providers {; Jes {; actor-factory = ""cromwell.backend.impl.jes.JesBackendLifecycleActorFactory""; config {; // Google project; project = ""gcid-cromwell"". // Base bucket for workflow executions. // Polling for completion backs-o",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3905:3893,log,log,3893,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3905,1,['log'],['log']
Testability,"ay hackathon, we're putting a proposal for a new feature that reports task call resource utilization metrics to Stackdriver Monitoring API. This serves 2 important goals:. 1) Users can easily plot real-time resource usage statistics across all tasks in a workflow, or for a single task call across many workflow runs, etc. This can be very powerful to quickly determine outlier tasks that could use optimization, without the need for any configuration or code (or any changes to the workflow). It's also much easier than the current state-of-the-art, i.e. parsing task-level monitoring logs. 2) Scripts can easily get aggregate statistics on resource utilization and could produce suggestions based on those. This could provide a path towards automatic runtime configuration based on the models trained with historical data. One could also detect situations like out-of-memory calls and automatically adjust resources according to those. It would also be pretty easy to add logic for estimation of task call-level cost based on the pricing of associated resources. This could provide a long-sought feature of real-time cost monitoring/control (thanks to @TimothyTickle for the suggestion). Monitoring is done using the new ""monitoring action"" for PAPIv2, which currently uses the hard-coded [quay.io/broadinstitute/cromwell-monitor](https://quay.io/repository/broadinstitute/cromwell-monitor) image, built from https://github.com/broadinstitute/cromwell-monitor (I wasn't sure if that code belonged here or in a separate repo). This is advantageous to just using it as a _monitoring_script_, because it removes all assumptions on the ""user"" Docker image (for the task itself). For example, we don't have to assume a particular distribution or presence of Python and its libraries. So it should work exactly the same for any task. Per @geoffjentry's suggestion, we've [consulted](https://groups.google.com/forum/#!topic/google-genomics-discuss/caYM7oHbfx0) with the Google Genomics team, and they don't",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4510:1134,log,logic,1134,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4510,1,['log'],['logic']
Testability,"aybe fail !!! CANCELED !!! (9 milliseconds); [info] Test canceled because flickered: initially failed, but succeeded on retry (Retries.scala:349); [info] Passed: Total 104, Failed 0, Errors 0, Passed 104, Canceled 1; ```. Because these `TestCanceled` events are likely to be ignored by developers the error events should be reported and aggregated. ScalaTest allows one to create a custom `Reporter` to catch `TestFailed` or `TestCanceled` events. A custom reporter could be built that captures the failed and flickering test events and forwards them to an external system for aggregation and reporting. Unfortunately as shown above the behavior of `org.scalatest.Retries.withRetry` is to try twice and upon secondary success return a `TestCanceled` event to each `Reporter` _without_ the original exception. The original error `Outcome` does not seem to be forwarded to the `Reporter`. Instead we may need to implement our own fork of `withRetry` that captures and forwards the original exception before retrying the test, wiring the original error to our custom `Reporter` in some way or via some singleton cache. For an external system to aggregate the errors something like https://logit.io/ could be used but https://sentry.io/ is specifically built for error triage. As the above features will only be implemented for ScalaTest, any tests using ScalaCheck directly should be refactored to use ScalaTest's ""ScalaCheck-style"" property based testing. That way any failing property based tests will be tracked as well using our reporting. Because this feature is likely to be used across all cromwell artifacts/subprojects we should decide if we either want to either:; 1. Update every project in `build.sbt` with a `.dependsOn(common, ""test->test"")`; 2. Add scalatest and sentry as `Provided` dependencies to `common` such that they won't be transitively included by default; 3. Create a new `cromwell.test` artifact and use either of the above outside of `cromwell.common`. **A/C:**; - Switch test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3658:1876,test,test,1876,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3658,1,['test'],['test']
Testability,"b)]: Key/s [preemptible, dx_instance_type] is/are not supported by backend. Unsupported attributes will not be part of job executions.; 2018-06-13 14:29:47,088 cromwell-system-akka.dispatchers.backend-dispatcher-91 WARN - Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.warn(Logger.java:716); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$2(Slf4jLogger.scala:75); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:75); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:3205,log,logback,3205,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['logback']
Testability,"b-cdef-0123-456789abcdef/call-main/gcs_delocalization.sh; source '/cromwell_root/gcs_transfer.sh'. timestamped_message 'Delocalization script execution started...'. # xxx; delocalize_6c578056c74a8d9a80724855ddac131c=(; ""mccarroll-mocha"" # project; ""3"" # max attempts; ""150M"" # parallel composite upload threshold, will not be used for directory types; ""file""; ""gs://xxx/cromwell-executions/main/01234567-89ab-cdef-0123-456789abcdef/call-main/memory_retry_rc""; ""/cromwell_root/memory_retry_rc""; ""optional""; ""text/plain; charset=UTF-8""; ""file""; ""gs://xxx/cromwell-executions/main/01234567-89ab-cdef-0123-456789abcdef/call-main/rc""; ""/cromwell_root/rc""; ""required""; ""text/plain; charset=UTF-8""; ""file""; ""gs://xxx/cromwell-executions/main/01234567-89ab-cdef-0123-456789abcdef/call-main/monitoring.log""; ""/cromwell_root/monitoring.log""; ""required""; ""text/plain; charset=UTF-8""; ""file""; ""gs://xxx/cromwell-executions/main/01234567-89ab-cdef-0123-456789abcdef/call-main/stdout""; ""/cromwell_root/stdout""; ""required""; ""text/plain; charset=UTF-8""; ""file""; ""gs://xxx/cromwell-executions/main/01234567-89ab-cdef-0123-456789abcdef/call-main/stderr""; ""/cromwell_root/stderr""; ""required""; ""text/plain; charset=UTF-8""; ""directory""; ""gs://xxx/cromwell-executions/main/01234567-89ab-cdef-0123-456789abcdef/call-main/d""; ""/cromwell_root/d""; ""required""; """"; ). delocalize ""${delocalize_6c578056c74a8d9a80724855ddac131c[@]}""; ; timestamped_message 'Delocalization script execution complete.'; ```. But somehow a new check was included in Cromwell 75 that wants `d` to be a file even if it is delocalized as a directory. This breaks the only [workaround](https://support.terra.bio/hc/en-us/community/posts/360071476431-Terra-fails-to-delocalize-files-listed-through-read-lines-) available in Cromwell to be able to delocalize a list of files not determined a priori before the start of the task. Notice that `glob()` is not an acceptable alternative as `glob()` does not provide control over the order of the output files.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6677:2211,log,log,2211,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6677,1,['log'],['log']
Testability,"b-d96c52c32200] State is now terminal. Shutting down.; [INFO] [06/02/2016 19:49:46.544] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.544] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.544] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$mb] $$mb transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [WARN] [06/02/2016 19:49:46.546] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$mb]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.546] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$$mb] $$mb transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.546] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$$mb] $$mb transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.546] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$$mb/WorkflowInitializationActor-93102a71-3bff-432b-beb6-5506dcc13159] State is now terminal. Shutting down.; [info] WorkflowActorSpec:; [info] ShadowWorkflowActor; [info] - should move from WorkflowUnstartedState to MaterializingWorkflowDescriptorState *** FAILED ***; [info] WorkflowFailedState was not equal to MaterializingWorkflowDescriptorState (WorkflowActorSpec.scala:45); [info] - should transition to InitializingWorkflowState with correct call assignments given workflow options; [info] - should transition to InitializingWorkflowState with correct call assignments given runtime-attributes; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:3802,test,test-system,3802,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,5,['test'],"['test-system', 'test-system-akka']"
Testability,"b.cram\"": ps:\/\/repo1.maven.org\/maven2\/io\/spray\/spray-json_2.12\/1.3.4\/spray-json_2.12-1.3.4-sources.jar.sha1\nDownloading https:\/\/repo1.maven.org\/maven2\/org\/scala-lang\/scala-library\/2.12.3\/scala-library-2.12.3-sources.jar\nDownloading https:\/\/repo1.maven.org\/maven2\/org\/scala-lang\/scala-library\/2.12.3\/scala-library-2.12.3-sources.jar.sha1\nDownloaded https:\/\/repo1.maven.org\/maven2\/org\/scala-lang\/scala-library\/2.12.3\/scala-library-2.12.3-sources.jar.sha1\nDownloaded https:\/\/repo1.maven.org\/maven2\/io\/spray\/spray-json_2.12\/1.3.4\/spray-json_2.12-1.3.4-sources.jar.sha1\nDownloaded https:\/\/repo1.maven.org\/maven2\/io\/spray\/spray-json_2.12\/1.3.4\/spray-json_2.12-1.3.4-sources.jar\nDownloaded https:\/\/repo1.maven.org\/maven2\/org\/scala-lang\/scala-library\/2.12.3\/scala-library-2.12.3-sources.jar\nCompiling \/scripts\/dosUrlLocalizer.sc #2\nSLF4J: Failed to load class \""org.slf4j.impl.StaticLoggerBinder\"".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http:\/\/www.slf4j.org\/codes.html#StaticLoggerBinder for further details."",; ""endTime"": ""2018-08-14T16:16:33.718991Z""; },; {; ""startTime"": ""2018-08-14T16:13:13.678Z"",; ""description"": ""RequestingExecutionToken"",; ""endTime"": ""2018-08-14T16:13:14.570Z""; },; {; ""startTime"": ""2018-08-14T16:14:33.113135Z"",; ""description"": ""Started running \""\/bin\/sh -c while true; do retry() { for i in `seq 3`; do gsutil -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/cromwell_root\/stderr gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/ 2> gsutil_output.txt; RC_GSUTIL=$?; if [[ \\\""$RC_GSUTIL\\\"" -eq 1 && grep -q \\\""Bucket is requester pays bucket but no user project provided.\\\"" gsutil_output.txt ]]; then\\n echo \\\""Retrying with user project dos-testing\\\"" && gsutil -u dos-testing -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/cromwell_root\/stderr gs:\/\/fc-f55764",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4162:7852,log,logger,7852,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4162,1,['log'],['logger']
Testability,b/cromwell-test-runner/936/; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1132/; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1211; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1352; https://fc-jenkins.dsp-techops.broadinstitute.org/job/cromwell-test-runner/1363. org.scalatest.exceptions.TestFailedException at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:528) at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527) at cromwell.CromwellTestKitSpec.newAssertionFailedException(CromwellTestKitSpec.scala:251) at org.scalatest.Assertions.fail(Assertions.scala:1121) at org.scalatest.Assertions.fail$(Assertions.scala:1117) at cromwell.CromwellTestKitSpec.fail(CromwellTestKitSpec.scala:251) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$20(SingleWorkflowRunnerActorSpec.scala:266) at akka.testkit.EventFilter.intercept(TestEventListener.scala:111) at cromwell.CromwellTestKitSpec$.waitForErrorWithException(CromwellTestKitSpec.scala:153) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.Wo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:1207,Test,TestEventListener,1207,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestEventListener']
Testability,"b41b14aab6f6/call-WriteGreeting/execution/script; ; # get the return code (working even if the container was detached); ```. And the command above succeeded. ```; $ bash -x cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting/execution/script.submit ; + rm -f /home/jaruga/git/dockstore-cli-docker-test/cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting/execution/docker_cid; + docker run --cidfile /home/jaruga/git/dockstore-cli-docker-test/cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting/execution/docker_cid -i --entrypoint /bin/bash -v /home/jaruga/git/dockstore-cli-docker-test/cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting:/cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting:z ubuntu@sha256:2d7ecc9c5e08953d586a6e50c29b91479a48f69ac1ba1f9dc0420d18a728dfc5 /cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting/execution/script; Hello Docker; +++ cat /home/jaruga/git/dockstore-cli-docker-test/cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting/execution/docker_cid; ++ docker wait 56df02a84010fae2573793c374e4ae3c506dc5c9a759169d09c378d0dcdfaa0d; + rc=0; ++ cat /home/jaruga/git/dockstore-cli-docker-test/cromwell-executions/HelloWorldWithDocker/3d200d74-77eb-45d8-8fe6-b41b14aab6f6/call-WriteGreeting/execution/docker_cid; + docker rm 56df02a84010fae2573793c374e4ae3c506dc5c9a759169d09c378d0dcdfaa0d; 56df02a84010fae2573793c374e4ae3c506dc5c9a759169d09c378d0dcdfaa0d; + exit 0; ```. ## Workaround. I was able to suppress this error by disabling SE Linux on Fedora 36. But this is not an ideal way. Because I think SE Linux is enabled (Current mode: enforcing) as a default on RPM-based distributions such as Fedora, RHEL, CentOS stream and etc for security reasons. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6905:6109,test,test,6109,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6905,5,['test'],['test']
Testability,"be7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/; fi ; RC=$?; if [[ \\\""$RC\\\"" -eq 0 ]]; then break; fi; sleep 5; done; return \\\""$RC\\\""; }; retry\"": sh: -q: unknown operand"",; ""endTime"": ""2018-08-14T16:16:45.309551Z""; },; {; ""startTime"": ""2018-08-14T16:16:39.695039Z"",; ""description"": ""Stopped running \""\/bin\/sh -c retry() { for i in `seq 3`; do gsutil -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/cromwell_root\/stdout gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/ 2> gsutil_output.txt; RC_GSUTIL=$?; if [[ \\\""$RC_GSUTIL\\\"" -eq 1 && grep -q \\\""Bucket is requester pays bucket but no user project provided.\\\"" gsutil_output.txt ]]; then\\n echo \\\""Retrying with user project dos-testing\\\"" && gsutil -u dos-testing -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/cromwell_root\/stdout gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/; fi ; RC=$?; if [[ \\\""$RC\\\"" -eq 0 ]]; then break; fi; sleep 5; done; return \\\""$RC\\\""; }; retry\"": sh: -q: unknown operand"",; ""endTime"": ""2018-08-14T16:16:40.069663Z""; },; {; ""startTime"": ""2018-08-14T16:14:32.007439Z"",; ""description"": ""Stopped pulling \""ubuntu@sha256:3f119dc0737f57f704ebecac8a6d8477b0f6ca1ca0332c7ee1395ed2c6a82be7\"""",; ""endTime"": ""2018-08-14T16:14:32.463087Z""; },; {; ""startTime"": ""2018-08-14T16:17:06.327716Z"",; ""description"": ""Worker released"",; ""endTime"": ""2018-08-14T16:18:14.462Z""; },; {; ""startTime"": ""2018-08-14T16:16:58.180303Z"",; ""description"": ""Started running \""\/bin\/sh -c retry() { for i in `seq 3`; do gsutil -h \\\""Content-Type: text\/plain; charset=UTF-8\\\"" cp \/google\/logs\/output gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/t.log 2> gsutil_output.txt; RC_GSUTIL=$?; if [[ \\\""$RC_GSUTIL\\\"" ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4162:16876,test,testing,16876,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4162,2,['test'],['testing']
Testability,"bio.DBIOAction$$anon$4$$Lambda$1952/113291290.apply(Unknown Source); 	at scala.collection.Iterator.foreach(Iterator.scala:929); 	at scala.collection.Iterator.foreach$(Iterator.scala:929); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417); [2018-03-09 15:56:36,88] [warn] Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:18518,log,logback,18518,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,1,['log'],['logback']
Testability,"ble. -->; Call caching fails for me with Server version: 10.3.34-MariaDB MariaDB Server and Cromwell 84. . > [2022-10-06 15:14:54,54] [info] BT-322 12ceda02:test.task_A:-1:1 is eligible for call caching with read = true and write = true; [2022-10-06 15:14:54,68] [ESC[38;5;1merrorESC[0m] $aFailed to properly process data; > java.sql.SQLSyntaxErrorException: Every derived table must have its own alias; ...; > [2022-10-06 15:14:54,68] [ESC[38;5;1merrorESC[0m] ejha_for_12ceda02-4906-4840-80a2-514af3ccb801:BackendJobDescriptorKey_CommandCallNode_test.task_A:-1:1 [ESC[38;5;2m12ceda02ESC[0mtest.task_A:NA:1]: Received unexpected event HashError(java.sql.SQLSyntaxErrorException: Every derived table must have its own alias); [2022-10-06 15:14:54,70] [info] BT-322 12ceda02:test.task_A:-1:1 cache hit copying nomatch: could not find a suitable cache hit.; [2022-10-06 15:14:54,70] [info] 12ceda02-4906-4840-80a2-514af3ccb801-EngineJobExecutionActor-test.task_A:NA:1 [ESC[38;5;2m12ceda02ESC[0m]: Could not copy a suitable cache hit for 12ceda02:test.task_A:-1:1. No copy attempts were made. Based on [StackOverflow, the issue seems to be simply that subqueries must be aliased.](https://stackoverflow.com/q/1888779/4107809) Is MariaDB not supported? . The workflow runs jobs that complete as normal. When rerunning, no call caching results are used, and all jobs simply run again. . Cromwell connects to the call caching database and successfully creates tables, for example `CALL_CACHING_AGGREGATION_ENTRY`. . <!-- Which backend are you running? -->; I am running with a SLURM backend. . <!-- Paste/Attach your workflow if possible: -->; I have a very simple example workflow. ; ```; workflow test{; call task_A {}; }. task task_A{; command{; echo 'testing'; }; }; ```. <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORDS, TOKENS AND OTHER SENSITIVE MATERIAL: -->; ```; include required(classpath(""application"")). webservice {; }. akka {; http {; server {; }; }; }. system {; io {; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6929:1504,test,test,1504,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6929,1,['test'],['test']
Testability,bservice.SwaggerServiceSpec.org$scalatest$BeforeAndAfterAll$$super$run(SwaggerServiceSpec.scala:17) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromiam.webservice.SwaggerServiceSpec.run(SwaggerServiceSpec.scala:17) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Thre,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4357:4367,Test,TestFramework,4367,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4357,1,['Test'],['TestFramework']
Testability,"c gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/; fi ; RC=$?; if [[ \\\""$RC\\\"" -eq 0 ]]; then break; fi; sleep 5; done; return \\\""$RC\\\""; }; retry\"""",; ""endTime"": ""2018-08-14T16:16:45.288207Z""; },; {; ""startTime"": ""2018-08-14T16:16:57.822335Z"",; ""description"": ""Stopped running \""\/bin\/sh -c cat \/cromwell_root\/0c83f20c\/cwl_output_json_references.txt 2>\/dev\/null | xargs -I % sh -c 'gsutil -m cp -r % gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/$(echo % | sed -e \\\""s\/^\\\\\/\/\/\\\"") 2> gsutil_output.txt; RC_GSUTIL=$?; if [[ \\\""$RC_GSUTIL\\\"" -eq 1 && grep -q \\\""Bucket is requester pays bucket but no user project provided.\\\"" gsutil_output.txt ]]; then\\n echo \\\""Retrying with user project dos-testing\\\"" && gsutil -m -u dos-testing cp -r % gs:\/\/fc-f5576422-7954-4da1-8005-30c2df8d37d5\/984b5570-abe7-470f-b5cc-9243bf98518c\/w\/f8a1e7ee-3286-4071-a1d6-e68667b732de\/call-t\/$(echo % | sed -e \\\""s\/^\\\\\/\/\/\\\""); fi '\"""",; ""endTime"": ""2018-08-14T16:16:58.180303Z""; },; {; ""startTime"": ""2018-08-14T16:16:56.948463Z"",; ""description"": ""Started running \""-c mkdir -p \/cromwell_root\/0c83f20c && cat \/cromwell_root\/cwl.output.json 2>\/dev\/null | jq -r '.. | .path? \/\/ .location? \/\/ empty | gsub(\\\""file:\/\/\\\""; \\\""\\\"")' > \/cromwell_root\/0c83f20c\/cwl_output_json_references.txt\"""",; ""endTime"": ""2018-08-14T16:16:57.281247Z""; },; {; ""startTime"": ""2018-08-14T16:16:36.306767Z"",; ""description"": ""Started running \""\/bin\/bash \/cromwell_root\/script\"""",; ""endTime"": ""2018-08-14T16:16:37.108175Z""; },; {; ""startTime"": ""2018-08-14T16:14:03.091743Z"",; ""description"": ""Stopped pulling \""google\/cloud-sdk:alpine\"""",; ""endTime"": ""2018-08-14T16:14:03.127407Z""; },; {; ""startTime"": ""2018-08-14T16:13:25.071851Z"",; ""description"": ""waiting for quota"",; ""endTime"": ""2018-08-14T16:13:25.620872Z""; ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4162:3017,test,testing,3017,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4162,2,['test'],['testing']
Testability,"c.Haplotypecaller/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/call-HC_GVCF/shard-23""}, ; {""name"": ""AWS_CROMWELL_OUTPUTS"", ; ""value"": ""Run02_Pair003_Lane1_Tumor.hc.gvcf.gz,s3://dev-nphi-cromwell-v8/cromwell-execution/TN_workflow/2b65d83d-7d30-465e-9127-95c6886056e4/call-Haplotypecaller/shard-1/hc.Haplotypecaller/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/call-HC_GVCF/shard-23/Run02_Pair003_Lane1_Tumor.hc.gvcf.gz,Run02_Pair003_Lane1_Tumor.hc.gvcf.gz,local-disk /cromwell_root;Run02_Pair003_Lane1_Tumor.hc.gvcf.gz.tbi,s3://dev-nphi-cromwell-v8/cromwell-execution/TN_workflow/2b65d83d-7d30-465e-9127-95c6886056e4/call-Haplotypecaller/shard-1/hc.Haplotypecaller/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/call-HC_GVCF/shard-23/Run02_Pair003_Lane1_Tumor.hc.gvcf.gz.tbi,Run02_Pair003_Lane1_Tumor.hc.gvcf.gz.tbi,local-disk /cromwell_root""}, ; {""name"": ""AWS_CROMWELL_INPUTS_GZ"", ; ""value"": ""...""}, ; {""name"": ""AWS_CROMWELL_STDERR_FILE"", ""value"": ""/cromwell_root/HC_GVCF-23-stderr.log""}, ; {""name"": ""AWS_CROMWELL_STDOUT_FILE"", ""value"": ""/cromwell_root/HC_GVCF-23-stdout.log""}, ; {""name"": ""AWS_CROMWELL_PATH"", ""value"": ""hc.Haplotypecaller/hc.HC_GVCF/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/Some(23)/1""}, ; {""name"": ""AWS_CROMWELL_RC_FILE"", ""value"": ""/cromwell_root/HC_GVCF-23-rc.txt""}, ; {""name"": ""AWS_CROMWELL_WORKFLOW_ROOT"", ; ""value"": ""s3://dev-nphi-cromwell-v8/cromwell-execution/TN_workflow/2b65d83d-7d30-465e-9127-95c6886056e4/call-Haplotypecaller/shard-1/hc.Haplotypecaller/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/""}; ], ; ""vcpus"": 16, ; ""command"": [; ""gzipdata"", ""/bin/bash"", ""-c"", ; ""...""; ], ; ""volumes"": [{""host"": {; ""sourcePath"": ""/cromwell_root/hc.Haplotypecaller/hc.HC_GVCF/cfe96bd8-ee6b-4ba5-8ed8-198e6f5f9589/Some(23)/1""}, ""name"": ""local-disk""}], ; ""memory"": 32000, ""ulimits"": [], ""exitCode"": 0}, ; ""parameters"": {}, ; ""jobDefinition"": ""arn:aws:batch:us-east-1:260062248592:job-definition/hc_Haplotypecaller-hc_HC_GVCF:19527"", ; ""statusReason"": ""Essential container in task exited"", ; ""jobId"": ""7c2d29c2-f04e-4b3f-8579",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5004:14166,log,log,14166,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5004,1,['log'],['log']
Testability,"c.JdbcActionComponent$SimpleJdbcProfileAction.run(JdbcActionComponent.scala:28); 	at slick.dbio.DBIOAction$$anon$4.$anonfun$run$3(DBIOAction.scala:240); 	at slick.dbio.DBIOAction$$anon$4$$Lambda$1952/113291290.apply(Unknown Source); 	at scala.collection.Iterator.foreach(Iterator.scala:929); 	at scala.collection.Iterator.foreach$(Iterator.scala:929); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417); [2018-03-09 15:56:36,88] [warn] Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:18354,log,logback,18354,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,1,['log'],['logback']
Testability,"c7a4450ada7c/call-cluster/cluster-rc.txt`, while I only have `s3://gred-cumulus-dev` bucket. . I'm wondering where `s3.amazonaws.com` prefix came from. I searched through Cromwell's source code, and found [this](https://github.com/broadinstitute/cromwell/blob/develop/filesystems/s3/src/main/java/org/lerch/s3fs/S3FileSystemProvider.java#L47.) file is probably the place to check. Due to its specification, The S3 Filesystem Provider will attach `s3.amazonaws.com` if `endpoint` is missing, to be `s3://[endpoint]/{bucket}/{key}` for the URI. However, I could not find any information regarding endpoint on Cromwell's readthedocs website. I'm wondering if this error was because I missed something in my conf file. My conf file is the following:. ```; include required(classpath(""application"")). aws {; application-name = ""cromwell""; auths = [; {; name = ""default""; scheme = ""default""; }; ]. region = ""us-west-2""; }. engine {; filesystems {; s3 {; auth = ""default""; }; }; }. backend {; default = ""AWSBatch"". providers {; AWSBatch {; actor-factory = ""cromwell.backend.impl.aws.AwsBatchBackendLifecycleActorFactory""; config {; default-runtime-attributes {; scriptBucketName = ""gred-cumulus-dev""; queueArn: ""arn:aws:batch:us-west-2:752311211819:job-queue/priority-gwfcore-test""; }. filesystems {; s3 {; # A reference to a potentially different auth for manipulating files via engine functions.; auth = ""default""; }; }. # Emit a warning if jobs last longer than this amount of time. This might indicate that something got stuck in the cloud.; slow-job-warning-time: ""24 hours"". concurrent-job-limit = 1000; numSubmitAttempts = 6; numCreateDefinitionAttempts = 6; # A reference to an auth defined in the `aws` stanza at the top. This auth is used to create; # Jobs and manipulate auth JSONs.; auth = ""default""; # Base bucket for workflow executions; root = ""s3://gred-cumulus-dev/cromwell-execution""; }; }; }; }; ```. Could anyone please give me a hand on resolving this issue? Thanks!. Sincerely,; Yiming",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6504:8157,test,test,8157,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6504,1,['test'],['test']
Testability,"c97c4c204e3e303e1/0013-scattered.interval_list \; -V -L -O tumor-pileups.table. if [[ ! -z """" ]]; then; gatk --java-options ""-Xmx3000m"" GetPileupSummaries -R gs://nicholas-b-test/references/genome.fa -I --interval-set-rule INTERSECTION -L gs://nicholas-b-test/Mutect2_multisample/4f039d1f-f981-4a6d-98b3-be9cd92d3e62/call-Mutect2/shard-439/Mutect2/d19d9b83-bda0-40b6-89e6-7f74d3f76988/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0013-scattered.interval_list \; -V -L -O normal-pileups.table; fi; fi; OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x00007fbe6d000000, 4345298944, 0) failed; error='Not enough space' (errno=12); #; # There is insufficient memory for the Java Runtime Environment to continue.; # Native memory allocation (mmap) failed to map 4345298944 bytes for committing reserved memory.; # An error report file with more information is saved as:; # /home/nicholas/projects/genomics/ukbb/ch/analyses/1_9_2020/hs_err_pid24834.log; ```; <!--; Hi! Thanks for taking the time to report feedback. Before posting an issue over in Jira tracker, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-firecloud-team; WDL https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; CWL https://www.biostars.org/; -->. <!-- Are you seeing something that looks like a bug? Then great! You're almost in the right place. -->. <!-- You'll want to go to https://broadworkbench.atlassian.net/projects/BA/issues and then tell us: -->. <!-- Which backend are you running? -->; GCS; <!-- Paste/Attach your workflow if possible: -->; ```; version 1.0. #; # Description of inputs; # intervals: genomic intervals; # ref_fasta, ref_fai, ref_dict: reference genome, index, and dictionary; # vi : arrays of normal bams; # scatter_count:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5347:2254,log,log,2254,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5347,1,['log'],['log']
Testability,cLike.$anonfun$run$1(WordSpecLike.scala:1192) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192) at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190) at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Cause: akka.pattern.AskTimeoutEx,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:5286,Test,Tests,5286,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['Tests']
Testability,"cal hashes for the docker image and all inputs and outputs, I see a ""Cache Miss"" as the result, every time. . The call caching stanza in my metadata looks like this, for example. Am I missing something? ; ```; ""callCaching"": {; ""allowResultReuse"": true,; ""hashes"": {; ""output count"": ""C4CA4238A0B923820DCC509A6F75849B"",; ""runtime attribute"": {; ""docker"": ""4B2AB7B9EA875BF5290210F27BB9654D"",; ""continueOnReturnCode"": ""CFCD208495D565EF66E7DFF9F98764DA"",; ""failOnStderr"": ""68934A3E9455FA72420237EB05902327""; },; ""output expression"": {; ""File output_greeting"": ""DFC652723D8EBD4BB25CAC21431BB6C0""; },; ""input count"": ""CFCD208495D565EF66E7DFF9F98764DA"",; ""backend name"": ""2A2AB400D355AC301859E4ABB5432138"",; ""command template"": ""AFAC58B849BD67585A857F538B8E92F6""; },; ""effectiveCallCachingMode"": ""ReadAndWriteCache"",; ""hit"": false,; ""result"": ""Cache Miss""; },; ```. ```; # simple sge apptainer conf (modified from the slurm one); #; workflow-options; {; workflow-log-dir: ""cromwell-workflow-logs""; workflow-log-temporary: false; workflow-failure-mode: ""ContinueWhilePossible""; default; {; workflow-type: WDL; workflow-type-version: ""draft-2""; }; }. database {; # Store metadata in a file on disk that can grow much larger than RAM limits.; metadata {; profile = ""slick.jdbc.MySQLProfile$""; db {; url = ""jdbc:mysql:<dburl>?rewriteBatchedStatements=true""; driver = ""com.mysql.cj.jdbc.Driver""; user = ""<user>""; password = ""<pass>"" ; connectionTimeout = 5000; }; }; }. call-caching; {; enabled = true; invalidate-bad-cache-result = true; }. docker {; hash-lookup {; enabled = true; }; }. backend {; default = sge; providers {. ; sge {; 	actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {. # Limits the number of concurrent jobs; #concurrent-job-limit = 5. # If an 'exit-code-timeout-seconds' value is specified:; # - check-alive will be run at this interval for every job; # - if a job is found to be not alive, and no RC file appears after this interval; # - Then i",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7480:1584,log,log-dir,1584,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7480,3,['log'],"['log-dir', 'log-temporary', 'logs']"
Testability,cala:1685) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromiam.webservice.SwaggerServiceSpec.org$scalatest$BeforeAndAfterAll$$super$run(SwaggerServiceSpec.scala:17) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromiam.webservice.SwaggerServiceSpec.run(SwaggerServiceSpec.scala:17) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.u,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4357:4105,Test,TestFramework,4105,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4357,1,['Test'],['TestFramework']
Testability,cala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4608,Test,Tests,4608,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,4,['Test'],['Tests']
Testability,calatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192) at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190) at cromwell.CromwellTestKitWordSpec.run(CromwellTestKitSpec.scala:250) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Cause: akka.patte,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:5261,Test,Tests,5261,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['Tests']
Testability,"cale=1, width=device-width"">; <title>Error 502 (Server Error)!!1</title>; <style>; *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}; </style>; <a href=//www.google.com/><span id=logo aria-label=Google></span></a>; <p><b>502.</b> <ins>That’s an error.</ins>; <p>The server encountered a temporary error and could not complete your request.<p>Please try again in 30 seconds. <ins>That’s all we know.</ins>. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1137); 	at com.google.api.client.googleapis.batch.BatchRequest.execute(BatchRequest.java:233); 	at cromwell.backend.google.pipelines.common.api.PipelinesApiRequestWorker.runBatch(PipelinesApiRequestWorker.scala:59); 	at cromwell.backend.google.pipelines.common.api.PipelinesApiRequestWorker.cromwell$backend$google$pipelines$common$api$PipelinesApiRequestWorker$$handleBatch(PipelinesApiRequestWorker.scala:53); 	at cromwell.backend.google.pipe",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4917:2966,log,logo,2966,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4917,1,['log'],['logo']
Testability,"cale=1, width=device-width"">; <title>Error 502 (Server Error)!!1</title>; <style>; *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}; </style>; <a href=//www.google.com/><span id=logo aria-label=Google></span></a>; <p><b>502.</b> <ins>That’s an error.</ins>; <p>The server encountered a temporary error and could not complete your request.<p>Please try again in 30 seconds. <ins>That’s all we know.</ins>. com.google.api.client.http.HttpResponseException: 502 Bad Gateway; <!DOCTYPE html>; <html lang=en>; <meta charset=utf-8>; <meta name=viewport content=""initial-scale=1, minimum-scale=1, width=device-width"">; <title>Error 502 (Server Error)!!1</title>; <style>; *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4917:1300,log,logo,1300,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4917,1,['log'],['logo']
Testability,"call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:1751,test,tests,1751,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,1,['test'],['tests']
Testability,call logs on TES backend not localizing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2285:5,log,logs,5,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2285,1,['log'],['logs']
Testability,"cattered task uses less than a GB. ### Docker container logs; `docker logs cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528` gives no output. ### Entering the container; `docker exec -it cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528 /bin/sh` returns; `Error response from daemon: Container cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528 is not running`. ### Docker inspect; ```; >docker inspect cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528; [; {; ""Id"": ""cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528"",; ""Created"": ""2022-11-09T05:37:16.872195116Z"",; ""Path"": ""/bin/bash"",; ""Args"": [; ""/bark-bark/IS_THIS_TUBERCULOSIS/7570b5dc-4714-48a7-96b2-9c62245e3618/call-get_organism_names/shard-885/execution/script""; ],; ""State"": {; ""Status"": ""created"",; ""Running"": false,; ""Paused"": false,; ""Restarting"": false,; ""OOMKilled"": false,; ""Dead"": false,; ""Pid"": 0,; ""ExitCode"": 0,; ""Error"": """",; ""StartedAt"": ""0001-01-01T00:00:00Z"",; ""FinishedAt"": ""0001-01-01T00:00:00Z""; },; ""Image"": ""sha256:1c9072d6415cff6481014f64cf7486482dc61620bf09806bafffb1697bf344b1"",; ""ResolvConfPath"": """",; ""HostnamePath"": """",; ""HostsPath"": """",; ""LogPath"": ""/var/lib/docker/containers/cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528/cf6f4828adc61eacf06337ce3caf2c110df6cc04937530a90bbfb0843acbb528-json.log"",; ""Name"": ""/zen_almeida"",; ""RestartCount"": 0,; ""Driver"": ""overlay2"",; ""Platform"": ""linux"",; ""MountLabel"": """",; ""ProcessLabel"": """",; ""AppArmorProfile"": """",; ""ExecIDs"": null,; ""HostConfig"": {; ""Binds"": [; ""/private/var/folders/vp/327wktbj3wqb65q3v3n8qpxc0000gn/T/1667969838761-0/dockstore-is-cool/IS_THIS_TUBERCULOSIS/7570b5dc-4714-48a7-96b2-9c62245e3618/call-get_organism_names/shard-885:/bark-bark/IS_THIS_TUBERCULOSIS/7570b5dc-4714-48a7-96b2-9c62245e3618/call-get_organism_names/shard-885""; ],; ""ContainerIDFile"": """",; ""LogConfig"": {; ""Type"": ""json-file"",; ""Config"": {}; },; ""NetworkMode"": ""default"",; ""PortBindings"": {},",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6946:2714,Log,LogPath,2714,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6946,1,['Log'],['LogPath']
Testability,"cb-b894-4790-872f-9f3104cab60c/call-illumina_demux/tmp.e5175ec1"" && echo ""/atbiofx-cromwell/cromwell-execution/demux_only/a67833cb-b894-4790-872f-9f3104cab60c/call-illumina_demux/tmp.e5175ec1""`; chmod 777 ""$tmpDir""; export _JAVA_OPTIONS=-Djava.io.tmpdir=""$tmpDir""; export TMPDIR=""$tmpDir""; export HOME=""$HOME""; (; cd /cromwell_root. ); (; cd /cromwell_root. set -ex -o pipefail. if [ -d /mnt/tmp ]; then; TMPDIR=/mnt/tmp; fi; FLOWCELL_DIR=$(mktemp -d). read_utils.py extract_tarball \; /Volumes/nextseq_ngs/180405_NB501680_0019_AHKGNJBGX5.tar.lz4 $FLOWCELL_DIR \; --loglevel=DEBUG. # find 95% memory; mem_in_mb=`/opt/viral-ngs/source/docker/mem_in_mb_95.sh`. # note that we are intentionally setting --threads to about 2x the core; # count. seems to still provide speed benefit (over 1x) when doing so.; illumina.py illumina_demux \; $FLOWCELL_DIR \; 1 \; . \; \; \; --outMetrics=metrics.txt \; --commonBarcodes=barcodes.txt \; \; \; --max_mismatches=1 \; \; \; \; --minimum_quality=10 \; \; --JVMmemory=""$mem_in_mb""m \; --threads=64 \; --compression_level=5 \; --loglevel=DEBUG. rm -f Unmatched.bam; for bam in *.bam; do; fastqc_out=$(basename $bam .bam)_fastqc.html; reports.py fastqc $bam $fastqc_out; done; ) > '/cromwell_root/illumina_demux-stdout.log' 2> '/cromwell_root/illumina_demux-stderr.log'; echo $? > /cromwell_root/illumina_demux-rc.txt.tmp; (; # add a .file in every empty directory to facilitate directory delocalization on the cloud; cd /cromwell_root; find . -type d -empty -print | xargs -I % touch %/.file; ); (; cd /cromwell_root; sync; # make the directory which will keep the matching files; mkdir /cromwell_root/glob-3bcbe4e7489c90f75e0523ac6f3a9385. # create the glob control file that will allow for the globbing to succeed even if there is 0 match; echo ""This file is used by Cromwell to allow for globs that would not match any file.; By its presence it works around the limitation of some backends that do not allow empty globs.; Regardless of the outcome of the glob, t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:16178,log,loglevel,16178,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['loglevel']
Testability,centaur tests blocked by this (note - some seem to be using the behavior foro ther purposes and might still fail):. ```; continue_on_return_code; exit; failures.terminal_status; default_runtime_attributes; globbingBehavior; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4813:8,test,tests,8,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4813,1,['test'],['tests']
Testability,ception$(Assertions.scala:527) at cromwell.CromwellTestKitSpec.newAssertionFailedException(CromwellTestKitSpec.scala:251) at org.scalatest.Assertions.fail(Assertions.scala:1121) at org.scalatest.Assertions.fail$(Assertions.scala:1117) at cromwell.CromwellTestKitSpec.fail(CromwellTestKitSpec.scala:251) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$20(SingleWorkflowRunnerActorSpec.scala:266) at akka.testkit.EventFilter.intercept(TestEventListener.scala:111) at cromwell.CromwellTestKitSpec$.waitForErrorWithException(CromwellTestKitSpec.scala:153) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076) at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088) at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289) at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088) at o,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:1732,test,testkit,1732,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['test'],['testkit']
Testability,"cher-6] [akka://test-system/user/$$ib/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib] $$ib transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib/WorkflowInitializationActor-fd304efe-2bba-4859-9ffd-6ef7d4ae29d5] State is now terminal. Shutting down.; [WARN] [06/02/2016 19:49:46.381] [test-system-akka.actor.default-dispatcher-3] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$ib]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.495] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$kb] $$kb transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [WARN] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$kb]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transitioning from InitializingWorkflowState to WorkflowFailedState; [",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:1445,test,test-system-akka,1445,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,1,['test'],['test-system-akka']
Testability,"ckend. Unsupported attributes will not be part of job executions.; 2018-06-13 14:29:47,088 cromwell-system-akka.dispatchers.backend-dispatcher-91 WARN - Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.warn(Logger.java:716); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$2(Slf4jLogger.scala:75); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:75); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:3274,log,logback,3274,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['logback']
Testability,"code> constructor public</h3>; <p>Prior to this change, custom runners could make <code>FrameworkMethod</code> instances, but not <code>FrameworkField</code> instances. This small change allows for both now, because <code>FrameworkField</code>'s constructor has been promoted from package-private to public.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/junit-team/junit4/commit/1b683f4ec07bcfa40149f086d32240f805487e66""><code>1b683f4</code></a> [maven-release-plugin] prepare release r4.13.1</li>; <li><a href=""https://github.com/junit-team/junit4/commit/ce6ce3aadc070db2902698fe0d3dc6729cd631f2""><code>ce6ce3a</code></a> Draft 4.13.1 release notes</li>; <li><a href=""https://github.com/junit-team/junit4/commit/c29dd8239d6b353e699397eb090a1fd27411fa24""><code>c29dd82</code></a> Change version to 4.13.1-SNAPSHOT</li>; <li><a href=""https://github.com/junit-team/junit4/commit/1d174861f0b64f97ab0722bb324a760bfb02f567""><code>1d17486</code></a> Add a link to assertThrows in exception testing</li>; <li><a href=""https://github.com/junit-team/junit4/commit/543905df72ff10364b94dda27552efebf3dd04e9""><code>543905d</code></a> Use separate line for annotation in Javadoc</li>; <li><a href=""https://github.com/junit-team/junit4/commit/510e906b391e7e46a346e1c852416dc7be934944""><code>510e906</code></a> Add sub headlines to class Javadoc</li>; <li><a href=""https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae""><code>610155b</code></a> Merge pull request from GHSA-269g-pwp5-87pp</li>; <li><a href=""https://github.com/junit-team/junit4/commit/b6cfd1e3d736cc2106242a8be799615b472c7fec""><code>b6cfd1e</code></a> Explicitly wrap float parameter for consistency (<a href=""https://github-redirect.dependabot.com/junit-team/junit4/issues/1671"">#1671</a>)</li>; <li><a href=""https://github.com/junit-team/junit4/commit/a5d205c7956dbed302b3bb5ecde5ba4299f0b646""><code>a5d205c</code></a> Fix GitHub link in FAQ (<a href=""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5941:2323,assert,assertThrows,2323,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5941,2,"['assert', 'test']","['assertThrows', 'testing']"
Testability,"com/cloudsdktool/cloud-sdk:276.0.0-slim""; pullStopped:; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; timestamp: '2021-08-03T15:23:12.246251722Z'; - description: Started pulling ""gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim""; pullStarted:; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; timestamp: '2021-08-03T15:22:42.922496298Z'; - description: Worker ""google-pipelines-worker-xxxxxx""; assigned in ""us-central1-b"" on a ""custom-1-2048"" machine; timestamp: '2021-08-03T15:22:07.789742627Z'; workerAssigned:; instance: google-pipelines-worker-xxxxxx; machineType: custom-1-2048; zone: us-central1-b; labels:; cromwell-workflow-id: cromwell-xxxxxx; wdl-task-name: hello; pipeline:; actions:; - commands:; - -c; - printf '%s %s\n' ""$(date -u '+%Y/%m/%d %H:%M:%S')"" Starting\ container\ setup.; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; logging: ContainerSetup; timeout: 300s; - commands:; - -c; - mkdir -p /cromwell_root && chmod -R a+rwx /cromwell_root; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; tag: ContainerSetup; mounts:; - disk: local-disk; path: /cromwell_root; - commands:; - -c; - printf '%s %s\n' ""$(date -u '+%Y/%m/%d %H:%M:%S')"" Done\ container\ setup.; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; logging: ContainerSetup; timeout: 300s; - commands:; - -c; - python -c 'import base64; print(base64.b64decode(""xxxxxx""));'; > /tmp/xxxxxx.sh && chmod u+x /tmp/xxxxxx.sh; && sh /tmp/xxxxxx.sh; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; tag: Background; runInBackground: true; - commands:; - -c; - python -c 'import base64; print(base64.b64decode(""xxxxxx""));'; > /tmp/xxxxxx.sh && chmod u+x /tmp/xxxxxx.sh; && sh /tmp/xxxxxx.sh; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; outputName: stder",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6462:15872,log,logging,15872,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6462,1,['log'],['logging']
Testability,conf 67 - Test optional output file and optional secondaryFile on output,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3643:10,Test,Test,10,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3643,1,['Test'],['Test']
Testability,conformance 67 - Test optional output file and optional secondaryFile on output,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/3668:17,Test,Test,17,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/3668,1,['Test'],['Test']
Testability,"criptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1875:1840,test,tests,1840,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875,1,['test'],['tests']
Testability,cromwell 30 will need this back. See `WdlFunctions` in the code. Then reinstate centaur tests:; - [x] `globbingscatter`; - [ ] `globbingindex`; - [x] `space`; - [x] `globbingBehavior`; - [x] `dontglobinputs`; - [x] `lots_of_inputs`,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2831:88,test,tests,88,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2831,1,['test'],['tests']
Testability,cromwell-workflow-logs folder permission,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4499:18,log,logs,18,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4499,1,['log'],['logs']
Testability,"cs/repo-specific-configuration.md) file. _Have a fantastic day writing Scala!_. <details>; <summary>🔍 Files still referring to the old version number</summary>. The following files still refer to the old version number (0.9.0).; You might want to review and update them manually.; ```; centaur/src/main/resources/integrationTestCases/Somatic/CNV-Pair/cnv_somatic_pair_workflow_do_gc_wes.inputs; centaur/src/main/resources/integrationTestCases/Somatic/CNV-Panel/cnv_somatic_panel_workflow_do_gc_wes.inputs; centaur/src/main/resources/integrationTestCases/Somatic/Mutect2/Mutect2.aws.inputs; centaur/src/main/resources/integrationTestCases/Somatic/Mutect2/Mutect2.inputs; centaur/src/main/resources/integrationTestCases/germline/haplotype-caller-workflow/HaplotypeCallerWF.json; centaur/src/main/resources/integrationTestCases/germline/single-sample-production-workflow/PairedEndSingleSampleWf.options.json; centaur/src/main/resources/integrationTestCases/germline/single-sample-workflow/processing-for-variant-discovery-gatk4.hg38.wgs.inputs.json; centaur/src/main/resources/integrationTestCases/green/arrays/arrays.wdl; womtool/src/test/resources/validate/wdl_draft3/valid/HaplotypeCallerWF/HaplotypeCallerWF.inputs.json; womtool/src/test/resources/validate/wdl_draft3/valid/cnv_somatic_pair_workflow/cnv_somatic_pair_workflow.inputs.json; womtool/src/test/resources/validate/wdl_draft3/valid/joint-discovery-gatk/joint-discovery-gatk.inputs.json; ```; </details>; <details>; <summary>⚙ Adjust future updates</summary>. Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:; ```; updates.ignore = [ { groupId = ""io.github.jbwheatley"" } ]; ```; Or, add this to slow down future updates of this dependency:; ```; dependencyOverrides = [{; pullRequests = { frequency = ""30 days"" },; dependency = { groupId = ""io.github.jbwheatley"" }; }]; ```; </details>. <sup>; labels: library-update, early-semver-major, semver-spec-minor, old-version-remains, commit-count:1; </sup>",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/7294:1959,test,test,1959,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/7294,3,['test'],['test']
Testability,"ctIterator.foreach(Iterator.scala:1417); [2018-03-09 15:38:57,90] [warn] Couldn't find a suitable DSN, defaulting to a Noop one.; [2018-03-09 15:42:11,14] [info] Using noop to send events.; [2018-03-09 15:49:48,68] [warn] Localhost hostname lookup failed, keeping the value 'unavailable'; java.util.concurrent.TimeoutException: null; 	at java.util.concurrent.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527);",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:9584,log,logback,9584,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,1,['log'],['logback']
Testability,"cted files. My interpretation of this is that the task is being reattempted with the same filesystem, without any cleaning of the filesystem between runs. I have also found that if the task is not run with preemptible, or if there aren't any missing output files, then the behavior will be as expected (even if the task still fails due to a non-zero exit code). There's a few different combinations of settings I tried in `test.wdl`. I also see the following stack trace in cromwell, though unclear if it is related; ```; [2024-08-08 15:29:20,58] [info] WorkflowManagerActor: Workflow 5892e197-e4c8-4d75-a648-e906d5ec80e6 failed (during ExecutingWorkflowState): java.lang.RuntimeException: Task test.test_task_output_does_not_exist:NA:1 failed for unknown reason: Failed; 	at cromwell.backend.standard.StandardAsyncExecutionActor.handleExecutionFailure(StandardAsyncExecutionActor.scala:1170); 	at cromwell.backend.standard.StandardAsyncExecutionActor.handleExecutionFailure$(StandardAsyncExecutionActor.scala:1169); 	at cromwell.backend.google.batch.actors.GcpBatchAsyncBackendJobExecutionActor.handleExecutionFailure(GcpBatchAsyncBackendJobExecutionActor.scala:123); 	at cromwell.backend.standard.StandardAsyncExecutionActor.$anonfun$handleExecutionResult$9(StandardAsyncExecutionActor.scala:1435); 	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:41); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:49); 	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```. example wdls test_simple.wdl and test.wdl are packaged here: [wdls.zip](https://github.com/user-attachments/files/16554150/wdls.zip)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7489:3601,test,test,3601,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7489,1,['test'],['test']
Testability,"ctor.scala:136); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); at akka.actor.ActorCell.invoke(ActorCell.scala:496); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-12-05 20:11:24,83] [warn] Couldn't find a suitable DSN, defaulting to a Noop one.; [2017-12-05 20:11:24,84] [info] Using noop to send events.; [2017-12-05 20:11:24,85] [info] WorkflowManagerActor WorkflowActor-159210e6-fa6a-4a99-b386-5931ae245324 is in a terminal state: WorkflowFailedState; [2017-12-05 20:11:32,22] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2017-12-05 20:11:32,25] [info] Message [cromwell.core.actor.StreamActorHelper$StreamFailed] without sender to Actor[akka://cromwell-system/deadLetters] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-12-05 20:11:32,26] [info] Message [cromwell.core.actor.StreamActorHelper$StreamFailed] without sender to Actor[akka://cromwell-system/deadLetters] was not delivered. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; Workflow 159210e6-fa6a-4a99-b386-5931ae245324 transitioned to state Failed; [2017-12-05 20:11:32,30] [info] Automatic shutdown of the async connection; [2017-12-05 20:11:32,30] [info] Gracefully shutdown sentry threads.; [2017-12-05 20:11:32,30] [info] Shutdown finished.; ```; This code worked with `cromwell-29.jar`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3007:6254,log,logging,6254,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3007,6,['log'],"['log-dead-letters', 'log-dead-letters-during-shutdown', 'logging']"
Testability,ctorSpec.org$scalatest$FlatSpecLike$$super$run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4436,Test,TestFramework,4436,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestFramework']
Testability,current.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.error(Logger.java:558); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$1(Slf4jLogger.scala:69); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:65); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3387:9949,Log,Logger,9949,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3387,2,['Log'],['Logger']
Testability,current.FutureTask.get(FutureTask.java:205); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.updateCache(EventBuilder.java:491); 	at com.getsentry.raven.event.EventBuilder$HostnameCache.getHostname(EventBuilder.java:477); 	at com.getsentry.raven.event.EventBuilder.autoSetMissingValues(EventBuilder.java:97); 	at com.getsentry.raven.event.EventBuilder.build(EventBuilder.java:410); 	at com.getsentry.raven.logback.SentryAppender.buildEvent(SentryAppender.java:324); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:230); 	at com.getsentry.raven.logback.SentryAppender.append(SentryAppender.java:37); 	at ch.qos.logback.core.AppenderBase.doAppend(AppenderBase.java:82); 	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:51); 	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:270); 	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:257); 	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:421); 	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383); 	at ch.qos.logback.classic.Logger.warn(Logger.java:716); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$2(Slf4jLogger.scala:75); 	at akka.event.slf4j.Slf4jLogger.withMdc(Slf4jLogger.scala:100); 	at akka.event.slf4j.Slf4jLogger$$anonfun$receive$1.applyOrElse(Slf4jLogger.scala:75); 	at akka.actor.Actor.aroundReceive(Actor.scala:514); 	at akka.actor.Actor.aroundReceive$(Actor.scala:512); 	at akka.event.slf4j.Slf4jLogger.aroundReceive(Slf4jLogger.scala:54); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); 	at akka.actor.ActorCell.invoke(ActorCell.scala:496); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:3570,Log,Logger,3570,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['Log'],['Logger']
Testability,cutionActor$$anonfun$5.applyOrElse(WorkflowExecutionActor.scala:275); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$5.applyOrElse(WorkflowExecutionActor.scala:209); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at scala.PartialFunction$OrElse.apply(PartialFunction.scala:172); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at akka.actor.FSM.processEvent(FSM.scala:710); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at akka.actor.FSM.processEvent$(FSM.scala:704); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:54); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at akka.actor.LoggingFSM.processEvent(FSM.scala:847); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at akka.actor.LoggingFSM.processEvent$(FSM.scala:829); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:54); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:701); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:695); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38); Sep 1 16:44:47 vmce33268581 container_name/cromwellazure_cromwell_1[2296]: #011at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$receive$1.applyOrElse(WorkflowE,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6904:2596,Log,LoggingFSM,2596,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6904,1,['Log'],['LoggingFSM']
Testability,"cutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:397) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [cromwell-0.19.jar:0.19]; at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [cromwell-0.19.jar:0.19]; ```. WDL:. ```; task RunSTARAlignment {; File fastq1; File fastq2; String sample_name; String genome_dir; String output_dir; String pipeline_path; command {; sh ${pipeline_path}/RunSTARAlignment.sh ${fastq1} ${fastq2} ${sample_name} ${genome_dir} ${output_dir}; }; output {; File genome_alignment = ""${output_dir}/alignments/${sample_name}.Aligned.sortedByCoord.out.bam""; File trans_alignment = ""${output_dir}/alignments/${sample_name}.Aligned.Aligned.toTranscriptome.out.bam""; }; runtime {; docker: ""cowmoo/cil-dev:latest""; memory: ""4G""; cpu: ""3""; zones: ""us-central1-c us-central1-a""; disks: ""/mnt/mnt1 3 SSD, /mnt/mnt2 500 HDD""; }; }. workflow smartseq_amr {; call RunSTARAlignment; }; ```. JSON:. ```; {; ""smartseq_amr.RunSTARAlignment.fastq1"": ""/cil/shed/apps/internal/RNA_utilities/SmartSeq_StarBasedPipeline/scripts/version0.2/SampleData/Mouse-A2-single_S2_L001_R1_001.fastq "",; ""smartseq_amr.RunSTARAlignment.fastq2"": ""/cil/shed/apps/internal/RNA_utilities/SmartSeq_StarBasedPipeline/scripts/version0.2/SampleData/Mouse-A2-single_S2_L001_R2_001.fastq"",; ""smartseq_amr.RunSTARAlignment.sample_name"": ""Mouse-A2-single"",; ""smartseq_amr.RunSTARAlignment.genome_dir"": ""/cil/shed/apps/internal/RNA_utilities/SmartSeq_StarBasedPipeline/Resources/Mouse10"",; ""smartseq_amr.RunSTARAlignment.output_dir"": ""/cil/shed/sandbox/amr/smartseq/test"",; ""smartseq_amr.RunSTARAlignment.pipeline_path"": ""/cil/shed/apps/internal/RNA_utilities/SmartSeq_StarBasedPipeline/scripts/version0.2/""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1071:5754,sandbox,sandbox,5754,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1071,2,"['sandbox', 'test']","['sandbox', 'test']"
Testability,"cwl.InputRecordField;@775ffa16),record,None)).; 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$materialization$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:211); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:181); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:176); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); 	at akka.actor.FSM.processEvent(FSM.scala:684); 	at akka.actor.FSM.processEvent$(FSM.scala:681); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:820); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:802); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:678); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:672); 	at akka.actor.Actor.aroundReceive(Actor.scala:517); 	at akka.actor.Actor.aroundReceive$(Actor.scala:515); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588); 	at akka.actor.ActorCell.invoke(ActorCell.scala:557); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258); 	at akka.dispatch.Mailbox.run(Mailbox.scala:225); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:235); 	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at akka.dispatch.forkjoi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4103:6708,Log,LoggingFSM,6708,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4103,1,['Log'],['LoggingFSM']
Testability,cwltool bump and temporary GPU test disablement [BA-6535],MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5601:31,test,test,31,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5601,1,['test'],['test']
Testability,"d batch size of 100000 and a write batch size of 100000; [2017-12-01 20:01:00,61] [info] [RenameWorkflowOptionsInMetadata] 100%; [2017-12-01 20:01:01,07] [info] Slf4jLogger started; [2017-12-01 20:01:01,35] [info] Metadata summary refreshing every 2 seconds.; [2017-12-01 20:01:01,37] [info] WriteMetadataActor configured to write to the database with batch size 200 and flush rate 5 seconds.; [2017-12-01 20:01:01,51] [info] CallCacheWriteActor configured to write to the database with batch size 100 and flush rate 3 seconds.; [2017-12-01 20:01:02,89] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-12-01 20:01:02,94] [info] Workflow 132d7527-a0af-4f08-8291-d935e7cd5632 submitted.; [2017-12-01 20:01:02,94] [info] SingleWorkflowRunnerActor: Workflow submitted 132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,95] [info] 1 new workflows fetched; [2017-12-01 20:01:02,95] [info] WorkflowManagerActor Starting workflow 132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,96] [info] WorkflowManagerActor Successfully started WorkflowActor-132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,96] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2017-12-01 20:01:03,27] [info] MaterializeWorkflowDescriptorActor [132d7527]: Call-to-Backend assignments: test.t1 -> Local; [2017-12-01 20:01:04,64] [info] WorkflowExecutionActor-132d7527-a0af-4f08-8291-d935e7cd5632 [132d7527]: Starting calls: test.t1:NA:1; [2017-12-01 20:01:04,82] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: echo test1 > test1.txt; echo test2 > test2.txt; [2017-12-01 20:01:04,86] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: executing: /bin/bash /users/leepc12/code/atac-seq-pipeline/test/cromwell-executions/test/132d7527-a0af-4f08-8291-d935e7cd5632/call-t1/execution/script; [2017-12-01 20:01:04,91] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: job id: 9836; [2017-12-01 20:01:04,92] [info] BackgroundConfigAsy",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2972:2263,test,test,2263,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2972,1,['test'],['test']
Testability,d of empty list; at scala.collection.immutable.Nil$.head(List.scala:420); at scala.collection.immutable.Nil$.head(List.scala:417); at cromwell.engine.workflow.SingleWorkflowRunnerActor$$anonfun$8.apply(SingleWorkflowRunnerActor.scala:133); at cromwell.engine.workflow.SingleWorkflowRunnerActor$$anonfun$8.apply(SingleWorkflowRunnerActor.scala:133); at scala.Option.getOrElse(Option.scala:121); at cromwell.engine.workflow.SingleWorkflowRunnerActor.cromwell$engine$workflow$SingleWorkflowRunnerActor$$issueReply(SingleWorkflowRunnerActor.scala:133); at cromwell.engine.workflow.SingleWorkflowRunnerActor$$anonfun$4.applyOrElse(SingleWorkflowRunnerActor.scala:88); at cromwell.engine.workflow.SingleWorkflowRunnerActor$$anonfun$4.applyOrElse(SingleWorkflowRunnerActor.scala:85); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.SingleWorkflowRunnerActor.akka$actor$LoggingFSM$$super$processEvent(SingleWorkflowRunnerActor.scala:34); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.SingleWorkflowRunnerActor.processEvent(SingleWorkflowRunnerActor.scala:34); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:484); at cromwell.server.CromwellRootActor.aroundReceive(CromwellRootActor.scala:27); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.conc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1615:1248,Log,LoggingFSM,1248,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1615,1,['Log'],['LoggingFSM']
Testability,"d"": ""#linx-1.10-beta.cwl/fragile_site_file""; },; {; ""type"": [; ""null"",; ""int""; ],; ""doc"": ""Distance upstream of gene to consider a breakend applicable\n"",; ""default"": 100000,; ""id"": ""#linx-1.10-beta.cwl/fusion_gene_distance""; },; {; ""type"": [; ""null"",; ""File""; ],; ""doc"": ""Known fusion pairs - specify FiveGene,ThreeGene by name\n"",; ""inputBinding"": {; ""prefix"": ""-fusion_pairs_csv""; },; ""id"": ""#linx-1.10-beta.cwl/fusion_pairs_csv""; },; {; ""type"": [; ""null"",; ""File""; ],; ""doc"": ""Directory for Ensembl reference files - see instructions for generation below.\n/path_to_ensembl_data_cache/\n"",; ""inputBinding"": {; ""prefix"": ""-gene_transcripts_dir""; },; ""id"": ""#linx-1.10-beta.cwl/gene_transcripts_dir""; },; {; ""type"": [; ""null"",; ""File""; ],; ""doc"": ""list of known LINE elements - specify Chromosome,PosStart,PosEnd - line_elements.csv\n"",; ""inputBinding"": {; ""prefix"": ""-line_element_file""; },; ""id"": ""#linx-1.10-beta.cwl/line_element_file""; },; {; ""type"": ""boolean"",; ""doc"": ""logs in debug mode\n"",; ""inputBinding"": {; ""prefix"": ""-log_debug""; },; ""default"": false,; ""id"": ""#linx-1.10-beta.cwl/log_debug""; },; {; ""type"": [; ""null"",; ""boolean""; ],; ""doc"": ""Only log reportable fusions\n"",; ""inputBinding"": {; ""prefix"": ""-log_reportable_fusion""; },; ""default"": false,; ""id"": ""#linx-1.10-beta.cwl/log_reportable_fusion""; },; {; ""type"": ""string"",; ""doc"": ""Required: directory where all output files are written /path_to_sample_data/\n"",; ""inputBinding"": {; ""prefix"": ""-output_dir""; },; ""id"": ""#linx-1.10-beta.cwl/output_dir""; },; {; ""type"": [; ""null"",; ""File""; ],; ""doc"": ""Promiscuous 5' gene - specify gene name only\n"",; ""inputBinding"": {; ""prefix"": ""-promiscuous_five_csv""; },; ""id"": ""#linx-1.10-beta.cwl/promiscuous_five_csv""; },; {; ""type"": [; ""null"",; ""File""; ],; ""doc"": ""Promiscuous 3' gene - specify gene name only\n"",; ""inputBinding"": {; ""prefix"": ""-promiscuous_three_csv""; },; ""id"": ""#linx-1.10-beta.cwl/promiscuous_three_csv""; },; {; ""type"": [; ""null"",; ""int""; ],; ""doc"": ""Optional - (default ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5826:23943,log,logs,23943,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5826,1,['log'],['logs']
Testability,"d-copy`. Since hard-links do not work across physical disks and soft-links do not work, copying is unavoidable. However, instead of copying the file directly into `<call_dir>/inputs` the file is first copied to a cache in `<cromwell_root>/cached-inputs`. This should ensure that `cached-inputs` is on the same physical disk as `<call_dir>` (which is also in `<cromwell_root>`). The cached file is then hard-linked to `<call_dir>/inputs`. When the same file is needed again it will check if the file already exists in the `cached-inputs` and then hard-link it. This saves all the time needed for copying. ### Technical notes; File collisions are prevented by appending the last modified time epoch millisecond to the name of the cached file. If the input file is changed between jobs it will create a new cache entry. Md5sums are not used because it is extremely compute intensive for large files. Path+modtime should guarantee that files are the same. . I have expanded the SFS test scala file so it properly tests the new `cached-inputs` strategy. I have added information on how to use the strategy in the docs, and added this PR to the changelog. ### Help still needed. There are two things that I could not figure out without cromwell developer help:. ~~* Checking whether a file exists and copying it to the cache should never be done by multiple threads simeltaneously. I have used the `synchronized` method to prevent this. I used an object for this, because I am sure it is unique within the JVM at cromwell runtime. This works fine, but I can imagine this can be solved in a nicer way using akka? However the akka documentation is an extensive jungle on its own, and requires quite some expertise to navigate. I could not find very quickly what I needed, and the `synchronization` primitive works fine. It is also **just 2 lines of extra code**. So if the akka solution is quite elegant as well I would like to learn about that. If not, well, it is not too bad having 2 lines of understandabl",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4900:1805,test,test,1805,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4900,2,['test'],"['test', 'tests']"
Testability,"d/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1875:10171,test,tests,10171,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875,1,['test'],['tests']
Testability,"d935e7cd5632; [2017-12-01 20:01:02,95] [info] 1 new workflows fetched; [2017-12-01 20:01:02,95] [info] WorkflowManagerActor Starting workflow 132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,96] [info] WorkflowManagerActor Successfully started WorkflowActor-132d7527-a0af-4f08-8291-d935e7cd5632; [2017-12-01 20:01:02,96] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2017-12-01 20:01:03,27] [info] MaterializeWorkflowDescriptorActor [132d7527]: Call-to-Backend assignments: test.t1 -> Local; [2017-12-01 20:01:04,64] [info] WorkflowExecutionActor-132d7527-a0af-4f08-8291-d935e7cd5632 [132d7527]: Starting calls: test.t1:NA:1; [2017-12-01 20:01:04,82] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: echo test1 > test1.txt; echo test2 > test2.txt; [2017-12-01 20:01:04,86] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: executing: /bin/bash /users/leepc12/code/atac-seq-pipeline/test/cromwell-executions/test/132d7527-a0af-4f08-8291-d935e7cd5632/call-t1/execution/script; [2017-12-01 20:01:04,91] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: job id: 9836; [2017-12-01 20:01:04,92] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: Status change from - to WaitingForReturnCodeFile; [2017-12-01 20:01:06,50] [info] BackgroundConfigAsyncJobExecutionActor [132d7527test.t1:NA:1]: Status change from WaitingForReturnCodeFile to Done; [2017-12-01 20:01:06,61] [error] WorkflowManagerActor Workflow 132d7527-a0af-4f08-8291-d935e7cd5632 failed (during ExecutingWorkflowState): Could not evaluate t1.out = if select_first([flag1,false]) then glob(""test1.txt"")[0] else glob(""test2.txt"")[0]; java.lang.RuntimeException: Could not evaluate t1.out = if select_first([flag1,false]) then glob(""test1.txt"")[0] else glob(""test2.txt"")[0]; at wdl4s.wdl.WdlTask$$anonfun$4.applyOrElse(WdlTask.scala:189); at wdl4s.wdl.WdlTask$$anonfun$4.applyOrElse(WdlTask.scala:188); at scala.runtime.AbstractPartialFunction",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2972:2712,test,test,2712,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2972,2,['test'],['test']
Testability,"dBwaMem/inputs/-1845554049/test:; doesn't exist; Cannot localize directory with symbolic links; /nfs/disk3/user/gaoyuhui/github/test/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test -> /nfs/disk3/user/gaoyuhui/github/test: Operation not permitted. 2：; ...; ...; amToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-executions/PreProcessingForVariantDiscovery_GATK4/8fc94dc1-722b-40d5-9840-9d6e4a66db21/call-SamToFastqAndBwaMem/inputs/-1845554049/test.tmp/cromwell-workflow-logs/workflow.8fc94dc1-722b-40d5-9840-9d6e4a66db21.log: File name too long; at common.validation.Validation$ValidationTry$.toTry$extension1(Validation.scala:68); at common.validation.Validation$ValidationTry$.toTry$extension0(Validation.scala:64); at cromwell.backend.standard.StandardAsyncExecutionActor.instantiatedCommand(StandardAsyncExecutionActor.scala:563); ... 32 common frames omitted. cromwell: v36.1; my working dir is: /nfs/disk3/user/gaoyuhui/github/test, has only 2.wdl and 2.json for test, but everytime this simple task is getting recursive and finally file name too long, and when change backend to local, it is the same. I found other topic and change to other dir to run this wdl task, got the same error.; so, can someone check about this? How can I goes well. it is a bug or my mistake??; Yours, sincerely!; Gao",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4703:2820,test,test,2820,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4703,5,"['log', 'test']","['log', 'logs', 'test']"
Testability,dPreparationActor_for_45d03417:hello.say_hello:-1:1 [UUID(45d03417)]: Docker lookup failed; java.lang.Exception: Docker image python@sha256:d03b690584424b88488e555e26820e458cc624e9d004e3fa0fe3ff99aa81b2b4 not found; 	at cromwell.engine.workflow.WorkflowDockerLookupActor.cromwell$engine$workflow$WorkflowDockerLookupActor$$handleLookupFailure(WorkflowDockerLookupActor.scala:214); 	at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:89); 	at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:73); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38); 	at akka.actor.FSM.processEvent(FSM.scala:707); 	at akka.actor.FSM.processEvent$(FSM.scala:704); 	at cromwell.engine.workflow.WorkflowDockerLookupActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowDockerLookupActor.scala:40); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:847); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:829); 	at cromwell.engine.workflow.WorkflowDockerLookupActor.processEvent(WorkflowDockerLookupActor.scala:40); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:701); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:695); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38); 	at cromwell.docker.DockerClientHelper$$anonfun$dockerResponseReceive$1.applyOrElse(DockerClientHelper.scala:16); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:175); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:176); 	at akka.actor.Actor.aroundReceive(Actor.scala:539); 	at akka.actor.Actor.aroundReceive$(Actor.scala:537); 	at cromwell.engine.workflow.WorkflowDockerLookupActor.aroundReceive(WorkflowDockerLookupActor.scala:40); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:612); 	at akka.actor.ActorCell.invoke(ActorCell.scala:581); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:268);,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5925:5233,Log,LoggingFSM,5233,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5925,1,['Log'],['LoggingFSM']
Testability,"dResponse; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.495] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$kb] $$kb transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [WARN] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$kb]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb/WorkflowInitializationActor-7218c3a1-5155-4921-9adb-d96c52c32200] State is now terminal. Shutting down.; [INFO] [06/02/2016 19:49:46.544] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.544] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.544] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$mb] $$mb t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:2353,test,test-system,2353,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,1,['test'],['test-system']
Testability,de-CTKS engine IO function testing,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4552:27,test,testing,27,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4552,1,['test'],['testing']
Testability,de-CTKS map tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/4530:12,test,tests,12,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/4530,1,['test'],['tests']
Testability,"defined from wom value(s) '[]' of type 'Array[Nothing]' to 'class wom.types.WomMaybePopulatedFileType$?'.; ```; This only seems to occur when the `glob` in the outputBinding contains a `*`. A small test case (run with `/usr/bin/java -jar cromwell-34.jar run -t cwl -i test.yml test.cwl` demonstrates this:; #### test.cwl; ```yaml; #!/usr/bin/env cwl-runner; cwlVersion: v1.0; class: CommandLineTool; requirements:; - class: ShellCommandRequirement; baseCommand: ['/bin/echo', ""this is a""]; arguments: [; { valueFrom: '>', shellQuote: false },; 'some_output.txt'; ]; inputs:; bonus:; type: string; inputBinding:; position: -1; outputs:; found:; type: File; outputBinding:; glob: '*output.txt'; not_found:; type: File?; outputBinding:; glob: '*extra.txt'; ```; #### test.yaml; ```yaml; bonus: ""test""; ```. `cwltool` handles this case as expected:; ```; $ cwltool test.cwl test.yml; /usr/local/bin/cwltool 1.0.20170822192924; Resolved 'test.cwl' to 'file:///home/tmooney/cromwell_test/glob/test.cwl'; [job test.cwl] /tmp/tmpqeLl9_$ /bin/sh \; -c \; '/bin/echo' 'this is a' 'test' > 'some_output.txt'; [job test.cwl] completed success; {; ""found"": {; ""checksum"": ""sha1$6476df3aac780622368173fe6e768a2edc3932c8"", ; ""basename"": ""some_output.txt"", ; ""nameext"": "".txt"", ; ""nameroot"": ""some_output"", ; ""location"": ""file:///home/tmooney/cromwell_test/glob/some_output.txt"", ; ""path"": ""/home/tmooney/cromwell_test/glob/some_output.txt"", ; ""class"": ""File"", ; ""size"": 15; }, ; ""not_found"": null; }; Final process status is success; ```. Cromwell fails with this error:; ```; [2018-08-14 16:14:05,89] [info] MaterializeWorkflowDescriptorActor [a3d3e011]: Parsing workflow as CWL v1.0; [2018-08-14 16:14:07,03] [info] MaterializeWorkflowDescriptorActor [a3d3e011]: Call-to-Backend assignments: test.cwl -> Local; [2018-08-14 16:14:10,44] [info] WorkflowExecutionActor-a3d3e011-3a0c-4203-9edb-3d65564a1d1d [a3d3e011]: Starting test.cwl; [2018-08-14 16:14:11,85] [info] BackgroundConfigAsyncJobExecutionActor [a3d3e01",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4004:1208,test,test,1208,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4004,1,['test'],['test']
Testability,"dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },M",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1959:1265,log,logs,1265,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959,2,['log'],"['log', 'logs']"
Testability,deplete.deplete_taxa:-1:1 [UUID(d5800039)]: Docker lookup failed; java.lang.Exception: Docker image quay.io/broadinstitute/viral-ngs@sha256:be458fe91e176102c9c8e2933c9ff430d899a0ec8f919939cbdb26f2d4c7\; d4be not found; at cromwell.engine.workflow.WorkflowDockerLookupActor.cromwell$engine$workflow$WorkflowDockerLookupActor$$handleLookupFailure(\; WorkflowDockerLookupActor.scala:194); at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:86); at cromwell.engine.workflow.WorkflowDockerLookupActor$$anonfun$3.applyOrElse(WorkflowDockerLookupActor.scala:70); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); at akka.actor.FSM.processEvent(FSM.scala:684); at akka.actor.FSM.processEvent$(FSM.scala:681); at cromwell.engine.workflow.WorkflowDockerLookupActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowDockerLookupActor.scal\; a:37); at akka.actor.LoggingFSM.processEvent(FSM.scala:820); at akka.actor.LoggingFSM.processEvent$(FSM.scala:802); at cromwell.engine.workflow.WorkflowDockerLookupActor.processEvent(WorkflowDockerLookupActor.scala:37); at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:678); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:672); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); at cromwell.docker.DockerClientHelper$$anonfun$dockerResponseReceive$1.applyOrElse(DockerClientHelper.scala:16); at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:172); - at akka.actor.Actor.aroundReceive(Actor.scala:517); at akka.actor.Actor.aroundReceive$(Actor.scala:515); at cromwell.engine.workflow.WorkflowDockerLookupActor.aroundReceive(WorkflowDockerLookupActor.scala:37); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588); at akka.actor.ActorCell.invoke(ActorCell.scala:557); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258); at akka.di,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4912:1403,Log,LoggingFSM,1403,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4912,1,['Log'],['LoggingFSM']
Testability,"derscore instead of a space. Tested using `cromwell 31.1`, `cromwell 32`, `cromwell 33.1`. ```; [2018-07-19 13:17:05,99] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""wf.glob1"": [],; ""wf.glob2"": [""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_1"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_10"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_2"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_3"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_4"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_5"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_6"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_7"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_8"", ""/home/redmar/devel/wdl/test/cromwell-executions/wf/ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc/call-spacefile/execution/glob-084dc5941ab6a3e379db0b891a767d3b/File number_9""],; ""wf.glob3"": []; },; ""id"": ""ce2e67fb-79c2-4b90-a1ad-c4b4f6b29bfc""; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3908:483,test,test,483,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3908,10,['test'],['test']
Testability,"ding=h.iqo65dknl60s). . Briefly, the intention is to move the ""rendering"" process inside the `ServiceRegistryActor` so that in the future calls to the ServiceRegistry return JSON rather than event lists. This allows the ""pre-rendered JSON"" metadata service to fulfil the same service interface as the ""database-event driven"" metadata service. ### PR Review Guidance. Most of the PR is noise but the ""signal"" is very important to get right!. Things to consider when reviewing this (perhaps otherwise unwieldy) PR:. - Does the actor structure in the diagrams below make sense?; - ... and does it match reality as implemented in this PR?; - Have the newly introduced actors been implemented well? (ie please review these as though they were brand new actors); - `ReadMetadataRegulatorActor`; - `MetadataBuilderActor`; - `ReadDatabaseMetadataWorkerActor`; - Have the responsibilities of the replaced actors been taken care of appropriately?; - Has the API of Cromwell changed inappropriately?; - I had to refactor the `CallCacheDiffActor` because it was using the metadata service directly. Did I do a good job? And are its new tests appropriately equivalent to its old ones?; - Are there sufficient tests between unit, CI and ""perf"" to make you feel good about me merging this PR?; - Am I forgetting anything?. ### Structure before the changes:. ![Before BA-5842_ Metadata Service Actor (3)](https://user-images.githubusercontent.com/13006282/64040517-426d4380-cb2b-11e9-8a40-fa11edd33b58.png). ### Structure after the changes:. ![After BA-5842_ Metadata Service Actor](https://user-images.githubusercontent.com/13006282/64040066-24531380-cb2a-11e9-8a74-98d7c976e6ec.png). ### Concerns. This feels slightly more risky than normal because the refactor was pretty fiddly and I was ""test driven"" for a significant portion of the refactor - mainly because actors are not typed and thus it was very tricky to make sure I found everywhere using the old object set which should now be using the new object set.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/5150:1286,test,tests,1286,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/5150,3,['test'],"['test', 'tests']"
Testability,"distributed/runfn.py"", line 185, in _world_from_cwl; assert os.path.exists(os.path.join(work_dir, ""cwl.inputs.json"")); AssertionError. Job prep_samples_to_rec:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-prep_samples_to_rec/prep_samples_to_rec-stderr.log.; Traceback (most recent call last):; File ""/usr/local/bin/bcbio_nextgen.py"", line 223, in <module>; runfn.process(kwargs[""args""]); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 48, in process; fnargs, parallel, out_keys, input_files = _world_from_cwl(args.name, fnargs[1:], work_dir); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 185, in _world_from_cwl; assert os.path.exists(os.path.join(work_dir, ""cwl.inputs.json"")); AssertionError. [2019-01-25 13:58:40,07] [info] WorkflowManagerActor WorkflowActor-2c2e5a10-8c57-4f9f-8d80-c2fccacbb452 is in a terminal state: WorkflowFailedState; [2019-01-25 13:58:59,66] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2019-01-25 13:59:03,42] [info] SingleWorkflowRunnerActor writing metadata to /home/chapmanb/drive/work/cwl/test_bcbio_cwl/aws/cromwell_work/somatic-metadata.json; ```; I can see this file in the s3 bucket, although it's not in the `execution` directory which is normally where things get staged (at least on local runs):; ```; $ aws s3 ls s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-prep_samples_to_rec/; PRE glob-b34dfc006a981a93d6da067cf50036fe/; 2019-01-25 13:51:55 0; 2019-01-25 13:51:59 6059 cwl.inputs.json; 2019-01-25 13:58:01 0 glob-b34dfc006a981a93d6da067cf50036fe.list; 2019-01-25 1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4586:3361,assert,assert,3361,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4586,1,['assert'],['assert']
Testability,"dk:276.0.0-slim; labels:; logging: UserAction; timeout: 300s; - commands:; - /cromwell_root/script; entrypoint: /bin/bash; imageUri: ubuntu@sha256:1e48201ccc2ab83afc435394b3bf70af0fa0055215c1e26a5da9b50a1ae367c9; labels:; tag: UserAction; mounts:; - disk: local-disk; path: /cromwell_root; - commands:; - -c; - printf '%s %s\n' ""$(date -u '+%Y/%m/%d %H:%M:%S')"" Starting\ delocalization.; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; logging: Delocalization; timeout: 300s; - commands:; - -c; - /bin/bash /cromwell_root/gcs_delocalization.sh; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; tag: Delocalization; mounts:; - disk: local-disk; path: /cromwell_root; - commands:; - -c; - printf '%s %s\n' ""$(date -u '+%Y/%m/%d %H:%M:%S')"" Done\ delocalization.; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; logging: Delocalization; timeout: 300s; - alwaysRun: true; commands:; - -c; - python -c 'import base64; print(base64.b64decode(""xxxxxx""));'; > /tmp/1xxxxxx.sh && chmod u+x /tmp/1xxxxxx.sh; && sh /tmp/1xxxxxx.sh; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; tag: Delocalization; - alwaysRun: true; commands:; - -c; - python -c 'import base64; print(base64.b64decode(""xxxxxx""));'; > /tmp/xxxxxx.sh && chmod u+x /tmp/xxxxxx.sh; && sh /tmp/xxxxxx.sh; entrypoint: /bin/sh; imageUri: gcr.io/google.com/cloudsdktool/cloud-sdk:276.0.0-slim; labels:; tag: Delocalization; environment:; MEM_SIZE: '2.0'; MEM_UNIT: GB; resources:; virtualMachine:; bootDiskSizeGb: 12; bootImage: projects/cos-cloud/global/images/family/cos-stable; disks:; - name: local-disk; sizeGb: 10; type: pd-ssd; labels:; cromwell-workflow-id: xxxxxx; goog-pipelines-worker: 'true'; wdl-task-name: hello; machineType: custom-1-2048; network: {}; nvidiaDriverVersion: 450.51.06; serviceAccount:; email: default; scopes:; - https://www.googl",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6462:20327,log,logging,20327,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6462,1,['log'],['logging']
Testability,do we have a way to automatically test JES-execution? This should be backwards compatible so the existing tests are testing something,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/186:34,test,test,34,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/186,3,['test'],"['test', 'testing', 'tests']"
Testability,don't log yuuuuuuuge output values closes #1770,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/pull/1784:6,log,log,6,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1784,1,['log'],['log']
Testability,"dout, the first ls will include a single file matching `this_file_should_only_exist_for_second_ls.*` as well as an unexpected `rc` file, along with two (instead of one) `tmp.*` files. The second ls will then include a second file matching `this_file_should_only_exist_for_second_ls.*` , along with the other unexpected files. My interpretation of this is that the task is being reattempted with the same filesystem, without any cleaning of the filesystem between runs. I have also found that if the task is not run with preemptible, or if there aren't any missing output files, then the behavior will be as expected (even if the task still fails due to a non-zero exit code). There's a few different combinations of settings I tried in `test.wdl`. I also see the following stack trace in cromwell, though unclear if it is related; ```; [2024-08-08 15:29:20,58] [info] WorkflowManagerActor: Workflow 5892e197-e4c8-4d75-a648-e906d5ec80e6 failed (during ExecutingWorkflowState): java.lang.RuntimeException: Task test.test_task_output_does_not_exist:NA:1 failed for unknown reason: Failed; 	at cromwell.backend.standard.StandardAsyncExecutionActor.handleExecutionFailure(StandardAsyncExecutionActor.scala:1170); 	at cromwell.backend.standard.StandardAsyncExecutionActor.handleExecutionFailure$(StandardAsyncExecutionActor.scala:1169); 	at cromwell.backend.google.batch.actors.GcpBatchAsyncBackendJobExecutionActor.handleExecutionFailure(GcpBatchAsyncBackendJobExecutionActor.scala:123); 	at cromwell.backend.standard.StandardAsyncExecutionActor.$anonfun$handleExecutionResult$9(StandardAsyncExecutionActor.scala:1435); 	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:41); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:49); 	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7489:2395,test,test,2395,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7489,1,['test'],['test']
Testability,"down; [INFO] [06/02/2016 19:49:46.378] [test-system-akka.actor.default-dispatcher-5] [akka://test-system/user/$$ib/WorkflowInitializationActor-fd304efe-2bba-4859-9ffd-6ef7d4ae29d5] State is now terminal. Shutting down.; [WARN] [06/02/2016 19:49:46.381] [test-system-akka.actor.default-dispatcher-3] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$ib]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a: Call-to-Backend assignments: three_step.ps -> local, three_step.cgrep -> local, three_step.wc -> local; [INFO] [06/02/2016 19:49:46.494] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$a] $a transition from ReadyToMaterializeState to MaterializationSuccessfulState: shutting down; [INFO] [06/02/2016 19:49:46.495] [pool-7-thread-2-ScalaTest-running-WorkflowActorSpec] [akka://test-system/user/$$kb] $$kb transitioning from WorkflowUnstartedState to MaterializingWorkflowDescriptorState; [WARN] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/user] unhandled message from TestActor[akka://test-system/user/$$kb]: cromwell.engine.workflow.WorkflowActor$WorkflowFailedResponse; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transitioning from InitializingWorkflowState to WorkflowFailedState; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb] $$kb transition from InitializingWorkflowState to WorkflowFailedState: shutting down; [INFO] [06/02/2016 19:49:46.498] [test-system-akka.actor.default-dispatcher-7] [akka://test-system/user/$$kb/WorkflowInitializationActor-7218c3a1-5155-4921-9adb-d96c52c32200] State is now terminal. Shutting down.; [INFO] [06/02/2016 19:49:46.544] [test-system-akka.actor.default-dispatcher-6] [akka://test-system/",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/933:1923,test,test-system,1923,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/933,1,['test'],['test-system']
Testability,"ds to about 2x the core; # count. seems to still provide speed benefit (over 1x) when doing so.; illumina.py illumina_demux \; $FLOWCELL_DIR \; 1 \; . \; \; \; --outMetrics=metrics.txt \; --commonBarcodes=barcodes.txt \; \; \; --max_mismatches=1 \; \; \; \; --minimum_quality=10 \; \; --JVMmemory=""$mem_in_mb""m \; --threads=64 \; --compression_level=5 \; --loglevel=DEBUG. rm -f Unmatched.bam; for bam in *.bam; do; fastqc_out=$(basename $bam .bam)_fastqc.html; reports.py fastqc $bam $fastqc_out; done`; 2018-06-13 14:29:48,871 INFO - Submitting job to AWS Batch; 2018-06-13 14:29:48,871 INFO - dockerImage: quay.io/broadinstitute/viral-ngs; 2018-06-13 14:29:48,871 INFO - jobQueueArn: arn:aws:batch:us-east-1:140059717706:job-queue/funnel-job-queue; 2018-06-13 14:29:48,871 INFO - commandLine: set -ex -o pipefail. if [ -d /mnt/tmp ]; then; TMPDIR=/mnt/tmp; fi; FLOWCELL_DIR=$(mktemp -d). read_utils.py extract_tarball \; /Volumes/nextseq_ngs/180405_NB501680_0019_AHKGNJBGX5.tar.lz4 $FLOWCELL_DIR \; --loglevel=DEBUG. # find 95% memory; mem_in_mb=`/opt/viral-ngs/source/docker/mem_in_mb_95.sh`. # note that we are intentionally setting --threads to about 2x the core; # count. seems to still provide speed benefit (over 1x) when doing so.; illumina.py illumina_demux \; $FLOWCELL_DIR \; 1 \; . \; \; \; --outMetrics=metrics.txt \; --commonBarcodes=barcodes.txt \; \; \; --max_mismatches=1 \; \; \; \; --minimum_quality=10 \; \; --JVMmemory=""$mem_in_mb""m \; --threads=64 \; --compression_level=5 \; --loglevel=DEBUG. rm -f Unmatched.bam; for bam in *.bam; do; fastqc_out=$(basename $bam .bam)_fastqc.html; reports.py fastqc $bam $fastqc_out; done; 2018-06-13 14:29:48,873 INFO - reconfiguredScript: #!/bin/bash; mkdir -p /cromwell_root; #!/bin/bash. cd /cromwell_root; tmpDir=`mkdir -p ""/atbiofx-cromwell/cromwell-execution/demux_only/a67833cb-b894-4790-872f-9f3104cab60c/call-illumina_demux/tmp.e5175ec1"" && echo ""/atbiofx-cromwell/cromwell-execution/demux_only/a67833cb-b894-4790-872f-9f3104cab60c",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3774:14276,log,loglevel,14276,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3774,1,['log'],['loglevel']
Testability,"duler$$anon$7.run(Scheduler.scala:117); at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:599); at scala.concurrent.BatchingExecutor$class.execute(BatchingExecutor.scala:109); at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:597); at akka.actor.LightArrayRevolverScheduler$TaskHolder.executeTask(Scheduler.scala:467); at akka.actor.LightArrayRevolverScheduler$$anon$8.executeBucket$1(Scheduler.scala:419); at akka.actor.LightArrayRevolverScheduler$$anon$8.nextTick(Scheduler.scala:423); at akka.actor.LightArrayRevolverScheduler$$anon$8.run(Scheduler.scala:375); at java.lang.Thread.run(Thread.java:745); [2015-12-18 08:43:19,174] [info] Message [cromwell.engine.workflow.WorkflowManagerActor$RestartWorkflows] from Actor[akka://cromwell-system/user/WorkflowManagerActor#-1616857312] to Actor[akka://cromwell-system/user/WorkflowManagerActor#-1616857312] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2015-12-18 08:43:19,180] [info] Message [akka.actor.Status$Failure] from Actor[akka://cromwell-system/user/WorkflowManagerActor#-1616857312] to Actor[akka://cromwell-system/deadLetters] was not delivered. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2015-12-18 08:43:19,182] [error] WorkflowManagerActor: Workflow failed submission: cannot create children while terminating or terminated; java.lang.IllegalStateException: cannot create children while terminating or terminated; at akka.actor.dungeon.Children$class.makeChild(Children.scala:199); at akka.actor.dungeon.Children$class.actorOf(Children.scala:37); at akka.actor.ActorCell.actorOf(ActorCell.scala:369); at cromwell.engine.workflow.WorkflowManagerActor$$anonfun$11.apply(WorkflowManagerActor.scala:246); at c",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/334:2356,log,logging,2356,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/334,1,['log'],['logging']
Testability,"e 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp ; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff8",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:16948,test,tests,16948,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,2,['test'],['tests']
Testability,"e cromwell in server mode with a mysql (`mariadb-10.3.12-5.fc30.x86_64`) backend, I get a series of Exceptions, each of which is fixed by changing double quotes in a `.sql` file to single quotes. The first is; ```; 2019-01-31 19:14:34,340 INFO - changelog.xml: changesets/add_attempt_in_call_caching_entry.xml::add_attempt_in_call_caching_entry::tjeandet: ChangeSet changesets/add_attempt_in_call_caching_entry.xml::add_attempt_in_call_caching_entry::tjeandet ran successfully in 117ms; 2019-01-31 19:14:34,435 ERROR - changelog.xml: changesets/replace_empty_custom_labels.xml::replace_empty_custom_labels::rmunshi: Change Set changesets/replace_empty_custom_labels.xml::replace_empty_custom_labels::rmunshi failed. Error: Unknown column '' in 'where clause' [Failed SQL: UPDATE WORKFLOW_STORE_ENTRY; SET CUSTOM_LABELS = ""{}""; WHERE CUSTOM_LABELS = """"]; 2019-01-31 19:14:34,471 INFO - changesets/replace_empty_custom_labels.xml::replace_empty_custom_labels::rmunshi: Successfully released change log lock; 2019-01-31 19:14:34,501 ERROR - Failed to instantiate Cromwell System. Shutting down Cromwell.; liquibase.exception.MigrationFailedException: Migration failed for change set changesets/replace_empty_custom_labels.xml::replace_empty_custom_labels::rmunshi:; Reason: liquibase.exception.DatabaseException: Unknown column '' in 'where clause' [Failed SQL: UPDATE WORKFLOW_STORE_ENTRY; SET CUSTOM_LABELS = ""{}""; WHERE CUSTOM_LABELS = """"]; 	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:619); 	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:51); 	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:79); 	at liquibase.Liquibase.update(Liquibase.java:214); 	at liquibase.Liquibase.update(Liquibase.java:192); 	at cromwell.database.migration.liquibase.LiquibaseUtils$.updateSchema(LiquibaseUtils.scala:62); 	at cromwell.database.migration.liquibase.LiquibaseUtils$.updateSchema(LiquibaseUtils.scala:34); 	at cromwell.services.ServicesStore$EnhancedSqlD",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4606:1015,log,log,1015,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4606,1,['log'],['log']
Testability,"e files - see instructions for generation below.\\n/path_to_ensembl_data_cache/\\n\"",\n \""id\"": \""#gene_transcripts_dir_linx\""\n },\n {\n \""type\"": [\n \""null\"",\n \""float\""\n ],\n \""doc\"": \""Proportion of genome that must be diploid before using somatic fit. Default 0.97.\\n\"",\n \""id\"": \""#highly_diploid_percentage_purple\""\n },\n {\n \""type\"": [\n \""null\"",\n \""string\""\n ],\n \""doc\"": \""JVM heap size for running gridss - defaults to 27.5g\"",\n \""id\"": \""#jvmheap_gridss\""\n },\n {\n \""type\"": [\n \""null\"",\n \""File\""\n ],\n \""doc\"": \""list of known LINE elements - specify Chromosome,PosStart,PosEnd - line_elements.csv\\n\"",\n \""id\"": \""#line_element_file_linx\""\n },\n {\n \""type\"": [\n \""null\"",\n \""boolean\""\n ],\n \""doc\"": \""logs in debug mode\\n\"",\n \""id\"": \""#log_debug_linx\""\n },\n {\n \""type\"": [\n \""null\"",\n \""boolean\""\n ],\n \""doc\"": \""Only log reportable fusions\\n\"",\n \""id\"": \""#log_reportable_fusion_linx\""\n },\n {\n \""type\"": [\n \""null\"",\n \""float\""\n ],\n \""doc\"": \""Only include reference sites with read depth\\nwithin max percentage of median reference read depth\\n\"",\n \""id\"": \""#max_depth_percent_amber\""\n },\n {\n \""type\"": [\n \""null\"",\n \""float\""\n ],\n \""doc\"": \""Max heterozygous AF%\\n\"",\n \""id\"": \""#max_het_af_percent_amber\""\n },\n {\n \""type\"": [\n \""null\"",\n \""float\""\n ],\n \""doc\"": \""Maximum norm factor (default 2.0)\\n\"",\n \""id\"": \""#max_norm_factor_purple\""\n },\n {\n \""type\"": [\n \""null\"",\n \""float\""\n ],\n \""doc\"": \""Maximum purity (default 1.0)\\n\"",\n \""id\"": \""#max_purity_purple\""\n },\n {\n \""type\"": [\n \""null\"",\n \""int\""\n ],\n \""doc\"": \""Minimum quality for a base to be considered\\n\"",\n \""id\"": \""#min_base_quality_amber\""\n },\n {\n \""type\"": [\n \""null\"",\n \""float\""\n ],\n \""doc\"": \""Max percentage of median depth\\n\"",\n \""id\"": \""#min_depth_percent_amber\""\n },\n {\n \""type\"": [\n \""null\"",\n \""int\""\n ],\n \""doc\"": \""Minimum ratio count while smoothing before diploid regions become suspect while approachin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5826:106627,log,logs,106627,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5826,2,['log'],"['log', 'logs']"
Testability,"e from Initializing to Running; [2019-05-22 19:19:12,28] [info] AwsBatchAsyncBackendJobExecutionActor [755021aeHaplotypecaller.SplitFilesByChromosome:NA:1]: Status change from Running to Succeeded; [2019-05-22 19:19:18,44] [info] 755021ae-948b-47f9-94a8-66b486bda47d-SubWorkflowActor-SubWorkflow-Haplotypecaller:0:1 [755021ae]: Starting Haplotypecaller.HC_GVCF (23 shards); [2019-05-22 19:19:19,34] [info] AwsBatchAsyncBackendJobExecutionActor [755021aeHaplotypecaller.HC_GVCF:1:1]: set -e; sambamba index -t 4 /cromwell_root/s4-pbg-hc/HC_Dev_Run_5/Pipeline/RSM278260-6_8plex/pipeline_workflow/3997371c-9513-4386-a579-a72639c6e960/call-Haplotypecaller/shard-0/hc.Haplotypecaller/755021ae-948b-47f9-94a8-66b486bda47d/call-SplitFilesByChromosome/glob-313957810a5e411f50b17b2a7d630ef7/chr10.RSM278260-6_8plex.dedup.recal.bam; gatk HaplotypeCaller \; --java-options -Djava.io.tmpdir='' \; -R /cromwell_root/s4-ngs-resources-sandbox/Genomic/Broad/hg19/ucsc.hg19.fasta \; --dbsnp /cromwell_root/s4-ngs-resources-sandbox/Variant/Broad/hg19/dbsnp_138.hg19.vcf.gz \; --native-pair-hmm-threads 16 \; -L /cromwell_root/s4-pbg-hc/HC_Dev_Run_5/Pipeline/RSM278260-6_8plex/pipeline_workflow/3997371c-9513-4386-a579-a72639c6e960/call-Haplotypecaller/shard-0/hc.Haplotypecaller/755021ae-948b-47f9-94a8-66b486bda47d/call-SplitFilesByChromosome/glob-6f4bc12a708659d4f5f3eecd1cdffff7/chr10.intervals \; -I /cromwell_root/s4-pbg-hc/HC_Dev_Run_5/Pipeline/RSM278260-6_8plex/pipeline_workflow/3997371c-9513-4386-a579-a72639c6e960/call-Haplotypecaller/shard-0/hc.Haplotypecaller/755021ae-948b-47f9-94a8-66b486bda47d/call-SplitFilesByChromosome/glob-313957810a5e411f50b17b2a7d630ef7/chr10.RSM278260-6_8plex.dedup.recal.bam \; -O RSM278260-6_8plex.hc.gvcf.gz \; -ERC GVCF \; \; [2019-05-22 19:19:19,34] [info] AwsBatchAsyncBackendJobExecutionActor [755021aeHaplotypecaller.HC_GVCF:6:1]: set -e; sambamba index -t 4 /cromwell_root/s4-pbg-hc/HC_Dev_Run_5/Pipeline/RSM278260-6_8plex/pipeline_workflow/3997371c-9513-4386-a579-a7263",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5004:5840,sandbox,sandbox,5840,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5004,1,['sandbox'],['sandbox']
Testability,"e paths. Any relative path is treated as relative to the root directory of the system. . For example:; In the following workflow, test.wdl is imported. If test.wdl is located in the same directory as this workflow it can't be found (`/home/<various directories>/test/test.wdl`), however, if test.wdl is located in the root directory it will be found (`/test.wdl`).; ```; version 1.0. import ""test.wdl"" as test. workflow test2 {; call test.sayHello as blah {; input:; name=""Grog""; }. output {; String out = blah.blah; }; }; ```; test.wdl looks like this:; ```; version 1.0. task sayHello {; input {; String name; }. command {; echo Hello, ~{name}; }. output {; String blah = read_string(stdout()); }; }; ```; The following is mentioned in the printed output:; ```; Failed to import 'test.wdl' (reason 1 of 2): Failed to resolve 'test.wdl' using resolver: 'relative to directory / (without escaping None)' (reason 1 of 1): Import file not found: test.wdl; Failed to import 'test.wdl' (reason 2 of 2): Failed to resolve 'test.wdl' using resolver: 'http importer' (reason 1 of 1): Cannot import 'test.wdl' relative to nothing; ```; Looking at the cromwell source code I suspect the problem lies with the directory path being given to `DirectoryResolver` in `localFilesystemResolvers` ([this line](https://github.com/broadinstitute/cromwell/blob/develop/engine/src/main/scala/cromwell/engine/workflow/lifecycle/materialization/MaterializeWorkflowDescriptorActor.scala#L271)). <!--; Hi! Thanks for taking the time to report feedback. Before posting an issue here, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-firecloud-team; WDL https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; CWL https://www.biostars.org/; -->. <!-- Are you seeing some",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3986:1168,test,test,1168,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3986,1,['test'],['test']
Testability,"e to an auth defined in the `google` stanza at the top. This auth is used to create; # Pipelines and manipulate auth JSONs.; auth = ""application-default"". // alternative service account to use on the launched compute instance; // NOTE: If combined with service account authorization, both that serivce account and this service account; // must be able to read and write to the 'root' GCS path; compute-service-account = ""default"". # Endpoint for APIs, no reason to change this unless directed by Google.; endpoint-url = ""https://lifesciences.googleapis.com/"". # Currently Cloud Life Sciences API is available only in `us-central1` and `europe-west2` locations.; location = ""us-central1"". # Restrict access to VM metadata. Useful in cases when untrusted containers are running under a service; # account not owned by the submitting user; restrict-metadata-access = false. # Pipelines v2 only: specify the number of times localization and delocalization operations should be attempted; # There is no logic to determine if the error was transient or not, everything is retried upon failure; # Defaults to 3; localization-attempts = 3. # Specifies the minimum file size for `gsutil cp` to use parallel composite uploads during delocalization.; # Parallel composite uploads can result in a significant improvement in delocalization speed for large files; # but may introduce complexities in downloading such files from GCS, please see; # https://cloud.google.com/storage/docs/gsutil/commands/cp#parallel-composite-uploads for more information.; #; # If set to 0 parallel composite uploads are turned off. The default Cromwell configuration turns off; # parallel composite uploads, this sample configuration turns it on for files of 150M or larger.; parallel-composite-upload-threshold=""150M""; }. # Controls how batched requests to PAPI are handled:; batch-requests {; timeouts {; # Timeout when attempting to connect to PAPI to make requests:; # read = 10 seconds. # Timeout waiting for batch responses fro",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6462:3653,log,logic,3653,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6462,1,['log'],['logic']
Testability,e to load namespace from workflow: ERROR: Both 'true' and 'false' attributes must be specified if either is specified:. --tumorBam=${tumor_bam} --normalBam=${normal_bam} ${true='--targeted' targeted} \; ^. at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:186); at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:156); at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:151); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); at akka.actor.FSM.processEvent(FSM.scala:663); at akka.actor.FSM.processEvent$(FSM.scala:660); at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:114); at akka.actor.LoggingFSM.processEvent(FSM.scala:799); at akka.actor.LoggingFSM.processEvent$(FSM.scala:781); at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:114); at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor.aroundReceive(Actor.scala:513); at akka.actor.Actor.aroundReceive$(Actor.scala:511); at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:114); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527); at akka.actor.ActorCell.invoke(ActorCell.scala:496); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/2594:1291,Log,LoggingFSM,1291,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2594,1,['Log'],['LoggingFSM']
Testability,"e you can view/create issues.; ###. Hi there,. My workflow runs out of memory. I'm not sure where exactly though. I'm trying to run Mutect2 on a large cohort of samples, but it keeps crashing with an out of memory error. Any help would be extremely helpful as to how I can avoid this issue. I'm using `-Xmx32g` when I call cromwell, and am using GCS as the backend. Here the error:; ```; ### GetPileupSummaries; # These must be created, even if they remain empty, as cromwell doesn't support optional output; touch tumor-pileups.table; touch normal-pileups.table. if [[ ! -z """" ]]; then; gatk --java-options ""-Xmx3000m"" GetPileupSummaries -R gs://nicholas-b-test/references/genome.fa -I gs://nicholas-b-test/Mutect2_multisample/4f039d1f-f981-4a6d-98b3-be9cd92d3e62/call-Mutect2/shard-439/Mutect2/d19d9b83-bda0-40b6-89e6-7f74d3f76988/call-TumorCramToBam/1046545_23163_0_0.bam --interval-set-rule INTERSECTION -L gs://nicholas-b-test/Mutect2_multisample/4f039d1f-f981-4a6d-98b3-be9cd92d3e62/call-Mutect2/shard-439/Mutect2/d19d9b83-bda0-40b6-89e6-7f74d3f76988/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0013-scattered.interval_list \; -V -L -O tumor-pileups.table. if [[ ! -z """" ]]; then; gatk --java-options ""-Xmx3000m"" GetPileupSummaries -R gs://nicholas-b-test/references/genome.fa -I --interval-set-rule INTERSECTION -L gs://nicholas-b-test/Mutect2_multisample/4f039d1f-f981-4a6d-98b3-be9cd92d3e62/call-Mutect2/shard-439/Mutect2/d19d9b83-bda0-40b6-89e6-7f74d3f76988/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0013-scattered.interval_list \; -V -L -O normal-pileups.table; fi; fi; OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x00007fbe6d000000, 4345298944, 0) failed; error='Not enough space' (errno=12); #; # There is insufficient memory for the Java Runtime Environment to continue.; # Native memory allocation (mmap) failed to map 4345298944 bytes for committing reserved memory.; # An error report file with more information is saved as:; # /home/nichol",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5347:1117,test,test,1117,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5347,1,['test'],['test']
Testability,"e$?'.; ```; This only seems to occur when the `glob` in the outputBinding contains a `*`. A small test case (run with `/usr/bin/java -jar cromwell-34.jar run -t cwl -i test.yml test.cwl` demonstrates this:; #### test.cwl; ```yaml; #!/usr/bin/env cwl-runner; cwlVersion: v1.0; class: CommandLineTool; requirements:; - class: ShellCommandRequirement; baseCommand: ['/bin/echo', ""this is a""]; arguments: [; { valueFrom: '>', shellQuote: false },; 'some_output.txt'; ]; inputs:; bonus:; type: string; inputBinding:; position: -1; outputs:; found:; type: File; outputBinding:; glob: '*output.txt'; not_found:; type: File?; outputBinding:; glob: '*extra.txt'; ```; #### test.yaml; ```yaml; bonus: ""test""; ```. `cwltool` handles this case as expected:; ```; $ cwltool test.cwl test.yml; /usr/local/bin/cwltool 1.0.20170822192924; Resolved 'test.cwl' to 'file:///home/tmooney/cromwell_test/glob/test.cwl'; [job test.cwl] /tmp/tmpqeLl9_$ /bin/sh \; -c \; '/bin/echo' 'this is a' 'test' > 'some_output.txt'; [job test.cwl] completed success; {; ""found"": {; ""checksum"": ""sha1$6476df3aac780622368173fe6e768a2edc3932c8"", ; ""basename"": ""some_output.txt"", ; ""nameext"": "".txt"", ; ""nameroot"": ""some_output"", ; ""location"": ""file:///home/tmooney/cromwell_test/glob/some_output.txt"", ; ""path"": ""/home/tmooney/cromwell_test/glob/some_output.txt"", ; ""class"": ""File"", ; ""size"": 15; }, ; ""not_found"": null; }; Final process status is success; ```. Cromwell fails with this error:; ```; [2018-08-14 16:14:05,89] [info] MaterializeWorkflowDescriptorActor [a3d3e011]: Parsing workflow as CWL v1.0; [2018-08-14 16:14:07,03] [info] MaterializeWorkflowDescriptorActor [a3d3e011]: Call-to-Backend assignments: test.cwl -> Local; [2018-08-14 16:14:10,44] [info] WorkflowExecutionActor-a3d3e011-3a0c-4203-9edb-3d65564a1d1d [a3d3e011]: Starting test.cwl; [2018-08-14 16:14:11,85] [info] BackgroundConfigAsyncJobExecutionActor [a3d3e011test.cwl:NA:1]: '/bin/echo' 'this is a' 'test' > 'some_output.txt'; [2018-08-14 16:14:11,97] [info]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4004:1308,test,test,1308,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4004,1,['test'],['test']
Testability,"e,None,None,None,None,None,Some(Inr(Inl([Ljava.lang.String;@2ff95103))),None,Some(Inl(Inl(File)))) are not supported.; 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$materialization$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:211); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:181); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:176); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:34); 	at akka.actor.FSM.processEvent(FSM.scala:684); 	at akka.actor.FSM.processEvent$(FSM.scala:681); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:820); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:802); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:678); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:672); 	at akka.actor.Actor.aroundReceive(Actor.scala:517); 	at akka.actor.Actor.aroundReceive$(Actor.scala:515); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:135); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588); 	at akka.actor.ActorCell.invoke(ActorCell.scala:557); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258); 	at akka.dispatch.Mailbox.run(Mailbox.scala:225); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:235); 	at akka.dispatch.forkjoi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4538:1617,Log,LoggingFSM,1617,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4538,1,['Log'],['LoggingFSM']
Testability,e.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.la,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4557,Test,TestFunction,4557,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestFunction']
Testability,"e.path.BetterFileMethods.newInputStream(BetterFileMethods.scala:240); 	at cromwell.core.path.BetterFileMethods.newInputStream$(BetterFileMethods.scala:239); 	at cromwell.filesystems.s3.S3Path.newInputStream(S3PathBuilder.scala:156); 	at cromwell.core.path.EvenBetterPathMethods.mediaInputStream(EvenBetterPathMethods.scala:94); 	at cromwell.core.path.EvenBetterPathMethods.mediaInputStream$(EvenBetterPathMethods.scala:91); 	at cromwell.filesystems.s3.S3Path.mediaInputStream(S3PathBuilder.scala:156); 	at cromwell.engine.io.nio.NioFlow.$anonfun$withReader$1(NioFlow.scala:145); 	at cromwell.util.TryWithResource$.$anonfun$tryWithResource$1(TryWithResource.scala:14); 	at scala.util.Try$.apply(Try.scala:209); 	at cromwell.util.TryWithResource$.tryWithResource(TryWithResource.scala:10); 	... 14 more. [2019-01-11 20:27:06,80] [info] WorkflowManagerActor WorkflowActor-8fa7a9e4-f30d-4c19-b8cb-68be6442f317 is in a terminal state: WorkflowFailedState. ```. Looking at the cloudwatch logs it appears that the problem is with permission on the node. ```; ; 04:26:11; mkdir: cannot create directory '/cromwell_root/bucket/cwl_temp_file_8fa7a9e4-f30d-4c19-b8cb-68be6442f317.cwl': Permission denied; ; 04:26:11; chmod: cannot access '': No such file or directory; ; 04:26:11; mkfifo: cannot create fifo '/out.1': Permission denied; ; 04:26:11; mkfifo: cannot create fifo '/err.1': Permission denied; ; 04:26:11; /bin/bash: line 15: /out.1: No such file or directory; ; 04:26:11; /bin/bash: line 16: /err.1: No such file or directory; ; 04:26:11; /bin/bash: line 22: /out.1: Permission denied; ; 04:26:11; /bin/bash: line 23: /cromwell_root/bbmap-rc.txt.tmp: Permission denied; ; 04:26:11; mkdir: cannot create directory '/cromwell_root/glob-2e18d4d3f934d19c17412db2b66b70fa': Permission denied; ; 04:26:11; /bin/bash: line 38: /cromwell_root/glob-2e18d4d3f934d19c17412db2b66b70fa/cromwell_glob_control_file: No such file or directory; ; 04:26:11; ln: failed to access '/cromwell_root/*R?.fq.gz': ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4542:4199,log,logs,4199,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4542,1,['log'],['logs']
Testability,e.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076) at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088) at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289) at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088) at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070) at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410) at scala.collection.immutable.List.foreach(List.scala:389),MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:2338,Test,TestSuite,2338,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestSuite']
Testability,eAndAfterAll$$super$run(TestKitSuite.scala:16) at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.org$scalatest$FlatSpecLike$$super$run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.services.instrumentation.impl.statsd.StatsDInstrumentationServiceActorSpec.run(StatsDInstrumentationServiceActorSpec.scala:16) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(Concurre,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4349:4095,Test,TestRunner,4095,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4349,1,['Test'],['TestRunner']
Testability,"eCache commit start; (...); ```. And at the end:; ```; 2023-02-08 16:32:11,54] [info] checkpointClose synched; [2023-02-08 16:32:11,57] [info] checkpointClose script done; [2023-02-08 16:32:11,57] [info] dataFileCache commit start; [2023-02-08 16:32:11,57] [info] dataFileCache commit end; [2023-02-08 16:32:11,69] [info] checkpointClose end; [2023-02-08 16:32:11,69] [info] Checkpoint end - txts: 5342; [2023-02-08 16:32:21,70] [info] Checkpoint start; [2023-02-08 16:32:21,70] [info] checkpointClose start; [2023-02-08 16:32:21,70] [info] checkpointClose synched; [2023-02-08 16:32:21,74] [info] checkpointClose script done; [2023-02-08 16:32:21,74] [info] dataFileCache commit start; [2023-02-08 16:32:21,76] [info] dataFileCache commit end; [2023-02-08 16:32:21,82] [info] checkpointClose end; [2023-02-08 16:32:21,82] [info] Checkpoint end - txts: 5348; [2023-02-08 16:32:21,89] [error] Failed to instantiate Cromwell System. Shutting down Cromwell.; liquibase.exception.LockException: Could not acquire change log lock. Currently locked by fdb0:cafe:d0d0:ceb4:ba59:9fff:fec3:33de%p1p1 (fdb0:cafe:d0d0:ceb4:ba59:9fff:fec3:33de%p1p1) since 2/8/23, 4:23 PM; 	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:270); 	at liquibase.Liquibase.lambda$update$1(Liquibase.java:214); 	at liquibase.Scope.lambda$child$0(Scope.java:180); 	at liquibase.Scope.child(Scope.java:189); 	at liquibase.Scope.child(Scope.java:179); 	at liquibase.Scope.child(Scope.java:158); 	at liquibase.Liquibase.runInScope(Liquibase.java:2405); 	at liquibase.Liquibase.update(Liquibase.java:211); 	at liquibase.Liquibase.update(Liquibase.java:197); 	at cromwell.database.migration.liquibase.LiquibaseUtils$.updateSchema(LiquibaseUtils.scala:74); 	at cromwell.database.migration.liquibase.LiquibaseUtils$.updateSchema(LiquibaseUtils.scala:46); 	at cromwell.services.ServicesStore$EnhancedSqlDatabase$.$anonfun$initialized$1(ServicesStore.scala:11); 	at cromwell.services.ServicesStore$EnhancedSqlDa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7009:3437,log,log,3437,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7009,1,['log'],['log']
Testability,eDSoPcHJvZHVjdGlvblF1ZXVl; ```. from .21:. ```; resources:; bootDiskSizeGb: 10; disks:; - autoDelete: true; mountPoint: /cromwell_root; name: local-disk; sizeGb: 200; type: PERSISTENT_HDD; minimumCpuCores: 1; minimumRamGb: 7; preemptible: true; zones:; - us-central1-b; - us-central1-c; pipelineArgs:; clientId: ''; inputs:; exec: gs://broad-gotc-int-cromwell-execution/PairedEndSingleSampleWorkflow/4d02d218-b473-4a88-8820-964da7e508c4/call-ValidateReadGroupSamFile/shard-22/exec.sh; input_bam-0: gs://broad-gotc-int-cromwell-execution/PairedEndSingleSampleWorkflow/4d02d218-b473-4a88-8820-964da7e508c4/call-SortAndFixReadGroupBam/shard-22/HTC3GCCXX.8.Pond-536132.sorted.bam; ref_dict-0: gs://broad-references/hg38/v0/Homo_sapiens_assembly38.dict; ref_fasta-0: gs://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; ref_fasta_index-0: gs://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai; logging:; gcsPath: gs://broad-gotc-int-cromwell-execution/PairedEndSingleSampleWorkflow/4d02d218-b473-4a88-8820-964da7e508c4/call-ValidateReadGroupSamFile/shard-22/ValidateReadGroupSamFile-22.log; outputs:; HTC3GCCXX.8.Pond-536132.validation_report: gs://broad-gotc-int-cromwell-execution/PairedEndSingleSampleWorkflow/4d02d218-b473-4a88-8820-964da7e508c4/call-ValidateReadGroupSamFile/shard-22/HTC3GCCXX.8.Pond-536132.validation_report; ValidateReadGroupSamFile-22-rc.txt: gs://broad-gotc-int-cromwell-execution/PairedEndSingleSampleWorkflow/4d02d218-b473-4a88-8820-964da7e508c4/call-ValidateReadGroupSamFile/shard-22/ValidateReadGroupSamFile-22-rc.txt; projectId: broad-gotc-int; resources:; bootDiskSizeGb: 0; disks: []; minimumCpuCores: 0; minimumRamGb: 0; noAddress: false; preemptible: false; zones: []; serviceAccount:; email: default; scopes:; - https://www.googleapis.com/auth/compute; - https://www.googleapis.com/auth/devstorage.full_control; - https://www.googleapis.com/auth/genomics; - https://www.googleapis.com/auth/genomics; - https://www.googleapis.com/auth/compute; runtimeMe,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1501:3840,log,logging,3840,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1501,1,['log'],['logging']
Testability,"eSet changesets/add_hog_group_in_workflow_store.xml::add_hog_group_in_workflow_store::cjllanwarne ran successfully in 10ms; 2019-07-21 23:07:19,332 INFO - INSERT INTO public.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_hog_group_in_workflow_store', 'cjllanwarne', 'changesets/add_hog_group_in_workflow_store.xml', NOW(), 32, '8:618f223b37b310ec4ba7a1a89eb37e09', 'addColumn tableName=WORKFLOW_STORE_ENTRY', '', 'EXECUTED', NULL, NULL, '3.6.3', '3750437988'); 2019-07-21 23:07:19,335 INFO - alter sequence ""CALL_CACHING_HASH_ENTRY_CALL_CACHING_HASH_ENTRY_ID_seq"" as bigint; 2019-07-21 23:07:19,336 ERROR - Change Set changesets/resync_engine_schema.xml::restore_auto_increment_call_caching_hash_entry_id_postgresql::kshakir failed. Error: ERROR: syntax error at or near ""as""; Position: 73 [Failed SQL: alter sequence ""CALL_CACHING_HASH_ENTRY_CALL_CACHING_HASH_ENTRY_ID_seq"" as bigint]; 2019-07-21 23:07:19,372 INFO - Successfully released change log lock; 2019-07-21 23:07:19,386 ERROR - Failed to instantiate Cromwell System. Shutting down Cromwell.; liquibase.exception.MigrationFailedException: Migration failed for change set changesets/resync_engine_schema.xml::restore_auto_increment_call_caching_hash_entry_id_postgresql::kshakir:; Reason: liquibase.exception.DatabaseException: ERROR: syntax error at or near ""as""; Position: 73 [Failed SQL: alter sequence ""CALL_CACHING_HASH_ENTRY_CALL_CACHING_HASH_ENTRY_ID_seq"" as bigint]; 	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:637); 	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53); 	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83); 	at liquibase.Liquibase.update(Liquibase.java:202); 	at liquibase.Liquibase.update(Liquibase.java:179); 	at cromwell.database.migration.liquibase.LiquibaseUtils$.updateSchema(LiquibaseUtils.scala:67); 	at cromwell.database.migration.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/5083:34847,log,log,34847,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/5083,1,['log'],['log']
Testability,eWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$17(SingleWorkflowRunnerActorSpec.scala:259) at akka.testkit.TestKitBase.within(TestKit.scala:360) at akka.testkit.TestKitBase.within$(TestKit.scala:348) at akka.testkit.TestKit.within(TestKit.scala:896) at akka.testkit.TestKitBase.within(TestKit.scala:374) at akka.testkit.TestKitBase.within$(TestKit.scala:374) at akka.testkit.TestKit.within(TestKit.scala:896) at cromwell.engine.workflow.SingleWorkflowRunnerActorWithBadMetadataSpec.$anonfun$new$16(SingleWorkflowRunnerActorSpec.scala:257) at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85) at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83) at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104) at org.scalatest.Transformer.apply(Transformer.scala:22) at org.scalatest.Transformer.apply(Transformer.scala:20) at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078) at org.scalatest.TestSuite.withFixture(TestSuite.scala:196) at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195) at cromwell.CromwellTestKitWordSpec.withFixture(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076) at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088) at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289) at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088) at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070) at cromwell.CromwellTestKitWordSpec.runTest(CromwellTestKitSpec.scala:250) at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384) at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373) at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410) at scala.collection.immutable.List.foreach(List.scala:389) at org.scalatest,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4350:2361,Test,TestSuite,2361,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4350,1,['Test'],['TestSuite']
Testability,"ecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. Apologies if this was corrected by #1857, I originally included this in #1875 last week, but had not heard back about this part of that issue. ---- . Update: `write_lines()` was improved for Cromwell 27 but some issues appear to remain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/1906:20331,test,tests,20331,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906,2,['test'],['tests']
Testability,"ecycleActorFactory"". system {; memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; }; config {; project = ""$my_project""; root = ""$my_bucket""; name-for-call-caching-purposes: PAPI; slow-job-warning-time: 24 hours; genomics-api-queries-per-100-seconds = 1000; maximum-polling-interval = 600. # Setup GCP to give more memory with each retry; system {; memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; }; system.memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; memory_retry_multiplier = 4; ; # Number of workers to assign to PAPI requests; request-workers = 3. virtual-private-cloud {; network-label-key = ""network-key""; network-name = ""network-name""; subnetwork-name = ""subnetwork-name""; auth = ""auth""; }; pipeline-timeout = 7 days; genomics {; auth = ""auth""; compute-service-account = ""$my_account""; endpoint-url = ""https://lifesciences.googleapis.com/""; location = ""us-central1""; restrict-metadata-access = false; localization-attempts = 3; parallel-composite-upload-threshold=""150M""; }; filesystems {; gcs {; auth = ""auth""; project = ""$my_project""; caching {; duplication-strategy = ""copy""; }; }; }; system {; memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; }; runtime {; cpuPlatform: ""Intel Cascade Lake""; }; default-runtime-attributes {; cpu: 1; failOnStderr: false; continueOnReturnCode: 0; memory: ""2048 MB""; bootDiskSizeGb: 10; disks: ""local-disk 375 SSD""; noAddress: true; preemptible: 1; maxRetries: 3; system.memory-retry-error-keys = [""OutOfMemory"", ""Killed"", ""Error:""]; memory_retry_multiplier = 4; zones: [""us-central1-a"", ""us-central1-b""]; }. include ""papi_v2_reference_image_manifest.conf""; }; }; }; }. gustily ls gs://cromwell-executions/MemoryRetryTest/d54a5a39-4d3b-4ac7-9bb1-97043d761b56/call-TestOutOfMemoryRetry; TestOutOfMemoryRetry.log; gcs_delocalization.sh; gcs_localization.sh; gcs_transfer.sh; rc; script; stderr; stdout; pipelines-logs. stderr:; Killed; /cromwell_root/script: line 32: 17 Killed tail /dev/zero. rc:; 137",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/7451:2965,Test,TestOutOfMemoryRetry,2965,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/7451,4,"['Test', 'log']","['TestOutOfMemoryRetry', 'log', 'logs']"
Testability,"ed `float` input. ```; {; ""radius"": 1.0; }; ```. ```; cwlVersion: v1.0; class: Workflow; # Workflow-level DockerRequirement; requirements:; DockerRequirement:; dockerPull: ""ubuntu:latest""; inputs:; - id: radius; type: float; outputs:; - id: area; outputSource: ""#one/rSquared""; type: float; steps:; - id: one; in:; - id: radius; source: ""#radius""; out:; - id: rSquared; - id: rCopy; run:; inputs:; - id: radius; type: float; outputs:; - id: rSquared; outputBinding:; glob: stdout.txt; loadContents: true; outputEval: $(parseFloat(self[0].contents)); type: float; - id: rCopy; outputBinding:; outputEval: $(inputs.radius); type: float; class: CommandLineTool; requirements:; - class: ShellCommandRequirement; arguments:; - valueFrom: echo; - valueFrom: ""`expr ""; shellQuote: false; - valueFrom: $(inputs.radius); - valueFrom: ""*""; shellQuote: false; - valueFrom: $(inputs.radius); - valueFrom: ""`""; shellQuote: false; stdout: stdout.txt; ```. ```; name: cwl_caching; testFormat: workflowsuccess; backendsMode: ""only""; backends: [Local]; tags: [localdockertest]. files {; wdl: cwl_caching/cwl_caching.cwl; inputs: cwl_caching/cwl_caching.json; }. metadata {; status: Succeeded; }. workflowType: CWL; workflowTypeVersion: v1.0; ```. ```; cromwell.backend.standard.StandardAsyncExecutionActor$$anon$2: Failed to evaluate job outputs:; Bad output 'rCopy': No coercion defined from '1' of type 'Int' to 'Float'.; 	at cromwell.backend.standard.StandardAsyncExecutionActor.$anonfun$handleExecutionSuccess$1(StandardAsyncExecutionActor.scala:688); 	at scala.util.Success.$anonfun$map$1(Try.scala:251); 	at scala.util.Success.map(Try.scala:209); 	at scala.concurrent.Future.$anonfun$map$1(Future.scala:289); 	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29); 	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at ak",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3480:1041,test,testFormat,1041,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3480,1,['test'],['testFormat']
Testability,"ed; [2019-01-25 13:58:40,06] [error] WorkflowManagerActor Workflow 2c2e5a10-8c57-4f9f-8d80-c2fccacbb452 failed (during ExecutingWorkflowState): Job alignment_to_rec:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-alignment_to_rec/alignment_to_rec-stderr.log.; Traceback (most recent call last):; File ""/usr/local/bin/bcbio_nextgen.py"", line 223, in <module>; runfn.process(kwargs[""args""]); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 48, in process; fnargs, parallel, out_keys, input_files = _world_from_cwl(args.name, fnargs[1:], work_dir); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 185, in _world_from_cwl; assert os.path.exists(os.path.join(work_dir, ""cwl.inputs.json"")); AssertionError. Job prep_samples_to_rec:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: s3://bcbio-batch-cromwell-test/cromwell-execution/main-somatic.cwl/2c2e5a10-8c57-4f9f-8d80-c2fccacbb452/call-prep_samples_to_rec/prep_samples_to_rec-stderr.log.; Traceback (most recent call last):; File ""/usr/local/bin/bcbio_nextgen.py"", line 223, in <module>; runfn.process(kwargs[""args""]); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 48, in process; fnargs, parallel, out_keys, input_files = _world_from_cwl(args.name, fnargs[1:], work_dir); File ""/usr/local/share/bcbio-nextgen/anaconda/lib/python2.7/site-packages/bcbio/distributed/runfn.py"", line 185, in _world_from_cwl; assert os.path.exists(os.pat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4586:2401,assert,assert,2401,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4586,1,['assert'],['assert']
Testability,"edback. Before posting an issue over in Jira tracker, please check whether your question is already answered in our:; forum https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; documentation http://cromwell.readthedocs.io/en/develop/. Other forums:; FireCloud https://gatkforums.broadinstitute.org/firecloud/categories/ask-the-firecloud-team; WDL https://gatkforums.broadinstitute.org/wdl/categories/ask-the-wdl-team; CWL https://www.biostars.org/; -->. <!-- Are you seeing something that looks like a bug? Then great! You're almost in the right place. -->. <!-- You'll want to go to https://broadworkbench.atlassian.net/projects/BA/issues and then tell us: -->. <!-- Which backend are you running? -->. <!-- Paste/Attach your workflow if possible: -->. <!-- Paste your configuration if possible, MAKE SURE TO OMIT PASSWORDS, TOKENS AND OTHER SENSITIVE MATERIAL: -->. Hi,. I recently encountered an issue on running Cromwell jobs on AWS Batch. In brief, all of my testing WDL jobs failed with the following error message:. ```; 2021-09-23 00:08:18,813 INFO - Submitting taskId: cumulus.cluster-None-1, job definition : arn:aws:batch:us-west-2:752311211819:job-definition/cromwell_quay_io_cumulus_cumulus_1_4_377407181fbea1f33a22931df258b16d20d4c6ab3:1, script: s3://gred-cumulus-dev/scripts/c157137e2097795846ae1f4069ccd7a2; 2021-09-23 00:08:20,269 cromwell-system-akka.dispatchers.backend-dispatcher-118 INFO - AwsBatchAsyncBackendJobExecutionActor [UUID(cf00212c)cumulus.cluster:NA:1]: job id: 12836c6a-6d1a-4429-bb86-68b8f9883acf; 2021-09-23 00:08:20,287 cromwell-system-akka.dispatchers.backend-dispatcher-118 INFO - AwsBatchAsyncBackendJobExecutionActor [UUID(cf00212c)cumulus.cluster:NA:1]: Status change from - to Initializing; 2021-09-23 00:12:17,120 cromwell-system-akka.dispatchers.backend-dispatcher-136 INFO - AwsBatchAsyncBackendJobExecutionActor [UUID(cf00212c)cumulus.cluster:NA:1]: Status change from Initializing to Running; 2021-09-23 00:14:08,015 cromwell-system-a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/6504:1031,test,testing,1031,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/6504,1,['test'],['testing']
Testability,ee1$1(BeforeAndAfterAll.scala:213) at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210) at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208) at cromwell.core.actor.RobustClientHelperSpec.org$scalatest$FlatSpecLike$$super$run(RobustClientHelperSpec.scala:14) at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795) at org.scalatest.SuperEngine.runImpl(Engine.scala:521) at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795) at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793) at cromwell.core.actor.RobustClientHelperSpec.run(RobustClientHelperSpec.scala:14) at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314) at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:507) at sbt.TestRunner.runTest$1(TestFramework.scala:113) at sbt.TestRunner.run(TestFramework.scala:124) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282) at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282) at sbt.TestFunction.apply(TestFramework.scala:294) at sbt.Tests$.processRunnable$1(Tests.scala:347) at sbt.Tests$.$anonfun$makeSerial$1(Tests.scala:353) at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46) at sbt.std.Transform$$anon$4.work(System.scala:67) at sbt.Execute.$anonfun$submit$2(Execute.scala:269) at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) at sbt.Execute.work(Execute.scala:278) at sbt.Execute.$anonfun$submit$1(Execute.scala:269) at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178) at sbt.CompletionService$$anon$2.call(CompletionService.scala:37) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.Executors$RunnableAdapter.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/4351:4084,Test,TestFramework,4084,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/4351,1,['Test'],['TestFramework']
Testability,"ef_size,; disk_multiplier = bwa_disk_multiplier,; unmapped_bam_size = unmapped_bam_size; }; }. if (unmapped_bam_size <= cutoff_for_large_rg_in_gb) {; # Map reads to reference; call commonTasks.SamToFastqAndBwaMemAndMba {; input:; input_bam = unmapped_bam,; bwa_commandline = bwa_commandline,; output_bam_basename = sub_sub + "".aligned.unsorted"",; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; ref_alt = ref_alt,; ref_bwt = ref_bwt,; ref_amb = ref_amb,; ref_ann = ref_ann,; ref_pac = ref_pac,; ref_sa = ref_sa,; bwa_version = GetBwaVersion.version,; # The merged bam can be bigger than only the aligned bam,; # so account for the output size by multiplying the input size by 2.75.; disk_size = unmapped_bam_size + bwa_ref_size + (bwa_disk_multiplier * unmapped_bam_size) + additional_disk,; compression_level = compression_level,; preemptible_tries = preemptible_tries; }; }; }; ```. `GetBwaVersion` runs and succeeds and then launches the subworkflow. Server log for comparison. ```; 2018-01-17 20:52:50,403 cromwell-system-akka.dispatchers.api-dispatcher-23 INFO - Workflow e71c769c-948f-4bd7-8cbe-064a18375966 submitted.; 2018-01-17 20:52:53,874 cromwell-system-akka.dispatchers.engine-dispatcher-31 INFO - 1 new workflows fetched; 2018-01-17 20:52:53,874 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - WorkflowManagerActor Starting workflow UUID(e71c769c-948f-4bd7-8cbe-064a18375966); 2018-01-17 20:52:53,874 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - WorkflowManagerActor Successfully started WorkflowActor-e71c769c-948f-4bd7-8cbe-064a18375966; 2018-01-17 20:52:53,875 cromwell-system-akka.dispatchers.engine-dispatcher-5 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2018-01-17 20:52:54,947 cromwell-system-akka.dispatchers.engine-dispatcher-37 INFO - MaterializeWorkflowDescriptorActor [UUID(e71c769c)]: Call-to-Backend assignments: SomaticPairedEndSingleSampleWorkflow.GetBwaVersion -> JES, SplitLargeRG.SumSplitAlig",MatchSource.ISSUE,broadinstitute,cromwell,87,https://github.com/broadinstitute/cromwell/issues/3156:7436,log,log,7436,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/3156,1,['log'],['log']
