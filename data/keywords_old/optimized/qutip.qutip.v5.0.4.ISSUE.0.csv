quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability," (to allow us to keep track of empty spaces), but a `Qobj` whose dimensions would be a `Compound` made entirely of `Field` will instead become a Python complex number. The dimensions types should be available for advanced users (to allow them to access the full parsing speed-ups), but should not be presented as the standard choice. I propose we place the types inside a nested namespace, such as `qutip.dims` (logically - physically it would be `qutip/core/dims.py`), to allow the form `from qutip.dims import *` where appropriate without forcing the user to do the modern bad practice left over from our MATLAB past `from qutip import *`. ## User impact. In principle, nothing will change for the normal QuTiP user compared to the 4.x branch. You will still be able to supply the `dims` argument to the `Qobj` constructor as lists in the exact same format, and they will be parsed in the same way. Users _do not_ need to type out the new computer-friendly dimensions objects, but they will be available for advanced users who frequently make `Qobj` using the raw constructor with funny dimensions. We will publicly provide `qutip.dims.parse` to turn a list into the new form, so even advanced users do not need to type out all the nonsense. `Qobj` factory functions that take a `dims` parameter should now also accept the new form. Since almost all of them just pass this directly to the `dims` argument in the `Qobj` constructor, this likely won't involve any developer effort. `Qobj` construction overhead should be reduced to near-zero when passed a new dimensions object, which we will always do within the library. Compared to the 4.x branch, the overhead of `Qobj` will shrink from ~100µs to ~1µs in library code, even for functions where the `Qobj` type cannot be cleanly inferred from the input types. ## Particular points worth commenting on. 1. Are there currently valid `Qobj` that cannot be represented with this system?; 2. Should we push to implement basis-safety for QuTiP 5.x?; 3. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:10157,avail,available,10157,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['avail'],['available']
Availability," - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.00035163; E Max relative difference: 0.26008554; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001704, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); /nix/store/dz8lm4h0ivibad5kfc0ya3p3zqyd2fyf-python3-3.11.7/lib/python3.11/contextlib.py:81: AssertionError; =========================== short test summary info ============================; FAILED ../tests/test_countstat.py::test_dqd_current - AssertionError:; ```. ### Expected Behaviour. unit test succeeds. ### Your Environment. ```shell; QuTiP Version: 4.7.5; Numpy Versi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:2637,toler,tolerance,2637,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['toler'],['tolerance']
Availability," 2 spaces:. ket: Dimensions(Field, Space); bra: Dimensions(Space, Field); oper: Dimensions(Space, Space); ... This Dimension is the `Map` proposed by Jake, but ket are map from `Field` to `Space` and not `Space` themselves. Spaces come into multiple sub classes as proposed : `Space`, `SuperSpace`, `Field`, `Compound`, and `EnrSpace`. Splitting maps and spaces simplify spaces by not needing to have a dummy 2nd dims. Dimensions can be initiated from a list and converted back to one. Field are automatically contracted: `Compound(Field, Field)` is a `Field`, same for maps. With the exceptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to the Superspace instead of the dimensions, for now. But a better look at super operator representation is needed. `Qobj.dims` take and return a list, keeping the dimension object internally. From there, minimal adjustment were made so test pass. **Related issues or PRs**; Replace #1826",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1996:1556,Error,Error,1556,https://qutip.org,https://github.com/qutip/qutip/pull/1996,2,"['Error', 'error']","['Error', 'error']"
Availability," ; ```. and I get this error repeatedly when using the `steadystate` function. . ```; OSError Traceback (most recent call last); <ipython-input-3-4ef4797a881f> in <module>; 30 g2_v = []; 31 for p, x in enumerate(Gamma_vec):; ---> 32 j, z = calculate_avg_photons(N, x); 33 print(p); 34 n_avg.append(j). <ipython-input-3-4ef4797a881f> in calculate_avg_photons(N, Gamma); 18 c_ops.append(np.sqrt(rate)*sm.dag()); 19 ; ---> 20 rho = steadystate(H,c_ops); 21 n_cav = expect(a.dag()*a,rho); 22 g2_cav = expect(a.dag()*a.dag()*a*a,rho)/(n_cav**2). ~\Anaconda\lib\site-packages\qutip\steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 288 if (ss_args['solver'] == 'scipy' and ss_args['sparse']) \; 289 or ss_args['solver'] == 'mkl':; --> 290 return _steadystate_direct_sparse(A, ss_args); 291 else:; 292 return _steadystate_direct_dense(A, ss_args). ~\Anaconda\lib\site-packages\qutip\steadystate.py in _steadystate_direct_sparse(L, ss_args); 458 max_iter_refine=ss_args['max_iter_refine'],; 459 scaling_vectors=ss_args['scaling_vectors'],; --> 460 weighted_matching=ss_args['weighted_matching']); 461 _direct_end = time.time(); 462 ss_args['info']['solution_time'] = _direct_end-_direct_start. ~\Anaconda\lib\site-packages\qutip\_mkl\spsolve.py in mkl_spsolve(A, b, perm, verbose, **kwargs); 391 # Do dense RHS solving; 392 if not b_is_sparse:; --> 393 x = lu.solve(b, verbose=verbose); 394 # Solve each RHS vec individually and convert to sparse; 395 else:. ~\Anaconda\lib\site-packages\qutip\_mkl\spsolve.py in solve(self, b, verbose); 168 byref(c_int(33)), byref(c_int(self._dim)), self._data, self._indptr, self._indices,; 169 self._np_perm, byref(c_int(nrhs)), self._np_iparm, byref(c_int(0)), np_b,; --> 170 np_x, np_error); 171 self._solve_time = time.time() -_solve_start; 172 if error[0] != 0:. OSError: exception: access violation reading 0x0000000000000008; ``` . The does not raise every time I use the function and it has a different number at the end everytime it is shown.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077:2849,error,error,2849,https://qutip.org,https://github.com/qutip/qutip/issues/1077,1,['error'],['error']
Availability," > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; # ; ## ERROR: Failure: ValueError (invalid literal for int() with base 10: '1post0'). Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/loader.py"", line 411, in loadTestsFromName; addr.filename, addr.module); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 47, in importFromPath; return self.importFromDir(dir_path, fqname); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n, d in enumerate(str_list[:3])]); ValueError: invalid literal for int() with base 10: '1post0'; # ; ## ERROR: mesolve: simple time-dependence as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 398, in testMESimpleTDDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 525, in _mesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; ImportError: No module named rhs0; # ; ## ERROR: mesolve: constant decay as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_me",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:15179,ERROR,ERROR,15179,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['ERROR'],['ERROR']
Availability," Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.dev0+564c987b (with python setup.py install). Error message (then the code runs anyway):; ```; (qutipdev45) nathans-mbp:Downloads nathanshammah$ python fidel.py; /Users/nathanshammah/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. His qutip.about(): . ```; QuTiP Version: 4.5.0.dev0+f77f7e4a (or others); Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. Notice that in his case OPEN MP seems installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:1934,error,error,1934,https://qutip.org,https://github.com/qutip/qutip/issues/1109,5,"['Down', 'Error', 'error']","['Downloads', 'Error', 'error']"
Availability," I do `import qutip as qt`, a different error occurs:; ```; AttributeError Traceback (most recent call last); <ipython-input-8-ea74e5ab1d35> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 qt.mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if expt_callback:; 361 # use callback method; --> 362 output.expect.append(e_ops(t, Qobj(cdata, dims=dims))); ...; ---> 16 evals_mat[idx[0],:] = qt.real(evals); 17 ; 18 # find the overlap between the eigenstates and psi. AttributeError: module 'qutip' has no attribute 'real'; ```. ### Code to Reproduce the Bug. [This notebook](https://nbviewer.ipython.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb). ### Code Output. _No response_. ### Expected Behaviour. Evolve the system without incurring any error. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.30; Matplotlib Version: 3.3.4; Python Version: 3.7.7; Number of CPUs: 72; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:3307,error,error,3307,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['error'],['error']
Availability," I suggest we consider dropping most of them, and consequently their surrounding `Cython` code to ease maintainability and reduce code bloat of the repository. First, a couple of arguments against doing so:; - the versions in `scipy` and `qutip` did subsequently diverge in some form, because they no longer universally give the same results, possibly as a result of #654.; - the `qutip` version of `reverse_cuthill_mckee` is about 10% faster than the `scipy` version; - people may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1, 1, 0, 0, 0, 0, 0],; [1, 0, 1, 0, 0, 1, 0, 0, 1, 0],; [0, 1, 1, 0, 0, 0, 1, 0, 0, 0],; [1, 0, 0, 1, 0, 0, 1, 1, 0, 0],; [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],; [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],; [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],; [0, 1, 0, 0, 0,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:1223,error,error,1223,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['error'],['error']
Availability," This is the case if one has data describing the time-dependent object which is not easy to write analytically. In `brmesolve` the only option is to provide time-dependent functions as strings (or Cubic_Spline). This works fine for the Hamiltonian, but the `a_ops` fail a check in cy/brcodegen.py when using a Cubic_Spline type. **To Reproduce**; ```python; import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic spline representation will also be passed in a string-compatible format. In the string-format, the interpolation function is compiled into c-code, and thus is quite fast. Th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1225,error,error,1225,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['error'],['error']
Availability," Using cached scipy-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Using cached scipy-1.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-70.0.0-py3-none-any.whl (863 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:3451,ERROR,ERROR,3451,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['ERROR'],['ERROR']
Availability," [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H FAILED [ 94%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H FAILED [ 97%]; qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str FAILED [100%]. ======================================================================================================================================== FAILURES ========================================================================================================================================; __________________________________________________________________________________________________________________________ test_time_dependent_spline_in_c_ops ___________________________________________________________________________________________________________________________. def test_time_dependent_spline_in_c_ops():; N = 10; a = qutip.destroy(N); H = a.dag()*a; psi0 = qutip.basis(N, 9); times = np.linspace(0, 10, 100); kappa = 0.2; exact = 9 * np.exp(-2 * kappa * (1 - np.exp(-times))); a_ops = [[a + a.dag(), _string_w_interpolating_t(kappa, times)]]; collapse_points = np.sqrt(kappa) * np.exp(-0.5*times); c_ops = [[a, qutip.Cubic_Spline(times[0], times[-1], collapse_points)]]; > brme = qutip.brmesolve(H, psi0, times,; a_ops, e_ops=[a.dag()*a], c_ops=c_ops). /usr/lib/python3/dist-packages/qutip/tests/test_brmesolve_td.py:163: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:8178,FAILURE,FAILURES,8178,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['FAILURE'],['FAILURES']
Availability," `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip's evolver, mostly for Verner's method. . ##### progress_bar:; Added a progress bar passed on `tqdm`. `update` no longer need the iteration number. ##### parallel map:; - Added a `loky` based parallel map, hopefully will help windows users.; - Added a `reduce_func` input. Presently the map function is saving all results and the average, std, etc. are only computed at the end. There was no real advantage in saving only average values since all trajectories were in memory at the end of the map. But users expected lower memory usage when asking for only the results average.; - Added `timeout` options to the map, when passed, no error is raised but obtained results are returned. This allow to ask for 30s worth of trajectories instead of fixing a number. **Related issues or PRs**; Build on top of the #1407",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:3047,error,error,3047,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['error'],['error']
Availability," `dev.major` as well, so merging this up will be easy - the new automated systems in `setup.py` also mean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:1207,avail,available,1207,https://qutip.org,https://github.com/qutip/qutip/pull/1465,2,"['avail', 'down']","['available', 'download']"
Availability," altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_buil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66890,error,error,66890,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability," branch (using `pip install --pre qutip`). ### Code to Reproduce the Bug. ```shell; from qutip import * ; import numpy as np. s_00 = tensor(basis(2,0), basis(2,0)); P_00 = s_00 * s_00.dag(); e_ops = [ ; lambda t, state: (state.ptrace([0,1]) * P_00).tr() ; ]. tlist = np.linspace(0, 2*np.pi, 50); res = mesolve(tensor(identity(2), identity(2), identity(3)),; tensor(P_00, thermal_dm(3,0.1)), ; tlist, ; [],; e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-1-49ed87444849> in <module>; 9 ; 10 tlist = np.linspace(0, 2*np.pi, 50); ---> 11 res = mesolve(tensor(identity(2), identity(2), identity(3)),; 12 tensor(P_00, thermal_dm(3,0.1)),; 13 tlist,. 1 frames; /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 242 func(0., v, *ode_args) + v; 243 ; --> 244 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops). /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 517 for m in range(n_expt_op):; 518 if not isinstance(e_ops[m], Qobj) and callable(e_ops[m]):; --> 519 output.expect[m][t_idx] = e_ops[m](t, rho_t); 520 continue; 521 output.expect[m][t_idx] = expect_rho_vec(e_ops_data[m], r.y,. UnboundLocalError: local variable 'rho_t' referenced before assignment; ```. ### Expected Behaviour. no error. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.22.4; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.5.3; Python Version: 3.9.16; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.9/dist-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2118:1779,error,error,1779,https://qutip.org,https://github.com/qutip/qutip/issues/2118,1,['error'],['error']
Availability," build/src.linux-x86_64-3.5/qutip/__config__.py -> build/lib.linux-x86_64-3.5/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4773,error,error,4773,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability," customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well, all of them seem to fail with a similar issue. Whatever is exit status 1. ([This](http://stackoverflow.com/questions/35991403/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4901,error,error,4901,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability," ecosystem and creative community. As of October 2020, QuTiP’s large community comprises over 80 code contributors and thousands of users that have downloaded the software over 300’000 times. QuTiP enables an infrastructure of other scientific libraries for the investigation of specific quantum physics or quantum information processing features. . There are several ways through which members of the wider QuTiP community can receive information on QuTiP. This is through any of its official channels: the Google forum; the qutip.org/news webpage tracking the releases on Github, and opening [Issues](https://github.com/qutip/qutip/issues) on Github to file bug reports or discuss and proposed enhancements. Users are encouraged to contribute bug fixes or enhancements to the project with [Pull Requests](https://github.com/qutip/qutip/pulls). **<span style=""text-decoration:underline;"">Governance</span>**. This governance document outlines the governance of the QuTiP project, in order to better serve the community and provide robust liveliness and sustained maintenance for the project. Changes to this document need to be approved by ¾ of the Admin Team. The contents of this QuTiP Governance are shown on QuTiP’s website (qutip.org/goverance) and in its documentation. The changes are tracked at github.com/qutip/governance. We view this governance model as the formalization of what we are already doing, rather than a change in direction. This document is composed of information regarding the following:. **1. Code of Conduct**. **2. Admin Team: Tasks, Composition, Decisions, Communications.**. **3. Board: Tasks, Composition, Decisions, Communications.**. **4. Non-profit Support.**. ### 1. Code of Conduct. The Contributor Covenant [Code of Conduct](https://github.com/qutip/qutip/blob/master/CODE_OF_CONDUCT.md) applies to all of QuTiP activities. QuTiP project members and contributors agree to abide by it and to build an inclusive community where criticism is provided and taken cons",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:5858,robust,robust,5858,https://qutip.org,https://github.com/qutip/qutip/issues/1373,2,"['mainten', 'robust']","['maintenance', 'robust']"
Availability," fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""order"" in SovlerOptions(""sesolve"", method=""dop853""); False; ```; passing options not supported by the options will raise an error. Solver accept options as `dict` or `SolverOptions`. They do not refuse options for other solver.; Solver can support options changes: `my_solver.options['atol'] = 1e-10`, will reset the integrator to use the new value.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:2122,error,error,2122,https://qutip.org,https://github.com/qutip/qutip/pull/1947,1,['error'],['error']
Availability," has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2512,Error,Error,2512,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['Error'],['Error']
Availability," href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>; <blockquote>; <h2>3.1.3</h2>; <p>This is a fix release for the 3.1.x feature branch.</p>; <ul>; <li>Fix for <a href=""https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>; <li>Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1133,error,error,1133,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['error'],['error']
Availability," install qutip from pip with the latest python 3.9 fails. When we run the installations from a fresh conda env (conda 4.8.5) using pip as. ```; pip install qutip; ```; or with conda (using both). ```; conda install -c conda-forge qutip; conda install qutip; ```. we get different errors. The errors do not occur if we use python3.8 while creating the conda environment as. ```; conda create -n py38 python==3.8; ```. Looking at the error it seems there is specification that prohibits python 3.9. @jakelishman @Ericgig any idea about this?. # Steps to reproduce (with conda 4.8.5). ```; conda create -n qutip-test python=3.9; conda activate qutip-test; conda install -c conda-forge qutip; ```. ### Error; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - qutip -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.5,<3.6.0a0|3.4.*']. Your python: python=3.9. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. Note that strict channel priority may have removed packages required for satisfiability.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:1766,avail,available,1766,https://qutip.org,https://github.com/qutip/qutip/issues/1371,1,['avail'],['available']
Availability," me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates if the attribute was defined, even though it might be empty. Would it be better to replace; ```; hasattr(config,'openblas_info'); ```; in qutip/utilities.py with; ```; hasattr(config,'openblas_info') and config.openblas_info; ```; likewise for blas_mkl_info (not mkl_info) ?. This would be similar to numpy's own usage in `np.show_config()` (i.e. `np.__config__.py.show()`), which [uses](https://github.com/numpy/numpy/blob/3b7672ebd16982b661b8fbcabac80158662a8784/numpy/__config__.py.in#L116) `if not info_dict` to print ""NOT AVAILABLE"". ### Code to Reproduce the Bug. ```shell; import numpy; numpy.show_config(). import qutip; qutip.about(); ```. ### Code Output. ```shell; $ python3; Python 3.10.9 (main, Dec 7 2022, 13:47:07) [GCC 12.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.show_config(); ...; blas_mkl_info:; NOT AVAILABLE; ...; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; ...; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declaration of BLAS support should match the numpy declaration. If numpy says OpenBLAS is not available, then qutip should probably not say that it is available (even if it is installed). ### Your Environment. ```shell; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:4501,AVAIL,AVAILABLE,4501,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['AVAIL'],['AVAILABLE']
Availability," means that if the global option `auto_tidyup` is set to `True` (its default), then small values (< 1e-15) are truncated from the output matrices. This generally ends up with ""neater"" looking matrices when output; there are far fewer numbers like `1 + 4.516584e-17j` reported, when that's basically just `1`. There are, however, a couple of problems because of this. The first is speed; after every (very simple)_ operation, such as `matmul` or `add`, the tidier runs on the matrix. This typically has `O(nnz)` complexity for sparse matrices, and `O(n * n)` complexity for a dense square matrix with `n` rows. This adds very significant overhead on to simple operations. Second is numerical precision. By dropping small terms, we are effectively turning numerical imprecision into a ""feature"" as opposed to a bug. Because QuTiP 5 uses the new data-layer to do most of its operations, rather than constructing intermediary `Qobj` instances, many mathematical operations will not give the same result if the data layer is used directly compared to if `Qobj` is used at every step. For example, let's say we have three random `Qobj`:; ```python; a, b, c = [qutip.rand_herm(5) for _ in [None]*3]; ```; Now, in general,; ```python; a + b + c != qutip.Qobj(a.data + b.data + c.data); ```; because `a + b + c` will invoke the `tidyup` code twice, whereas the right-hand side will not invoke it at all. This means that despite the fact that `Qobj.__add__` uses the data-layer addition underneath, there will be numerical differences using the QuTiP default settings. I suspect these sort of problems are behind the recent test instabilities on `dev.major` with regards to tolerances. ----. My vote is for a removal of `auto_tidyup`, or at the very least, changing the default value of the option to `False`. We still want nice values for display, so perhaps we could consider having an option to produce a tidied up copy when calling `__repr__`, instead?. Interested to hear what others think about this too.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349:1741,toler,tolerances,1741,https://qutip.org,https://github.com/qutip/qutip/issues/1349,1,['toler'],['tolerances']
Availability," not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altive",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66175,error,error,66175,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability," of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/pytho",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:1094,Toler,Tolerances,1094,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['Toler'],['Tolerances']
Availability," qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_v_ncols=10000, __pyx_v_nrows=<optimised out>, __pyx_v_mat=...) at qutip/cy/spconvert.cpp:9472; #1 __pyx_pw_5qutip_2cy_9spconvert_7dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_args=<optimised out>, __pyx_kwds=<optimised out>) at qutip/cy/spconvert.cpp:9237; #2 0x000000000053a8eb in cfunction_call (func=<built-in function dense2D_to_fastcsr_fmode>, args=<optimised out>, kwargs=<optimised out>) at ../Objects/methodobject.c:543; #3 0x000000000051c24b in _PyObject_MakeTpCall (tstate=0x9561b0, callable=<built-in function dense2D_to_f",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1779,down,down,1779,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['down'],['down']
Availability," qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/data/dispatch.pyx; [11/31] Cythonizing qutip/core/data/matmul.pyx; [12/31] Cythonizing qutip/core/data/mul.pyx; [13/31] Cythonizing qutip/core/data/norm.pyx; [14/31] Cythonizing qutip/core/data/reshape.pyx; [15/31] Cythonizing qutip/core/data/tidyup.pyx; [16/31] Cythonizing qutip/piqs/_piqs.pyx; [17/31] Cythonizing qutip/core/cy/_element.pyx; [18/31] Cythonizing qutip/core/cy/qobjevo.pyx; [19/31] Cythonizing qutip/core/data/adjoint.pyx; [20/31] Cythonizing qutip/core/data/expect.pyx; [21/31] Cythonizing qutip/core/data/inner.pyx; [22/31] Cythonizing qutip/core/data/kron.pyx; [23/31] Cythonizing qutip/core/data/permute.pyx; [24/31] Cythonizing qutip/core/data/pow.pyx; [25/31] Cythonizing qutip/core/data/project.pyx; [26/31] Cythonizing qutip/core/data/properties.pyx; [27/31] Cythonizing qutip/core/data/ptrace.pyx; [28/31] Cythonizing qutip/core/data/trace.pyx; [29/31] Cythonizing qutip/solver/integrator/explicit_rk.pyx; [30/31] Cythonizing qutip/solver/sode/_sode.pyx; [31/31] Cythonizing qutip/solver/sode/ssystem.pyx; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Expected Behaviour. qutip installs successfully. ### Your Environment. ```shell; QuTiP Version: 4.7.3 (currently installed, trying to upgrade); Numpy Version: 1.24.4; Scipy Version: 1.10.1; Cython Version: 3.0.10; Matplotlib Version: 3.7.4; Python Version: 3.8.10; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); OS version: Ubuntu 20.04 LTS; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:10614,ERROR,ERROR,10614,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['ERROR'],['ERROR']
Availability," the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); chi_matrix = to_chi(choi_matrix); test_supe = to_super(chi_matrix); ; # Assert both that the result is close to expected, and has the right; # type.; #print(test_supe.dims); #print(superoperator.dims); > assert (test_supe - superoperator).norm(maxiter=1e6) < 1e-5; E assert 313.53468707624677 < 1e-05; E + where 313.53468707624677 = <bound method Qobj.norm of Quantum object: d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:1347,FAILURE,FAILURES,1347,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['FAILURE'],['FAILURES']
Availability," this as my initial state in `mesolve`. This would obtain density matrices for `sln.states` at each time step, however this seems not to be the case. Code:; ```; from bacon import bacon; import qutip as qt; import numpy as np. #inputs into bacon; spin_coeff = [; 4.8,; 9.5,; 4.82,; ]. coupling_coeff = [; 6.4,; 0,; 6.4; ]. H_input = bacon(; 3,; spin_coeff,; coupling_coeff; ). Hd = H_input.driver(); Hp = H_input.problem(). def init_superpsn(n):; '''; n - number of qubits; '''; state = np.ones((2**n), dtype = int)/np.sqrt(2**n); state = qt.Qobj(state); return state. #forming density matrix; initial_state = init_superpsn(3) * init_superpsn(3).dag(); #commenting out this line gives a different error; #initial_state = qt.Qobj(initial_state, dims = [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]]). grain = 100; anneal_time = 100. # initial coefficients; def d_coeff(t,params): ; return (1-t/params[""T""]); def p_coeff(t,params):; return (t/params[""T""]). Hs = [[Hd, d_coeff], [Hp, p_coeff]]; # ""writes down"" hamiltonian at time t ; H_dyn = qt.QobjEvo(Hs,args={""T"":anneal_time}) ; # solves SE for a particular hamiltonian that we ""wrote down""; s = np.linspace(0, anneal_time, grain); sln = qt.mesolve(H_dyn, initial_state, s) ; states0 = sln.states; ```. Bacon is a class I wrote that forms $H_d$ and $H_d$ Hamiltonians using tensor products. `Hp` is ; ```; Qobj data =; [[ 31.92 0. 0. 0. 0. 0. 0. 0. ]; [ 0. 9.48 0. 0. 0. 0. 0. 0. ]; [ 0. 0. -12.68 0. 0. 0. 0. 0. ]; [ 0. 0. 0. -9.52 0. 0. 0. 0. ]; [ 0. 0. 0. 0. 9.52 0. 0. 0. ]; [ 0. 0. 0. 0. 0. -12.92 0. 0. ]; [ 0. 0. 0. 0. 0. 0. -9.48 0. ]; [ 0. 0. 0. 0. 0. 0. 0. -6.32]]; ```. `Hd` is ; ```; Quantum object: dims = [[2, 2, 2], [2, 2, 2]], shape = (8, 8), type = oper, isherm = True; Qobj data =; [[ 0. -1. -1. 0. -1. 0. 0. 0.]; [-1. 0. 0. -1. 0. -1. 0. 0.]; [-1. 0. 0. -1. 0. 0. -1. 0.]; [ 0. -1. -1. 0. 0. 0. 0. -1.]; [-1. 0. 0. 0. 0. -1. -1. 0.]; [ 0. -1. 0. 0. -1. 0. 0. -1.]; [ 0. 0. -1. 0. -1. 0. 0. -1.]; [ 0. 0. 0. -1. 0. -1. -1. 0.]]; `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:1528,down,down,1528,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['down'],['down']
Availability," to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1403,error,error,1403,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['error'],['error']
Availability," to work:; ```python; import numpy as np; import qutip. random_matrix = np.random.random((2, 2)) + 1j * np.random.random((2, 2)); complex_number = np.random.random((1, 1)) + 1j * np.random.random((1, 1)). qobj = qutip.Qobj(random_matrix); qobj*complex_number; ``` ; I used numpy `ndarray` instead of a `tf.Tensor` or `tf.Variable` for simplicity and so that the example is reproducible. . Currently this example raises: ; ""TypeError: incompatible dimensions [[2], [2]] and [[1], [1]]""; as `__mul__(self, other)` defaults to `__matmul__(self, other)` when `other` is not an instance of `numbers.Number`. . If instead we do:; ```python; complex_number*qobj; ```; The error raised is:; ""TypeError: unsupported operand type(s) for *: 'numpy.ndarray' and 'Qobj'""; This error is different because `__rmul__` checks first for `other` being an instance of `numbers.Number` and if not, it raises `NotImplementedError`. It does not check whether `Qobj(other)` works. I would say this is undesired and that `__rmul__` should try first converting `other` into `Qobj` and not assume that other is already `Qobj`. . **Describe the solution you'd like**; I would like to suggest either:; 1) changing the behaviour of `matmul` dispatcher so that (1,1) shaped data is multiplied element wise by default. However this, although not terrible, it breaks conceptually what matmul is, as a (1,1) x (2,2) matrix multiplication can not happen. 2) Allow `mul` dispatcher to have as input a `Data` object. In this way we would raise an error when the `Data` for `mul` dispatcher is not of shape (1,1) and perform an elementwise multiplication when it is. I am not sure how difficult it is to code this. 3) Create `mul_elementwise` dispatcher to have as input two `Data` objects and perform elementwise multiplication. Another change that I would like to suggest is to add a check in `__rmul__` to see if `other` can be represented as a Qobj. . These two changes should probably go in a different PR. _Edit: added third option_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607:1637,error,error,1637,https://qutip.org,https://github.com/qutip/qutip/issues/1607,1,['error'],['error']
Availability," we'd like to keep doing what we're doing, with the support, since 2018, of @NumFOCUS, which supports scientific open source projects, and, from now on, the additional support of @unitaryfund, a non-profit that supports open-source projects in quantum technologies. . Below we reproduce a governance document that we will add to a new repository at [github.com/qutip/governance](https://github.com/qutip/governance). We are looking forward to help the growth of the user community, engage it with code contributions and bug reports, and make this awesome scientific open-source project even more sustainable. We will update all related information at [github.com/qutip/governance](https://github.com/qutip/governance), on QuTiP website's news section (http://qutip.org/news.html) and on the QuTiP google group (https://groups.google.com/forum/#!forum/qutip). . Below it is reported how we got there and the text we're adding to the governance. Before making any more official announcements, we thought it nice to ping the community watching this repository. . **Timeline regarding governance talks**:; * April 2018: QuTiP Joins NumFOCUS as an Affiliated Project (and since then participates in Google Summer of Code).; * September 2018: a slide presentation is shared among lead developers with ideas on QuTiP development and governance. ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * February 2019: The first QuTiP developers workshop is held in RIKEN, Wako, Japan, to discuss development and roadmap ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * 2019-2020: Seminars given in USA, Asia, and Europe about QuTiP and how the users community can get more engaged, collecting feedback on the package and project. ; * April-May 2020: Discussions for governance creation are revamped; * May-August 2020: First draft document created and circulated among core developers a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:2317,ping,ping,2317,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['ping'],['ping']
Availability,"""Sparse eigs Hermitian"" test failing, in NOMKL build only - Segmentation fault",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871:73,fault,fault,73,https://qutip.org,https://github.com/qutip/qutip/issues/871,1,['fault'],['fault']
Availability,"""malloc: Incorrect checksum"" error in qutip.testing qt.run()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/issues/1120,1,['error'],['error']
Availability,"## Changelog; The changelog file is present in `qutip/qutip-doc`. This means that for each new release, the maintainers need to go through the merged PRs and update the file accordingly. . I propose introducing a copy of the changelog file, which would simplify maintenance: each contributor could update their own contribution without opening a PR in the separate repository, which often does not happen. A message of a basic template with checklist could be prompted in the PR for itself. . ## PR template; To prompt these actions, just like for the changelog, [a template](https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors) with suggested checklist could be made in the PRs. . ## Repositories refactoring ; Actually, this is all part of a wider problem for which the `qutip-doc` does not get well updated in general. In Qutip 4.5.0 I added a lot of missing elements to `functions.rst` and `classes.rst` in the api-doc. Moreover, the User guide is seldom updated. Maybe, moving the `qutip-doc` repository in the main `qutip/qutip` repository could help in this regard.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1172:262,mainten,maintenance,262,https://qutip.org,https://github.com/qutip/qutip/issues/1172,1,['mainten'],['maintenance']
Availability,"### Bug Description. 4 tests produce errors (qutip installed with pip in a virtual environment on a Apple M2 pro chip). ### Code to Reproduce the Bug. ```shell; import qutip.testing; qutip.testing.run(); ```. ### Code Output. ```shell; ================================================================= ERRORS =================================================================; ____________________________________________ ERROR collecting qutip/tests/core/test_gates.py _____________________________________________; qutip/tests/core/test_gates.py:109: in <module>; class TestCliffordGroup:; qutip/tests/core/test_gates.py:115: in TestCliffordGroup; clifford = gates.qubit_clifford_group(); qutip/core/gates.py:815: in qubit_clifford_group; X = sigmax(); qutip/core/operators.py:387: in sigmax; return _SIGMAX.to(dtype, True); qutip/core/qobj.py:395: in to; _data.to(data_type, self._data),; qutip/core/data/convert.pyx:395: in qutip.core.data.convert._to.__call__; return self._convert[to_type, from_type](data); qutip/core/data/convert.pyx:101: in qutip.core.data.convert._converter.__call__; arg = self.functions[i](arg); qutip/core/data/dia.pyx:341: in qutip.core.data.dia.from_csr; cpdef Dia from_csr(CSR matrix):; qutip/core/data/dia.pyx:353: in qutip.core.data.dia.from_csr; return Dia((data, diags), shape=matrix.shape, copy=False); qutip/core/data/dia.pyx:134: in qutip.core.data.dia.Dia.__init__; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ___________________________________________ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:37,error,errors,37,https://qutip.org,https://github.com/qutip/qutip/issues/2472,3,"['ERROR', 'error']","['ERROR', 'ERRORS', 'errors']"
Availability,"### Bug Description. Adding (or subtracting) a number from a ket modifies the data of the ket even without an assignment. In the code below, I would expect that `a` is not modified when the expression `a+1` is run, but it is. That is to say, `a+1` has the same effect as `a+=1`. In contrast, the data of the QObj does not change when adding a number to an operator or when multiplying a ket by a number. ### Code to Reproduce the Bug. ```shell; from qutip import basis; a = basis(2); print(a); print(); print(a+1); print(); print(a); ```. ### Code Output. ```shell; Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]; ```. ### Expected Behaviour. First of all, adding a number to a ket is not a well-defined operation, so perhaps it should throw an error. However, I think that the value of `a+1` is not entirely unexpected, so it could be kept. The real issue is that the data of `a` is modified without the code ever explicitly reassigning `a`. This is definitely unexpected. I would expect the output to be:. `Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.23.5; Scipy Version: 1.10.0; Cython Version: 0.29.33; Matplotlib Version: 3.6.2; Python Version: 3.10.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2208:967,error,error,967,https://qutip.org,https://github.com/qutip/qutip/issues/2208,1,['error'],['error']
Availability,"### Bug Description. Call to `b.render()` errors after performing `b.add_vectors(vec)` where `b` is an instance of `qutip.Bloch()`. ### Code to Reproduce the Bug. ```shell; import qutip; b = qutip.Bloch(); b.make_sphere(); b.add_vectors([0,0,1]); b.render(); ```. ### Code Output. ```shell; /tmp/ipykernel_377526/3029128797.py in <module>; 2 b.make_sphere(); 3 b.add_vectors([0,0,1]); ----> 4 b.render(). ~/.conda/envs/myenv/lib/python3.8/site-packages/qutip/bloch.py in render(self); 503 self.plot_annotations(); 504 # Trigger an update of the Bloch sphere if it is already shown:; --> 505 self.fig.canvas.draw(); 506 ; 507 def plot_back(self):. ~/.local/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py in draw(self); 434 (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 435 else nullcontext()):; --> 436 self.figure.draw(self.renderer); 437 # A GUI class may be need to update a window using this draw, so; 438 # don't forget to call the superclass. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 71 @wraps(draw); 72 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 73 result = draw(artist, renderer, *args, **kwargs); 74 if renderer._rasterizing:; 75 renderer.stop_rasterizing(). ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/matplotlib/figure.py in draw(self, renderer); 2808 ; 2809 self.patch.draw(renderer); -> 2810 mimage._draw_list_compositing_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:42,error,errors,42,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['error'],['errors']
Availability,"### Bug Description. Construct a density matrix, via some array creation method (in this case numpy - haven't checked with others). Create a `rho0` for mesolve to use with the flat array while explicitly specifying the matrix dimensions in the `dims` parameter. Upon passing the density matrix to `mesolve` a segmentation fault occurs. A simple proof of concept is included below. `np.random.random` was used to fill the matrix in this case, but the issue was encountered using valid density matricies, and the issue seems to be unrelated to whether the matrix is valid or not as a density matrix. ### Code to Reproduce the Bug. ```shell; import qutip as qtip; import numpy as np. dim = 100 # Small dims don't work. I assume python has some buffer after the array; H = qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:322,fault,fault,322,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,"### Bug Description. ENR states and operators produce an error when used with v5 solvers (mesolve and mcsolve at least, sesolve seems ok). Key feature of ENR states is that dims and shape do not match, which can cause issues if dims and not shape are used in various operations. Chatted with @hodgestar and in this case we think we pinned it down to iadd in QobjEvo creating an identity matrix based on the dims and not the shape. https://github.com/qutip/qutip/blob/afd160bce00df522b9bcb0f856bc06d63296998d/qutip/core/cy/qobjevo.pyx#L459. though perhaps other issues could arise. ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; N = 4 # number of cavities; M = 2 # number of cavity states; dims = [M] * N; #The number of excitations in the chain; excitations = 1 # total number of excitations; initial_excitiations = 1 # initial number of excitations; #Construct ENR operators and states. d = enr_destroy(dims, excitations); psi0 = enr_fock(dims, excitations, [initial_excitiations if m == 1 else 0 for m in range(N)]). H = sum([dd.dag() * dd for dd in d]). # coupling between cavities; e_ops = [dd.dag() * dd for dd in d]; c_ops = [0.01 * dd for dd in d]; times = np.linspace(0, 250, 1000); result = mesolve(H, psi0, times, c_ops, e_ops). #More minimal failure can be found with running this instead of mesolve:; H=QobjEvo(H); QobjEvo(H+0); ```. ### Code Output. ```shell; line 24, in <module>; QobjEvo(H); File ""qutip/core/cy/qobjevo.pyx"", line 196, in qutip.core.cy.qobjevo.QobjEvo.__init__; File ""qutip/core/cy/qobjevo.pyx"", line 757, in genexpr; File ""/home/neill/anaconda3/envs/qutip5dev/lib/python3.11/site-packages/qutip-5.0.0.dev0+nogit-py3.11-linux-x86_64.egg/qutip/core/qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""/home/neill/anaconda3/envs/qutip5dev/lib/python3.11/site-packages/qutip-5.0.0.dev0+nogit-py3.11-linux-x86_64.egg/qutip/core/qobj.py"", line 408, in __add__; return Qobj(_data.add(self._data, other._data),",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2122:57,error,error,57,https://qutip.org,https://github.com/qutip/qutip/issues/2122,2,"['down', 'error']","['down', 'error']"
Availability,"### Bug Description. Following the advice from [this SE post](https://stackoverflow.com/questions/70240506/why-is-numpy-native-on-m1-max-greatly-slower-than-on-old-intel-i5), I have been trying to install QuTiP in a fresh environment along with the BLAS `accelerate` libraries specific to the Apple M1/M2 chips, in order to get a speedup by using a BLAS library designed for my laptop. In a blank environment, I first ran `conda install numpy ""libblas=*=*accelerate""`, followed by `conda install qutip` and got the following error message: . ```; The following specifications were found to be incompatible with your system:. - feature:/osx-arm64::__osx==13.4=0; - feature:|@/osx-arm64::__osx==13.4=0; - qutip -> numpy[version='>=1.22.4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:525,error,error,525,https://qutip.org,https://github.com/qutip/qutip/issues/2273,2,['error'],['error']
Availability,"### Bug Description. Hello, I just submitted this report but the system seems to have crashed. I am re-submitting it with a shorter title. If there is a duplicate, please disregard the first one. Thanks!. I have python scripts running qutip a couple of years ago. I never touched my qutip installation. Today I tried to run it again and got an error. It happened with the simple line ""_from qutip import *_"" (See error output in the output field below). So what changed? This happens even when I simply run the script from the command line, or run this command in the web-based Jupyter environment. I tried several solutions suggested on the web and by ChatGPT to uninstall/reinstall and roll back versions etc. Nothing worked. I got the exact same error each time.; The error happens as early as Import qutip. ### Code to Reproduce the Bug. ```shell; from qutip import *; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_5760/2092932745.py in <module>; ----> 1 from qutip import *. ~\Anaconda3\lib\site-packages\qutip\__init__.py in <module>; 31 #; 32 ; ---> 33 from .core import *; 34 from .solver import *; 35 from .solver import nonmarkov. ~\Anaconda3\lib\site-packages\qutip\core\__init__.py in <module>; 1 from .options import *; 2 from .coefficient import *; ----> 3 from .qobj import *; 4 from .cy.qobjevo import *; 5 from .expect import *. ~\Anaconda3\lib\site-packages\qutip\core\qobj.py in <module>; 1806 from qutip.core.superoperator import vector_to_operator, operator_to_vector; 1807 from qutip.core.tensor import tensor_swap, tensor; -> 1808 from qutip.core import metrics as mts. ~\Anaconda3\lib\site-packages\qutip\core\metrics.py in <module>; 17 from .operators import qeye, qeye_like; 18 from .states import ket2dm; ---> 19 from .semidefinite import dnorm_problem, dnorm_sparse_problem; 20 from . import data as _data; 21 . ~\Anaconda3\lib\s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:344,error,error,344,https://qutip.org,https://github.com/qutip/qutip/issues/2500,4,['error'],['error']
Availability,"### Bug Description. Hi,; I've been trying to find the propagator for a time-dependent hamiltonian (with time-dependent collapse operators as well), and have been getting an error saying that the t_list lengths do not match in Qutip 5.0. I also tried to run it without using the collapse operators, but I get the same issue. The same code runs in Qutip 4.7. My goal is to actually find two-time correlation functions of a time-dependent operator (following this paper:https://journals.aps.org/pra/abstract/10.1103/PhysRevA.102.023717). What I did do (and what has worked) is decompose the operator into time-independent parts and then use Qutip's correlation_2op_2t. This takes a really long time, since I need to do this for 8 different pairs of operators. I thought of instead finding the propagator and manually finding the correlation using it instead. . From the code below, you can see that mesolve works, but the propagator doesn't. . ### Code to Reproduce the Bug. ```shell; gamma_1d_1 = Gamma; gamma_1d_2 = Gamma; ## Input pulse; u = input_pulse; mod_u_2 = np.abs(u)**2; integral_u_2 = np.cumsum(mod_u_2) * t[1]; g_u = np.conjugate(u)/np.sqrt(1 - integral_u_2). ## Hamiltonian; emitter_dims = 3; mode_dims = 7; a = 1.1; psi_coherent = coherent(mode_dims, a); ## Mode dims is defined above; w0_1 = 2 * np.pi * 0; alpha_1 = 2 * np.pi * 0.3; w0_2 = 2 * np.pi * 0; alpha_2 = 2 * np.pi * 0.3; gamma_intrinsic = 2 * np.pi * 0.0. sig_1 = tensor(destroy(emitter_dims), qeye(emitter_dims), qeye(mode_dims)); sig_2 = tensor(qeye(emitter_dims), destroy(emitter_dims), qeye(mode_dims)); a_u = tensor(qeye(emitter_dims), qeye(emitter_dims), destroy(mode_dims)). H0 = (w0_1 * sig_1.dag() * sig_1 - alpha_1/2 * sig_1.dag() * sig_1.dag() * sig_1 * sig_1) + \; (w0_2 * sig_2.dag() * sig_2 - alpha_2/2 * sig_2.dag() * sig_2.dag() * sig_2 * sig_2) + \; 0.5j * np.sqrt(gamma_1d_1 * gamma_1d_2) * (sig_1.dag() * sig_2 - sig_2.dag() * sig_1). H_int1 = [0.5j * (a_u.dag() * (np.sqrt(gamma_1d_1) * sig_1 + np.sqrt(ga",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532:174,error,error,174,https://qutip.org,https://github.com/qutip/qutip/issues/2532,1,['error'],['error']
Availability,"### Bug Description. I am encountering a TypeError whenever I run any code for the second time. The behaviour is as expected when I run the code for the first time. I am encountering this error only on Linux. It is working fine on my Windows laptop. ### Code to Reproduce the Bug. ```shell; from qutip import *. import numpy as np. import matplotlib.pyplot as plt. qutip.about(); ```. ### Code Output. ```shell; File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 80, in jmat; A = 0.5 * (_jplus(j) + _jplus(j).getH()). TypeError: unsupported operand type(s) for +: 'fast_csr_matrix' and 'fast_csr_matrix'; ```. ### Expected Behaviour. QuTiP Version: 4.7.1; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.33; Matplotlib Version: 3.0.2; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/premkr/.local/lib/python3.7/site-packages/qutip. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.33; Matplotlib Version: 3.0.2; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/premkr/.local/lib/python3.7/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121:188,error,error,188,https://qutip.org,https://github.com/qutip/qutip/issues/2121,1,['error'],['error']
Availability,"### Bug Description. I have a stabilizer circuit with five qubits. A measurement is happening in one of them so we can end up with two channels for the rest of the qubits for each measurement outcome 0 and 1. For each channel I can directly extract the corresponding Kraus operators and the total set of them (including both channels) satisfies the resolution to the identity (which is expected). However, if I first extract the choi matrices for both channels and from them I then extract the Kraus operators through the function choi_to_kraus(), the resolution to the identity is not satisfied. I attach below two txt files, that contain the choi matrices in Qobj form; [choi_even.txt](https://github.com/qutip/qutip/files/13360165/choi_even.txt); [choi_odd.txt](https://github.com/qutip/qutip/files/13360166/choi_odd.txt). ### Code to Reproduce the Bug. ```shell; kraus_list_even = choi_to_kraus(choi_even); kraus_list_odd = choi_to_kraus(choi_odd); print(sum(dag(op) * op for op in kraus_list_even) + sum(dag(op) * op for op in kraus_list_odd)); ```. ### Code Output. ```shell; Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1.00505236 0. 0. 0. ]; [0. 1.00466051 0. 0. ]; [0. 0. 0.99533949 0. ]; [0. 0. 0. 0.99494764]]; ```. ### Expected Behaviour. Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 1. 0.]; [0. 0. 0. 1.]]. ### Your Environment. ```shell; QuTip Version: 4.7.3; Numpy Version: 1.24.4 ; Python Version: 3.9.13; ```. ### Additional Context. I've tried changing the tolerance in the function but the normalization is still wrong.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2263:1621,toler,tolerance,1621,https://qutip.org,https://github.com/qutip/qutip/issues/2263,1,['toler'],['tolerance']
Availability,"### Bug Description. I have been running into an issue similar to #806, #1605, and #1623 wherein usage of `mesolve` produces the attached error. It seems as if the majority of the users that reported that error had some suspect input parameters leading to slow convergence in integration; to confirm that this wasn't the case I tried running the [qubit dynamics QuTiP tutorial](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/qubit-dynamics.ipynb), which _still_ produced the same error. My system specs are as follows: `21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101 arm64`. My package installations can be found here: [requirements.txt](https://github.com/qutip/qutip/files/8725390/requirements.txt). These are also listed in the below categories. Any help would be appreciated. ### Code to Reproduce the Bug. ```shell; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; def qubit_integrate(epsilon, delta, g1, g2, solver):. H = epsilon / 2.0 * sigmaz() + delta / 2.0 * sigmax(); ; # collapse operators; c_ops = []. if g1 > 0.0:; c_ops.append(np.sqrt(g1) * sigmam()). if g2 > 0.0:; c_ops.append(np.sqrt(g2) * sigmaz()). e_ops = [sigmax(), sigmay(), sigmaz()]; ; if solver == ""me"":; output = mesolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""es"":; output = essolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""mc"":; ntraj = 250; output = mcsolve(H, psi0, tlist, ntraj, c_ops, [sigmax(), sigmay(), sigmaz()]) ; else:; raise ValueError(""unknown solver""); ; return output.expect[0], output.expect[1], output.expect[2]; epsilon = 0.0 * 2 * np.pi # cavity frequency; delta = 1.0 * 2 * np.pi # atom frequency; g2 = 0.15; g1 = 0.0. # intial state; psi0 = basis(2,0). tlist = np.linspace(0,5,200). # analytics; sx_analytic = np.zeros(shape(tlist)); sy_analytic = -np.sin(2*np.pi*tlist) * np.exp(-tlist * g2); sz_analytic = np.cos(2*np.pi*tlist) * np.exp(-tlist * g2); sx1, sy1, sz1 = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:138,error,error,138,https://qutip.org,https://github.com/qutip/qutip/issues/1896,3,['error'],['error']
Availability,"### Bug Description. I recently needed to reinstall packages on my conda environment. I needed to run some code written for QuTiP 4. This code worked without issue before. However, there is now an error when I try to multiply two operators. It seems that this has to do with the typing in fastsparse. Regardless, the code below is trivial, and it really should not cause an error. I'm a little bit at a loss as to how to fix it. Is this a version related problem?. ### Code to Reproduce the Bug. ```shell; import qutip as qt; a = qt.create(10); a_dag = a.dag(); n = a_dag * a; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 4; 2 a = qt.create(10); 3 a_dag = a.dag(); ----> 4 n = a_dag * a. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/qutip/qobj.py:497, in Qobj.__mul__(self, other); 495 if self.dims[1] == other.dims[0]:; 496 out = Qobj(); --> 497 out.data = self.data * other.data; 498 dims = [self.dims[0], other.dims[1]]; 499 out.dims = dims. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_matrix.py:44, in spmatrix.__mul__(self, other); 43 def __mul__(self, other):; ---> 44 return self._matmul_dispatch(other). File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_base.py:606, in _spbase._matmul_dispatch(self, other); 604 if other.ndim == 1:; 605 raise ValueError('Cannot yet multiply a 1d sparse array'); --> 606 return self._matmul_sparse(other); 608 # If it's a list or whatever, treat it like an array; 609 other_a = np.asanyarray(other); ...; ---> 43 raise TypeError('fast_csr_matrix allows only int32 indices.'); 44 if args[2].shape[0] and args[1].dtype != np.int32:; 45 raise TypeError('fast_csr_matrix allows only int32 indptr.'). TypeError: fast_csr_matrix allows only int32 indices.; ```. ### Expected Behaviour. The code should run without error. ### Your Environment. ```shell; QuTiP Version: 4.7.6; N",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468:197,error,error,197,https://qutip.org,https://github.com/qutip/qutip/issues/2468,2,['error'],['error']
Availability,"### Bug Description. I took a qutip script created 3 years ago (named ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb"") and ran it now (exact copied named ""Test.ipynb"") and got different results.; There is a caveat, whether relevant or not. When I ran the duplicated script (Test.ipynb) this time, I got errors keeping me from importing qutip. I submitted a ticket yesterday (#2500), which was kindly addressed, recommending that I uninstall cvxpy to remove conflict. I did that and was able to import qutip.; I then ran the duplicate script, but got a different result from 3 years ago. If you compare the output at block 23, you'll see it deviates significantly from the corresponding block in the old script. I have changed nothing in hte duplicated script, other than uninstalling cvxpy to make it run.; I then reinstalled cvxpy with upgrade and then qutip again. This time I can still import qutip, but with a warning. I ran the script with no problem, but still got the same deviated behavior from 3 years ago. [codes.zip](https://github.com/user-attachments/files/16367713/codes.zip). The 3-year-old script is included only to show the previous results. It is not meant to be run. I suspect if you run it with your likely different setup, you might get the same deviation as I did, or even yet another different deviation. I cannot recall the state of installation I had from 3 years ago. I believe I did it through conda. I just realized that I cannot include qutip scripts with this report. I included a zipped folder containing these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:341,error,errors,341,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['error'],['errors']
Availability,"### Bug Description. I try to install Qutip on my macOS (m1 pro, Ventura 13.0.1). I typed `pip3 install qutip` in the terminal, and get the following error message:. ``` .... copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-universal2-cpython-39/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.cqobjevo' extension; creating build/temp.macosx-10.9-universal2-cpython-39; creating build/temp.macosx-10.9-universal2-cpython-39/qutip; creating build/temp.macosx-10.9-universal2-cpython-39/qutip/cy; clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot/System/Library/Frameworks/System.framework/PrivateHeaders -iwithsysroot/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I/private/var/folders/8s/46j41bsj6rq3xkzplbcmjm2h0000gn/T/pip-build-env-do4siooe/overlay/lib/python3.9/site-packages/numpy/core/include -I/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -c qutip/cy/cqobjevo.cpp -o build/temp.macosx-10.9-universal2-cpython-39/qutip/cy/cqobjevo.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; qutip/cy/cqobjevo.cpp:38:10: fatal error: 'Python.h' file not found; #include ""Python.h""; ^~~~~~~~~~; 1 error generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects; ```. ### Code to Reproduce the Bug. ```shell; pip3 install qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. It should be installed successfully. ### Your Environment. ```shell; pip version: 22.3.1; ```. ### Additional Context. I tried `pip3 install pyproject` but it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:150,error,error,150,https://qutip.org,https://github.com/qutip/qutip/issues/2027,1,['error'],['error']
Availability,"### Bug Description. I try to use `mesolve` to do a system dynamics with a system static Hamiltonian `H_0` under a driving term governed by a cosine shape waveform `cos_waveform`. . We try to method to construct the dynamical hamiltonain `H_d` in two ways: one is `H_d = [H_0, [a_dag + a, cos_waveform]]` and `H_d = [H_0, [a_dag + a, cos_waveform_array]]`, corresponding to `[ops, func]` and `[ops, ndarray]` cases, respectively. You can see from the code I provided, the cos_waveform_array is given by `drive_pulse_y = np.array([cos_waveform(t, None) for t in tlist], dtype=np.complex128)`. We expect the simulation result of the system should be the same under these two cases. We plot the diagonal matrix elements of the density matrix to see the dynamics of the system. But the result are different. I try to find the issue probably happens due to function `mesolve._qobjevo_set` or the different treatments in `QobjEvo.ops` as it contains a string `""func""` and `""ndarray""` in our cases, and the `""ndarray""` case has some code errors. ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; import matplotlib.pyplot as plt. # Define the pulse. t_rising = 15 # ns; t_g = t_rising + 150; phase = 0; freq = 6.3; ampli = -0.2 * 2*np.pi; t_delay = 0. def cos_waveform(t, args):; t_relative = t - t_delay; if t_relative < 0: ; return 0; if 0 <= t_relative <= t_rising:; return ampli/2 * np.cos(freq * np.pi * 2 * t_relative + phase)* (1 - np.cos(np.pi * t_relative / t_rising)) ; if t_rising < t_relative < t_g - t_rising:; return ampli * np.cos(freq * np.pi * 2 * t_relative); if t_g - t_rising <= t_relative <= t_g:; return ampli/2 * np.cos(freq * np.pi * 2 * t_relative + phase)* (1 - np.cos(np.pi * ( t_relative - t_g + 2 * t_rising)/t_rising)); if t_g < t_relative: ; return 0. # Setup a single transmon; N = 4; w = 6.3; alpha = -0.3. a = destroy(N); a_dag = a.dag(). H_0 = w* a_dag * a + alpha/2 * a_dag * a_dag * a * a; H_0 *= 2 * np.pi; state_0 = H_0.eigenstates()[1][0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2253:1031,error,errors,1031,https://qutip.org,https://github.com/qutip/qutip/issues/2253,1,['error'],['errors']
Availability,"### Bug Description. I updated some old code from v4.7 to v5 this week and found some examples of brmesolve which were substantially slower... going from 30 seconds to 15+ minutes. Fiddling around a little I narrowed it down to at least one issue (though there may be others). This is particularly tricky because I also have examples which are substantially faster in v5. The one issue I found was that bloch_redfield_tensor() always returns a dense bloch-redfield tensor, even if you set br_type to sparse. It does return a sparse one if fock_basis=false, which points at the issue being; https://github.com/qutip/qutip/blob/0b4260e821cf4d095df6fa02ea5a71bc0655516c/qutip/core/_brtensor.pyx#L281; so this call to from_eigbasis() in _brtools always returning a dense object; https://github.com/qutip/qutip/blob/0b4260e821cf4d095df6fa02ea5a71bc0655516c/qutip/core/_brtools.pyx#L290. if i manually convert the tensor back to sparse again, and use it, it speeds up these hard cases by a factor of 5 or 6. Not sure if it resolves my original 30seconds -> 15 minutes problem completely, will check a bit more. In some sense this relates to the old issue of how broadly default_dtype should be applied, but here it seems more specific in that one requests a sparse tensor and gets a dense one. ### Code to Reproduce the Bug. ```shell; R = bloch_redfield_tensor(H, [[Q, Lor]], fock_basis=True, sparse_eigensolver=True, br_dtype='sparse'); print(R.dtype); ```. ### Code Output. ```shell; <class 'qutip.core.data.dense.Dense'>; ```. ### Expected Behaviour. Sparse tensor and fast brmesolve!. ### Your Environment. ```shell; QuTiP Version: 5.1.0.dev0+8efc188; Numpy Version: 2.0.1; Scipy Version: 1.14.0; Cython Version: 3.0.11; Matplotlib Version: 3.9.1.post1; Python Version: 3.10.12; Number of CPUs: 28; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530:220,down,down,220,https://qutip.org,https://github.com/qutip/qutip/issues/2530,1,['down'],['down']
Availability,"### Bug Description. I wanted to use the new `step` method for the stochastic solver class `SMESolver`, but it always breaks down. I also tried it for `SSESolver`, but the same error message occurs. I use qutip 5.0.3. I took the example from the documentation as a minimal working example. I also tried `step` for the `MESolver` class and there it works. I think it should also not only output the state but also the measurement output if possible. As a side note, I also wanted to know if there is a particular reason why the argument for the initial state in the `start` method is called `state0` for `MESolver`, and `state` for `SMESolver`. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import destroy, coherent, SMESolver, expect. # parameters; DIM = 20 # Hilbert space dimension; DELTA = 5 * 2 * np.pi # cavity detuning; KAPPA = 2 # cavity decay rate; INTENSITY = 4 # intensity of initial state; NUMBER_OF_TRAJECTORIES = 500. # operators; a = destroy(DIM); x = a + a.dag(); H = DELTA * a.dag() * a. rho_0 = coherent(DIM, np.sqrt(INTENSITY)); times = np.arange(0, 1, 0.0025). stoc_solver = SMESolver(; H,; c_ops=[],; sc_ops=[np.sqrt(KAPPA) * a],; heterodyne=False,; options={""dt"": 0.00125, ""store_measurement"": True,}; ); data = [4.]; stoc_solver.start(state=rho_0, t0=times[0]); for t in times[1:]:; psi_t = stoc_solver.step(t); data.append(expect(x, psi_t)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[4], line 29; 27 stoc_solver.start(state=rho_0, t0=times[0]); 28 for t in times[1:]:; ---> 29 psi_t = stoc_solver.step(t); 30 data.append(expect(x, psi_t)). File /user/anaconda/envs/myenv/lib/python3.9/site-packages/qutip/solver/multitraj.py:129, in MultiTrajSolver.step(self, t, args, copy); 127 raise RuntimeError(""The `start` method must called first.""); 128 self._argument(args); --> 129 _, state = self._integrator.integrate(t, copy=False); 13",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2491:125,down,down,125,https://qutip.org,https://github.com/qutip/qutip/issues/2491,2,"['down', 'error']","['down', 'error']"
Availability,"### Bug Description. I'm trying to follow [this tutorial](https://nbviewer.ipython.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb) with the current version of qutip, but ran into a bug in `mesolve`. If I do `from qutip import *` at the start of the notebook, the following error occurs:; ```; NameError Traceback (most recent call last); <ipython-input-9-d038ca745718> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if expt_callback:; 361 # use callback method; --> 362 output.expect.append(e_ops(t, Qobj(cdata, dims=dims))); ...; ---> 11 H = qt.qobj_list_evaluate(h_t, tau, args); 12 ; 13 # find the M lowest eigenvalues of the system. NameError: name 'qt' is not defined; ```. If I do `import qutip as qt`, a different error occurs:; ```; AttributeError Traceback (most recent call last); <ipython-input-8-ea74e5ab1d35> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 qt.mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:320,error,error,320,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['error'],['error']
Availability,"### Bug Description. I'm unable to run a time-dependent Hamiltonian, or even compile one with a string coefficient. . I tried to copy the example code on the website ; [](https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html); as well as write a simple script (below), but both fail. The output is a traceback which ends with the following errors and exceptions:; ```; **ImportError: Building module cqobjevo_compiled_coeff_8478972439442 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_8478972439442.pyx**; ```. I'd appreciate some help, as my code requires the string input to run faster, with the speed-up offered by Cython. It is quite slow with the function-based input. . ### Code to Reproduce the Bug. ```shell; import qutip as qp; import numpy as np; import matplotlib.pyplot as plt. excited = qp.basis(2, 1); ground = qp.basis(2, 0). H0 = qp.sigmaz(); H1 = qp.sigmax() # time-dependent term. H = [H0,[H1, 'A * exp(-(t / sigma) ** 2)']]. t = np.linspace(-1, 1, 200) # Define time vector; args = {'A': 6, 'sigma': 0.145}; output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; DistutilsPlatformError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 214 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 215 inplace=build_inplace, language_level=language_level); 216 mod = imp.load_dynamic(name, so_path). ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 190 inplace=inplace,; --> 191 reload_support=pyxargs.reload_support); 192 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. ~\Anaco",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:350,error,errors,350,https://qutip.org,https://github.com/qutip/qutip/issues/1914,2,['error'],['errors']
Availability,"### Bug Description. In a fresh conda environment with python 3.10, qutip installation from pip fails. It seems that this was due to people jumping to Python 3.10 too early https://github.com/numpy/numpy/issues/20039. Since October this issue is resolved and we can install Numpy from pip with Python 3.10. However, trying to install qutip with Python 3.10 still leads to this error. Even if I had Numpy (numpy==1.21.4) already installed, qutip tries to build Numpy again. I cannot install numpy 1.20.0 with Python 3.10 and so downgrading my Python to 3.9 is the only solution for now. @hodgestar @jakelishman We should try to find a fix for this ASAP . Any thoughts on this?. ### Code to Reproduce the Bug. ```shell; conda create -n py310 python=3.10; conda activate py310; pip install qutip; ```. ### Code Output. ```shell; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ```; ```. ### Expected Behaviour. Qutip should have got installed after installing the dependencies. ### Your Environment. ```shell; N/A.; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732:377,error,error,377,https://qutip.org,https://github.com/qutip/qutip/issues/1732,4,"['ERROR', 'down', 'error']","['ERROR', 'downgrading', 'error']"
Availability,"### Bug Description. In a fresh virtual environment, doing `pip install qutip` will cause the error. ```; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:94,error,error,94,https://qutip.org,https://github.com/qutip/qutip/issues/2412,3,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"### Bug Description. In the current documentation I cannot find anywhere how the underdamped spectral density for the HEOM module (i.e. `UnderDampedBath`) is defined. While for the `gamma` and `w0` parameters this is quite straightforward, different authors use very different conventions in the prefactors multiplying the spectral density (factors of two, pi, gamma, w0, etc.). This makes it very hard to understand how the `lam` parameter is exactly defined. Having a proper understanding of the `lam` parameter is quite essential to properly compare with the results obtained via other methods. I think it would be quite useful to explicitly write down the mathematical formula of the spectral density being used in the documentation. In the mean time, I would also appreciate if anyone with knowledge of the proper definition would be kind enough to share it here. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. I would expect the documentation to make it clear what each parameter controls in the spectral density definition. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.23.1; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.5; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/fc/bin/venvs/qutip/lib/python3.10/site-packages/q",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1959:651,down,down,651,https://qutip.org,https://github.com/qutip/qutip/issues/1959,1,['down'],['down']
Availability,"### Bug Description. Installing `qutip` with `pip` on Python 3.11 fails at the ""Getting the requirements to build the wheel"" stage. Potentially related to [these changes](https://github.com/pypa/packaging/pull/407) in `packaging`, introduced in the latest update to `22.0`. ### Code to Reproduce the Bug. ```shell; pip install qutip --no-cache-dir; ```. ### Code Output. ```shell; Collecting qutip; Downloading qutip-4.7.0.tar.gz (3.6 MB); ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 18.2 MB/s eta 0:00:00; Installing build dependencies ... done; Getting requirements to build wheel ... error; error: subprocess-exited-with-error; ; × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> [20 lines of output]; Traceback (most recent call last):; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 351, in <module>; main(); File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 333, in main; json_out['return_val'] = hook(**hook_input['kwargs']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 118, in get_requires_for_build_wheel; return hook(config_settings); ^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:399,Down,Downloading,399,https://qutip.org,https://github.com/qutip/qutip/issues/2036,4,"['Down', 'error']","['Downloading', 'error']"
Availability,"### Bug Description. Installing qutip with `pip install qutip` fails on a MacBook Pro with M1 Pro running macOS 12.0.1, due to the build dependency `numpy<1.20` failing to build. This happens both with miniconda python 3.9.6 and miniforge python 3.9.7. Same happens if I clone the master branch and build. If I edit `pyproject.toml` and `setup.cfg` to remove the `<1.20` in Numpy, then qutip builds correctly (then I get same problem as Issue #1606 when importing, but that's another story). ### Code to Reproduce the Bug. ```shell; conda create -n qutip_test; pip install qutip; ```. ### Code Output. ```shell; Collecting qutip; Using cached qutip-4.6.2.tar.gz (3.4 MB); Installing build dependencies ... error; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:706,error,error,706,https://qutip.org,https://github.com/qutip/qutip/issues/1740,3,"['ERROR', 'error']","['ERROR', 'error', 'errored']"
Availability,"### Bug Description. It seems that in new matplotlib version they separated classes `Axes` and `Axes3d`, so some plotting functions that have 3d aspects don't work as expected anymore. See example in the code below. ### Code to Reproduce the Bug. ```shell; from qutip import qpt_plot_combined; qpt_plot_combined(np.eye(4), [[""I"", ""X"", ""Y"", ""Z""]]); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); Cell In[8], line 2; 1 from qutip import qpt_plot_combined; ----> 2 qpt_plot_combined(np.eye(4), [[""I"", ""X"", ""Y"", ""Z""]]). File ~\AppData\Local\pypoetry\Cache\virtualenvs\photonic-component-simulator-biULA8HA-py3.9\lib\site-packages\qutip\tomography.py:143, in qpt_plot_combined(chi, lbls_list, title, fig, ax, figsize, threshold); 140 if not title:; 141 title = r""$\chi$""; --> 143 matrix_histogram_complex(chi, xlabels, xlabels, title=title, ax=ax,; 144 threshold=threshold); 146 return fig, ax. File ~\AppData\Local\pypoetry\Cache\virtualenvs\photonic-component-simulator-biULA8HA-py3.9\lib\site-packages\qutip\visualization.py:820, in matrix_histogram_complex(M, xlabels, ylabels, title, limits, phase_limits, colorbar, fig, ax, threshold); 818 # x axis; 819 xtics = -0.5 + np.arange(M.shape[0]); --> 820 ax.axes.w_xaxis.set_major_locator(plt.FixedLocator(xtics)); 821 if xlabels:; 822 nxlabels = len(xlabels). AttributeError: 'Axes3D' object has no attribute 'w_xaxis'; ```. ### Expected Behaviour. There should be a plot and not an error. ### Your Environment. ```shell; QuTiP vesion: '4.7.3'; matplotlib version: '3.8.0'; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2233:1542,error,error,1542,https://qutip.org,https://github.com/qutip/qutip/issues/2233,1,['error'],['error']
Availability,"### Bug Description. Might just be me mis-using the new 5.X branch of Qutip. I get a memory error when upgrading to the new branch. It appears to fail when performing self._to_dm(state) for each state. My states are vectors of length 800 - so it runs out of memory. Is it possible to request the solver only stores the wavefunction at each timestep? I want the wavefunction for each trajectory for each timestep. Alternatively one could introduce a new ""proj"" data storage to make this more efficient. ### Code to Reproduce the Bug. ```shell; result = qutip.ssesolve(; hamiltonian_qobj,; initial_state_qobj,; times.times,; sc_ops=sc_ops,; e_ops=[],; options={; ""method"": ""euler"",; ""progress_bar"": ""enhanced"",; ""store_states"": True,; ""keep_runs_results"": True,; ""improved_sampling"": False,; ""dt"": times.delta_t / times.fundamental_n,; },; ntraj=n_trajectories, # cspell:disable-line; ); ```. ### Code Output. ```shell; File ""..."", line 270, in solve_stochastic_schrodinger_equation; result = qutip.ssesolve(; ^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\stochastic.py"", line 461, in ssesolve; return sol.run(; ^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\multitraj.py"", line 198, in run; map_func(; File ""...\.venv\Lib\site-packages\qutip\solver\parallel.py"", line 122, in serial_map; remaining_ntraj = reduce_func(result); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 645, in add ; op(trajectory); File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 519, in _reduce_states; accu + self._to_dm(state); ~~~~~^~~~~~~~~~~~~~~~~~~~; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 408, in __add__ ; return Qobj(_data.add(self._data, other._data),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""qutip\\core\\data\\dispatch.pyx"", line 392, in qutip.core.data.dispatch.Dispatcher.__call__; File """,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/2299,1,['error'],['error']
Availability,### Bug Description. My CI builds are suddenly erroring out:. ```python; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/my_code.py:14: in <module>; import qutip; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/qutip/__init__.py:64: in <module>; import qutip.cy.pyxbuilder as _pyxbuilder; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/qutip/cy/pyxbuilder.py:17: in <module>; old_get_distutils_extension = pyximport.pyximport.get_distutils_extension; E AttributeError: module 'pyximport.pyximport' has no attribute 'get_distutils_extension'; ```. ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. no exception. ### Your Environment. ```shell; I'm using `qutip-4.7.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl`.; ```. ### Additional Context. This exact same environment was working in yesterday's CI build. We speculate that `Cython`'s major release [yesterday](https://pypi.org/project/Cython/#history) is related.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2198:47,error,erroring,47,https://qutip.org,https://github.com/qutip/qutip/issues/2198,1,['error'],['erroring']
Availability,"### Bug Description. Qutip is not being imported well. Something with pyximport is not working. . ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; >>> import qutip as qt ; Traceback (most recent call last): ; File ""<stdin>"", line 1, in <module> ; File ""/home/chensel/miniconda3/envs/roccqet-cqed-models/lib/python3.10/site-packages/qutip/__init__.py"", line 64, in <module> ; import qutip.cy.pyxbuilder as _pyxbuilder ; File ""/home/chensel/miniconda3/envs/roccqet-cqed-models/lib/python3.10/site-packages/qutip/cy/pyxbuilder.py"", line 17, in <module>; old_get_distutils_extension = pyximport.pyximport.get_distutils_extension; AttributeError: module 'pyximport.pyximport' has no attribute 'get_distutils_extension'; ```. ### Expected Behaviour. A clean import . ### Your Environment. ```shell; Can't check (importing not successful); ```. ### Additional Context. Sometimes there is another import error with an atribute called 'format'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2206:934,error,error,934,https://qutip.org,https://github.com/qutip/qutip/issues/2206,1,['error'],['error']
Availability,"### Bug Description. Qutip's HTMLProgressBar seems not to function any more in jupyter notebooks. Perhaps since ""jupyterlab"" was introduced. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; qt.mcsolve(qt.sigmax(), state=qt.basis(2, 0), tlist=np.linspace(0, 5, 100), c_ops=[qt.sigmam()], ntraj=100, options={'progress_bar': 'html'}); ```. ### Code Output. ```shell; [[ empty progress bar ]]; Javascript Error: $ is not defined; Javascript Error: $ is not defined; Javascript Error: $ is not defined; Javascript Error: $ is not defined; ...; ```. ### Expected Behaviour. There should be no error and the progress bar should display the progress. ### Your Environment. ```shell; ""About Jupyter Notebook"" shows version 7.2.1. QuTiP Version: 5.1.0.dev0+487e4ec; Numpy Version: 2.0.0; Scipy Version: 1.13.1; Cython Version: 3.0.10; Matplotlib Version: 3.8.4; Python Version: 3.12.4; Number of CPUs: 20; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. The weird thing is that `$()` actually is available, as one can see in the developer console. Relevant stackoverflow discussions:; * https://stackoverflow.com/questions/72316844/jupyter-notebook-jupyternotify-javascript-error-is-not-defined; * https://stackoverflow.com/questions/22004386/notify-when-execution-command-is-completed (in comments to top answer). Thanks to Hussein Shiri for pointing this bug out on the mailing list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2475:434,Error,Error,434,https://qutip.org,https://github.com/qutip/qutip/issues/2475,7,"['Error', 'avail', 'error']","['Error', 'available', 'error', 'error-is-not-defined']"
Availability,"### Bug Description. Running `import qutip` eagerly imports `scipy.fft` via `qutip.correlation`, causing all native dependencies of `scipy.fft`'s fftpack-based implementation to load. In particular when using SciPy 1.8.1 on Linux, fftpack requires `GLIBCXX_3.4.30` but contains a private copy of `GLIBCXX_3.4.29` such that the import fails unless another Python package provides its own implementation of `GLIBCXX_3.4.30` (typically, PyZMQ via `jupyter-client`). This in turn can cause `import qutip` to fail even when not using features backed by fftpack (e.g.: as happened in the case of https://github.com/microsoft/iqsharp/pull/676). ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; # Example from build logs for https://dev.azure.com/ms-quantum-public/Microsoft%20Quantum%20(public)/_build/results?buildId=42116&view=logs&j=1c33f9fa-7159-5ed6-d128-ab2ed6cefd14&t=74d456a9-739b-5d92-ed57-026d8fef9427, ; $PREFIX/lib/python3.8/site-packages/zmq/backend/cython/../../../../.././libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by $PREFIX/lib/python3.8/site-packages/scipy/fft/_pocketfft/pypocketfft.cpython-38-x86_64-linux-gnu.so); ```. ### Expected Behaviour. `import qutip` should not cause native dependencies of `scipy.fft` to be imported eagerly. ### Your Environment. ```shell; (omitted --- `qutip.about()` failed to execute due to error running `import qutip`); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1915:1390,error,error,1390,https://qutip.org,https://github.com/qutip/qutip/issues/1915,1,['error'],['error']
Availability,"### Bug Description. SciPy 1.11 raises the following two deprecation warnings during qutip-4.7.X test runs:; ````; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; =========== 2 failed, 3250 passed, 12 skipped in 1792.40s (0:29:52) ============; ```. ### Code to Reproduce the Bug. ```shell; pytest -W error qutip/tests/test_sp_eigs.py; ```. ### Code Output. ```shell; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; ```. ### Expected Behaviour. Tests do not fail. ### Your Environment. ```shell; QuTiP Version: 4.7.1; SciPy Version: 1.11; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2093:663,error,error,663,https://qutip.org,https://github.com/qutip/qutip/issues/2093,1,['error'],['error']
Availability,### Bug Description. Some files are missing `__all__` and leaking variables. ### Code to Reproduce the Bug. ```shell; import qutip.measurement; qt.measurement.np; ```. ### Code Output. ```shell; <module 'numpy' from 'miniconda3/lib/python3.10/site-packages/numpy/__init__.py'>; ```. ### Expected Behaviour. Only user facing qutip functions should be available. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0; ```. ### Additional Context. `__all__` is missing in: ; - `qutip/measurements.py`; - `qutip/solve/piqs.py`; - `qutip/core/semidefinite.py`; which contain users facing functions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2101:350,avail,available,350,https://qutip.org,https://github.com/qutip/qutip/issues/2101,1,['avail'],['available']
Availability,"### Bug Description. Some tests of qutip.testing.run() fail on master on a MacBook Pro (2021) with M1. Qutip was installed on a miniforge python 3.9.9 distribution. ### Code to Reproduce the Bug. ```shell; import qutip.testing; qutip.testing.run(); ```. ### Code Output. ```shell; ============================================================================================= FAILURES ==============================================================================================; _________________________________________________________________________________________ test_dqd_current __________________________________________________________________________________________. def test_dqd_current():; ""Counting statistics: current and current noise in a DQD model""; ; G = 0; L = 1; R = 2; ; sz = qutip.projection(3, L, L) - qutip.projection(3, R, R); sx = qutip.projection(3, L, R) + qutip.projection(3, R, L); sR = qutip.projection(3, G, R); sL = qutip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current[n], noise[n] = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops); ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:375,FAILURE,FAILURES,375,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['FAILURE'],['FAILURES']
Availability,"### Bug Description. String form QobjEvos cannot be created.; The error is due to a missing file: `intdtype.h` is missing from `/home/xavier/anaconda3/envs/qutip5-bench/lib/python3.10/site-packages/qutip/core/data/src/`. ### Code to Reproduce the Bug. ```shell; import qutip ; n = qutip.num(5); string_form= qutip.QobjEvo([n, 'cos(t)']); ```. ### Code Output. ```shell; [1/1] Cythonizing /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.pyx; running build_ext; building 'qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab' extension; gcc -pthread -B /home/xavier/anaconda3/envs/qutip5-bench/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/xavier/anaconda3/envs/qutip5-bench/include -fPIC -O2 -isystem /home/xavier/anaconda3/envs/qutip5-bench/include -fPIC -I/home/xavier/anaconda3/envs/qutip5-bench/lib/python3.10/site-packages/numpy/core/include -I/home/xavier/anaconda3/envs/qutip5-bench/include/python3.10 -c /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.cpp -o build/temp.linux-x86_64-cpython-310/home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.o -w -O3 -funroll-loops; /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.cpp:749:10: fatal error: src/intdtype.h: No such file or directory; 749 | #include ""src/intdtype.h""; | ^~~~~~~~~~~~~~~~; compilation terminated.; error: command '/usr/bin/gcc' failed with exit code 1; ```. ### Expected Behaviour. I was expecting a string form QobjEvo object to be created. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+0a19bf9; Numpy Version: 1.22.4; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.5; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. Qutip was installed using `pip install git+https://github.com/qutip/qutip@dev.major` in a conda environment.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1960:66,error,error,66,https://qutip.org,https://github.com/qutip/qutip/issues/1960,3,['error'],['error']
Availability,"### Bug Description. The ReadTheDocs build fails with:; ```; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```; See https://readthedocs.org/projects/qutip/builds/23361676/ for the full build log (not sure if this is publicly visible -- if not, I can add QuTiP admins as maintainers on readthedocs.org if they give me their username). The QuTiP ReadTheDocs configuration is at: https://github.com/qutip/qutip/blob/master/.readthedocs.yaml. Probably this can be fixed by adding an appropriate dependency to https://github.com/qutip/qutip/blob/master/doc/rtd-environment.yml. ### Code to Reproduce the Bug. ```shell; Attempt to build the documentation on ReadTheDocs.; ```. ### Code Output. ```shell; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```. ### Expected Behaviour. ReadTheDocs builds successfully. ### Your Environment. ```shell; QuTiP version: master branch; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2317:568,error,error,568,https://qutip.org,https://github.com/qutip/qutip/issues/2317,2,['error'],['error']
Availability,"### Bug Description. The `groundstate()` function seems to have a bug in the current version of `dev.major`. ; When calling `groundstate()` on any Qobj, an error occurs. . ### Code to Reproduce the Bug. ```shell; from qutip import destroy; H = destroy(2).dag() * destroy(2); H.groundstate(); ```. ### Code Output. ```shell; File ""/home/chris/git/qutip-dev-major/qutip/core/qobj.py"", line 1632, in groundstate; grndvec = Qobj(evecs[0], dims=new_dims); TypeError: 'qutip.core.data.dense.Dense' object is not subscriptable; ```. ### Expected Behaviour. The groundstate of H should be returned. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+98a8e7d; Numpy Version: 1.22.4; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1937:156,error,error,156,https://qutip.org,https://github.com/qutip/qutip/issues/1937,1,['error'],['error']
Availability,"### Bug Description. The `plot_spin_distribution_2d` function allows to project a spin distribution function from the surface of a unit sphere to the unit disk. QuTiP uses `matplotlib.pyplot.pcolor` to perform this task and calculates a meshgrid `X, Y` to plot the function to. Due to some changes in `matplotlib` the current implementation is deprecated and will return errors in a few minor releases. We could quickly fix this by passing `shading='auto'` to the call of `ax.pcolor()` in the [visualization.py](https://github.com/qutip/qutip/blob/82c6704c6fea8a2801492865ad1ef7c1d73c8840/qutip/visualization.py#L1313). However, this raises another UserWarning that the center points are not monotonically sorted. The cleanest way to fix this bug would be to pass the edges of the quadrilaterals to `pcolor()`. But we can not calculate them exactly from the given points in `theta, phi`. Hence, we would need to redesign the interface to this function and to related functions like `plot_spin_distribution_3d` and `spin_q_function`. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. j = 5; psi = qt.spin_coherent(j, np.random.rand() * np.pi, np.random.rand() * 2 * np.pi); rho = qt.ket2dm(psi). theta = np.linspace(0, np.pi, 50); phi = np.linspace(0, 2 * np.pi, 50). Q, THETA, PHI = qt.spin_q_function(psi, theta, phi); fig, ax = qt.plot_spin_distribution_2d(Q, THETA, PHI); plt.show(); ```. ### Code Output. ```shell; MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3. Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading']. This will become an error two minor releases later.; ax.pcolor(X, Y, P.real, cmap=cmap); ```. ### Expected Behaviour. I expect the same plot, but without the warning which becomes an error in the future. ### Your Environment. ```shell; QuTiP Version: 5.0.0.de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1973:371,error,errors,371,https://qutip.org,https://github.com/qutip/qutip/issues/1973,1,['error'],['errors']
Availability,"### Bug Description. The `propagator()` function SHOULD support the array-coefficient format:. `propagator(H=[[sigmax(), np.cos(tlist)]], tlist=tlist)`. However, this code generates an error complaining `ValueError: tlist must be the same len as the array to interpolate`. This is due to a line of wrong code inside `propagator()` function:. ```python; def propagator(H, t, c_ops=(), args=None, options=None, **kwargs):; if isinstance(t, numbers.Real):; tlist = [0, t]; list_output = False; else:; tlist = t; list_output = True. if not isinstance(H, (Qobj, QobjEvo)):; H = QobjEvo(H, args=args, **kwargs); ...; ```. In the last line above, the code forgot to pass `tlist=tlist` to `QobjEvo`. This is an optional argument only required when no coefficients are supplied as numpy arrays. Therefore, when we feed a numpy array to `propagator` and then to `QobjEvo`, it is reported `ValueError: tlist must be the same len as the array to interpolate`, while the real error here is because no tlist is provided. You can compare it to the correct code in `mesolve`:. ```python; def mesolve(H, rho0, tlist, c_ops=None, e_ops=None, args=None, options=None, **kwargs):; options = _solver_deprecation(kwargs, options); H = QobjEvo(H, args=args, tlist=tlist); ...; ```. ### Code to Reproduce the Bug. ```shell; tlist = np.linspace(0, 50, 500); q.propagator([[q.sigmax(), np.cos(tlist)]], tlist); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[26], line 2; 1 tlist = np.linspace(0, 50, 500); ----> 2 q.propagator([[q.sigmax(), np.cos(tlist)]], tlist).states[-1]. File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\solver\propagator.py:62, in propagator(H, t, c_ops, args, options, **kwargs); 59 list_output = True; 61 if not isinstance(H, (Qobj, QobjEvo)):; ---> 62 H = QobjEvo(H, args=args, **kwargs); 64 if c_ops:; 65 H = liouvillian(H, c_ops). File c:\Users\neohu\.conda\envs\de\Lib\sit",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2432:185,error,error,185,https://qutip.org,https://github.com/qutip/qutip/issues/2432,2,['error'],['error']
Availability,"### Bug Description. The concurrence measure does not work with density matrix objects. ### Code to Reproduce the Bug. ```shell; import qutip. dm = qutip.maximally_mixed_dm(4); print(dm); print(qutip.entropy.concurrence(dm)); ```. ### Code Output. ```shell; Quantum object: dims = [[4], [4]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0.25 0. 0. 0. ]; [0. 0.25 0. 0. ]; [0. 0. 0.25 0. ]; [0. 0. 0. 0.25]]. raise Exception(""Density matrix must be tensor product of two qubits.""); Exception: Density matrix must be tensor product of two qubits.; ```. ### Expected Behaviour. One of two things is happening:; 1. The concurrence method is not compatible with the density matrix Qobj objects. I am not certain why this concurrence method requires [[2, 2], [2, 2]] dimensions instead of [4,4] if the concurrence method is acting on 2 qubit systems.; 2. The density matrix generators are not producing matrices which are consistent with the qutip required format. I tried this on other matrices by just casting numpy arrays to Qobj objects and I got the same error. . ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.21.5; Scipy Version: 1.9.1; Cython Version: 0.29.32; Matplotlib Version: 3.5.2; Python Version: 3.9.13; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2058:1069,error,error,1069,https://qutip.org,https://github.com/qutip/qutip/issues/2058,1,['error'],['error']
Availability,"### Bug Description. The function `negativity() ` is currently broken because of a broken import of `partial_transpose()`. This is probably an easy fix and good first issue, but more importantly we need a test for this function, and anything else that currently is not tested in `entropy.py`. Also, might be useful to either properly support kets in negativity (i think it just assumes at the moment the input state is a density operator, and incorrectly acts on kets), or give a warning if a state is provided, and not a density operator. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import *. test = (tensor(basis(2,0),basis(2,1)) + tensor(basis(2,1),basis(2,0)))/np.sqrt(2); negativity(test * test.dag(),0); ```. ### Code Output. ```shell; 123 """"""; 124 Compute the negativity for a multipartite quantum system described; 125 by the density matrix rho. The subsys argument is an index that; (...); 130 Experimental.; 131 """"""; 132 mask = [idx == subsys for idx, n in enumerate(rho.dims[0])]; --> 133 rho_pt = partial_transpose(rho, mask); 135 if method == 'tracenorm':; 136 N = ((rho_pt.dag() * rho_pt).sqrtm().tr().real - 1)/2.0. TypeError: 'module' object is not callable; ```. ### Expected Behaviour. should be = 0.5. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+c745ace; Numpy Version: 1.26.3; Scipy Version: 1.11.4; Cython Version: 3.0.8; Matplotlib Version: 3.8.0; Python Version: 3.12.1; Number of CPUs: 28; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2345:959,mask,mask,959,https://qutip.org,https://github.com/qutip/qutip/issues/2345,2,['mask'],['mask']
Availability,"### Bug Description. The rendering of the process matrix looks weird in qutip-v5, The bottom of the bars behind is on top of the lower bars in front of it. (This is a CNOT gate with some errors); ![image](https://github.com/qutip/qutip/assets/12125783/970923af-e361-4cdf-a573-32b477ede6e5). Maybe the order of the bar rendering is reversed during the last refactoring of the plotting library?. ### Code to Reproduce the Bug. ```python; import numpy as np; import qutip. # Create a noisy CNOT gate; IZ = qutip.tensor([qutip.qeye(2), qutip.sigmaz()]); gate = qutip.gates.cnot(); noisy_gate = (-2.j * np.pi*(IZ/8/20)).expm() @ gate; fid = qutip.average_gate_fidelity(noisy_gate, qutip.gates.cnot()); print(f""noisy CNOT fidelity {fid}""). # Plot process matrix; op_basis = [[qutip.qeye(2), qutip.sigmax(), qutip.sigmay(), qutip.sigmaz()]] * 2; chi = qutip.qpt(qutip.to_super(noisy_gate), op_basis); qutip.qpt_plot_combined(; chi, lbls_list=[[""i"", ""x"", ""y"", ""z""]] * 2, title=""Process Matrix""; ); ```. ### Code Output. ```; noisy CNOT fidelity 0.9987669334932512; ```; ![image](https://github.com/qutip/qutip/assets/12125783/bc6ce1b4-e3ad-4c6c-988f-a3701e238ebe). ### Expected Behaviour. The bars should be rendered correctly. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.8.3; Python Version: 3.11.8; Number of CPUs: 40; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400:187,error,errors,187,https://qutip.org,https://github.com/qutip/qutip/issues/2400,1,['error'],['errors']
Availability,"### Bug Description. This issue originates from a [problem in the Help Group](https://groups.google.com/g/qutip/c/F7tOoZzMjto). Calculating the entropy of a density matrix in the Dicke basis leads to -Inf, while the standard calculation with ""entropy_vn"" returns a finite (more logical) result. ; I already tracked down the problem to the calculation of eigenvalues in `dicke_trace_function`. Due to numerical behaviour some eigenvalues have very small negative values, which lead to -Inf entropy. If these values are rounded to zero, the problem disappears. However, I am not sure, which way is the best way to perform this rounding. ; @nathanshammah @quantshah . ### Code to Reproduce the Bug. ```shell; from qutip import *; from qutip.piqs import *; import numpy as np; import numpy.random; from scipy.linalg import eig; from scipy.sparse import block_diag. N = 10; system = Dicke(N); [jx, jy, jz] = jspin(N,basis=""dicke""); jx=jx*2; jy=jy*2; jz=jz*2. V=3; g=1; system.emission = 1; system.hamiltonian = V/(2*(N-1)) * jz*jz + g/2 * jx; D_tls = system.liouvillian(); rho_ss = steadystate(D_tls,method='eigen',); vn_dicke=entropy_vn_dicke(rho_ss); vn_dicke_over=entropy_vn(Qobj(block_diag(dicke_blocks_full(rho_ss)))). print(vn_dicke,vn_dicke_over); ```. ### Code Output. ```shell; -inf 0.006061297461844266; ```. ### Expected Behaviour. The value for the entropy should not depend on the way it is calculated. I.e., we should have `vn_dicke == vn_dicke_over` up to numerical uncertainty. ### Your Environment. ```shell; uTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.21.0; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919:315,down,down,315,https://qutip.org,https://github.com/qutip/qutip/issues/1919,1,['down'],['down']
Availability,"### Bug Description. Using `Python 3.12.2` and `Poetry 1.7.1`, when adding `qutip` as a dependency, the installation fails. ### Code to Reproduce the Bug. ```shell; poetry add qutip; ```. ### Code Output. ```shell; Updating dependencies; Resolving dependencies... (0.2s). Package operations: 4 installs, 0 updates, 0 removals. • Installing numpy (1.26.4); • Installing packaging (23.2); • Installing scipy (1.12.0); • Installing qutip (4.7.5): Failed. ChefBuildError. Backend subprocess exited when trying to invoke build_wheel. [...]. building 'qutip.cy.cqobjevo_factor' extension; error: Microsoft Visual C++ 14.0 or greater is required. Get it with ""Microsoft C++ Build Tools"": https://visualstudio.microsoft.com/visual-cpp-build-tools/. at ~\AppData\Roaming\pypoetry\venv\Lib\site-packages\poetry\installation\chef.py:164 in _prepare; 160│; 161│ error = ChefBuildError(""\n\n"".join(message_parts)); 162│; 163│ if error is not None:; → 164│ raise error from None; 165│; 166│ return path; 167│; 168│ def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:. Note: This error originates from the build backend, and is likely not a problem with poetry but with qutip (4.7.5) not supporting PEP 517 builds. You can verify this by running 'pip wheel --no-cache-dir --use-pep517 ""qutip (==4.7.5)""'.; ```. ### Expected Behaviour. Installing qutip successfully. ### Your Environment. ```shell; QuTiP version: 4.7.5; Python version: 3.12.2; Poetry version: 1.7.1; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322:583,error,error,583,https://qutip.org,https://github.com/qutip/qutip/issues/2322,5,['error'],['error']
Availability,"### Bug Description. Using a Hamiltonian that is constructed using operators returned from the `enr_destroy` function, does not work with the steady state solver in Quito 5.0.0. It does however work with Qutip 4.7 (have not checked any other versions). . The error given is a dimension mismatch essentially, which seems to stem from an ""expected dimension"" of the Hamiltonian based on the number of modes. In the example below, the dimension mismatch is between 65536 (which is 2^16, the entire Hilbert space of my problem) vs 17, which is the excitation number restricted subspace. . ### Code to Reproduce the Bug. ```shell; N = 16 ## number of resonators including tapers; max_excitation = 1 ## maximum excitation; num_levels = 2; dims = [num_levels] * N. ann_operators = enr_destroy(dims, excitations = max_excitation); w_r = 2 * np.pi * 5; w = np.array([w_r] * N). J_r = 2 * np.pi * 0.4; J_t2 = 1.353 * J_r; J_t1 = 1.035 * J_r. J = np.array([J_t2, J_t1] + [J_r] * (N-5) + [J_t1, J_t2]). kappa = 2.92 * J_r; drive_amp = 2 * np.pi * 0.0001; t = []. detuning_list = 2 * np.pi * np.linspace(-1, 1, 100). for detuning in detuning_list:; drive_w = (w_r - detuning). H_r = 0; for i, a in enumerate(ann_operators):; H_r += (w[i] - drive_w) * a.dag() * a. H_int = 0; for i in range(len(ann_operators)-1):; H_int += J[i] * (ann_operators[i].dag() * ann_operators[i+1] + ann_operators[i+1].dag() * ann_operators[i]). H_d = -1j * drive_amp * (ann_operators[0] - ann_operators[0].dag()). H = H_r + H_int + H_d. c_ops = [np.sqrt(kappa)*ann_operators[0], np.sqrt(kappa)*ann_operators[-1]]. rho_ss = steadystate(H, c_ops). a_out = np.sqrt(kappa) * expect(ann_operators[-1], rho_ss); t.append(np.sqrt(kappa) * a_out/drive_amp). print(""J = "", np.array(J)/(2 * np.pi)); print(""w = "", np.array(w)/(2 * np.pi)); print(""kappa = "", kappa/2/np.pi); t = np.array(t); plt.plot(detuning_list/2/np.pi, 20 * np.log10(np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|(dB)""); plt.ylim(-10,0.01); # plt.xlim(-2, 2); pl",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/issues/2386,1,['error'],['error']
Availability,"### Bug Description. When combining `parfor` with `brmesolve` and a time-dependent Hamiltonian, the compilation of the Hamiltonian seems to interfer with the correct functioning of `parfor`. The call results in an error, that the coefficient file is too short. . I guess this could also happen when using `parfor` with other solvers. ### Code to Reproduce the Bug. ```shell; from qutip import brmesolve, sigmaz, sigmax, basis, parfor; import numpy as np. psi0 = basis(2, 0); H_S = np.pi * sigmaz(); H_I = sigmax(); tlist = np.linspace(0, 100, 101); pulse_shape = ""exp(- t**2)"". def brme(A):; H_tmp = [A * H_S, [H_I, pulse_shape]]. return brmesolve(; H_tmp, psi0, tlist, e_ops=[sigmaz()]; ).expect[0][-1]. results = parfor(brme, np.linspace(0, np.pi, 10)); ```. ### Code Output. ```shell; ImportError: /home/chris/.qutip/qutip_coeffs_1.1/qtcoeff_4c859672674b8b603bd243ba3f4a8d.cpython-38-x86_64-linux-gnu.so: file too short; ```. ### Expected Behaviour. `parfor` should wait for the compilation to finish and then start the parallel processes. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+c64f38e; Numpy Version: 1.23.0; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.8.10; Number of CPUs: 4; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1963:214,error,error,214,https://qutip.org,https://github.com/qutip/qutip/issues/1963,1,['error'],['error']
Availability,"### Bug Description. When installing on ubuntu 20.04, the build fails with `ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19` this is due to the fact that on this platform `oldest-supported-numpy` (from `pyproject.toml`) defaults to 1.17.3, but `setup.cfg` requires `numpy>=1.19`. ### Code to Reproduce the Bug. ```shell; python -m pip install -v --upgrade qutip; ```. ### Code Output. ```shell; Using pip 24.0 from /home/defreule/.local/lib/python3.8/site-packages/pip (python 3.8); Defaulting to user installation because normal site-packages is not writeable; Requirement already satisfied: qutip in /usr/local/lib/python3.8/dist-packages (4.7.3); Link requires a different Python (3.8.10 not in: '>=3.9'): https://files.pythonhosted.org/packages/73/73/abcc185174ac6dbc7965e5aeb9418c163eafda704008ee795ee9cdc75e4a/qutip-5.0.2.tar.gz (from https://pypi.org/simple/qutip/) (requires-python:>=3.9); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-70.0.0-py3-none-any.whl.metadata (5.9 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:76,ERROR,ERROR,76,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['ERROR'],['ERROR']
Availability,"### Bug Description. When printing a Qobj in Jupyter Notebooks of the VSCode IDE, the output is rendered as raw text rather than as Latex equation. ### Code to Reproduce the Bug. ```shell; import qutip as qt; qt.fock(2,0); ```. ### Code Output. ```shell; Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'\begin{equation*}\left(\begin{array}{{11}c}1\0\end{array}\right)\end{equation}; ```. ### Expected Behaviour. The output should instead look like:. `Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'`. ![image](https://github.com/qutip/qutip/assets/57567043/74f251bc-54b3-463f-b7b8-86091a939d48). ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+nogit; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.8.16; Number of CPUs: 8; BLAS Info: OPENBLAS; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); ```. ### Additional Context. I see already there are some errors in the latex code output. ; - `\end{equation}` -> `\end{equation*}`; - `{{11}c}`: is this format correct?. I would rather do: `{cc}`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2172:954,error,errors,954,https://qutip.org,https://github.com/qutip/qutip/issues/2172,1,['error'],['errors']
Availability,"### Bug Description. When you try to access the nnz attribute of a Qobj in CSR format it gives you an error that the qutip.core.csr.CSR class does not have an nnz attribute. . ### Code to Reproduce the Bug. ```shell; qutip.qeye(3).to(""CSR"").data.nnz; ```. ### Code Output. ```shell; AttributeError Traceback (most recent call last); Cell In[46], line 1; ----> 1 qutip.qeye(3).to(""CSR"").data.nnz. AttributeError: 'qutip.core.data.csr.CSR' object has no attribute 'nnz'; ```. ### Expected Behaviour. 3. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.24.2; Scipy Version: 1.10.0; Cython Version: 0.29.37; Matplotlib Version: 3.7.0; Python Version: 3.10.12; Number of CPUs: 4; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2481:102,error,error,102,https://qutip.org,https://github.com/qutip/qutip/issues/2481,1,['error'],['error']
Availability,"### Bug Description. `Bloch` raises an error when used in jupyter notebook. This seems to be due to the output of `print_figure` in `_repr_svg_` not being bytecode (maybe it was in the past?) it then defaults to `_repr_png_` and renders correctly the bloch sphere. ### Code to Reproduce the Bug. ```shell; import qutip; qutip.Bloch(); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~/.virtualenvs/qutip4/lib/python3.10/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. ~/git_repo/qutip/qutip4/qutip/bloch.py in _repr_svg_(self); 293 from IPython.core.pylabtools import print_figure; 294 self.render(); --> 295 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 296 plt.close(self.fig); 297 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```. ### Expected Behaviour. The Bloch sphere should be plotted correctly without any Error. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.22.3; Scipy Version: 1.8.1; Cython Version: None; Matplotlib Version: 3.5.2; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1912:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/1912,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Bug Description. qutip has functions to detect the available of BLAS libraries. For instance on my system (debian unstable), `python3 -c ""import qutip; qutip.about()""` reports; ```; BLAS Info: OPENBLAS; ```. However, I think the logic behind BLAS Info is not robust. For context, debian builds packages against generic libblas.so (libblas-dev package). The various optimised BLAS implementations are supposed to be binary compatible, such that the system administrator can install the preferred implementation for use at runtime (the identity of libblas.so is controlled using debian's alternatives mechanism). On my system, OpenBLAS is indeed installed. But taking a closer look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:55,avail,available,55,https://qutip.org,https://github.com/qutip/qutip/issues/2053,3,"['avail', 'robust']","['availability', 'available', 'robust']"
Availability,"### Bug Description. setup.py manages a `--with-openmp` build option to provide openmp support. pyproject.toml was introduced in QuTiP 4.6.0 to allow PEP517 build without (directly) using setup.py. But the `--with-openmp` option that previously worked with a setup.py build does not seem to be compatible with a PEP517 build. The problem shows up in the Debian build of the qutip package. Debian provides its own tool (pybuild from the dh-python package) to manage the build of python packages. PEP517 is relatively new, so by default pybuild uses setup.py if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:566,avail,available,566,https://qutip.org,https://github.com/qutip/qutip/issues/1875,2,['avail'],['available']
Availability,"### Bug Description. unit test test_dqd_current fails on aarch64 linux. ### Code to Reproduce the Bug. ```shell; the unit test; ```. ### Code Output. ```shell; =================================== FAILURES ===================================; _______________________________ test_dqd_current _______________________________; def test_dqd_current():; ""Counting statistics: current and current noise in a DQD model""; ; G = 0; L = 1; R = 2; ; sz = qutip.projection(3, L, L) - qutip.projection(3, R, R); sx = qutip.projection(3, L, R) + qutip.projection(3, R, L); sR = qutip.projection(3, G, R); sL = qutip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); c_, n_ = qutip.countstat_current_noise(L, [], rhoss=rhoss, J_ops=J_ops); current[n] = c_[0]; noise[n] = n_[0, 0, 0]; ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/pyt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:196,FAILURE,FAILURES,196,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['FAILURE'],['FAILURES']
Availability,"### Describe the Issue!. For a seemingly harmless operation , which I have used several times, I seem to suddenly encounter this error with every qutip operation. I am unable to see the reason as I am using inbuilt functions of qutip. Any help is appreciated. One of the examples to reproduce the error is below. . ```; XXX= tensor(sigmax(),sigmax(),sigmax()); YYZ=tensor(sigmay(),sigmay(),sigmaz()); A = commutator(XXX,YYZ); ```. ```; TypeError Traceback (most recent call last); Cell In[11], line 3; 1 XXX= tensor(sigmax(),sigmax(),sigmax()); 2 YYZ=tensor(sigmay(),sigmay(),sigmaz()); ----> 3 A = commutator(XXX,YYZ). File ~\anaconda3\Lib\site-packages\qutip\operators.py:709, in commutator(A, B, kind); 704 """"""; 705 Return the commutator of kind `kind` (normal, anti) of the; 706 two operators A and B.; 707 """"""; 708 if kind == 'normal':; --> 709 return A * B - B * A; 711 elif kind == 'anti':; 712 return A * B + B * A. File ~\anaconda3\Lib\site-packages\qutip\qobj.py:497, in Qobj.__mul__(self, other); 495 if self.dims[1] == other.dims[0]:; 496 out = Qobj(); --> 497 out.data = self.data * other.data; 498 dims = [self.dims[0], other.dims[1]]; 499 out.dims = dims. File ~\anaconda3\Lib\site-packages\scipy\sparse\_matrix.py:44, in spmatrix.__mul__(self, other); 43 def __mul__(self, other):; ---> 44 return self._matmul_dispatch(other). File ~\anaconda3\Lib\site-packages\scipy\sparse\_base.py:580, in _spbase._matmul_dispatch(self, other); 578 if self.shape[-1] != other.shape[0]:; 579 raise ValueError('dimension mismatch'); --> 580 return self._matmul_sparse(other); 582 # If it's a list or whatever, treat it like an array; 583 other_a = np.asanyarray(other). File ~\anaconda3\Lib\site-packages\scipy\sparse\_compressed.py:529, in _cs_matrix._matmul_sparse(self, other); 526 new_shape += (N,); 528 major_dim = self._swap((M, N))[0]; --> 529 other = self.__class__(other) # convert to this format; 531 idx_dtype = self._get_index_dtype((self.indptr, self.indices,; 532 other.indptr, other.ind",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/2536,2,['error'],['error']
Availability,"### Describe the Issue!. I have a big matrix which is a [QuTiP](https://qutip.org/) object. I am trying to run this line of code:. ops_numpy = [op.full() for op in m_ops] # convert the QuTiP Qobj to numpy arrays. But I am getting the following error:. MemoryError: Unable to allocate 16.0 TiB for an array with shape (1048576, 1048576) and; data type complex128. Here, `m_ops` is a list with `len(m_ops) = 27` and every `m_ops[i]` is a quantum object of shape. In [91]: m_ops[1].shape; Out[91]: (1048576, 1048576). Ok, I can see that I am trying to convert a QuTiP object into a numpy array but this object is so big that I have a memory issue. My question is simple: is there any way to overcome this issue? can I 'cut' the object in smaller pieces to convert it and then put the ""pieces back together""?. I really have no idea. Maybe I am not doing in the optimal way but I was working with really smaller matrix until this one and I didn't foresaw this problem. Any help or reference will be highly appreciated. This is really important for me. ----------------------------------------------------------------. EDIT with the full code:. """""".""""""; import numpy as np; import tensorflow as tf; from qutip import tensor; from qutip import sigmax, sigmaz, sigmay; from qutip import coherent, coherent_dm, expect, Qobj, fidelity, hinton; from tqdm.auto import tqdm. #%load_ext autoreload; tf.keras.backend.set_floatx('float64') # Set float64 as the default. # Local paths:; local_path = ""0_qst_master/cgan_tf_20qb/%s""; data_path = ""0_qst_master/cgan_tf_20qb/data/%s"". # Reading projectors; projs_settings = np.loadtxt(data_path % 'measurement_settings.txt', dtype=str). X = sigmax(); Y = sigmay(); Z = sigmaz(). m_ops = [] # measurement operators. def string_to_operator(basis): ; mat_real = []; ; for j in range(len(basis)):; if basis[j] == 'X':; mat_real.append(X) ; if basis[j] =='Y':; mat_real.append(Y) ; if basis[j] =='-Y':; mat_real.append(-Y) ; if basis[j] == 'Z':; mat_real.append(Z) ; return mat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2176:244,error,error,244,https://qutip.org,https://github.com/qutip/qutip/issues/2176,1,['error'],['error']
Availability,"### Describe the Issue!. I have installed Qutip version 5.0.2, and I've been trying to use the parfor method (see https://qutip.org/docs/4.0.2/guide/guide-parfor.html). When calling it, I get the error: ""NameError: name 'parfor' is not defined"".; I'm not trying to do anything exotic yet, I was just testing the rudimentary example from the webpage:. from qutip import *; def func1(x): ; return x, x**2, x**3; a, b, c = parfor(func1, range(10)); print(a)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2551:196,error,error,196,https://qutip.org,https://github.com/qutip/qutip/issues/2551,1,['error'],['error']
Availability,"### Describe the Issue!. I'm having issues with running a quantum circuit that consists of 4-level qudits. I want to define my custom 2-qudit gate. I have written a gate function that returns the following object:. `return Qobj(mat, dims=[[4,4],[4,4]], shape = [16, 16], type='oper')`. Since this is a gate acting on two 4-level qudits, I think that these dims are correct. I then create an initial ket state for my circuit, let's say with three qudits, and create the circuit object:. ```; zero_state=tensor(basis(4, 0),basis(4, 0),basis(4, 0)); qc = QubitCircuit(N=3, dims=zero_state.dims); ```. the dims are: [[4, 4, 4], [1, 1, 1]]. when I try to add a gate between qudits 0 and 1:. `qc.add_gate(""Ucomm"", targets=[0,1])`. I get the following error:. `ValueError: The operator dims [4, 4] do not match the target dims [[4, 4, 4], [1, 1, 1]].`. If I instead try to add a gate between qudits 1 and 2:; `qc.add_gate(""Ucomm"", targets=[1,2])`. I get:. ```; targ_dims = [dims[t] for t in targets]; IndexError: list index out of range; ```. Do I understand correctly how dims work in Qutip? Or is this an error? The above example works perfectly fine for qubits, replacing 4->2 in the above.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803:745,error,error,745,https://qutip.org,https://github.com/qutip/qutip/issues/1803,2,['error'],['error']
Availability,"### Describe the Issue!. I'm not sure if this is a bug, or I don't understand something. I'm using mcsolve and keeping trajectories. I've got a single type of collapse/jump operator, which moves a single electron of my system from one site to another. ; ```; for jump_rate in [0.01, 0.1, 0.5, 1.0, 1.5, 2, 4, 8, 16, 32]:; result = mcsolve(H, initial_state, tlist, [np.sqrt(jump_rate)*jump_op], number_operators, ntraj = ntraject,; options={""keep_runs_results"": True, ""store_states"": True, ""improved_sampling"": True}); ```; I'm increasing the jump_rate, and looking at when the jumps occur using result.collapse (which keeps track of which trajectory contributed a jump). I'm using ntraject = 10 or 100. I've tried with and without improved sampling. . When I use a jump rate less than 2, the number of jumps I see in each trajectory goes up with the jump rate. However for a jump rate of 4 or higher, the number of jumps I see in each trajectory goes down with jump rate. (I realize that for the Lindblad equation to be a good approximation, the interaction hamiltonian (and thus jump rate) should be small compared to the system Hamiltonian, but I still want to understand this behavior.). Can anybody explain why a higher jump rate doesn't give more jumps in a trajectory? . Also, I'd like to understand result.photocurrent, which seems to combine the jumps for all trajectories, but also seems to divide by the number of trajectories, and maybe the number of timesteps?. Thanks,; Emily; Here are a couple of plots showing all the jumps in 10 trajectories, for a jump rate of 4 (more jumps) and of 0.5 (fewer jumps) and 32 (fewer jumps); ![Colmcsolve6sites0 5C0 5N0 2ex4JR10NTEvery_other_site_state](https://github.com/user-attachments/assets/21b08700-3cae-4584-a26e-31821362e285); ![Colmcsolve6sites0 5C0 5N0 2ex0 5JR10NTEvery_other_site_state](https://github.com/user-attachments/assets/a61c1a5d-823f-4718-baf1-c679f5a25165); ![Colmcsolve6sites0 5C0 5N0 2ex32JR10NTEvery_other_site_state](https://",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539:951,down,down,951,https://qutip.org,https://github.com/qutip/qutip/issues/2539,1,['down'],['down']
Availability,"### Describe the Issue!. I'm trying to simulate a simple two-level system with a sinusoidally varying external magnetic field. The code is given below:. ```python3; import matplotlib.pyplot as plt; import numpy as np; from qutip import basis, sigmax, sigmay, sigmaz, Options, mesolve, expect; from scipy.constants import physical_constants. g = 2; muB = (physical_constants[""Bohr magneton in eV/T""])[0] ## Bohr-Magneton in eV/Tesla; gamma = 0.5*muB*g #in eV/Tesla. h_inv = (physical_constants[""reduced Planck constant in eV s""][0])**-1. gamma = gamma*h_inv #in sec-1/Tesla; del physical_constants; ## Defining time of evolution; times = np.linspace(0, 6*10**-7, 1000); noe = len(times); B = 1; Bx = -(1*10**-3); ## Create a Quantum 2 state basis; up = basis(2,0) ; down = basis(2,1) ; upd = up * up.dag() ; downd = down * down.dag(); sy = sigmay(); sz = sigmaz(); sx = sigmax(); Hx = gamma*Bx*sx; options = Options(nsteps=10000); H0 = -gamma*B*sz ; resonant_frequency = H0.eigenenergies() ; def Hx_coeff(t, args):; return 1 * np.cos(-2*resonant_frequency[0]*t );. H = [H0,[Hx,Hx_coeff]]; ; result = mesolve(H, downd, times, [], options=options); rh = result.states; upexpect, downexpect = [], []; for r in rh: ; up_e = expect(up*up.dag(), r); down_e = expect(down*down.dag(), r); upexpect.append(up_e); downexpect.append(down_e); plt.plot(times, upexpect, label = ""Upstate"", color='g', linestyle='-.'); plt.plot(times, downexpect, label = ""Downstate"", color='r', linestyle='-.'); plt.title(""Prob v/s Time for B = {}"".format(B)); plt.legend(loc=""best""); plt.xlabel(""Time""); plt.ylabel(""Probability of State""); plt.grid(); plt.show(); ```. The Hamiltonian of the system is hermitian, and theoretically, we don't expect such decay in the amplitude. So, what is happening in the above program that is leading to such a strange evolution? . ![Figure_2](https://user-images.githubusercontent.com/49644300/209442963-3e2a047f-1714-4d5c-b484-fa78e91a8062.png); . As soon as I increase the value of `B` the deca",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2051:765,down,down,765,https://qutip.org,https://github.com/qutip/qutip/issues/2051,4,['down'],"['down', 'downd']"
Availability,"### Describe the Issue!. Most of our progress bars are in `qutip/ui/progressbar.py`, with the exception of `HTMLProgressBar` which is in `qutip/ipynbtools.py`. It is not available by the solvers. It should be moved with the other and added it to the `progess_bars` dictionary so it's usable with `mesolve`, etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2108:170,avail,available,170,https://qutip.org,https://github.com/qutip/qutip/issues/2108,1,['avail'],['available']
Availability,"### Describe the Issue!. Most of the functions in `random_objects.py` take an `N` input and an optional `dims`. Those input are redundant as the size (`N`) can be obtained from the `dims`. However the way they handle this inconsistent:; - Many functions, such as `rand_super`, `rand_dm`, check that the dims matches the size and raise an error if it doesn't.; - `rand_dm_ginibre`, `rand_super_bcsz` just pass the `dims` to `Qobj` without any checks.; - `rand_ket` has a default `N=0` and obtain the size from `dims` when `N` is `0`, but it raise a division per zero error when neither `N` nor `dims` is passed.; - `rand_ket_haar` also tries to obtain the size from `dims` when `N` is `0`, but the default value of `N` is `2`, thus one need to pass `N=0` to use it. `N=0` would fail almost everywhere else. Also some function have a default size, other not: `rand_unitary(N, ...)`, `rand_unitary_haar(N=2, ...)`. The interface of these functions need to be unified. Some options:; - `N` is always needed and `dims` are checked to match.; - A default of `None` is used for `N` and either `N` or `dims` is needed. If both are given, we check that they are compatible. If none are passed, we raise an appropriate error.; - (For `dev.major`) Remove the `dims` parameter and replace `N` with `dimensions`, which act as `N` if an integer is given and `dims` is a list is. This is already the behavior of `qeye` and `qzero`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1838:128,redundant,redundant,128,https://qutip.org,https://github.com/qutip/qutip/issues/1838,4,"['error', 'redundant']","['error', 'redundant']"
Availability,"### Describe the Issue!. The Monte Carlo solver works with kets instead of density matrices. It doesn't allow superoperators as c_ops (error message: c_ops are not consistant with psi0). Since my master equation has lindblad dissipators (which are superoperators), I have trouble using mcsolve. The only way I can think of is converting the initial state to a superket. But that has type operator-ket and QuTip doesn't seem to want me do type casting. How can I circumvent this problem?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2060:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/2060,1,['error'],['error']
Availability,"### Describe the Issue!. The function `orbital` is not tested and there seems to have an error in the spherical harmonics computation.; Adding a test and fixing any error, possibly using `scipy.special.sph_harm`, would be helpful.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839:89,error,error,89,https://qutip.org,https://github.com/qutip/qutip/issues/1839,2,['error'],['error']
Availability,"### Describe the Issue!. The new version of cython does not seems to be compatible with other cython. The error is not in our code but when cimporting from scipy.; ```; /miniconda3/lib/python3.9/site-packages/scipy/linalg.pxd:1:0: 'scipy/linalg/linalg.pxd' not found; ```. For version 4.X, we already don't support cython 3.X.; For qutip 5.X, we have a few options, but I propose to drop support for python <=3.9. It can now be officially dropped according to [scientific python](https://scientific-python.org/specs/spec-0000/). Other projects may start to drop support also and we may have to do more and more work around if we continue supporting if.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2240:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/2240,1,['error'],['error']
Availability,### Describe the Issue!. There are minor grammatical errors and a small amount verbiage in the users' guide.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759:53,error,errors,53,https://qutip.org,https://github.com/qutip/qutip/issues/1759,1,['error'],['errors']
Availability,"### Describe the Issue!. With the PR for adding `hypothesis` #1957, we have the issue of how we should handle the `NaN` and `inf`. I see 3 main ways:; - Up to now, we mostly ignored them. They rarely caused any issues. We could continue like this. Maybe adding a `isfinite` function and fixing `iszero`; - Do as @hodgestar did in #1957, propagate the `NaN` as blas does. We could still add `isfinite`.; - Raise an error when a `Data` is not finite as soon as possible. I prefer raising an error as soon as a bad value is obtained. Otherwise computation can continue for a while, hiding the source of the issue and wasting time. Even when the `NaNs` are properly propagated, it's often not that helpful when debugging.; Failing as soon as the bad value is obtained will make debugging the easiest. I looked at all the places that would need to check for bad values:; Creation: `dense.pyx`'s, `csr.pyx`'s, `one_element`, `diag`.; Modification: `project`, `ptrace`, `kron`.; Operation: `add`, `mul`, `matmul`.; The other functions either don't create a `Data` object or use one of the previous function (`pow` use `matmul`, `eigen` uses `Dense.__init__`, etc.). I believe that we should check at creation, even if we otherwise mostly ignore bad values.; Adding check in `project`, `ptrace`, `kron` shouldn't be too costly. The issue is we want the operations `add`, `mul`, `matmul` to be fast, so checking after each call would not be great. But if we keep track of the largest element, it could only cost one extra addition or multiplication, which could be fast enough to make refusing `inf` and `NaN` in `Qobj` doable.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1977:414,error,error,414,https://qutip.org,https://github.com/qutip/qutip/issues/1977,2,['error'],['error']
Availability,"### Discussed in https://github.com/qutip/qutip/discussions/2362. <div type='discussions-op-text'>. <sup>Originally posted by **adithi16** March 26, 2024</sup>; Hello, . I would like to write an operation that looks like `n^(a^{\dagger}a)`; where n is the average number of photons and a is the annihilation operator. However exponentiation gives error since I cannot use ** or pow() for Qobj. . In particular, I would like to create a density matrix for a squeezed state with a thermal ensemble. ; Since the already available option of using thermal_dm only creates the state close to the vacuum, I would like to know if there is a way to do this for any state (say a squeezed state or a coherent state). I would be happy to know! . </div>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2370:347,error,error,347,https://qutip.org,https://github.com/qutip/qutip/issues/2370,2,"['avail', 'error']","['available', 'error']"
Availability,"### Problem Description. Now that qutip-qip has moved to another package, gates are not available in the main repo. This is inconvenient for examples such as the control optimization ones, where one would need to install the qutip-qip package just to access say the Hadamard or CNOT for instance. ### Proposed Solution. The easiest solution would be just to copy the `gates.py` file from the QIP package into the main repo. Perhaps might confuse imports in qip? Also, I think that file has func defs that refer to 'controls' that might not make sense in this repo. ### Alternate Solutions. Have a file called `operations.py`. Just have a subset of the gates (operations), the most typical named unitaries - sounds less QIP like and would avoid import confusion. I think also `hadamard_transform` could be shortened to `hadamard`, but also include the original name. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2389:88,avail,available,88,https://qutip.org,https://github.com/qutip/qutip/issues/2389,1,['avail'],['available']
Availability,"### Problem Description. Right now, if you pass a [pathlib.Path](https://docs.python.org/3/library/pathlib.html) to any of two functions above, an error will raise because it is not possible to add the suffix `.qu` to a Path object. Moreover, if you already have the fullpath of the file (including the extension), QuTip will also raise because it appends the extension internally, no matter if it is already there or not. ### Proposed Solution. The solution would be similar to [numpy.save](https://github.com/numpy/numpy/blob/v1.22.0/numpy/lib/npyio.py#L449) method. ```; if file is string:; if not file.endswith('.qu'):; file = file + '.qu'; file = Path(file). -> open path object; ```. ### Alternate Solutions. _No response_. ### Additional Context. Pd: I'll be happy to make my first contribution and create a pull request for this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1811:147,error,error,147,https://qutip.org,https://github.com/qutip/qutip/issues/1811,1,['error'],['error']
Availability,"### Problem Description. The documentation of the branch `dev.major` raise over 50 warnings when building.; These are mostly formatting error in functions and classes doc-strings, but some of the code example also raise errors.; These warnings need to be fixed and the `-W` option to turn warnings into errors, restored. ### Proposed Solution. A recent documentation build can be found [here](https://github.com/qutip/qutip/runs/6596735860?check_suite_focus=true). The problematic doc-string need to be reworded and/or reformatted. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1903:136,error,error,136,https://qutip.org,https://github.com/qutip/qutip/issues/1903,3,['error'],"['error', 'errors']"
Availability,"### Problem Description. There are a few issues with graphic capacities in Qutip. 1. Most are not tested. Only Bloch.py has some tests associated. While testing graphs is not evident, matplotlib has testing functions to compare graphs etc. and just running it to ensure that no errors are raised would be a nice start. Here are some files and their coverage:; - tomography.py 50%; - visualization.py 8%; - distribution.py 23%; - bloch.py 55%; - bloch3d.py 8%. 2. The interface is not uniform. Most functions take 'fig' and 'ax', but `hilton` only takes 'ax' but no 'fig'. Maybe one third of the function in visualization accepts 'title' and half a 'figsize'. The order of these options is also inconsistent, 'fig', 'ax' can be the first parameters or the last... As seen in #1573, some want more control so `matrix_histogram` accepts `options`. I am all for more control, but being available for only one function feels wrong. On the bloch side, there is a mismatch between `add_vectors`, `add_points`, which takes `color` and `alpha` as input, and `add_arc`, `add_line` which takes `**kwargs`. 3. The colorblind mode should works everywhere, but presently only `hilton` support it. ### Proposed Solution. So for v5 release, the interface of all these should be clean and uniform, with proper tests. . ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1910:278,error,errors,278,https://qutip.org,https://github.com/qutip/qutip/issues/1910,2,"['avail', 'error']","['available', 'errors']"
Availability,"### Problem Description. `master` has qutip/qutip/cy/openmp/src/[zspmv_openmp.hpp](https://github.com/qutip/qutip/blob/master/qutip/cy/openmp/src/zspmv_openmp.hpp), for csr @ dense product with openmp, but we did not have the time to add when making the data layer for `dev.major`. In v4, to use openmp, the user needs to compile from source locally with `python setup.py install --with-openmp` and then an option has to be passed to the solver at run time to use it. For v5, it would be great if openMP was part of the Data layer and used without much thought by the user. (No need to pass `Options(use_openmp=True)` to `mesolve`). We would probably keep a flag and threshold as an option in core or settings so we can run tests with and without. We should add support for cython's `prange`. Presently, using it breaks mac's tests. If made available, there are quite a few functions for the data layer that could gain from it. While openmp is available in v4, it was not used much since it can only be used when compiling locally and the options isn't well known. Ideally, it would be packaged in the wheels (for all but Mac?) instead of needing a local installation. However it does not seems easy, [scipy decided against it](https://github.com/scipy/scipy/blob/38261c1141b8aa80bceeef419911fb4f31df5372/doc/source/dev/toolchain.rst#openmp-support), because it does not mix well with [other parallel environments](https://github.com/scipy/scipy/issues/10239#issuecomment-795030817). It may be possible with conda since it has a openmp package. . ### Proposed Solution. Tasks:; - Restore the compilation option for openmp and have `matmul_csr_dense_dense` use `zspmvpy_openmp`.; - Add options in core to control openmp. In `parallel_map`, turn it of when using multiprocessing.; - Add `prange` in a function (`mul_dense`) and ensure that tests passes and wheels build.; - Add `prange` elsewhere where useful. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1904:841,avail,available,841,https://qutip.org,https://github.com/qutip/qutip/issues/1904,2,['avail'],['available']
Availability,#This pull request will deal with a new module for solving quantum systems exploiting permutational symmetries. A somewhat complete code for this is available at https://github.com/nathanshammah/piqs which is built on several papers @nathanshammah can link to. The code is almost complete and tested but here we will upload it in parts to make the review process easy. @ajgpitch @nonhermitian @nwlambert,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753:149,avail,available,149,https://qutip.org,https://github.com/qutip/qutip/pull/753,1,['avail'],['available']
Availability,"'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017: includes a comment on buggy behaviour caused by `__array__`. Note that the solution given there (`np.asarray(..., dtype=object)`) will no longer work with numpy 1.20.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:1964,avail,availability,1964,https://qutip.org,https://github.com/qutip/qutip/issues/1433,1,['avail'],['availability']
Availability,'Error calculating H' when trying to use mcsolve() for time-dependent Hamiltonians,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:1,Error,Error,1,https://qutip.org,https://github.com/qutip/qutip/issues/1368,1,['Error'],['Error']
Availability,"([(basis(2,0) + (1j)**i *basis(2,1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. Therefore the expectation value should be time-independent. Using sesolve one obtains a wrong result. There seems to be an error when using state vectors instead of density matrices, as is seen by using the mesolve function instead. . I was not able to pinpoint the error in the code, but I checked the result with essolve and using an initial state vector. This raises an exception: ; > Exception: Operator and state do not have same tensor structure: [2, 2, 2] and [2]. essolve works as intended by using a density matrix instead, which should again indicate that there is some bug when using state vectors. Note however that the essolve bug might not be directly related to the sesolve bug, since essolve seems to work correctly when using a different initial state:; `psi0 = tensor([(basis(2,0) + 0.5*(-1j)**i *basis(2,1)).unit() for i in range(0,N)])`. I am using the newest versions of the necessary libraries: . > QuTiP Version: 4.2.0; > Numpy Version: 1.11.3; > Scipy Version: 1.0.0; > Cython Version: 0.27.3; > Matplotlib Version: 2.0.2; > Python Version: 3.6.4; > Number of CPUs: 4; > BLAS Info: OPENBLAS; > OPENMP Installed: False; > INTEL MKL Ext: False; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:2124,error,error,2124,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['error'],['error']
Availability,"* sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current[n], noise[n] = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops); ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.01597663; E Max relative difference: 11.81715334; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.017329, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_countstat.py:58: AssertionError; _________________________________________________________________________ test_scheduling_gates3[circuit2 ALAP no shuffle] __________________________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:2289,toler,tolerance,2289,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['toler'],['tolerance']
Availability,"**Background**. Since I am planning to add an mpi_parallel_map to the parallel module, I had a detailed look at the current implementations of parallel_map and loky_pmap. In the case of timeouts, errors or interrupts, I found surprising behavior. I will first summarize the current behavior in these situations, and then the behavior if my changes are included. It seems difficult to write better unit tests for such timing-sensitive behavior, but I have tested in detail on both Linux (WSL) and Windows. **Current behavior**. &nbsp; | `parallel_map` | `loky_pmap`; ---|---|---; Timeout | Finishes currently running tasks, <br> then returns results of all finished tasks. | If `fail_fast`, behaves similarly to `parallel_map`. <br> Otherwise, completes all tasks but only returns <br> results of those that were started before the timeout.; CTRL+C | First CTRL+C interrupts all tasks, but program <br> enters deadlock requiring second CTRL+C | Interrupts currently running tasks, but then still <br> executes the rest before raising `KeyboardInterrupt`.; Task raises <br> exception | `fail_fast`: finishes running tasks, <br> then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end. | `fail_fast`: finishes all tasks, then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end.; Job timeout | Ignored | Always completes all tasks anyway, see below. **New behavior**. &nbsp; | `parallel_map` | `loky_pmap`; ---|---|---; Timeout | Finishes currently running tasks, <br> then returns results of all finished tasks. | Aborts currently running tasks, <br> then returns results of all finished tasks.; CTRL+C | First CTRL+C raises `KeyboardInterrupt` | First CTRL+C raises `KeyboardInterrupt`; Task raises <br> exception | `fail_fast`: finishes running tasks, <br> then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end. | `fail_fast`: finishes tasks earlier in the list, then <br> aborts remaining ones and raises exception. <br> `!fail_fast`: rais",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2280:196,error,errors,196,https://qutip.org,https://github.com/qutip/qutip/pull/2280,1,['error'],['errors']
Availability,"**Checklist**; - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/). **Description**; Added ptrace specialisation tests. While adding these tests a bug came out with `ptrace_dense` which is now fixed. The problem was it did not work for `sel=[]`, that is, no selection and hence the full trace was required. The bug comes from how `numpy` works as the output of np.prod([]) is float instead of integer. . I wonder though what should be the behaviour for `qobj.ptrace([])`. Shouldit not be the same as `qobj.trace()`? `qobj.ptrace([])` currently returns a `Qobj` of dimensions 1x1 whereas `qobj.trace()` returns a complex number. **Changelog**; Fixed error with ptrace when the input and output are dense and `sel=[]`.; Added specialisations tests for ptrace.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1744:700,error,error,700,https://qutip.org,https://github.com/qutip/qutip/pull/1744,2,['error'],['error']
Availability,"**Checklist**; - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/). **Description**; Added ptrace specialisation tests. While adding these tests a bug came out with `ptrace_dense` which is now fixed. The problem was it did not work for `sel=[]`, that is, no selection and hence the full trace was required. The bug comes from how `numpy` works as the output of np.prod([]) is float instead of integer. . I wonder though what should be the behaviour for `qobj.ptrace([])`. Should it not be the same as `qobj.trace()`? `qobj.ptrace([])` currently returns a `Qobj` of shape 1x1 whereas `qobj.trace()` returns a complex number. **Changelog**; Fixed error with ptrace when the input and output are dense and `sel=[]`.; Added specialisations tests for ptrace.; Improved `ptrace` tests to test for edge cases (trace all and trace none).; Added a few more checks to catch invalid dims and raise ValueError.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1746:696,error,error,696,https://qutip.org,https://github.com/qutip/qutip/pull/1746,1,['error'],['error']
Availability,"**Checklist**; - [x] PEP8. **Description**; The behaviour of the `liouvillian` seemed to be wrong. For a `TfTensor` as input it returned a `Dense` as oupu. This is mainly because the identity matrix created within the function was not a `TfTensor`. . _Testing The tests that I included where would pass without the fix!_ . Reproducing this behaviour within QuTiP seems to be challenging. This is because of how things are automatically converted from one data type to another. In particular, `liouvillian` worked as expected for both `Dense` and `CSR` but not for `TfTensor`. However, since `TfTensor` is not part of qutip I am not sure how to make it to reproduce this error. . The issue seems in fact to be related to an inconsistency in how data is automatically transformed. The following code summarises the problem:; ```; H = qt.rand_herm(5); csr = H.to('csr').data; dense = H.to('dense').data; tftensor = H.to('tftensor').data. qutip.data.kron(csr, dense) # output: dense; qutip.data.kron(csr, csr) # output: csr; qutip.data.kron(csr, tftensor) # output: dense?? this is what causes problems!; qutip.data.kron(tftensor, tftensor) # output: tftensor; ```. **Changelog**; Fixed liouvillian to not generate dense output when used with TfTensor.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1805:670,error,error,670,https://qutip.org,https://github.com/qutip/qutip/pull/1805,1,['error'],['error']
Availability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1438:1453,error,error,1453,https://qutip.org,https://github.com/qutip/qutip/pull/1438,1,['error'],['error']
Availability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1270:1458,error,error,1458,https://qutip.org,https://github.com/qutip/qutip/pull/1270,1,['error'],['error']
Availability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [] Please add tests to cover your changes if applicable.; - [ x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; Updating tests in the metrics,superop_reps and tensor modules to pytests. **Changelog**; - Updating unittests to pytests; - Rechecking environment dependent expected failure cases",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487:962,failure,failure,962,https://qutip.org,https://github.com/qutip/qutip/pull/1487,1,['failure'],['failure']
Availability,"**Checklist**; This rewrite the stochastic solver to use the class interface. - `smesolve`, `ssesolve` have been rewritten to match other solver with matching class interface `SMESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:386,avail,available,386,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['avail'],['available']
Availability,"**Describe the bug**. Running tests for qutip 4.6.2, on linux (Debian unstable), all tests pass successfully, but overall tests return error code 1, which would be treated as test failure. For instance, running tests via `python3 -c ""import qutip.testing; qutip.testing.run()""`; ```; ============================= test session starts ==============================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3.9; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/projects/misc/build/qutip/.pybuild/cpython3_3.9_qutip/build-test/.hypothesis/examples'); rootdir: /home/drew/projects/misc/build/qutip; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,"['error', 'failure']","['error', 'failure']"
Availability,"**Describe the bug**. When I try to make a tensor profuct of a large number of qubits, I get a segmentation fault. **To Reproduce**. ```python; from qutip import *; tensor([basis(2,0) for i in range(31)]); ```. The terminal out put is; ```; Fatal Python error: Segmentation fault. Current thread 0x000000011b71be00 (most recent call first):; File ""/Users/evanphilip/opt/miniforge3/lib/python3.8/site-packages/qutip/tensor.py"", line 116 in tensor; File ""<stdin>"", line 1 in <module>; zsh: segmentation fault python3 -q -X faulthandler; ```. **Your Environment**. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: None; Matplotlib Version: 3.3.2; Python Version: 3.8.6; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/evanphilip/opt/miniforge3/lib/python3.8/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406:108,fault,fault,108,https://qutip.org,https://github.com/qutip/qutip/issues/1406,5,"['error', 'fault']","['error', 'fault', 'faulthandler']"
Availability,"**Describe the bug**; As described in the title, ``file_`` in ``_file_list().add(file_)`` already has the extension ``'.pyx'`` (this is done by _import_str() in qobjevo_codegen.py), it is unnecessary to add yet another suffix. **To Reproduce**; This can be verified by add a line printing out ``file_`` in ``_file_list().clean()`` ; then run any test that can trigger it (for example ``test_QobjEvo_with_state()``) and observe the output. **Expected behavior**; Should only have a single ``'.pyx'`` in ``file_``. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.0.dev0+8e181cc4; Numpy Version: 1.19.1; Scipy Version: 1.5.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.1; Python Version: 3.8.5; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\berry\PycharmProjects\qutip\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. **Additional context**; I discovered this when dealing with some test failures in windows, it seems that there are multiple problems in ``qobjevo.py`` (actually, what I really wanted to figure out in the first place was that some compiled modules would be deleted before being imported). Anyway, I will update this issue whenever I make any progress.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1354:1711,failure,failures,1711,https://qutip.org,https://github.com/qutip/qutip/issues/1354,1,['failure'],['failures']
Availability,"**Describe the bug**; AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1' . **To Reproduce**; Install the latest version of scipy 1.5.0, install qutip, and run the tests. The following fail due to the AttributeError specified above:; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[True-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[True-10-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-10-rand_bra]; - test_brtools.py::test_zheevr; I stopped running the tests after these errors appear, and I don't know if it causes other tests to fail as well.; The test_zheevr shows another error, but it fixes when using a previous version of scipy (e.g. 1.3). . The terminal out put is; ```; > fn = getattr(_sparsetools, self.format + '_matmat_pass1'); E AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1'. /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip/fastsparse.py:197: AttributeError; ```. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.0; Scipy Version: 1.3.0 (error fixed); Scipy Version: 1.5.0 (error present); Cython Version: 0.29.20; Matplotlib Version: 3.2.2; Python Version: 3.6.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: Fal",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304:781,error,errors,781,https://qutip.org,https://github.com/qutip/qutip/issues/1304,2,['error'],"['error', 'errors']"
Availability,"**Describe the bug**; Currently qutip is requiring scipy > 1.12 and in the CI checks scipy <1.5 is being checked. There was a bug in scipy 1.4 See [.Stackoverflow error](https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an) , [bug report ](scipy/scipy#8205) that has been fixed by this [solution](scipy/scipy#11304) in the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoper",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:163,error,error,163,https://qutip.org,https://github.com/qutip/qutip/issues/1495,4,"['ERROR', 'error']","['ERROR', 'error', 'error-parameter-']"
Availability,"**Describe the bug**; Hi world, I can't install qutip on my computer with this features:; System information; Python	3.7.6 (default, Jan 8 2020, 13:42:34) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	Darwin Version 10.15.7; CPUs	8; Memory (Gb)	16.0; Wed Dec 09 15:00:15 2020 EST. Any help?. Building wheels for collected packages: qutip; Building wheel for qutip (PEP 517) ... error; ERROR: Command errored out with exit status 1:; command: /Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py build_wheel /var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/tmpxkq1pgdg; cwd: /private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-install-ehditow9/qutip; Complete output (299 lines):; running bdist_wheel; running build; running build_py; creating build; creating build/lib.macosx-10.9-x86_64-3.7; creating build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/cite.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/permute.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/three_level_atom.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/version.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/bloch.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/rhs_generate.py -> build/lib.macosx-10.9-x86_64-3.7/qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:375,error,error,375,https://qutip.org,https://github.com/qutip/qutip/issues/1404,3,"['ERROR', 'error']","['ERROR', 'error', 'errored']"
Availability,"**Describe the bug**; I am simply trying to run the code published on the qutip documentation website for the [https://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html](url). I copied the code under the section: Pre-computing the Floquet modes for one period,; and that worked fine, but then at the end of the section they point towards the function 'fsesolve' which would be the 'all-in-one' version of the code given previously, however it doesnt work and i get the error:. ```; ~\anaconda3\lib\site-packages\qutip\sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 297 if ode_args:; 298 r.set_f_params(*ode_args); --> 299 r.set_initial_value(initial_vector, tlist[0]); 300 ; 301 e_ops_data = []. KeyError: 0; ```. The code:. ```; import numpy as np; from matplotlib import pyplot; import qutip. delta = 0.0 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 0.25 * 2*np.pi; omega = 1.0 * 2*np.pi; T = 2*np.pi / omega; tlist = np.linspace(0.0, 10 * T, 101); psi0 = qutip.thermal_dm(2,0). H0 = - delta/2.0 * qutip.sigmax() - eps0/2.0 * qutip.sigmaz(); H1 = A/2.0 * qutip.sigmax(); args = {'w': omega}; H = [H0, [H1, lambda t, args: np.sin(args['w'] * t)]]. output = qutip.fsesolve(H, psi0, tlist, [], args); p_ex = output.expect[0]; ```. **Your Environment**; QuTiP Version: 4.5.3; Numpy Version: 1.18.5; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.2.2; Python Version: 3.8.3; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64). **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1663:478,error,error,478,https://qutip.org,https://github.com/qutip/qutip/issues/1663,1,['error'],['error']
Availability,"**Describe the bug**; I need at some point to modify the internal representation of a state, so I use `myobject.full()`, then I modify the matrix, and recreate a state using `Qobj` (let me know if it's not the usual way to proceed). However, it turns out that the output state does not behave like the initial state: for example I can't apply ptrace on it. Here is a minimal working example:; ``` python; from qutip import *; init_state = tensor(basis(2,0), basis(2,0)); copy_state = Qobj(init_state.full()); init_state.ptrace(0) # No error; copy_state.ptrace(0) # Error !; ```. Demo in the terminal:; ```; In [39]: from qutip import * . In [40]: init_state = tensor(basis(2,0), basis(2,0)) . In [41]: init_state ; Out[41]: ; Quantum object: dims = [[2, 2], [1, 1]], shape = (4, 1), type = ket; Qobj data =; [[1.]; [0.]; [0.]; [0.]]. In [42]: copy_state = Qobj(init_state.full()) . In [43]: copy_state ; Out[43]: ; Quantum object: dims = [[4], [1]], shape = (4, 1), type = ket; Qobj data =; [[1.]; [0.]; [0.]; [0.]]. In [44]: init_state.ptrace(0) ; Out[44]: ; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[1. 0.]; [0. 0.]]. In [45]: copy_state.ptrace(0) ; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-45-5b91e5c389a5> in <module>; ----> 1 copy_state.ptrace(0). /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in ptrace(self, sel, sparse); 1353 return q.tidyup() if settings.auto_tidyup else q; 1354 else:; -> 1355 return _ptrace_dense(self, sel); 1356 ; 1357 def permute(self, order):. /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in _ptrace_dense(Q, sel); 2197 rd = list(rd); 2198 if isket(Q):; -> 2199 vmat = (Q.full(); 2200 .reshape(rd); 2201 .transpose(sel + qtrace). TypeError: 'numpy.float64' object cannot be interpreted as an integer. ```. **Expected",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1358:535,error,error,535,https://qutip.org,https://github.com/qutip/qutip/issues/1358,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Describe the bug**; I'm trying to get the spectrum of a qubit inside a cavity. For certain values of coupling it works, but for others not. I think this is a problem of tolerance for small numbers, i have set `qutip.settings.auto_tidyup = False` and `qutip.settings.atol = 1e-100`. **To Reproduce**; When it doesn't work it returns:; ```; <ipython-input-3-eaf63cc10951> in do_spectrum(eta, T, w_l, lowfilter); 88 #####################; 89 ; ---> 90 spec_cavity = spectrum(H_d, w_l, c_ops, Am_O, Ap_O); 91 spec_qubit = spectrum(H_d, w_l, c_ops, Sm_O, Sp_O); 92 . ~/.local/lib/python3.8/site-packages/qutip/correlation.py in spectrum(H, wlist, c_ops, a_op, b_op, solver, use_pinv); 541 ; 542 if solver == ""es"":; --> 543 return _spectrum_es(H, wlist, c_ops, a_op, b_op); 544 elif solver == ""pi"":; 545 return _spectrum_pi(H, wlist, c_ops, a_op, b_op, use_pinv). ~/.local/lib/python3.8/site-packages/qutip/correlation.py in _spectrum_es(H, wlist, c_ops, a_op, b_op); 1185 ; 1186 # correlation; -> 1187 corr_es = expect(a_op, es); 1188 ; 1189 # covariance. ~/.local/lib/python3.8/site-packages/qutip/expect.py in expect(oper, state); 75 ; 76 elif isinstance(oper, Qobj) and isinstance(state, eseries):; ---> 77 return _single_eseries_expect(oper, state); 78 ; 79 elif isinstance(oper, (list, np.ndarray)):. ~/.local/lib/python3.8/site-packages/qutip/expect.py in _single_eseries_expect(oper, state); 130 out = eseries(); 131 ; --> 132 if isoper(state.ampl[0]):; 133 out.rates = state.rates; 134 out.ampl = np.array([expect(oper, a) for a in state.ampl]). IndexError: index 0 is out of bounds for axis 0 with size 0; ```. **Expected behavior**; The expecter behavior is the normal returns of the spectrum, as it happens with other values of coupling. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388:171,toler,tolerance,171,https://qutip.org,https://github.com/qutip/qutip/issues/1388,1,['toler'],['tolerance']
Availability,"**Describe the bug**; I'm trying to run some example projects but consistently run into an issue with numpy. I'm quite new to numpy so I couldn't figure out a suitable fix. The following is taken from J. R. Johansson's tutorial 1 (Jaynes Cumming Model), which ran on numpy 1.81. I am currently running numpy 1.16.5. I also tested lower versions of numpy down to 1.14.0; **To Reproduce**; Here is the code to reproduce it:. ```python; output = mesolve(H, psi0, tlist, c_ops, []). # find the indices of the density matrices for the times we are interested in; t_idx = where([tlist == t for t in [0.0, 5.0, 15.0, 25.0]])[1]; tlist[t_idx]. rho_list = array(output.states)[t_idx]; ```; The terminal out put is; ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-44-f8edfb054c33> in <module>; 1 # get a list density matrices; ----> 2 rho_list = array(output.states)[t_idx]. TypeError: must be real number, not Qobj; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1272:354,down,down,354,https://qutip.org,https://github.com/qutip/qutip/issues/1272,1,['down'],['down']
Availability,"**Describe the bug**; It looks like the pypi package doesn't have cython as a dependency?. **To Reproduce**; Do a ""pip3 install cython"" on a fresh ubuntu 20.04 install (i had already installed numpy and scipy). ** This is what happens when I try it**; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Downloading qutip-4.5.0.tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:303,Down,Downloading,303,https://qutip.org,https://github.com/qutip/qutip/issues/1246,3,"['Down', 'ERROR', 'error']","['Downloading', 'ERROR', 'errored']"
Availability,"**Describe the bug**; Running Qutip on an **M1** MacBook Pro on import I can get the following error:. File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/__init__.py"", line 144, in <module>; info = qutip.hardware_info.hardware_info(); File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/hardware_info.py"", line 123, in hardware_info; out = _mac_hardware_info(); File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/hardware_info.py"", line 48, in _mac_hardware_info; results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); IndexError: list index out of range. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.4; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.3; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip. **Additional context**; I was able to ""fix"" the issue by simply commenting out lines 48 and 49 in Qutip's hardware_info.py.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395:95,error,error,95,https://qutip.org,https://github.com/qutip/qutip/issues/1395,1,['error'],['error']
Availability,"**Describe the bug**; When applying `resolve_gates()` method to `QubitCircuit` containing the FREDKIN gate, the following error is produced: . ValueError: Gate RY requires one target. **To Reproduce**. ```python; from qutip.qip.circuit import QubitCircuit; A = QubitCircuit(3); A.add_gate(""FREDKIN"", targets=[0, 1], controls=[2]); A.resolve_gates(); ```. It might be a good idea to check this for other gates as well as look into the internal of `resolve_gates` to clean/modify it a bit. . Note: As requested by @BoxiLi, first mentioned by me in #1318",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/issues/1330,1,['error'],['error']
Availability,"**Describe the bug**; When plotting the Bloch sphere with qutip and matplotlib >=3.3.0 the sphere appears deformed in z-direction.; This is a result of a change in matplotlib Axes3D: https://matplotlib.org/3.3.0/users/whats_new.html#d-axes-improvements. **To Reproduce**. ```python; import qutip; b = qutip.Bloch(); b.show(); ```. **Work around**; 1) downgrade to matplotlib 3.2.2; or; 2) set aspect ratio manually; ```python; import qutip; b = qutip.Bloch(); b.show(); if hasattr(b.axes, 'set_box_aspect'):; b.axes.set_box_aspect([1,1,1]); ```. **Environment**; QuTiP Version: 4.5.2; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.9; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1385:351,down,downgrade,351,https://qutip.org,https://github.com/qutip/qutip/issues/1385,1,['down'],['downgrade']
Availability,**Describe the bug**; `test_fileio` is failing on Windows because this use of `tempfile.NamedTemporaryFile` doesn't work on windows. The temporary files cannot be opened twice on Windows according to https://docs.python.org/3.8/library/tempfile.html#tempfile.NamedTemporaryFile.; https://github.com/qutip/qutip/blob/9e82f5b81955952833e25bb3eeff3fa24d36556b/qutip/tests/conftest.py#L194-L197; followed by; https://github.com/qutip/qutip/blob/9e82f5b81955952833e25bb3eeff3fa24d36556b/qutip/fileio.py#L70; results in a permission error. **To Reproduce**; Run `test_fileio.py` on windows. **Your Environment**; QuTiP Version: 4.6.0.dev0+6ad7f2b8; Numpy Version: 1.18.2; Scipy Version: 1.4.1; Cython Version: 0.29.20; Matplotlib Version: 3.2.1; Python Version: 3.7.2; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64). Do you have any idea on a replacement @jakelishman ?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1311:527,error,error,527,https://qutip.org,https://github.com/qutip/qutip/issues/1311,1,['error'],['error']
Availability,**Describe the bug**; calling ptrace(0) should simply return the object. Instead it fails with an error. **To Reproduce**; import qutip as qp; qp.sigmax().ptrace(0). **Expected behavior**; expect it to return the existing object. **Your Environment**; QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.16; Matplotlib Version: 3.2.1; Python Version: 3.7.6; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Lior Ella\scoop\apps\miniconda3\4.5.12\envs\tfenv\lib\site-packages\qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1239:98,error,error,98,https://qutip.org,https://github.com/qutip/qutip/issues/1239,1,['error'],['error']
Availability,"**Describe the bug**; qutip fails to import with the following error:; ```; Python 3.9.6 (default, Jun 28 2021, 19:24:41) ; [Clang 12.0.5 (clang-1205.0.22.9)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/homebrew/lib/python3.9/site-packages/qutip/__init__.py"", line 115, in <module>; info = qutip.hardware_info.hardware_info(); File ""/opt/homebrew/lib/python3.9/site-packages/qutip/hardware_info.py"", line 133, in hardware_info; out = _mac_hardware_info(); File ""/opt/homebrew/lib/python3.9/site-packages/qutip/hardware_info.py"", line 50, in _mac_hardware_info; results.update({'cpu_freq': int(float(os.popen('sysctl hw.cpufrequency'); IndexError: list index out of range; ```. This appears to be caused by Apple having removed hw.cpufrequency from the list of sysctl's (see below). **To Reproduce**; Installed qutip using homebrew/pip3 (after using the workaround of specifying OPENBLAS properly before building scipy etc... so that part is all sorted). Then python3 and import qutip. ```python; from qutip import identity; print(identity(2)); ```; The terminal output (aftrer I hacked up a workaround for this issue):; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[1. 0.]; [0. 1.]]; ```. **Expected behavior**; qutip successfully initializes :-). **Your Environment**; Please use `qutip.about()` to get the information about your environment and paste it here.; ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead deve",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606:63,error,error,63,https://qutip.org,https://github.com/qutip/qutip/issues/1606,1,['error'],['error']
Availability,"**Describe the issue**; Hello,; I'm studying the classical case of a driven qubit, and i want to know the steady state of the system. **To Reproduce**; I declared the following Hamiltonian; ```python; H_0 = 0.5 * h * w_eg * sigmaz(); H_1 = A * sigmax(); def H_1_t(t, args):; return cos(w * t). H = [H_0, [H_1, H_1_t]]; ```; but using `rho_ss = steadystate(H, c_ops)` returns the error; ```; TypeError: Solving for steady states requires Liouvillian (super) operators; ```; This implies that i can't see the spectrum through `spectrum(H, w, c_ops, sigmap(), sigmam())` because it calculates the steady state first, and so returns the same error.; A way to do that is by calculating the propagator and then the FFT of the correlation function; ```python; U = propagator(H, 2 * pi / w, c_ops); rho_ss = propagator_steadystate(U); rho_ss; corr = correlation_2op_1t(H, rho_ss, t, c_ops, sigmap(), sigmam()); wlist1, spec1 = spectrum_correlation_fft(t, corr); ```. Of course using `steadystate(H, c_ops)` function is much simpler and straightforward, and my question is if is it normal that `steadystate(H, c_ops)` returns error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1377:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/issues/1377,3,['error'],['error']
Availability,"**Describe the issue**; I tried to Execute the code ""Time-dependent master equation: Landau-Zener transitions"" in QuTiP HP's Example notebooks(http://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/landau-zener.ipynb) ,and I get the following error message. ; Could someone help please?. Error message:; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-7-f9c1fc837f05> in <module>; 1 start_time = time.time(); ----> 2 p_ex = qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, tlist, ""dynamics""); 3 print('dynamics: time elapsed = ' + str(time.time() - start_time)). <ipython-input-5-8172adafcb2d> in qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, tlist, option); 33 if option == ""dynamics"":; 34 # evolve and calculate expectation values; ---> 35 output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], H_args); 36 ; 37 return output.expect[0]. ~\Anaconda3\lib\site-packages\qutip\mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). ~\Anaconda3\lib\site-packages\qutip\mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). ~\Anaconda3\lib\site-packages\qutip\qobjevo.py in compile(self, code, matched, dense, omp); 1557 self.args,; 1558 self.dynamics_args,; -> 1559 self.tlist); 1560 coeff_files.add(file_); 1561 self.coeff_files.append(file_). ~\Anaconda3\lib\site-packages\qutip\qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); 123 coeff_obj, filename = _import_str(code, ""cqobjevo_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1244:266,error,error,266,https://qutip.org,https://github.com/qutip/qutip/issues/1244,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Describe the issue**; We use subprocess for the LaTeX plotting procedure. But the current error message for a failed subprocess is very ambiguous, which makes it very hard to debug. For illustration purpose, I deliberately change the following line so that the input pdf file has a wrong name.; https://github.com/qutip/qutip/blob/403e466becbc5d36947ca15b9211d884df83f91a/qutip/qip/circuit_latex.py#L172; I changed it to e.g. `in_file = ""pdf-that-does-not-exist.pdf""`. Running the code, the output error message is; ```; CalledProcessError: Command '('magick', '-density', '100', 'aqcirc.pdf', 'qcirc.png')' returned non-zero exit status 1.; ```; This is not very useful since the exit status 1 can have many reasons. It can also be that an additional dependency is missing (which is the reason I started to debug at the first place).; What I would like to see is the real system error message:; ```; magick: unable to open image 'pdf-that-does-not-exist.pdf': No such file or directory; ```. **Possible solution**; I didn't find a nice solution for this. Simply changing the parameter of `subprocess.run` to `stderr=subprocess.PIPE` doesn't work for me. I have to catch the exception and print the stderr message:; ```; def _run_command(*args, **kwargs):; try:; functools.partial(subprocess.run, check=True, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)(*args, **kwargs); except subprocess.CalledProcessError as err:; raise RuntimeError(err.stderr); ```; which gives me the output; ```; RuntimeError: b""magick: unable to open image 'aqcirc.pdf': No such file or directory @ error/blob.c/OpenBlob/3496.\r\n""; ```; It's ok but still weird. I guess I overlooked some feature of `subprocess`. @jakelishman I'm wondering if you have a better solution?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1426:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/1426,4,['error'],['error']
Availability,"**Description**. - Add the `reset` function to `qutip.settings` that is described in the documentation but was never implemented. ; - Add `save`, `load` to `qutip.settings`, allowing to save in alternate files.; - The list of configuration that can be saved in qutiprc is generated when loading the module.; - Ungraded the `configrc` functionalities to allow other filenames and support more than a few hard coded `qutip.settings`'s keys.; - Reading `qutiprc` will raise warning instead of errors when unknown keys. So if we remove keys in v5, old file will not cause crashes when importing qutip for the few that use qutiprc. . **Changelog**; Add `reset` to `qutip.settings`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1289:490,error,errors,490,https://qutip.org,https://github.com/qutip/qutip/pull/1289,1,['error'],['errors']
Availability,"**Description**. - Fixed some errors in the transcription of the husimi Q and Wigner W functions for spins into code.; - Ensure Q and W functions are normalized over (theta, phi).; - Add tests for correctness and normalization of spin Q function.; - Add tests for normalization and real-ness of spin W function. Correctness is established by comparing the overlap of two states and the overlap of their Wigner functions.; - Spin Q function tests take ~11s to complete, spin Wigner tests take ~10s to complete on my laptop. **To do**; - [x] Decide if the `spin_wigner` function should return only real values be default (as is currently done for the `spin_q_function`).; - [x] Find a simple test for correctness of the spin W function.; - [x] Decide whether to integrate the W function normalization in `_rho_kq` rather than at the top level. We divide all terms by `(2*j + 1)` only to end up multiplying it back out at the end which is a waste of time (`_rho_kq` is called `d**2` times, `d=2*j+1`) . The benefit of leaving it as-is is that it reads like most definitions in literature.; - [x] Update docstring for spin Q function.; - [x] Decide if normalization factor for Wigner and spin Q function should be included (Davis et al. suggest the normalization factor is only introduced during integration: Eq 14 https://arxiv.org/abs/2008.10167). **Related issues or PRs**; This issue was raised in another PR #1195 which didn't resolve this issue as intended. The original issue this fixes was #1128. **Changelog**; Fixed error for calculation of Husimi `spin_q_function` and `spin_wigner`.; Added tests to `tests/test_wigner.py` for these functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632:30,error,errors,30,https://qutip.org,https://github.com/qutip/qutip/pull/1632,2,['error'],"['error', 'errors']"
Availability,**Description**. Add a short note about the availability of v5.0.0a1 on PyPI with link to the changelog in both the README and the installation instruction from the documentation.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2080:44,avail,availability,44,https://qutip.org,https://github.com/qutip/qutip/pull/2080,1,['avail'],['availability']
Availability,"**Description**. Add capacity to merge stochastic solver results. While adding it found a few bugs/ issues with the merge and weight that I fixed:. - When one result had trajectories and the other did not, but both stored the states, the merged result had no states.; - When merging 2 results with default ratio, that ratio would depend on whether the `improved_sampling` options was used.; - When the no-jump probability was 1, the total weight as measured by `sum(res.runs_weight)` would not be one.; - A no-jump probability over 1 by numerical error would break the evolution.; - Error in the weight application in the `_target_tolerance_end`. The last 3 are easy fix. For the default weight when merging, using the `num_trajectories` instead of `_num_rel_trajectories` is enough.; But I tried the approach of not counting the no-jumb evolution as a trajectory. This has many small advantages:; - All `result.trajectories` are the same, the first few are not special. ; - All seeds are used.; - No confusing on the merging ratio.; - Keeping the absolute and relative weight apart simply part of the merging.; - The progress bar run up to the expected number. I also tired to simplify the weight management by accumulating per data then split by abs, rel. This makes it easier to add averaged data (nmmc's trace). Seeing the change in lines number in `multitrajresults.py` it seems to be about the same. I am also thinking of removing the weight from trajectories and making it only a multitraj property:; `multitraj.add((seed, traj, rel_weight))`; `multitraj.add_deterministic(traj, abs_weight)`. The marginal / trace would stay in the trajectory, but not merging those with weight feel simpler to me. @pmenczel ; This PR larger than I expected, do you want me to break it into smaller ones for review or are you fine like this.; What do you think about splitting the no-jump / abs traj from the normal ones?; What about having the weights in the `add` instead of the trajectories?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2455:547,error,error,547,https://qutip.org,https://github.com/qutip/qutip/pull/2455,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Description**. Adding ket to scalar work by adding the scalar to all non-zero entries.; This operation is not well defined and modify the original object, (see #2208).; This fix by having the operation raising an error instead. **Related issues or PRs**; Fix #2208",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2209:215,error,error,215,https://qutip.org,https://github.com/qutip/qutip/pull/2209,1,['error'],['error']
Availability,"**Description**. Fix an error in 1 time correlations function's equations.; Make clearer that 2 times correlation functions always return 2D array even when `tlist` is `None`.; Add the `:class:` descriptor to `Qobj`, `QobjEvo` in docstrings.; Remove `HEOMSolver` from the list of supported input of `correlation_3op`. **Related issues or PRs**; Fix #2018",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2021:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/2021,1,['error'],['error']
Availability,"**Description**. Functions in `random_objects.py` deal with the parameters `N` and `dims` in different ways. Here I unify their interface implementing the following changes:. 1) Both `N` and `dims` parameters are now optional, with default value `None` for all functions.; 2) If both are given, we check if they match. An error is raised if they don't.; 3) If only one of them is given, the other one receives an appropriate value.; 4) If none of them are given, an error is raised requesting one of them. Functions `rand_super` and `rand_super_bcsz` were left unchanged. I believe it's better to leave their changes for v5.0, when the parameters `N` and `dims` will be substituted by `dimensions`. **Related issues or PRs**; Fix #1838. **Changelog**; Unify interface from random_objects.py module.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1846:322,error,error,322,https://qutip.org,https://github.com/qutip/qutip/pull/1846,2,['error'],['error']
Availability,"**Description**. Hi, I would like to contribute to the issue https://github.com/qutip/qutip/issues/2389 as part of the UnitaryHack2024. I have incorporated a basic use of gates module to guide-basics.rst and a table of the available gates, with and example of how to use a Hadamard gate. Let me know if there is anything else that have to be done. **Related issues or PRs**; https://github.com/qutip/qutip/issues/2389",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441:223,avail,available,223,https://qutip.org,https://github.com/qutip/qutip/pull/2441,1,['avail'],['available']
Availability,"**Description**. In the recently released numpy 1.22.0 the `__config__` attribute for the; published wheels (at least on the linux platforms I'm using) have; removed the `blas_opt_info` attribute and are instead publishing; identical information in the `blas_ilp64_opt_info` attribute. Running; qutip with the latest numpy release on these platforms was causing an; attribute error when `_blas_info()` is called as; `numpy.__config__.blas_opt_info` doesn't exist in the installed numpy.; This commit fixes this by first checking if the new name exists and; using that to get the blas opt info, and then trying the name available; in previous releases. This should maintain compatibility with older; numpy releases but fix the issue when running with 1.22.0. **Changelog**. Fix compatibility with numpy configuration in numpy's 1.22.0 release",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752:376,error,error,376,https://qutip.org,https://github.com/qutip/qutip/pull/1752,2,"['avail', 'error']","['available', 'error']"
Availability,"**Description**. Merge master at after #1847 into `dev.major`. **Notes**. - qip's changes are not kept, this part is still the same state as it was before the merge. Any improvement that were added to master should instead be pushed to qutip/qutip-qip.; - The tests now consider warning as error, this cause other tests to fail, but they run fine without this. ; - Documentation is still at master's state.; - When needed, change from fastsparse to data layer where made as minimally as possible: steadystate, steadystate_floquet, floquet, krylovsolve, etc. use rough shims. **Todo**. - [x] Add back .coveragerc; - [x] Turn off warnings-are-errors flag in tests; - [x] Fix steadystate tests (@AGaliciaMartinez); - [x] Merge in #1837 from master (adding transparency options to points and vectors on the Bloch sphere).; - [x] Fix [qutip/core/cy/openmp/src/zspmv_openmp.cpp](https://github.com/qutip/qutip/pull/1850/files#diff-df17c9d6ec3977033ce197f9a782cd99c0573131ab691cc8fbeeb4b3f0a5c943). **Todo (post PR merge)**. - [x] HEOM: Files where pulled, but any issue was dealt by commenting the code. All related tests are skipped. (@hodgestar); - [x] HEOM: Documentation plots were commented out -- check all docs thoroughly. (@hodgestar); - [x] Steadystate: Test fails, there seems to be ~3 bugs that I could not fix in time.; - [x] Update documentation to build on QuTiP 5 (@hodgestar); - [ ] Thoroughly check Bloch and Bloch3d. (@hodgestar); - [x] Remove _pyxbuilder.py (@ericgig); - [x] Remove legacy bloch_redfield solver (@ericgig); - [x] Fix test warnings and turn warnings-are-errors back on; - [x] Fix doc warnings and turn warnings-are-errors back on; - [x] QIP: Remove qip and qip docs. (@BoxiLi); - [x] Get to the bottom of the Windows PermissionErrors when compiling string coefficients",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850:290,error,error,290,https://qutip.org,https://github.com/qutip/qutip/pull/1850,4,['error'],"['error', 'errors']"
Availability,**Description**. Prepare the 4.6.1 release. **Related issues or PRs**. * PR #1498 (fixed a bug in old Scipy/MKL eigh combinations) - https://github.com/qutip/qutip/pull/1498; * PR #1501 (fixed some errors in QIP gate definitions) - https://github.com/qutip/qutip/pull/1501; * PR #1505 (fixed some documentation build errors) - https://github.com/qutip/qutip/pull/1505; * PR #1506 (fixed some test warnings) - https://github.com/qutip/qutip/pull/1506; * PR #1510 (added the [full] pip install target) - https://github.com/qutip/qutip/pull/1510; * PR #1511 (updated the README) - https://github.com/qutip/qutip/pull/1511; * PR #1513 (graft qutip-doc into qutip) - https://github.com/qutip/qutip/pull/1513; * PR #1541 (fix sdist release) https://github.com/qutip/qutip/pull/1541; * PR #1542 (add Simon as author) https://github.com/qutip/qutip/pull/1542. **Changelog**. Version 4.6.1.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1543:198,error,errors,198,https://qutip.org,https://github.com/qutip/qutip/pull/1543,2,['error'],['errors']
Availability,"**Description**. The aim of this project is to enhance the capabilities of qutip's HEOM implementation by introducing a set of tools that offer the option to simulate arbitrary spectral densities or correlation functions. . To achieve this the main idea is to fit our wanted spectral density by a set of underdamped Drude-Lorentz spectral densities or correlation functions. The idea is that the user will supply his desired spectral density or correlation function and the tools will automatically do the fit and construct the corresponding HEOM bath. Guesses ffor the fit and the number of terms will be decided automatically if the user does not specify them. To decided on the number of terms, we will used the normalized root mean square error as a measure of the goodness of the fit. . I also added functions to bosonic bath to quickly obtain the correlation function, power spectrum and spectral density for the existing bosonic baths . **Note**. Those tests fail because mpmath is not in the requirements, it is needed because the scipy version of the Rienmann zeta function doesn't take complex arguments (https://github.com/scipy/scipy/issues/9182). **Related issues or PRs**. The Qutip tutorial notebooks are updated to show this new functionality in (https://github.com/qutip/qutip-tutorials/pull/72)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260:743,error,error,743,https://qutip.org,https://github.com/qutip/qutip/pull/2260,1,['error'],['error']
Availability,"**Description**. We have steadystate tests that fail almost always in CI on Python 3.9 with OpenMP and MKL, and sometimes with just Python 3.9 and MKL. Issue is currently hard to reproduce locally. **Related issues or PRs**; * Test failures seen in #1689 and elsewhere. **Progress so far**; * Fixed a small issue in steadystate tests so that I can use pytest-repeat to run `--count=100` on the steadystate tests in the hopes of reproducing the bug locally.; * Removed mutable default c_ops arguments for steadystate and liouvillian.; * Fix reference to method in _pseudo_inverse_sparse.; * ~~Only set method in pseudo_inverse if one is explicitly defined.~~ (revert). **Changelog**; TODO: Write the changelog once we understand properly what is going on.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694:232,failure,failures,232,https://qutip.org,https://github.com/qutip/qutip/pull/1694,1,['failure'],['failures']
Availability,"**Description**; - The plotting method is made more robust.; - Add `pulse_mode` as a wrapper for spline_kind, for discrete and continuous pulses. They are more friendly names for experimentalists.; - Add `num_qubits` as a replacement for `N`. In QuTiP capital letter are used for operators, like `H` for Hamiltonian. Due to historical reason, `N` is used in `qip` for the number of qubits. We would like to replace it with `num_qubits` in `qutip_qip`. Start from this wrapper and promoting the usage of this in notebooks guide. **Changelog**; Minor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446:52,robust,robust,52,https://qutip.org,https://github.com/qutip/qutip/pull/1446,1,['robust'],['robust']
Availability,**Description**; 1) Changes in floquet_master_equation_rates to make it faster.; 2) Correction transposition errors in floquet_master_equation_tensor and changes to make it faster. NB: This version works only for 1 rate matrix but could be generalized easily.; 3) Correction in floquet_markov_mesolve. The basis change that returns the results in the computational had errors. NB: Results are still given in the interaction picture. **Related issues or PRs**. **Changelog**; Fixed transposition error in floquet_master_equation_tensor; Fixed basis change error in floquet_markov_mesolve; Made floquet_master_equation_rates faster; Made floquet_master_equation_tensor faster,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248:109,error,errors,109,https://qutip.org,https://github.com/qutip/qutip/pull/1248,4,['error'],"['error', 'errors']"
Availability,"**Description**; A test was failing since the numpy 2.1 release on windows. ; It seems to be related the the way low level libraries are linked, a lower precision was used on windows... Loosening the ODE tolerance fix the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2516:204,toler,tolerance,204,https://qutip.org,https://github.com/qutip/qutip/pull/2516,1,['toler'],['tolerance']
Availability,"**Description**; Add `krylov` method as an `Integrator` for `SeSolver` porting `krylovsolve` to v5 format. The state evolution code was rewritten to use the qutip's data object instead of numpy arrays, but is otherwise the same. Since an integrator can be used without knowing the length of the evolution, some changes where as to when the krylov matrices are recomputed. Instead of choosing the step length so the error of the whole evolution is under `atol`, it is chosen so each steps stays under it and an options is available to compute it only once or at each step. A default `krylov_dim` was needed for the integrator, so I set it the scale as the square root of the size of the system. This is not ideal, but seems to work fine. When using it through `krylovsolve`, `krylov_dim`is a required parameter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/pull/1986,2,"['avail', 'error']","['available', 'error']"
Availability,"**Description**; Add a `Solver` class for better task distribution in `sesolve` and `mesolve`. `sesolve`, `mesolve`, etc. are presently mostly independent: each create their time dependant system, the function to integrator with scipy's ode solver, loop over the `tlist` and store results. With this PR, the `[se/me]solve` functions will reuse most of the code and be more modular.; We already have a `Result` class to manage e_ops and store result, `Integrator` to solve the ode system. `QobjEvo` can support any time-dependant format we support. This PR introduce a new class `Solver` to join all these. Basis usage looks like:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); result = solver.run(psi, tlist, e_ops=e_ops); result.expect; ```. It can also do step evolution:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); solver.start(psi, t0); psi_t1 = solver.step(t1); psi_t2 = solver.step(t2, args=new_args) # Can be inefficient depending on integrator.; psi_t3 = solver.step(t3, options=new_opt) # Inefficient but supported.; ```; When stepping, the output is always the state as `Qobj`. The solver class promote ket state to density matrices when the rhs is a super-operator. `rhs` support `Qobj` and `QobjEvo`, but not list or function. This PR also add `MeSolver` and `SeSolver` classes, but they are very light:; `MeSolver(H, c_ops)` is equivalent to `Solver(liouvillian(H, c_ops))`. `Solver` store a list of available `Integrator` as a class property. `Solver.avail_integrator` has all integrators available to all solvers. `SeSolver.avail_integrator` has all these with those registered directly to `SeSolver`. This is to allow Integrator for specific system. We could think for the floquet sesolve method to be made into an integrator specific to `SeSolver`. . The interface for `sesolve` and `mesolve` is mostly unchanged, but `progress_bar` keyword is moved to an options and the `_safe_mode` keyword is removed. **Changelog**; Added `Solver` class.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1700:1444,avail,available,1444,https://qutip.org,https://github.com/qutip/qutip/pull/1700,2,['avail'],['available']
Availability,"**Description**; Add a lock for creating string coefficient. This allow to use the coefficient inside a parallel loop without issues.; The lock use `filelock` which works across processes, so it's safe to use with parallel coming from outside python.; The lock is per file, so different coefficient can compile in parallel. If there is a conflict, the first process will create and compile the coefficient and the other will use it (raising a hash collision error if not actually the same string.). `filelock` is a new requirement for runtime compilation. **Related issues or PRs**; #1963",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968:458,error,error,458,https://qutip.org,https://github.com/qutip/qutip/pull/1968,1,['error'],['error']
Availability,"**Description**; Add a variant to `matmul` specialised for case where the right matrix is a column stacked hermitian matrix, and the output is the same. Such as for `mesolve` using super operators. Open solvers `mesolve`, `brmesolve`, `smesolve` and `fmesolve` all have a new options `use_herm_matmul` to use this operation. The default is `False` since we cannot easily check for exception (we can't test that a time dependant Hamiltonian is Hermitian, ...). With large enough systems, this result in a visible speed up:; ```; >>> N = 100; >>> H = qt.rand_herm(N, density=3/N); >>> c_ops = [qt.destroy(N)]. >>> qt.mesolve(H, qt.basis(N, N-2), [0, 10], c_ops=c_ops, options={""use_herm_matmul"": True}).stats[""run time""]; 0.8431086540222168; >>> qt.mesolve(H, qt.basis(N, N-2), [0, 10], c_ops=c_ops, options={""use_herm_matmul"": False}).stats[""run time""]; 1.0559077262878418. qt.smesolve(H, qt.basis(N, N-2), [0, 2], sc_ops=c_ops, ntraj=1, options={""use_herm_matmul"": True}).stats[""run time""]; 0.9043550491333008; qt.smesolve(H, qt.basis(N, N-2), [0, 2], sc_ops=c_ops, ntraj=1, options={""use_herm_matmul"": False}).stats[""run time""]; 2.111673355102539; ```. This is a use case for the capacity to dispatch on `Data` added in #2157. When `herm_matmul` is not available, it can be better to fallback on `matmul` using the same type than to do conversions between data types. For cupy, moving the data to the cpu to halves the work is probably not worth it. ; **Related issues or PRs**; This is build on top of #2157, it should be merged first.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2173:1254,avail,available,1254,https://qutip.org,https://github.com/qutip/qutip/pull/2173,1,['avail'],['available']
Availability,"**Description**; Add data layer functions needed to update `steadystate` to use qutip's data layer. Most of `steadystate`'s methods solve the system `L(rho_ss) = 0` using different solver from numpy, scipy, mkl.; This add the `solve` dispatched function to wraps this operation at the data layer level.; For the `CSR` version, it gives access to all methods available in `scipy.sparse.linalg` and our mkl version.; For the `Dense` version, `solve` and `lstsq` from `numpy.linalg` are made available.; Options supported by numpy / scipy for each function are pass through:; `qutip.data.solve(A, B, method, options)` call `scipy.sparse.linalg.method(A, B, **options)`. Other methods of `steadystate` decompose the Liouvillian with either `eigen` or `svd`.; `svd` was added as a dispatched function, but only with specialization for `Dense`. ; I made a sparse version, but `svds` can't readily compute all singular values and does not respond well to splitting the problem into 2 like it was done for sparse eigensolver. . This PR only include the new dispatched functions, not updated `steadystate` using them or `Qobj` interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002:358,avail,available,358,https://qutip.org,https://github.com/qutip/qutip/pull/2002,2,['avail'],['available']
Availability,"**Description**; Add hypothesis strategies for data objects and some simple property-based tests for data operations. We aim for compatibility with numpy, but there are caveats in few different cases:. | Operations | Non-finites Equivalent | Notes |; | -- | -- | -- |; | Creation & negation | | No caveats |; | Equality checks | | The same tolerances must be specified |; | Addition & subtraction | Yes | |; | Scalar multiplication & division | Yes | CSR may raise an exception if the scalar is non-finite |; | Matrix multiplication | Not tests | Magnitude range is restrict to ensure precision |; | Trace, adjoint, transpose, conj & copy | | No caveats |. In some cases we also need to ignore warnings raised by numpy about operations with `nan` and `inf` when calculating the expected result. **Related issues or PRs**; - None",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957:340,toler,tolerances,340,https://qutip.org,https://github.com/qutip/qutip/pull/1957,1,['toler'],['tolerances']
Availability,"**Description**; Add some `skipif` to bypass tests that were failing (segmentation faults) during the local testing of `qutip.testing.run()` that was failing in the zip version of #1241. I am on Mac with generic BLAS and no MKL. ; I have been installing it on a fresh conda environment with; ```; pip install -e .[development]; ```; which I think is better than ; ```; python setup.py develop; ```; and by the way maybe this is something that can be updated in the readme and docs.; ; My qutip.about reads:; ```; QuTiP Version: 4.5.1; Numpy Version: 1.15.4; Scipy Version: 1.4.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.2; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/github/qutip-4.5.1/qutip; ```; This PR could be included in the 4.5.1 version @Ericgig. . **Related issues or PRs**; This PR is related to #1241. **Changelog**; Add `skipif`in `pytest` on Mac with generic BLAS, avoiding segmentation fault during `qutip.testing.run()`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1255:83,fault,faults,83,https://qutip.org,https://github.com/qutip/qutip/pull/1255,4,['fault'],"['fault', 'faults']"
Availability,"**Description**; Add support for setting the numpy version in test runs. **Related issues or PRs**; * See #1694 for the strange steadystate test failures on Python 3.9, numpy 1.21.2 and on certain Azure VMs.; * See #1689 for earlier discussion of the above failures in an unrelated PR. **Changelog**; * Add support for specifying the numpy version in the CI test matrix and pin numpy to the latest 1.20.X by default.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1696:145,failure,failures,145,https://qutip.org,https://github.com/qutip/qutip/pull/1696,2,['failure'],['failures']
Availability,"**Description**; Add support for the up comming numpy v2:. - Allows qutip to be compiled with numpy 2, and pass tests.; - Test that binaries compiled with numpy 2 are compatible with numpy 1 at runtime. I did not update the requirement yet, it must be installed in `--no-build-isolation`.; When it's officially released, we will need to update `pyproject.toml` and `setup.cfg`, and possibly add test for np2 on windows and mac. Here are the changes that affect us:; - `np.array(.., copy=False)` no longer mean copy only if needed. `copy=None` was added for that.; - `np.trapz` was replaced by `np.trapezoid`. Since there are no overlaps, I opted to use `scipy.integrate.trapezoid` instead.; - `np.array(1, np.int32) * 2**33` will enforce the integer type and overflow.; - `Py_intptr_t` from `python.h` is no longer available through numpy cython interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421:815,avail,available,815,https://qutip.org,https://github.com/qutip/qutip/pull/2421,1,['avail'],['available']
Availability,"**Description**; Add test jobs for the familly packages (`qutip-qip`, `qutip-qoc`, `qutip-jax`) for PR in `qutip/qutip`.; Tests the development version or could be ran manually to test any version (tags / branch). This will cause a lot of PR to look bad with error outside their scope, but if we keep the other modules working, then this could be a useful tool.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2504:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/pull/2504,1,['error'],['error']
Availability,"**Description**; Add the capacity of stochastic solver to run from know noise or measurements.; In the lab, the measurement can be obtained, but that measurements is a mix of and expectation values and noise. The stochastic solver can be used to split these components to study the system. The new method for this is `SMESolver.run_from_experiment`. It works similarly to `run` of deterministic solver: it compute a single trajectory. It can take either `dW` or `measurement` as the noise input. (`dW` is the default). `dW` input is available with every integration method, but measurement input is limited to `euler`, `milstein`, `pred_corr`, `platen`. The measurement is `expect(m_ops, state_t) + dW / dt`. For `run_from_experiment` it has no choice but to take `state_t` at the start of the interval, but for the result for `smesovle`, it was taken at the end of the interval. I updated the `store_measurement` options to allow the user the choose where it is taken between `start`, `end` and `middle`. When `start` is used, the `run`'s result's measurement can be feed back to `run_from_experiment` to recompute the same trajectory. (The theory is the integral of the expectation value over the interval.). Another change in this PR is to keep the dW in the wiener and result class. We used to sum them into `W`, but the `dW` are what we use so it just end up being extra calls to `np.cumsum` and `np.diff`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2318:533,avail,available,533,https://qutip.org,https://github.com/qutip/qutip/pull/2318,1,['avail'],['available']
Availability,"**Description**; Add type hints to function that create `Qobj` (`states.py`, `operators.py`, `gates.py` and `random_object.py`).; I also ran `mypy` on these files and fixed easy issues (`Qobj * Qobj` -> `Qobj @ Qobj`). Some points to look at more closely: ; - We have a lot of `int, list of int, list of list of int, Space` etc. But what is actually accepted can change:; - `basis` can take super operators dimension to create an `operator-ket`, but not if `offset` is used.; Should we raise an error and officially not support these case or arrange it so offset is `supported`?; - Is `SpaceLike` an alias useful for these case or just confusing?; - Array of Qobj output have been changed to list of Qobj.; - I did not update most docstring. `qdiags` dims are `DimensionLike` in type hints, but `list` in the docstring.; - `jmat` return a single `Qobj` or a list of `Qobj`... For typing, it would be nicer if it always returned a single operator. There is also no advantage to computing the operators together.; - `numbers.Number` is not a valid type according to mypy etc. (`Qobj.__mul__` is always raising errors...)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2473:495,error,error,495,https://qutip.org,https://github.com/qutip/qutip/pull/2473,2,['error'],"['error', 'errors']"
Availability,"**Description**; Add warning messages went passing input to solver that moved / were renamed in v5.; Hopefully this should help with the transition. When the parameter affect the physical result, an error is raised instead of a warning.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2248:199,error,error,199,https://qutip.org,https://github.com/qutip/qutip/pull/2248,1,['error'],['error']
Availability,**Description**; Added tests for expect specialisations. The tests follow the structure in `test_mathematics` which helps developing new data . **Notes**; I changed the logic in `expect.pyx` to also raise `ValuError` when op is not a square matrix. `expect_csr` was crashing with a segment fault when passing a nonsquare matrix as `op`. I am not sure why this error was not being caught by the tests for `qutip.expect`. I guess this function does some check to the Qobj given as argument.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1626:290,fault,fault,290,https://qutip.org,https://github.com/qutip/qutip/pull/1626,2,"['error', 'fault']","['error', 'fault']"
Availability,"**Description**; Added tests for pow specialisation. I also changed the raised error to `ValueError` to be consistent with the rest of the specialisations (and in particular with trace that also raises `ValueError` if input matrix is not square). . The tests do not contemplate the cases where:; - n is not an integer (float): Float is cast to integer so: `pow_csr(matrix, 0.1) == pow_csr(matrix, 0)`. We may want to raise `TypeError` instead.; - n is not positive: `OverflowError` is raised instead of `TypeError`. This is due to how Cython works but we may want to raise TypeError for consistency with the rest of the code. For instance, raising `TypeError` in these cases is what NumPy does. What should we do?. **Related issues or PRs**; None. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Tests for pow specisalisation.; Pow now raises ValueError instead of TypeError if matrix is not square.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1622:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/pull/1622,1,['error'],['error']
Availability,"**Description**; Adds a --with-idxint-64 compilation option for building with 64-bit integer indices in the data layer. (Alternative to #1727); Instead of using a compile time environment variable, it contains files for both 32 and 64 int and choose at setup which to use. This way has the advantage that cython can keep track of the version used and recompile all file depending on it when changed.; With compile time environment variable, you can have file compiled with different type of int and only get error when trying to use them. Also 'cimporting' data is simpler since you don't need to define the variable. However, changing all the import location made diff a lot bigger than #1727. `qutip.settings.install['intsize']` will return 32 or 64 depending on the size of int used. **Changelog**; Added a compilation option for compiling with 64-bit integer.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1874:508,error,error,508,https://qutip.org,https://github.com/qutip/qutip/pull/1874,1,['error'],['error']
Availability,"**Description**; Adds hyperlinks for functions, classes, attributes etc. wherever possible. . - Deleted methods table. See [this comment](https://github.com/qutip/qutip/pull/1499#issuecomment-822679427). ; - Every function, class etc is linked by default method of ``:obj:`.some_func` ``; - Functions not in API doc are referenced as 'func_not_in_API'. ; - Added `TypeError` and `ValueError` etc. in docstrings when an error of either type is raised by a function. Most of these might not be needed as [this link](https://numpydoc.readthedocs.io/en/latest/format.html#raises) advises to provide information about only the obvious errors. I read the link after making the changes. If needed, the new additions can be removed from the docstrings. . **Related issues or PRs**; [One of the fixes for issue 71 in documentation](https://github.com/qutip/qutip-doc/issues/71). . **Changelog**; Add hyperlinks in documentation and errors in docstrings of functions in qobj and qobevo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1499:419,error,error,419,https://qutip.org,https://github.com/qutip/qutip/pull/1499,3,['error'],"['error', 'errors']"
Availability,**Description**; Allow `qobj +/- 0` for `Qobj` of any shape and type to allow the use of `sum(kets)` as discussed in #1841.; Addition and subtraction of any other number will still raise an error if the object is not square as before. **Related issues or PRs**; Issue raised in #1841. **Changelog**; Allow `ket + 0`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1934:190,error,error,190,https://qutip.org,https://github.com/qutip/qutip/pull/1934,1,['error'],['error']
Availability,"**Description**; Another cython release, another fix needed... The missing type definition in `dia.diags_` was causing an error during the cythonize step. The other changes are related to the new ""performance hint"".; `nogil` and `except *` do not work well together.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2247:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/pull/2247,1,['error'],['error']
Availability,"**Description**; Apply the changes to solver/result.py that were made previously for mcsolve in #1710. ; Also add other improvement to `Result`. Major changes:; - `Result.__init__` signature changed from `(e_ops, options, _super, oper_state)` to `(e_ops, options, tlist, state0)`.; To know if we can normalize the state, we use the first state's dims instead of asking for information about it.; The first `add` is done in the `__init__` call.; - `MultiTrajResult` and `MultiTrajResultAveraged` are merged into `MultiTrajResult`: both classes were be interchangeable but did not share code, so any modification needed to be done twice.; - Add capacity to compute trajectories until a tolerance is reached. A new feature in #1710 was to allow to compute trajectories until the error bars on the expectation values are under a certain tolerance. The `add` method compute the error bars using jackknife re-sampling and return an estimation of the number of trajectories still needed to reach the desired tolerance. The mapping function can then stop computing trajectories when this reach `0`.; - `McResult` was created: `collapse` and `photocurrent` are an output of `mcsolve` only. So these were removed from `MultiTrajResult` and move into `McResult`. Other changes:; - `MultiTrajResult.steady_state` is a function instead of a property. `steady_state` was the average of the states for all times. With long enough `tlist`, it should converge to the steady state, but the first times are usually far from it. As a function, it offer the possibility to average the last `N` states.; - When `e_ops` is a `Qobj`, `QobjEvo` or `callable`, the expect will not be a list but the array of expect:; `Result(e_ops=[num], ...).expect[0] == Result(e_ops=num, ...).expect`.; I am not too sure about that one, it feel logic but could break some codes. . **Related issues or PRs**; #1710",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1889:684,toler,tolerance,684,https://qutip.org,https://github.com/qutip/qutip/pull/1889,5,"['error', 'toler']","['error', 'tolerance']"
Availability,"**Description**; As observed by @amitjansc, tidyup did not properly reacted to change to the default tolerance in settings.; Fix this and add tests. **Related issues or PRs**; Close #1829 . **Changelog**; Ensure `tidyup`'s default tolerance is read from settings at each call.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1830:101,toler,tolerance,101,https://qutip.org,https://github.com/qutip/qutip/pull/1830,2,['toler'],['tolerance']
Availability,"**Description**; Before this fix the following two situations were incosinsten:; ```python; matrix = np.random.random((2, 2)); qobj = qutip.Qobj(array). qobj * matrix # This would perform a matrix multiplication as `__mul__` tries to convert matrix into `Qobj`.; matrix * qobj # This would raise an error as `__rmul__` assumed that matrix was a `Qobj`.; ```. I assumed that `qobj * matrix` behaviour is the correct one as it is explicitly programmed to work like that. With this fix `matrix * qobj` will first try to convert matrix to `Qobj` and perform a matmul between matrix and `Qobj`. **Related issues or PRs**; Issue #1607 is related to this although this PR does not close that issue. **Changelog**; __rmul__ now accepts as `other` an array_like that is understood by `Qobj`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611:299,error,error,299,https://qutip.org,https://github.com/qutip/qutip/pull/1611,1,['error'],['error']
Availability,**Description**; Clean-up of the point method in the `Bloch` class. This PR does not add any new feature but it does:; - Improve readability and logic in the point methods for the Bloch class. ; - Extended test coverage of the point methods.; - Now add_points raises error if the arguments `points` or `meth` are wrong. **Changelog**; Clean-up of the point methods in the `Bloch` class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1909:267,error,error,267,https://qutip.org,https://github.com/qutip/qutip/pull/1909,1,['error'],['error']
Availability,"**Description**; Completed the guide page of the settings to include missing entries as well as options included in `settings.core` and `settings.compile`. Added `CoreOptions` and `CompileOptions` to the apidoc and completed the docstrings. I also removed settings that are no longer used anywhere. Lastly I changed the default for `accept_float` compile option. Presently, if an args is a float it cannot be updated to a complex:; ```; >>> a = qutip.coefficient(""A"", args={""A"": 1.}); >>> a(0, A=1j); TypeError: must be real number, not complex; ```; Creating a new coefficient work would be needed. This will certainly cause an issue eventually, but updating it to complex automatically would cause some error with brmesolve spectra: (`w > w0`) as complex cannot be compared. Without types, string are not any better than functions so removing them altogether is not ideal. So I changed it to use complex when no comparison are done and float otherwise. **Related issues or PRs**; fix #1524",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2403:705,error,error,705,https://qutip.org,https://github.com/qutip/qutip/pull/2403,1,['error'],['error']
Availability,"**Description**; Dicke density state matrix should only have positive eigenvalues, but rounding errors causes eigenvalues of 0 to instead be represented as a very small negative number.; This causes `dicke_trace_function` to return -Inf, since `scipy.special.entr` returns -Inf for any values < 0.; This issue was fixed by simply taking the absolute value of the eigenvalues in dicke_trace_function, which we are allowed to do since the density state matrix should only have positive eigenvalues. **Related issues or PRs**; fix #1919",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2466:96,error,errors,96,https://qutip.org,https://github.com/qutip/qutip/pull/2466,1,['error'],['errors']
Availability,"**Description**; Extra check in `Qobj` constructor to make sure that the underlying data behaves as expected. **Related issues or PRs**; The PR is a fix to #1782, where the `Qobj` would be constructed in a way subsequent code (i.e. `mesolve`) did not expect causing a segmentation fault. **Changelog**; Added a check in `Qobj` constructor that the respective members of `data.shape` cannot be larger than what the corresponding `dims` could contain.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1783:281,fault,fault,281,https://qutip.org,https://github.com/qutip/qutip/pull/1783,1,['fault'],['fault']
Availability,"**Description**; Fix #1912. The issue was that previously the print_figure function returned byte code, but since ipython/ipython#5452 it returns a Unicode string. **Related issues or PRs**; Fix #1912. **Changelog**; Fixed an error with svg representation of Bloch.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1918:226,error,error,226,https://qutip.org,https://github.com/qutip/qutip/pull/1918,1,['error'],['error']
Availability,**Description**; Fix a few remaining issues with import for v5.; - Import `krylovsolve` in the qutip namespace.; - I forgot to remove the second version of `parallel.py`. the old version is moved into the `solve` and only used by stochastic solver. Remove the `parfor` function.; - `piqs` is imported as a namespace. This create distance with functions such as `qutip.ghz_state` and `qutip.piqs.ghz`.; - Remove `qutip.cy` from the namespace. All classes and functions it contain are not user facing or available elsewhere.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2061:502,avail,available,502,https://qutip.org,https://github.com/qutip/qutip/pull/2061,1,['avail'],['available']
Availability,"**Description**; Fix bug in `correlation 2op_2t ` when using time-dependent hamiltonians and collapse operators. Also, a test was added in `test_correlation`. **Related issues or PRs**; This PR addresses [#1808](uhttps://github.com/qutip/qutip/issues/1808). It solves the issue. **Changelog**; Fixed error for time-dependent hamiltonians and collapse operators in correlation 2op_2t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929:300,error,error,300,https://qutip.org,https://github.com/qutip/qutip/pull/1929,1,['error'],['error']
Availability,**Description**; Fix errors in gate definitions. **Changelog**; Correct expansion of berkeley and swapalpha gates; Correct definition of CZ gate; Add CPHASE gate to list of control gates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1501:21,error,errors,21,https://qutip.org,https://github.com/qutip/qutip/pull/1501,1,['error'],['errors']
Availability,"**Description**; Fix issues with multi- trajectory results:; - When one result had trajectories and the other did not, but both stored the states, the merged result had no states.; - When merging 2 results with default ratio, that ratio would depend on whether the `improved_sampling` options was used. ; - When the no-jump probability was 1, the total weight as measured by sum(res.runs_weight) would not be one.; - A no-jump probability over 1 by numerical error would break the evolution.; - Fix weight application in the `_target_tolerance_end`. (At `abs_weight == 1`, the error should be 0).; - `average_final_state` not being computed properly when runs were stored. This PR is a part of #2455. (1/4?); The absolute weighted trajectories are still mixed with the other. (#2455 fixed the issues by not counting the no-jump evolution are a trajectory.). Tests need #2457 to pass.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2459:459,error,error,459,https://qutip.org,https://github.com/qutip/qutip/pull/2459,2,['error'],['error']
Availability,"**Description**; Fix warning / error for numpy 1.25; - `np.product` is deprecated, changed to `np.prod`.; - Single elements array can no longer be implicitly converted to scalar.; - Remove `run_module_suite`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2178:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/pull/2178,1,['error'],['error']
Availability,"**Description**; Fix warnings and errors coming from matplotlip 3.8 release.; - Close figure in errors tests. Lot of empty figures were created and never closed.; - `plt.contourf` can be used as an artist instead of extracting the artists list from it.; - `color` cannot be a numpy array anymore, convert the arrays to list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2238:34,error,errors,34,https://qutip.org,https://github.com/qutip/qutip/pull/2238,2,['error'],['errors']
Availability,**Description**; Fixes issue #2199. Now extract states passes down the _isherm attribute. I also changed `rand_herm` to return an object that has already set the `_isherm` attribute. **Related issues or PRs**; fix #2199,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2214:62,down,down,62,https://qutip.org,https://github.com/qutip/qutip/pull/2214,1,['down'],['down']
Availability,**Description**; I added the option to specify `rtol` in the tests. The default value is the same as for `numpy.testing.all_close` which was being used 'silently' (tests for the exponential pretty much ignored the absolute tolerance specified by us). I also made the tests more consistent. Now the assertion for scalar outputs also use `rtol` in the same way `numpy.testing.all_close` does. . **Related issues or PRs**; This is useful for qutip/qutip-tensorflow#34 where I plan to add support for complex64. **Changelog**; Aded rtol for specialisation tests.; Changed comparison of scalars to be consistent with `numpy.testing.all_close`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1709:223,toler,tolerance,223,https://qutip.org,https://github.com/qutip/qutip/pull/1709,1,['toler'],['tolerance']
Availability,"**Description**; I have added support for list input for the unit conversion functions. . **Related issues or PRs**; I was passing a python list of values to convert from one unit to another but got the following error:; `TypeError: can't multiply sequence by non-int of type 'float'`; As the documentation says it accepts an array, I think a list should be supported. **Changelog**; If the input is a python list, it will be converted to a numpy array. Because numpy array supports multiplying by a float, Python list doesn't.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1845:213,error,error,213,https://qutip.org,https://github.com/qutip/qutip/pull/1845,1,['error'],['error']
Availability,**Description**; Improved efficiency of the hadamard gate creation time as it was using python for loops which are terribly slow. For N=10 it goes down from 522ms to roughly 7ms. **Changelog**; Improved hadamard_transform efficiency (70x faster for N=10).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1688:147,down,down,147,https://qutip.org,https://github.com/qutip/qutip/pull/1688,1,['down'],['down']
Availability,"**Description**; In #2120, `countstat` was updated to use `data.solve`.; `countstat` would sometime try to solve a system with singular matrix and has a fallback for it using `try: ... except:`; However, while numpy raises an error when the matrix is singular, `scipy.sparse` raises a warnings, thus the tests only pass because we use the warnings as error flags... Without it, the singular matrix would not be caught and the solution from `countstat` would contain a `NaN` and the tests would fail... - Redirect the warning from scipy sparse and numpy's `LinAlgError` to a `ValueError`to allow easy catching of these case.; - Add the small `1e-15` in `countstat` with `auto_tidyup` turned off.; - Add support for the method `lstsq` and `solve` for `data.solve_csr`. These methods are supported by numpy, jax, tensorflow, scipy.sparse is the exception which use `spsolve` and `lsqr` instead, probably to avoid name collision the the dense version they also have.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2144:226,error,error,226,https://qutip.org,https://github.com/qutip/qutip/pull/2144,2,['error'],['error']
Availability,"**Description**; In cython code, signals (Keyboard Interrupt) are not automatically checked.; And when checked, if error are not properly passed (`expect *`) the signal can be last. This happened in the Runge Kutta integrator, which did not properly passed errors and only when back to python space at time in `tlist` which can be far apart. The stochastic solver stop on (Keyboard Interrupt), the `except` are not needed since the output is a class. I made it explicit for clarity. Doing a few tests, I saw that the error was often caught in the `Qobj.data` property called by `QobjEvo.matmul`. This means more back and forth between python and cython was done than needed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2169:115,error,error,115,https://qutip.org,https://github.com/qutip/qutip/pull/2169,3,['error'],"['error', 'errors']"
Availability,"**Description**; Increase the tolerance of tests that could randomly fail. `testFloquetBasis` would fail 1/2000 of the time. The error has a std of 1.2e-5 , but does not follow a gaussian distribution. Fat tails made 4 std not enough. `test_rand_super` failed once recently in #2919 ( I reran the test). I can't reproduce the failure locally, but it is ran a few hundred of times in each actions, so even a small probability of failure will eventually happen.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2337:30,toler,tolerance,30,https://qutip.org,https://github.com/qutip/qutip/pull/2337,4,"['error', 'failure', 'toler']","['error', 'failure', 'tolerance']"
Availability,**Description**; Installing `dev.major` is raising warnings because of errors in MANIFEST.in:; ```; ...; reading manifest file 'qutip.egg-info/SOURCES.txt'; reading manifest template 'MANIFEST.in'; warning: no files found matching 'qutip.bib' <=====; warning: no files found matching '*.qasm' under directory 'qutip/tests/qasm_files' <=====; adding license file 'LICENSE.txt'; writing manifest file 'qutip.egg-info/SOURCES.txt'; running build_ext; ...; ```; qutip.bib was renamed to CITATION.bib in #1662 ; qasm files were removed in #1890 and are now only included with qutip-qip. **Changelog**; Update MANIFEST.in to reflect changes in #1662 and #1890,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1926:71,error,errors,71,https://qutip.org,https://github.com/qutip/qutip/pull/1926,1,['error'],['errors']
Availability,"**Description**; Looking at the [historical benchmarks](https://qutip.org/qutip-benchmark/ops/matmul.html), Qobj operations got slower last November, which correspond to when we merged the dimensions PR. This PR is to improve those graph. Usually, when a lot of matrix operations are done, we use the data layer object directly. So the overhead of the Qobj should not be that critical. Adding QobjEvo support to `isbra`, `isket`, etc, slowed them down quite a lot. The import of QobjEvo in the function can easily be slower than the matrix operation. (0.7us for the import which is the same as a 32x32 CSR@ket product.) This is the biggest culprit in the jump in the matmul benchmark graph. I added properties for each `is_type_` to Qobj and QobjEvo. The `Qobj` and `QobjEvo`'s `issuper` where not the same. `QobjEvo` would return `True` for oper-ket, not just super operator, while `Qobj.issuper` would be `True` only for super operator. `QobjEvo` now match `Qobj`. I also changed the check to tell if `Qobj.__matmul__` return a number or Qobj. It is now done looking at the output dimensions. Now that type cannot be overwritten, it is the same check. (Before a `[[1], [1]]` could be a bra, ket, oper, etc., now it's a scalar which return True to isbra, isket and isoper.). For `Qobj.__add__` I could speed it up by doing the Qobj check first. But the extra overhead of `Qobj.__init__` is still there. That said, the graph don't look as bad as the matmul ones and it's probably enough.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2295:447,down,down,447,https://qutip.org,https://github.com/qutip/qutip/pull/2295,1,['down'],['down']
Availability,"**Description**; Measurement functions did not take into account degenerate states of the operator. (#1800, #2054); Also the returned probabilities could be negative. (#2265). I added a tolerance to these function for the minimal probability. Smaller / negative probabilities are rounded to `0`.; I also changed `measurement_statistics_observable` to support degenerate operators: It always return the projectors, with projectors and probabilities of degenerate sub-systems summed. It also only return the (eigenvalues, projector, probability) set for cases where the probability is greater than `tol`. **Related issues or PRs**; fix #1800, #2054, #2029, #2265",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2342:186,toler,tolerance,186,https://qutip.org,https://github.com/qutip/qutip/pull/2342,1,['toler'],['tolerance']
Availability,"**Description**; Modified the function `_gate_FREDKIN` in `qutip/qutip/qip/circuit.py`. As reported in [issue #1330](https://github.com/qutip/qutip/issues/1330), there was a bug when unrolling Fredkin gate into basis gates. This bug derives from the use of a list with length >1 when making a new single-qubit gate in the function `_gate_FREDKIN`.; In this PR, I fixed this problem by manually unrolling this part.; For the details and the correctness verification, please refer to the attached pdf: [issue_1330.pdf](https://github.com/qutip/qutip/files/6272589/issue_1330.pdf). Thank you very much!. **Related issues or PRs**; Fixed the bug reported at [issue #1330](https://github.com/qutip/qutip/issues/1330). **Changelog**; Fixed errors in _gate_FREDKIN function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1489:734,error,errors,734,https://qutip.org,https://github.com/qutip/qutip/pull/1489,1,['error'],['errors']
Availability,"**Description**; On mac, with OpenBlas, `eigh` can cause segmentation fault, see #1197. For 4.5.1, we simply skipped the tests causing problems ( #1257). This replace the calls of `numpy.linalg.eigh` to `numpy.linalg.eig`, and lapack calls of `ZHEEVR` to `ZGEEV` when at risk of segfault. This will result in slower `Qobj.eigenstates` and `brmesolve`. . Tests where adapted, the issues were the phase of the eigenvectors and the lower numerical precision of `eig`. While the flag to use `eig` instead of `eigh` is `qutip.settings.eigh_unsafe`, it must be set before importing `qutip.sparse` to have any effect. Thus it is not a true settings, (like `has_openmp`). **Changelog**; Replace calls of `eigh` to `eig` when at risk of segfault.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288:70,fault,fault,70,https://qutip.org,https://github.com/qutip/qutip/pull/1288,1,['fault'],['fault']
Availability,"**Description**; Previously, if you specified a target tolerance when using `mcsolve`, the result's `end_condition` would show ""target tolerance reached"" regardless of whether this was true. I added a line to check this and set `end_condition` to ""ntraj reached"" when appropriate.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2382:55,toler,tolerance,55,https://qutip.org,https://github.com/qutip/qutip/pull/2382,2,['toler'],['tolerance']
Availability,**Description**; Raise an error instead of silently ignoring the offset when attempting to generate coherent states or density matrices with method 'operator' and non-zero offset. **Related issues or PRs**; * Small fix post #1469. **Changelog**; Fix silent ignoring of offset in coherent and coherent_dm when offset is non-zero. A ValueError is now raised instead.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1741:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/pull/1741,1,['error'],['error']
Availability,**Description**; Re-enable test errors on ImportWarnings. These were disabled in QuTiP 4 because it used pyximport. QuTiP 5 no longer uses pyximport. **Related issues or PRs**; - None,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2083:32,error,errors,32,https://qutip.org,https://github.com/qutip/qutip/pull/2083,1,['error'],['errors']
Availability,**Description**; Refactor Qutip.Qip.Circuit.solve_gates as a dispatch-like method for assigning different functions and make the QubitCircuit module more commutable.; These changes make it easier for maintenance and provide a clearer workflow. **Changelog**; Refactor Qutip.Qip.Circuit.solve_gates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1226:200,mainten,maintenance,200,https://qutip.org,https://github.com/qutip/qutip/pull/1226,1,['mainten'],['maintenance']
Availability,"**Description**; Remove Bloch 3D, it's redundant to Bloch but without new features added in recent years.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2306:39,redundant,redundant,39,https://qutip.org,https://github.com/qutip/qutip/pull/2306,1,['redundant'],['redundant']
Availability,"**Description**; Remove the QIP submodule that has been migrated to `qutip/qutip-qip`. Most files were simply deleted, but there are a few non trivial parts:; - The gates used in tests were added to operators.py, all others were removed. The signature was changed: the `target` parameter was removed and `dtype` keywords added to match other operators. This means that there will be two version of `cnot` etc. available. . - `qutip.enntropy.entangling_power` was also removed. While it was not strictly in the qip module, it is meant to be used for 2 qubits gates, so it felt more natural to be included there. - The target qubits options for measurement was removed. qip has it's own more specialized `Measurement` class, which I guess is the reference for such case. But we could make it stronger so that it can target various kind of subsystems, such as one site on a lattice or one of harmonic oscillator coupled to others, etc. Bonus: The `-Werror` for pytest was restored. **Related issues or PRs**; Checklist item in #1850. **Changelog**; Remove the qip submodule.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890:410,avail,available,410,https://qutip.org,https://github.com/qutip/qutip/pull/1890,1,['avail'],['available']
Availability,"**Description**; Remove the function `MCResult.expect_traj_avg`. It was added to replace list input to mcsolve `ntraj` argument, but as discussed in qutip/qutip-tutorials#58, it was not a useful implementation of the feature. Also improved the warning message in floquet's backward compatibility functions to include the new way and changed warning to error for any functions that would not work as a drop-in replacement.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2068:352,error,error,352,https://qutip.org,https://github.com/qutip/qutip/pull/2068,1,['error'],['error']
Availability,**Description**; Removed excess verbiage and unrecognizable figure. Corrected a grammatical error. **Related issues or PRs**; No related issues. **Changelog**; Wordsmithing and cleanup.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1757:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/pull/1757,1,['error'],['error']
Availability,"**Description**; Restore the feedback capacities of the solver.; In v4, this was done by using special names for the `args`, but this was confusing. . For v5, I propose to do it using a `add_feedback` method of the solver:; ```; H = QobjEvo([op, lambda t, ket: bra @ ket]); solver = SESolver(H); solver.add_feedback(""ket"", ""qobj""); solver.run(...); ```; With this, `args[""ket""]` will be updated with the state during the evolution. Most solver support it, the exception are floquet, nm_mcsolve. ; HEOM support it, but the state will be seen as a single ket.; @hodgestar , is that fine?. Available form are as `Qobj`, as `Data`, `expect(oper, data)`.; `mcsolve` also has the collapse and `stochastic` the wiener process.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210:587,Avail,Available,587,https://qutip.org,https://github.com/qutip/qutip/pull/2210,1,['Avail'],['Available']
Availability,"**Description**; Rewrite `mcsolve` as a class for dev.major. Main addition:; - `MultitrajSolver` class as a base class for solver computing trajectory from a seed: it uses custom ; - It uses custom integrator using a generator which `MultitrajSolver` provide. ; - Stepping run one trajectory at a time.; - Use numpy.random new interface with `SeedSequence` and `Generator`.; - `run` can end on number of trajectories reached, timeout reached, or error bars on expectation values under a certain tolerance.; - `McSolver` class for mcsolve class interface.; - Support closed and open system. For open systems. `H` must be a Liouvillian. The `c_ops` are computed stochasticly and are used for collapse. Dissipation terms to be used in a deterministic way can be added as Lindblad dissipators to the liouvillian.; - McSolver's results include the photocurrent.; - McSolver need a layer between the solver interface and the integrator. In #1710, this was a trajectory solver, but here I use a pseudo integrator. This makes `MultitrajSolver` easier to use with stochastic which need custom integrator and thus a trajectory solver did very little. Other fixes:; - `MultiTrajResult` keep the `dtype` of expect.; - `MultiTrajResult` can merge instance with no states stored. **Related issues or PRs**; Replace #1710",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1972:446,error,error,446,https://qutip.org,https://github.com/qutip/qutip/pull/1972,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"**Description**; Rewrite `mcsolve` using class as was done for `sesolve` and `mesolve` in #1700. This add new capacities to `mcsolve`:; - `measurement` and `photocurrent` are added to result making the `photocurrent_..solve` function redundant.; - The `H` input can be a super operator, allowing to do evolution with some collapse operator being treated democratically and some with discrete jumps (as was done in `photocurrent_mesolve`.; - Result are compiled at the end of each trajectories. Previously the result of each trajectories would be stored until the end of the map function, even if only the average are desired, making it quite memory inefficient, see #1667.; - New end condition are added. `mcsolve` can run for a desired number of trajectories, a desired time or the expectation values have converged within a desired tolerance (computed using jackknife re-sampling). ; - Stepping capacities have been added. However, collapse are not available this way, so it's still open to improvement. Other changes include reworking `MultitrajResults`, it was added in a previous PR but was not used. Also the 2 versions: trajectories stored or averaged are merged. **Related issues or PRs**; Follow up to #1700 . **Changelog**; Rewrite mcsolve with a class approach.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1710:234,redundant,redundant,234,https://qutip.org,https://github.com/qutip/qutip/pull/1710,3,"['avail', 'redundant', 'toler']","['available', 'redundant', 'tolerance']"
Availability,"**Description**; Set `operator-ket`'s `superrep` to `'super'`.; `operator-ket` are the states of super operators, ie. `super @ operator-ket` make sense but `oper @ operator-ket` does not. So it is natural that they have an attached `superrep`. This will make `choi_super @ operator-ket` error unless care is taken in making the `superrep` match. TODO? Have `to_choi`, etc. work for operator-kets?; closes #1586",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1590:287,error,error,287,https://qutip.org,https://github.com/qutip/qutip/pull/1590,1,['error'],['error']
Availability,"**Description**; Since merging #2497, mkl tests on windows fails from segfault.; I am not sure of the source of the error:; Since the library was not found before the PR, the bug can have been there for a long time, but the tests passed in #2497.; Just settings mkl to verbose is enough for the tests to passes... I don't think relying on the verbose options is a good idea so I made it unable to find mkl on windows for this PR. We will need to find a more reliable way to use it, `ctypes` does not look at the header file so it guess the types from our call. Maybe some version of mkl are 32 bit and other 64 bit and we are not adapting. [pydiso](https://github.com/simpeg/pydiso) looks promising.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2529:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/pull/2529,2,"['error', 'reliab']","['error', 'reliable']"
Availability,"**Description**; Since yesterday, our tests hangs for both `master` and `dev.major` and never finish. It seen only a few tests are affected.; I am adding a timeout so the tests that hangs result in a localized error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1787:210,error,error,210,https://qutip.org,https://github.com/qutip/qutip/pull/1787,1,['error'],['error']
Availability,"**Description**; Speed up and simplify `state_number_enumerate`, `state_number_index`, `state_index_number`, `state_number_qobj`, and `enr_state_dictionaries`. I've changed quite a few functions in states.py, but all the changes are small. It seemed easier to combine this into a single pull request instead of splitting it up into many smaller ones (but this could be done). The changes in more detail:; - `state_number_enumerate` and `state_index_number` now always return tuples. Before, `state_number_enumerate` returned arrays for `excitations is None` and tuples otherwise, and `state_index_number` returned a list. For `excitations is None`, I realized that a simple call to `itertools.product` is enough, and is about 20x faster for a (relatively big) test case. It would be trivial to keep returning arrays instead of tuples here as before, but this slows the code down (quite significantly, in fact) and, in any case, returning arrays or tuples depending on whether `excitations` is set seems like an inconsistent interface, so I decided to make it consistent (and faster). I checked that the uses in the code base should not be affected. The algorithm used when the number of excitations is restricted is a slightly more elegant version of the one from my previous pull request (#1594), and is faster by another factor of 5 or more for the ""big"" test cases I looked at. ~~It is still recursive, but quite fast, and I did not find an elegant non-recursive algorithm.~~ I came up with an even faster non-recursive algorithm after all. It's arguably a bit less elegant, but I think still readable, and another 50% or so faster than the previous one (see the second commit below).; - `enr_state_dictionaries` now returns a dictionary and a list instead of two dictionaries. Before, `idx2state` was a dictionary with integer keys from 0 to nstates-1, which behaves essentially like a list. However, before Python 3.7, iteration order was not guaranteed to be insertion order (i.e., iterating ove",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1604:874,down,down,874,https://qutip.org,https://github.com/qutip/qutip/pull/1604,1,['down'],['down']
Availability,"**Description**; Tests are using numpy's svd but the dispatched function is using scipy's svd.; They use different algorithms and can give different result causing error in the tests. With this PR, scipy is used in test also.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2239:164,error,error,164,https://qutip.org,https://github.com/qutip/qutip/pull/2239,1,['error'],['error']
Availability,**Description**; Tests in `simdiag` sometime fail with one or two values over the tolerance. This cause automated tests to fail for reason unrelated to the PR. This add the flaky mark to rerun these and increase some tolerances.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2067:82,toler,tolerance,82,https://qutip.org,https://github.com/qutip/qutip/pull/2067,2,['toler'],"['tolerance', 'tolerances']"
Availability,"**Description**; The OpenQASM 2.0 standard is described [here](https://github.com/Qiskit/openqasm/blob/master/spec/qasm2.rst). ; The purpose of this PR is to create a full implementation of a OpenQASM parser that reads ; a .qasm circuit into a QubitCircuit. This function lives in qutip/qip/qasm.py. There are a number of ; internal functions that enable this conversion but the only api-exposed function is supposed to be ; `read_qasm` which takes in a .qasm file and returns a fully-formed QubitCircuit object. Currently, the heft of the work is done with processing user-defined gates and adding them to the circuit (as well as measurements, but they need to have #1274 on measurements merged before I can enable that functionality). I still need to add features pertaining to initialization of qubits as well as classical control. . **Related issues or PRs**; There was a related PR #1140 which purportedly worked with OpenQASM 1.0 but this one deviates from it largely while adding additional features as well as the ability to process user-defined gates and a comparatively robust parser. ; **Changelog**; Added read_qasm function to read .qasm files into QubitCircuit",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291:1080,robust,robust,1080,https://qutip.org,https://github.com/qutip/qutip/pull/1291,1,['robust'],['robust']
Availability,"**Description**; The `auto-tidyup` step is moved from `Qobj` to `CSR` operations as discussed in #1610.; Most methods which supported `auto-tidyup` still do, with the exceptions of does based on scalar product.; `__matmul__` and `__add__` already had a `if value != 0` check which was changed to support a tolerance.; This new conditions affect both the real and imaginary part together:; Previously : `[1+1e-15j, 1e-15+1e-15j]` -> `[1+0j, 0]`; Now : `[1+1e-15j, 1e-15+1e-15j]` -> `[1+1e-15j, 0]`; This can be changed if desired. `expm_csr` was the only function that is not covered by these changes. ; I added a `tidyup` keyword to `CSR.__init__` for it instead of using a decorator.; It could be dropped if we judge `tidyup` is not needed for `expm`. **Related issues or PRs**; #1610 . **Changelog**; Move auto-tidyup from Qobj to CSR function",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1615:306,toler,tolerance,306,https://qutip.org,https://github.com/qutip/qutip/pull/1615,1,['toler'],['tolerance']
Availability,"**Description**; The `purity` method in `qobj` is supposed to give purity no more than 1. However, at the moment, it can give values greater than 1 as well because it does not verify if `Qobj` is a valid quantum state. Minimal code to reproduce the error would be: . ```; not_dm = Qobj(np.random.rand(5,5)); not_dm.purity(); ```; To solve this, I have modified `purity()` primarily by adding `check_isdensity()` (with accompanying test method in `tests`) . **Changelog** ; Added density matrix check for purity calculation",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232:249,error,error,249,https://qutip.org,https://github.com/qutip/qutip/pull/1232,1,['error'],['error']
Availability,"**Description**; The check that the initial state was already normalised for normalising output would branch over values, which breaks `jax.jit` support... Moved the option check first. Also changed the `isoper` check to filter out rectangular operator.; Rectangular state in solver are tolerated, but we don't have tests for it. I did not add any here, but we should . **Related issues or PRs**; qutip/qutip-jax#49 qutip/qutip-tutorials#100",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2448:287,toler,tolerated,287,https://qutip.org,https://github.com/qutip/qutip/pull/2448,1,['toler'],['tolerated']
Availability,"**Description**; The error for too large minimum step was not raised.; The error therefore came later in scipy code and was hard to understand. ; Found from https://groups.google.com/g/qutip/c/NUcKnAwpx30/m/7IKDqbNOAgA; Fix the error and add a test for it. Also added some sanity check on `min_step` and `max_step`, which could create infinite loop if `min_step = 0` or `min_step > max_step`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2402:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/pull/2402,3,['error'],['error']
Availability,**Description**; The function mesolve was not including the complex part of the expectation value when the initial state was a not Hermitian. This led to an error in `correlation_2op_1t()` which uses an initial state that is not Hermitian to compute the correlation.; I also fixed an error in the documentation where `tlist` was referenced instead of `taulist` (`tlist` is not an argument in `correlation_2op_1t()`) and included a test for `correlation_2op_1t()`. **Related issues or PRs**; Fix #1460. **Changelog**; Fixed error where complex expectation value for non Hermitian initial state was not being included in results when using mesolve.; Fix doxumentation error in `correlation_2op_1t()`.; Added test for `correlation_2op_1t()`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478:157,error,error,157,https://qutip.org,https://github.com/qutip/qutip/pull/1478,4,['error'],['error']
Availability,**Description**; The import statement was added to import the partial_transpose function directly from the qutip module. This was done to fix the TypeError: 'module' object is not callable error. Added a condition that check if the input rho is a ket (a type of quantum state) and it also ensures that the negativity function can handle both kets and density operators as input. Fix #2345,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2371:189,error,error,189,https://qutip.org,https://github.com/qutip/qutip/pull/2371,1,['error'],['error']
Availability,"**Description**; The mkl finding was sometime missing the library even when available.; Sometime the library can has a version number in the file name:; `libmkl_rt.so.2`, `mkl_rt.2.dll`, with or without a symbolic link to the version less name.; Also it ouly look for it if it's found in numpy's config, but the module mkl is available an could be installed even if numpy does not link to it. Our use using ctypes does not require numpy to be using it to work. So I changed the lookup function to look for the library without checking is numpy uses it. I also added a new setting, `settings.mkl_lib_location`, which is not read only and allow users to enter the path to their mkl implementation. We only look inside the python library path, this would allow to use libraries installed at the OS level. Also fixed a bug in mkl spsolve with scipy 1.14 that was missed since mkl tests were skipped. **Related issues or PRs**; fix #2496",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2497:76,avail,available,76,https://qutip.org,https://github.com/qutip/qutip/pull/2497,2,['avail'],['available']
Availability,"**Description**; The nonmarkov transfer tensor method (TTM) fails in an example notebook (see below). I tracked down the error to the *ttmsolve* method, where None is used to fill an array. I replaced None with an empty Qobj to fix the bug occuring from adding a Qobj and None. **Related issues or PRs**; The related issue is in the qutip-notebooks repo: https://github.com/qutip/qutip-notebooks/issues/122. **Changelog**; Replace placeholder in ttmsolve with empty Qobj",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1843:112,down,down,112,https://qutip.org,https://github.com/qutip/qutip/pull/1843,2,"['down', 'error']","['down', 'error']"
Availability,"**Description**; The orbital function had some errors in it. Here, I replaced the manual calculation of the spherical harmonics, with the implementation provided by SciPy. Additionally, I provide some tests to the function. **Related issues or PRs**; fixes #1839 . **Changelog**; Fixed errors in orbital functions",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1844:47,error,errors,47,https://qutip.org,https://github.com/qutip/qutip/pull/1844,2,['error'],['errors']
Availability,"**Description**; The test `test_random_iscptp` would sometime randomly fail.; This increase the tolerance of the test, lowering the fail rate from 0.35% to less than 1 in 10000 tries.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2147:96,toler,tolerance,96,https://qutip.org,https://github.com/qutip/qutip/pull/2147,1,['toler'],['tolerance']
Availability,**Description**; The test for the new method `run_from_experiment` has a time step too long for the euler method. This would cause fail once a few hundreds time as in https://github.com/qutip/qutip/actions/runs/8979789558/job/24662362047.; Reducing the system size with smaller steps makes the test more consistent (no failure in 20000 tries.). Also reduced `test_feedback` step size to improve that test consistency.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2419:319,failure,failure,319,https://qutip.org,https://github.com/qutip/qutip/pull/2419,1,['failure'],['failure']
Availability,**Description**; The towncrier check was failing when installing the module since we used the OS python and which is not managed by pip:; ```; python -m pip install towncrier; error: externally-managed-environment; ```,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2542:176,error,error,176,https://qutip.org,https://github.com/qutip/qutip/pull/2542,1,['error'],['error']
Availability,"**Description**; There are presently 8 variations of `CQobjEvo`. There are `Cte` and `Td` variants, Dense and csr sparse and serial vs openmp versions. Adding a feature, (ex. AHS support) result in the need to modify all of them and QobjEvoFunc and AHS PRs will add new one. So as a first step, I am merging them the ones presently available.; Cte (no coefficient) are now limit case of Td (time-dependant). omp ones have been removed in favor of a `spmvpy` variant that switch between the serial and omp version at compilation. . Also reworked the compilation of `QobjEvo`:; - Simpler with only 3 variants instead of 8.; - Compilation of the coefficient and object are separated. (`H *= -1j` does not force recompiling the coefficients.); - But have the side effect of making temp file cleanup harder. File are erased at python close instead of object deletion.; - Moved the location of temp file to ~/.qutip/temp for now, but does this work on windows?; - Auto-cleanup on importing qutip, for files older than 7 days for now. But should be set by user, the temp file location also. Other to-do:; Dense versions of CQobjEvo could be more optimized and is not parallel. One option would be to use blas and hope the user's blas is parallel. (probably other PR). ps. Running tests for now. Do not merge.; **Changelog**; Cleaned CObjEvo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1231:332,avail,available,332,https://qutip.org,https://github.com/qutip/qutip/pull/1231,1,['avail'],['available']
Availability,**Description**; There was a logic error in the matmul's `out` shape check making the check too lenient.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2349:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/pull/2349,1,['error'],['error']
Availability,**Description**; There was an error in line 613 of qutip/stochastic.py as the measurement operators for heterodyne detection in the implemented stochastic master equation should be `c + c.dag()` and `1j (c - c.dag())` as explicitely presented in equation (5.64) and the following 2 paragraphs in https://arxiv.org/abs/1710.09523. The same measurement operators can also be drawn from equation (4.108) of Milburn & Wiseman _Quantum Measurement and Control_. **Changelog**; Fixed error in m_ops definition for heterodyne detection in smesolve.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1237:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1237,2,['error'],['error']
Availability,"**Description**; This PR attempts to solve the error in the `ffmpeg` command from the user guide. Specifically, the bitrate parameter (-b) is applied to the output file `bloch.mp4`. Additionally, a one line change to use `Bloch` from `qutip` has been made which otherwise returns an error. Thanks!. **Related issues or PRs**; Fix #799 . **Changelog**; Fixed error in the `ffmpeg` command from the user guide.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1557:47,error,error,47,https://qutip.org,https://github.com/qutip/qutip/pull/1557,3,['error'],['error']
Availability,"**Description**; This add documentation of the new BoFiN-based HEOM solver added in #1601. **Todo**; - [x] Rework the documentation structure.; - [x] Update the introduction; - [x] Update the bosonic example; - [x] Update the fermionic example; - [x] Add a short history of the HEOM implementation; - [x] Mention that the old HEOM implementation is available as `dl_heom`; - [x] Add a link to the HEOM notebooks.; - [x] Update `.run(..., ado_init=True)` to accept an instance of `HierarchyADOsState` since this is what `.run(..., ado_return=True)` returns. Add tests for `ado_init=True`. **Related PRs**; - #1601; - #1726. **Changelog**; Add and rework the HEOM documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1724:349,avail,available,349,https://qutip.org,https://github.com/qutip/qutip/pull/1724,1,['avail'],['available']
Availability,"**Description**; This adds a few more tests to the specialisations. I also found a Bug in expm and changed `TypeError` to `ValueError`. - Expm: ; - Added tests for its specialisations.; - There was a _bug_ in expm where if the matrix was csr and diagonal, zero values where not being exponentiated as they did not appear in scipy's data attribute. This case is now handled properly with the same scaling in resources (O(N) where N is the non-cero diagonal elements in the matrix).; - Incorrect shape now raises ValueError.; ; - UnaryOpMixin: ; - It did not check for bad shapes. It now does have a function that checks for them (this avoids code duplication in `trace`, `expm` and some others). ; - As a result of this change a hidden bug emerged: even though `TestProject` had a non-empty `bad_shapes` attribute, it was not doing anything as `UnaryOpMixin` did not generate tests for bad shapes. It now does. - Project:; - Changed `TypeError` to `ValueError`.; - Removed redundant `TestProject`. - Pow:; - Added the case where `n=0` as it is a special case. **Changelog**; `project` specialisations now return `ValueError` when matrix has not valid shapes.; Removed redundant `TestProject`.; Added special test case for Pow (n=0).; `UnaryOpMixin` now has test_incorrect_shapes (by default it does not have any bad shapes); Added tests for `expm` specialisations.; Fixed bug where diagonal `CSR` matrix was not exponentiating zero values in the diagonal.; `expm` specialisations now raises `ValueError` when matrix is not square. _Edit: Added ""Removed redundant `TestProject`""_; _Edit2: Added changelog_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1630:972,redundant,redundant,972,https://qutip.org,https://github.com/qutip/qutip/pull/1630,3,['redundant'],['redundant']
Availability,"**Description**; This change solver's options to be per solver. Thus mcsolve specific options are not included in options passed to sesolve etc.; It also simplify the options class which is now closer to a `dict` than to a `dataclass`. `SovlerOptions` take a new optional parameter `solver` to know which options to support. By passing it, it will fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""ord",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:472,error,error,472,https://qutip.org,https://github.com/qutip/qutip/pull/1947,1,['error'],['error']
Availability,"**Description**; Update HEOM for v5. Other changes:; - This resulted in a bit of a refactor of the Result class (#1907); - I found a few places where QobjEvo did not correctly set `.type` and fixed those (they were breaking the HEOM tests). Todos and questions:; - [X] Should HierarchyADOsState store ado_state as a Data object rather than a numpy array? (it can't be stored as a Data object because the ADOs have shape `n_ado, n, n` and the Data layer only supports 2-d arrays).; - [X] How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). (implemented); - [X] What should be done with the steady_state method? I guess it can just stay. Should other solvers also have this? (it should just stay, I think); - [x] Recheck the time-dependent case. (I also simplified the time-dependent case so that the Liouvillian is never added and so doesn't have to be subtracted off).; - [X] The HEOM can't really take new QObjEvo arguments each time `run` is called because calculating the RHS again is quite expensive. Maybe something can be done? (implemented -- passing new args to .run is now supported); - [X] In the base solver the new options seem to be set after retrieving the integrator -- is this right? (fixed); - [X] Compare performance to the HEOM in 4.7. (looks faster, yay!); - [X] We could also implement `.start()` and `.step()` for the HEOMSolver. Not quite sure of the use case yet though. (implemented and tested -- the implementation came for free after sorting out having .run inherit from the base solver).; - [x] Add some direct tests for the QobjEvo type errors that have been fixed.; - [x] Moved solver into `qutip.solver.heom`. . **Related issues or PRs**; - One of the todos from #1850; - In #1907 the Result class was changed largely to support extension by the HEOMSolver. **Changelog**; Update HEOM for v5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869:1709,error,errors,1709,https://qutip.org,https://github.com/qutip/qutip/pull/1869,1,['error'],['errors']
Availability,"**Description**; Update tests in `test_steadystate` to use pytest.; Improve coverage by adding tests for previously untested method and options and tests for raised errors. It will not reach full coverage: no tests use `debug=True`, `pinv2` is deprecated on `scipy` side, some checks are redundant, etc. Some work on `steadystate.py` will be needed, but this is for another time, possibly for dev.major. **Changelog**; Update steadystates tests to pytest for better coverage.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1679:165,error,errors,165,https://qutip.org,https://github.com/qutip/qutip/pull/1679,2,"['error', 'redundant']","['errors', 'redundant']"
Availability,**Description**; Update the guide for setting to list options still available in v5 and add an example with the using newly added context.; Removed the `auto_herm` options which was removed with `Qobj.isherm` being a property.; `auto_tidyup_dims` is not used anywhere but I left if since it could be useful with the dimensions class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2025:68,avail,available,68,https://qutip.org,https://github.com/qutip/qutip/pull/2025,1,['avail'],['available']
Availability,"**Description**; Upgrade from 4.5.1 to 4.5.2.; Include cherry picked commit from the following PR:. #1307 Fix zcsr_proj for bras with unsorted indices; #1306 Fix quadratic complexity in zcsr_inner; #1302 Enforce a CI test with scipy<1.5; #1301 Fix brtools zheevr test; #1298 Support scipy >= 1.5 in fast_csr_matrix matmul and legacy.ptrace; #1283 Milstein's heterodyne index fix; #1271 Remove duplicate line in setup.py; #1264 Remove incorrect use of 'is' in comparisons. Code from #1288 was added manually to evade conflict and related test were reinstalled. (removed in 4.5.1, not in master). #1269 and #1242 are not included since they depend on #1209 which is more that a bugfix and is not in 4.5.0. **Changelog**; Bug Fixes; -------; - `zcsr_proj` does not fail with unsorted indices (by **Jake Lishman**); - Fixed Milstein's heterodyne errors (by **Eric Giguère**); - Removed risky code (by **Jake Lishman**); <!-- - Fix `add_circuit` and `remove_gate` (by **Canoming**) -->. Improvements; -------; - Faster `zcsr_inner` (by **Jake Lishman**); - Support for Scipy 1.5 (by **Jake Lishman**)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1310:842,error,errors,842,https://qutip.org,https://github.com/qutip/qutip/pull/1310,1,['error'],['errors']
Availability,"**Description**; We have warnings for actions using deprecated node.js version, such as:; ```; Node.js 16 actions are deprecated. Please update the following actions to use Node.js 20: actions/download-artifact@v3, actions/setup-python@v4. For more information see: https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/.; ```; Updating the tools from v3 to v4 should fix the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2430:193,down,download-artifact,193,https://qutip.org,https://github.com/qutip/qutip/pull/2430,1,['down'],['download-artifact']
Availability,"**Description**; We use `imatmul_data_dense` for cython only, in-place `matmul` operation since the dispatcher can't handle in-place operation but they can't have nice impact on performance.; `imatmul_data_dense` had a bug that when data is not `Dense` or `CSR` it would use a wrong specialization of `matmul` and raise an error. . It work fine with all data layer in qutip/qutip so we can test it here, but some tests fails in qutip-jax (qutip/qutip-jax#14) because of it. **Related issues or PRs**; Blocking qutip/qutip-jax#14",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2137:323,error,error,323,https://qutip.org,https://github.com/qutip/qutip/pull/2137,1,['error'],['error']
Availability,"**Description**; When building the documentation for the action (on locally on my side), we install with `pip`, however with readthedocs, we use manba. Some packages versions are not available on conda-forge, just pypi, causing the rtd build to fall with #2526...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2527:183,avail,available,183,https://qutip.org,https://github.com/qutip/qutip/pull/2527,1,['avail'],['available']
Availability,"**Description**; When we can't allocate enough memory for a matrix, there was no error message.; For sparse array, were the users expect the it not to take that much space, this can be confusing.; I added error message which tell the shape of the matrix and number of elements. It won't help much, but may show that the matrix is not as sparse as expected. **Related issues or PRs**; #2299",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:81,error,error,81,https://qutip.org,https://github.com/qutip/qutip/pull/2304,2,['error'],['error']
Availability,**Description**; While trying to reproduce #1229. I found that the progress bar would raise an error (`OverflowError: date value out of range`) if `update` was called too often.; Now when the bar goes over 100% it says 0 sec remaining.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2374:95,error,error,95,https://qutip.org,https://github.com/qutip/qutip/pull/2374,1,['error'],['error']
Availability,"**Description**; While working on the [heom-tls notebook] I discovered two wrong behaviors of the `HEOMSolver`. ; 1. Running `hsolver.run()` does not return the states if `e_ops=None`, but the documentation says that it should do so. I added the missing if condition to `HEOMSolver`. ; 2. If passing a progress bar like `qutip.ui.progressbar.TextProgressBar()` to `HEOMSolver` it results in an error, because internally it only checks for `None` or `True`. The documentation says it should also work if I pass an instance of `BaseProgressBar` (or a subclass). I added the checks and a test in the testfile for this. **Related issues or PRs**; None. **Changelog**; Fix HEOMSolver state return and progress bar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1908:394,error,error,394,https://qutip.org,https://github.com/qutip/qutip/pull/1908,1,['error'],['error']
Availability,"**Description**; With Coefficient, supporting func(t, **kwargs) in parallel to f(t, args) for function coefficient is mostly free. ; This signature is more 'pythonic' and would probably by appreciated if available. ; With this new scheme, `t` is positional and the `**kwargs` is needed even if unused.; For backward compatibility, we should not remove the old format. Example:; ```; def f(t, args):; return t*args['w']. def g(t, w, **kwargs):; return t*w. qevo_old = QobjEvo([qeye(3), f], args={'w':1}). qevo_new = QobjEvo([qeye(3), g], args={'w':1}). for t in any_ts:; qevo_old(t) == qevo_new(t); ```. **Changelog**; For time-depedent function, f(t, **args) is available with",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609:204,avail,available,204,https://qutip.org,https://github.com/qutip/qutip/pull/1609,2,['avail'],['available']
Availability,"**Description**; `Options` and `SolverOptions` are objects that list all available options and pass them a solver. However in v5, with the choice of integrators, the supported options are not fixed. Most integration methods support `""atol""`, but `order` or `beta`, etc. are specific to some methods. SInce new integrators could be added by project such as qutip-cupy, `Options` can no longer be the place to list all supported options. It become little more that a dict. So I propose deprecating it. The documentation of `sesolve`, `mesolve`, etc. now list the options used by the solver and most common ode options and link the the integrator documentation. The class interface has the options property which document the options used by the solver and the integrators have the same. In the online documentation, the integrator api entries only contain the description of the method and the supported options. Since users don't need to call them directly, other methods are hidden and will be included in the dev documentation only. Usage will look like this, for functions:; ```; sesolve(H, psi, tlist, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); ```; and for the class interface:; ```; solver = SeSolver(H, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); solver.run(...); solver.options[""atol""] = 1e-9; solver.run(...) # run with the new tol.; solver.options = {""atol"": 1e-2} # only change the affected items. ; solver.run(...) # Also run with the new tol.; solver.options[""method""] = ""adams"" # reset all ode options, including ""atol"" supported by both.; solver.options = {""method"": ""bdf"", ""atol"": 1e-2} # reset all ode options then apply the new atol ; ```. Inside solvers, options are stored in a `_SolverOptions` which is a dict with frozen keys and feedback (chaging atol will reset the integrator).; ; Some `Intergrator` are slip so one method correspond to one integrator. Otherwise, `method` was an options used by both the solver to know which integr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1955:73,avail,available,73,https://qutip.org,https://github.com/qutip/qutip/pull/1955,1,['avail'],['available']
Availability,"**Description**; `QobjEvo` do not use settings value when using tidyup, thus solver do not respond to changes in settings as seen in #1831.; With this, `QobjEvo` will use `settings.auto_tidyup_atol` as the default tolerance. However it will not respond to `settings.auto_tidyup` since cython support for CSR is v4 is flacky and matrix with `0` stored can cause errors. ; Jake's implementation of CSR in v5 solves this. **Related issues or PRs**; Close #1831. **Changelog**; QobjEvo.tidyup use settings.auto_tidyup_atol",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1832:214,toler,tolerance,214,https://qutip.org,https://github.com/qutip/qutip/pull/1832,2,"['error', 'toler']","['errors', 'tolerance']"
Availability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. (but not on retry).; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). - Upload to different artifacts per OS.; - Merge artifacts when downloading.; - Add test that all wheels and source are available before pypi release.; - For test build, built artifacts are listed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2476:59,down,download-artifact,59,https://qutip.org,https://github.com/qutip/qutip/pull/2476,5,"['Down', 'avail', 'down']","['Download', 'available', 'download', 'download-artifact', 'downloading']"
Availability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. ; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). I also updated cibuildwheel version, we did it in qutip-5.0.X to build wheels for py3.12, but did not push it yet to master. I also merged the jobs to publish or pypi and testpypi, only some environment variables changed and they could get out of synchronization. Lastly I added a check that all wheels are available before uploading to pypi. With 5.0.3's first try, only linux's wheel were published,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477:59,down,download-artifact,59,https://qutip.org,https://github.com/qutip/qutip/pull/2477,4,"['Down', 'avail', 'down']","['Download', 'available', 'download', 'download-artifact']"
Availability,"**Description**; `f16` does not exist on Windows. Use `np.longdouble` instead, which is `f16` on Mac/Linux and `f8` on Windows. On windows one gets; ```python; >>> np.dtype([('f', np.longdouble)]) ; dtype([('f', '<f8')]); ```; On Ubuntu; ```python; >>> np.dtype([('f', np.longdouble)]); dtype([('f', '<f16')]); ```. **Changelog**; fix the dtype error in the lattice module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1313:345,error,error,345,https://qutip.org,https://github.com/qutip/qutip/pull/1313,1,['error'],['error']
Availability,"**Description**; `parallel_map` did not propagate error of sub-procceses:; ```; def f(i):; raise Exception; return i. out = qutip.solver.parallel.parallel_map(f, range(5)); ```; would print: ; ```; ERROR:concurrent.futures:exception calling callback for <Future at 0x7fcdfb9b8e50 state=finished raised Exception>; concurrent.futures.process._RemoteTraceback: ; ...; raise Exception; ```; but it would return normally with `out = [None, None, None, None, None]`. This mean we can't use a `try` block to catch error coming from sub-process and only when the output is used, an error is risen. This change `parallel_map` so it raise the first error it encounter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969:50,error,error,50,https://qutip.org,https://github.com/qutip/qutip/pull/1969,5,"['ERROR', 'error']","['ERROR', 'error']"
Availability,**Description**; `pyximport` raises a deprecation warning due to importing `imp` instead of `importlib`. I silenced it. It was causing some problem in qutip-tensorflow testing as all warnings are treated as errors. Let me know if I should have proceeded in a different way. . **Changelog**; Silenced deprecation warning from `pyximport`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582:207,error,errors,207,https://qutip.org,https://github.com/qutip/qutip/pull/1582,1,['error'],['errors']
Availability,**Description**; `test_nm_mcsolve.test_super_H` [failed in master's test](https://github.com/qutip/qutip/actions/runs/8807804559/job/24175678290). . Same issue as #2344. The tolerance is too tight and the test can fail randomly with a low probability.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2407:174,toler,tolerance,174,https://qutip.org,https://github.com/qutip/qutip/pull/2407,1,['toler'],['tolerance']
Availability,"**Description**; `test_super_H` can randomly fail, as seen in https://github.com/qutip/qutip/actions/runs/8112849659/job/22174928821. Trying it locally, it fail with a probability of `~1/500`.; Which is very close to what is expected with the tolerance used in the test.; I loosen the test `atol` for an expected rate of failure of about ~1/100000.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2344:243,toler,tolerance,243,https://qutip.org,https://github.com/qutip/qutip/pull/2344,2,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"**Help needed in the following**; - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/). >I did the `pycodestyle` on my code, but it is highlighting errors that were there in the original code. It returned lines that have >linespace errors and more, should I edit them too?; >Output:. > ```; > D:\qutip\qutip\core\cy>pycodestyle --first qobjevo.pyx; > qobjevo.pyx:1:1: E265 block comment should start with '# '; > qobjevo.pyx:2:80: E501 line too long (83 > 79 characters); > qobjevo.pyx:20:37: E211 whitespace before '('; > qobjevo.pyx:46:56: W605 invalid escape sequence '\s'; > qobjevo.pyx:190:30: E225 missing whitespace around operator; > qobjevo.pyx:423:5: E303 too many blank lines (2); > qobjevo.pyx:426:5: E301 expected 1 blank line, found 0; > qobjevo.pyx:451:34: E127 continuation line over-indented for visual indent; > qobjevo.pyx:572:21: E128 continuation line under-indented for visual indent; > qobjevo.pyx:987:39: E231 missing whitespace after ','; > qobjevo.pyx:989:20: E124 closing bracket does not match visual indentation; > ```. - [ ] Please add tests to cover your changes if applicable. > The issue was to add `__repr__` function to `QobjEvo` class. Do I need to add a test? If so, can someone help me with it?. - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. > I am not sure in what bracket this issue falls. The issue was labeled as `ENH`. - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). > Related to the previous point. **Description**; Added `__repr__` to `QobjEvo`. It is showing the following attribute",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111:198,error,errors,198,https://qutip.org,https://github.com/qutip/qutip/pull/2111,2,['error'],['errors']
Availability,"**Is your feature request related to a problem? Please describe.**; A lot of issues in test fail seem to arise from random objects (as well as low-level math in MKL and/or cython issues). . **Describe the solution you'd like**; There are several options at hand. . ### stick to pytest and be creative; A possible fix in testing may be to add randomly generated data that then is pointed at or fix seeds.; **Pros**: fast (?); **Cons**: technical debt. ### pytest-randomly plugin; [pytest-randomly](https://github.com/pytest-dev/pytest-randomly) is a pytest plugin that addresses this kind of issues. It allows to control `random.seed`, rather than `numpy.random.seed`. ; **Pros**: pytest plugin, supports doctest. ; **Cons**: not super popular, not designed for numpy; ; ### property-based testing with Hypothesis; Hypothesis is a library that aims at changing the way tests are designed, allegedly: it should go from testing an instance to designing a test that applies to a domain of instances ([property-based testing](https://hypothesis.works/)). It is not super clear to me right now. ; It contains various randomness-related features, including a [seed function](https://hypothesis.readthedocs.io/en/latest/reproducing.html#hypothesis.seed). **Pros**: sounds powerful and clever, popular and growing, well documented, more robust even beyond this randomness problems.; **Cons**: radical change of testing framework (?), steep learning curve (?), overkill (?). I also admit I used nose until recently / used with pytest tests thought for nose, without taking advantage of pytest full power.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268:1328,robust,robust,1328,https://qutip.org,https://github.com/qutip/qutip/issues/1268,1,['robust'],['robust']
Availability,"**Is your feature request related to a problem? Please describe.**; In the device simulator of QuTiP (`qutip.qip.device`), a quantum computing device is characterized by the class `Processor` and its subclasses. It contains information about the available control pulses. In addition, a compiler is used to compile a set of universal quantum gates (e.g. RX, RY and ISWAP) into the corresponding control pulses. Together, they can automatically compiler an arbitrary quantum circuit into control pulses, create the time-dependent Hamiltonian representation and run the simulation using QuTiP solvers. However, in the current version, this compilation is done for each gate sequentially. At each time step, there is only one control pulse active. In practice, it is inefficient because usually several gates can be performed parallelly (e.g. X gate on qubit 0 and qubit 1). To make the compilation more practical, it is necessary to introduce a scheduler that schedules the control pulses. A similar example is https://qiskit.org/documentation/apidoc/pulse.html#schedules. **Describe the solution you'd like**; There is existing research (https://arxiv.org/pdf/1708.00023.pdf) on gate-level scheduling. It studies which gates can be performed at the same time. In the most general case, however, gate-level scheduling is not enough, since different gates often have different runtime (.e.g. CNOT usually takes longer time than X gate). Despite the difference, pulse-level scheduling can be done in a similar way as gate-level scheduling by generating a graph (see the reference above). The difference is that each pulse will have its own duration. The possible implementation in `qutip.qip` could be in two steps:; - Modernize the current compiler and create an `Instruction` class representing each compiled control instruction (pulse, qubit index, amplitude, duration).; - Implement the scheduling algorithm similar as in the above reference.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1243:246,avail,available,246,https://qutip.org,https://github.com/qutip/qutip/issues/1243,1,['avail'],['available']
Availability,"**Testing fails on several platforms**; In QuTiP 4.5.1, several `skipif`have been introduced to avoid build fail on Mac. Similarly, there are other issues related to robust random objects testing. . **Describe the solution you'd like**; An option could be using [`xdist`](https://docs.pytest.org/en/3.0.1/xdist.html) to allow specifics of certain tests, as it seems to have, beyond parallelization, some potentially interesting multi-platform coverage.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1267:166,robust,robust,166,https://qutip.org,https://github.com/qutip/qutip/issues/1267,1,['robust'],['robust']
Availability,"**While using Qutip Latest version on Spyder with these imports:** ; from qutip import *; from scipy import *; import os.path; import numpy as np; import matplotlib.pylab as plt; import os. **I got the following error while calculating f_modes and f_energies""**. `Traceback (most recent call last):. File ""/media/rahul/DATA/IISER-PUNE-2019/MBL_copy_30-10-2020/MBL/new_codes/CDT.py"", line 121, in <module>; f_modes_0, f_energies = floquet_modes(H, T, args, True). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/floquet.py"", line 102, in floquet_modes; U = propagator(H, T, [], args). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/propagator.py"", line 184, in propagator; output = sesolve(H2, psi0, tlist, [],. File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/sesolve.py"", line 157, in sesolve; ss = _sesolve_QobjEvo(H, tlist, args, options). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/sesolve.py"", line 185, in _sesolve_QobjEvo; H_td = -1.0j * QobjEvo(H, args, tlist=tlist). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/qobjevo.py"", line 467, in __init__; self.args = args.copy(). **AttributeError: 'float' object has no attribute 'copy'`**. Earlier in my previous system with older version of qutip and python this used to work fine",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1386:212,error,error,212,https://qutip.org,https://github.com/qutip/qutip/issues/1386,1,['error'],['error']
Availability,", qeye(2)) + tensor(qeye(2), sigmaz()); 5 H = H0; ----> 6 prop = propagator(H, 1.0, c_ops). /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/propagator.py in propagator(H, t, c_op_list, args, options, unitary_mode, parallel, progress_bar, _safe_mode, **kwargs); 240 shape=(N, N), dtype=complex)); 241 output = mesolve(H, rho0, tlist, c_op_list, [], args, options,; --> 242 _safe_mode=False); 243 for k, t in enumerate(tlist):; 244 u[:, n, k] = mat2vec(output.states[k].full()).T. /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 263 raise Exception(""Invalid H type""); 264 ; --> 265 func, ode_args = ss.makefunc(ss, rho0, args, e_ops, options); 266 ; 267 if _safe_mode:. /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in _qobjevo_set(HS, rho0, args, e_ops, opt); 349 # Should be caught earlier in mesolve.; 350 raise ValueError(""rho0 must be a ket, density matrix or superoperator""); --> 351 _test_liouvillian_dimensions(H_td.cte.dims, rho0.dims); 352 return func, (); 353 . /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in _test_liouvillian_dimensions(L_dims, rho_dims); 332 raise ValueError("""".join([; 333 ""incompatible Liouvillian and state dimensions: "",; --> 334 str(L_dims), "" and "", str(rho_dims),; 335 ])); 336 . ValueError: incompatible Liouvillian and state dimensions: [[[2, 2], [2, 2]], [[2, 2], [2, 2]]] and [[4], [4]]; ```. ### Expected Behaviour. In my given input, vectorization of `rho` is not taken into account. However the documentation could use clarification how input must be provided to avoid this error. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.7.11; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1899:2467,error,error,2467,https://qutip.org,https://github.com/qutip/qutip/issues/1899,1,['error'],['error']
Availability,", rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_matrix to numpy.ndarray; ```. Is it expected? (in this case the doc may be misleading). I tried to trace it down, but could not get any luck for the moment. EDIT: Actually, it seems that in such a case, one has to pass a density matrix and not a state as initial state, and that the liouvillian callback should return a `.data` item.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:2904,down,down,2904,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['down'],['down']
Availability,",1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. Therefore the expectation value should be time-independent. Using sesolve one obtains a wrong result. There seems to be an error when using state vectors instead of density matrices, as is seen by using the mesolve function instead. . I was not able to pinpoint the error in the code, but I checked the result with essolve and using an initial state vector. This raises an exception: ; > Exception: Operator and state do not have same tensor structure: [2, 2, 2] and [2]. essolve works as intended by using a density matrix instead, which should again indicate that there is some bug when using state vectors. Note however that the essolve bug might not be directly related to the sesolve bug, since essolve seems to work correctly when using a different initial state:; `psi0 = tensor([(basis(2,0) + 0.5*(-1j)**i *basis(2,1)).unit() for i in range(0,N)])`. I am using the newest versions of the necessary libraries: . > QuTiP Version: 4.2.0; > Numpy Version: 1.11.3; > Scipy Version: 1.0.0; > Cython Version: 0.27.3; > Matplotlib Version: 2.0.2; > Python Version: 3.6.4; > Number of CPUs: 4; > BLAS Info: OPENBLAS; > OPENMP Installed: False; > INTEL MKL Ext: False; > Platform Info: Linux (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:2267,error,error,2267,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['error'],['error']
Availability,"- Fixed the dims on the final_state output in mesolve and sesolve.; - Also explicitly set the isherm on ouput from mesolve to be True, since the output should be viewed as aa DM regardless if small numerical errors may the isherm check fail.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/486:208,error,errors,208,https://qutip.org,https://github.com/qutip/qutip/pull/486,1,['error'],['errors']
Availability,- Made qutip.entropy.concurrence work for pure states in addition to density matrices.; - Improved error checks.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/143:99,error,error,99,https://qutip.org,https://github.com/qutip/qutip/pull/143,1,['error'],['error']
Availability,- occasional unit tests error due to tight tolerance; - warning when calling `choi_to_chi`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/129:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/129,2,"['error', 'toler']","['error', 'tolerance']"
Availability,- use the serial_map function that is now available in qutip.parallel,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/288:42,avail,available,42,https://qutip.org,https://github.com/qutip/qutip/pull/288,1,['avail'],['available']
Availability,"-I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec',",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65676,error,error,65676,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 335, in run_setup; exec(code, locals()); File ""<string>"", line 247, in <module>; File ""<string>"", line 46, in process_options; File ""<string>"", line 130, in _determine_version; AttributeError: module 'packaging.version' has no attribute 'LegacyVersion'; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> See above for output. note: This error originates from a subprocess, and is likely not a problem with pip.; ```. ### Expected Behaviour. Should install `qutip` without errors. ### Your Environment. ```shell; QuTip Version: 4.7.0; Python version: 3.11.0; `packaging` version: 22.0; `pip` version: 22.3.1; ```. ### Additional Context. I explicitly mention Python 3.11 because I failed to replicate the issue on a fresh Python 3.10 environment. . EDIT: Looking deeper into the [qutip built distributions](https://pypi.org/project/qutip/#files), the reason why this is failing only for Python 3.11 is because earlier versions of Python have built distributions, unlike Python 3.11. . This indicates that building the wheel from source is generally broken, which I confirmed by forcing an installation from source on Python 3.10 with; ```bash; pip install qutip --no-cache-dir --no-binary :all:; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:2589,error,error,2589,https://qutip.org,https://github.com/qutip/qutip/issues/2036,2,['error'],"['error', 'errors']"
Availability,-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ==========================================,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30879,ERROR,ERROR,30879,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.30s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.23s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.61s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.61s. Est. time left: 00:00:00:06; 52.0%. Run time: 4.99s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.01s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.37s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.74s. Est. time left: 00:00:00:01; Total run time: 5.89s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 89, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:7534,ERROR,ERROR,7534,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.31s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.25s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.65s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.65s. Est. time left: 00:00:00:06; 52.0%. Run time: 5.06s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.07s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.50s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.88s. Est. time left: 00:00:00:01; Total run time: 5.99s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_heterodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 119, in test_ssesolve_heterodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin cap",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:9129,ERROR,ERROR,9129,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.40s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.32s. Est. time left: 00:00:00:17; 32.0%. Run time: 4.88s. Est. time left: 00:00:00:10; 40.0%. Run time: 4.89s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.45s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.49s. Est. time left: 00:00:00:03; 72.0%. Run time: 6.02s. Est. time left: 00:00:00:02; 80.0%. Run time: 6.57s. Est. time left: 00:00:00:01; Total run time: 6.62s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_heterodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 120, in test_ssesolve_heterodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin cap",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:4331,ERROR,ERROR,4331,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.46s. Est. time left: 00:00:00:25; 20.0%. Run time: 4.37s. Est. time left: 00:00:00:17; 32.0%. Run time: 5.00s. Est. time left: 00:00:00:10; 40.0%. Run time: 5.01s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.65s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.69s. Est. time left: 00:00:00:03; 72.0%. Run time: 6.31s. Est. time left: 00:00:00:02; 80.0%. Run time: 6.89s. Est. time left: 00:00:00:01; Total run time: 7.03s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 90, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:2736,ERROR,ERROR,2736,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 4.13s. Est. time left: 00:00:00:30; 20.0%. Run time: 5.12s. Est. time left: 00:00:00:20; 32.0%. Run time: 6.16s. Est. time left: 00:00:00:13; 40.0%. Run time: 6.21s. Est. time left: 00:00:00:09; 52.0%. Run time: 7.26s. Est. time left: 00:00:00:06; 60.0%. Run time: 7.37s. Est. time left: 00:00:00:04; 72.0%. Run time: 8.34s. Est. time left: 00:00:00:03; 80.0%. Run time: 9.25s. Est. time left: 00:00:00:02; Total run time: 9.33s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 59, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:5931,ERROR,ERROR,5931,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,". I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:1164,error,error,1164,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['error'],['error']
Availability,". There were several issues with this function, which I have attempted to rectify as described below. Also its my first pull request (instead of asking anubhav or alex to help), so if I messed it up let me know. 1) The default method, a direct solution using sparse matrices, would fail with an ""exactly singular"" error on small examples (like the well studied single-resonant level or double quantum dot examples). The other sparse methods also suffered from the same issue, as did the 'direct' method for dense solutions. The latter, the dense matrices solver, I have fixed by capturing the error using lstsq() if np.linalg.solve() fails. For the sparse cases there seems to no equivalent fix. One can solve the issue by adding a small finite frequency to the definition of the shot noise. However, this seems like a bit of a bodge, and could cause issues if this small frequency is of the order of some system frequencies. So I have changed the default behavior to use the dense solvers, and added a description of the sparse matrix issues in the function description and in an example notebook I will upload to the example notebooks github. . Maybe someone can suggest a better fix?. 2) There was, in addition, an error in the definition of the shot noise formula in the default sparse matrix direct solution. In addition, the dense methods which used pinv() were also incorrectly defined (they were missing pre and post- multiplication by the 'Q' operator), and would thus give different results from the direct solutions. These issues have been fixed, and everything now fits expected analytical results (see example notebook). 3) I have added a frequency dependence via a list of possible frequencies at which to evaluate the shot noise. 4) I removed the option of passing a pseudo-inverse to the function directly, and changed various other interface things. I am not sure if everything conforms to PEP8 etc. Edit: the example notebook is here https://github.com/qutip/qutip-notebooks/pull/35",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528:1352,error,error,1352,https://qutip.org,https://github.com/qutip/qutip/pull/528,1,['error'],['error']
Availability,". ~\Anaconda3\lib\site-packages\qutip\__init__.py in <module>; 31 #; 32 ; ---> 33 from .core import *; 34 from .solver import *; 35 from .solver import nonmarkov. ~\Anaconda3\lib\site-packages\qutip\core\__init__.py in <module>; 1 from .options import *; 2 from .coefficient import *; ----> 3 from .qobj import *; 4 from .cy.qobjevo import *; 5 from .expect import *. ~\Anaconda3\lib\site-packages\qutip\core\qobj.py in <module>; 1806 from qutip.core.superoperator import vector_to_operator, operator_to_vector; 1807 from qutip.core.tensor import tensor_swap, tensor; -> 1808 from qutip.core import metrics as mts. ~\Anaconda3\lib\site-packages\qutip\core\metrics.py in <module>; 17 from .operators import qeye, qeye_like; 18 from .states import ket2dm; ---> 19 from .semidefinite import dnorm_problem, dnorm_sparse_problem; 20 from . import data as _data; 21 . ~\Anaconda3\lib\site-packages\qutip\core\semidefinite.py in <module>; 12 # Conditionally import CVXPY; 13 try:; ---> 14 import cvxpy; 15 ; 16 __all__ = [""dnorm_problem"", ""dnorm_sparse_problem""]. ~\Anaconda3\lib\site-packages\cvxpy\__init__.py in <module>; 16 ; 17 __version__ = ""1.1.17""; ---> 18 import cvxpy.interface.scipy_wrapper; 19 from cvxpy.atoms import *; 20 from cvxpy.constraints import PSD, SOC, NonPos, Zero. ~\Anaconda3\lib\site-packages\cvxpy\interface\scipy_wrapper.py in <module>; 35 ; 36 for method_name in BIN_OPS:; ---> 37 method = getattr(spmatrix, method_name); 38 new_method = wrap_bin_op(method); 39 setattr(spmatrix, method_name, new_method). AttributeError: type object 'spmatrix' has no attribute '__div__'; ```. ### Expected Behaviour. Expected no error when imprting qutip. ### Your Environment. ```shell; numpy 2.0.1; scipy 1.13.1; qutip 5.0.3.post1; Cython 0.29.24; matplotlib 3.9.1; py 1.10.0; python-dateutil 2.8.2; python-lsp-black 1.0.0; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.2.4; python-slugify 5.0.2; 8 CPUs; Windows 10 Version	10.0.19045 Build 19045; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:2759,error,error,2759,https://qutip.org,https://github.com/qutip/qutip/issues/2500,1,['error'],['error']
Availability,".4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incorrect"" environment uses the `accelerate` numpy install, and qutip installed with pip. Each environment has the same `qutip.about()` return string. In reality, my use case is more complex than this, but I managed to boil down the error to faulty matrix diagonlization. I also want to add that I do indeed get a factor of ~4 speedup in pure numpy examples (like those linked in the SE post), so it's only when integrating with QuTiP that something goes awry. It might be the case that there really is some compatibility issue, and using `pip` doesn't really fix anything. I'm mainly wondering whether this behavior is expected, or if there is a correct way of getting QuTiP and the `accelerate` BLAS to work together that I am missing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:2220,down,down,2220,https://qutip.org,https://github.com/qutip/qutip/issues/2273,3,"['down', 'error', 'fault']","['down', 'error', 'faulty']"
Availability,".cy.stochastic"" sources; building extension ""qutip.cy.sparse_utils"" sources; building extension ""qutip.cy.graph_utils"" sources; building extension ""qutip.cy.interpolate"" sources; building extension ""qutip.cy.spmath"" sources; building extension ""qutip.cy.heom"" sources; building extension ""qutip.cy.math"" sources; building extension ""qutip.cy.spconvert"" sources; building extension ""qutip.cy.ptrace"" sources; building extension ""qutip.control.cy_grape"" sources; building data_files sources; build_src: building npy-pkg config files; running build_py; copying qutip/version.py -> build/lib.linux-x86_64-3.5/qutip; copying build/src.linux-x86_64-3.5/qutip/__config__.py -> build/lib.linux-x86_64-3.5/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wfor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4318,error,error,4318,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability,".matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =========================================================; ERROR qutip/tests/core/test_gates.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/core/test_qobjevo.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_integrator.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_mesolve.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ============================================= 17 deselected, 40 warnings, 4 errors in 5.47s ==============================================; ```. ### Expected Behaviour. No errors. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.14.0; Cython Version: 3.0.10; Matplotlib Version: 3.9.0; Python Version: 3.12.4; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Us",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:5440,ERROR,ERROR,5440,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,".py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```. **Additional context**. The first thing to check for is whether plots are being closed. But TestPlot already uses `plt.clf()`. Evidently it is not enough.; Replacing `plt.clf()` with `plt.close('all')` seems to work, allowing tests to be registered as successful without error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:7196,error,error,7196,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,".run(self); 186 ; 187 def build_extensions(self):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. /home/caidish1234/anaconda3/lib/python3.6/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. /home/caidish1234/anaconda3/lib/python3.6/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 572 except KeyError:; 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 ; 576 # Return *all* object filenames, not just the ones we just built. /home/caidish1234/anaconda3/lib/python3.6/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 118 extra_postargs); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 ; 122 def create_static_lib(self, objects, output_libname,. ImportError: Building module rhs82342421 failed: [""distutils.errors.CompileError: command 'gcc' failed with exit status 1\n""]; ```. So, I opened my server's log,it showed lots of:; `cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++ [enabled by default]`. And an error:; `gcc: error trying to exec '/usr/lib/gcc/x86_64-linux-gnu/4.8/cc1plus': execv: Argument list too long`. After killing the kernel, open the notebook again...Everything is ok...I'm puzzled now...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/697:5517,error,errors,5517,https://qutip.org,https://github.com/qutip/qutip/issues/697,3,['error'],"['error', 'errors']"
Availability,".set_title(r""$\sigma_y$ coefficient""); ```. <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/b07b3a64-a2d4-458b-a04e-4c83c0c4c093"">; </div>; Despite these small differences, the simulation results show significant and unexpected variations. ; Below is simulation code and results. ```; import qutip; import numpy as np; import matplotlib.pyplot as plt. sx = qutip.sigmax(); sy = qutip.sigmay(); sz = qutip.sigmaz(); psi0 = qutip.fock(2,0); psi1 = qutip.fock(2,1). def Hrot(coef,tlist): ; return qutip.QobjEvo([[sx,coef.real/2],[sy,coef.imag/2]],tlist=tlist). Omega0 = 10e6 * 2 * np.pi; for wavedata_name in [""index92"",""index93"",""index94""]:; coef = np.loadtxt(f""{wavedata_name}_coef.txt"",dtype=np.complex128); tlist = np.loadtxt(f""{wavedata_name}_tlist.txt"",dtype=np.float64); H = Hrot(coef=coef*Omega0,tlist=tlist); result = qutip.mesolve(H,psi0,tlist=tlist); print(f""{wavedata_name}"",np.abs(psi0.dag()@result.final_state)**2); ```. ```; index92 1.9513183436107076e-10; index93 0.49999366030208936; index94 1.0264492246902099e-13; ```. I would appreciate any insights into the potential causes of these errors and guidance on how to prevent such issues in future simulations. Additional Information:; scipy version: 1.13.0; python version: 3.12.2; qutip version: 5.0.1; numpy version: 1.26.4; Operating system: macOS 15.1. The files with the preselected coefficients and tlist are provided for reproducibility.; [index92_coef.txt](https://github.com/user-attachments/files/17613505/index92_coef.txt); [index92_tlist.txt](https://github.com/user-attachments/files/17613506/index92_tlist.txt); [index93_coef.txt](https://github.com/user-attachments/files/17613507/index93_coef.txt); [index93_tlist.txt](https://github.com/user-attachments/files/17613509/index93_tlist.txt); [index94_coef.txt](https://github.com/user-attachments/files/17613510/index94_coef.txt); [index94_tlist.txt](https://github.com/user-attachments/files/17613511/index94_tlist.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:2725,error,errors,2725,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['error'],['errors']
Availability,"//github.com/python-pillow/Pillow) from 9.4.0 to 10.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>10.0.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Updated libwebp to 1.3.2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7395"">#7395</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Updated zlib to 1.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7344"">#7344</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <h2>10.0.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Fixed deallocating mask images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageFont.MAX_STRING_LENGTH <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7244"">#7244</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix Windows build with pyproject.toml <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7230"">#7230</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Do not close provided file handles with libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7199"">#7199</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert to HSV if mode is HSV in getcolor() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7226"">#7226</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added alpha_on",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:1033,mask,mask,1033,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['mask'],['mask']
Availability,"/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py ____________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:15638,ERROR,ERROR,15638,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > > > cmd_obj.run(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > > > _build_ext.build_ext.run(self); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > > > self.build_extensions(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > > > self.build_extension(ext); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > > > depends=ext.depends); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > > > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > > > raise CompileError, msg; > > > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > > > import numpy as np; > > > ; > > > from qutip import *; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 62, in <module>; > > > qutip.settings.ipython = False; > > > AttributeError: 'module' object has no attribute 'settings'; ###### . This seems similar to the build error in Installation on OS X with Homebrew script error #348. Is this a bug in qutip ? Is there a way to fix this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:5201,error,error,5201,https://qutip.org,https://github.com/qutip/qutip/issues/382,2,['error'],['error']
Availability,"/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py _____",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26437,ERROR,ERROR,26437,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:20125,ERROR,ERROR,20125,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobj",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:12021,ERROR,ERROR,12021,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/misc/build/qutip; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ====================================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:1665,error,error,1665,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; extra options: '-faltivec -I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', plea",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65559,error,error,65559,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"/qutip.org/docs/latest/guide/dynamics/dynamics-time.html#time-interp) it is possible to replace string time-dependent functions (e.g. for a Hamiltonian) using Cubic_Spline. This is the case if one has data describing the time-dependent object which is not easy to write analytically. In `brmesolve` the only option is to provide time-dependent functions as strings (or Cubic_Spline). This works fine for the Hamiltonian, but the `a_ops` fail a check in cy/brcodegen.py when using a Cubic_Spline type. **To Reproduce**; ```python; import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1073,error,error,1073,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['error'],['error']
Availability,/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/si,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30558,ERROR,ERROR,30558,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"0 with size 0; collected 0 items / 1 errors; ==================================== ERRORS ====================================; ______________________ ERROR collecting test_smesolve2.py ______________________; multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:593: in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:936: in _smesolve_generic; task_args, task_kwargs, **map_kwargs); ../../anaconda3/lib/python3.6/site-packages/qutip/parallel.py:260: in parallel_map; return [ar.get() for ar in async_res]; ../../anaconda3/lib/python3.6/site-packages/qutip/parallel.py:260: in <listcomp>; return [ar.get() for ar in async_res]; ../../anaconda3/lib/python3.6/multiprocessing/pool.py:644: in get; raise self._value; E IndexError: index 0 is out of bounds for axis 0 with size 0; ------------------------------- Captured stdout --------------------------------; Total run time: 0.13s; !!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!; =========================== 1 error in 1.92 seconds ============================; Process finished with exit code 0; ```. Does anyone have suggestions on what is going wrong here? Thanks a lot!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:5338,error,errors,5338,https://qutip.org,https://github.com/qutip/qutip/issues/1029,2,['error'],"['error', 'errors']"
Availability,"0, 500); q.propagator([[q.sigmax(), np.cos(tlist)]], tlist); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[26], line 2; 1 tlist = np.linspace(0, 50, 500); ----> 2 q.propagator([[q.sigmax(), np.cos(tlist)]], tlist).states[-1]. File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\solver\propagator.py:62, in propagator(H, t, c_ops, args, options, **kwargs); 59 list_output = True; 61 if not isinstance(H, (Qobj, QobjEvo)):; ---> 62 H = QobjEvo(H, args=args, **kwargs); 64 if c_ops:; 65 H = liouvillian(H, c_ops). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\cy\qobjevo.pyx:223, in qutip.core.cy.qobjevo.QobjEvo.__init__(). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\cy\qobjevo.pyx:272, in qutip.core.cy.qobjevo.QobjEvo._read_element(). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\coefficient.py:175, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 173 for type_ in coefficient_builders:; 174 if isinstance(base, type_):; --> 175 return coefficient_builders[type_](base, **kwargs); 177 if callable(base):; 178 op = FunctionCoefficient(base, args.copy(), style=function_style). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\cy\coefficient.pyx:418, in qutip.core.cy.coefficient.InterCoefficient.__init__(). ValueError: tlist must be the same len as the array to interpolate; ```. ### Expected Behaviour. Code should run without error. ### Your Environment. ```shell; Note that this problem is persistent in the latest 5.0.2, because I checked the source code. QuTiP Version: 5.0.1; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.11.5; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2432:2916,error,error,2916,https://qutip.org,https://github.com/qutip/qutip/issues/2432,1,['error'],['error']
Availability,"1- (#1196 ) The error caused another one and the original message was lost, should work properly.; 2- (#1081 ) Added some check to catch keyboard interrupt in some cython functions: `mcsolve`, `stochastic` and `qobjevo`'s cython functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1199:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1199,1,['error'],['error']
Availability,1. `self.N` in `QubitCircuit` is not the number of gates but the number of qubits.; 2. The error of index excesses number of gates was not captured.; 3. `self.gates.remove(self.gates[self.N - i])` removes the first match but not the last.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1242:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1242,1,['error'],['error']
Availability,"1. version 3.2.0 can not run testing in my mac system OS X EI Capitan. When I try:; `$ python3 -c ""import qutip.testing as qt; qt.run()""`; I get the follow message:; ; > ---; > ; > Ran 0 tests in 0.000s; 2. However, the testing.py and the folder 'tests' exist. I can run the test in the 'tests' folder one-by-one. For example, when I run:; `$ sudo python3 test_mesolve.py`; I get; ; > .....................; > Ran 21 tests in 48.167s; > ; > OK; 3. `sudo` is needed here for permission. For example, when I run: ; `$ python3 test_mesolve.py`; I get a set of the following error message. > # .....E...E.E...E..E..; > ## ERROR: mesolve: time-dependence as array with super as init cond; > ; > Traceback (most recent call last):; > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; > self.test(*self.arg); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/tests/test_mesolve.py"", line 638, in testMETDDecayAsArray; > out1 = mesolve(H, psi0, tlist, c_op_list, []); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/mesolve.py"", line 277, in mesolve; > progress_bar); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/mesolve.py"", line 661, in _mesolve_list_str_td; > cgen.generate(config.tdname + "".pyx""); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/cy/codegen.py"", line 116, in generate; > self.file(filename); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/cy/codegen.py"", line 78, in file; > self.file = open(filename, ""w""); > PermissionError: [Errno 13] Permission denied: 'rhs165050.pyx",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/445:571,error,error,571,https://qutip.org,https://github.com/qutip/qutip/issues/445,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; | 3.6 | 22.13% | 1,860 |; | 3.5 | 19.73% | 1,658 |; | 3.4 | 6.00% | 504 |; | 3.3 | 0.35% | 29 |; | 2.6 | 0.18% | 15 |; | 3.7 | 0.05% | 4 |; | 3.2 | 0.02% | 2 |; | Total | | 8,405 |. This information is relevant also regarding #882. About OS:; ### Operating System; #### 2018; | system_name | percent | download_count |; | -------------- | ------: | -------------: |; | Linux | 57.25% | 4,934 |; | Windows | 26.15% | 2,254 |; | Darwin | 16.38% | 1,412 |; | CYGWIN_NT-10.0 | 0.08% | 7 |; | FreeBSD | 0.07% | 6 |; | CYGWIN_NT-6.1 | 0.03% | 3 |; | DragonFly | 0.02% | 2 |; | MSYS_NT-10.0 | 0.01% | 1 |; | Total | | 8,619 |. This information is relevant for choices such as #959. . ### Country ; #### 2018; | country | percent | download_count |; | ------- | ------: | -------------: |; | US | 38.07% | 2,355 |; | None | 15.97% | 988 |; | DE | 10.01% | 619 |; | CN | 7.36% | 455 |; | NL | 6.16% | 381 |; | IN | 5.63% | 348 |; | GB | 5.42% | 335 |; | JP | 4.57% | 283 |; | CH | 3.46% | 214 |; | CA | 3.36% | 208 |; | Total | | 6,186 |. This data allows to better understand the user base of QuTiP. . * With google analytics it would be possible to keep track of QuTiP's zipped folder downloads from the qutip.org website.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:3179,down,downloads,3179,https://qutip.org,https://github.com/qutip/qutip/issues/997,1,['down'],['downloads']
Availability,"245](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=244) progress_bar, dims=rho0.dims); [246](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=245) res.num_collapse = len(c_ops); [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4890,error,error,4890,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['error'],['error']
Availability,"3, 8]; matlab: [0, 8, 5, 7, 3, 6, 4, 2, 1, 9]; ```; (where I converted the `matlab` indexing into 0-based), however they both have the same ""bandwidth"" of 5, so I assume they are all equivalent. I don't really know anything about the theory here, and just went with what the `matlab` documentation said: https://uk.mathworks.com/help/matlab/ref/symrcm.html. In commit 0ce36d00 it is clear that the functions in `qutip.graph` were meant to be distinct from `Qobj`, so ideally they would be beyond our purview in this package. This actually has already lead to problems with the documentation, since the docstrings in; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L50-L53; and; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L71-L74; are out-of-date. I find that the only uses of `qutip.graph` are in `qutip.steadystate`, which uses `reverse_cuthill_mckee` and `weighted_bipartite_matching`. The former can be replaced directly with the `scipy` version, at the cost of ~10% speed. The latter is not yet in `scipy`, so we ought to perhaps keep it, since it is used and documented for `qutip.steadystate.steadystate`. All other functions in `qutip.graph` are not used, and not documented (and in `scipy` anyway). While obviously I don't want to trample on anybody's code, I think it might be worth considering how we can reduce the package complexity of `qutip`, especially while significant new complexity is frequently being added in the interests of speed. We only have a finite amount of resources to maintain the codebase, and it's already quite difficult to get a handle on bug reports, documentation, testing (what I'm working on in #1181), and keeping old features up-to-date with the new. In the tracking down of these points, I can also strongly advocate for a stricter policy on `git` commit messages and keeping the commit history tidy and descriptive, but I'll live to fight another day on that one!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:4107,down,down,4107,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['down'],['down']
Availability,"3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =====================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:28251,ERROR,ERROR,28251,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"3/issues/2901&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784""><code>c9016bf</code></a> Release 1.26.17</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb""><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3139"">#3139</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8""><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49""><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0""><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3058"">#3058</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa""><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:3859,error,error,3859,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['error'],['error']
Availability,"449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . ImportError: Building module cqobjevo_compiled_coeff_8478972438562 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-79-356f01653dc9> in <module>; 4 ; 5 args = {'A': 6, 'sigma': 0.145}; ----> 6 output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); 7 ; 8 plt.plot(t, output.expect[0]). ~\Anaconda3\lib\site-packages\qutip\mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~\Anaconda3\lib\site-packages\qutip\sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 122 ss = H; 123 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 124 ss = _sesolve_QobjEvo(H, tlist, args, options); 125 elif callable(H):; 126 ss = _sesolve_func_td(H, args, options). ~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:7689,error,errors,7689,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['error'],['errors']
Availability,"5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.whl size=17905114 sha256=3f461cbc07b40c0de96b709ea20bca495c7ffe1b6060a533a1ab733107c161ab; Stored in directory: /home/jevon/.cache/pip/wheels/3a/4d/bf/1c8e9f7874f26a6510d78790d3ba518c98e674e5771110fe1e; Successf",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1398,Down,Downloading,1398,https://qutip.org,https://github.com/qutip/qutip/issues/1246,1,['Down'],['Downloading']
Availability,"5 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 302 ; 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,; 306 sources, depends, extra_postargs). F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 195 plat_spec = PLAT_TO_VCVARS[plat_name]; 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:; 199 raise DistutilsPlatformError(""Unable to find a compatible "". F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 83 vcvarsall, vcruntime = _find_vcvarsall(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 ; 87 try:. ImportError: Building module rhs75680 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; ```; I have tried it many times. Any other functions in Floquet Formalism will still have this problem.; Here is my version information:; ![image](https://user-images.githubusercontent.com/30772228/38968512-6240026a-43be-11e8-9ca7-4179b5f4bac5.png). I would appreciate your reply!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:8870,error,errors,8870,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['error'],['errors']
Availability,"64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; extra options: '-faltivec -I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65188,error,error,65188,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68637,error,error,68637,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68871,error,error,68871,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py ________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21039,ERROR,ERROR,21039,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,": <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Mer",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1504,down,downstream,1504,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['down'],['downstream']
Availability,": error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang comp",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67498,error,error,67498,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,": list; Dimensions of object used for tensor products.; shape: list; Shape of underlying data structure (matrix shape).; copy: bool; Flag specifying whether Qobj should get a copy of the; input data, or use the original.; ```. but the actual `init` function has the form; ```; def __init__(self, arg=None, dims=None,; copy=True, superrep=None, isherm=None, isunitary=None):. ```; so the arguments `inpt` and `shape` aren't recognized. ### Code to Reproduce the Bug. ```shell; qt.Qobj(inpt=np.random.randn(4,4),dims=[[2,2],[2,2]]); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[10], line 1; ----> 1 qt.Qobj(inpt=np.random.randn(4,4),dims=[[2,2],[2,2]]). TypeError: Qobj.__init__() got an unexpected keyword argument 'inpt'; ```. ### Expected Behaviour. If I hover on `qt.Qobj` in VS Code, the signature actually shows `inpt` and not `arg`. It seems like there is some inconsistency in the name of this keyword? No error is expected. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.13.0; Cython Version: None; Matplotlib Version: 3.8.4; Python Version: 3.12.3; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/joey/miniconda3/envs/qutip5/lib/python3.12/site-packages/qutip; ===================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2480:1667,error,error,1667,https://qutip.org,https://github.com/qutip/qutip/issues/2480,1,['error'],['error']
Availability,":; qutip/tests/solver/test_mesolve.py:33: in TestMESolveDecay; ada = a.dag() * a; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =========================================================; ERROR qutip/tests/core/test_gates.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/core/test_qobjevo.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_integrator.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_mesolve.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ============================================= 17 deselected, 40 warnings, 4 errors in 5.47s ==============================================; ```. ### Expected Behaviour. No errors. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.14.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:5318,ERROR,ERROR,5318,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,":\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 337, in run; self.build_extensions(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 473, in compile; self.initialize(); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 383, in initialize; vc_env = query_vcvarsall(VERSION, plat_spec); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 271, in query_vcvarsall; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module qutip.cy.spmatfuncs failed: ['DistutilsPlatformError: Unable to find vcvarsall.bat\n']. I tried testing to see if it was installed correctly by typing import qutip.testing as qt and I get. Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-3-ae6395ba7937>"", line 1, in <module>; import qutip.testing as qt; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'. I have also tried downloading the file, putting it in the folder Anaconda\pkgs, opening a command window, setting the path and installing it there. I don't get any error messages but I still cannot seem to import QuTiP. What am I doing wrong?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:5007,down,downloading,5007,https://qutip.org,https://github.com/qutip/qutip/issues/343,2,"['down', 'error']","['downloading', 'error']"
Availability,"; <li>winbuild: Refactor dependency versions into constants <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7843"">#7843</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Build macOS arm64 wheels natively <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7852"">#7852</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed typo <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7855"">#7855</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Open 16-bit grayscale PNGs as I;16 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7849"">#7849</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle truncated chunks at the end of PNG images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7709"">#7709</a> [<a href=""https://github.com/lajiyuan""><code>@​lajiyuan</code></a>]</li>; <li>Match mask size to pasted image size in GifImagePlugin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7779"">#7779</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed SupportsGetMesh protocol to be public <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7841"">#7841</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7782"">#7782</a> [<a href=""https://github.com/evanmiller""><code>@​evanmiller</code></a>]</li>; <li>Fixed reading FLI/FLC images with a prefix chunk <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7804"">#7804</a> [<a href=""https://github.com/twolife""><code>@​twolife</code></a>]</li>; <li>Updated package name for Tidelift <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7810"">#7810</a> [<a href=""https://github.com/radarhere""><code",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:8626,mask,mask,8626,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['mask'],['mask']
Availability,"; [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:5542,error,error,5542,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['error'],['error']
Availability,"; ^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 335, in run_setup; exec(code, locals()); File ""<string>"", line 247, in <module>; File ""<string>"", line 46, in process_options; File ""<string>"", line 130, in _determine_version; AttributeError: module 'packaging.version' has no attribute 'LegacyVersion'; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> See above for output. note: This error originates from a subprocess, and is likely not a problem with pip.; ```. ### Expected Behaviour. Should install `qutip` without errors. ### Your Environment. ```shell; QuTip Version: 4.7.0; Python version: 3.11.0; `packaging` version: 22.0; `pip` version: 22.3.1; ```. ### Additional Context. I explicitly mention Python 3.11 because I failed to replicate the issue on a fresh Python 3.10 environment. . EDIT: Looking deeper into the [qutip built distributions](https://pypi.org/project/qutip/#files), the reason why this is failing only for Python 3.11 is because earlier versions of Python have built distributions, unlike Python 3.11. . This indicates that building the wheel from source is generally broken, which I confirmed by forcing an installation from s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:2359,error,error,2359,https://qutip.org,https://github.com/qutip/qutip/issues/2036,1,['error'],['error']
Availability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; Index error in stochastic `smesolve` made `milstein` solver with `heterodyne` method converge only O(0.5) instead of the O(1) expected. This fix it. **Changelog**; Fixed typo in stochastic code affecting `heterodyne` detection efficiency.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1283:1105,error,error,1105,https://qutip.org,https://github.com/qutip/qutip/pull/1283,1,['error'],['error']
Availability,"</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1996,error,error,1996,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['error'],['error']
Availability,"<blockquote>; <h2>v1.22.0</h2>; <h1>NumPy 1.22.0 Release Notes</h1>; <p>NumPy 1.22.0 is a big release featuring the work of 153 contributors; spread over 609 pull requests. There have been many improvements,; highlights are:</p>; <ul>; <li>Annotations of the main namespace are essentially complete. Upstream; is a moving target, so there will likely be further improvements,; but the major work is done. This is probably the most user visible; enhancement in this release.</li>; <li>A preliminary version of the proposed Array-API is provided. This is; a step in creating a standard collection of functions that can be; used across application such as CuPy and JAX.</li>; <li>NumPy now has a DLPack backend. DLPack provides a common interchange; format for array (tensor) data.</li>; <li>New methods for <code>quantile</code>, <code>percentile</code>, and related functions. The; new methods provide a complete set of the methods commonly found in; the literature.</li>; <li>A new configurable allocator for use by downstream projects.</li>; </ul>; <p>These are in addition to the ongoing work to provide SIMD support for; commonly used functions, improvements to F2PY, and better documentation.</p>; <p>The Python versions supported in this release are 3.8-3.10, Python 3.7; has been dropped. Note that 32 bit wheels are only provided for Python; 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of; Ubuntu, Fedora, and other Linux distributions dropping 32 bit support.; All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix; the occasional problems encountered by folks using truly huge arrays.</p>; <h2>Expired deprecations</h2>; <h3>Deprecated numeric style dtype strings have been removed</h3>; <p>Using the strings <code>&quot;Bytes0&quot;</code>, <code>&quot;Datetime64&quot;</code>, <code>&quot;Str0&quot;</code>, <code>&quot;Uint32&quot;</code>,; and <code>&quot;Uint64&quot;</code> as a dtype will now raise a <code>TypeError</code>.</p>; <p>(<a h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:1233,down,downstream,1233,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['down'],['downstream']
Availability,"= gates.qubit_clifford_group(); qutip/core/gates.py:815: in qubit_clifford_group; X = sigmax(); qutip/core/operators.py:387: in sigmax; return _SIGMAX.to(dtype, True); qutip/core/qobj.py:395: in to; _data.to(data_type, self._data),; qutip/core/data/convert.pyx:395: in qutip.core.data.convert._to.__call__; return self._convert[to_type, from_type](data); qutip/core/data/convert.pyx:101: in qutip.core.data.convert._converter.__call__; arg = self.functions[i](arg); qutip/core/data/dia.pyx:341: in qutip.core.data.dia.from_csr; cpdef Dia from_csr(CSR matrix):; qutip/core/data/dia.pyx:353: in qutip.core.data.dia.from_csr; return Dia((data, diags), shape=matrix.shape, copy=False); qutip/core/data/dia.pyx:134: in qutip.core.data.dia.Dia.__init__; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ___________________________________________ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initialize_data(arg, dims, copy); qutip/core/qobj.py:295: in _initialize_data; self._data = _data.create(arg, copy=copy); qutip/core/data/convert.pyx:477: in qutip.core.data.convert._create.__call__; return create(arg, shape, copy=copy); qutip/core/data/csr.pyx:139: in qutip.core.data.csr.CSR.__init__; self._scipy = _csr_matrix(data, col_index, row_index, self.shape); qutip/core/data/csr.pyx:56: in qutip.core.data.csr._csr_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; _________________________________________ ERROR collecting qutip/tests/solver/test_integrator.py ____________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:1686,ERROR,ERROR,1686,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,"=""https://redirect.github.com/python-pillow/Pillow/issues/7497"">#7497</a> [<a href=""https://github.com/ZachNagengast""><code>@​ZachNagengast</code></a>]</li>; <li>Add .git-blame-ignore-revs file <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7528"">#7528</a> [<a href=""https://github.com/akx""><code>@​akx</code></a>]</li>; <li>Attempt memory mapping when tile args is a string <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7565"">#7565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7568"">#7568</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unnecessary string length check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7560"">#7560</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Determine mask mode in Python instead of C <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7548"">#7548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected duration when combining multiple GIF frames into single frame <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7521"">#7521</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle disposing GIF background from outside palette <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7515"">#7515</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Seek past the data when skipping a PSD layer <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7483"">#7483</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ImageMath: Inline <code>isinstance</code> check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7623"">#7623</a> [<a href=""https://git",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:5093,mask,mask,5093,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['mask'],['mask']
Availability,"==========; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5852,echo,echo,5852,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['echo'],['echo']
Availability,"===========; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+d377c997-py3.7-macos; x-10.9-x86_64.egg/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ~~~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:3909,fault,fault,3909,https://qutip.org,https://github.com/qutip/qutip/issues/1093,1,['fault'],['fault']
Availability,"============= warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5743,error,error,5743,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,============== short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/quti,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30164,ERROR,ERROR,30164,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"===============""); print(""\nValue of the average_states option: {}."".format(options.average_states)); print(""\nAvailable solver attributes:""); print(solution.__dict__.keys()); print(""\nCheck the type of the avg_states attribute""); print(type(solution.avg_states)); print(""\nThe states have not been averaged over. The shape of the output is {}, with the first dimension labelling the {} trajectories."".format(np.array(solution.states).shape, solution.ntraj)); ```. ### Code Output. ```shell; 10.0%. Run time: 1.02s. Est. time left: 00:00:00:09; 20.0%. Run time: 2.04s. Est. time left: 00:00:00:08; 30.0%. Run time: 3.10s. Est. time left: 00:00:00:07; 40.0%. Run time: 4.10s. Est. time left: 00:00:00:06; 50.0%. Run time: 5.11s. Est. time left: 00:00:00:05; 60.0%. Run time: 6.11s. Est. time left: 00:00:00:04; 70.0%. Run time: 7.19s. Est. time left: 00:00:00:03; 80.0%. Run time: 8.20s. Est. time left: 00:00:00:02; 90.0%. Run time: 9.21s. Est. time left: 00:00:00:01; Total run time: 10.22s; ==========================================; ==========================================. Value of the average_states option: True. Available solver attributes:; dict_keys(['solver', 'times', 'states', 'expect', 'num_expect', 'num_collapse', 'ntraj', 'seeds', 'col_times', 'col_which', 'ss', 'measurement', 'noise', 'traj_states', 'avg_states', 'se']). Check the type of the avg_states attribute; <class 'NoneType'>. The states have not been averaged over. The shape of the output is (500, 172, 50, 1), with the first dimension labelling the 500 trajectories.; ```. ### Expected Behaviour. I expect the states to be averaged over when the average_states option is passed. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.35; Matplotlib Version: 3.7.1; Python Version: 3.10.6; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2216:3349,Avail,Available,3349,https://qutip.org,https://github.com/qutip/qutip/issues/2216,1,['Avail'],['Available']
Availability,=============================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-pac,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30239,ERROR,ERROR,30239,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"==========================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ```. I'm unsure what is going on here. I tried reinstalling qutip without any change. Prior I had a lot of errors referring to xcrun but I fixed that by installing xcode. Is there something else I need to get this working?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:2717,fault,fault,2717,https://qutip.org,https://github.com/qutip/qutip/issues/1124,2,"['error', 'fault']","['errors', 'fault']"
Availability,"=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_v_ncols=10000, __pyx_v_nrows=<optimised out>, __pyx_v_mat=...) at qutip/cy/spconvert.cpp:9472; #1 __pyx_pw_5qutip_2cy_9spconvert_7dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_args=<optimised out>, __pyx_kwds=<optimised out>) at qutip/cy/spconvert.cpp:9237; #2 0x000000000053a8eb in cfunction_call (func=<built-in function dense2D_to_fastcsr_fmode>, args=<optimised out>, kwargs=<optimised out>) at ../Objects/methodobject.c:543; #3 0x000000000051c24b in _PyObject_MakeTpCall (tstate=0x9561b0, callable=<built-in function dense2D_to_fastcsr_fmode>, args=<optimised out>, nargs=<optimised out>, keywords=<optimised out>) at ../Objects/call.c:191; #4 0x000",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1873,fault,fault,1873,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,">; <li>Optimize ImageStat.Stat.extrema <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7593"">#7593</a> [<a href=""https://github.com/florath""><code>@​florath</code></a>]</li>; <li>Handle pathlib.Path in FreeTypeFont <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7578"">#7578</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use list comprehensions to create transformed lists <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7597"">#7597</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Added support for reading DX10 BC4 DDS images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7603"">#7603</a> [<a href=""https://github.com/sambvfx""><code>@​sambvfx</code></a>]</li>; <li>Optimized ImageStat.Stat.count <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7599"">#7599</a> [<a href=""https://github.com/florath""><code>@​florath</code></a>]</li>; <li>Moved error from truetype() to FreeTypeFont <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7587"">#7587</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Correct PDF palette size when saving <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7555"">#7555</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed closing file pointer with olefile 0.47 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7594"">#7594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ruff: Minor optimizations of list comprehensions, x in set, etc. <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7524"">#7524</a> [<a href=""https://github.com/cclauss""><code>@​cclauss</code></a>]</li>; <li>Build Windows wheels using cibuildwheel <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7580"">#7580</a> [<a href=""https://github.com/nulano""><code>@​nulano</code>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:8198,error,error,8198,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['error'],['error']
Availability,">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Restrict builtins for ImageMath.eval() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#59",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1342,redundant,redundant,1342,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['redundant'],['redundant']
Availability,"@tehruhn and I found that trying to install qutip from pip with the latest python 3.9 fails. When we run the installations from a fresh conda env (conda 4.8.5) using pip as. ```; pip install qutip; ```; or with conda (using both). ```; conda install -c conda-forge qutip; conda install qutip; ```. we get different errors. The errors do not occur if we use python3.8 while creating the conda environment as. ```; conda create -n py38 python==3.8; ```. Looking at the error it seems there is specification that prohibits python 3.9. @jakelishman @Ericgig any idea about this?. # Steps to reproduce (with conda 4.8.5). ```; conda create -n qutip-test python=3.9; conda activate qutip-test; conda install -c conda-forge qutip; ```. ### Error; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - qutip -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.5,<3.6.0a0|3.4.*']. Your python: python=3.9. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. Note that strict channel priority may have removed packages",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:315,error,errors,315,https://qutip.org,https://github.com/qutip/qutip/issues/1371,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"A representation of a quantum circuit consiting of qubit initialisation (I), controlled NOT gates (C) and measurements (M) with respect to different bases. According to [1], the transformation of a circuit to the ICM representation provides a cannonical form for an exact and fault-tolerant, error corrected circuit needed for optimization prior to final implementation on a hardware model. The algorithm consists of magic qubit initializations, gate teleportation and conditional measurements on qubits. It can be a starting point for topological descriptions of quantum cirucuits important for fault-tolerant quantum computation and can become a part of a pipeline for optimization of topological quantum computing circuits. Check out the game (MeQuanics)[http://www.mequanics.com.au] which aims to do so using crowd sourcing. Several proposals exist for circuit optimizations once we have the topological circuit model (Machine learning, monte carlo search etc) and the ICM model can be a good starting point to get to the initial topological circuit (as far as I could understand). . The algorithm can be roughly described as follows : . ```; Require: Circuit C composed from {Toffoli,CNOT,H,P,T}; Replace the Toffoli gates with their decomposition; Replace the H gates with P V P (already implemented using `resolve_gates`); Implement P V P using gate teleportation outlined in [1]; ```. The final output is a quantum circuit only using qubit initialisations, CNOT and conditional measurements/correction. Once that is complete, maybe another addition can be a conversion to the topological model and visualizations. This is a work in progress. TODO; ------; [ ] Fix code errors; [ ] Write tests; [ ] Update examples and docs. References; ----------; .. [1] arXiv:1509.03962v1 [quant-ph]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603:276,fault,fault-tolerant,276,https://qutip.org,https://github.com/qutip/qutip/pull/603,4,"['error', 'fault']","['error', 'errors', 'fault-tolerant']"
Availability,"A.indices); A = A.tocsc(A); A.indices = perm.take(A.indices); ```; where, we previously, the following was being done; ``` py; L[perm[:,None], perm]; ```; with `perm` are obtained from `reverse_cuthill_mckee`. . I am not sure which behavior is the correct one, but the performance degradation is quite a lot (more than 10x) and prevents reaching sufficient enough tolerance. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import (about, destroy, qeye, steadystate, tensor). # Paramaeters; # -----------; Nc, Nm = 4, 30; E, kappa = 0.1, 0.3; gamma, delta = 3e-4, -0.43. # Operators; # ----------; a = tensor(destroy(Nc), qeye(Nm)); b = tensor(qeye(Nc), destroy(Nm)). # Hamiltonian; # ------------; H = -delta * (a.dag() * a) + (b.dag() * b) + 2.4 * kappa * (b.dag() + b) * (a.dag() * a) + E * (a.dag() + a). # Collapse operators; # -------------------; cc = np.sqrt(kappa) * a; cm = np.sqrt(2 * gamma) * b; cp = np.sqrt(gamma) * b.dag(); c_ops = [cc, cm, cp]. precond_options = {'permc_spec': 'NATURAL', 'diag_pivot_thresh': 0.1, 'fill_factor': 100, 'options': {'ILU_MILU': 'smilu_2'}}; solver_options = {""use_precond"": False, ""atol"": 1e-10, **precond_options}. rho_ss = steadystate(H, c_ops, method=""direct"", solver=""gmres"", use_rcm=True, **solver_options); ```. ### Code Output. ```shell; RuntimeError: scipy.sparse.linalg.gmres error: Tolerance was not reached; ```. ### Expected Behaviour. Expected tolerance should be reached as we get in `v4.7` like.; ``` py; Quantum object: dims = [[4, 30], [4, 30]], shape = (120, 120), type = oper, isherm = True; ```. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.9.0; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. For more context, I noticed this behaviour while working on this [PR](https://github.com/qutip/qutip-tutorials/pull/97).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2443:2207,error,error,2207,https://qutip.org,https://github.com/qutip/qutip/issues/2443,3,"['Toler', 'error', 'toler']","['Tolerance', 'error', 'tolerance']"
Availability,"According to pep8 comparisons should be. ```; if Object is None:; ```. instead of . ```; if Object == None:; ```. I'm not 100% sure whether changing the comparisons will break anything so I left it untouched for now. If you have pep8 installed you can check for this error with. ```; pep8 --select=E711 *.py; ```. inside the qutip dir, which currently yields. ./bloch.py:443:17: E711 comparison to None should be 'if cond is None:'; ./bloch_redfield.py:141:16: E711 comparison to None should be 'if cond is None:'; ./bloch_redfield.py:176:14: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:106:10: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:117:13: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:119:16: E711 comparison to None should be 'if cond is not None:'; ./correlation.py:130:14: E711 comparison to None should be 'if cond is None:'; ./correlation.py:180:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:198:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:227:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:257:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:307:13: E711 comparison to None should be 'if cond is None:'; ./eseries.py:230:22: E711 comparison to None should be 'if cond is None:'; ./essolve.py:73:18: E711 comparison to None should be 'if cond is None:'; ./fileio.py:48:17: E711 comparison to None should be 'if cond is None:'; ./fileio.py:141:17: E711 comparison to None should be 'if cond is None:'; ./fileio.py:155:27: E711 comparison to None should be 'if cond is None:'; ./floquet.py:492:24: E711 comparison to None should be 'if cond is None:'; ./floquet.py:651:16: E711 comparison to None should be 'if cond is None:'; ./floquet.py:703:14: E711 comparison to None should be 'if cond is not None:'; ./floquet.py:815:10: E711 comparison to None should be",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/10:267,error,error,267,https://qutip.org,https://github.com/qutip/qutip/issues/10,1,['error'],['error']
Availability,Adapt to download / upload artifacts v4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2476:9,down,download,9,https://qutip.org,https://github.com/qutip/qutip/pull/2476,2,['down'],['download']
Availability,Add QuTiP download statistics to better evaluate its impact,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:10,down,download,10,https://qutip.org,https://github.com/qutip/qutip/issues/997,1,['down'],['download']
Availability,Add a linux python 3.8 test; Fix MacOS python version to 3.7 as our test environment result in conflict on 3.8; * Does not fix mac tests' errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1125:138,error,errors,138,https://qutip.org,https://github.com/qutip/qutip/pull/1125,1,['error'],['errors']
Availability,Add a tolerance for measurement.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656:6,toler,tolerance,6,https://qutip.org,https://github.com/qutip/qutip/pull/1656,1,['toler'],['tolerance']
Availability,Add error message to MemoryError,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/2304,1,['error'],['error']
Availability,"Added the option to import string to python instead of compiling to cython for QobjEvo.; This is default if no cython, or set manually if cython available. `QobjEvoInstance.use_cython = False`; Added test and updated docstring.; Work in parallel.; Did not do any benchmark yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082:145,avail,available,145,https://qutip.org,https://github.com/qutip/qutip/pull/1082,1,['avail'],['available']
Availability,"After installing qutip via conda (conda install qutip) on Mac 10.15.1 High Sierra, I ran the testing script using:. >> import qutip.testing as qt ; >> qt.run(). I am getting the following error: . Qobj subtraction ... python(4259,0x119a26dc0) malloc: Incorrect checksum for freed object 0x7fdbb05c5910: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(4259,0x119a26dc0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6. Does anyone know what is causing this, how to fix it, or what kinds of problems it might cause later? Thank you!. Sacha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120:188,error,error,188,https://qutip.org,https://github.com/qutip/qutip/issues/1120,1,['error'],['error']
Availability,"After installing qutip, in order to test qutip installation, I type ""python"" in terminal and then type ""import qutip.testing as qt"", getteing to the following error. import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'qutip'; >>> qt.run(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'qt' is not defined. If anyone can help to solve the problem?; Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391:159,error,error,159,https://qutip.org,https://github.com/qutip/qutip/issues/1391,1,['error'],['error']
Availability,"Alex has asked about having a faster expm method for Qobj objects. Having looked into it a bit, here are my thoughts:; - We should check to see if the Qobj is diag, and if so just do the exp on the elements. Otherwise do a dense expm. This is really what matlab does. This will be done in parallel if connected to a good BLAS.; - I have yet to find a real-world usage case where the resulting expm is not a dense matrix. Therefore, the above suggestion seems to be optimal.; - There is a bug in our expm code for a particular kind of matrix, this happens to be a particular diagonal matrix.; - There is a bug in the scipy.sparse.linalg.expm function that is even more serious, and was reported.; - Someone discussed using approximation methods for the expm in the control module. This is an interesting idea in general, but we would need some way of quantifying the error in the approximation. This has probably already been done in the literature somewhere.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462:866,error,error,866,https://qutip.org,https://github.com/qutip/qutip/issues/462,1,['error'],['error']
Availability,Also fixed some errors in the docstring and indentation.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/149:16,error,errors,16,https://qutip.org,https://github.com/qutip/qutip/pull/149,1,['error'],['errors']
Availability,"Also for `operator_to_vector`, though this is harder to mis-use. The documentation now spells out exactly what we expect, and we verify that we do have the correct inputs, rather than exploding with a misleading error message (at best) or silently doing something very unexpected (at worst). Fix gh-1204.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1475:212,error,error,212,https://qutip.org,https://github.com/qutip/qutip/pull/1475,1,['error'],['error']
Availability,Ambiguous error message for circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1426:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/1426,1,['error'],['error']
Availability,"An additional algorithm has been added. The existing GRAPE algorithm remains the default; The CRAB algorithm was developed at the University of Ulm; The main difference is that it reduces the number of optimisation variables by defining the control pulses by expansions of basis functions, where the variables are the coefficients. Typically a Fourier series is chosen, i.e. the variables are the Fourier coefficients. Therefore it does not need to compute an explicit gradient. By default it uses the Nelder-Mead method for fidelity error minimisation. Further explanation is given in the comments. Significant changes were required to many of the classes in order to support another alg option in a tidy way.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/338:534,error,error,534,https://qutip.org,https://github.com/qutip/qutip/pull/338,1,['error'],['error']
Availability,"As noted by @ajgpitch in #476, Travis CI is currently raising a large number of errors, as every call to `dnorm()` results in a `SolverError`. I am in the process of investigating this problem, but have not yet been able to reproduce the test failures locally. It appears as though the failures only occur when MKL and CVXPY are used together, but I am able to use MKL and CVXPY together fine locally.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484:80,error,errors,80,https://qutip.org,https://github.com/qutip/qutip/issues/484,3,"['error', 'failure']","['errors', 'failures']"
Availability,"As reported by Dan Hu on the mailing list, the cython code generated by Codegen fails to compile if args contains complex valued variables. The following minimal example reproduces the problem:. ```; from qutip import *; a = destroy(10); H0 = a.dag() * a; #H = [H0, [a.dag(), 'exp(1j * w * t) '], [a, 'exp(-1j * w * t)']]; args = {'w': 1} # works ; H = [H0, [a.dag(), 'exp(delta * t) '], [a, 'exp(-delta * t)']]; args = {'delta': 1j} # fails; mesolve(H, basis(10, 2), linspace(0, 10, 100), [a], [], args=args); ```. The error from the cython code is:. ```; spmvpy(data1, idx1, ptr1, vec, np.exp(-delta * t), out); ^; ------------------------------------------------------------; rhs9.pyx:20:39: Invalid operand type for '-' (complex_t); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/68:520,error,error,520,https://qutip.org,https://github.com/qutip/qutip/issues/68,1,['error'],['error']
Availability,"At present the only known working option that works with the runtime compile features (e.g. string type time-dependence) requires Visual Studio 2015 with C++ options. The community edition is fine, which has no monetary cost, but it does come with a considerable install time and disk space (11GB) cost. . According to the [Python wiki on Windows compilers](https://wiki.python.org/moin/WindowsCompilers) These [build tools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017) are supposed to work, but so far I did not succeed. Not tried in a while, as I don't have very easy access to a Windows machine I can play with. So if someone else wants to give a try, then that would be just great. This issue would ideally be closed after a merging of a PR updating the installation instructions in https://github.com/qutip/qutip-doc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/954:460,down,downloads,460,https://qutip.org,https://github.com/qutip/qutip/issues/954,1,['down'],['downloads']
Availability,Attempt to solve issue with false errors in Qobj division tests on 32 bit system by using comparison that is more robust to floating-point errors.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/306:34,error,errors,34,https://qutip.org,https://github.com/qutip/qutip/pull/306,3,"['error', 'robust']","['errors', 'robust']"
Availability,BUG: Fix strange RHS file error on Win,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/pull/729,1,['error'],['error']
Availability,BUG: Loosen tolerance on td-BR states test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/722:12,toler,tolerance,12,https://qutip.org,https://github.com/qutip/qutip/pull/722,1,['toler'],['tolerance']
Availability,BUG: Loosen tolerances on some random tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/636:12,toler,tolerances,12,https://qutip.org,https://github.com/qutip/qutip/pull/636,1,['toler'],['tolerances']
Availability,BUG: MKL error checking dict key error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/734:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/734,2,['error'],['error']
Availability,BUG: MKL error handling not working correctly,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/705:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/705,1,['error'],['error']
Availability,BUG: Wrong phase in td-BR solver due to vec ordering error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/712:53,error,error,53,https://qutip.org,https://github.com/qutip/qutip/pull/712,1,['error'],['error']
Availability,"Badges tell some features of a project, such as code coverage, build status, downloads. ; A comprehensive list of badges can be generated on [shields.io](https://shields.io).; Not any badge that can be generated is interesting to be displayed, but some badges might be cool and informative. ; Anaconda provides some of them at https://anaconda.org/conda-forge/qutip/badges. ; Recently the `conda-forge` download counter was added to Readme.md: [![Anaconda-Server Badge](https://anaconda.org/conda-forge/qutip/badges/downloads.svg)](https://anaconda.org/conda-forge/qutip).; It could be interesting to add meaningful badges from shields.io. On https://github.com/badges/shields it is even possible to generate new badges (one could eventually think of badges providing information about the integration with the quantum-tech ecosystem).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983:77,down,downloads,77,https://qutip.org,https://github.com/qutip/qutip/issues/983,3,['down'],"['download', 'downloads']"
Availability,Bloch sphere animation error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/836,1,['error'],['error']
Availability,Bugs leading to error in building the documentation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1021:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1021,1,['error'],['error']
Availability,"Build failure on numpy 1.10.1, extra_link_args",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392:6,failure,failure,6,https://qutip.org,https://github.com/qutip/qutip/issues/392,1,['failure'],['failure']
Availability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.18 to 1.26.19.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.19</h2>; <h2>🚀 urllib3 is fundraising for HTTP/2 support</h2>; <p><a href=""https://sethmlarson.dev/urllib3-is-fundraising-for-http2-support"">urllib3 is raising ~$40,000 USD</a> to release HTTP/2 support and ensure long-term sustainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed ha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:490,mainten,maintenance,490,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['mainten'],['maintenance']
Availability,"Bumps [wheel](https://github.com/pypa/wheel) from 0.37.0 to 0.38.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pypa/wheel/blob/main/docs/news.rst"">wheel's changelog</a>.</em></p>; <blockquote>; <h1>Release Notes</h1>; <p><strong>UNRELEASED</strong></p>; <ul>; <li>Updated vendored <code>packaging</code> to 22.0</li>; </ul>; <p><strong>0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DAT",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:659,failure,failure,659,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['failure'],['failure']
Availability,"By installing qutip via. pip2 install qutip==4.3.1. (I had another problem with qutip 4.4.1 with the python2.7 interpreter) I ran into a problem with cython - several ""Error compiling Cython file"" messages. Here I have cython v. 0.23.4 and the minimum requirement is displayed as 0.21. I guess this minimum requirement should be changed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129:168,Error,Error,168,https://qutip.org,https://github.com/qutip/qutip/issues/1129,1,['Error'],['Error']
Availability,Catch and raise the error message of the subprocess. **Description**; See https://github.com/qutip/qutip/issues/1426#issuecomment-770080582. **Related issues or PRs**; This should fix #1426 . **Changelog**; Improve the error message of circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/pull/1427,2,['error'],['error']
Availability,"Currently QuTiP solvers are pure batch jobs. One calls a function, e.g. `mesolve`, which then runs until the state has been propagated to all requested time steps and then the function returns the result. There are a variety of use cases where having access to results as they are calculated can be useful:. * Implementing a progress bar; * Limiting how long a solver runs for; * Stopping a solver early if a steady state or other desired or undesired state is detected.; * Implementing adaptive solvers where parameters are changed depending on the current state. We're currently refactoring the QuTiP solvers for QuTiP v5, so perhaps now is a good time to consider whether this feature will see enough use to be worth the effort. Implementation options:. * The solver could call a `callback function` each time a new result becomes available.; * The solver could `yield` each time a new result becomes available.; * The solver could do something asynchronous (I think this is not worth supporting natively in QuTiP -- either of the others would allow something asynchronous to be implemented by a QuTiP users themselves if they wanted). Probably these are not mutually exclusive. To make porting easier, it should still be possible to call some solve function without a callback or yielding as one can do now. Related issues:. * qucontrol/krotov#93",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571:834,avail,available,834,https://qutip.org,https://github.com/qutip/qutip/issues/1571,2,['avail'],['available']
Availability,"Currently e_ops argument is a list of expectation values to be calculated, and the result is stored as a list of ndarray in result.expect (where result is the Odedata instance returned by the solver). If expectation values for a lot of different operators are requested it becomes a bit tedious to keep track of which order the operators appear in e_ops, and which index show be used in result.expect. A solution could be to make all evolution solvers support that e_ops is given as a dictionary, for example:. ```; e_ops = {'a' : destroy(N), 'N': num(N), 'X': destroy(N) + create(N)}; ```. If e_ops is a dictionary, result.expect should also be a dictionary with the same keys, which would make it easy and less error prone to retrieve the results from result.expect.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/20:713,error,error,713,https://qutip.org,https://github.com/qutip/qutip/issues/20,1,['error'],['error']
Availability,"Currently qutip.control.optimize_pulse supports four formats for `oper_dtype` (i.e. its internal representation of propagators and intermediate states). The four formats and their statuses before this PR are described below:. - `numpy.ndarray`: Working.; - `Qobj`: Working, except that some dimensions were lost in Qobj construction and using sparse eigenvector decomposition was broken.; - `scipy.sparse.csr_matrix`: Broken. There was an undefined variable referenced in the code to construct the propagators. Many code paths had no explicit support for them and assumed they worked the same as ndarrays in cases where they didn't.; - `anything matrix-like`: Broken for the same reasons as `csr_matrix` above. This PR removes support for last two oper_dtypes and fixes the `Qobj` one, leaving the situation as follows:. - `numpy.ndarray`: Working.; - `Qobj`: Working.; - `scipy.sparse.csr_matrix`: No longer supported.; - `anything matrix-like`: No longer supported. Note that `Qobj` uses sparse matrices internally, so CSR matrix support is still available via the `Qobj` oper_dtype. In QuTiP v5, only `Qobj` support will be retained since `Qobj` will support both sparse and dense representations via the data layer. **Related issues or PRs**; * Fixes #1617. **Changelog**; Fix qutip.control.optimize_pulse support for sparse eigenvector decomposition with the Qobj oper_dtype (the Qobj oper_dtype is the default for large systems).; Remove qutip.control.optimize_pulse support for scipy.sparse.csr_matrix and generic ndarray-like matrices. Support for these was non-functional.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1621:1049,avail,available,1049,https://qutip.org,https://github.com/qutip/qutip/pull/1621,1,['avail'],['available']
Availability,"Currently, running `make html` produces a `_build/html` directory that is 50MB large. This causes problems with the qutip/qutip.github.io repository, because currently part of our deployment process involves copying this directory in a new folder in this repo every time we do a minor release. The `docs` folder of the website is already 239MB (and `downloads` is another `154M`, but that's a separate problem - we need to start releasing the PDF documentation in GitHub Releases from this repo and hot-linking to fix that), which is already somewhat beyond ""reasonable"" for a website. There are two main problems causing this right now:; 1. we repackage 13MB of static assets every time we rebuild. Some of these are sensible (we _should_ repackage our styles), but we have 9MB of webfonts (we could link to Google's webfonts CDN) and another 0.5MB of jquery and underscore JavaScript libraries that we could also use versioned hotlinks to.; 2. certain images (e.g. `guide-visualization-6.pdf`) are generated as ultra-high resolution PDFs, which takes up a lot of space (4.6MB for that particular one, though it's the worst offender) and also makes a PDF that can choke some of the weaker PDF readers out there. Both of these are quite fixable I think, but may require us patching/intercepting the output of Sphinx. This can be sensibly done within the `Makefile`, but it's a very nontrivial task.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1539:350,down,downloads,350,https://qutip.org,https://github.com/qutip/qutip/issues/1539,1,['down'],['downloads']
Availability,Cython error with time dependent Hamiltonian on Win10,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/1026,1,['error'],['error']
Availability,"Dear Qutip admin,. Currently, I am using mesolve in qutip. I would like to get the final_state from the mesolve without evaluating any expectation operator (e_ops). I realize that the default feature of qutip is that if I input e_ops to be an empty matrix and set final_state_store = True, qutip will automatically store the state at all time which will slow down the simulation. As for now, I would like to have mesolve to store only the final_state without storing the states at all time. May I kindly ask for your help to add this feature to mesolve? Is it possible also to add a feature where I can evaluate the expectation operator at the final time only without having to evaluate it at all time?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472:359,down,down,359,https://qutip.org,https://github.com/qutip/qutip/issues/1472,1,['down'],['down']
Availability,"Dear developers,. I'm failing to install qutip on Ubuntu 18.04 via pip. The error output says:; ```bash; error: invalid command 'bdist_wheel'; ; ----------------------------------------; Failed building wheel for qutip; ```. How can I solve this issue?. Regards. PS: The relevant software versions are; python3 3.6.8; python3-venv 3.6.7; qutip 4.4.1 (The version I tried to install.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1086:76,error,error,76,https://qutip.org,https://github.com/qutip/qutip/issues/1086,2,['error'],['error']
Availability,"Dear qutip admin,. I have a question related to the question about mesolve returning only final state. Here, I would like to ask how to save only the propagator matrix at the final time from qutip.propagator without saving the propagator matrix at all time steps? If I followed the method given in the previous thread titled ""mesolve returning only final state"", the method does not work. Basically if I declared H as QobjEvo and use it in qutip.propagator, I got the following error message ""Invalid time-dependent format"". Any idea how to rectify this problem? Below is the code. import qutip; import numpy as np. fast_ts = np.linspace(0, 1, 1001); omegalist = 2.91e2*fast_ts; fast_xs = 2.9e3*np.pi * np.cos(2*np.pi * omegalist * fast_ts). H = qutip.QobjEvo([[qutip.sigmax(), fast_xs]], tlist=fast_ts); rho = qutip.basis(2, 0).proj(); times = np.array([0., 1]). e_ops = [qutip.sigmay()]; options = qutip.Options(nsteps=10_000_000, atol=1e-14, rtol=1e-12). two_times = qutip.mesolve(H, rho, times, e_ops=e_ops, options=options); many_times = qutip.mesolve(H, rho, fast_ts, e_ops=e_ops, options=options). U = qutip.propagator(H, times, [], options=options); print(U[1]*rho)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1482:478,error,error,478,https://qutip.org,https://github.com/qutip/qutip/issues/1482,1,['error'],['error']
Availability,Description; Fixes TypeError: 'Axes3D' object is not iterable when running the code from the tutorial. Related issues or PRs; #799 . Changelog; Fixed runtime error in http://qutip.org/docs/latest/guide/guide-bloch.html#generating-images-for-animation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558:158,error,error,158,https://qutip.org,https://github.com/qutip/qutip/pull/1558,1,['error'],['error']
Availability,Dimension error on time evolving Hamiltonian for solving master equation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1988:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/1988,1,['error'],['error']
Availability,Dimensions error when attempting to solve time evolving annealing Hamiltonian using mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['error'],['error']
Availability,Documentation error in `chi_to_choi`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1730:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/issues/1730,1,['error'],['error']
Availability,"Does anyone know how to fix the following error, or even how to interpret it?. ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-2-d4205f385795> in <module>(); ----> 1 from qutip import*. /home/jan/.local/lib/python2.7/site-packages/qutip/__init__.pyc in <module>(); 203 ; 204 # core; --> 205 from qutip.qobj import *; 206 from qutip.states import *; 207 from qutip.operators import *. /home/jan/.local/lib/python2.7/site-packages/qutip/qobj.py in <module>(); 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.ptrace import _ptrace; 62 from qutip.permute import _permute. /home/jan/.local/lib/python2.7/site-packages/qutip/fastsparse.py in <module>(); 403 #Need to do some trailing imports here; 404 #-------------------------------------; --> 405 from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint). /home/jan/.local/lib/python2.7/site-packages/qutip/cy/__init__.py in <module>(); ----> 1 from qutip.cy.spmatfuncs import *. ImportError: /home/jan/.local/lib/python2.7/site-packages/qutip/cy/spmatfuncs.so: undefined symbol: PyUnicodeUCS2_FromStringAndSize",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637:42,error,error,42,https://qutip.org,https://github.com/qutip/qutip/issues/637,1,['error'],['error']
Availability,Doesn't install matplotlib when installing on windows.; And then produces errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878:74,error,errors,74,https://qutip.org,https://github.com/qutip/qutip/issues/878,1,['error'],['errors']
Availability,ENH: Add error bars in `mcsolve`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1032:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/issues/1032,1,['error'],['error']
Availability,ENR states errors with v5 solvers,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2122:11,error,errors,11,https://qutip.org,https://github.com/qutip/qutip/issues/2122,1,['error'],['errors']
Availability,Error 'fast_csr_matrix allows only int32 indptr.' when multiplying Qobj,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/2468,1,['Error'],['Error']
Availability,Error Pip Install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/739,1,['Error'],['Error']
Availability,Error from brmesolve() when trying to run code from User Guide examples,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1223,1,['Error'],['Error']
Availability,Error in importing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1119:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1119,1,['Error'],['Error']
Availability,Error in the log_handler setting and missing documentation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1156,1,['Error'],['Error']
Availability,"Error message:; ```; ../anaconda/lib/python3.4/site-packages/qutip/bloch3d.py"", line 115, in __init__; raise Exception(""This function requires the mayavi module.""); ```; It seems that we cannot use python3 and mayavi at the same time. Anyone has similar issues?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/671,1,['Error'],['Error']
Availability,Error multiplication of Qobjs,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/690,1,['Error'],['Error']
Availability,Error when passing list of callback functions to mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/2189,1,['Error'],['Error']
Availability,Error when printing the result of mcsolver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1016,1,['Error'],['Error']
Availability,Error while importing Qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/2500,1,['Error'],['Error']
Availability,Error with conda MKL2019.0 on Windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/975,1,['Error'],['Error']
Availability,Error with mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['Error'],['Error']
Availability,Error with use_precond when using steady state solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1015:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1015,1,['Error'],['Error']
Availability,"Error: fidelity(U, U) != 1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1372:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1372,1,['Error'],['Error']
Availability,Errors in installation verifying process,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:0,Error,Errors,0,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['Error'],['Errors']
Availability,Errors when running qutip.testing.run() on Mac M1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:0,Error,Errors,0,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['Error'],['Errors']
Availability,"Every other file works fine. . For example, double click qobj.py and this opens. ![example](https://user-images.githubusercontent.com/32380833/43563341-b0c54b2a-965c-11e8-917c-4f2c18d8b457.png). Double click random_objects.py and it freezes and does nothing. I can open it in other editors like vim but I think it *should* work with the python default editor. . When I try to open up with IDLE from command line I get this error. ![error](https://user-images.githubusercontent.com/32380833/43563415-f443f842-965c-11e8-94f2-c28503bc6637.png). Which leads me to think there's a character somewhere in the file that causes the crash. But I don't know where.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/907:423,error,error,423,https://qutip.org,https://github.com/qutip/qutip/issues/907,2,['error'],['error']
Availability,Exception: Input operator and ket do not share same structure. error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/802:63,error,error,63,https://qutip.org,https://github.com/qutip/qutip/issues/802,1,['error'],['error']
Availability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/1623,1,['error'],['error']
Availability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/806,2,['error'],['error']
Availability,"Failed to break down the line. ```; f.write(""# Generated by QuTiP: %dx%d %s matrix in %s format ['%s' separated values].\n"" % (M, N, numtype, numformat, sep)); ```. to less then 80 chars without breaking the unit tests. Needs to be done later.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/7:16,down,down,16,https://qutip.org,https://github.com/qutip/qutip/issues/7,1,['down'],['down']
Availability,Failure in Correlation unittest when running tests twice,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:0,Failure,Failure,0,https://qutip.org,https://github.com/qutip/qutip/issues/269,1,['Failure'],['Failure']
Availability,Fix a docstring error prompting a segmentation fault when run on python 3.7.3 on Mac Mojave.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1013:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1013,2,"['error', 'fault']","['error', 'fault']"
Availability,"Fix a testing set-up regression made in #1348 - the version of SciPy was meant to be constrained to <1.5 to test compatibility with the older version of the sparse matrices, but the version constraint got omitted when I rewrote the `.travis.yml` file. The specific bugs that that test is meant to catch (errors handling `scipy.sparse.csr_matrix` matrix multiplication) can't be present in this branch anyway, because the new data types don't use scipy internals. Still, it's good to test against older versions of scipy as well - in 1.5 they changed some numerics in the eigenvalue solvers, which caused a whole bunch of our tests to break because we relied on the gauge and order of the vectors returned remaining constant.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1363:304,error,errors,304,https://qutip.org,https://github.com/qutip/qutip/pull/1363,1,['error'],['errors']
Availability,"Fix adding points to the Bloch sphere, with `Bloch.add_points(point)`. ; This solves Issue #1027.; It was a bit tricky to pin down. In Matplotlib 3.1.0, differently from 3.0.3, `edgecolor='none'` somehow produced a broadcast error, whereas now it is set by default to `None`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1097:126,down,down,126,https://qutip.org,https://github.com/qutip/qutip/pull/1097,2,"['down', 'error']","['down', 'error']"
Availability,Fix dispatch signatures errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2006:24,error,errors,24,https://qutip.org,https://github.com/qutip/qutip/pull/2006,1,['error'],['errors']
Availability,Fix doc build error from changelog 5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2365:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/pull/2365,1,['error'],['error']
Availability,Fix error in definition of m_ops for heterodyne detection in smesolve(),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1237:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/1237,1,['error'],['error']
Availability,Fix errors in gate definitions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1501:4,error,errors,4,https://qutip.org,https://github.com/qutip/qutip/pull/1501,1,['error'],['errors']
Availability,Fix failures in subsystem apply,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/79:4,failure,failures,4,https://qutip.org,https://github.com/qutip/qutip/pull/79,1,['failure'],['failures']
Availability,Fix ffmpeg error [unitaryHACK],MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1557:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/pull/1557,1,['error'],['error']
Availability,Fix for error that popped up when running:; ```; qutip-doc/guide/scripts/floquet_ex3.py; ```; Had to fix the last fix #626 as well.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/628:8,error,error,8,https://qutip.org,https://github.com/qutip/qutip/pull/628,1,['error'],['error']
Availability,Fix for qload decoding error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/323:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/pull/323,1,['error'],['error']
Availability,Fix in load params where 'pulsegen' was 'optim'; Fix to error handing when creating output directory; FileExistsError is new in Python 3; Hence swapped to OSError using errno for Python 2 compatability,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/317:56,error,error,56,https://qutip.org,https://github.com/qutip/qutip/pull/317,1,['error'],['error']
Availability,Fix logic error in shape check,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2349:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/pull/2349,1,['error'],['error']
Availability,Fix redundancy and sign error in jmat.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/565,1,['error'],['error']
Availability,Fix sign error in jmat.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/569:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/569,1,['error'],['error']
Availability,Fix spelling errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1333:13,error,errors,13,https://qutip.org,https://github.com/qutip/qutip/pull/1333,1,['error'],['errors']
Availability,"Fix the test breaking dev.major by adding the tolerance in the test itself.; This is an alternative to #1656, merge only one.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1658:46,toler,tolerance,46,https://qutip.org,https://github.com/qutip/qutip/pull/1658,1,['toler'],['tolerance']
Availability,Fix transposition errors and improve scaling of Floquet methods,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248:18,error,errors,18,https://qutip.org,https://github.com/qutip/qutip/pull/1248,1,['error'],['errors']
Availability,Fixed error in code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/193:6,error,error,6,https://qutip.org,https://github.com/qutip/qutip/pull/193,1,['error'],['error']
Availability,Fixes #847 scipy requirement superceeds error catching,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/851:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/pull/851,1,['error'],['error']
Availability,Fixes in load_params and output_dir creation error handling,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/317:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/pull/317,1,['error'],['error']
Availability,Fixes the wrong vector ordering in the conversion between fock and eigen bases. Essentially gave rise to transpose error. Added tests to verify fix. Also added @cython.cdivision(True) to both BR and ME codegens so that any string with division do not call back to Python.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/712:115,error,error,115,https://qutip.org,https://github.com/qutip/qutip/pull/712,1,['error'],['error']
Availability,Generalized superop reps to more robustly handle multiqubit dims.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/390:33,robust,robustly,33,https://qutip.org,https://github.com/qutip/qutip/pull/390,1,['robust'],['robustly']
Availability,Getting error while importing qutip since merging PR #1082,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:8,error,error,8,https://qutip.org,https://github.com/qutip/qutip/issues/1109,1,['error'],['error']
Availability,"Given a density matrix `rho` created in QuTiP, I'd like to apply a unitary operator to it, like in the following code:. ```python; rho_coherent = coherent_dm(10, 0); rho_squeezing = squeeze(10,0.25)(rho_coherent); ```. However, it raises the following error:; ```batch; TypeError(""Can only act oper on ket or oper.""); ```. I've fixed it temporarily by adding another `if` line 775 of `qobj.py`:. ```python; elif self.type == ""oper"":; if other.type == ""ket"":; return self * other; elif other.type == ""oper"":; return self * other * self.dag(); else:; raise TypeError(""Can only act oper on ket or oper.""); ```. However, it's only a hack because it works only when the main object is a hermitian operator (observable or density matrix) and other is a unitary matrix. . What do you think would be a good solution to solve this issue?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/977:252,error,error,252,https://qutip.org,https://github.com/qutip/qutip/issues/977,1,['error'],['error']
Availability,Got error when importing qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1054:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/1054,1,['error'],['error']
Availability,"Hard-coding compiler flag `-march=native` in setup.py completely destroys possibility to set up Qutip on heterogeneous cluster. In general, it brings a lot of problems for people that don't have a good experience in debugging ""illegal instruction"" errors, that often happen, if you compile the module on different machine than you use. If you are sure you need optimized build for localhost, you might use; ```; export CFLAGS=""-O3 -march=native""; export CXXFLAGS=""$CFLAGS""; pip install qutip; ```; instead or provide separate option for setup.py script.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/920:248,error,errors,248,https://qutip.org,https://github.com/qutip/qutip/issues/920,1,['error'],['errors']
Availability,"Hello Dear community, ; i'm trying to install qutip using the "" pip install qutip "" command on ubuntu 16.04 , however at each time i get this error ""Command python setup.py egg_info failed with error code 1 in /tmp/pip_build"" ; i have tried many versions of ubuntu ( 14, 15 ...) and many tricks in the net ( upgrading pip; upgrading python... ) trying to bypass this problem however all my tries failed..; i'll appreciate any help dear community...; sincerly yours; Amine Ch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/739,2,['error'],['error']
Availability,"Hello everybody,; I am using QuTiP 4.6.2. I created the Hamiltonian for a harmonic oscillator in terms of; 1) the momentum and position operator; 2) the number operators. The first case runs into trouble always whereas the second does not. The issue: When I use the momentum and position operator to create the Hamiltonian, the eigenvalues of two states in the middle of the series of states come out to be equal. this happens no matter how many Hilbert space levels I use. This issue is not there when I use the creation and annihilation operators. I should be getting identical results in both cases. Can someone point out where have I gone wrong? The code below is copied from my interpreter to show the results.; ```python; >>> import qutip as qt; >>> N = 10 # no. of states; >>> om = 1; >>> p = qt.momentum(N); >>> x = qt.position(N); >>> H = 0.5*(p*p+ om*om*x*x); >>> evals, evecs = H.eigenstates(); >>> print(""evals: "",evals); evals: [0.5 1.5 2.5 3.5 4.5 4.5 5.5 6.5 7.5 8.5]; >>> # evals[4] and evals[5] are equal (Why?) <<< The error; >>> evecs[4]==evecs[5]; False; >>> # now let us use the creation and annihilation operators to create the Hamiltonian; >>> ad = qt.create(N); >>> a = ad.dag(); >>> H1 = (ad*a + 0.5)*om; >>> evals1, evecs1 = H1.eigenstates(); >>> print(""evals1: "",evals1) # <<< No trouble here; evals1: [0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5]; >>>; ```. I would appreciate any input to fix my understanding. I am not opening a bug report because I am not sure. . With my best regards; Subimal Deb",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587:1037,error,error,1037,https://qutip.org,https://github.com/qutip/qutip/issues/1587,1,['error'],['error']
Availability,"Hello everyone, I tried to install qutip via pip on windows 10. I got an error stating that building the wheel failed because I didn't have Virtual Studio. I don't want to install that, so I just downloaded the wheel from this site: https://www.lfd.uci.edu/~gohlke/pythonlibs/#qutip; It installed fine, I thought. If I start a python interpreter in the command line, I can import qutip, and its functions work fine as far as I can tell. Now the problem: when I try to run a .py script, I get the error `AttributeError: module 'qutip' has no attribute 'states'`. So for some reason, python can't always locate the package correctly. Other packages work fine though. Does anyone know how to solve this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/839:73,error,error,73,https://qutip.org,https://github.com/qutip/qutip/issues/839,3,"['down', 'error']","['downloaded', 'error']"
Availability,"Hello! I'm trying to use the steadystate solver. When not using MKL, my program runs (albeit a bit slow). When using MKL, I get the following error message. I have tried to figure it out myself, to no avail. Traceback (most recent call last):; File ""cubicH_quantumPump_loop.py"", line 54, in <module>; rho = steadystate(H, c_ops); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/steadystate.py"", line 234, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/steadystate.py"", line 400, in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm = in_perm, verbose = ss_args['verbose']); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/_mkl/spsolve.py"", line 384, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/_mkl/spsolve.py"", line 167, in solve; raise Exception(pardiso_error_msgs[str(error)]); KeyError: '[-4]'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/791:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/791,3,"['avail', 'error']","['avail', 'error']"
Availability,"Hello! This is the first of hopefully a few PRs to add measurement functions to qutip. This PR adds a new module named `qutip.measurement` that contains two functions:. * `measure(op, state)` that performs a classic quantum measurement as described in most introductory texts (measurement collapses a state to an eigenvector of an hermitian operator and the result is the corresponding eigenvalue). It is intended to simulate a simple measurement that could be performed in a real experiment. * `measurement_statistics(op, state)` returns information that is not available via a real experiment, but is nevertheless often useful in simulator (the eigenvalues and vectors or projection operators for the measurement operator and the probabilities of each measurement result). Both functions support either kets or density matrices and return sensible results based on the kind of input. Not currently supported:. * Partial measurements of a system.; * Destructive measurements (aka von Neumann measurements of the second kind); * Density matrix ensembles (applying the measurement probabilities to the density matrix rather than making a specific measurement); * Any custom support for qubit measurement (my plan is to add those to a `qutip.qip.measurements` module once we have the basics of this module agreed on). Questions / things I'd like feedback on:. * Do the inputs and outputs of the current functions seem intuitive / sensible?; * What are the most important other features to support?; * I don't want to have too many functions, but I also don't necessarily want to cram all possible kinds of measurements into one function. Any thoughts on how to split these up?; * What other unit tests should I be writing?; * I haven't given any thought to performance yet. Anything egregious I should fix now or any important cases to optimize for?. General stylistic feedback welcomed too.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090:563,avail,available,563,https://qutip.org,https://github.com/qutip/qutip/pull/1090,1,['avail'],['available']
Availability,"Hello, ; when trying to run the examples from the User Guides in the Bloch-Redfield master equation section; ( http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) I get an error . I'm running the code in a conda environment using ipython on Windows 10, the details of the packages installed at the end of the post. To reproduce the error:; ```; import numpy as np; import matplotlib.pyplot as plt; from qutip import *. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; gamma1 = 0.5; H = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); def ohmic_spectrum(w):; 	if w == 0.0: # dephasing inducing noise; 		return gamma1; 	else: # relaxation inducing noise; 		return gamma1 / 2 * (w / (2 * np.pi)) * (w > 0.0). R, ekets = bloch_redfield_tensor(H, [sigmax()], [ohmic_spectrum]). np.real(R.full()). tlist = np.linspace(0, 15.0, 1000). psi0 = rand_ket(2). e_ops = [sigmax(), sigmay(), sigmaz()]. expt_list = bloch_redfield_solve(R, ekets, psi0, tlist, e_ops). sphere = Bloch(). sphere.add_points([expt_list[0], expt_list[1], expt_list[2]]). sphere.vector_color = ['r']. sphere.add_vectors(np.array([delta, 0, eps0]) / np.sqrt(delta ** 2 + eps0 ** 2)). sphere.make_sphere(). plt.show(). output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]); ```. The code runs fine until the last line which gives the following response:; ```; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-1-79f7f2013969> in <module>; 35 plt.show(); 36; ---> 37 output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]). ~\Anaconda3\envs\qutip-env\lib\site-packages\qutip\bloch_redfield.py in brmesolve(H, psi0, tlist, a_ops, e_ops, c_ops, args, use_secular, sec_cutoff, tol, spectra_cb, options, progress_bar, _safe_mode, verbose); 196; 197 if _safe_mode:; --> 198 _solver_safety_check(H, psi0, a_ops+c_ops, e_ops, args); 199; 200 # check for type (if any) of time-dependent inputs. ~\Anaconda3\envs\qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223:194,error,error,194,https://qutip.org,https://github.com/qutip/qutip/issues/1223,2,['error'],['error']
Availability,"Hello, I read the '; Lecture 7 - Symbolic quantum mechanics using SymPsi - Semiclassical equations of motion' and re-run it's codes but I receive error in following line:. ---. ops, op_eqm, sc_eqm, sc_ode, ofm, oim = semi_classical_eqm(H, c_ops). ---. ValueError Traceback (most recent call last); <ipython-input-13-e7aaa32c59a9> in <module>(); ----> 1 ops, op_eqm, sc_eqm, sc_ode, ofm, oim = semi_classical_eqm(H, c_ops). ValueError: too many values to unpack. ---. what is this error?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/504:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/issues/504,2,['error'],['error']
Availability,"Hello, i discovered an error in the implementation of the QFT. Namely when i want to obtain the gate sequence. The is when tha code runs this . if swapping is True:; for i in range(N // 2):; qc.add_gate(r""SWAP"", targets=[i], controls=[N - 1 - i, i]). it gives an error because the swap gate needs two targets and it is only passing one. Here is a test code. qft.qft_gate_sequence(N=2)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/688:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/688,2,['error'],['error']
Availability,"Hello,. I have a time dependent hamiltionian with a simple polynomial function, whose gradient I find using Numpy's gradient function. I also specify the step size that the gradient function should use. However, when passing the function and its gradient to Qutips mesolve function, i get the error:. ValueError: Shape of array too small to calculate a numerical gradient, at least (edge_order + 1) elements are required. I think this is because usually you would pass the whole array of time which Numpy would calculate the gradient of, but in the case of mesolve in qutip, we are passing a float instead of an array, i.e. calculating 1 time point which numpy cannot use.; I need the gradient function and its step size, rather than using the analytical gradient as a simply function due to the simulations I am trying to make. I would appreciate any and all insight into this problem, thank you. ```python; import scipy as sp; import numpy; from qutip import *; import matplotlib.pyplot as plt. # pre define transport functions (time dependent functions for use in hamiltonian); def q_c(t,t_f,d): #position of ion; return d*(10*(t/t_f)**3 - 15*(t/t_f)**4 + 6*(t/t_f)**5). def grad_q_c(t,t_f,step,d): #velocity; return np.gradient(q_c(t,t_f,d),step). def grad2_q_c(t,t_f,step,d): #acceleration; return np.gradient(grad_q_c(t,t_f,step,d),step). def q_0(t,args): #position of trap (harmonic well); '''; t: time step; t_f: final time (total time); step: step size for gradient function; d: total distance of transport'''; t_f,step,d = args['t_f'],args['step'],args['d']; return grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d). def q_02(t,args): #position of trap; t_f,step,d = args['t_f'],args['step'],args['d']; return (grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d))**2. # set up initial conditions and parameters for ion; N = 200 # hilbert space dimension ; w = 2 * pi * 200e3 # angulr frequency of oscillator (Hz); m = 171 * 1.66e-27 # mass of ion (kg); hbar = 1 # reduced plancks constant (eVs) . ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834:293,error,error,293,https://qutip.org,https://github.com/qutip/qutip/issues/1834,1,['error'],['error']
Availability,"Hello,. There is currently a circular function call in the tensor produce part of `qeye()` - the list comprehension calls `identity()` for each element of the space, which is just a pass-through back to `qeye()`, rather than explicitly recursing. I've just made the recursion explicit. Also, as it stands, the ""list of ints"" argument will accept arbitrarily-nested lists of integers, and silently flatten it out. Is it worth adding an error check to catch what is (presumably) user error?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1157:435,error,error,435,https://qutip.org,https://github.com/qutip/qutip/pull/1157,2,['error'],['error']
Availability,"Hello,; I noticed that vector_to_operator stopped working after updating to 4.5. Simple code that gives error:. ```; import qutip as qu. def zero_state_qutip(nb_qubits):; zero=qu.basis(2,0); if nb_qubits>1:; for i in range(1,nb_qubits):; zero=qu.tensor(zero,qu.basis(2,0)); return zero. nb_qubits=4. Psi=zero_state_qutip(nb_qubits). V=qu.vector_to_operator(Psi); ```. The code works fine with nb_qubits=2, but not with 4, 6 etc. The error is:. File ""qutip\superoperator.py"", line 279, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T. File ""qutip\sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]). File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape. Exception: Total size of array must be unchanged.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204:104,error,error,104,https://qutip.org,https://github.com/qutip/qutip/issues/1204,2,['error'],['error']
Availability,"Hello. As qutip is new to me, I'am not shure if there is a real problem or if it is just poor understanding. Well, here is my issue:; I'd like to get the the final state after solving some unitary time evolution with `mesolve`. The input state is a tensor product of three Fock states.; `psi0 = tensor(basis(N+1,0), basis(N+1,0), basis(N+1,N))`. Then I do the evolution like this:; `H = tensor(a, b, c.dag() * c.dag()) - tensor(a.dag(), b.dag(), c * c)`; Operators a,b and c are defined as `destroy(N+1)`.; `times = np.linspace(0.0, 2.0, 100.0)`; `opts = Options(store_states=False, store_final_state=True)`; `result = mesolve(H, psi0, times, [], [numAop,numBop,numCop], options=opts)`. Now I observe different dimension of input and output state:; `print(psi0.dims, psi0.shape)`; `print(result.final_state.dims, result.final_state.shape)`; gives:; [[41, 41, 41], [1, 1, 1]] [68921, 1]; [[68921], [1]] [68921, 1]; So somehow the dimension structure is lost. The results for the expectation values of the number operators look reliable. So I guess that the time evolution itself worked fine.; Kind regards; Fabian",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/480:1026,reliab,reliable,1026,https://qutip.org,https://github.com/qutip/qutip/issues/480,1,['reliab'],['reliable']
Availability,"Hello. I am currently running a simulation with `mesolve` (yet the same error occurs with `sesolve`) with a slow perturbation, such that close to zero the Hamiltonian is very close to zero (the perturbation is a thin Gaussian distribution). When I run `mesolve`, instead of running my time-dependent coefficients for the values in `tlist` (where in this case I had 250 times in `tlist`), **QuTiP** uses about 20 seemingly random time values, some of which are not even in `tlist`. . I believe this error is stemming from the Hamiltonian changing extremely slowly and being close to zero for a long period of time. This is because **QuTiP** began working normally when I added the constant 0.00001 to my time-dependent coefficient. Is there a bug here, or is there something I am missing about small-frame limits of the software?. An example piece of code that reproduces this error is below.; ```python; import numpy as np; import qutip as qt. def StandardGaussianPi(t):; def gauss_distr(x, sigma, mu):; return np.exp(-((x - mu)/sigma)**2 / 2) / (sigma * np.sqrt(2 * np.pi)); return np.pi * gauss_distr(t, 2, 20). def run_experiment(waveform, tlist, a):; def coeff_1(t, args):; print(t); return -1/2 * waveform(t) * -1; coeff_2 = lambda t, args: coeff_1(t, args) * np.sqrt(2) * np.cos(a * t); coeff_3 = lambda t, args: coeff_1(t, args) * np.sqrt(2) * np.sin(a * t); hamiltonian = [[gm(1), coeff_1], [gm(6), coeff_2], [gm(7), coeff_3]]; initial_state = qt.basis(3, 0); e_ops = [gm(1), gm(2), gm(3)]; return qt.mesolve(hamiltonian, initial_state, tlist, None, e_ops).expect. run_experiment(StandardGaussianPi, np.linspace(0, 40, 250), -0.2); ```; The function `gm` was used to generate matrices. These matrices come from:; ```python; gell_mann = [[], [], [], [], [], [], [], []]. gell_mann[0] = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) / np.sqrt(2 / 3); gell_mann[1] = np.array([[0, 1, 0], [1, 0, 0], [0, 0, 0]]); gell_mann[2] = np.array([[0, -1j, 0], [1j, 0, 0], [0, 0, 0]]); gell_mann[3] = np.array",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1638:72,error,error,72,https://qutip.org,https://github.com/qutip/qutip/issues/1638,3,['error'],['error']
Availability,"Hello. I'm working on a qutrit system (spin 1). Eventually need to do some pulse optimization but for testing I tried to propagate using a very simple Hamiltonian, namely just Sz^2 with D=2000. ; Units are µs for time (so MHz for frequency). . versions used:; ```python; matplotlib.pylab 1.16.4; qutip 4.4.1; matplotlib 3.1.1; numpy 1.16.4; scipy 1.3.1; CPython 3.7.3; IPython 7.5.0; ```. I solve with sesolve or mesolve with (|+. 1> + |0>)/sqrt(2) as initial state.; **expected:** quite trivially, population should stay 1/2 for any t for |+1> and |0>, 0 for |-1>; **result:** population of |+1> goes down linearly and |0> goes up ; a few observations: ; - if I make the coefficient of Sz^2 smaller, the population diverges less ; - with less time steps but same overall propagation time, I see the divergence less obviously because I see the beginning of it; - I am aware one can somehow optimize the number of time steps but this is about the convenient settings for the next steps for me; - I was thinking of increasing floating point precision or something like that but wasn't able to find a simple way to do that in the docs. it does not seem like having a coefficient on the order of 10000 or 10^5 time steps is that unreasonable, does it ?; anyway, this is about the right, convenient choice of unit for us here. any idea what's wrong ?. ```python; %load_ext watermark; import numpy as np; import scipy; import matplotlib; import matplotlib.pylab as plt; import qutip; %watermark -v --iversions; %matplotlib qt. #Spin 1 operators; S1_x = 1/np.sqrt(2)*qutip.Qobj([[0,1.,0],; [1.,0,1.],; [0,1.,0]]). S1_y = 1.j/np.sqrt(2)*qutip.Qobj([[0,-1.,0],; [1.,0,-1.],; [0,1.,0]]). S1_z = qutip.qdiags([1.,0,-1.], 0). #canonical basis with corresponding projectors; canon_100 = qutip.basis(3,0) #ket |+1>; canon_010 = qutip.basis(3,1) #ket |0>; canon_001 = qutip.basis(3,2) #ket |-1>. proj100 = qutip.ket2dm(canon_100); proj010 = qutip.ket2dm(canon_010); proj001 = qutip.ket2dm(canon_001). #Hamiltonian pa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085:602,down,down,602,https://qutip.org,https://github.com/qutip/qutip/issues/1085,1,['down'],['down']
Availability,"Hi QuTiP users,. I am not quite sure how I should introduce the issue that I have, but basically it comes down to the fact that my Hamiltonian and a particular function seems to require >500 GB of RAM for some parameters used. For the desired parameters, this can even become Terabytes which is hard to implement. . The main parameters by the way is N, which is the dimension of the Hilbert Space. The maximum is N=111 when running the program on the 500 GB node. The memory usage fits very good to a RAM (MB) = 0.0008804*N^4 dependence. A strange thing is that Slurm's MaxRSS command says that only 133,690 MB was needed to run the program, which is not close to the 500 GB. The memory profiler said that one function required 145,766.2 MiB (152,846.9 MB) at some point, and 327,769.4 MiB (343,691.1 MB) was freed. Together this comes close to the 500 GB, although I don't understand the numbers. I have no profound knowledge of the memory allocation in Python and QuTiP, but I would like to check if this can be improved. I went to two IT consultants who are in charge of the National Supercomputer in the Netherlands, and they also found no errors in my code. One of their suggestions was to ask you for advice on this topic. Of course, I can provide you with more details (the whole code, the outcome of the memory profiler, the meaning of the parameters and the infrastructure), but I don't want to overwhelm you. I look forward to hearing from you. Best regards,. Xavier",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845:106,down,down,106,https://qutip.org,https://github.com/qutip/qutip/issues/845,2,"['down', 'error']","['down', 'errors']"
Availability,"Hi QuTip team and community! I just installed QuTiP on my Mac and I am very excited to try it out. I started playing with this section of QuTiP User Guide [Plotting on the Bloch Sphere; ](http://qutip.org/docs/4.1/guide/guide-bloch.html), but encountered an error. This code works well if I run it in Python console:; ```; from qutip import *; bloch = Bloch(); bloch.show(); ```; But the following code in Python console shows an error; ```; bloch.save(); ```. ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/qutip/bloch.py"", line 663, in save; '.' + format); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 1834, in savefig; self.canvas.print_figure(fname, **kwargs); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backend_bases.py"", line 2188, in print_figure; self.figure.dpi = dpi; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 436, in _set_dpi; self.set_size_inches(w, h, forward=forward); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 745, in set_size_inches; manager.resize(int(canvasw), int(canvash)); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backends/backend_tkagg.py"", line 540, in resize; self.canvas._tkcanvas.master.geometry(""%dx%d"" % (width, height)); File ""/Users/tilek/miniconda2/lib/python2.7/lib-tk/Tkinter.py"", line 1668, in wm_geometry; return self.tk.call('wm', 'geometry', self._w, newGeometry); _tkinter.TclError: can't invoke ""wm"" command: application has been destroyed; ```. When I try to execute the code from the User Guide as a complete .py Python file (see below) ; it produces first bloch_0.png file where it is supposed to, but then shows the same error.; ```; import numpy as np; from qutip import *; from scipy import *. def qubit_integrate(w, theta, gamma1, gamma2, psi0, tlist):; # operators and the hamiltoni",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796:258,error,error,258,https://qutip.org,https://github.com/qutip/qutip/issues/796,2,['error'],['error']
Availability,"Hi QuTip team,. when I run multiple `mesolve` calculations in parallel using. `enumerate(pool.imap(parallel_calculation, taus))`. I sometimes get the following error. ` ZVODE-- At current T (=R1), MXSTEP (=I1) steps; taken on this call before reaching TOUT; In above message, I1 = 1000; In above message, R1 = 0.9633584757678D+00; D:\...\Anaconda3\lib\site-packages\scipy\integrate\_ode.py:869: UserWarning: zvode: Excess work done on this call. (Perhaps wrong MF.); 'Unexpected istate=%s' % istate))`. Interestingly this only happens sometimes and as far as I can tell not in the single-threaded case...; Any ideas? Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822:160,error,error,160,https://qutip.org,https://github.com/qutip/qutip/issues/822,1,['error'],['error']
Availability,"Hi all. When I ran this code. ```python; import qutip as q; q.qdiags(q.basis(3, 0), 0); ````. The error that was thrown indicated an improper version of Scipy instead of an error associated with; the function itself. I think it's because the [exception clause here](https://github.com/qutip/qutip/blob/master/qutip/operators.py#L753) is too broad. I think it should be catching ``NameError``.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/847:98,error,error,98,https://qutip.org,https://github.com/qutip/qutip/issues/847,2,['error'],['error']
Availability,"Hi devs,. I've been running into an issue installing the most recent dev version. The _blas_info() method is throwing the following error:. ```; Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 26 2016, 10:47:25) ; [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/__init__.py"", line 174, in <module>; import qutip._mkl; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/_mkl/__init__.py"", line 3, in <module>; _set_mkl(); File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/_mkl/utilities.py"", line 47, in _set_mkl; if _blas_info() == 'INTEL MKL':; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/utilities.py"", line 405, in _blas_info; if hasattr(config,'mkl_info') or any('mkl' in lib for lib in blas_info['libraries']):; KeyError: 'libraries'; ```. It seems this method was changed most recently in commit d7bb119 to include a line containing `blas_info['libraries']`. For reference I am doing a basic installation with just numpy (1.11.2), scipy (0.18.1), and cython (0.24.1), and not with any of the fortran MC stuff. I'm using Mac OSX 10.11, and Python 3.5.2. [I've also been able to successfully install using a commit from before this, a31f7fc.] . Please let me know if there is just something I've missed here. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552:132,error,error,132,https://qutip.org,https://github.com/qutip/qutip/issues/552,1,['error'],['error']
Availability,"Hi friends,. I'm going to import qutip as . from qutip import *. but i get this error:. Traceback (most recent call last):; File ""D:\py\Master_solve.py"", line 4, in <module>; import qutip; File ""C:\Users\Phd-02\AppData\Roaming\Python\Python36\site-packages\qutip\__init__.py"", line 149, in <module>; from qutip.qobj import *; File ""C:\Users\Phd-02\AppData\Roaming\Python\Python36\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""C:\Users\Phd-02\AppData\Roaming\Python\Python36\site-packages\qutip\fastsparse.py"", line 423, in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); ImportError: DLL load failed: The specified module could not be found. Any suggestion?Thanks in advance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1613:80,error,error,80,https://qutip.org,https://github.com/qutip/qutip/issues/1613,1,['error'],['error']
Availability,"Hi!. I'd like to report an installation issue on CentOS/RHEL platforms. I've tested various Python versions (2.7, 3.4) on both RHEL 6.x and 7.x, and the error is consistent, and happens during compilation of some Cython files. The error is: `ambiguous overloaded method` referring to the `abs()` function, and happens in two different places. Full installation output:; ```; $ pip install qutip; Collecting qutip; Using cached qutip-4.1.0.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef double * col_sum = <double *>PyDataMem_NEW_ZEROED(ncols, sizeof(double)); cdef double max_col = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:153,error,error,153,https://qutip.org,https://github.com/qutip/qutip/issues/723,4,"['Error', 'error']","['Error', 'error']"
Availability,Hi!; Assume that the system will reach a steady state.; Is there an efficient method to estimate the time it takes to reach the steady state (or to enter and remain within a specified error band)? ; My wish is that I do not have to calculate the steady state (using the steadystate function or others) to achieve that. Thank you very much.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/319:184,error,error,184,https://qutip.org,https://github.com/qutip/qutip/issues/319,1,['error'],['error']
Availability,"Hi!; I was thinking to use Floquet Formalism to solve some time-dependent problem.; So I firstly try the case in Users Guide, but some unexpected errors occurred. ---------------------------------------------------------------------------; ```; %matplotlib inline; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; delta=0.2*2*np.pi;; eps0=1.0*2*np.pi;; A=2.5*2*np.pi;; omega=1.0*2*np.pi;; H0=-delta/2.0*sigmax()-eps0/2.0*sigmaz(); H1=A/2.0*sigmaz(); args={'w':omega}; H=[H0,[H1,'sin(w*t)']]; T=2*np.pi/omega; f_modes_0, f_energies = floquet_modes(H, T, args); ```. Here is the error information：. ---------------------------------------------------------------------------; ```; DistutilsPlatformError Traceback (most recent call last); F:\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 215 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 216 inplace=build_inplace, language_level=language_level); 217 mod = imp.load_dynamic(name, so_path). F:\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 191 inplace=inplace,; --> 192 reload_support=pyxargs.reload_support); 193 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. F:\Anaconda3\lib\site-packages\pyximport\pyxbuild.py in pyx_to_dll(filename, ext, force_rebuild, build_in_temp, pyxbuild_dir, setup_args, reload_support, inplace); 101 obj_build_ext = dist.get_command_obj(""build_ext""); --> 102 dist.run_commands(); 103 so_path = obj_build_ext.get_outputs()[0]. F:\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . F:\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:146,error,errors,146,https://qutip.org,https://github.com/qutip/qutip/issues/854,2,['error'],"['error', 'errors']"
Availability,"Hi, I am trying to take tensor product of time dependent collapse operators but following error crops up,. TypeError: One of inputs is not a quantum object. Following is the tensor product I wanted to take:. V_ft=np.sqrt(kappa_f)*tensor([[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]),dims=[[2],[2]]), u_t]],[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_b01)],[0,0]]),dims=[[2],[2]]), u_t]],[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_c01)],[0,0]]),dims=[[2],[2]]), u_t]]]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1183:90,error,error,90,https://qutip.org,https://github.com/qutip/qutip/issues/1183,1,['error'],['error']
Availability,"Hi, I hope I can get some help with this. I am new with qutip; Sx_nv= qutip.tensor(qutip.jmat(1,""x""),qeye(2)) ; Sy_nv= qutip.tensor(qutip.jmat(1,""y""),qeye(2)); Sz_nv= qutip.tensor(qutip.jmat(1,""z""),qeye(2)) ; Ix_nv= qutip.tensor(qeye(3),qutip.jmat(0.5,""x"")); Iy_nv= qutip.tensor(qeye(3),qutip.jmat(0.5,""y"")); Iz_nv= qutip.tensor(qeye(3),qutip.jmat(0.5,""z"")); S_vector = [Sx_nv,Sy_nv,Sz_nv]; D_xx = 0; D_yy =0; D_zz =2870 . D_matrix = np.diag([D_xx,D_yy,D_zz]); I want to make a product like ""S_vector * D_matrix * S_vector"" so I did this. qutip.Qobj(np.dot(np.array(D_matrix),np.array(S_vector))); And I got this error :; ---------------------------------------------------------------------------; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last). TypeError: must be real number, not Qobj. Somewhere I read that there is a problem with 1.20 numpy version and qutip, so I created an environment in conda with numpy 1.19.0; but it does not fix the problem, or maybe it is me the one that is not understanding. Why I can not make operations with Qobj, or convert it to numpy arrays and then back to Qobj.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848:613,error,error,613,https://qutip.org,https://github.com/qutip/qutip/issues/1848,1,['error'],['error']
Availability,"Hi, I've been starting to learn qutip to write my dissertation on Quantum computing. I was running the script on Vacuum Rabi oscillations in the Jaynes-cummings model from the example section on [qutip.com](http://qutip.com/). Originally it was working correctly. However, I have come back to it after about a month and I have run into an issue. When I run the code copied straight from the website it returns this error . ""ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". so I increase the nsteps to 100000:; output = mesolve(H, psi0, tlist, c_op_list, [a.dag() * a, sm.dag() * sm], options = Options(nsteps= 10000)). however I get an output that is completely different to what I should be getting. What I should be getting: . ![image](https://user-images.githubusercontent.com/75099190/186995018-26029946-bba2-4b71-888d-74b88361c832.png). What my code is outputting:. ![image](https://user-images.githubusercontent.com/75099190/186995092-75b9d285-f854-487f-bd11-7dffc19d57cb.png). Do you have any idea what could be causing this error?; Any help would be hugely appreciated . my code:. import matplotlib.pyplot as plt; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi # cavity frequency; wa = 1.0 * 2 * np.pi # atom frequency; g = 0.05 * 2 * np.pi # coupling strength; kappa = 0.005 # cavity dissipation rate; gamma = 0.05 # atom dissipation rate; N = 15 # number of cavity fock states; n_th_a = 0.0 # temperature in frequency units; use_rwa = True. tlist = np.linspace(0, 25, 100). psi0 = tensor(basis(N, 0), basis(2, 1)) # start with an excited atom. a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)). if use_rwa:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()); else:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() + a) * (sm + sm.dag()). c_op_list = []. rate = kappa * (1 + n_th_a); if rate > 0.0:; c_op_list.append(np.sqrt(rate) * a). rate = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/issues/1987,2,['error'],['error']
Availability,"Hi, thank you for the amazing work that you do. When using qutip to diagonalise two simultaneously diagonalizible, hermitian operators it continues to throw this error:. ![Screen Shot 2019-08-08 at 11 29 59](https://user-images.githubusercontent.com/19754061/62691897-e0a83680-b9cf-11e9-8a92-a88a3716ae99.png). Which comes from `qutip.simdiag.py` in `simdiag(ops, evals)`:. ![Screen Shot 2019-08-08 at 11 27 34](https://user-images.githubusercontent.com/19754061/62691786-a76fc680-b9cf-11e9-8f99-7a9ba78db518.png). My installed packages:; QuTiP Version: 4.4.0; Numpy Version: 1.16.4; Scipy Version: 1.3.0; Cython Version: 0.29.12; Matplotlib Version: 3.1.0; Python Version: 3.7.3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067:162,error,error,162,https://qutip.org,https://github.com/qutip/qutip/issues/1067,1,['error'],['error']
Availability,"Hi, this is just a refactoring of @nwlambert 's code for a generic HEOM solver which takes in a set of exponents and coefficients for a spectral density function and can be used to work with arbitrary spectral density functions. In comparison, the current `heom` solver in QuTiP is specialized. . Specific quantum systems in the `qutip/models` sub-module could have the following signature:; ```; model = System(hamiltonian, **params); result = model.solve(initial_state, tlist, options); ```; System specific functions could be in the model class. For instance,; ```; model._rhs(); ```; gives the RHS (a matrix equivalent to an effective Liouvillian) of the density matrix evolution equation. If any system can be written down as the evolution of an initial density matrix as dp/dt = (RHS)p, and there is an optimised way to solve, it can be written down as a qutip.model. The other necessary function would be a basis change map or a lookup dictionary for translating a state tuple to the index in the larger density matrix which is used for the evolution using the effective Liouvillian. This is the `_heom_state_dictionaries` in this case and `jmm1_dictionary` in case of the WIP #753 . The code in the current form is good enough to be used but it needs to be optimized further. The next steps are:; - [x] Tests for RHS generation and the solve function; - [ ] Optimize the generation of the effective Liouvillian (RHS) similar to the `heom` solver; - [ ] Refactoring and deciding on the API (how to pass in the coefficients etc)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/793:723,down,down,723,https://qutip.org,https://github.com/qutip/qutip/pull/793,2,['down'],['down']
Availability,"Hi,. I cannot find any doc (except the source code itself) about which progress bar are available and how to use them. Especially, the only references to the progress bar in [the doc](http://qutip.org/docs/3.1.0/) are the options for `mesolve` etc. I think it could be really useful to document it, or provide an iPython notebook making use of it. EDIT: Plus the docstring of `mesolve` function (for instance) seems to contradict the first lines of the function:. ```; progress_bar: BaseProgressBar; Optional instance of BaseProgressBar, or a subclass thereof, for; showing the progress of the simulation.; ```. versus. ``` python; if progress_bar is None:; progress_bar = BaseProgressBar(); elif progress_bar is True:; progress_bar = TextProgressBar(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/444:88,avail,available,88,https://qutip.org,https://github.com/qutip/qutip/issues/444,1,['avail'],['available']
Availability,"Hi,. I have a problem when trying to visualize the quantum circuit with the command ""q.png"".; I have installed ImageMagick, Perl, and Ghostscript as explained in the tutorial: https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb. However, I still receive the next error message:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. The pdf file is generated but for some reason, is not converted to a .png file. Thanks a lot,; Ariel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888:310,error,error,310,https://qutip.org,https://github.com/qutip/qutip/issues/1888,1,['error'],['error']
Availability,"Hi,. I have been trying to use `qutip.floquet.floquet_master_equation_steadystate` method to get the steadystate of my system, but the docstring is not super useful. From the docstring, I guess I should call it as `qutip.floquet.floquet_master_equation_steadystate(H, A)` where. * `H` is my (time-dependent) hamiltonian, similar as the one used in http://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html#floquet-formalism-in-qutip.; * `A` is the [`A` matrix output](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L587-L588) from `floquet_master_equation_rates` call. I think I missed something as I am getting an error; ```; TypeError: Solving for steady states requires Liouvillian (super) operators; ```; from https://github.com/qutip/qutip/blob/master/qutip/steadystate.py#L224. Additionnally, I think there is a much easier way to find the steadystate of such a system, using something like (not really well written nor optimised):. ```python; def floquet_master_equation_steadystate2(A):; """"""; TODO. Parameters; ----------. A : TODO; A matrix used to build the master equation.; """"""; B = np.zeros_like(A); N = A.shape[0]; for a in range(N):; for b in range(N):; # Convergence of off-diagonal terms in density matrix to 0; assert(-0.5 * np.sum(A[:, a] + A[:, b]) < 0); # Diagonal terms of density matrix; if a != b:; B[a, b] = A[a, b]; else:; B[a, b] = -1.0 * np.sum([; A[nu, a] for nu in range(N) if nu != a]; ); eigval, eigvec = Qobj(B).eigenstates(); assert(np.isclose(eigval[-1], 0, atol=1e-15)); return eigvec[-1] * eigvec[-1].dag(); ```. which basically looks for the eigenvector associated with 0 eigenvalue of a matrix derived from `A`, which is basically coming directly from equation 251 of [Gri98](http://qutip.org/docs/latest/biblio.html#gri98).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/768:636,error,error,636,https://qutip.org,https://github.com/qutip/qutip/issues/768,1,['error'],['error']
Availability,"Hi,. I think the import order is not correct in `setup.py`, importing `numpy` at the beginning of the file, before giving a chance to `setuptools` to actually install it (because it is in required packages). This line is faulty https://github.com/qutip/qutip/blob/master/setup.py#L34 and results in. ``` zsh; % pip install qutip; Collecting qutip; Downloading qutip-3.1.0.tar.gz (800kB); 100% |████████████████████████████████| 802kB 595kB/s ; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-w53v9c3b/qutip/setup.py"", line 34, in <module>; import numpy as np; ImportError: No module named 'numpy'; ```. Then, instead of `pip install qutip`, one has to `pip install numpy; pip install qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426:221,fault,faulty,221,https://qutip.org,https://github.com/qutip/qutip/issues/426,2,"['Down', 'fault']","['Downloading', 'faulty']"
Availability,"Hi,. I was trying to run some simulations with [Floquet formalism in Qutip](http://qutip.org/docs/4.1/guide/dynamics/dynamics-floquet.html) in a Jupyter notebook, when I ran into a ""The kernel appears to died unexpectedly, it will restart"" error message. I tried to understand what is happening, and it seems it is due to a segmentation fault. It happens also when run in CPython 3.5.2. `gdb` was not super useful, and I could not get it to output any interesting backtrace. Manually tracking the issue down, it seems that `qutip.floquet.floquet_modes` call `qutip.propagator.propagator` which itself calls `sesolve`. As far as I could track the error down for the moment, it seems to happen in [this call](https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L159-L160). My code is quite lengthy, and I did not yet manage to isolate a small snippet to reproduce the error :/ Not sure what is the best way to debug this either :/. ```python; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 0.19.1; Cython Version: 0.27.1; Matplotlib Version: 2.0.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip; ```. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761:240,error,error,240,https://qutip.org,https://github.com/qutip/qutip/issues/761,6,"['down', 'error', 'fault']","['down', 'error', 'fault']"
Availability,"Hi,. I'm having some trouble installing QuTiP onto my computer. I'm running Python 2.7 on Windows 7 and using Anaconda 2.10 64 bit and PyCharm 4.0.4.; I tried installing QuTiP in PyCharm by using file->settings->project interpreter and that successfully installed. However, when I go to the python console and type; from qutip import \* I get the following error message:. Backend Qt4Agg is interactive backend. Turning interactive mode on.; Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-2-674d9281af88>"", line 1, in <module>; from qutip import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""C:\Program Files (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:357,error,error,357,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['error'],['error']
Availability,"Hi,. It seems there are some errors in the Floquet `mesolve`-equivalent function, which are not seen when considering a simple qubit. Consider for instance an harmonic oscillator with a drive, which should converge towards a coherent state:. ```python; %matplotlib notebook. import numpy as np; from qutip import (basis, destroy, expect, fsesolve, sigmax, sigmaz, rand_ket, num,; mesolve); from qutip.floquet import (floquet_modes, floquet_modes_table,; floquet_modes_t_lookup, fmmesolve). # Parameters; wc = 1.0 * 2 * np.pi; wp = 1.5 * 2 * np.pi; T = 2 * np.pi / wp; N = 20; epsilon_p = np.sqrt(2) * np.sqrt(8) * (wp - wc). psi0 = basis(N,0); a = destroy(N); H = [; wc * a.dag() * a,; [1.0j * epsilon_p * (a.dag() - a), 'cos(wp * t)']; ]. args = {; 'wp': wp; }. # noise power spectrum; gamma1 = 0.05; def noise_spectrum(omega):; return 0.5 * gamma1 * omega / (2 * np.pi). tlist = np.linspace(0, 5 / gamma1, 100). # find the floquet modes for the time-dependent hamiltonian; f_modes_0, f_energies = floquet_modes(H, T, args). # precalculate mode table; f_modes_table_t = floquet_modes_table(f_modes_0, f_energies,; np.linspace(0, T, 500 + 1),; H, T, args). # solve the floquet-markov master equation; output = fmmesolve(H, psi0, tlist,; [a], [], [noise_spectrum], T, args). # For reference: calculate the same thing with mesolve; output_ref = mesolve(H, psi0, tlist, [np.sqrt(gamma1) * a],; [], args); ```. `output_ref.states[-1]` is a coherent state as expected. ![image png 1200 x 1200 pixels - redimensionnee 79](https://user-images.githubusercontent.com/3856586/31828448-433fd44a-b588-11e7-9305-e44f88ed8c1b.png). But `output.states[-1]` is far from being a coherent state. ![image png 1200 x 1200 pixels](https://user-images.githubusercontent.com/3856586/31828469-56631e42-b588-11e7-8950-0ca04ce3c70c.png). I tried to debug it, without real success for now :/. EDIT: Might be partially related to #624.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772:29,error,errors,29,https://qutip.org,https://github.com/qutip/qutip/issues/772,1,['error'],['errors']
Availability,"Hi,. There is a [manual integration](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L602-L624) using rectangles method in `qutip.floquet` file which sometimes fail. Problem is that the number of timesteps, `nT`, is hardcoded and not accessible to the user. In my case, `nT = 100` does not seem to be enough and the integral is wrong. A quick and dirty fix is to have an extra `nT=100` keyword argument to `floquet_master_equation_rates`, so that user can overload it. Still, it does not seem to be the most efficient way of doing it. I have a quick fix I can contribute which is using `scipy.integrate.simps` instead. This requires keeping an array of values to integrate in memory (which is less memory-efficient) but I could keep `nT=100` and get the correct integral by using this method. I guess the best option would be to use [`scipy.integrate.quad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad), as it uses an adaptive algorithm. I can contribute a fix for this, just looking for feedback on the best available option :). Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:1077,avail,available,1077,https://qutip.org,https://github.com/qutip/qutip/issues/767,1,['avail'],['available']
Availability,"Hi,. With scipy 1.3, QuTip is unimportable. The exact traceback is . ```python; In [1]: import qutip; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-e01d5608f34f> in <module>(); ----> 1 import qutip. /usr/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 169 ; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. /usr/lib/python3.6/site-packages/qutip/qobj.py in <module>(); 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. /usrl/lib/python3.6/site-packages/qutip/fastsparse.py in <module>(); 35 from scipy.sparse import (_sparsetools, isspmatrix, isspmatrix_csr,; 36 csr_matrix, coo_matrix, csc_matrix, dia_matrix); ---> 37 from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; 38 getdtype, isscalarlike, IndexMixin, get_index_dtype); 39 from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning. ImportError: cannot import name 'IndexMixin'. ```. And actually `IndexMixin` is no longuer in `scipy.sparse.sputils`. It seems to be now in `scipy/sparse/_index.py `. It's maybe trivial to fix, but I don't have time right now. In few weeks I could be available for help if needed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/999:1435,avail,available,1435,https://qutip.org,https://github.com/qutip/qutip/issues/999,1,['avail'],['available']
Availability,"Hi,; I just recently installed qutip on Canopy using a Windows Binary. When I try to run one of the tests, e.g. test_wigner.py, I get this error:. ---. AttributeError Traceback (most recent call last); C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in <module>(); 37 from numpy.testing import assert_, run_module_suite, assert_equal; 38 ; ---> 39 from qutip.states import coherent, fock; 40 from qutip.wigner import wigner; 41 from qutip.random_objects import rand_dm, rand_ket. C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in <module>(); 60 qutip.settings.ipython = True; 61 except:; ---> 62 qutip.settings.ipython = False; 63 ; 64 # -----------------------------------------------------------------------------. AttributeError: 'module' object has no attribute 'settings' . The AttributeError also appears when I simply try to import qutip from the command line. I'm not too familiar with Python scripting so any assistance on the matter would be greatly appreciated. Thank you!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469:139,error,error,139,https://qutip.org,https://github.com/qutip/qutip/issues/469,1,['error'],['error']
Availability,"Hi,; I'm running qutip on the latest Ubuntu LTS version in 64 bit. All required packages (gfortran etc.) are installed from the repository. No matter if I use the qutip package from the repository or compile it from source, the testing results into 3 errors:. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Consistency between transformations of kets and denstity matrices ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.84e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > correlation: compare spectrum obtained for eseries and fft methods ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > >",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:251,error,errors,251,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['error'],['errors']
Availability,"Hi,; I'm trying to use `mesolve` using a sampled hamiltonian to be interpolated (_list array format_ according to [the doc](https://qutip.org/docs/latest/apidoc/functions.html?highlight=mesolve#module-qutip.mesolve)) with a `tlist` that isn't the time list `times` of the Hamiltonian coefficients, but a sublist `eval_times` of `times`. This method works fine and returns the results at `eval_times` when `c_ops=[]`, but if I specify collapse operators, I get a `tlist are not compatible` error. Here is an example of what I'm saying.; ```python; times = np.linspace(0, 1, 100); x = np.cos(2*np.pi * times); eval_times=times[0:-1:3]; rho = qutip.basis(2, 0).proj(); ham = qutip.QobjEvo([[qutip.sigmax(), x]], tlist=times); qutip.mesolve(ham, rho0=rho, tlist=eval_times, c_ops=[]) # works fine; collapse = [qutip.qeye(2)] ; qutip.mesolve(ham, rho0=rho, tlist=times, c_ops=collapse) # works fine as well; qutip.mesolve(ham, rho0=rho, tlist=eval_times, c_ops=collapse) # raises `tlist are not compatible` error; ```. Do you have any idea what might cause this behaviour ? I believe this might be an issue with the `mesolve` solver, since when you don't specify `c_ops`, you use `sesolve`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1560:489,error,error,489,https://qutip.org,https://github.com/qutip/qutip/issues/1560,2,['error'],['error']
Availability,"Hi. I've been trying to use the Platen solver for ssesolve but it doesn't seem to work. Running the code below produces an error. Here's the code:; ```; from qutip import *; import numpy as np. N = 15; w0 = 1.0 * 2 * np.pi; A = 0.1 * 2 * np.pi; times = np.linspace(0, 1.5, 150); gamma = 0.25. ntraj = 1; nsubsteps = 1. a = destroy(N); x = a + a.dag(); y = -1.0j*(a - a.dag()). H = w0 * a.dag() * a + A * (a + a.dag()). rho0 = coherent(N, np.sqrt(5.0), method='analytic'); c_ops = [np.sqrt(gamma) * a]; e_ops = [a.dag() * a, x, y]. result = ssesolve(H, rho0, times, [np.sqrt(gamma) * a], e_ops, ntraj=ntraj, nsubsteps=nsubsteps, method='homodyne', map_func=parallel_map, solver='platen'); ```. Here's the error:; ```; Traceback (most recent call last):; File ""test.py"", line 23, in <module>; result = ssesolve(H, rho0, times, [np.sqrt(gamma) * a], e_ops, ntraj=ntraj, nsubsteps=nsubsteps, method='homodyne', map_func=parallel_map, solver='platen'); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 377, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 758, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/parallel.py"", line 183, in serial_map; result = task(value, *task_args, **task_kwargs); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 859, in _ssesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 1843, in _rhs_psi_platen; d1(A, psi_t) * dt +; TypeError: d1_psi_homodyne() takes exactly 4 arguments (2 given). ```; I've rewritten the _rhs_psi_platen function to fix this issue. Would you like me to make a pull request?; ~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/857:123,error,error,123,https://qutip.org,https://github.com/qutip/qutip/issues/857,2,['error'],['error']
Availability,How to find eigenvalues of Hamiltonian from eigenenergies( ) command.For Hamiltonian it gives error 'list' object has no attribute 'eigenenergies''; I am using Hamiltonian ; H = wc * a.dag() * a + wm * bv.dag() * bv+ wv * bm.dag() * bm + g * (a.dag() * bv + bv.dag()* a)-g * (a.dag() * bm + bm .dag()*a) ; command is like H.eigenenergies( ),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/918:94,error,error,94,https://qutip.org,https://github.com/qutip/qutip/issues/918,1,['error'],['error']
Availability,"I am distributing some qutip code to several cores. I want to enforce that qutip only uses one core per job with qutip.settings.num_cpus=1, but it is not working, the processes still take all the processors of my machine, so that if I have N cores, the multiprocessing ends up using N*N threads, slowing things down a lot! How can I force qutip to use only 1 core? Currently loading like this:. ```; from qutip import create, destroy, Qobj, expect, tensor, qeye, fidelity, basis, variance, settings; from pathos.multiprocessing import ProcessingPool. settings.num_cpus = 1; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1175:311,down,down,311,https://qutip.org,https://github.com/qutip/qutip/issues/1175,1,['down'],['down']
Availability,"I am having some trouble with the function mesolve. The situation is the following: I have a collection of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:293,error,error,293,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['error'],['error']
Availability,"I am installing on Mac OS Catalina using the following command:. python setup.py develop --with-openmp. However, I am getting the following error:. clang: error: unsupported option '-fopenmp'; error: command 'g++' failed with exit status 1. could you please elaborate?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230:140,error,error,140,https://qutip.org,https://github.com/qutip/qutip/issues/1230,3,['error'],['error']
Availability,"I am new to Qutip and I installed 4.3.1, and I was just trying to run the steady state solvers optomechanical script that was on Qutip's example notebooks. Running the cell ""Run Steady State Solvers"" Gives me this error:; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-14-e1b88270a1b6> in <module>; 8 use_rcm = False; 9 rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; ---> 10 use_rcm=use_rcm, tol=1e-15, return_info=True); 11 print(ss,'solution time =',info['solution_time']); 12 rho_mech = ptrace(rho_ss, 1). /anaconda3/lib/python3.6/site-packages/qutip/steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 271 else:; 272 raise Exception(; --> 273 ""Invalid keyword argument '""+key+""' passed to steadystate.""); 274 ; 275 # Set column perm to NATURAL if using RCM and not specified by user. Exception: Invalid keyword argument 'use_precond' passed to steadystate. and I cannot seem to get around it. I am not sure why its not working, I tried to install 4.3.0 instead and it still did not function. It runs if I comment out the use_precond but I am not sure why its giving me this error and how to proceed from here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1015:214,error,error,214,https://qutip.org,https://github.com/qutip/qutip/issues/1015,2,['error'],['error']
Availability,"I am new to quantum computing and I want to use Qutip to calculate the entanglement entropy on my M1 MacBook Pro. However, I cannot import the Qutip library into either Jupyter notebook or Python3.9. The error message as shown in follow. May I ask how to solve this problem? Thank you. . ```python; IndexError Traceback (most recent call last); <ipython-input-4-82c62ef8635d> in <module>; ----> 1 from qutip import *. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/__init__.py in <module>; 145 # if num_cpu is 0 set it to the available number of cores; 146 import qutip.hardware_info; --> 147 info = qutip.hardware_info.hardware_info(); 148 if 'cpus' in info:; 149 qutip.settings.num_cpus = info['cpus']. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in hardware_info(); 121 """"""; 122 if sys.platform == 'darwin':; --> 123 out = _mac_hardware_info(); 124 elif sys.platform == 'win32':; 125 out = _win_hardware_info(). /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in _mac_hardware_info(); 46 l[1].strip('.\n '); 47 results.update({'cpus': int(info['physicalcpu'])}); ---> 48 results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); 49 .readlines()[0].split('@')[1][:-4])*1000)}); 50 results.update({'memsize': int(int(info['memsize']) / (1024 ** 2))}). IndexError: list index out of range; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473:204,error,error,204,https://qutip.org,https://github.com/qutip/qutip/issues/1473,2,"['avail', 'error']","['available', 'error']"
Availability,"I am running a IPython/Jupyter Notebook via [supervisor](http://supervisord.org/) which does not export the `$HOME` environment variable (this is of course easily fixable). When importing qutip, I get the following warning message:. ```; WARNING:qutip.settings:Error loading RC file.; Traceback (most recent call last):; File ""/home/mvd/miniconda3/lib/python3.4/site-packages/qutip/__init__.py"", line 138, in <module>; os.environ['HOME'], "".qutiprc""; File ""/home/mvd/miniconda3/lib/python3.4/os.py"", line 633, in __getitem__; raise KeyError(key) from None; KeyError: 'HOME'; ```. Since this is just a warning, does it mean that there are no problems, or will it have some effects?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/365:261,Error,Error,261,https://qutip.org,https://github.com/qutip/qutip/issues/365,1,['Error'],['Error']
Availability,"I am running an iterative method that requires calling mesolve many times.; At some point, the program crashes. It seems that every time mesolve is called, the list of arguments passed to the gcc complier grows. Eventually that list is too big for gcc and returns errors and stops the program. I wrote a simplified code that eventually leads to that problem. It took close to 2 hours to reproduce, and but maybe you can figure out a way to reach that point faster (faster calls ? more arguments passed to gcc to make it reach that point faster?). The screen capture shows how many calls were required in my case, how many seconds had elapsed since the program started, as well as how the error manifests. [test_qutip_error.txt](https://github.com/qutip/qutip/files/2973153/test_qutip_error.txt); <img width=""982"" alt=""Screen Shot"" src=""https://user-images.githubusercontent.com/28269924/54465696-b1034400-4739-11e9-91ab-be1fff21f057.png"">. I experienced this problem a while ago, both on my laptop and amazon instances, on Qutip 4.2.0 with Python 2.7.15. Both with the Anaconda and pip installs. Are there any ways to fix this? I need this for my research. Thank you very much !",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966:264,error,errors,264,https://qutip.org,https://github.com/qutip/qutip/issues/966,2,['error'],"['error', 'errors']"
Availability,I am running ubuntu 16.4. The following code:; rho = rand_dm(5); hinton(rho);; produces the following figure:; ![download](https://cloud.githubusercontent.com/assets/9404272/21955048/107afc22-da6b-11e6-894c-f7e03d0b7eb8.png); I am unsure as to where the issue lies since I have latex installed and the bras and kets are displayed correctly inline with jupyter.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/633:113,down,download,113,https://qutip.org,https://github.com/qutip/qutip/issues/633,1,['down'],['download']
Availability,"I am trying to calculate the expectation value of Mx. It is the order parameter of a hamiltonian, and I want to calculate the phase transition of it later on. I used commend expect(Mx, H.groundstate() while I have input a hamiltonian. Here is the code and I have error as the following:. ----------------------------------------; H.groundstate(). Out[193]:; (-21.1393191156312,; Quantum object: dims = [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], shape = (1024, 1), type = ket; Qobj data =; [[-0.00980414]; [ 0.01225526]; [ 0.01570169]; ...; [ 0.01570169]; [ 0.01225526]; [-0.00980414]]). **## expect(Mx, H.groundstate())**. ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-194-8e60f2d2c48d> in <module>(); ----> 1 expect(Mx, H.groundstate()). /Users/lib/python2.7/site-packages/qutip/expect.pyc in expect(oper, state); 95 dtype=complex); 96 else:; ---> 97 raise TypeError('Arguments must be quantum objects or eseries'); 98 ; 99 . **TypeError: Arguments must be quantum objects or eseries**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/805:263,error,error,263,https://qutip.org,https://github.com/qutip/qutip/issues/805,1,['error'],['error']
Availability,"I am trying to determine the relationship between Delta and the frequency of this graph. I put all the code that creates the pulse into a for loop and replaced Delta with ""x"" so the loop can run over different values. For each Delta (""x""), I use lmfit to fit the curve to a decaying oscillation equation and determine its frequency, then I plot the fit. I've noticed that the fit is worse for the lower values of Delta in the for loop. I think restricting the fit to the region over which the pulse actually acts can improve it. The pulse occurs from 0 to 0.5e-5 seconds which is half the length of the times array (1e-5). len(times) outputs 1000, so I thought I could accomplish this by writing times[0:500] and results.expect[1][0:500], but I get an error. Code:. from lmfit import Minimizer, Parameters, report_fit. h = 6.62607015e-34; b = 0.1786195317554453 #magnetic field; b_AC = 3.572390635108906e-05 #oscillating magnetic field; g = 2 #g-factor; u = 9.274E-24 #bohr magneton; w = gub/h #omega; w0 = 5e9 # omega0 is the rotating frame frequency. gamma_phi = 999000; gamma_minus = 1000. epsilon = gub/h*(2cmath.pi); Delta = gub_AC/h(2*cmath.pi). H0 = (w-w0)/2 * sz #+ Delta/2*sy. times=np.linspace(0, 0.00001, 1000); state0=(state_z_plus)/(np.sqrt(1)). for x in range(2000000,10000000,900000):. def pulse(t0,t1,t):; return np.heaviside(t-t0,2e-9)-np.heaviside(t-t1,2e-9). def H1_coeff(t,args):; t0=args['t0'] #pulse start time; t1=args['t1'] #pulse end time; phi=args['phi'] #phase; return x*pulse(t0,t1,t)*np.sin((w-w0)*t+phi). args = {""t0"":0,""t1"":0.5e-5 ,""phi"":(1/4)*np.pi}. H = [H0,[sx,H1_coeff]]. results=q.mesolve(H, state0, times, e_ops=[sx, sy, sz],c_ops=[cmath.sqrt(gamma_phi/2)*sz,cmath.sqrt(gamma_minus)*sm], options=qutip_options, args=args). def fcn2min(params, x, data):; amp = params['amp']; shift = params['shift']; omega = params['omega']; decay = params['decay']; model = amp * np.sin(x*omega + shift) * np.exp(-x*x*decay); return model - data. params = Parameters(); params.add",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1559:752,error,error,752,https://qutip.org,https://github.com/qutip/qutip/issues/1559,1,['error'],['error']
Availability,"I am trying to install qutip 3.1.0 on my MS Windows following the official steps:; 1. Install the Python(X,Y) distribution (tested with version 2.7.3.1). Other Python distributions, such as Enthought Python Distribution or Anaconda CE have also been reported to work.; 2. When installing Python(x,y), explicitly select to include the Cython package in the installation. This package is not selected by default.; 3. Add the following content to the file C:/Python27/Lib/distutils/distutils.cfg (or create the file if it does not already exists):; [build]; compiler = mingw32; [build_ext]; compiler = mingw32; The directory where the distutils.cfg file should be placed might be different if you have installed the Python environment in a different location than in the example above.; 4. Obtain the QuTiP source code and installed it following the instructions given above. However, there are some errors after i run the installation verifying process. Is there anyone came across such errors? How can I repair these errors? The errors are presented as follow:; ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 60, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; rais",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:897,error,errors,897,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['error'],['errors']
Availability,"I am trying to install qutip with the fortran monte-carlo solver. I'm installing over a version of qutip which did not have this option, so my installation command is:. pip install --upgrade --no-deps --force-reinstall qutip --install-option=--with-f90mc. The build fails as below. It is looking for libraries which do not exist in the MKL distribution I am using. Perhaps they existed in an earlier version ? Can anyone advise how to achieve a succesful build - I think I need to modify the link line. . Any suggestions gratefully received.; Colin. /cm/shared/apps/gcc/4.8.1/bin/gfortran -Wall -g -Wall -g -shared build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/qutip/fortran/qutraj_runmodule.o build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/fortranobject.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_precision.o build/temp.linux-x86_64-2.7/qutip/fortran/mt19937.o build/temp.linux-x86_64-2.7/qutip/fortran/linked_list.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_general.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_hilbert.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_evolve.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_linalg.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_run.o build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/qutip/fortran/qutraj_run-f2pywrappers2.o -L/cm/shared/apps/intel/composer_xe/2013_sp1.3.174/mkl/lib/intel64 -L/cm/shared/apps/python/2.7.9/lib -Lbuild/temp.linux-x86_64-2.7 -lzvode -lmkl_lapack32 -lmkl_lapack64 -lmkl_rt -lpthread -lmkl_lapack32 -lmkl_lapack64 -lmkl_rt -lpthread -lpython2.7 -lgfortran -o build/lib.linux-x86_64-2.7/qutip/fortran/qutraj_run.so; /usr/bin/ld: cannot find -lmkl_lapack32; collect2: error: ld returned 1 exit status",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/491:1699,error,error,1699,https://qutip.org,https://github.com/qutip/qutip/issues/491,1,['error'],['error']
Availability,"I am trying to run this code to test mcsolve():; ```; import numpy as np; from qutip import *. def hamiltonian_t(t, args):; #; # evaluate the hamiltonian at time t. ; #; H0 = args['H0']; H1 = args['H1']; w = args['w']. return H0 + H1 * np.sin(w*t). N = 2 # set where to truncate Fock state for cavity; a = destroy(N); psi0 = basis(N, 0) # define initial state. w_c = 1.0 * 2 * np.pi # cavity frequency; w = w_c; kappa = 0.001 * 2 * np.pi. H0 = w_c * a.dag()*a # time-independent term; H1 = kappa*(a.dag() + a) # time-dependent term. c_ops = [] # Build collapse operators; c_ops.append(np.sqrt(kappa) * a). args = {'H0': H0, 'H1': H1, 'w': w}. times = np.linspace(0, 10, 100) # define time vector. output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); ```. I am getting this error:; ```; Traceback (most recent call last):; File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 365, in run_test; rhs, ode_args = self.ss.makefunc(ss); NameError: name 'ss' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""mc_solve_example2.py"", line 33, in <module>; output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 223, in mcsolve; mc.run_test(); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 368, in run_test; raise Exception(""Error calculating H""); Exception: Error calculating H; ```. Here is the output of qutip.about(); ```; QuTiP Version: 4.5.1; Numpy Version: 1.18.4; Scipy Version: 1.4.1; Cython Version: 0.29.19; Matplotlib Version: 3.2.1; Python Version: 3.6.8; Number of CPUs: 112; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. Any advice how to fix that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:797,error,error,797,https://qutip.org,https://github.com/qutip/qutip/issues/1368,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am trying to use code from User Guide's [Directly Generating an Animation section](http://qutip.org/docs/4.1/guide/guide-bloch.html?highlight=funcanimation#directly-generating-an-animation):. ```; ani.save('bloch_sphere.mp4', fps=20, clear_temp=True); ```. I get the following error:; ```; Traceback (most recent call last):; File ""bloch_test.py"", line 59, in <module>; ani.save('bloch_sphere.mp4', fps=20, clear_temp=True); TypeError: save() got an unexpected keyword argument 'clear_temp'; ```. It looks like OpenDrift may have had the same or similar issue:; https://github.com/OpenDrift/opendrift/issues/9. My hypothesis is that QuTip needs to be adapted to the newer version of Matplotlib.; According to ; ```; from qutip import *; about(); ```; I use Matplotlib version: 2.1.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/798:279,error,error,279,https://qutip.org,https://github.com/qutip/qutip/issues/798,1,['error'],['error']
Availability,I am trying to use heterodyne simulation using built in milstein solver. It gives me error. . Looking at the code it seems that internally milstein solver is converting heterodyne problem into two homodyne problems. Which is fine. But not quite implemented correctly. Can you please update me on this? I will be willing to provide a patch.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/239:85,error,error,85,https://qutip.org,https://github.com/qutip/qutip/issues/239,1,['error'],['error']
Availability,I am unable to open slides that were provided on [FOSDEM 2020 presentation](https://archive.fosdem.org/2020/schedule/event/quantum_qutip/). I am able to download the slides but I don't know what format these slides are in. . This presentation was references[ here](https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2021#1-error-mitigation-in-qutip).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1467:153,down,download,153,https://qutip.org,https://github.com/qutip/qutip/issues/1467,2,"['down', 'error']","['download', 'error-mitigation-in-qutip']"
Availability,"I am using GRAPE to identify optimal pulse sequences to produce a desired unitary, and am running into an error when I use optimize_pulse_unitary for sparse matrices of size 1296x1296 and larger. . For example, the following code works for N=2 but fails for N=>3:. ```python; import numpy as np; from qutip import *; from scipy.sparse import csr_matrix; import qutip.logging_utils as logging; logger = logging.get_logger(); #Set this to None or logging.WARN for 'quiet' execution; log_level = logging.INFO; #QuTiP control modules; import qutip.control.pulseoptim as cpo; import math. # Set parameters; chi = 2.2 * 2 * np.pi # coupling strength; N = 3 # number of cavity states; n_ts = 21 # number of discrete time steps; evo_time = 4. # Length of time; fid_err_targ = 1e-10 # Target fidelity error; max_iter = 0 # # Maximum iterations for the optimization algorithm; max_wall_time = 0 # Maximum (elapsed) time; min_grad = 1e-20 # Minimum gradient; p_type = 'SINE' # pulse type (RND|ZERO|LIN|SINE|SQUARE|SAW|TRIANGLE); f_ext = ""pulsedata.txt"" # output file. # Set operators and Hamiltonians. # operators; a = tensor(destroy(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); b = tensor(qeye(N), destroy(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); c = tensor(qeye(N), qeye(N), destroy(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); d = tensor(qeye(N), qeye(N), qeye(N), destroy(N), qeye(2), qeye(2), qeye(2), qeye(2)); sm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), destroy(2), qeye(2), qeye(2), qeye(2)); zm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), destroy(2), qeye(2), qeye(2)); tm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), destroy(2), qeye(2)); qm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), destroy(2)); P_se = tensor(qeye(N), qeye(N), qeye(N), qeye(N), basis(2, 1) * basis(2, 1).dag(), qeye(2), qeye(2), qeye(2)); P_ze = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), basis(2, 1) * basis(2, 1).d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/1617,2,['error'],['error']
Availability,"I am using anaconda and qutip on Win10 system with VS2015 (community version). When solving Hamiltonian with time dependent coefficients, I get an ""ImportError"" that caused by cython which does not occur on linux. I've re-installed VS2015 and qutip many times, but this problem still exists. Is there any way to solve it? Here is my error message. **ImportError: Building module rhs22280 failed: [""distutils.errors.CompileError: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\bin\\\\cl.exe' failed with exit status 2\n""]**. [error_message.txt](https://github.com/qutip/qutip/files/3317876/error_message.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:333,error,error,333,https://qutip.org,https://github.com/qutip/qutip/issues/1026,2,['error'],"['error', 'errors']"
Availability,"I apologize for not being that familiar with the technical terminology anymore as I have been out of quantum optics research for over 3 years, but I hope that I'll be able to explain the issue anyway. **Describe the issue**; Taking partial trace of a quantum object over its basis does not return the quantum object itself anymore but produces a type error. **To Reproduce**; Since version 4.5.0 running; ```python; psi = qt.thermal_dm(2,1); psi.ptrace(0); ```. Produces the following error. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-7-87c31fb793ec> in <module>; ----> 1 psi.ptrace(0). ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qobj.py in ptrace(self, sel, sparse); 1353 return q.tidyup() if settings.auto_tidyup else q; 1354 else:; -> 1355 return _ptrace_dense(self, sel); 1356 ; 1357 def permute(self, order):. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qobj.py in _ptrace_dense(Q, sel); 2203 rhomat = vmat.dot(vmat.conj().T); 2204 else:; -> 2205 rhomat = np.trace(Q.full(); 2206 .reshape(rd + rd); 2207 .transpose(qtrace + [nd + q for q in qtrace] +. TypeError: 'numpy.float64' object cannot be interpreted as an integer; ```. Whereas in versions older than 4.5.0 (verified in 4.3.2 and 4.4.1) running; ```python; psi = qt.thermal_dm(2,1); psi.ptrace(0); ```; produced the Qobj psi as the output. . ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True. (0.667, 0.0,; 0.0, 0.333); ```. Is this change on purpose? I've found it very useful in older versions to loop over taking the partial trace of quantum objects whether it was necessary or not and I believe that unless there is any specific reason for the change other people may prefer the older output generation. Curious what other people think, thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1413:351,error,error,351,https://qutip.org,https://github.com/qutip/qutip/issues/1413,2,['error'],['error']
Availability,"I built latest cython, which happens to be version 0.21a1. Running any qutip code throws a warning:; QuTiP warning: Cython setup failed: invalid literal for int() with base 10: '21a1'. This is due to _version2int() not properly parsing the version info in __init__.py. commenting it out, works (and qutip code runs). Is this on purpose (so say only certain, non-dev, versions are supported)? or should _version2int() be more robust? . .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/207:425,robust,robust,425,https://qutip.org,https://github.com/qutip/qutip/issues/207,1,['robust'],['robust']
Availability,"I can't quite figure out if this is simply due to the DeprecationWarnings or something else but all tests are failing due to `atol` not being set for the gmres solver. I will try to set `atol` and check if the tests pass. Error log: https://api.travis-ci.org/v3/job/379109482/log.txt.; ```; scipy/sparse/linalg/isolve/iterative.py:2: DeprecationWarning: scipy.sparse.linalg.bicgstab called without specifying `atol`. The default value will be changed in a future release. For compatibility, specify a value for `atol` explicitly, e.g., ``bicgstab(..., atol=0)``, or to retain the old behavior ``bicgstab(..., atol='legacy')``. ```. ```; ..................................................; ======================================================================; ERROR: Steady state: Thermal qubit - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/Users/shahnawaz/dev/qutip/qutip/tests/test_steadystate.py"", line 145, in test_qubit_power_gmres; rho_ss = steadystate(H, c_op_list, method='power-gmres'); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 298, in steadystate; return _steadystate_power(A, ss_args); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 863, in _steadystate_power; v = v / la.norm(v, np.inf); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/scipy/linalg/misc.py"", line 137, in norm; a = np.asarray_chkfinite(a); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/numpy/lib/function_base.py"", line 1233, in asarray_chkfinite; ""array must not contain infs or NaNs""); ValueError: array must not contain infs or NaNs. ----------------------------------------------------------------------; Ran 561 tests in 576.175s. FAILED (SKIP=19, errors=1); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:222,Error,Error,222,https://qutip.org,https://github.com/qutip/qutip/issues/862,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,"I did this previously a handful of commits ago in b7df1b5, but the; tolerances chosen there weren't ideal. This is only especially relevant for cases where we have to use generic; eigenvalue solvers in place of Hermitian ones (e.g. when the Hermitian; ones have temperamental segfaults). I ran test_diag_liou_mult for all; dimensions from 2 to 99 inclusive 2000 times, and measured the maximum; absolute and relative tolerance for each case. I found that 3 times out; of 2000 the absolute tolerance exceeded 1e-10, and 12 times out of 2000; the relative tolerance exceeded 1e-7. The max values seen were 4.24e-10; and 3.12e-7 respectively. This updates the tolerances to 1e-9 (absolute) and 1e-6 (relative),; which still seem like reasonable tolerances, and should ensure that; we're testing correctly. See also #1474.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:68,toler,tolerances,68,https://qutip.org,https://github.com/qutip/qutip/pull/1486,6,['toler'],"['tolerance', 'tolerances']"
Availability,"I encountered a numerical error while simulating a Ramsey experiment using mesolve in QuTiP. Specifically, the simulation shows unexpected discontinuities and unphysical results in the oscillatory pattern. I have highlighted these problematic points with red circles in the plot for clarity.; <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/e7a6fb3e-c9e8-4cf9-96ba-aefaf7e9a554"">; </div>. To make the problem clearer, I simplified the simulation model. The Hamiltonian used is:. $$ H_{\rm rot} = {\rm Re}[\Omega(t)]\frac{\sigma_x}{2} + {\rm Im}[\Omega(t)]\frac{\sigma_y}{2} $$. where $\Omega(t)$ is a time-dependent coefficient. The tlist and coefficients are both numpy arrays. Providing the entire code that generates these coefficients would be lengthy, so I preselected a few sets of coefficients and tlist where the issue is present. Specifically, the problematic data is from indices 92, 93, and 94, which have been highlighted in the plot. These are stored using np.savetxt. Below is the plot of the coefficients, showing that they are mainly real and differ only slightly. ```; plt.figure(); ax0 = plt.subplot(221); ax1 = plt.subplot(222). for wavedata_name in [""index92"",""index93"",""index94""]:; coef = np.loadtxt(f""{wavedata_name}_coef.txt"",dtype=np.complex128); tlist = np.loadtxt(f""{wavedata_name}_tlist.txt"",dtype=np.float64); ax0.plot(tlist, coef.real, label=f""{wavedata_name}""); ax1.plot(tlist, coef.imag, label=f""{wavedata_name}""); ax0.legend(); ax1.legend(); ; ax0.set_title(r""$\sigma_x$ coefficient""); ax1.set_title(r""$\sigma_y$ coefficient""); ```. <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/b07b3a64-a2d4-458b-a04e-4c83c0c4c093"">; </div>; Despite these small differences, the simulation results show significant and unexpected variations. ; Below is simulation code and results. ```; import qutip; import numpy as np; import matplotlib.pyplot as plt. sx = qutip.sigmax(); sy = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['error'],['error']
Availability,"I followed instruction on http://qutip.org/docs/4.1/installation.html and used pip to install qutip in my python3.5.2 virtualenv directory. All required packages listed under ""General Requirements"" were also installed. pip commands completed fine. I then cd into a directory peer to ""python3.5.2 virtualenv directory"" and launched jupyter notebook. Ran two import commands. Both failed. Any suggestions on how to debug these failures? I restarted firefox and jupyter notebook several times. 1. ""import qutip.testing as qt"" to verify installation; lib/python3.5/site-packages/qutip/__init__.py; 169 ; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. lib/python3.5/site-packages/qutip/qobj.py; 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. lib/python3.5/site-packages/qutip/fastsparse.py; 35 from scipy.sparse import (_sparsetools, isspmatrix, isspmatrix_csr,; 36 csr_matrix, coo_matrix, csc_matrix, dia_matrix); ---> 37 from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; 38 getdtype, isscalarlike, IndexMixin, get_index_dtype); 39 from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning. ImportError: cannot import name 'IndexMixin'. 2. ""from qutip import *""; lib/python3.5/site-packages/qutip/__init__.py in <module>; 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-2-82c62ef8635d> in <module>; ----> 1 from qutip import *. lib/python3.5/site-packages/qutip/__init__.py in <module>; 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 . AttributeError: module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018:425,failure,failures,425,https://qutip.org,https://github.com/qutip/qutip/issues/1018,1,['failure'],['failures']
Availability,"I found a probably severe error in qutip 3.0.0 (worked fine in previous versions). When using mesolve, a function in ""rhs_generate.py"" (_td_wrap_array_str) checks if arguments exist. So far so good, however the if clause using. if args:; .... does not work when the argument is a numpy array, which raises the error:. ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). Is not hard to fix, but an annoying error. Keep up the good work!!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/199:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/199,3,['error'],['error']
Availability,"I get a MemoryError computing a ptrace, although the output object would be smaller than the input object. Minimum working example:; `tensor(fock(2,0), fock(100,0), fock(100,0)).ptrace(0); `. The problem might be that internally the full density matrix is created before summation. This requires more RAM than is eventually available. Mathematically the operation should be possible without excessive RAM usage, as long as the input, as in this case, is a pure state vector. (related to [issue #828](https://github.com/qutip/qutip/issues/828 ) but not the same.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/842:324,avail,available,324,https://qutip.org,https://github.com/qutip/qutip/issues/842,1,['avail'],['available']
Availability,"I get the following error message. My code runs fine on the first try, but gives the error if I try to run it again. I can restart the kernel every time, but would like to know if there's a fix. Could someone help please?. ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-7-becee6304ad3> in <module>; 60 ; 61 ; ---> 62 output3 = mesolve(HDGRnew, tpss.states[i], tlist_reg, c_opsn, [Xp], args=param); 63 ; 64 Xppt = output3.expect[0]*np.exp(1j*wlo*(tlist_reg)). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo.py in compile(self, code, matched, dense, omp); 1553 if self.use_cython:; 1554 # All factor can be compiled; -> 1555 self.coeff_get, Code, file_ = _compiled_coeffs(; 1556 self.ops,; 1557 self.args,. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 121 """"""; 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); --> 123 coeff_obj, filename = _import_str(code, ""cqobjevo_compiled_coeff_"",; 124 ""CompiledStrCoeff"", True); 125 return coeff_obj(ops, args, tlist, dyn_args), code, filename. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/issues/1196,2,['error'],['error']
Availability,"I get this error for anything less than nsteps = 1000000 (I've tried 5000, 10000, 50000, 100000, 500000) while using mesolve to get the dynamics of the system according to the Lindblad ME.; Details - It is a two qubit model, with both qubits coupled to baths and with inter-qubit coupling present. The solution for unit time with 100 divisions takes about 10 min but for any time interval greater than 1, I keep getting this error even with nsteps = 1000000, 5000000. Anything greater than that takes >2 hours to evaluate. ```python; import numpy as np; import matplotlib as plt; from qutip import *; from cmath import *; ```; Initial State:; ```; initialstate=tensor(fock_dm(2,0),fock_dm(2,0)); ```; Hamiltonian:; ```; epsilon=1; g=0.025; sigmaplus=0.5*(sigmax()+1j*sigmay()); sigmaminus=0.5*(sigmax()-1j*sigmay()); H=0.5*epsilon*(tensor(sigmaz()+qeye(2),qeye(2))+tensor(qeye(2),sigmaz()+qeye(2))) + g*(tensor(sigmaplus,sigmaminus)+tensor(sigmaminus, sigmaplus)). ```; Jump operators:; ```; gamma1=0.1; gamma2=0.05; T1=2; T2=0.05. diss_coeff=[cmath.sqrt(gamma1*(1/exp(epsilon/T1)-1)),cmath.sqrt(gamma1*exp(epsilon/T1)*(1/exp(epsilon/T1)-1)), cmath.sqrt(gamma2*(1/exp(epsilon/T2)-1)), cmath.sqrt(gamma2*exp(epsilon/T2)*(1/exp(epsilon/T2)-1))]. diss_oper=[diss_coeff[0]*tensor(sigmaplus, qeye(2)),diss_coeff[1]*tensor(sigmaminus, qeye(2)),diss_coeff[2]*tensor(qeye(2),sigmaplus), diss_coeff[3]*tensor(qeye(2),sigmaminus)]; ```; Time steps:; ```; tlist = np.linspace(0, 1, 100); ```; Using mesolve:; ```; dynamics=mesolve(H, initialstate, tlist,diss_oper, options=Options(nsteps=10000)) ; ```; Note: nsteps=1000000 in the line above evaluates in 7 min. Ideally, I would like to solve for time in the range (0, 400) but in the worst case, time range (0,250) will do (with about 1000 divisions). But, increasing nsteps is not an option because the evaluation takes too long. Are there any changes I can make for faster evaluation?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/1623,2,['error'],['error']
Availability,"I had tried many times to install the anaconda3.5 3.6 and 3.7, for installing qutip 4.4.0or4.4.1. But when I verifying the Installation, some similar errors always occur, as indicated below; ![QQ截图20190831230327](https://user-images.githubusercontent.com/54746315/64065880-d92e2300-cc45-11e9-9672-f13fca2ffb36.png); ps: I have install vs2015 and option for c++ compiler; in addition, there are some installation information as below; ![QQ截图20190831224652](https://user-images.githubusercontent.com/54746315/64065902-26aa9000-cc46-11e9-9c60-6796fc1deff7.png); the red underline has indicated some problem, is it matter?; who can give some advice for dealing with it? ; Thanks a lot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079:150,error,errors,150,https://qutip.org,https://github.com/qutip/qutip/issues/1079,1,['error'],['errors']
Availability,"I have a trouble in solving a time dependent Bloch-Redfield master equation with arguments.; Let me use an example discussed in [here](https://github.com/qutip/qutip/issues/966); The schedule functions of the time dependent Hamiltonian are defined by using some parameters which are passed to mesolve as args.; This method works well for sesolve and mesolve.; However, if I try to use the same method in brmesolve, it returns error in compiling Cython. I attached a python code which demonstrates the above observation. . I also noticed that in bloch_redfield.py it says; args : dict ; Placeholder for future implementation, kept for API consistency. Would it be possible to use arguments in brmesolve? If not, how could I use parametrically defined schedule functions while avoiding the issue raised in [here](https://github.com/qutip/qutip/issues/966)?. I need this for my research and I would appreciate your help very much. [Qutip Redfield master issue.py.zip](https://github.com/qutip/qutip/files/4028211/Qutip.Redfield.master.issue.py.zip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1150:426,error,error,426,https://qutip.org,https://github.com/qutip/qutip/issues/1150,1,['error'],['error']
Availability,"I have noticed that when I try to use the `.dnorm()` method to calculate the diamond norm distance between two channels I am greeted with an error and the operation fails. Rather than an error I expected the output to be a number between 0 and 2. See the simple example below. ```; from qutip import destroy, qeye, fock_dm, kraus_to_choi. # Choi matrix for 1 qubit amplitude damping channel with probability p; def AmpDampChoi(p):; Kraus = [(1-p)**.5*qeye(2),p**.5*destroy(2),p**.5*fock_dm(2,0)]; return kraus_to_choi(Kraus). # Choi matrix for identity channel on 1 qubit; IdChoi = kraus_to_choi([qeye(2)]). # These values are found without issue but since they're all CPTP maps they all have dnorm 1; print(IdChoi.dnorm()); print(AmpDampChoi(0).dnorm()); print(AmpDampChoi(0.64).dnorm()). # These trivial diamond norm distances between a channel and itself are also produced; print(IdChoi.dnorm(AmpDampChoi(0))); print(IdChoi.dnorm(IdChoi)); print(AmpDampChoi(0.5).dnorm(AmpDampChoi(0.5))). # If a diamond norm distance between two different channels is sought then we see the error; print(IdChoi.dnorm(AmpDampChoi(0.5))); print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))); ```. Attempting to run either of the final two prints gives the following spiel:. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); TypeError: float() argument must be a string or a number, not 'csr_matrix'. The above exception was the direct cause of the following exception:. ValueError Traceback (most recent call last); <ipython-input-21-add6d3e56036> in <module>; 20 ; 21 # If a diamond norm distance between two different channels is sought then we see the error; ---> 22 print(IdChoi.dnorm(AmpDampChoi(0.5))); 23 print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))). ~/.local/lib/python3.8/site-packages/qutip/qobj.py in dnorm(self, B); 1881 ; 1882 """"""; -> 1883 return mts.dnorm(self, B); 1884 ; 1885 @property. ~/.local/lib/python3.8/site-packages/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422:141,error,error,141,https://qutip.org,https://github.com/qutip/qutip/issues/1422,2,['error'],['error']
Availability,"I have seen in multiple places of the code (in `qutip/core/data`) that a `TypeError` is raised when the shape of the input Data (`Dense` or `CSR`) is wrong, even though the `Type` of the input data is correct. Do we want to raise `TypeError` or `ValueError`? I ask this because we sometimes raise `ValueError`, which I believe should be the raised error. Examples are: ; - `trace` is raising `ValueError`; - `pow` was raising `TypeError` but now raises `ValueError` after merging #1622.; - `norm.trace` raises `TypeError` (it is actually `eigen` who raises it); - `norm.l2` raises `ValueError`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1629:348,error,error,348,https://qutip.org,https://github.com/qutip/qutip/issues/1629,1,['error'],['error']
Availability,"I have some detail information for the GSoC 2020 project ""Error mitigation in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub Wiki page. I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be fo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:58,Error,Error,58,https://qutip.org,https://github.com/qutip/qutip/issues/1184,2,['Error'],['Error']
Availability,"I have such error whenever my the ratio between j or h for my hamiltonian and the total duration time(now in the following code is 0.1) is a certain number and above, mesolve produces this error. However, I need this ratio to be a certain number and above which produces the error. What do you recommend that I do? Thank you so much!. Here is the code:. j = 1000; h = 100000. \begin{equation}; H= j \sum_{\langle ij\rangle} \sigma_i^x\sigma_j^x +h \sum_i \sigma_i^z; \end{equation}. psi0=tensor(basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0)). times = np.linspace(0.0, 0.1, 100). result3 = mesolve(H, psi0, times, [], []); ; print fidelity(result3.states[99],psi0). ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-25-49de88b6cc71> in <module>(); 8 times = np.linspace(0.0, 0.1, 100); 9 ; ---> 10 result3 = mesolve(H, psi0, times, [], []); 11 ; 12 print fidelity(result3.states[99],psi0). /Users/anaconda/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 341 else:; 342 res = _sesolve_const(H, rho0, tlist,; --> 343 e_ops, args, options, progress_bar); 344 ; 345 if e_ops_dict:. /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _sesolve_const(H, psi0, tlist, e_ops, args, opt, progress_bar); 325 #; 326 return _generic_ode_solve(r, psi0, tlist, e_ops, opt,; --> 327 progress_bar, dims=psi0.dims); 328 ; 329 . /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, dims); 689 ; 690 if not r.successful():; --> 691 raise Exception(""ODE integration error: Try to increase ""; 692 ""the allowed number of substeps by increasing ""; 693 ""the nsteps parameter in the Options class.""). **Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/issues/806,5,['error'],['error']
Availability,"I installed anaconda on windows 10. ; I used then ""pip install qutip"", and I get this error : ; File ""\lib\distutils\cygwinccompiler.py"" line 129, in __init__; if self.ld_version >= ""2.10.90"" : ; TypeError: '>=' not supported between instances of 'NoneType' and 'str'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860:86,error,error,86,https://qutip.org,https://github.com/qutip/qutip/issues/860,1,['error'],['error']
Availability,"I installed qutip through Anaconda on MacBook M1. The installation was successful but when I tried to verify the installation through `from qutip import *`, I received following error:; `Traceback (most recent call last):; File ""/Users/akhil/opt/anaconda3/lib/python3.8/site-packages/qutip/__init__.py"", line 46, in <module>; __IPYTHON__; NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/akhil/opt/anaconda3/lib/python3.8/site-packages/qutip/__init__.py"", line 49, in <module>; qutip.settings.ipython = False; AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396:178,error,error,178,https://qutip.org,https://github.com/qutip/qutip/issues/1396,1,['error'],['error']
Availability,"I just built and installed Qutip on the command line using Enthought python. No errors... Then when I run I get:. Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. > > > from qutip import *; > > > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > > > Please check your Xcode installation; > > > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > > > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > > > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > > > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > > > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > > > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > > > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > > > compilation terminated.; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 213, in <module>; > > > from qutip.qobj import *; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; > > > from qutip.ptrace import _ptrace; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; > > > from qutip.sparse import sp_reshape; > > > File ""/Users/rjmag",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:80,error,errors,80,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['error'],['errors']
Availability,"I just updated to qutip 4.1.0 on archlinux and now code that ran fine before simply fails. The smallest example I managed to boil it down to is multiplying a daggered state with an operator:; ```; import qutip as qt; import numpy as np. N = 10; x = qt.Qobj(np.ones(N, complex)/(N**(1/2))); op = qt.destroy(N) + qt.create(N). for i in range(10):; print(x.dag()*op); ```; which randomly yields different results, e.g.; ```; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+241j; 5.37624943e+241 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; 0.94868330+0.j ]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; 0.94868330+0.j ]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +0.00000000e+000j 0.00000000e+000 +5.29328215e+180j; 5.29328215e+180 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+24",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:133,down,down,133,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['down'],['down']
Availability,"I need mcsolve result in row and column matrix as mentioned below. How can i got this because this code is showing error.; ```python; fieldfield_list = []; atomfield_list = []; tlist = np.linspace(0,20,2000); gM_list = np.linspace(0,3,200); for g_M in gM_list:; H = omega_M*b.dag()*b + Y*(a + a.dag())+ g*((a*sig_plus) + (a.dag()*sig_plus.dag())); + g_M*a.dag()*a*(b + b.dag()); evalues = mcsolve(H, psi0, tlist, c_ops=[], e_ops=[], ntraj=None, args={}, options=None, progress_bar=True, map_func=None, map_kwargs=None, _safe_mode=True); fieldfield_list.append(evalues[0][-1]/(evalues[2][-1]**2)); atomfield_list.append(evalues[1][-1]/(evalues[2][-1]*evalues[3][-1])); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1189:115,error,error,115,https://qutip.org,https://github.com/qutip/qutip/issues/1189,1,['error'],['error']
Availability,I noticed that stochastic._rhs_psi_platen wasn't working so I fixed it. Now ssesolve can be used with the platen solver for multiple stochastic collapse operators with both homodyne and heterodyne methods. . Basically I have written down equation 1.3 from chapter 15.1 of Numerical solution of stochastic differential equations by Kloeden and Platen.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/915:233,down,down,233,https://qutip.org,https://github.com/qutip/qutip/pull/915,1,['down'],['down']
Availability,"I see that qutip announced a new version, but after my update,It breaks down:; `from qutip import *`; the error occurs: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E; After google the error,I find a possible solution :` pip install qutip`; Then the error changes to : ; `---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-3-0a5c3f9bc976> in <module>(); 3 import matplotlib.pyplot as plt; 4 from tqdm import tnrange,tqdm_notebook; ----> 5 from qutip import *. /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------. AttributeError: module 'qutip' has no attribute 'settings'`. PS:I'm using Google Computing platform. The system is Ubuntu .However,it works fine on my mac...........",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694:72,down,down,72,https://qutip.org,https://github.com/qutip/qutip/issues/694,4,"['down', 'error']","['down', 'error']"
Availability,I try to `pip install qutip==4.0.2` (all the latest versions cannot be installed and have even more complicated error). The error seems to be easier to diagnosed. But I still cannot find out which part goes wrong and why the error happened. The error is:; ```; Collecting qutip==4.0.2; Using cached https://files.pythonhosted.org/packages/c1/de/2efee1b7f6cadd45426ef7b0759cdc3e522672a509d1c75bb317cc4be6cb/qutip-4.0.2.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ; DTYPE = np.float64; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ; DTYPE = np.float64; ctypedef np.float64_t DTYPE_t; ; ITYPE = np.int32; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t; ; ITYPE = np.int32; ctypedef np.int32_t ITYPE_t; ; CTYPE = np.complex128; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t; ; CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t; ; CTYPE = np.int64; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; ```; Thank you very much.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/911:112,error,error,112,https://qutip.org,https://github.com/qutip/qutip/issues/911,8,"['Error', 'error']","['Error', 'error']"
Availability,"I try to run the code for finding floquet energies from the qutip user guide. . ```python; import numpy as np; from qutip import *; import matplotlib.pyplot as plt. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); H1 = A/2.0 * sigmaz(); args = {'w': omega}; H = [H0, [H1, 'sin(w * t)']]; T = 2*pi / omega; f_modes_0, f_energies = floquet_modes(H, T, args); f_energies; ```. I got the following error . ```text; File ""<ipython-input-6-76f4206b44f0>"", line 1, in <module>; runfile('C:/Users/605912/OneDrive - BOOZ ALLEN HAMILTON/DARPA/John Burke/Quantum apertures/calculations/floquet.py', wdir='C:/Users/605912/OneDrive - BOOZ ALLEN HAMILTON/DARPA/John Burke/Quantum apertures/calculations'). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py"", line 827, in runfile; execfile(filename, namespace). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py"", line 110, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""C:/Users/605912/OneDrive - BOOZ ALLEN HAMILTON/DARPA/John Burke/Quantum apertures/calculations/floquet.py"", line 27, in <module>; f_modes_0, f_energies = floquet_modes(H, T, args). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\floquet.py"", line 102, in floquet_modes; U = propagator(H, T, [], args). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\propagator.py"", line 186, in propagator; _safe_mode=False). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\sesolve.py"", line 157, in sesolve; ss = _sesolve_QobjEvo(H, tlist, args, options). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\sesolve.py"", line 189, in _sesolve_QobjEvo; H_td.compile(omp=nthread). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207:483,error,error,483,https://qutip.org,https://github.com/qutip/qutip/issues/1207,1,['error'],['error']
Availability,"I want to install qutip on the linux (ubuntu 18.04 LTS), but I got the following issue. I wonder whether anyone has encountered this problem before. . ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205:245,error,error,245,https://qutip.org,https://github.com/qutip/qutip/issues/1205,1,['error'],['error']
Availability,"I was helping someone with an install on windows 7 yesterday.; We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary. @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423:152,error,error,152,https://qutip.org,https://github.com/qutip/qutip/issues/423,2,['error'],"['error', 'errors']"
Availability,"I was trying to figure out why tests on #943 and #942 were failing for MacOS and could pin-point it down to the `qutip.superop_reps.to_kraus` function. The test `tests.test_superop_reps.test_ChoiKrausChoi` leads to the same malloc error with the message,; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; Investigating more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944:100,down,down,100,https://qutip.org,https://github.com/qutip/qutip/issues/944,3,"['down', 'error']","['down', 'error']"
Availability,"I was trying to see the phase transition of magnetization of a transverse Ising model, and I have the following graph. The magnetization changes unusually rapidly under the change of magnetic field and, I don't have this problem using my own library. Since the code I wrote is extremely simple and there is no error message, I wonder do you possibly have encountered the similar issues and have some suggestions on what it happens. Here is the code, and the graph. ----------------------------------------------------------; harray = np.zeros(11); for i in range(11):; harray[i] = 0.0001 * i; ; #print harray; ; marray4 = np.zeros(11). Mx = tensor(sigmaz(),identity(2),identity(2),identity(2))\; + tensor(identity(2),sigmaz(),identity(2),identity(2))\; + tensor(identity(2),identity(2),sigmaz(),identity(2))\; + tensor(identity(2),identity(2),identity(2),sigmaz()). earray4 = np.zeros(11); ; for ii in range(0, 11):; ; H = -(tensor(sigmaz(),sigmaz(),identity(2),identity(2)) \; + tensor(identity(2),sigmaz(),sigmaz(),identity(2)) \; + tensor(identity(2),identity(2),sigmaz(),sigmaz()) \; + tensor(sigmaz(),identity(2),identity(2),sigmaz())) \; - harray[ii]*(tensor(sigmax(),identity(2),identity(2),identity(2))\; + tensor(identity(2),sigmax(),identity(2),identity(2))\; + tensor(identity(2),identity(2),sigmax(),identity(2))\; + tensor(identity(2),identity(2),identity(2),sigmax())); . marray4[ii] = expect(Mx, H.eigenstates()[1][0]); ; plt.plot(harray, marray4, 'o-'); plt.show(). ![screen shot 2018-02-05 at 11 59 45 am](https://user-images.githubusercontent.com/35711575/35817669-17d7afe2-0a6c-11e8-859f-6ae1d686a7fe.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/811:310,error,error,310,https://qutip.org,https://github.com/qutip/qutip/issues/811,1,['error'],['error']
Availability,"I'm getting the following error when the first three arguments for the clebsch function aren't all ints: ; ```; c_factor = np.zeros((j1 + j2 + j3 + 1), np.int32); TypeError: 'float' object cannot be interpreted as an integer; ```; Fixed by changing ; `c_factor = np.zeros((j1 + j2 + j3 + 1), np.int32) `; to ; `c_factor = np.zeros((int(j1 + j2 + j3 + 1)), np.int32)`; and same for _factorial_prod() etc. It's now giving expected results. This shouldn't break anything as j1 +/- j2 +/- j3 should always give an integer. Seems to have been caused by #1142 in response to #1141.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1176:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/1176,1,['error'],['error']
Availability,"I'm still fairly new to QuTiP but I've found that `mesolve` allows `H` and `rho0` to have different dimensions. Of course getting it right is the users responsibility, an informative warning may be useful. A minimal example is as follows:. ```; from qutip import *; import numpy as np. N = 3; a = tensor(destroy(N),identity(2)); sz = tensor(identity(N),sigmaz()). H = sz*a.dag() + sz.dag()*a; collapse = [a]; tlist = np.linspace(0,1,100); solution = mesolve(H, basis(2,0), tlist, collapse, [a.dag()*a]); ```. which gives a numerical integration error:; `UserWarning: zvode: Repeated convergence failures. (Perhaps bad Jacobian supplied or wrong choice of MF or tolerances.)`; Rather than a more direct warning about the (more likely) problem of mis-matched Hilbert spaces. I'm happy to add a check to the `mesolve` function and submit a PR, but I wanted to be sure that I'm not missing some use case where `H` and `rho0` should be allowed to differ.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479:545,error,error,545,https://qutip.org,https://github.com/qutip/qutip/issues/479,3,"['error', 'failure', 'toler']","['error', 'failures', 'tolerances']"
Availability,"I'm teaching a course where we use QuTiP, but recently we cannot import QuTiP anymore : /. The procedure to reproduce the error is to open a new notebook in [colab](http://colab.research.google.com/), install QuTiP with . !pip install qutip. and then just. import qutip. The error in this case is . AttributeError Traceback (most recent call last); /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-6-e01d5608f34f> in <module>(); ----> 1 import qutip. /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------. AttributeError: module 'qutip' has no attribute 'settings'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/issues/1008,2,['error'],['error']
Availability,"I'm trying to use the eigenstates function to find the eigenstates for a given Hamiltonian, the code for which is below:. from qutip import *; import numpy as np; import matplotlib.pyplot as plt. # Define the spin operators for the two particles. smu_x = tensor(sigmax(),qeye(2)); smu_y = tensor(sigmay(),qeye(2)); smu_z = tensor(sigmaz(),qeye(2)). se_x = tensor(qeye(2),sigmax()); se_y = tensor(qeye(2),sigmay()); se_z = tensor(qeye(2),sigmaz()). omega_mu = 0.1 * np.pi; omega_e = 0.1 * np.pi *200; omega_0 = 5.0 * np.pi. H = 0. # Add interactions with external field. H += -(omega_mu/2)*smu_z + (omega_e/2)*se_z. # Add interaction between the spins. H += (omega_0/4)*(tensor(sigmax(),sigmax())+tensor(sigmay(),sigmay())+tensor(sigmaz(),sigmaz())). H.eigenstates(). However, when I try to run this code it gives me the following error:. Traceback (most recent call last):. File ""/Users/Nathan/Documents/internship2021/week2/qutip/Muonium/muonium_interaction.py"", line 39, in <module>; H.eigenstates(). File ""/Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py"", line 1699, in eigenstates; norms = np.array([ket.norm() for ket in ekets]). File ""/Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py"", line 1699, in <listcomp>; norms = np.array([ket.norm() for ket in ekets]). AttributeError: 'numpy.ndarray' object has no attribute 'norm'. I'm unsure of whether this is due to me not using the function correctly or is a genuine issue that may need addressing. . Kind regards,. Nathan",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634:830,error,error,830,https://qutip.org,https://github.com/qutip/qutip/issues/1634,1,['error'],['error']
Availability,"I'm using [solus](https://solus-project.com) 64-bit, and anaconda for my python. anaconda cannot find any qutip package, so I tried to install with pip. It gives the following error:. `Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-lnsaamvm-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /tmp/pip-build-n7ekqm4y/qutip/; `. Then I tried easy_install, which gave me:. `Processing qutip; Writing /home/jakeargent/qutip/setup.cfg; Running setup.py -q bdist_egg --dist-dir /home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:176,error,error,176,https://qutip.org,https://github.com/qutip/qutip/issues/639,2,['error'],['error']
Availability,"I'm woundering what is the reason for doing this partial trace; https://github.com/qutip/qutip/blob/0b068fc4876727303644c42c181af82e1f089700/qutip/qobj.py#L490; becauseit leads to errors doing:; ```; O=tensor(sigmax(), qeye(1)); Psi = tensor(basis(2,0),basis(1,0)); O*O*Psi; ```. would it be possible to implement an Option in settings to dissable this behavior? I would be willing to provide a PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823:180,error,errors,180,https://qutip.org,https://github.com/qutip/qutip/issues/823,1,['error'],['errors']
Availability,"If I have a superoperator already in the Kraus form (that is, as a list of operators), I cannot directly compute its average gate fidelity: `average_gate_fidelity` will try to convert it to Kraus anyway:; https://github.com/qutip/qutip/blob/2aa51b92df57f995778940815d20d293f00f8a9d/qutip/metrics.py#L144; and `to_kraus` will raise an error because the input does not have a `type`:; https://github.com/qutip/qutip/blob/b0c6e59a4914816ff68163b03a37ab40ecf0d809/qutip/superop_reps.py#L543-L555. As a minimal example, shouldn't something like; ```; kraus_ops = [qutip.sigmax(), qutip.sigmay()]; qutip.average_gate_fidelity(kraus_ops); ```; be made to work?. What about adding a check in `average_gate_fidelity` so that if the input is already a list then don't do anything (although it seems more robust to have some kind of wrapper to flag an object as list of operators of a Kraus decomposition)?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/869:334,error,error,334,https://qutip.org,https://github.com/qutip/qutip/issues/869,2,"['error', 'robust']","['error', 'robust']"
Availability,"If I try to calculate the time evolution of a mixed state by `mcsolve`, `mcsolve` will raise an error: `initial state must be a state vector`. It seems that we cannot define a single quantum trajectory for a mixed state from a physics perspective. But it is still possible that we can replace H|psi> and c|psi> with -i* [H,rho] and c * rho * c^\dagger respectively to simulate. I am not sure it is a faster way compared to `mesolve`. Can I do a Monte Carlo evolution for a mixed state in QuTip? Thanks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1375:96,error,error,96,https://qutip.org,https://github.com/qutip/qutip/issues/1375,1,['error'],['error']
Availability,"If I use a time-dependent collapse operator in `mcsolve`:. ``` python; import numpy as np; from qutip import destroy, basis, mcsolve. b = destroy(5); H = b.dag() * b; collapse = [[b, '9 * exp(-(t / 5.) ** 2)']]; psi0 = basis(5, 1). times = np.linspace(0, 100, 100); data = mcsolve(H, psi0, times, collapse, [b.dag() * b]) ; ```. I get the following error:. ``` python; Error compiling Cython file:; ------------------------------------------------------------; ...; @cython.boundscheck(False); @cython.wraparound(False); def col_expect(int which, double t, complex[::1] data, int[::1] idx, int[::1] ptr, complex[::1] vec):. if which == 0:; out *= conj(9 * exp(-(t / 5.) ** 2)); ^; ------------------------------------------------------------; ```. I looked into `cy/codegen.py` and found, that the line. ``` python; out_string.append("" out *= conj("" + self.c_tdterms[ind] + "")""); ```. of the function `func_which_expect(self)` (currently line 355) should be replaced with. ``` python; out_string.append("" out = conj("" + self.c_tdterms[ind] + "")""); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/844:349,error,error,349,https://qutip.org,https://github.com/qutip/qutip/issues/844,2,"['Error', 'error']","['Error', 'error']"
Availability,"If the initial state was found to be of type 'oper', no further testing was done in initialisation of mesolve on the dimensions. For example, if a user incorrectly created a density matrix, such as by doing; ```python; tensor(basis(20, 0), qeye(20)/20); ```; (presumably intending `basis(20, 0).proj()` or similar), it would have a type of 'oper' inside Qobj, and mesolve would recognise it as a ""proper"" density matrix, even though the shape was actually incorrect. Such an object would get passed down into the C layer, which does no shape checking, without having its shape explicitly tested, and eventually could cause a segfault in the matrix multiplication routine. The correct check in this setup is to test the shapes when passed into `mesolve`, if this is possible. If the Hamiltonian/Liouvillian is generated by a Python callable, we have to test every time the time-dependence function is called. A user could make a pathalogical function that changes its dimensions on different times, and we cannot allow a segfault. Fix qutip/qutip#1456",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1459:499,down,down,499,https://qutip.org,https://github.com/qutip/qutip/pull/1459,1,['down'],['down']
Availability,"Implements the changes mentioned in #1203. The `qutip.graph` functions are pure mathematical functions which are beyond the purview of the package. Most of them have already been merged into `scipy.sparse.csgraph`, so we now move to using those and mark the functions as deprecated. Only two functions are actually used, and they're not even currently tested. `weighted_bipartite_matching` is not present in `scipy`, but is still marked as deprecated because we can move it into being an internal-only function, or simply remove the code that depends on it since those paths are not tested. This will allow the removal of a good amount of Cython code, and simplify maintenance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1206:665,mainten,maintenance,665,https://qutip.org,https://github.com/qutip/qutip/pull/1206,1,['mainten'],['maintenance']
Availability,Import error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/637,1,['error'],['error']
Availability,Import error: pyximport,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2206:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/2206,1,['error'],['error']
Availability,"Importing after conda install with lastest:. /Users/paul/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:626:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['error'],['error']
Availability,Improve mcsolve's `test_super_H` test tolerance.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2344:38,toler,tolerance,38,https://qutip.org,https://github.com/qutip/qutip/pull/2344,1,['toler'],['tolerance']
Availability,Improve me se zvode failure handling,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/243:20,failure,failure,20,https://qutip.org,https://github.com/qutip/qutip/pull/243,1,['failure'],['failure']
Availability,Improve the error message of circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/pull/1427,1,['error'],['error']
Availability,Improved error handling in stats and optimconfig and changes to test out files:,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/301:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/301,1,['error'],['error']
Availability,"In QuTiP 4.5.0 conda release on Mac, I get an error if I call a quantum circuit to print in jupyter notebook. However, the circuit is printed after the message. . This did not happen with QuTiP 4.4.1. Imagemagick is installed. This issue may be related to the closed issues #1179 and #702. ```; ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit.py in _repr_svg_(self); 1117 ; 1118 def _repr_svg_(self):; -> 1119 return _latex_compile(self.latex_code(), format=""svg""); 1120 ; 1121 @property. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 64 else:; 65 os.system(""pdf2svg %s.pdf %s.svg"" % (filename, filename)); ---> 66 with open(""%s.svg"" % filename) as f:; 67 result = f.read(); 68 . FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.svg'; ```; <img width=""1137"" alt=""Screenshot 2020-02-26 17 44 05"" src=""https://user-images.githubusercontent.com/14573436/75327357-9af58180-58bf-11ea-9989-6892f5b7af41.png"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185:46,error,error,46,https://qutip.org,https://github.com/qutip/qutip/issues/1185,1,['error'],['error']
Availability,"In `test_interpolate`, `qzero` was used as `mcsolve`'s collapse operator. Due to numerical error in the interpolation method, `mcsolve` can detect a collapse, but a collapse for a null operator cause a a division by zero. This sometime made our tests fails. By changing the collapse operator to `qeye`, the evolution, thus the test is unaffected, but it no longer randomly fail.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1645:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1645,1,['error'],['error']
Availability,"In certain cases in matrices containing values smaller than the tolerance for Hermicity, a matrix can be considered Hermitian even if its transpose does not have the same sparsity pattern as itself. The previous version of this function would give false negatives in these circumstances, whereas now we fall back on the more computationally and memory intensive version of constructing the transpose completely, and comparing element-wise. We offset some of this slowdown by optimising the floating-point comparisons to avoid calls to `sqrt` (via `abs`), and by removing a redundant test of the sparsity pattern in the inner loop. Fixes #1350 for the `master` branch, but still to do for `dev.major`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1352:64,toler,tolerance,64,https://qutip.org,https://github.com/qutip/qutip/pull/1352,2,"['redundant', 'toler']","['redundant', 'tolerance']"
Availability,"In certain circumstances, `zcsr_isherm` can give a `False` negative. This is usually masked by the `auto_tidyup` option being turned on. Reproduce:; ```python; >>> import numpy as np; >>> import scipy.sparse; >>> import qutip; >>> x = scipy.sparse.csr_matrix(np.array([[1, 1e-15j], [0, 1]])); >>> bool(qutip.cy.spmath.zcsr_isherm(x, 1e-12)); False; ```; Up to the tolerance specified (`1e-12`), the given matrix _is_ Hermitian, so it should return `True`. This happens when a small non-zero value (lower than the tolerance) is compared to a zero. This is because the structure test in `zcsr_isherm` assumes that for Hermicity to hold, there _must_ always be an explicitly stored corresponding element for each entry, however clearly this isn't always the case. It hasn't appeared before because we always have `auto_tidyup` turned on with a sufficiently large tolerance that these values would be removed by almost all operations which could have introduced this disparity (mostly matrix multiplication). (I'll fix this on both the `master` branch and on `dev.major`, this is just for posterity)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1350:85,mask,masked,85,https://qutip.org,https://github.com/qutip/qutip/issues/1350,4,"['mask', 'toler']","['masked', 'tolerance']"
Availability,"In file included from qutip/cy/spmatfuncs.cpp:639:; qutip/cy/src/zspmv.hpp:33:10: fatal error: 'complex' file not found; #include <complex>; ^~~~~~~~~; 1 error generated.; error: command 'gcc' failed with exit status 1. MAC os Mojave, python 3.6.4. How to fix this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965:88,error,error,88,https://qutip.org,https://github.com/qutip/qutip/issues/965,3,['error'],['error']
Availability,"In gates.py there are a few examples in the docstrings. The output is sometimes longer then 79 chars, which yields a pep8 error. Are these examples somehow doctests? And if so, do I trip the doctest mechanism if I format the output of the examples?. If they are either not doctests, or the doctest mechanism is fine with linebreaks in the output, the examples should be pep8-ified",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/9:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/issues/9,1,['error'],['error']
Availability,"In qutip-tensoflow, we aim to include TensorFlow's autodifferentiation with Qobj. However, this will require the following code to work:; ```python; import numpy as np; import qutip. random_matrix = np.random.random((2, 2)) + 1j * np.random.random((2, 2)); complex_number = np.random.random((1, 1)) + 1j * np.random.random((1, 1)). qobj = qutip.Qobj(random_matrix); qobj*complex_number; ``` ; I used numpy `ndarray` instead of a `tf.Tensor` or `tf.Variable` for simplicity and so that the example is reproducible. . Currently this example raises: ; ""TypeError: incompatible dimensions [[2], [2]] and [[1], [1]]""; as `__mul__(self, other)` defaults to `__matmul__(self, other)` when `other` is not an instance of `numbers.Number`. . If instead we do:; ```python; complex_number*qobj; ```; The error raised is:; ""TypeError: unsupported operand type(s) for *: 'numpy.ndarray' and 'Qobj'""; This error is different because `__rmul__` checks first for `other` being an instance of `numbers.Number` and if not, it raises `NotImplementedError`. It does not check whether `Qobj(other)` works. I would say this is undesired and that `__rmul__` should try first converting `other` into `Qobj` and not assume that other is already `Qobj`. . **Describe the solution you'd like**; I would like to suggest either:; 1) changing the behaviour of `matmul` dispatcher so that (1,1) shaped data is multiplied element wise by default. However this, although not terrible, it breaks conceptually what matmul is, as a (1,1) x (2,2) matrix multiplication can not happen. 2) Allow `mul` dispatcher to have as input a `Data` object. In this way we would raise an error when the `Data` for `mul` dispatcher is not of shape (1,1) and perform an elementwise multiplication when it is. I am not sure how difficult it is to code this. 3) Create `mul_elementwise` dispatcher to have as input two `Data` objects and perform elementwise multiplication. Another change that I would like to suggest is to add a check in `__rmul__` to see",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607:792,error,error,792,https://qutip.org,https://github.com/qutip/qutip/issues/1607,2,['error'],['error']
Availability,"In the latest documentation build, 4.4, the links to source code in the [API documentation](http://qutip.org/docs/latest/apidoc/apidoc.html) do not work. ; An example is the `Qobj` [source] link [in this page](http://qutip.org/docs/latest/apidoc/classes.html#qobj) that takes to this broken link, http://qutip.org/docs/latest/_modules/qutip/qobj.html#Qobj. ; The link is broken because it takes to `latest/_modules` instead of `latest/modules`, see for example the working link in 4.3, http://qutip.org/docs/4.3/modules/qutip/qobj.html#Qobj, or even the correct http://qutip.org/docs/latest/modules/qutip/qobj.html#Qobj. . Any help appreciated in fixing this in Sphinx, I think in `sphinx-apidoc`, cc @Ericgig @quantshah @ajgpitch @tehruhn @BoxiLi (pinging you as only Alex watches this repo and you all played with Sphinx recently).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1531:749,ping,pinging,749,https://qutip.org,https://github.com/qutip/qutip/issues/1531,1,['ping'],['pinging']
Availability,Increase `iscptp` tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2147:18,toler,tolerance,18,https://qutip.org,https://github.com/qutip/qutip/pull/2147,1,['toler'],['tolerance']
Availability,Increase `test_nm_mcsolve.test_super_H` tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2407:40,toler,tolerance,40,https://qutip.org,https://github.com/qutip/qutip/pull/2407,1,['toler'],['tolerance']
Availability,Increase subsys test tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435:21,toler,tolerance,21,https://qutip.org,https://github.com/qutip/qutip/pull/435,1,['toler'],['tolerance']
Availability,Increase test reliability,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2337:14,reliab,reliability,14,https://qutip.org,https://github.com/qutip/qutip/pull/2337,1,['reliab'],['reliability']
Availability,"Installation error: ""ambiguous overloaded method""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:13,error,error,13,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['error'],['error']
Availability,Installation failure on linux (solus 64 bit),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:13,failure,failure,13,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['failure'],['failure']
Availability,Installation on OS X with Homebrew script error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:42,error,error,42,https://qutip.org,https://github.com/qutip/qutip/issues/348,1,['error'],['error']
Availability,Installing from conda gives fatal error for missing spmv_openmp.hpp,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['error'],['error']
Availability,Intel MKL error breaks wigner.qfunc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/937:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/937,1,['error'],['error']
Availability,Issues about errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1199:13,error,errors,13,https://qutip.org,https://github.com/qutip/qutip/pull/1199,1,['error'],['errors']
Availability,"It adds support for importing qasm v1 files. The support for quantum gates and loops are added. Support for classical control, measurement, and qbit preparation is not available and syntax is ignored.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1138:168,avail,available,168,https://qutip.org,https://github.com/qutip/qutip/pull/1138,1,['avail'],['available']
Availability,"It has been pointed out by collaborators that it may be nice to add the following in the Readme, ; “If you use QuTiP in your research, please cite the original QuTiP papers, available here: https://dml.riken.jp/?s=QuTiP .” for a more direct link to the QuTiP papers.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1552:174,avail,available,174,https://qutip.org,https://github.com/qutip/qutip/issues/1552,1,['avail'],['available']
Availability,It looks like my original tolerance was stricter than the default tolerance on the ODE solver. Oops.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/722:26,toler,tolerance,26,https://qutip.org,https://github.com/qutip/qutip/pull/722,2,['toler'],['tolerance']
Availability,Kraus operator function leads to segmentation fault on MacOS,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944:46,fault,fault,46,https://qutip.org,https://github.com/qutip/qutip/issues/944,1,['fault'],['fault']
Availability,"L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:169: in lindblad_dissipator; ad_b = a.dag() * b; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; __________________________________________ ERROR collecting qutip/tests/solver/test_mesolve.py ___________________________________________; qutip/tests/solver/test_mesolve.py:28: in <module>; class TestMESolveDecay:; qutip/tests/solver/test_mesolve.py:33: in TestMESolveDecay; ada = a.dag() * a; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:4064,ERROR,ERROR,4064,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,"Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ___________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:18331,ERROR,ERROR,18331,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"Looking into the function `_mc_alg_evolve` in the source code of mcsolve, I have two questions in mind:; 1. Why do you divide the interval into each `tlist[k]` (`while ODE.t < tlist[k]:`) and run the ode internal step `ODE.integrate(tlist[k], step=1)` one at a time and evaluate `if norm2_psi <= rand_vals[0]:`?; Alternatively, can I run the ode `ODE.integrate(tlist, step=n)` without collapse until `norm2_psi <= rand_vals[0]`? It seems to be faster if `ODE.integrate(tlist, step=n)` can store the state. In this way I ignore `tlist[k]` totally.; 2. After `if norm2_psi <= rand_vals[0]:`, you find the collapse time to within specified tolerance. Can I just take the collapse time as the time immediately after `ODE.integrate(tlist[k], step=1)`? Since the step in the `ODE` should be small enough, would it make a lot difference by ignoring the steps of finding the collapse time to within specified tolerance?. Thank you very much.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503:637,toler,tolerance,637,https://qutip.org,https://github.com/qutip/qutip/issues/503,2,['toler'],['tolerance']
Availability,Mac os Compilation error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/965,1,['error'],['error']
Availability,"MacOS Mojave deliberately deleted the `user/include` folder so when compiling cython code, gcc cannot find the headers. I struggled a bit after suddenly updating to the latest MacOS and could find the solution here:. https://programmer.help/blogs/how-to-resolve-pip-install-twisted-error-limits.h-no-such-file-or-directory.html. Just do . ```; open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg; ```. In case others also update and end up with this error. @nathanshammah",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030:282,error,error-limits,282,https://qutip.org,https://github.com/qutip/qutip/issues/1030,2,['error'],"['error', 'error-limits']"
Availability,MacOS header error: fatal error: limits.h: No such file or directory,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030:13,error,error,13,https://qutip.org,https://github.com/qutip/qutip/issues/1030,2,['error'],['error']
Availability,Make LaTeX image conversion more resilient,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194:33,resilien,resilient,33,https://qutip.org,https://github.com/qutip/qutip/pull/1194,1,['resilien'],['resilient']
Availability,Make `data.solve` more robust to singular matrices for `countstat`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2144:23,robust,robust,23,https://qutip.org,https://github.com/qutip/qutip/pull/2144,1,['robust'],['robust']
Availability,Make testing more robust especially for random objects,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268:18,robust,robust,18,https://qutip.org,https://github.com/qutip/qutip/issues/1268,1,['robust'],['robust']
Availability,Many of the demo examples doesn't work with current master. The error messages are for example. ```; NameError: global name 'mcsolve' is not defined; ```. or. ```; NameError: global name 'mesolve' is not defined; ```. Seen on Linux and OS X.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/19,1,['error'],['error']
Availability,New methods for single stochastic jump operator are implemented:; - 1/2 order predictor-corrector euler-maruyama; - 1 order semi-implicit Milstein; - 3/2 order explicit and semi-implicit Taylor 1.5. Tests for all the new (and old) methods are added. There is a corresponding notebook which shows that the solvers achieve (or exceed) their order of convergence.; https://github.com/qutip/qutip-notebooks/pull/37; Here is the scaling of solver error as a function of stepsize:; ![error_scaling_y_an](https://cloud.githubusercontent.com/assets/4971779/18120795/128dcbe6-6f6a-11e6-8b36-8b16fb73f35a.png). Bug: fast-milstein modifies input noise - fixed. The explicit Taylor 1.5 method and most of the coding is done by **Manuel Grimm** under supervision of **Niels Lörch** at University of Basel.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529:442,error,error,442,https://qutip.org,https://github.com/qutip/qutip/pull/529,1,['error'],['error']
Availability,"New schemes for the options. All options's default value can be set and seen in qutip.settings:; ```; >>> from qutip import settings; >>> settings.solver[""atol""] = 1e-10; >>> settings.core[""auto_tidyup""] = False; >>> settings.solver.mcsolve[""norm_tol""] = 1e-4; >>> settings.save(); >>> print(qutip.settings); qutip.settings.install:; debug : False; log_handler : 'default'; colorblind_safe : False; tmproot : '/home/eric/.qutip/coeffs'; mkl_lib : None; has_mkl : False; ipython : True; _logger : <Logger qutip.installsettings (WARNING)>; eigh_unsafe : False. qutip.settings.core:; auto_tidyup : False; auto_tidyup_dims : True; auto_herm : True; atol : 1e-12; auto_tidyup_atol : 1e-12; ...; ```. The main changes are; - `settings` is an object in `qutip/settings.py`.; - Actual options are accessed as dictionary values instead of attributes.; - `settings`'s values are read from qutiprc at import.; - Easy saving of settings; - `reset` function as described in documentation but not available yet.; - solver `Options` renamed and split, some options removed (`rhs_with_state`, ...). @jakelishman, I commented out most of the openmp stuff, I expect you to pass behind me and clean when you re-implement it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1337:983,avail,available,983,https://qutip.org,https://github.com/qutip/qutip/pull/1337,1,['avail'],['available']
Availability,"Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1328:214,down,down,214,https://qutip.org,https://github.com/qutip/qutip/pull/1328,1,['down'],['down']
Availability,"Not sure what is causing conda-forge/qutip-feedstock#18, but switching to a vector in sort may help as there was no issues with the previous 4.0.2 build that has a similar routine in the COO -> CSR inplace conversion function. Note also that building with VS 2015, mingpy, clang-3.9 from homebrew, and clang from Apple itself does not raise the error mentioned in conda-forge/qutip-feedstock#18.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/660:345,error,error,345,https://qutip.org,https://github.com/qutip/qutip/pull/660,1,['error'],['error']
Availability,"Notionally fixes #1179, #1185. Converts the `os.system` calls to `subprocess.run` because they're now the recommended way of doing things. I check for existence of the dependencies at import time, and emit a warning (`ImportWarning`) if they don't exist. This is ignored by the typical warning filters, so it won't actually show up for most users. If a dependency doesn't exist, then we don't define the relevant methods on the `QubitCircuit` class to avoid IPython introspecting the class object and thinking that it can make a PNG/SVG. This may not be the best way of doing things, but in this delocalised setting I think it's easier to talk/discuss around a problem with an example in front of us. In particular, I think raising `NotImplementedError` on failing to find `pdflatex` might not be the right call: if it doesn't exist, then the PNG and SVG methods of `QubitCircuit` are currently still created, and then IPython would try to call them and produce an error that isn't the fault of the user. Also, maybe there's a nicer way to make sure that the user sees the ""not found"" warnings the first time that they do something which involves a conversion? At the moment, the class just doesn't get the methods defined.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194:965,error,error,965,https://qutip.org,https://github.com/qutip/qutip/pull/1194,2,"['error', 'fault']","['error', 'fault']"
Availability,Numeric Error Encountered Using mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:8,Error,Error,8,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['Error'],['Error']
Availability,ODE Integration Error in Tutorial Code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:16,Error,Error,16,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['Error'],['Error']
Availability,"On my Mac (Mojave 10.14.5) the latest development version of qutip tests can fail at different points. . First, I run into an abort trap at ptrace. . Then, upon another run, I bumped into this other abort trap error ; ```; tests/test_superop_reps.py::TestSuperopReps::test_ChoiKrausChoi Fatal Python error: Aborted. Current thread 0x000000010b9155c0 (most recent call first):; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/superop_reps.py"", line 547 in to_kraus; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_superop_reps.py"", line 106 in test_ChoiKrausChoi; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/python.py"", line 166 in pytest_pyfunc_call; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/python.py"", line 1435 in runtest; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/runner.py"", line 131 in pytest_runtest_call; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/runner.py"", line 207 in <lambda>; File ""/min",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160:210,error,error,210,https://qutip.org,https://github.com/qutip/qutip/issues/1160,2,['error'],['error']
Availability,"On my system the following tests fails:. Sparse: Symmetric Reverse Permute ... ERROR; Sparse: Nonsymmetric Reverse Permute ... ERROR; Sparse: Bandwidth ... ERROR. More detailed info:; # ; ## ERROR: Sparse: Symmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 73, in test_sparse_symmetric_reverse_permute; B=sparse_reverse_permute(x,perm,perm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Nonsymmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 89, in test_sparse_nonsymmetric_reverse_permute; B=sparse_reverse_permute(x,rperm,cperm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Bandwidth. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73:79,ERROR,ERROR,79,https://qutip.org,https://github.com/qutip/qutip/issues/73,5,['ERROR'],['ERROR']
Availability,"OpenMP handling is broken in the current `master`. It is likely caused by changes made in #1289. Trying to `import qutip` with OpenMP built produces errors; ```python; In [1]: import qutip; Calibrating OPENMP threshold...; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e01d5608f34f> in <module>; ----> 1 import qutip. ~/code/qutip/qutip/qutip/__init__.py in <module>; 277 print('Calibrating OPENMP threshold...'); 278 thrsh = calculate_openmp_thresh(); --> 279 qutip.configrc.write_rc_key(rc_file, 'openmp_thresh', thrsh); 280; 281 # Load the config file. ~/code/qutip/qutip/qutip/configrc.py in write_rc_key(key, value, section, rc_file); 169 config.read(rc_file); 170 if not config.has_section(section):; --> 171 config.add_section(section); 172 config.set(section, key, str(value)); 173. ~/.anaconda3/envs/qutip-dev/lib/python3.8/configparser.py in add_section(self, section); 1205 RawConfigParser.add_section by validating if the section name is; 1206 a string.""""""; -> 1207 self._validate_value_types(section=section); 1208 super().add_section(section); 1209. ~/.anaconda3/envs/qutip-dev/lib/python3.8/configparser.py in _validate_value_types(self, section, option, value); 1178 """"""; 1179 if not isinstance(section, str):; -> 1180 raise TypeError(""section names must be strings""); 1181 if not isinstance(option, str):; 1182 raise TypeError(""option keys must be strings""). TypeError: section names must be strings; ```. The issue is probably due to `__init__.py` being out-of-date with regards to the change to how the `qutiprc` file is written. The immediate fix should be very simple, however it highlights a larger problem with our testing - this should have been caught by the OpenMP tests. In this case, I believe that the tests don't see the issue because there is a test in `__init__.py` that doesn't trigger the OpenMP calibration if only there is only 1 CPU. Presumably, we only ever get allocate",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1470:149,error,errors,149,https://qutip.org,https://github.com/qutip/qutip/issues/1470,1,['error'],['errors']
Availability,"Originally reported in #944. Tests seem to be failing for MacOS. We get errors like; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; The build is pretty much always failing, but sometimes passes. I think we only get the errors when tests are run, the functions work fine otherwise. I think someone tried pytest and still got same errors. So kind of a nasty one to investigate, but there might be an easy fix if we can work out what to do. I believe @nathanshammah has done some quite thorough investigation and could probably add to this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963:72,error,errors,72,https://qutip.org,https://github.com/qutip/qutip/issues/963,4,['error'],"['error', 'errors']"
Availability,"Passing incompatible dimensions for `rho0`, `H` and `c_ops` to `mesolve` leads to a segfault when the dimensions are large enough and when passing `c_ops`. . **To Reproduce**. Pass something for the initial state that is neither a state vector nor square density matrix. ```python; from qutip import *. D = 13; psi0 = tensor(coherent(D, 100e-9), qeye(D)); result = mesolve(qeye(D**2), psi0,[0, 100e-9], [destroy(D**2)])```; ```; ```; (qutip) ➜ ~ python mwe.py ; [1] 83143 segmentation fault python mwe.py; ```. Changing `D = 13` to `D = 12` correctly raises a `ValueError`:; ```; (qutip) ➜ ~ python mwe.py; Traceback (most recent call last):; File ""mwe.py"", line 5, in <module>; result = mesolve(qeye(D**2), psi0,[0, 100e-9], [destroy(D**2)]); File ""/Users/colmrya/miniconda3/envs/qutip/lib/python3.8/site-packages/qutip/mesolve.py"", line 266, in mesolve; func(0., v, *ode_args) + v; ValueError: operands could not be broadcast together with shapes (20736,) (1728,) ; ```. Trying to get a little more info on the segfault:. ```; (qutip) ➜ ~ lldb --file python mwe.py; (lldb) target create ""/Users/colmrya/miniconda3/envs/qutip/bin/python""; Current executable set to '/Users/colmrya/miniconda3/envs/qutip/bin/python' (x86_64).; (lldb) settings set -- target.run-args ""mwe.py""; (lldb) r; Process 83317 launched: '/Users/colmrya/miniconda3/envs/qutip/bin/python' (x86_64); Process 83317 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x1168d1000); frame #0: 0x0000000113018acd spmatfuncs.cpython-38-darwin.so`__pyx_f_5qutip_2cy_10spmatfuncs_spmvpy(std::__1::complex<double>*, int*, int*, std::__1::complex<double>*, std::__1::complex<double>, std::__1::complex<double>*, unsigned int) + 157; spmatfuncs.cpython-38-darwin.so`__pyx_f_5qutip_2cy_10spmatfuncs_spmvpy:; -> 0x113018acd <+157>: movupd (%rcx,%rax), %xmm4; 0x113018ad2 <+162>: mulpd %xmm4, %xmm3; 0x113018ad6 <+166>: movddup (%rbx), %xmm5 ; xmm5 = mem[0,0] ; 0x113018ada <+170>: shufpd $0x1, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456:485,fault,fault,485,https://qutip.org,https://github.com/qutip/qutip/issues/1456,1,['fault'],['fault']
Availability,"Photocurrent did not handle having 2 or more collapses in the same time step properly and the state became unnormalized in those case. This PR limit the number of collapse to 1 per time step.; It does it in a rough way and still have an avoidable `O(dt**2)` error, but it does not force to throw away the trajectory.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1010:258,error,error,258,https://qutip.org,https://github.com/qutip/qutip/pull/1010,1,['error'],['error']
Availability,Possible fix for cython codegen errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/322:32,error,errors,32,https://qutip.org,https://github.com/qutip/qutip/pull/322,1,['error'],['errors']
Availability,"Previously, passing a Hamiltonian to `mesolve` which used ""array"" time dependence with a tlist not equal to `mesolve`'s would fail if any constant collapse operators were present. This was because `mesolve` was a little over-zealous in promoting `c_ops` to time-dependent `QobjEvo` using the `mesolve` time list. This would cause an unnecessary failure if the Hamiltonian was a `QobjEvo` specified previously with a different tlist. Fix #1560. #### Changelog; - Specialise exception types in ``QobjEvo`` failure paths; - Fix ``tlist`` ``QobjEvo`` with constant collapse operators in ``mesolve``; - 2-element list elements in ``QobjEvo`` specifiers can now be any iterable type, not just ``list``",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1561:345,failure,failure,345,https://qutip.org,https://github.com/qutip/qutip/pull/1561,2,['failure'],['failure']
Availability,"Pursuant to discussions over the build failures observed in #359, this PR migrates Travis CI support to their new container-based configuration. I've observed that the builds with this configuration are more reliable, but they are slower for some reason. In the [instructions](http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade#Faster-builds) they provide, Travis say that this configuration should be faster, and to let them know if our build is slower; that might be worth doing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360:39,failure,failures,39,https://qutip.org,https://github.com/qutip/qutip/pull/360,2,"['failure', 'reliab']","['failures', 'reliable']"
Availability,Qobj trunc_neg causing Travis errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425:30,error,errors,30,https://qutip.org,https://github.com/qutip/qutip/issues/425,1,['error'],['errors']
Availability,Qtrl fix error when fid_err nan,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/294,1,['error'],['error']
Availability,"QuTiP 4.5.3 fails to build from source distribution on PyPI, e.g. on Windows:; ```; c1xx: fatal error C1083: Cannot open source file: 'qutip/cy/openmp/src/zspmv_openmp.cpp': No such file or directory; ```; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449:96,error,error,96,https://qutip.org,https://github.com/qutip/qutip/pull/1449,2,['error'],['error']
Availability,QuTiP community and list of available projects,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:28,avail,available,28,https://qutip.org,https://github.com/qutip/qutip/issues/1132,1,['avail'],['available']
Availability,"QuTiP currently uses QCircuit 2 (version of 2011) to generate LaTeX circuits that are printed to screen or saved to file. A newer version of QCircuit is available, 2.6.0 (2018) https://www.ctan.org/pkg/qcircuit. * `qcircuit` could be updated to the latest version . * Also, the use of this open source package could be highlighted more evidently in the documentation. * Another package has been recently released, https://arxiv.org/abs/1809.03842, Quantikz, which has some features related to noise that could be useful especially with regard to PR #1065, Google Summer of Code project by @BoxiLi on noise modeling in QIP. As this other package is very young, maybe an option to draw the circuit with this package, instead of qcircuit, could be given, also to avoid issues.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096:153,avail,available,153,https://qutip.org,https://github.com/qutip/qutip/issues/1096,1,['avail'],['available']
Availability,"QuTiP eagerly imports scipy.fft, causing failures on SciPy 1.8.1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1915:41,failure,failures,41,https://qutip.org,https://github.com/qutip/qutip/issues/1915,1,['failure'],['failures']
Availability,QuTiP executive error due to update of scipy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/1019,1,['error'],['error']
Availability,QuTiP fails to change cut-off tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1829:30,toler,tolerance,30,https://qutip.org,https://github.com/qutip/qutip/issues/1829,1,['toler'],['tolerance']
Availability,"QuTiP is currently incompatible with numpy 1.20. Tests will fail to even collect with an error such as; ```; AttributeError: 'numpy.ndarray' object has no attribute 'dag'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:89,error,error,89,https://qutip.org,https://github.com/qutip/qutip/issues/1433,1,['error'],['error']
Availability,"QuTiP is hosted on Anaconda's conda-forge channel and on PyPI. I would like to showcase downloads on the [website](https://github.com/qutip/qutip.github.io) and possibly have a development notebook (or in a personal repository) showing them updated, for QuTiP presentations. . * **conda install qutip**: For conda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:88,down,downloads,88,https://qutip.org,https://github.com/qutip/qutip/issues/997,4,['down'],['downloads']
Availability,Quantum Fourier Transform error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/688:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/688,1,['error'],['error']
Availability,Qubit Decay code example on [this page; ](http://qutip.org/docs/4.1/guide/guide-bloch.html) lists these imports. ```; from qutip import *; from scipy import *; ```; I think it misses; `import numpy as np`; for np.sin and np.cos functions. If I don't add that line I get an error.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/797:273,error,error,273,https://qutip.org,https://github.com/qutip/qutip/issues/797,1,['error'],['error']
Availability,"QubitCircuit.resolve_gates() errors on ""FREDKIN"" gate.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330:29,error,errors,29,https://qutip.org,https://github.com/qutip/qutip/issues/1330,1,['error'],['errors']
Availability,"Qutip works fine with numpy 1.21.1, but fails on import with 1.22 numpy, released Dec 31st. Tested on ubuntu and MacOS. ```; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ```. Failure occurs here,. https://github.com/qutip/qutip/blob/52d01da181a21b810c3407812c670f35fdc647e8/qutip/utilities.py#L340. which is kind of mysterious since line 339 explicitly checks that the 'blas_opt_info' attribute exists, and then fails at line 340 because the attribute doesn't exist.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766:615,Failure,Failure,615,https://qutip.org,https://github.com/qutip/qutip/issues/1766,1,['Failure'],['Failure']
Availability,"RCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:70326,ERROR,ERROR,70326,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['ERROR'],['ERROR']
Availability,"RS =========================================================================; _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py ___",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:3033,ERROR,ERROR,3033,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,Random error in multiplication,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['error'],['error']
Availability,Re-enable test errors on ImportWarning,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2083:15,error,errors,15,https://qutip.org,https://github.com/qutip/qutip/pull/2083,1,['error'],['errors']
Availability,Remove the error showing in #1109,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1110:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/pull/1110,1,['error'],['error']
Availability,Removed converting error on Windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1178:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/pull/1178,1,['error'],['error']
Availability,Removed converting error on windows.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/pull/1179,1,['error'],['error']
Availability,Removed error when converting qcirc.pdf to qcirc.png on windows.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1178:8,error,error,8,https://qutip.org,https://github.com/qutip/qutip/pull/1178,2,['error'],['error']
Availability,"Required due to changes in scipy 1.6.1. Using an explicit dtype will make matrix construction more robust. Fixes qutip Issue #1451. Tested on Debian unstable, with this patch tests/test_sparse.py now passes with scipy 1.6.1. **Description**. scipy 1.6.1 changed the API for constructing sparse matrices with `scipy.sparse.csr_matrix` (affecting the COO format). This caused qutip TestDicke tests in test_piqs.py (test_lindbladian, test_lindbladian_dims, test_liouvillian) to fail. . This patch avoids the problem by setting the dtype explicitly to np,complex128. . **Related issues or PRs**. fixes #1451. **Changelog**; Provide explicit dtype=np.complex128 when constructing sparse matrixes with csr_matrix. Required for working with scipy 1.6.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1452:99,robust,robust,99,https://qutip.org,https://github.com/qutip/qutip/pull/1452,1,['robust'],['robust']
Availability,Return info error with steadystate.py and scipy solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/issues/1017,1,['error'],['error']
Availability,"Revert ""Fix redundancy and sign error in jmat.""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/567:32,error,error,32,https://qutip.org,https://github.com/qutip/qutip/pull/567,1,['error'],['error']
Availability,Reverts qutip/qutip#518. This has been causing some issues when being downloaded directly from git. Will rework it.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/522:70,down,downloaded,70,https://qutip.org,https://github.com/qutip/qutip/pull/522,1,['down'],['downloaded']
Availability,"Rework photocurrent code to be more resilient and lower numerical error.; Replace #1010 . euler solver: textbook equation directly used, no more improperly supported multiple collapses.; pred-corr solver: proper support for multiple collapses with no more O(dt) error at each collapses.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1022:36,resilien,resilient,36,https://qutip.org,https://github.com/qutip/qutip/pull/1022,3,"['error', 'resilien']","['error', 'resilient']"
Availability,Rewrote `clebsch` function based on long integer fraction. Thus escaping the rounding error mentioned in #1141. Surprisingly it's a little faster than the float implementation. . Also added tests for the function. Closes #1141,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1142:86,error,error,86,https://qutip.org,https://github.com/qutip/qutip/pull/1142,1,['error'],['error']
Availability,"Running this code; ```; import qutip.testing as qt; qt.run(); ```; produces an error:; ```; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""qutip/qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""qutip/fastsparse.py"", line 406, in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); File ""qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; ImportError: No module named spmatfuncs; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/891,1,['error'],['error']
Availability,"Running this code; import qutip.testing as qt; qt.run(); produces an error:. Monte-carlo: Collapse terms constant (str format) ... cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_130828459648281117.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:69,error,error,69,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['error'],['error']
Availability,Segmentation fault in mesolve if density matrix was constructed with flat aray,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,Segmentation fault in sesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/761,1,['fault'],['fault']
Availability,Segmentation fault while trying to make large tensor product,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/1406,1,['fault'],['fault']
Availability,"Should fix tests/test_propagator.py::testPropHOStrTd sometime failing, ran it 100 times with the patch without error.; Cause: compiling the same string by multiple process at once resulted in them writing temp files with the same filename, resulting in a race condition and random fails. Not sure why it was not caught before.; @nathanshammah, @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1169:111,error,error,111,https://qutip.org,https://github.com/qutip/qutip/pull/1169,1,['error'],['error']
Availability,"Since merging PR #1082 , I've been getting this strange error whenever I import QuTiP:; ```; (qutip-env) tarun@trolldem0rt:~/riken-work$ python fidel.py ; cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++; /home/tarun/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```; The codes however run fine. Here's the output from my qutip.about(). ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:56,error,error,56,https://qutip.org,https://github.com/qutip/qutip/issues/1109,2,['error'],['error']
Availability,"Since the PR merge of Ben's (@bcriger) code for Efficient Application of CPTP Maps to Subsystems, there has been a number of failing unit tests. I have fixed some of the tests and ported Ben's code to be python3 compatible, but there are still two remaining errors, which I have traced to the fact that `subsystem_apply(..., reference=True)` does not give the expected results (some normalization problem? perhaps with the eigenvectors?). ```; In [1]: from qutip import *; In [2]: rho_3 = rand_dm(3); In [3]: superop = kraus_to_super(rand_kraus_map(3)); In [4]: analytic_result = vector_to_operator(superop * operator_to_vector(rho_3)); In [5]: analytic_result; Out[5]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; |(0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 |. In [6]: ref_result = subsystem_apply(rho_3, superop, [True], reference=True); In [7]: ref_result; Out[7]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.354 (0.067−0.036j) (0.058+0.004j) |; |(0.067+0.036j) 0.407 (0.039−0.041j) |; |(0.058−0.004j) (0.039+0.041j) 0.240 ⎟. In [8]: efficient_result = subsystem_apply(rho_3, superop, [True]); In [9]: efficient_result; Out[9]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; | (0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 ⎟; ```. Probably @bcriger would be the best person to fix this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/30:258,error,errors,258,https://qutip.org,https://github.com/qutip/qutip/issues/30,1,['error'],['errors']
Availability,Solve index error in function wigner cmap,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/704:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/pull/704,1,['error'],['error']
Availability,"Solver object for `sesolve`, `mesolve` and `mcsolve`: `SeSolver`, `MeSolver` and `McSolver`:; - Removed all `rhs_reuse` (except in `brmesolve`). Still work but there is deprecation warning.; - steper for `Sesolver` and `MeSolver` as proposed by Michael.; - Variable output type (`Qobj`, `dense` or `sparse`) input must still be `Qobj`.; - Intermediate object to change the solver used: scipy `zvode`, `solve_ivp`, `dorpri853` are all available for `SeSolver`, `MeSolver`. More could be added in the future, @tehruhn 's GPU solver could probably fit here. I will work on an Adaptative Hilbert Space one eventually. . The objects do not do much more than the original functions if the system is not used more than once. Still to-do:; - Other algorithm for `McSolver`: diagonalized solver (suggested by Fabio?) and one using scipy ivp.; - Inline documentation; - Notebooks; - Cleaning options management. (Unique options object is getting limited for multiple low level solver and both all se,me,mc solve, I would appreciate opinions on how to make this better).; - Add to `__init__.py`; - Add tests. Build on the QobjEvoFunc Pr, with some bug fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1186:434,avail,available,434,https://qutip.org,https://github.com/qutip/qutip/pull/1186,1,['avail'],['available']
Availability,"Some TestDicke tests in `test_piqs.py` (test_lindbladian, test_lindbladian_dims, test_liouvillian) fail with the recent scipy 1.6.1 release. They were previously passing with scipy 1.6.0. **To Reproduce**. ```; $ cp -r qutip/tests/ /tmp/qutip; $ cd /tmp/qutip; $ pytest-3 -v -k ""TestDicke""; ```. The test error message from `TestDicke.test_lindbladian` is; ```; ___________________________________________________________________________________________ TestDicke.test_lindbladian ____________________________________________________________________________________________. self = <tests.test_piqs.TestDicke object at 0x7f55475a0c10>. def test_lindbladian(self):; """"""; PIQS: Test the generation of the Lindbladian matrix.; """"""; N = 1; gCE = 0.5; gCD = 0.5; gCP = 0.5; gE = 0.1; gD = 0.1; gP = 0.1; ; system = Dicke(; N=N,; emission=gE,; pumping=gP,; dephasing=gD,; collective_emission=gCE,; collective_pumping=gCP,; collective_dephasing=gCD,; ); ; > lindbladian = system.lindbladian(). tests/test_piqs.py:450: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; /usr/lib/python3/dist-packages/qutip/piqs.py:509: in lindbladian; return cythonized_dicke.lindbladian(); qutip/cy/piqs.pyx:313: in qutip.cy.piqs.Dicke.lindbladian; ???; qutip/cy/piqs.pyx:431: in qutip.cy.piqs.Dicke.lindbladian; ???; /usr/lib/python3/dist-packages/scipy/sparse/compressed.py:54: in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. self = <[AttributeError('dtype not found') raised in repr()] coo_matrix object at 0x7f55475a0ca0>; arg1 = ([(-0.6000000238418579+0j), (0.6000000238418579+0j), (-0.9000000357627869+0j), (-0.90000003576",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:305,error,error,305,https://qutip.org,https://github.com/qutip/qutip/issues/1451,1,['error'],['error']
Availability,Some of the norms calculated in the test_ComplexSuperApply were above the tolerance of 1e-12; In 50 repeated tests 7 errors occurred. norms as large as 5e-11 were reported.; After increasing tol to 1e-10 test were repeated 200 times and no errors occurred,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435:74,toler,tolerance,74,https://qutip.org,https://github.com/qutip/qutip/pull/435,3,"['error', 'toler']","['errors', 'tolerance']"
Availability,"Some of the super operator and QPT tests may have name space issues as reported in the google group: . https://groups.google.com/d/msg/qutip/Z-5o4HHYRv4/yRX7dvjiEgAJ. I can not reproduce the errors, but here is a clean up that will likely fix this possible issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/497:191,error,errors,191,https://qutip.org,https://github.com/qutip/qutip/pull/497,1,['error'],['errors']
Availability,"Some of the test have decorators like this:. ```; @unittest.skipIf(_version2int(Cython.__version__) < _version2int('0.14') or; Cython_found == 0, 'Cython not found or version too low.'); ```. with the Cython_found variable being set at the top of the file like this:. ```; # find Cython if it exists; try:; import Cython; except:; Cython_found = 0; else:; Cython_found = 1; ```. The condition in the decorator will error, as the Cython version is checked even though it failed to import.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/449:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/issues/449,1,['error'],['error']
Availability,"Some small changes:. 1. remove repetitive assignments of `self.arg_value` and` self.arg_label`; 2. move the description to the definition of class so the document will show it; 3. raise the corresponding error if targets is None while required or not an integer, e.g `Gate(""SWAP"")` or `Gate(""SWAP"", [0.5, 2])`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/995:204,error,error,204,https://qutip.org,https://github.com/qutip/qutip/pull/995,1,['error'],['error']
Availability,Some tests fail from time to time. Most likely they need to have their tolerances increased; This issue replaces #607 as it is more general,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621:71,toler,tolerances,71,https://qutip.org,https://github.com/qutip/qutip/issues/621,1,['toler'],['tolerances']
Availability,"Some tests in stochastic evolution passes only most of the time.; The problematic tests are comparison of different step length, normally error should be smaller with smaller step length. Since the evolution use random number, this is not true for all seeds. By fixing the test, we should not have the tests randomly failing.; I am adding _improving stochastic tests and having them use pytest_ to my to-do. Ps. tests fail due to the error fixed in #1656",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1657:138,error,error,138,https://qutip.org,https://github.com/qutip/qutip/pull/1657,2,['error'],['error']
Availability,"Specifically this test `test_interpolate.test_interpolate_brevolve3()` followed by `test_mcsolve.test_MCCollapseTimesOperators` generates an error or the form; ```; Process SpawnPoolWorker-1:; Traceback (most recent call last):; File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\process.py"", line 249, in _bootstrap; self.run(); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\process.py"", line 93, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\pool.py"", line 108, in worker; task = get(); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\queues.py"", line 345, in get; return ForkingPickler.loads(res); ImportError: No module named 'rhs47600'; ```; The rhs... file in generated by the brevolve3 test. The test appears to finish fine. But somehow it looks like some process is hanging around. Why this is triggered by the MCCollapseTimesOperators test is a bit of a mystery.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728:141,error,error,141,https://qutip.org,https://github.com/qutip/qutip/issues/728,1,['error'],['error']
Availability,Spectrum sometimes returns error `IndexError: index 0 is out of bounds for axis 0 with size 0`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/1388,1,['error'],['error']
Availability,Taking the partial trace of a quantum object over its own basis generates an error now,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1413:77,error,error,77,https://qutip.org,https://github.com/qutip/qutip/issues/1413,1,['error'],['error']
Availability,Test for `svd` more robust,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2092:20,robust,robust,20,https://qutip.org,https://github.com/qutip/qutip/pull/2092,1,['robust'],['robust']
Availability,Testing code errors: TypeError,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039:13,error,errors,13,https://qutip.org,https://github.com/qutip/qutip/issues/1039,1,['error'],['errors']
Availability,Tests Error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:6,Error,Error,6,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['Error'],['Error']
Availability,"The QIP module is a set of tools for simulating quantum computing, from the high-level of algorithms, down to individual qubit control sequences in a particular physical architecture. So far it has functions for common quantum information processing tasks, including pre-defined quantum gates, along with functions for applying arbitrary 1, 2, and 3 qubit gates to arbitrary target and control qubits in a register of N qubits, circuit representations, a library of quantum algorithms, and models for some common physical QIP architectures. Our goal is to have a set of tools to analyse the influence of unexpected noise sources on a given algorithm realized on a particular architecture, as well as being used as an educational tool for teaching QIP concepts. . QIP module enhancements we plan to implement include:; 1. Simulation of stabilizer circuits and quantum error correction codes.; 2. Simulation of common quantum algorithms - Shor's Factorization, Grover's Search, Quantum Teleportation, and more...( http://math.nist.gov/quantum/zoo/ ); 3. Extend platform to simulate specific quantum computing architectures - Create models to simulate different experimental quantum computing setups like Xmons, including typical environmental noise sources, and limitations on control and readout associated with each example.; 4. Combine the qip and qcontrol modules to optimize circuit and gate decomposition and find ideal fast control pulses to realize particular gates, given physically available limitations of a particular architecture. ; 5. Platform for simulating quantum chemistry on a quantum computer - Create example codes for calculating the ground state of molecules, following specific examples found in DOI: 10.1126/science.1113479 and elsewhere. ; 6. Combine the qip and HEOM/RC solvers to investigate the effect of a non-markovian and nonperturbative environment on error correction and common algorithms.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441:102,down,down,102,https://qutip.org,https://github.com/qutip/qutip/issues/441,4,"['avail', 'down', 'error']","['available', 'down', 'error']"
Availability,"The `Qobj.dag()` method does not preserve `superrep`, which can create surprising errors when attempting to work with adjoint channels (as [Watrous notes](https://cs.uwaterloo.ca/~watrous/TQI/), adjoint channels can be calculated from the Hermitian conjugates of superoperators). In particular, `to_choi(rand_super_bcsz().dag())` raises a `TypeError`:. ``` python; In [1]: from qutip import *. In [2]: to_choi(rand_super_bcsz().dag()); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-2-63b1d2d94b5e> in <module>(); ----> 1 to_choi(rand_super_bcsz().dag()). C:\Anaconda\lib\site-packages\qutip-3.2.0.dev_adb91b0-py2.7-win-amd64.egg\qutip\superop_reps.pyc in to_choi(q_oper); 392 return chi_to_choi(q_oper); 393 else:; --> 394 raise TypeError(q_oper.superrep); 395 elif q_oper.type == 'oper':; 396 return super_to_choi(spre(q_oper) * spost(q_oper.dag())). TypeError: None; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/374:82,error,errors,82,https://qutip.org,https://github.com/qutip/qutip/issues/374,1,['error'],['errors']
Availability,"The `from scipy.misc import factorial` generated some error when building win py27 builds in conda-forge/qutip-feedstock#18. So I moved it to the only function in `utilities` that used it. Not strictly good practice. Would perhaps be better to move `_version2int` and `_blas_info` to another module, but quite a bit more work and I was not sure what to call the module: `sysutils`?. The error came from inside scipy due to a call to `multiprocessing.cpu_count()`. As we had one of those inside `__init__()` I wrapped that up as well.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/668:54,error,error,54,https://qutip.org,https://github.com/qutip/qutip/pull/668,2,['error'],['error']
Availability,"The `metrics.dnorm` function uses the cvxpy library to calculate the diamond norm. Twice now it has caused many test failures out of the blue #484 and #872.; It would seem like the developers do not prioritise maintaining a conda package. As this is our recommended platform, then it is a risk having this cvxpy dependence. Perhaps there is a method using scipy that we could employ?. @cgranade perhaps could provide some context?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874:117,failure,failures,117,https://qutip.org,https://github.com/qutip/qutip/issues/874,1,['failure'],['failures']
Availability,"The checks are too restrictive. For the collapse and expectation operator lists, previous versions allowed the input of single operators. The documentation also explicitly states this is OK. Ex. ; mesolve(qzero(2), fock(2, 1), [0, 2], destroy(2), sigmaz()). But now this yields the error:. Traceback (most recent call last):; File ""/home/kevinf/PycharmProjects/QutipProjects/test/test.py"", line 3, in <module>; mesolve(qzero(2), fock(2, 1), [0, 2], destroy(2), sigmaz()); File ""/usr/local/lib/python3.4/dist-packages/qutip/mesolve.py"", line 208, in mesolve; _solver_safety_check(H, rho0, c_ops, e_ops, args); File ""/usr/local/lib/python3.4/dist-packages/qutip/solver.py"", line 813, in _solver_safety_check; for ii in range(len(c_ops)):; TypeError: object of type 'Qobj' has no len()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/630:282,error,error,282,https://qutip.org,https://github.com/qutip/qutip/issues/630,1,['error'],['error']
Availability,"The current error handling for failure in ode integration, in mesolve/sesolve, is very bad. Now exceptions are raised when this occur, so that these errors can be caught more easily by users.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/243:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/pull/243,3,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,The dnorm tests are sporadically (quite regularly) failing e.g. ```; ======================================================================; ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.; ----------------------------------------------------------------------; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.; ```. I suggest we turn them off by not installing cvxpy for any of the test configurations.; We can turn them on again if someone can make an attempt to make the dnorm tests more reliable @cgranade . I will raise a PR for this now.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/880:141,ERROR,ERROR,141,https://qutip.org,https://github.com/qutip/qutip/issues/880,3,"['ERROR', 'error', 'reliab']","['ERROR', 'error', 'reliable']"
Availability,"The following codes come from the documentation of mcsolver; http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html; ```; from qutip import *; import numpy as np; times = np.linspace(0.0, 10.0, 200); psi0 = tensor(fock(2, 0), fock(10, 5)); a = tensor(qeye(2), destroy(10)); sm = tensor(destroy(2), qeye(10)); H = 2 * np.pi * a.dag() * a + 2 * np.pi * sm.dag() * sm + 2 * np.pi * 0.25 * (sm * a.dag() + sm.dag() * a); data = mcsolve(H, psi0, times, [np.sqrt(0.1) * a], [a.dag() * a, sm.dag() * sm]); ```; Sofar it is fine, but if I now try to print `data` with; ```; print(data); ```; The following error shows up in either Ipython or Jupyter Notebook; ```; c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\solver.py in __str__(self); 272 s += ""missing solver information.\n""; 273 s += ""-"" * (len(s) - 1) + ""\n""; --> 274 if self.states is not None and len(self.states) > 0:; 275 s += ""states = True\n""; 276 elif self.expect is not None and len(self.expect) > 0:; TypeError: len() of unsized object; ```; It is because in the default option is `store_states=False`. Maybe `self.states` should be initialized as e.g. an empty list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016:607,error,error,607,https://qutip.org,https://github.com/qutip/qutip/issues/1016,1,['error'],['error']
Availability,"The following error occurred several times while running the tests on my machine:; ```; ======================================================================; ERROR: Stochastic: ssesolve: heterodyne, time-dependent H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_stochastic_se.py"", line 208, in test_ssesolve_heterodyne; map_func=parallel_map, args={""a"":2}); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 698, in ssesolve; args=args, **kwargs); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 417, in __init__; self.noise = np.random.randint(0, 2**32, ntraj).astype(""u4""); File ""mtrand.pyx"", line 990, in mtrand.RandomState.randint; ValueError: high is out of bounds for int32. ----------------------------------------------------------------------; ```; It is due to the fact that the default integer of python on windows is int32 instead of int64. `np.random.randint(0, 2**32)` produces the same error on my machine. Maybe it is better to add `dtype=np.int64` or `dtype=np.uint32` since they are platform independent. If you agree I can work on fixing it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/issues/968,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The include a new class to represent time dependent Qobj system.; It's take the list of Qobj and coefficient in the format normally accepted by solvers like mesolve and mcsolve and make an object of it.; The td_Qobj is callable and return the Qobj at the desired time, it support math (+,-,*) and unitary transformations: conj, dag, transpose.; The object has a cython compiled version with cython call to spmv and expect in order to be efficient in solvers.; I made it as a tool used by solver (stochatic/mcsolve), therefore may lack some features for users. Also the naming of some methods only make sense in a solver (rhs).; Lastly, this branch include it's own cubic spline code since the version available when I started working on it only accepted uniformly sampled data. This part may have become redundant. This branch only contain the new object, not the solvers using it.; This pull request replace half the ""cythonizing mcsolve"" pull request.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/814:701,avail,available,701,https://qutip.org,https://github.com/qutip/qutip/pull/814,2,"['avail', 'redundant']","['available', 'redundant']"
Availability,"The installation seems to succeed, but there seems to be a problem when the tests are run (or when I go into python, trying to load anything like `from qutip import *` gives an error. The script gives the following error (which can be reproduced by just running `import qutip.testing as qt` in python):. ```; [. . .]; Successfully installed qutip-3.1.0; Running QuTiP unit tests; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""/usr/local/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""/usr/local/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""/usr/local/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""/usr/local/lib/python2.7/site-packages/qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 431, in load_module; language_level=self.language_level); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 209, in load_module; inplace=build_inplace, language_level=language_level); File ""/usr/local/lib/python2.7/site-packages/pyximpo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:177,error,error,177,https://qutip.org,https://github.com/qutip/qutip/issues/348,8,['error'],['error']
Availability,"The latest version of QuTIP uploaded to PyPI (4.0.1 uploaded on 2016-12-29) has scipy (>=0.15) listed as a dependency. However, the file fastsparse.py imports `get_sum_dtype` from scipy.sparse.sputils, which is only available in scipy 0.18 and newer. I believe that the function was not actually used, and the import was removed in commit #596. . I am not certain that the current version still requires scipy(>=0.18), but the version currently available on PyPI (and thus auto-installed with pip) does require it. If the user has an earlier version of scipy, qutip will fail on import (ImportError).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616:216,avail,available,216,https://qutip.org,https://github.com/qutip/qutip/issues/616,2,['avail'],['available']
Availability,"The main purpose of this patch is to cherry-pick up the commits which allow us to move our testing infrastructure to GitHub Actions, without absolutely messing up the merge of #1481. After that is merged, I'll merge everything up properly. This stop-gap measure is necessary because Travis CI is shutting down its free tier _today_, and we haven't managed to effect the merge yet. Unfortunately, I had to pick out rather more than I had hoped to get this without seriously rewriting `__init__.py`, `setup.py` and the testing workflow, so apologies for the larger PR. I have, however, cherry-picked out PRs in full, rather than splitting them, to make it logically a bit simpler. I have also cherry-picked the PRs commit-by-commit, rather than squashing them, to make it easier to understand the history when I have to do a larger merge later (even though it'll still be more confusing in the `git log` than desirable). The cherry-picked PRs are:; - #1465; - #1471; - #1484; - #1510; - #1541; - #1551 (the actual target). I had to fix several merge conflicts in `__init__.py` over time, but most stuff was trivial to solve. The largest merge conflicts that needed to be handled were issues where the old and new methods of handling settings conflicted, but again, it's obvious what is the correct version in this. I have also disabled warnings-as-errors in the testing infrastructure, until we've fixed them properly on this branch.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1574:305,down,down,305,https://qutip.org,https://github.com/qutip/qutip/pull/1574,2,"['down', 'error']","['down', 'errors']"
Availability,"The plugin was already enabled by default, so this does not turn it on. However, it also defaults to Python 2, which means it produces a lot of syntax errors, and the run (silently) failed every time. This may cause our CodeClimate score to drop, not because we actually got worse, but because we suddenly start seeing a load of duplication that was previously hidden. I'm hoping that getting these parser errors fixed will mean that the ""Progress report"" tab on CodeClimate will start getting populated. **Changelog**: (developer changes) fixed Python version for duplication detection in CodeClimate",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1577:151,error,errors,151,https://qutip.org,https://github.com/qutip/qutip/pull/1577,2,['error'],['errors']
Availability,"The segfault on mac is not fixed yet. @nathanshammah found 3 tests that fails because of it.; Since we don't have a solution comming soon, we are simply skipping these tests for 4.5.1. This is the error in #1197. In common with these 3 test is the computation of eigenvalues, 2 of them do it directly with scipy, the last one compare the cython version to the scipy one.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1257:197,error,error,197,https://qutip.org,https://github.com/qutip/qutip/pull/1257,1,['error'],['error']
Availability,The six library is used for Python 2.x and 3.x compatibility tricks. It failed to import during Travis tests. Should we make this library available in Travis tests?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/378:138,avail,available,138,https://qutip.org,https://github.com/qutip/qutip/issues/378,1,['avail'],['available']
Availability,"The stochastic solver have been redone.; smesolve and ssesovle can be used for time dependent systems (H, c_ops and sc_ops).; The available solvers are : 'euler-maruyama', 'pc-euler, 'milstein', 'platen', 'milstein-imp', 'taylor15', 'taylor15-imp', 'explicit15'. All solvers are usable by both ssesolve and smesolve, for time-dependent cases and for both heterodyne and homodyne methods. There is no restriction on the number of sc_ops. The solvers are in cython, making them 2~3 time faster than the previous version, with the exception of the implicit solvers, where the timing is about the same. The photocurrent method as been moved to it's own functions: photocurrentmesolve and photocurrentsesolve. It can take time-dependent Hamiltonian. The stochastic (piecewse deterministic process) PDP solvers (ssepdpsolve and smepdpsolve) are untouched. The previous version of smesolve/ssesolve allowed the user to determine it's own d1 and d2 function. This capacity have been moved to the function general_stochastic. However the function only has access to some solver: 'euler-maruyama', 'platen', 'explicit15'. . I created a function which list the solvers with the references: stochastic_solver_info(). The convergence of the solvers was tested with a tests similar to https://github.com/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815:130,avail,available,130,https://qutip.org,https://github.com/qutip/qutip/pull/815,1,['avail'],['available']
Availability,"The tests for this are sometimes erroring in Travis; See test result for #424 ; ERROR: Test Qobj: trunc_neg works for non-diagonal opers. I saw a conversation about this somewhere, but can't find it now",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425:33,error,erroring,33,https://qutip.org,https://github.com/qutip/qutip/issues/425,2,"['ERROR', 'error']","['ERROR', 'erroring']"
Availability,"The version of qutip in the macports repository is outdated (2.2.0), which is unfortunate especially since it is still included in the documentation as an ""official"" installation path (http://qutip.org/docs/3.0.1/installation.html#installation-on-mac-os-x-10-6). ; I saw that a patch to 3.0.1 was submitted to MacPorts a while ago (https://trac.macports.org/ticket/44555), but apparently there were some errors and then nothing further happened. It would be great if this could be updated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283:404,error,errors,404,https://qutip.org,https://github.com/qutip/qutip/issues/283,1,['error'],['errors']
Availability,"There are ""breaking"" changes within the scipy private code which various parts of QuTiP depended on (see gh-1298, gh-1301 and commits 46e04a1, 6c85261 and 663d7d2). We ensure that at least one test on Travis uses a scipy version before 1.5 so that we always maintain support for it - the other tests will typically install scipy>=1.5. This particular test is chosen by elimination:; - we want the ""default"" case testing against the newest versions of Python to use the newest versions of the libraries available; - we want the Cython parts to be tested against both versions of scipy, since we link against their versions of LAPACK/BLAS.; - the Mac tests (at the time of writing) skip some tests which are problematic because of intermittent segfaults, including at least one which has issues with scipy 1.5. The MKL/OMP one skips some tests, but not any which use scipy.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1302:502,avail,available,502,https://qutip.org,https://github.com/qutip/qutip/pull/1302,1,['avail'],['available']
Availability,"There doesn't seem to be the package released under Ubuntu 16.04 channel. After I added the Ubuntu PPA for QuTiP, I got the following error/warning:. ```; qxd@ubuntu1604$: sudo apt-get update; ...; W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; N: See apt-secure(8) manpage for repository creation and user configuration details.; E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; ```. Thanks for maintaining it :)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472:134,error,error,134,https://qutip.org,https://github.com/qutip/qutip/issues/472,1,['error'],['error']
Availability,There is a Bloch_Decay.mp4 link at the bottom of the [Plotting on the Bloch Sphere](http://qutip.org/docs/4.1/guide/guide-bloch.html#plotting-on-the-bloch-sphere) webpage. When I click on it I get a 404 error from linked Google Code page:; http://qutip.googlecode.com/svn/doc/figures/bloch_decay.mp4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/800:203,error,error,203,https://qutip.org,https://github.com/qutip/qutip/issues/800,1,['error'],['error']
Availability,"There seems to be a bug when trying to solve the Schrödinger equation with the sesolve and essolve functions using an initial state vector. The following code reproduces the error:; ```python; ### import dependencies; %matplotlib inline; from qutip import *; import numpy as np; import matplotlib.pyplot as plt. ### define spin operators at each site ; N = 3 # Number of spins; def sz(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmaz()] + [qeye(2) for j in range(i+1,N)]; return tensor(l); def sp(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmap()] + [qeye(2) for j in range(i+1,N)]; return tensor(l); def sm(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmam()] + [qeye(2) for j in range(i+1,N)]; return tensor(l). ### Hamiltonian with on-site field and XX-type coupling between spins 0&1 and spins 0&2; delta = 1; V1 = 0.1; V2 = 0.1 ; H0 = -0.5*delta*(sz(0) + sz(1) + sz(2)) + V1*(sp(0)*sm(1) + sm(0)*sp(1)) + V2*(sp(0)*sm(2) + sm(0)*sp(2)) . ### no collapse operaters; e_op is total magnetization in z-direction ; c_ops = []; e_ops = [sz(0)+sz(1)+sz(2)]. ### initial state: each spin polarized in x-y-plane; psi0 = tensor([(basis(2,0) + (1j)**i *basis(2,1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:174,error,error,174,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['error'],['error']
Availability,"There seems to be a failure in how `Qobj.istp` checks trace-preservingness for superoperators acting on composite systems. I think there's an exception raised inside the property accessor which is being downgraded to `istp == False`; I'll investigate and fix it soon. In the meantime, I've written a [brief test case](https://gist.github.com/cgranade/31bce360282097d4abd545b68eb65b7d) that shows the problem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/498:20,failure,failure,20,https://qutip.org,https://github.com/qutip/qutip/issues/498,2,"['down', 'failure']","['downgraded', 'failure']"
Availability,"There were a few invalid escape sequences and scipy imports that somehow escaped being fixed #1493, so this fixes those. Also, in #1480 we issued deprecation warnings for user-facing uses of `eseries`, `essolve` and `ode2es`, however we are not deprecating the correlation and spectrum methods (in QuTiP 5.0 the necessary components are just absorbed into private functions inside `correlation.py`), so these should not generate warnings. Simon (@hodgestar) and I briefly discussed whether we needed a special warnings filter inside those functions, but we thought we didn't need it because default Python filters would prevent `DeprecationWarning` from being shown, since it is triggered by library code and not code in `__main__`. The problem is that not everything uses the default filters; both `pytest` and the documentation build do not suppress all `DeprecationWarning` messages. This was a particular problem in `pytest`, where approximately 68,000 warnings (!) were generated. Since this is _not_ deprecated functionality, nor is it using deprecated functionality, so there shouldn't be any warnings. This PR removes those as well. The end result is that a completely clean documentation build now should generate 0 warnings. My eventual intent is to create an automatic documentation build process, which treats warnings as errors to prevent us from breaking it in PRs. This cannot happen until the merger of the documentation into this repository, however, because otherwise new features/feature removals could get into an impossible situation where the two PRs to `qutip` and `qutip-doc` would not be aware of each other, so would return failed CI. Tests still generate several warnings, but that's for a different PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1505:1334,error,errors,1334,https://qutip.org,https://github.com/qutip/qutip/pull/1505,1,['error'],['errors']
Availability,"This PR addresses #410 by attempting to import `setuptools`, which has support for unittesting and nose integration. Upon failure, it should leave the setup process as it was. This PR also fixes a rare exception in `settings.py` that can be caused if you have a `*.pyc` file for `logging.py` and call into QuTiP from something like nose.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/429:122,failure,failure,122,https://qutip.org,https://github.com/qutip/qutip/pull/429,1,['failure'],['failure']
Availability,This PR addresses #484 by skipping dnorm() tests in the known failure case that MKL is present (see #484 and cvxopt/cvxopt#57).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/487:62,failure,failure,62,https://qutip.org,https://github.com/qutip/qutip/pull/487,1,['failure'],['failure']
Availability,"This PR changes the norm used in `qutip.tests.test_superoper.testLiouvilleImplem` to the max-norm. Previously, this test used the tr-norm, which scaled badly with the dimension of the Liouvillian under test, such that spurious failures were generated (see #419).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/420:227,failure,failures,227,https://qutip.org,https://github.com/qutip/qutip/pull/420,1,['failure'],['failures']
Availability,"This PR fixes #386 by changing checking if `j == i + 1`, in which case NumPy doesn't automatically move fancy indices to the left. In particular, for adjacent indices, we should sum over index `i`, not over index `0` as was assumed before. To catch regressions, this PR also adds more robust unit tests that check more unusual tensor contractions. Thanks to @arnelg for pointing this out!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/387:285,robust,robust,285,https://qutip.org,https://github.com/qutip/qutip/pull/387,1,['robust'],['robust']
Availability,"This PR fixes every warning reported in `pytest`, and then makes `pytest` treat warnings as errors to hopefully make sure we stick to this state of affairs. (Or at least it fixes all the ones that appear on my particular machine...). The reason this is desirable is that it means we cannot ignore deprecation warnings in dependencies or even in our own code. It also helps us not let certain parts of the codebase get lost in the sands of time, or at least compels us to do something about potential problems before they actually become catastrophic. This is _somewhat_ of a trial, though I hope we can stick to it; warnings usually indicate that something's wrong. Tests can still test run code that generates warnings, but you now have to mark it explicitly in `pytest`. This doesn't mean you should just ""blank out"" warnings by filtering them away. You should first consider if what you're doing is the right way to do it (fix the warning), and then only if it absolutely is and you're testing something that is _supposed_ to warn, then you can use `pytest.warns` to _assert_ that it warns. Of note: a `warnings.catch_warnings` block _inside_ a test (i.e. in test code, not module code) does not work when `pytest` is treating warnings as errors. There are a few classes of fixes in this PR:. - filtering ""expected"" warnings from `pyximport` (hoping to remove QuTiP's dependence on this in 5.0 anyway); - removal of the old `np.matrix` type in favour of `ndarray`, with some changes to accommodate the different arithmetic semantics; - convert an `__init__` method in a test into just class attributes to allow `pytest` to collect it; - bug fixes for behaviour that was raising warnings we hadn't been paying attention to. I'll be mightily surprised if all 5 CI runs pass immediately with warnings enabled; I haven't tested MKL on my laptop, and a quick glance at old logs suggests that SciPy 1.4 might be issuing a few more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506:92,error,errors,92,https://qutip.org,https://github.com/qutip/qutip/pull/1506,2,['error'],['errors']
Availability,"This PR introduces a new generator function, qubit_clifford_group, that yields each member of the single-qubit Clifford group as a Qobj. This functionality should be useful in contexts such as quantum error correction and randomized benchmarking.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358:201,error,error,201,https://qutip.org,https://github.com/qutip/qutip/pull/358,1,['error'],['error']
Availability,"This PR reduces the calculation of average gate fidelity between two quantum channels to the recently merged implementation of process fidelity. Additional minor change: raise an error when the channel passed to `process_fidelity` does not preserve the Hilbert space dimension of the input state. Previously it gave inconsistent results for that case, for different representations of equivalent channels. It's probably possible to define the `process_fidelity` and `average_gate_fidelity` for non-dimension-preserving channels if there is a use case for it? The previous version of `average_gate_fidelity` also was not defined for non-dimension-preserving channel. **Related issues or PRs**; Last part of the changes proposed in https://github.com/qutip/qutip/issues/1703. Builds on the implementation of process_fidelity from https://github.com/qutip/qutip/pull/1712, https://github.com/qutip/qutip/pull/1748. **Changelog**; Re-implement average_gate_fidelity using process_fidelity.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1788:179,error,error,179,https://qutip.org,https://github.com/qutip/qutip/pull/1788,1,['error'],['error']
Availability,"This change enables the use of Python standard logging, and backs it by a new qutip.settings entry. A few instances of classic `if debug: print` style logging have been refactored. The new `qutip.settings` entry is based on [configobj](http://configobj.readthedocs.org), with a fallback to classic `~/.qutiprc` parsing if that library is not available. Errors in the new functionality introduced by this commit are also logged, and can be accessed by setting up `logging.basicConfig` _before_ importing QuTiP. The optional configobj dependency should almost always be met, since it's shipped with matplotlib.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248:342,avail,available,342,https://qutip.org,https://github.com/qutip/qutip/pull/248,2,"['Error', 'avail']","['Errors', 'available']"
Availability,"This fixes an incompatibility between the current version of QuTiP and the current version of matplotlib. When plotting the Bloch sphere, the call to Bloch.show() produces a run-time error because the Arrow3D class does not implement the method do_3d_projection. This method returns a sort key to matlotlib for sorting artists. This fix adds the method, simply returning a value of 1. The assumption here is that there is only one artist, or that the sort order does not matter. This PR also modifies the conventions for the viewing angles specified in the view attribute of the Bloch and Bloch3d classes, rotating them by a quarter of a turn. See prior PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1824:183,error,error,183,https://qutip.org,https://github.com/qutip/qutip/pull/1824,1,['error'],['error']
Availability,"This fixes the calls to the `qutip.configrc` module in `qutip/__init__.py` when setting up OpenMP. Also, this tidies up a lot of very old code out of `__init__.py` that was testing for ancient versions of SciPy and Numpy. Since we have hard requirements at installation time for those, it's fine for us not to test their versions at initialisation. We still should check the version of Cython because it's an optional dependency, so isn't always constrained by the package manager. Some of the changes deliberately make `qutip/__init__.py` less forgiving of exceptions, especially when it comes to loading up `pyximport`. This is deliberate, even though it may make a couple more errors surface that have previously gone undetected. As it stands right now, the file will causes several errors to be silently ignored, even if they weren't the error we were testing for. That masks problems for a short while, but they usually resurface during use when they're much harder to debug. We should be solving the underlying problems, not sweeping them under the rug. In particular, we've frequently had complaints about `pyximport` failing, or trying to import OpenMP modules that have previously been compiled but aren't currently active, and things like that. This patch won't fix all those problems, but it hopefully will make some of them easier to debug when they do appear. There is more explanation to the logic behind each change in the commit messages. Fix #1470.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471:680,error,errors,680,https://qutip.org,https://github.com/qutip/qutip/pull/1471,4,"['error', 'mask']","['error', 'errors', 'masks']"
Availability,"This has been going on for a while now - `test_diag_liou_mult` fails about ~5-10% of the time on Travis runs, with only 1 or 2 elements of the huge matrix differing by a small relative tolerance. I _think_ this started around the time that scipy 1.5 was released, which changed how `scipy.linalg.eigh` chose its underlying LAPACK driver, and broke a load of tests that relied on our custom `eigh` functions reproducing the `scipy` behaviour exactly (#1299). At the time we fixed those tests (#1298, #1301), but this intermittent failure of `test_diag_liou_mult` may have slipped through. Equally, at the same time on `dev.major` I think I was moving the `brtools` internals to use the new `CSR` types, which involved rewriting things like `diag_liou_mult`. I don't think this is the cause (though I may have done at the time), because we see the intermittent test failures still on `master`, which does not use the new types yet. I'm not absolutely certain the `eigh` changes are the cause, which is why I don't want to just bump up `atol`/`rtol` in the test without going through and calculating what the acceptable tolerance _should_ be. This is a note for posterity. I'll look into it myself and try and determine the true root cause, and PR an appropriate change.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1431:185,toler,tolerance,185,https://qutip.org,https://github.com/qutip/qutip/issues/1431,4,"['failure', 'toler']","['failure', 'failures', 'tolerance']"
Availability,"This is a fix for #847. Since we already have a minimum requirement for Scipy, the error catching here does not make sense. It is better to leave the error returned from the scipy function `scipy.diags` untouched as the qutip version just wraps the result into a `qutip.Qobj`. . @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/851:83,error,error,83,https://qutip.org,https://github.com/qutip/qutip/pull/851,2,['error'],['error']
Availability,"This is a real shot in the dark, but it appears to have fixed an issue with lots of random malloc errors popping up on the mac platform (see #1120 and other recent discussions on the google group. It appears this is literally the only call to `free()` in all of qutip so perhaps there is a better way to do low-level memory work? I only know enough C to be dangerous, and found a random hint about setting pointers to NULL after freeing them. I gave it a shot and no longer see the issue on my mac when running py2.7.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1126:98,error,errors,98,https://qutip.org,https://github.com/qutip/qutip/pull/1126,1,['error'],['errors']
Availability,"This is a tidied up and completed version of #934. The first commit is credited to the original author (although I fixed up some little concerns in the PR and rebased it), because it's logically built off that PR, although in the end it's a complete reimplementation. This is a complete rewrite of the Husimi Q calculations, to make a more formal split between the iterative (low-memory) and precomputed (faster) algorithms, giving full access to both of them. It's a bit easier to use from a user's perspective, and it's faster than #934 as well. The concept of the precomputed matrix is encapsulated into a class with a cached tensor, so that the same precomputed system can be used for many states of different sizes, and autoexpands (up to the memory limit) to accommodate larger states. This is called `QFunc` as opposed to the standard function interface `qfunc`. It also adds rather more error checking on its inputs, and adds a complete testing suite for the new implementation. Closes #934. ## Examples. Let's say we have some states, and the phase-space coordinates we want to calculate the Husimi Q function at.; ```python; >>> import qutip; >>> states = [qutip.rand_dm(32, density=0.2) for _ in [None]*100]; >>> xs = np.linspace(-2, 2, 401); ```. Now the normal way of calculating the Q distribution for a single state is; ```python; >>> qutip.qfunc(states[0], xs, xs); array( ... ); ```. This already has some speed advantages over the pre-PR version of `qfunc`, because it caches a lot of its intermediary results, to avoid recomputing them. This results in calculating more matrix-vector products than before, but far fewr FLOPS overall. By default, `qfunc` issues a warning if it exceeds a certain amount of memory, and falls back to the low-memory version. You can control this limit with the `precompute_memory` option:; ```python; >>> qutip.qfunc(states[0], xs, xs, precompute_memory=0); qutip/qutip/wigner.py:822: UserWarning: Falling back to iterative algorithm due to lack of mem",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583:895,error,error,895,https://qutip.org,https://github.com/qutip/qutip/pull/1583,1,['error'],['error']
Availability,"This is causing test failures in all CI builds against scipy 1.5 currently. The other failing tests on scipy 1.5 are due to changes to the handling of `csr` matmul operations, which is fixed in patch #1298. As far as I can see, there is no way to recover the exact same behaviour as existed in scipy < 1.5 (there's optimisations of the `lwork` input to the LAPACK routine), and consequently we are not getting the exact same set of eigenvectors for problem dimensions > 32. This does not mean that `brtools` is suddenly doing something wrong. It just means that the test assumed we would have the exact same output as `scipy`, and we don't any more. . This is an annoying problem to fix, I think. Two possible methods:. 1. attempt to ""trick"" scipy into doing the same pre-1.5 behaviour. Possibly this would involve monkey-patching out the ability of `eigh` to optimise the `lwork` parameters (i.e. stubbing out `scipy.linalg.lapack._compute_lwork` to always return `lwork=18*nrows`, `lrwork=24*nrows` and `liwork=10*nrows` to match `qutip.cy.brtools.ZHEEVR`).; 2. do some linear algebra work to determine that the eigenvectors we have returned are equivalent to the ones scipy has returned. 2 is a better solution, but harder to implement, especially in the presence of degenerate or near-degenerate eigenvalues (of which there are likely a lot around 0). 1 is very unsatisfying, but might be enough. In general, this problem will hopefully be solved a bit more thoroughly when `brmesolve` is updated to use the new data layer types, and we standardise the calculation of eigenvalues and -vectors across QuTiP. Hopefully someone has a better idea than me? @Ericgig, @nonhermitian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299:21,failure,failures,21,https://qutip.org,https://github.com/qutip/qutip/issues/1299,2,"['failure', 'recover']","['failures', 'recover']"
Availability,"This is code from a jupyter notebook in which I am trying to plot a graph of mesolve. Times is the variable that specifies the scale of the x axis (in units of s). I need to plot over 1ms, but it takes so long to plot that I think it just get stuck. If I plot over a much smaller scale, like 10^-6, it plots with no problem, but even then it can only do so if the number of points is small. It seems that the issue is with nsteps. As you can see, I have made nsteps very large already and if I make it any larger I get an error. I've tried debugging this to the best of my abilities but I've hit a dead end and I just can't find any useful info on nsteps online. %matplotlib inline. import matplotlib.pyplot as plt; import numpy as np; import qutip as q; import cmath; import matplotlib as mpl; from mpl_toolkits.mplot3d import Axes3D. rc_dict = {; ""figure.subplot.bottom"": 0.11,; ""figure.subplot.hspace"": 0.2,; ""figure.subplot.left"": 0.125,; ""figure.subplot.right"": 0.9,; ""figure.subplot.top"": 0.88,; ""figure.subplot.wspace"": 0.2,; ""figure.figsize"":(10,10/1.61),; ""axes.grid"": True,; ""text.usetex"": True,; ""grid.linestyle"": "":"",; ""grid.color"": ""black"", #; ""legend.fontsize"": 20,; ""lines.linewidth"": 2.5,; ""axes.linewidth"": 1.5,; ""font.family"": [""serif""],; ""font.sans-serif"": ""Times New Roman Bold"",; ""font.size"":26,; }; plt.rcParams.update(rc_dict). qutip_options = q.Odeoptions(; store_states=True,; nsteps=2000000000000; ). si, sx, sy, sz=q.qeye(2), q.sigmax(), q.sigmay(), q.sigmaz(); sp, sm=q.sigmap(), q.sigmam(); state_z_plus=q.basis(2,0); state_z_minus=q.basis(2,1); state_x_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + q.basis(2,1)); state_x_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - q.basis(2,1)); state_y_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + 1j* q.basis(2,1)); state_y_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - 1j* q.basis(2,1)). h = 6.62607015e-34; b = 0.1786195317554453 ; b_AC = 3.572390635108906e-05 ; g = 2; u = 9.274E-24 ; w = g*u*b/h . gamma_phi = 442; gamma_minus = 1. epsilon = g*u*b/h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1376:522,error,error,522,https://qutip.org,https://github.com/qutip/qutip/issues/1376,1,['error'],['error']
Availability,"This is just FYI because I needed some time to track this one down, but I do not think it can be fixed in qutip (or scipy). A Bug in Intel MKL causes scipy.linalg.eig to break and return zeros if the matrix is too large. This in turn breaks wigner.qfunc if the state in question is a density matrix. Possibly related are issues ; https://github.com/scipy/scipy/issues/8713 and https://github.com/scipy/scipy/issues/8205. However the fix mentioned there does not solve the problem for me, so it might be unrelated. If you run into this error, the only workaround I know of is to link scipy and numpy to a different blas library, e.g. openblas. Note that anaconda on windows always uses MKL on intel machines, so you need to install either manually or with pip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/937:62,down,down,62,https://qutip.org,https://github.com/qutip/qutip/issues/937,2,"['down', 'error']","['down', 'error']"
Availability,"This is my first attempt at fixing and slightly extending the functionality of the countstat_current_noise(); function in countstat.py. There were several issues with this function, which I have attempted to rectify as described below. Also its my first pull request (instead of asking anubhav or alex to help), so if I messed it up let me know. 1) The default method, a direct solution using sparse matrices, would fail with an ""exactly singular"" error on small examples (like the well studied single-resonant level or double quantum dot examples). The other sparse methods also suffered from the same issue, as did the 'direct' method for dense solutions. The latter, the dense matrices solver, I have fixed by capturing the error using lstsq() if np.linalg.solve() fails. For the sparse cases there seems to no equivalent fix. One can solve the issue by adding a small finite frequency to the definition of the shot noise. However, this seems like a bit of a bodge, and could cause issues if this small frequency is of the order of some system frequencies. So I have changed the default behavior to use the dense solvers, and added a description of the sparse matrix issues in the function description and in an example notebook I will upload to the example notebooks github. . Maybe someone can suggest a better fix?. 2) There was, in addition, an error in the definition of the shot noise formula in the default sparse matrix direct solution. In addition, the dense methods which used pinv() were also incorrectly defined (they were missing pre and post- multiplication by the 'Q' operator), and would thus give different results from the direct solutions. These issues have been fixed, and everything now fits expected analytical results (see example notebook). 3) I have added a frequency dependence via a list of possible frequencies at which to evaluate the shot noise. 4) I removed the option of passing a pseudo-inverse to the function directly, and changed various other interface things. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528:448,error,error,448,https://qutip.org,https://github.com/qutip/qutip/pull/528,2,['error'],['error']
Availability,This is post for discussion over whether it might be beneficial to switch from `nose` to another unit testing software. . - QuTiP is using nose for unit testing. A [disclaimer](https://nose.readthedocs.io/en/latest/) on that project homepage warns that nose might not be maintained in the future. . - [`nose2`](https://nose2.readthedocs.io/en/latest/differences.html) is the successor to `nose`. It is actively maintained. There are some [differences](https://nose2.readthedocs.io/en/latest/differences.html). . - [pytest](https://pytest.readthedocs.io/en/latest/) is another open-source solution. By comparing [nose2](https://github.com/nose-devs/nose2/graphs/contributors?from=2010-08-01&to=2019-02-27&type=a) and [pytest](https://github.com/pytest-dev/pytest/graphs/contributors?from=2009-04-05&to=2019-02-27&type=a) activity it seems that the latter has grown and is actively updated. . I wonder whether it would make sense to migrate to a more popular (possibly more robust?) software and how much work this would mean. Other implications are not clear to me at this moment.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958:972,robust,robust,972,https://qutip.org,https://github.com/qutip/qutip/issues/958,1,['robust'],['robust']
Availability,"This moves our entire testing apparatus over to GitHub Actions, since Travis has changed its pricing model and we can no longer rely on it. This actually has several advantages for us right now:; - better integration with other GitHub Actions workflows; - more concurrent jobs; - more access to Windows and macOS machines; - easier job dependency graphs within our resources. This first commit does not add in any Windows tests because they're currently known to fail, but the intention is to turn them on. The blocking issue is currently a failure of the multiprocessing capabilities, which also affects mcsolve. We can now reasonably run coverage reporting on every test run, and upload all of them to Coveralls at the end, so we get accurate stats on what lines were actually tested. I've also turned pytest's timer, so it reports all tests that took longer than a second to run. This should really help identify where the real problems in our testing are - right now you should see that there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:541,failure,failure,541,https://qutip.org,https://github.com/qutip/qutip/pull/1551,1,['failure'],['failure']
Availability,"This patch obsoletes #1429, by applying the packaging changes to the current version of `master` rather than needing the new structure on `dev.major`. This patch should (mostly) apply cleanly to `dev.major` as well, so merging this up will be easy - the new automated systems in `setup.py` also mean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:754,avail,available,754,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['avail'],['available']
Availability,"This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged to `master` (not just `dev.major`), there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:300,avail,available,300,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['avail'],['available']
Availability,"This removes the `CI_QUTIP_RELEASE` environment variable and the `--release` flag to `setup.py` in favour of deriving this information from the `VERSION` file. This file should now contain a `.dev` suffix on the `master` and `dev.major` branches to indicate that they are not releases, while release branches will omit it. This means that sdists will no longer attempt to build in local development mode. This also fixes the related bug in handling local versioning when `git` is not installed on the system by making sure any relevant errors are caught. Fix #1514 (after a new sdist release)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541:536,error,errors,536,https://qutip.org,https://github.com/qutip/qutip/pull/1541,1,['error'],['errors']
Availability,This resolves issue where running subsequent optimisations with pulses; where the number of timeslots changes; Also updated the save_amps method to allow for excluding the time column; and handling any error saving the file,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/281:202,error,error,202,https://qutip.org,https://github.com/qutip/qutip/pull/281,1,['error'],['error']
Availability,"This seems to fix the issue reported by Vlad on the Google group. This fixes the errors when using complex cmath header and typedef variables. Variables must be of float, int, or complex, not np.kind_t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/322:81,error,errors,81,https://qutip.org,https://github.com/qutip/qutip/pull/322,1,['error'],['errors']
Availability,This test seems to be failing with. ```; Sparse eigs Hermitian ... /home/travis/.travis/job_stages: line 57: 6699 Segmentation fault (core dumped) nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```; I will try and recreate locally,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871:127,fault,fault,127,https://qutip.org,https://github.com/qutip/qutip/issues/871,1,['fault'],['fault']
Availability,"This test would fail approximately 1 in 10 times. I have parametrised the test case so pytest sees the different dimension runs as separate elements, which gives us better information on what's going on. I have only seen the test fail on CI on Mac, as best as I remember, and after a bit of experimentation, I was able to reproduce the issue on my Mac at approximately the same frequency as we saw it on Travis, if I was using OpenBLAS. I couldn't reproduce the failures with MKL, so I'm fairly sure this is to do with our use of `eig` instead of `eigh` on Mac/OpenBLAS to avoid segfaults (see #1197, #1288). This makes some sense - the tolerances of `eig` are effectively slightly more permissive than `eigh` when dealing with real numbers, because there's more scope for an eigenvalue to be different by having a small imaginary component (contributes in quadrature) as opposed to only having the linear difference. I'm pretty confident that there's no logic error that caused the tolerances to slip a little, it's just a reality of dealing with an imperfect eigensystem solver, so I've relaxed the test tolerances by just a little. Fix #1431",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1474:462,failure,failures,462,https://qutip.org,https://github.com/qutip/qutip/pull/1474,5,"['error', 'failure', 'toler']","['error', 'failures', 'tolerances']"
Availability,"This trace out only occurred when adding system, and not things like mult. Caused several confusing errors.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/735:100,error,errors,100,https://qutip.org,https://github.com/qutip/qutip/pull/735,1,['error'],['errors']
Availability,"This tries to address https://github.com/qutip/qutip/issues/73 using some type conversion and some fused types. I see a unit test error due to some fortran thing, and a couple of unit test failures, but I don't know if they are related.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76:130,error,error,130,https://qutip.org,https://github.com/qutip/qutip/pull/76,2,"['error', 'failure']","['error', 'failures']"
Availability,"This updates the licence holders to be the ""QuTiP Admin Team"" (this is similar to how Numpy handle their licensing). This also updates the text of the licence file to a GitHub-readable version of the 3-clause BSD licence, so it should present better information to users as well. At present, erroneous whitespace in the licence file means that GitHub's detection can't tell what exactly the licence is. In addition, having the text of the licence in each file is redundant, and just made it more annoying to edit the files. It also made it much harder to update the information in the licence in order to put the whole admin team as copyright holders, so I have removed it. Again, this is in keeping with how other large-scale projects manage their licensing. We always distribute `LICENSE.txt` with all copies of the QuTiP source (either by clone of the repository, or by sdist). **Changelog**: update licence holders with regards to new governance model, and remove extraneous licensing information from source files.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579:463,redundant,redundant,463,https://qutip.org,https://github.com/qutip/qutip/pull/1579,1,['redundant'],['redundant']
Availability,"This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:; ```; File ""C:\Users\ym24chen\Anaconda3\; x = lu.solve(b, verbose=verbose); File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000000000008; envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; ```. Env info:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.1.0; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.2; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; ==============================================================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975:202,rollback,rollback,202,https://qutip.org,https://github.com/qutip/qutip/issues/975,1,['rollback'],['rollback']
Availability,"Thought I pitch that to you before continuing with the work. I use pep8 and pyflakes to check my python code on the fly. Currently there are plenty of faults that the two find and anything new I introduce would be drowned in the noise. Instead of turning it off I thought I might as well run through the main files and fix the errors. In principle this should not break anything because it is mostly things like trailing whitespaces, long lines and whitespaces around operators. Making these changes will touch a lot of lines though, so if you'd rather stick with the current codebase that's fine too. I'll just turn off the checkers and mothball this pull request :). So far I came as far as changing about.py and bloch.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/6:151,fault,faults,151,https://qutip.org,https://github.com/qutip/qutip/pull/6,2,"['error', 'fault']","['errors', 'faults']"
Availability,"To reproduce the problem:. - run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02. - Error message:. Traceback (most recent call last):; File ""as.py"", line 92, in <module>; mesolve(h_t, psi0, taulist, [], process_rho, args); File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208, in mesolve; _solver_safety_check(H, rho0, c_ops, e_ops, args); File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822, in _solver_safety_check; for ii in range(len(e_ops)):; TypeError: object of type 'function' has no len()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645:100,Error,Error,100,https://qutip.org,https://github.com/qutip/qutip/issues/645,1,['Error'],['Error']
Availability,Tracing out systems with dimensions 1 on multipilcation creates dimention missmatch errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823:84,error,errors,84,https://qutip.org,https://github.com/qutip/qutip/issues/823,1,['error'],['errors']
Availability,"Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR; BR Tools : zheevr ...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197:956,ERROR,ERROR,956,https://qutip.org,https://github.com/qutip/qutip/issues/1197,12,['ERROR'],['ERROR']
Availability,Travis CI failures for dnorm(),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484:10,failure,failures,10,https://qutip.org,https://github.com/qutip/qutip/issues/484,1,['failure'],['failures']
Availability,"Trying to run the Qutip `propagator` for a Hamiltonian that is a `QobjEvo` object does not work and will result in _Invalid time-dependent format_ error. Example of a piece of code. ```; N = 3; a = destroy(N); t_total = 10; tlist = np.linspace(0, t_total, 1000); H = a.dag()**2 * a**2; H1 = a.dag()*a; H_tot = QobjEvo([H,[H1,np.cos(tlist)]],tlist=tlist); prop = propagator(H_tot, tlist, []); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1166:147,error,error,147,https://qutip.org,https://github.com/qutip/qutip/issues/1166,1,['error'],['error']
Availability,"Two small bugs appeared in floquet steadystate in v5, this is a quick patch. **Description**; Two bugs:. 1) Small minus sign error in one of the terms (comparing to v4.7 and what is written in the old toolbox guide). 2) Some kind of data copying confusion with the S and T operators when updating their data contents with the results. Just initiating these two separately seems to fix it. other minor fix: updated the link to the toolbox guide. Some other minor niggles that I didn't fix:; - some of the optional solver methods dont work (seem not to support square right hand sides in '_data.solve()'. I didn't dig much on fixing these though. - the 'splu' method fails for a couple of reasons. I can get it to work by removing the choice of warnings as errors in 'solve.py' (which make it fail in other instances as well i suppose, like with normal steadystate()), making sure the solver option is not passed to steadystate(), and making sure that S and T are always converted back to CSR() after being updated in the iterative bit (in `steadystate_floquet()' they get returned as dense from _data.solve). I did not include those changes here though as the docstrings dont actually indicate support for splu anyway, so perhaps not needed. I am marking this as draft at the moment as I also want to update the test to be sensitive to these bugs (its a bit too coarse at the moment), and double check that the results from this solver are now correct. **Related issues or PRs**; fix #2386",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2393:125,error,error,125,https://qutip.org,https://github.com/qutip/qutip/pull/2393,2,['error'],"['error', 'errors']"
Availability,"Unexpected behaviour in ``Qobj.permute()`` in dev.major branch. **To Reproduce**; E.g. take any permutation of identity matrices for 'large' system size (e.g. `n>=16`), which should still result in the identity matrix:; ```python; >>> import numpy as np; >>> from qutip import tensor, qeye; >>> n = 16; >>> np.isclose(tensor([qeye(2)] * n).permute(list(range(n)))[0,0], 1.0); False; ```. **Expected behavior**; In this example, the permutation should do nothing and full matrix should be diag(1, 1, 1,...), but it is giving diag(0, 1, 1, ...). This occurs for me at `n>=16`. Note, the error is of course not confined to trivial permutations of the identity operator, but this seemed the cleanest case to present. **Your Environment**; QuTiP Version: 5.0.0b1.dev0+b862fe9; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.9; Number of CPUs: 4; BLAS Info: INTEL MKL; INTEL MKL Ext: True; Platform Info: Darwin (x86_64). **Additional context**; This affects the `expand` functions (e.g. `expand_operator`, `gate_expand_2toN`).; I do not get this error in v4.5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1382:585,error,error,585,https://qutip.org,https://github.com/qutip/qutip/issues/1382,2,['error'],['error']
Availability,Update diag_liou_mult test tolerances,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:27,toler,tolerances,27,https://qutip.org,https://github.com/qutip/qutip/pull/1486,1,['toler'],['tolerances']
Availability,"Update to the original 4.5.1 which is already a month old. New inclusions: . Better error message for failed string coefficient compilation.; Run the python 3.8 test in travis. (by Simon Cross ); Fix clebsch function for half-integer (by Thomas Walker); Deprecate graph function (by Jake Lishman); Fix travis warning (by Ivan Carvalho); Fix spin husimi/wigner functions (by maij). I would like the mac stuff to be fixed and moving the mac test to 3.8, but that will take some time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/pull/1215,1,['error'],['error']
Availability,"Updates the README to point various links at the new places in the documentation (this cannot be merged until qutip/qutip-doc#142 is merged and the docs are re-built on the website). As part of this, I tidied up the sections quite a lot and grouped similar ones together to make it a bit easier to read. I added some download and installation badges as well (see #983). Probably the best way to look at this PR is looking at [the rendered version on my fork](https://github.com/jakelishman/qutip/tree/update-readme#qutip-quantum-toolbox-in-python).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511:317,down,download,317,https://qutip.org,https://github.com/qutip/qutip/pull/1511,1,['down'],['download']
Availability,Updates to remove some of the errors from the Sphinx docs. Many errors in the control module have yet to be fixed.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/516:30,error,errors,30,https://qutip.org,https://github.com/qutip/qutip/pull/516,2,['error'],['errors']
Availability,Use versions available on conda,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2527:13,avail,available,13,https://qutip.org,https://github.com/qutip/qutip/pull/2527,1,['avail'],['available']
Availability,"Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:14723,ERROR,ERROR,14723,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"We get warnings when compiling using the mingw32 compiler under windows.; ```; ""unknown conversion type 'z' in format""; ```; The warnings only seem to occur during the tests and not the build_ext, so there may be something we can do with CFLAGS. ; I have done quite a lot of reading around and it seems many projects suffer from this. There did not seem to be a clear resolution, other than to change the C code. We don't seem to use the 'z' in any of our source, but it is found in all the so files, so I guess it is used in one of the dependencies, and hence I don't think we can take that approach.; The tests still seem to pass, so I am putting it down as a won't fix.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/597:652,down,down,652,https://qutip.org,https://github.com/qutip/qutip/issues/597,1,['down'],['down']
Availability,"We have a number of pull requests that are all nice fixes and enhancements, however we are delaying merging because of travis test failures. I can't see how any of these pull request can be an underlying cause:; #421; #422; #428; #429. So I will merge all these. We can then investigate what is causing some of the tests to fail under this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430:131,failure,failures,131,https://qutip.org,https://github.com/qutip/qutip/issues/430,1,['failure'],['failures']
Availability,"We were running the ""Steady State Solvers: Optomechanical System"" from QuTiP examples, but were repeatedly getting errors. Specifically, line 466 of `steadystate.py` tries to query `max_iter_refine` from `ss_args`, but this line is also executed when using a scipy solver, causing a `KeyError`. . We were using scipy specifically so that `use_precond` is a valid option.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017:115,error,errors,115,https://qutip.org,https://github.com/qutip/qutip/issues/1017,1,['error'],['errors']
Availability,What is the possible source of this installation error?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/911:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/issues/911,1,['error'],['error']
Availability,"When I follow the example to generate animation for bloch sphere plotting, i.e., page 120-122 from [this doc](http://qutip.org/downloads/4.2.0/QuTiP_4.2.pdf), I faced ; `'Axes3D' object is not iterable`; problem, which happens for the `save` function. > .../matplotlib/animation.py in save(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs); 1192 for anim in all_anim:; 1193 # Clear the initial frame; -> 1194 anim._init_draw(); 1195 for data in zip(*[a.new_saved_frame_seq() for a in all_anim]):; 1196 for anim, d in zip(all_anim, data):. > .../matplotlib/animation.py in _init_draw(self); 1755 raise RuntimeError('The init_func must return a '; 1756 'sequence of Artist objects.'); -> 1757 for a in self._drawn_artists:; 1758 a.set_animated(self._blit); 1759 self._save_seq = []. >TypeError: 'Axes3D' object is not iterable. My environment:. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.14.1; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.2.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836:127,down,downloads,127,https://qutip.org,https://github.com/qutip/qutip/issues/836,1,['down'],['downloads']
Availability,"When I run `ffmpeg -r 20 -b 1800 -i bloch_%01d.png bloch.mp4`; from the User Guide's [Generating Images for Animation; ](http://qutip.org/docs/4.1/guide/guide-bloch.html#generating-images-for-animation) section I get the following error:. ```; Option b (video bitrate (please use -b:v)) cannot be applied to input url %04d.png -- you are trying to apply an input option to an output file or vice versa. Move this option before the file it belongs to.; Error parsing options for input file bloch_%01d.png.; Error opening input files: Invalid argument; ```. What works for me instead is this:; `ffmpeg -r 20 -i bloch_%01d.png -pix_fmt yuv420p bloch.mp4`. Note: personally I print files as zeropadded 4-digit number, so I have %04d.png instead of bloch_%01d.png.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/799:231,error,error,231,https://qutip.org,https://github.com/qutip/qutip/issues/799,3,"['Error', 'error']","['Error', 'error']"
Availability,"When I was trying to run a script written with qutip on a cluster with Ubunt 18.04, python 2.7 conda 4.7.12 installed, the following error occurred. Traceback (most recent call last):; File ""test.py"", line 13, in <module>; from qutip import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobj.py"", line 2434, in <module>; import qutip.superop_reps as sr; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superop_reps.py"", line 61, in <module>; from qutip.superoperator import vec2mat, spre, spost, operator_to_vector; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superoperator.py"", line 408, in <module>; from qutip.qobjevo import QobjEvo; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobjevo.py"", line 515; raise TypeError(""Qobj not compatible."") from e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1119:133,error,error,133,https://qutip.org,https://github.com/qutip/qutip/issues/1119,1,['error'],['error']
Availability,"When calling `ssesolve` or `smesolve` without any stochastic collapse operators but `store_measurement` set to True, there is an IndexError. This PR fixes the error and adds a test for this situation. Example code:; ```python; import qutip as qt; r = qt.ssesolve(qt.sigmaz(), qt.basis(2, 1), [0, 1, 2], options={'store_measurement': True}, ntraj=15); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2423:159,error,error,159,https://qutip.org,https://github.com/qutip/qutip/pull/2423,1,['error'],['error']
Availability,"When reloading qutip in a jupyter notebook, the following error shows up. /home/arjan/.pyxbld/temp.linux-x86_64-3.8/pyrex/qutip/cy/openmp/parfuncs.cpp:703:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; 703 | #include ""src/zspmv_openmp.hpp""; | ^~~~~~~~~~~~~~~~~~~~~~. Due to this, I cannot make adjustments to the qutip code. I've reinstalled qutip, numpy, scipy, matplotlib, gcc (now version 9.3.0) and cython (0.29.27). That, so far, has not solved the issue. I've searched for this issue, and it seems it has been seen before. However, I could not find any information on how to resolve it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810:58,error,error,58,https://qutip.org,https://github.com/qutip/qutip/issues/1810,2,['error'],['error']
Availability,"When running eigenstates, function in line 1653 of qobj.py, I get the error ``` AttributeError: 'numpy.ndarray' object has no attribute 'norm' ```. I changed the contents of the function to:. ```python; evals, evecs = sp_eigs(self.data, self.isherm, sparse=sparse, sort=sort,; eigvals=eigvals, tol=tol, maxiter=maxiter); ekets = []; for i in range(len(evals)):; ekets.append(Qobj(evecs[i])); for ket in ekets:; ket = ket*(1./ket.norm()); return evals, ekets; ```. Which seems to work for me. **Your Environment**. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64). This is the machine I am currently using, but I has the same issue in an older (2011) Mac with 10.11.6 and a windows 10 PC.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1661:70,error,error,70,https://qutip.org,https://github.com/qutip/qutip/issues/1661,1,['error'],['error']
Availability,"When using the Qobj.permute function for a specific state and specific permutation we encounter the isherm-property to be set to False, while the state is Hermitian nevertheless. ; I attached the most minimalistic example I could built. . There we calculate a permutation of a small compound state that sets isherm=False, another one that works properly and a transformation (double transpose) that ""repairs"" the Qobj and sets isherm=True again. A double transpose of the state is our current work-around. With isherm=False you cannot calculate the partial trace of the density operator describing the state. [qutip_permute_isherm_bug.txt](https://github.com/qutip/qutip/files/3406839/qutip_permute_isherm_bug.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1051:400,repair,repairs,400,https://qutip.org,https://github.com/qutip/qutip/issues/1051,1,['repair'],['repairs']
Availability,When using the `average_states` solver option `general_stochastic` seemed to error when summing the timeslot states. This PR provides a fix for this. Also included is some hopefully more succinct messages from the safety checks in `general_stochastic`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115:77,error,error,77,https://qutip.org,https://github.com/qutip/qutip/pull/1115,1,['error'],['error']
Availability,Will take some trial and error to make this useful but has some interesting stats.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/974:25,error,error,25,https://qutip.org,https://github.com/qutip/qutip/pull/974,1,['error'],['error']
Availability,Work in progress. Fixed error in globalphase,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/145,1,['error'],['error']
Availability,Would it be useful to add error bars to mcsolve results once the averages are computed?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1032:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/1032,1,['error'],['error']
Availability,ZVODE error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822:6,error,error,6,https://qutip.org,https://github.com/qutip/qutip/issues/822,1,['error'],['error']
Availability,"[Terminal Saved Output.txt](https://github.com/qutip/qutip/files/67295/Terminal.Saved.Output.txt); Hi, I hope I'm handling this correctly, as I'm new to both qutip and git (recent MATLAB deserter)... I've been trying to set up qutip within my anaconda distribution using . ```; conda install -c https://conda.anaconda.org/jrjohansson qutip; ```. The package linking completes with no errors. But when I . ```; import qutip; ```. I get the following. ```; ImportError: Building module qutip.cy.spmatfuncs failed: ; [""CompileError: command 'gcc' failed with exit status 1\n""]; ```. After running. ```; conda update gcc; conda update cython; ```. I get the same error. I am running OS X 10.11.1. I'm really looking forward to using this software for thesis work, so I hope to get resolved ASAP! Thanks for reading.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409:384,error,errors,384,https://qutip.org,https://github.com/qutip/qutip/issues/409,2,['error'],"['error', 'errors']"
Availability,"[[3], [2]]], shape=(9, 6), type='super', isherm=False; Qobj data =; [[1. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 1. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 1. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]]; ```. So at the very least the behavior of spre has changed for nonsquare operators. I haven't installed the master branch to see what the current behavior is there but if I'm reading [this commit](https://github.com/qutip/qutip/commit/8d6883da7c373dc65fc3adb88b74c2b27e350db6#diff-53b46f507cc9fff2a9bd96162758693033d4d57ad7e06ea2b58ad3dcee2205d1) correctly, then it appears as though the master branch will just throw a `ValueError(""Can't create and identity like a non square matrix."")`. From searching throw past issues, it looks like these are the relevant pull requests:; - https://github.com/qutip/qutip/pull/1098; - https://github.com/qutip/qutip/pull/1491. For `sprepost` for rectangular operators, it's clear that the expected behavior should correspond to a supoperator taking density matrices in an input hilbert space to one in a potentially different dimensional output hilbert space. However, I think that it's not completely clear what behavior one should expect of `spre` (and `spost`) for rectangular operators. One potentially sensible behavior would be to view `spre` and `spost` as special cases of `sprepost` where one uses the identity isometry between input and output hilbert spaces to form a superoperator which will act like `sprepost(A, A.dag())`. However, I don't think such superoperators will necessarily correspond to CPTP channels as they may not admit Kraus decompositions which obey the completeness relation (I haven't actually checked this, it's just my intuition). Since it appears somewhat doubtful that anyone is currently using `spre` or `spost` with nonsquare operators, my suggestion would actually be to raise a more helpful error that acknowledges there still may be use cases for such a situation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2171:3718,error,error,3718,https://qutip.org,https://github.com/qutip/qutip/issues/2171,1,['error'],['error']
Availability,"_Edited 2020-08-10_. This is now a complete switch-over to the new `CSR` type, from `fast_csr_matrix`. There are huge changes and knock-on effects all across QuTiP. Most notably for user code is that arithmetic on `Qobj` is now massively faster for small `Qobj`. The instantiation cost of `Qobj` is reduced an awful lot, and internal functions which return `Qobj` now supply `dims` and `type` information to the constructor so that instantiation time is down from ~50-100µs to about ~5µs. Notable removals:; - `eseries` and `essolve` are completely gone; - OpenMP is temporarily removed (though this will be added back in to the data layer later); - all functions in `correlation` and `qobj` which were marked ""deprecated"" are now actually removed; - `vec2mat` and `mat2vec` have been renamed to `vector_to_operator` and `operator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), bu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:454,down,down,454,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['down'],['down']
Availability,"__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29279,ERROR,ERROR,29279,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"_______; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-package",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29356,ERROR,ERROR,29356,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"_ref = mesolve(H, rho0, times, c_ops, e_ops); #plot_expectation_values(result_ref); #plt.show(). L = liouvillian(H); D = lindblad_dissipator(c_ops[0]); d1_operator = L + D; def d1_rho_func(t, rho_vec):; return d1_operator * rho_vec. B1 = spre(c_ops[0]) + spost(c_ops[0].dag()); B2 = spre(c_ops[0]) + spost(c_ops[0].dag()); def d2_rho_func(t, rho_vec):; e1 = expect_rho_vec(B1.data, rho_vec, False); drho1 = B1 * rho_vec - e1 * rho_vec. e1 = expect_rho_vec(B2.data, rho_vec, False); drho2 = B2 * rho_vec - e1 * rho_vec. return np.vstack([1.0/np.sqrt(2) * drho1, -1.0j/np.sqrt(2) * drho2]); # Everything above is almost the same as the example. I only modified the following part; result = smesolve(H=H*0, rho0=ket2dm(rho0), times=times,; e_ops=e_ops,; d1=d1_rho_func, d2=d2_rho_func,; d2_len=2, ntraj=ntraj, nsubsteps=nsubsteps*2,; dW_factors=[np.sqrt(2/gamma), np.sqrt(2/gamma)],; store_measurement=True, map_func=parallel_map); ```. The error message; ```; ============================= test session starts ==============================; platform darwin -- Python 3.6.8, pytest-3.3.2, py-1.5.2, pluggy-0.6.0; rootdir: /Users/haiwen/PycharmProjects/Qutip_test, inifile:Total run time: 0.13s. test_smesolve2.py:None (test_smesolve2.py); multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:1883,error,error,1883,https://qutip.org,https://github.com/qutip/qutip/issues/1029,1,['error'],['error']
Availability,"_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29924,ERROR,ERROR,29924,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; lapack_armpl_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; openblas_lapack_info:; NOT AVAILABLE; openblas_clapack_info:; NOT AVAILABLE; flame_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; atlas_3_10_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; lapack_info:; libraries = ['lapack', 'lapack']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = f77; lapack_opt_info:; libraries = ['lapack', 'lapack', 'blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = c; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; include_dirs = ['/usr/local/include', '/usr/include']; Supported SIMD extensions in this NumPy install:; baseline = SSE,SSE2,SSE3; found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2; not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL; ```; So numpy itself marks openblas_info as NOT AVAILABLE (evidently using a build-time test, not runtime, which arguably is a pity). It seems to me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:1771,AVAIL,AVAILABLE,1771,https://qutip.org,https://github.com/qutip/qutip/issues/2053,19,['AVAIL'],['AVAILABLE']
Availability,"` vs `v5.0` with iterative scipy solvers, especially while using `use_rcm=True`. After spending some time, I believe the main key difference between both versions comes from permutation done in the `_permute_rcm`, where indices are permuted with the indices obtained from the `reverse_cuthill_mckee` function, and this prevents us from getting the preconditioner efficiently. In `v5.0`, for permuting, we use `_data.permute.indices` for the Liouvillian matrix `L`. This gives us different results from what we used in `v4.7`, i.e.,`sp_permute` with the same permuting indices. . As per my understanding, `_data.permute.indices` performs somewhat the following - ; ``` py; A = L.copy(); A.indices = perm.take(A.indices); A = A.tocsc(A); A.indices = perm.take(A.indices); ```; where, we previously, the following was being done; ``` py; L[perm[:,None], perm]; ```; with `perm` are obtained from `reverse_cuthill_mckee`. . I am not sure which behavior is the correct one, but the performance degradation is quite a lot (more than 10x) and prevents reaching sufficient enough tolerance. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import (about, destroy, qeye, steadystate, tensor). # Paramaeters; # -----------; Nc, Nm = 4, 30; E, kappa = 0.1, 0.3; gamma, delta = 3e-4, -0.43. # Operators; # ----------; a = tensor(destroy(Nc), qeye(Nm)); b = tensor(qeye(Nc), destroy(Nm)). # Hamiltonian; # ------------; H = -delta * (a.dag() * a) + (b.dag() * b) + 2.4 * kappa * (b.dag() + b) * (a.dag() * a) + E * (a.dag() + a). # Collapse operators; # -------------------; cc = np.sqrt(kappa) * a; cm = np.sqrt(2 * gamma) * b; cp = np.sqrt(gamma) * b.dag(); c_ops = [cc, cm, cp]. precond_options = {'permc_spec': 'NATURAL', 'diag_pivot_thresh': 0.1, 'fill_factor': 100, 'options': {'ILU_MILU': 'smilu_2'}}; solver_options = {""use_precond"": False, ""atol"": 1e-10, **precond_options}. rho_ss = steadystate(H, c_ops, method=""direct"", solver=""gmres"", use_rcm=True, **solver_options); ```. ### C",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2443:1216,toler,tolerance,1216,https://qutip.org,https://github.com/qutip/qutip/issues/2443,1,['toler'],['tolerance']
Availability,`Bloch` instance errors when trying render vectors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:17,error,errors,17,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['error'],['errors']
Availability,`Brmesolve` properly raise error when ode fails.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1966:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/pull/1966,1,['error'],['error']
Availability,"``` bash; correlation: comparing TLS emission correlations (str-list td format) ... capi_return is NULL; Call-back cb_f_in_zvode__user__routines failed.; ERROR; ```. It seems that we are passing an extra arg to the td cython ode function, but this error does not occur when running the tests once, only twice in a row. ``` bash; Traceback (most recent call last):; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/tests/test_correlation.py"", line 278, in test_str_list_td_corr; sm.dag(), sm.dag() * sm, sm, args=args); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 392, in correlation_3op_2t; solver=solver, args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1086, in _correlation_2t; args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1135, in _correlation_me_2t; ).expect[0]; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 280, in mesolve; progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 618, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 867, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/opt/local/Librar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:154,ERROR,ERROR,154,https://qutip.org,https://github.com/qutip/qutip/issues/269,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"```; from qutip import *; import numpy as np; #from mayavi import mlab; import matplotlib.pyplot as plt. b = Bloch(); pnt = [1/np.sqrt(3),1/np.sqrt(3),1/np.sqrt(3)]; b.add_points(pnt); Bloch().add_points(pnt); b.show(); qutip.about(); ```; gives the error in a Jupyter notebook:; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 339 pass; 340 else:; --> 341 return printer(obj); 342 # Finally look for special method names; 343 method = get_real_method(obj, self.print_method). /miniconda3/lib/python3.7/site-packages/IPython/core/pylabtools.py in <lambda>(fig); 242 ; 243 if 'png' in formats:; --> 244 png_formatter.for_type(Figure, lambda fig: print_figure(fig, 'png', **kwargs)); 245 if 'retina' in formats or 'png2x' in formats:; 246 png_formatter.for_type(Figure, lambda fig: retina_figure(fig, **kwargs)). /miniconda3/lib/python3.7/site-packages/IPython/core/pylabtools.py in print_figure(fig, fmt, bbox_inches, **kwargs); 126 ; 127 bytes_io = BytesIO(); --> 128 fig.canvas.print_figure(bytes_io, **kw); 129 data = bytes_io.getvalue(); 130 if fmt == 'svg':. /miniconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs); 2054 orientation=orientation,; 2055 dryrun=True,; -> 2056 **kwargs); 2057 renderer = self.figure._cachedRenderer; 2058 bbox_artists = kwargs.pop(""bbox_extra_artists"", None). /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs); 525 ; 526 else:; --> 527 FigureCanvasAgg.draw(self); 528 renderer = self.get_renderer(); 529 with cbook._setattr_cm(renderer, dpi=self.figure.dpi), \. /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in draw(self); 386 self.renderer = self.get_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:250,error,error,250,https://qutip.org,https://github.com/qutip/qutip/issues/1027,1,['error'],['error']
Availability,```; mesolve: time-dependence as string list ... /home/yuri/.pyxbld/temp.freebsd-10.2-STABLE-amd64-2.7/pyrex/rhs170529.c:725:24: error: '_Complex type-name' is invalid; typedef npy_double _Complex __pyx_t_npy_double_complex;; ```. Spotted on FreeBSD-10.2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/411:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/411,1,['error'],['error']
Availability,"`mesolve([],...)` fails while `mesolve(identity,...)` works. There is no failure if `rhs_reuse` is not involved. ```; File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 269, in mesolve; progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 602, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 949, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 866, in run; args[5:])); File ""rhs0.pyx"", line 13, in rhs0.cy_td_ode_rhs (/home/fas/jiang/sk943/.pyxbld/temp.linux-x86_64-3.4/pyrex/rhs0.c:1427); def cy_td_ode_rhs(double t, np.ndarray[CTYPE_t, ndim=1] vec, np.ndarray[CTYPE_t, ndim=1] data0, np.ndarray[int, ndim=1] idx0, np.ndarray[int, ndim=1] ptr0):; ValueError: Buffer dtype mismatch, expected 'double complex' but got 'double'; ```. Offtopic: is qutip trying to decide on its own when to use `rhs_reuse`? I had this phantom bug that never appeared in the ipython notebook, but appeared in batch scripts.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123:73,failure,failure,73,https://qutip.org,https://github.com/qutip/qutip/issues/123,1,['failure'],['failure']
Availability,"a_x \otimes \mathbb{I}$; the measurement function produces the correct eigenvalue (which is 1), but not the correct output density matrix $\rho_e$ (which should be equal to the input density matrix $\rho_i$, since the first qubit is already in the eigenstate of $\hat{O}$). ### Code to Reproduce the Bug. ```shell; import qutip. rho_1 = qutip.Qobj([[1,1],[1,1]]).unit() # Initialize two qubits, both in |+X>-state; rho_tot = qutip.tensor(rho_1, rho_1) # Density matrix of combined system. op = qutip.tensor(qutip.sigmax(), qutip.qeye(2)) # Measurement operator acting on first Qubit, measuring projection in x-direction. result = qutip.measurement.measure(rho_tot, op) ; print(result); ```. ### Code Output. ```shell; 50 % of the time:. (1.0, Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0. 0. 0. 0. ]; [0. 0.5 0. 0.5]; [0. 0. 0. 0. ]; [0. 0.5 0. 0.5]]). Other 50 % of the time:. (1.0, Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0.5 0. 0.5 0. ]; [0. 0. 0. 0. ]; [0.5 0. 0.5 0. ]; [0. 0. 0. 0. ]]); ```. ### Expected Behaviour. The correct result of the output matrix should be $rho_i$, as the input matrix is already an eigenstate of $\hat{O}$.; The output of the measurement shoud be:; $\rho_e = |X\rangle \langle X| \otimes |X\rangle \langle X| =$ [[0.25 0.25 0.25 0.25], [0.25 0.25 0.25 0.25], [0.25 0.25 0.25 0.25], [0.25 0.25 0.25 0.25]]. Instead the measurement output is given by:; $\rho_e = |X\rangle \langle X| \otimes |Z\rangle \langle Z|$ and $\rho_e = |X\rangle \langle X| \otimes |-Z\rangle \langle -Z|$; which is the expected output if the measurement operator would be $\hat{O} = \sigma_x \otimes \sigma_z$, instead of $\hat{O} = \sigma_x \otimes \mathbb{I}$. ### Your Environment. ```shell; QuTip version: 4.7.0; ```. ### Additional Context. The error does not occure if state vectors are used as input for the measurement.measure function instead of the density matrices.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2054:2309,error,error,2309,https://qutip.org,https://github.com/qutip/qutip/issues/2054,1,['error'],['error']
Availability,"ackages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ===================================================== 51 deselected, 52 warnings, 30 errors in 0.97s ===================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30957,ERROR,ERROR,30957,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"ad already installed numpy and scipy). ** This is what happens when I try it**; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Downloading qutip-4.5.0.tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.wh",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1199,ERROR,ERROR,1199,https://qutip.org,https://github.com/qutip/qutip/issues/1246,2,"['ERROR', 'error']","['ERROR', 'errored']"
Availability,"af717</code></a> Disallow special filenames on Windows</li>; <li><a href=""https://github.com/python-babel/babel/commit/3a700b5b8b53606fd98ef8294a56f9510f7290f8""><code>3a700b5</code></a> Run locale identifiers through <code>os.path.basename()</code></li>; <li><a href=""https://github.com/python-babel/babel/commit/5afe2b2f11dcdd6090c00231d342c2e9cd1bdaab""><code>5afe2b2</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/754"">#754</a> from python-babel/github-ci</li>; <li><a href=""https://github.com/python-babel/babel/commit/58de8342f865df88697a4a166191e880e3c84d82""><code>58de834</code></a> Replace Travis + Appveyor with GitHub Actions (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:2790,down,download,2790,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['down'],['download']
Availability,"age for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-secu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:3005,error,error,3005,https://qutip.org,https://github.com/qutip/qutip/pull/2458,2,"['error', 'failure']","['error', 'failure']"
Availability,"altivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltive",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67294,error,error,67294,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68052,error,error,68052,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"and compatible with previous syntax. **Description**; Operating System: MacOS Big Sur 11.0.1; CPU: Apple M1. The syntax of output of command ; ```; sysctl -n machdep.cpu.brand_string; ``` ; has been changed. The output for previous MacOS: ; ```; $ sysctl -n machdep.cpu.brand_string; Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n; ```. The updated output; ```; $ sysctl -n machdep.cpu.brand_string; VirtualApple @ 2.50GHz processor\n; ```. Therefore, the function [`_mac_hardware_info`](https://github.com/qutip/qutip/blob/cb201690a2ca3a9c904bc642ef6600f2ef54f763/qutip/hardware_info.py#L48) of file `hardware_info.py` cannot parse the frequency of CPU correctly. The popped error information is attached below. ```; ValueError: could not convert string to float: ' 2.50GHz proces'; ```. This pull request fix this problem and compatible with both syntax of hardware information. . Since the unit tests of file or function are not found, I do not add test files for this change. I attach python code below to prove the correctness of the implementation. ```python; # before change; old_str = 'Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n'; new_str = 'VirtualApple @ 2.50GHz processor\n'; # parse old hardware message; int(float(old_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); # parse new hardware message; int(float(new_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); ```. **Related issues or PRs**; No related issue. **Changelog**; Fixed error parsing hardware information for MacOS Big Sur (Apple M1 chip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401:672,error,error,672,https://qutip.org,https://github.com/qutip/qutip/pull/1401,2,['error'],['error']
Availability,"and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they are used by a solver and inform it when modified. More complex but give the image that it just work. ; - All options instance are read-only. To change a key, you create a new options. Simple for us. To modify an existing options we could make it callable: `updated_options = old_options(atol=1e-5)`.; - Passing bad options keys or wrong options types (`mesolve(..., SeOptions)`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2780,Error,Error,2780,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['Error'],['Error']
Availability,"are not engaged with the project, do not reply to communications or attend board meetings. . **<span style=""text-decoration:underline;"">Decisions</span>**; Each board member has a vote in decisions, which are taken by a majority vote. . **<span style=""text-decoration:underline;"">Communications</span>**; The board agrees to meet **[once a year]** (also via online meeting). The board is informed at least **[once a year]** by the Admin Team on QuTiP development and other activities (via email in the qutip-board channel). . ### 4. Non-profit Support; Since 2018, QuTiP is an affiliated project of [NumFOCUS](https://numfocus.org/), a 501(c)(3) nonprofit organization registered in the USA. The mission of NumFOCUS is to promote open practices in research, data, and scientific computing **[Unitary Fund](http://unitary.fund/)** pledges to support the QuTiP project as a fiscally sponsored project. QuTiP remains an affiliated project of NumFOCUS. [Unitary Fund](http://unitary.fund/) is a 501(c)(3) nonprofit organization registered in the USA working to create a quantum technology ecosystem that benefits the most people. Due to its role in the quantum software community, Unitary Fund pledges to: . * Promote the knowledge of QuTiP in the quantum software and sci-dev community.; * Provide scientific and technical software advice upon request of the Admin team and Board. ; * Provide logistic and financial support for code projects and meetings (subject to request by the QuTiP admins and availability of Unitary Fund funds). ; * Accept financial support on behalf of the QuTiP project. These funds will be allocated to and managed by the QuTiP admins on board’s approval in coordination with Unitary Fund. ; * Provide access to expert legal advice (subject to request by the QuTiP board or admin team and availability of Unitary Fund funds) through its legal counsel, useful for matters related to licensing, copyright, collaborations with industry and to protect the QuTiP brand and project.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:13756,avail,availability,13756,https://qutip.org,https://github.com/qutip/qutip/issues/1373,2,['avail'],['availability']
Availability,"arge-matrices-with-scipy-linalg-eigvalsh-in-an) , [bug report ](scipy/scipy#8205) that has been fixed by this [solution](scipy/scipy#11304) in the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); chi_matrix = to_chi(choi_matrix); test_supe = to_super(chi_matrix); ; # Assert both that the result is close to expected, and has the right; # type.; #print(test_supe.dims); #print(superoperator.dims); > assert (test_supe - superoperato",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:1223,ERROR,ERROR,1223,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['ERROR'],['ERROR']
Availability,"args):; t = np.clip(t, tlist_control_points[0], tlist_control_points[-1]); coeff = spline_corrected(t).item(); return coeff * h_drive. tlist_state_eval = np.linspace(-0.1, 1.1, int(1e4)). res_qobjevo = qt.sesolve(qobjevo, initial_state, tlist=tlist_state_eval, options=options); res_calling_qobjevo = qt.sesolve(calling_qobjevo, initial_state, tlist=tlist_state_eval, options=options); res_callable_corrected = qt.sesolve(callable_corrected, initial_state, tlist=tlist_state_eval, options=options). # complex argument of <1|s(t)>, for each state |s(t)> in the trajectory for each of the three Hamiltonians; angle_qobjevo = np.angle(np.array([np.array(s).flatten()[1] for s in res_qobjevo.states])); angle_calling_qobjevo = np.angle(np.array([np.array(s).flatten()[1] for s in res_calling_qobjevo.states])); angle_callable_corrected = np.angle(np.array([np.array(s).flatten()[1] for s in res_callable_corrected.states])). # the interpolated control value at time t can be recovered as the time derivative of the complex argument of <1|s(t)>; interpolated_controlvalue_qobjevo = np.gradient(angle_qobjevo, tlist_state_eval); interpolated_controlvalue_calling_qobjevo = np.gradient(angle_calling_qobjevo, tlist_state_eval); interpolated_controlvalue_callable_corrected = np.gradient(angle_callable_corrected, tlist_state_eval). fig, axs = plt.subplots(2); axs[0].plot(tlist_state_eval, interpolated_controlvalue_qobjevo, label='passing qobjevo', marker='.'); axs[0].plot(tlist_state_eval, interpolated_controlvalue_calling_qobjevo, label='passing qobjevo as callable'); axs[0].plot(tlist_state_eval, interpolated_controlvalue_callable_corrected, label='callable H, corrected'); axs[0].grid(); axs[0].legend(); axs[0].set_ylabel('interpolated values of control parameter'). axs[1].plot(tlist_state_eval, interpolated_controlvalue_calling_qobjevo - interpolated_controlvalue_qobjevo,; label='passing qobjevo as callable - qobjevo'); axs[1].plot(tlist_state_eval, interpolated_controlvalue_callable_correct",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2063:2201,recover,recovered,2201,https://qutip.org,https://github.com/qutip/qutip/issues/2063,1,['recover'],['recovered']
Availability,"args:; warnings.warn(""c_op_list argument name has been deprecated in favor of c_ops for consistency in the library. This will be remover in future versions."",; category=DeprecationWarning); c_ops = c_op_list; ```. To be honest, it looks like `kwargs` in `mesolve` should not be an option. It is only used to retrieve the `num_cpus` input from it. I would suggest deprecating it too and just add a new argument, `num_cpus` that is properly documented. . **To Reproduce**; ```python; a = qutip.destroy(10); H = a.dag() * a; c_ops = [a]; psi0 = qutip.coherent(10, 0.1); t_list = np.linspace(0, 25.0, 1001). # This works; result = qutip.mesolve(H, psi0, t_list, c_ops=c_ops, e_ops=[a]) . # This works and can be used to reproduce the above result. Note the kwarg is c_ops_list instead; # of c_ops as in mesolve.; U = qutip.propagator(H, t_list, c_op_list=c_ops). # This does not work as intended but it gets executed. That is because c_ops in interpreted as being part of kwargs. ; # The biggest issue is that no error is raised.; U1 = qutip.propagator(H, t_list, c_ops=c_ops); ```. **Expected behavior**; Functions in QuTiP should use the same name for the argument `c_ops`. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+5c73300; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Inf",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1716:1540,error,error,1540,https://qutip.org,https://github.com/qutip/qutip/issues/1716,1,['error'],['error']
Availability,"ary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:27337,ERROR,ERROR,27337,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"aul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+d377c997; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: None; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+; d377c997-py3.7-macosx-10.9-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+d377c997-py3.7-macos; x-10.9-x86_64.egg/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:2042,ERROR,ERROR,2042,https://qutip.org,https://github.com/qutip/qutip/issues/1093,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"ax_step = 1; qset.save(); print(Options().atol); >>> 1e-10; ```; `atol = 1e-10` and `max_step = 1` will be kept as default in future sessions. `qset.options.reset` to go back to qutip's default. I believe that loading custom settings when importing qutip will be appreciated with support of both `dense` and `sparse` most researchers will have a preference depending on their domain. This also brings all settings in one place: `qutip.settings...` even if we split the code in ""core"", ""solver"", ""qip?"", etc. Lastly, creating and moving around an `Options` object is no longer needed, changing the default before using the solver has the same effect. . For developers:; Principally @jakelishman as I expect you to add settings for core. ; I went with an implementation similar to python `dataclass`. To add `core`'s settings to `qutip.settings` you would do ""; ```; from qutip.settings import QtOptionClass. @QtOptionClass(""core""); class CoreOptions:; basetype = ""Dense""; auto_tidyup = True; ...; ```; And it would create the `__init__`, `__repr__`, `save`, `load` and `reset` methods, and create the default instance as `qutip.settings.core`. All attributes that do not start with ""_"" and are one of `bool`, `str`, `int`, `float`, `complex` will be in tagged to be saved and loaded. Those are the only types available now, but other can be added if needed. In `__init__` all these + properties with a setter can be initiated as keyword arguments. '__repr__' 'print' all the saved attributes and properties.; This is for the likes of `has_openmp`, I would make it a read only property. Another way of doing this would have been to use a parent class and a ""register"" functions. I went with this one because the signature of `__init__` in help was cleaner. I have both implemented so if qip of control want to use the base without registering to `qutip.settings`, I can change the PR. (@ajgpitch, @BoxiLi ). Build on top of #1289. . **Changelog**; Solver options can be set in `qutip.settings.options`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297:1720,avail,available,1720,https://qutip.org,https://github.com/qutip/qutip/pull/1297,1,['avail'],['available']
Availability,"ay while explicitly specifying the matrix dimensions in the `dims` parameter. Upon passing the density matrix to `mesolve` a segmentation fault occurs. A simple proof of concept is included below. `np.random.random` was used to fill the matrix in this case, but the issue was encountered using valid density matricies, and the issue seems to be unrelated to whether the matrix is valid or not as a density matrix. ### Code to Reproduce the Bug. ```shell; import qutip as qtip; import numpy as np. dim = 100 # Small dims don't work. I assume python has some buffer after the array; H = qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1198,fault,fault,1198,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,"b95d49fcabdc9ecbca0554""><code>e8abcd0</code></a> Bump pypa/gh-action-pypi-publish from 1.8.14 to 1.9.0 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/292"">#292</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/124f4adf171e15cd9a91a8b6e0325ecc97be8fe1""><code>124f4ad</code></a> 2024.06.02 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/291"">#291</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/c2196ce5d6ee675b27755a19948480a7823e2c6a""><code>c2196ce</code></a> --- (<a href=""https://redirect.github.com/certifi/python-certifi/issues/290"">#290</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/fefdeec7588ff1c05214b85a552afcad5fdb51b2""><code>fefdeec</code></a> Bump actions/checkout from 4.1.4 to 4.1.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/289"">#289</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/3c5fb1560b826a7f83f1f9750173ff766492c9cf""><code>3c5fb15</code></a> Bump actions/download-artifact from 4.1.6 to 4.1.7 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/286"">#286</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4a9569a3eb58db8548536fc16c5c5c7af946a5b1""><code>4a9569a</code></a> Bump actions/checkout from 4.1.2 to 4.1.4 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/287"">#287</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3""><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/288"">#288</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:2022,down,download-artifact,2022,https://qutip.org,https://github.com/qutip/qutip/pull/2483,1,['down'],['download-artifact']
Availability,"brary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:24632,ERROR,ERROR,24632,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"brary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:5740,ERROR,ERROR,5740,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 335, in run_setup; exec(code, locals()); File ""<string>"", line 247, in <module>; File ""<string>"", line 46, in process_options; File ""<string>"", line 130, in _determine_version; AttributeError: module 'packaging.version' has no attribute 'LegacyVersion'; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> See above for output. note: This error originates from a subprocess, and is likely not a problem with pip.; ```. ### Expected Behaviour. Should install `qutip` without errors. ### Your Environment. ```shell; QuTip Version: 4.7.0; Python version: 3.11.0; `packaging` version: 22.0; `pip` version: 22.3.1; ```. ### Additional Context. I explicitly mention Python 3.11 because I failed to replicate the issue on a fresh Python 3.10 environment. . EDIT: Looking deeper into the [qutip built distributions](https://pypi.org/project/qutip/#files), the reason why this is failing only for Python 3.11 is because earlier versions of Python have built distributions, unlike Python 3.11. . This indicates that building the wheel from source is generally broken, which I confirmed by forcing an installation from source on Python 3.10 with; ```bash; pip install qutip --no-cache-dir --no-binary :all:; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:2434,error,error,2434,https://qutip.org,https://github.com/qutip/qutip/issues/2036,2,['error'],['error']
Availability,"c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'falti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66013,error,error,66013,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"cense"" for more information. > > > from qutip import *; > > > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > > > Please check your Xcode installation; > > > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > > > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > > > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > > > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > > > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > > > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > > > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > > > compilation terminated.; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 213, in <module>; > > > from qutip.qobj import *; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; > > > from qutip.ptrace import _ptrace; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; > > > from qutip.sparse import sp_reshape; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in <module>; > > > from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/cy/__init__.py"", line 1, in",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:1309,error,error,1309,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['error'],['error']
Availability,"ces come into multiple sub classes as proposed : `Space`, `SuperSpace`, `Field`, `Compound`, and `EnrSpace`.; Splitting maps and spaces simplify spaces by not needing to have a dummy 2nd dims : `Space()[1]` does exist. Dimensions can be initiated from a list and converted back to one. Field are automatically contracted: `Compound(Field, Field)` is a `Field`, same for maps. With the exceptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to the Superspace instead of the dimensions, for now. But a better look at super operator representation is needed. At the present state, `Qobj.dims` take and return a list, keeping the dimension object internally. From there, minimal adjustment were made so test pass. The eigenstate fix in #1820 is already merged since it would create `Qobj` which dims and shape did not match. ToDo:. - [x] Tensor using dimension directly instead of list.; - [x] QobjEvo.dims use dimension object.; - [",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1826:1463,Error,Error,1463,https://qutip.org,https://github.com/qutip/qutip/pull/1826,1,['Error'],['Error']
Availability,"cessing qutip; Writing /home/jakeargent/qutip/setup.cfg; Running setup.py -q bdist_egg --dist-dir /home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/spmatfuncs.c -o build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1; `. Then, I cloned the qutip/qutip repository, and tried to ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:1665,error,error,1665,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability,"citly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68754,error,error,68754,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"clude altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebre",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68169,error,error,68169,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,compiler error in anaconda qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/issues/409,1,['error'],['error']
Availability,corr_mat casting made explicit; A cast from object to complex that was acceptable in numpy 1.9; was failing in numpy 1.10; This was causing an error in #379 Travis tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/380:143,error,error,143,https://qutip.org,https://github.com/qutip/qutip/pull/380,1,['error'],['error']
Availability,correlation and mcsolve tests error without cython,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/449:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/issues/449,1,['error'],['error']
Availability,"d packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status 'done'; Collecting scipy>=1.0; Using cached scipy-1.7.3-1-cp39-cp39-macosx_12_0_arm64.whl (27.0 MB); Collecting pyparsing!=3.0.5,>=2.0.2; Using cached pyparsing-3.0.6-py3-none-any.whl (97 kB); Building wheels for collected packages: numpy; Building wheel for numpy (pyproject.toml): started; Building wheel for numpy (pyproject.toml): finished with status 'error'; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmp8u8pmfcw_in_process.py build_wheel /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmpcrdfx79e; cwd: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; Complete output (881 lines):; Running from numpy source directory.; numpy/random/_bounded_integers.pxd.in has not changed; numpy/random/_philox.pyx has not changed; numpy/random/_bounded_integers.pyx.in has not changed; numpy/random/_sfc64.pyx has not changed; numpy/random/_mt19937.pyx has not changed; numpy/random/bit_generator.pyx has not changed; Processing numpy/random/_bounded_integers.pyx; numpy/random/mtrand.pyx has not changed; numpy/random/_generator.pyx has not changed; numpy/random/_pcg64.pyx has not changed; numpy/random/_common.pyx has not changed; Cythonizing sources; blas_opt_info:; blas_mkl_info:; customize UnixCCompiler; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:2358,error,error,2358,https://qutip.org,https://github.com/qutip/qutip/issues/1740,3,"['ERROR', 'error']","['ERROR', 'error', 'errored']"
Availability,"dnorm tests have historically been very flaky, and for as long as we're using random tests (which we possibly shouldn't be), we always run the risk of temperamental failures. In particular, the semidefinite solvers used in dnorm fail every now and again on random states; we historically haven't treated this as a bug, since it's pretty similar to an integration failing to converge because the system was too stiff. It means that the user has to adjust some settings and try again. To prevent this sort of error from failing our test suite, however, we can mark the tests as being allowed to rerun twice on a failure. We had a relatively small sample to judge the test failure rate by, but my very very approximate guess is that we'd have a failure about 1 in 10 runs on Travis. We counter this with two strategies:. 1. parametrise the tests in pytest style, so each random repetition is a separate instance, and known to pytest (some of this was done in earlier commits); 2. allow 2 reruns of every dnorm test. The two of these together should remove all random failures; since all random loops have been moved into pytest-handled repeats, there are far fewer calls to dnorm handled within each test. This means less chance that an individual test run will fail, but a slightly higher chance the entire suite will. Now with the test re-running a single failure point is tried again up to twice more, to determine if it was just a one-off, or if the test is truly broken. The reruns are handled by a pytest plugin pytest-rerunfailures. It's quite nontrivial behaviour to hook this in to the pytest mechanism, so better to use an external dependency to do it than to vendor in a custom version. The dnorm problems have resurfaced a little after lying dormant for a long time, because #1463 reactivated them. Before that, they'd not actually been running because none of the test runners had cvxpy installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490:165,failure,failures,165,https://qutip.org,https://github.com/qutip/qutip/pull/1490,7,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,"dnorm()` method to calculate the diamond norm distance between two channels I am greeted with an error and the operation fails. Rather than an error I expected the output to be a number between 0 and 2. See the simple example below. ```; from qutip import destroy, qeye, fock_dm, kraus_to_choi. # Choi matrix for 1 qubit amplitude damping channel with probability p; def AmpDampChoi(p):; Kraus = [(1-p)**.5*qeye(2),p**.5*destroy(2),p**.5*fock_dm(2,0)]; return kraus_to_choi(Kraus). # Choi matrix for identity channel on 1 qubit; IdChoi = kraus_to_choi([qeye(2)]). # These values are found without issue but since they're all CPTP maps they all have dnorm 1; print(IdChoi.dnorm()); print(AmpDampChoi(0).dnorm()); print(AmpDampChoi(0.64).dnorm()). # These trivial diamond norm distances between a channel and itself are also produced; print(IdChoi.dnorm(AmpDampChoi(0))); print(IdChoi.dnorm(IdChoi)); print(AmpDampChoi(0.5).dnorm(AmpDampChoi(0.5))). # If a diamond norm distance between two different channels is sought then we see the error; print(IdChoi.dnorm(AmpDampChoi(0.5))); print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))); ```. Attempting to run either of the final two prints gives the following spiel:. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); TypeError: float() argument must be a string or a number, not 'csr_matrix'. The above exception was the direct cause of the following exception:. ValueError Traceback (most recent call last); <ipython-input-21-add6d3e56036> in <module>; 20 ; 21 # If a diamond norm distance between two different channels is sought then we see the error; ---> 22 print(IdChoi.dnorm(AmpDampChoi(0.5))); 23 print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))). ~/.local/lib/python3.8/site-packages/qutip/qobj.py in dnorm(self, B); 1881 ; 1882 """"""; -> 1883 return mts.dnorm(self, B); 1884 ; 1885 @property. ~/.local/lib/python3.8/site-packages/qutip/metrics.py in dnorm(A, B, solver, verb",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422:1078,error,error,1078,https://qutip.org,https://github.com/qutip/qutip/issues/1422,1,['error'],['error']
Availability,"e ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 73, in test_sparse_symmetric_reverse_permute; B=sparse_reverse_permute(x,perm,perm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Nonsymmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 89, in test_sparse_nonsymmetric_reverse_permute; B=sparse_reverse_permute(x,rperm,cperm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Bandwidth. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 144, in test_sparse_bandwidth; out2=sparse_bandwidth(B); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 603, in sparse_bandwidth; return _sparse_bandwidth(A.indices, A.indptr, nrows); File ""sparse_utils.pyx"", line 42, in qutip.cy.sparse_utils._sparse_bandwidth (qutip/cy/sparse_utils.c:1458); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73:1719,ERROR,ERROR,1719,https://qutip.org,https://github.com/qutip/qutip/issues/73,1,['ERROR'],['ERROR']
Availability,"e -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; ```. ### Expected Behaviour. Qutip should build against a newer version of Numpy. ### Your Environment. Can't get output of `Qutip.about()`. MacBook Pro 2021 with M1 Pro. Python 3.9.* (miniconda and Miniforge). ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:70797,error,errored,70797,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['errored']
Availability,"e for maps. With the exceptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to the Superspace instead of the dimensions, for now. But a better look at super operator representation is needed. At the present state, `Qobj.dims` take and return a list, keeping the dimension object internally. From there, minimal adjustment were made so test pass. The eigenstate fix in #1820 is already merged since it would create `Qobj` which dims and shape did not match. ToDo:. - [x] Tensor using dimension directly instead of list.; - [x] QobjEvo.dims use dimension object.; - [x] state and operator accept dimension.; - [ ] Super operator representation.; - [ ] Ptrace, partial_transpose and permute use dimension object (supported with enr states).; - [ ] Flags / new types for rectangular operator?; - [ ] List dimension manipulation function in dimension.py should support the class/ be integrated in it / removed. **Related issues or PR",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1826:1881,error,error,1881,https://qutip.org,https://github.com/qutip/qutip/pull/1826,1,['error'],['error']
Availability,"e left: 00:00:00:04; 60.0%. Run time: 5.07s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.50s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.88s. Est. time left: 00:00:00:01; Total run time: 5.99s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_heterodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 119, in test_ssesolve_heterodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.81s. Est. time left: 00:00:00:27; 20.0%. Run time: 4.76s. Est. time left: 00:00:00:19; 32.0%. Run time: 5.66s. Est. time left: 00:00:00:12; 40.0%. Run time: 5.67s. Est. time left: 00:00:00:08; 52.0%. Run time: 6.59s. Est. time left: 00:00:00:06; 60.0%. Run time: 6.65s. Est. time left: 00:00:00:04; 72.0%. Run time: 7.53s. Est. time left: 00:00:00:02; 80.0%. Run time: 8.38s. Est. time left: 00:00:00:02; Total run time: 8.43s. --------------------- >> end captured stdout << ----------------------. ----------------------------------------------------------------------; Ran 320 tests in 1336.173s. FAILED (SKIP=7, errors=6)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:10773,error,errors,10773,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['error'],['errors']
Availability,"e your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29512,ERROR,ERROR,29512,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"e-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well, all of them seem to fail with a similar issue. Whatever is exit status 1. ([This](http://stackoverflow.com/questions/35991403/python-pip-install-gives-command-python-setup-py-egg-info-failed-with-error-c) is the SO solution I followed, it claims that error code is related to operation not permitted or setuptools not being installed. I upgraded the setuptools, pip doesn't work with sudo (I'm guessing it should",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4996,error,error,4996,https://qutip.org,https://github.com/qutip/qutip/issues/639,2,['error'],['error']
Availability,"e/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries tatlas,tatlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries tatlas,tatlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_3_10_threads_info'>; NOT AVAILABLE; ; atlas_3_10_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries satlas,satlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries satlas,satlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries satlas,satlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_3_10_info'>; NOT AVAILABLE; ; atlas_threads_info:; Setting PTATLAS=ATLAS; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries ptf77blas,ptcblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_threads_info'>; NOT AVAILABLE; ; atlas_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries f77blas,cblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries f77blas,cblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries f77blas,cblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_info'>; NOT AVAILABLE; ; FOUND:; extra_compile_args = ['-faltivec', '-I/System/Library/Frameworks/vecLib.framework/Headers']; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:7087,AVAIL,AVAILABLE,7087,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['AVAIL'],['AVAILABLE']
Availability,"e/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > Diagonalization of random two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > Failure: ValueError (invalid literal for int() with base 10: '1post0') ... ERROR; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=True) ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 5.72e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:2798,Failure,Failure,2798,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['Failure'],['Failure']
Availability,"e/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 8.35e+14); > > > warnings.warn(msg, UmfpackWarning); > > > /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.03e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; # ; ## ERROR: Failure: ValueError (invalid literal for int() with base 10: '1post0'). Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/loader.py"", line 411, in loadTestsFromName; addr.filename, addr.module); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 47, in importFromPath; return self.importFromDir(dir_path, fqname); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n, d in enumerate(str_list[:3])]); ValueError: invalid literal for int() with base 10: '1post0'; # ; ## ERROR: mesolve: simple time-dependence as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:14268,ERROR,ERROR,14268,https://qutip.org,https://github.com/qutip/qutip/issues/126,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,"ean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:1315,avail,available,1315,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['avail'],['available']
Availability,"easily add new methods. . With this, time-dependent system are managed by `QobjEvo`, ODE by `Evolver`, therefore the solvers can concentrate more closely on the physic. **Evolver:**; Method supported with this PR: `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip's evolver, mostly for Verner's method. . ##### progress_bar:; Added a progress bar passed on `tqdm`. `update` no longer need the iteration number. ##### parallel map:; - Added a `loky` based parallel map, hopefully will help windows users.; - Added a `reduce_func` input. Presently the map function is saving all results and the average, std, etc. are only computed at the end. There was no real advantage in saving only average values since all trajectories were in memory at the end of the map. But users expected lower memory usage when asking for only the results average.; - Added `timeout` opt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:2000,avail,available,2000,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['avail'],['available']
Availability,"educe the actual problem from the pytest output:. ```shell; $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ................................................................................................................F........F..................................... [ 81%]; .......................................s [100%]. ============================================================================== FAILURES ===============================================================================; __________________________________________________________________________ test_CoeffOptions __________________________________________________________________________. @pytest.mark.requires_cython; def test_CoeffOptions():; from itertools import combinations; base = ""1 + 1. + 1j""; options = []; options.append(CompilationOptions(accept_int=True)); options.append(CompilationOptions(accept_float=False)); options.append(CompilationOptions(static_types=True)); options.append(CompilationOptions(try_parse=False)); options.append(CompilationOptions(use_cython=False)); coeffs = [coefficient(base, compile_opt=opt) for opt in options]; for coeff in coeffs:; assert coeff(0) == 2+1j; for coeff1, coeff2 in combinations(coeffs, 2):; > assert not isinstance(coeff1, coeff2.__class__); E AssertionError: assert not True; E + where True = isinstance(<qutip.core.cy.coefficient.StrFunctionCoefficient object at 0x7f86f86a7d40>, <class 'qutip.core.cy.coefficient.StrFunctionCoefficient'>); E + where <class '",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:4128,FAILURE,FAILURES,4128,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['FAILURE'],['FAILURES']
Availability,"eights enter all trajectory averages. This concept is a generalization of two things that are already in qutip:; * The influence martingale in `nm_mcsolve` is simply a time-dependent weight from this point of view; * The ""improved sampling"" option for `mcsolve` weights the no-jump trajectory with its exact probability, and then only samples from the ensemble of trajectories with at least one jump. Currently, these two things cannot be combined: ""improved sampling"" does not work for `nm_mcsolve`. With these changes, it would work.; In the future, there might be at least one more application for weighted trajectories:; * For mixed initial states in `mcsolve`, it might be useful to allow sampling of initial states with frequencies or probabilities that are different from their true prefactor in the initial state. The ratio between the sampling frequencies and true prefactors would be weights on the trajectories. This also fixes some things in merging `McResult`s and `NmmcResult`s, and perhaps fixes the target tolerance computation for the ""improved sampling"" option. **Implementation**. A difficulty in the implementation is that the weights depend on the total number of trajectories in different ways. For example, the no-jump trajectory has a fixed weight that never changes, but all other trajectories come with prefactors $(1-p_0) / (N-1)$ where $p_0$ is the probability of the no-jump trajectory, and $N$ the total number of trajectories (including the one no-jump trajectory). For this reason, I separate weights into *absolute weights* (like $p_0$) and *relative weights* (like the others). The average is performed as follows:. $$ \bar\rho = \sum_{T: \text{abs}} w_a(T) w_r(T) \rho(T) + \frac{1}{N_{\text{rel}}} \sum _{T: \text{rel}} w_r(T) \rho(T) $$. where the first sum is over all trajectories T that have absolute weights, and the second sum over all other trajectories. Here, $w_a(T)$ and $w_r(T)$ are the absolute and relative weights, $\rho(T)$ the state associated with ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2369:1109,toler,tolerance,1109,https://qutip.org,https://github.com/qutip/qutip/pull/2369,1,['toler'],['tolerance']
Availability,"el or chosed communication medium, through the repositories’ maintenance, and with regular virtual or in-person meetings. The admin team drafts a report, [once] a year and submits it to the Board to inform it of developments on the project. ### 3. Board; **Members of the Board make sure that the Admin Team and project is well supported financially and logistically.** Thanks to them helping enable the financial and logistics support, through scientific advisory and by keeping an eye on the project, they make the life of the admin team easier. . **<span style=""text-decoration:underline;"">Tasks</span>**; Board members are volunteers that pledge to:. - Meet** [once] **a year to review the development of the project (also online).; - Be consulted for scientific advice by the admins. ; - Help settle conflicts or roadblocks that may arise on the project development. ; - Help review student applications of interns that may volunteer or work on the QuTiP project.; - Try to provide funding for QuTiP development and maintenance.; - Become ambassadors for scientific open source in general and QuTiP in particular.; - Take formal decisions to allocate eventual funds, upon recommendation of the Admin Team. . **<span style=""text-decoration:underline;"">Composition</span>**; Initial board members are invited by the admin team, based on their track-record in supporting the project and future helping it grow. The admins elect new board members, in agreement with existing board members or upon the suggestion of the current board. Additional prospective board members should send an email with their proposed candidature and two brief statements: one explaining their past involvement with the QuTiP project and one with their commitment to the QuTiP for the future, e.g., how they would help and support the project in their activity. The minimum number of board members is **[three]** and maximum is **[seven]**. Board seats are held **[indefinitely]**. The board can decide, by majority vote, t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:11224,mainten,maintenance,11224,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['mainten'],['maintenance']
Availability,"ems. The default can be changed using context (mainly for tests) or setting items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1721,error,error,1721,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['error'],['error']
Availability,"en(pulse_set)), ['c_x', 'c_x_bug']):; plt.subplot(len(pulse_set),1,idx+1); plt.plot(time_test,pulse_set[idx](time_test,None),label=name); plt.legend(loc=1); plt.xlabel('time'); plt.show(). for idx, name in zip(range(len(pulse_set)), ['c_x', 'c_x_bug']):; H = [Hsys['Hq'],[Hsys['Hc_x'], pulse_set[idx]]]; result = qu.mesolve(H, psi0, time_test, Hsys['Hlbld'],; [qu.sigmax(), qu.sigmay(), qu.sigmaz()],; progress_bar=None, options=None); b = qu.Bloch(); b.clear(); Pg, Pe = [], []; qu_blochs = result.expect; plt.title('probability of excited state'); for i,j,k in zip(qu_blochs[0],qu_blochs[1],qu_blochs[2]):; points = [i,j,k]; b.add_points(points); P0, P1 = (1+k)/2.0, (1-k)/2.0; Pg.append(P0); Pe.append(P1); plt.subplot(len(pulse_set),1,idx+1); plt.plot(time_test, Pe, label=name); plt.legend(loc=1); bloch_set.append(b); plt.xlabel('time'); plt.show(); if bloch:; bloch_set[0].show(); bloch_set[1].show(); return result. # to run the test:; test_mesolve(time_test=np.arange(0,100,0.5), show_seq=True, bloch=False); ```. The terminal out put is; ```; ![sequence](https://user-images.githubusercontent.com/41005903/82047831-11976380-96e6-11ea-869d-7278ba1cbeaa.png); ![probability](https://user-images.githubusercontent.com/41005903/82047837-12c89080-96e6-11ea-98d6-0ba6528a50ad.png); ```. **Expected behavior**; As discussed above. **Your Environment**. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.1; Numpy Version: 1.15.2; Scipy Version: 1.1.0; Cython Version: 0.28.4; Matplotlib Version: 3.0.3; Python Version: 3.5.5; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: D:\anaconda\envs\py3.5\lib\site-packages\qutip. **Additional context**; This issue is the same bug mention by @xlelephant at #1038 , but after trying the tweaking option mentioned by @nwlambert , we still get the same error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1265:3616,error,error,3616,https://qutip.org,https://github.com/qutip/qutip/issues/1265,1,['error'],['error']
Availability,"enr_fock is incompatible with enr_destroy. Minimal code:; ```; x = enr_destroy([3,3],2); y = enr_fock([3,3],2,[1,1]); x[0]*y; ```; returns an error. I believe the problem is that the problem is that y has dim = [[3, 3], 1] instead of dim = [[3, 3], [1,1]].",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/820:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/820,1,['error'],['error']
Availability,"erator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), but the ""proper"" unqualified access `from qutip import mesolve` remains unchanged. This is for internal code organisation purposes. The integral type used as the indices in the `CSR` type is now done by simple typedef in the files `qutip/core/data/base.{pyx,pxd}`, so changes it in those two files at compile-time will allow you to switch between 32-bit and 64-bit. The C++ backing source file `zspmv.cpp` and its associated header are renamed to `matmul_csr_vector` to match the new data-layer naming conventions, but more importantly, the functions are now templated over integral types so they will ""magically"" work at either size. In general, `setuptools` likes to link dynamically (on Linux and Mac, but not Windows), and so the templates have to be made explicit, rather than allowing Cython to generate only the necessa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:1823,avail,available,1823,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['avail'],['available']
Availability,"erhauls how QuTiP is packaged and distributed. Once this patch is merged to `master` (not just `dev.major`), there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:1026,avail,available,1026,https://qutip.org,https://github.com/qutip/qutip/pull/1429,2,"['avail', 'down']","['available', 'download']"
Availability,error Qobj,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848:0,error,error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1848,1,['error'],['error']
Availability,error in using brmesolve with arguments,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1150:0,error,error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1150,1,['error'],['error']
Availability,"es openblas,lapack not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; flame_info:; libraries flame not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; atlas_3_10_threads_info:; Setting PTATLAS=ATLAS; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries tatlas,tatlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries tatlas,tatlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries tatlas,tatlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_3_10_threads_info'>; NOT AVAILABLE; ; atlas_3_10_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries satlas,satlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries satlas,satlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries satlas,satlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_3_10_info'>; NOT AVAILABLE; ; atlas_threads_info:; Setting PTATLAS=ATLAS; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries ptf77blas,ptcblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_threads_info'>; NOT AVAILABLE; ; atlas_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries f77blas,cblas,atlas not found in /opt/homebrew/Caskroo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:6608,AVAIL,AVAILABLE,6608,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['AVAIL'],['AVAILABLE']
Availability,"ets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>; <li>Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983""><code>bce1746</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1332,error,error,1332,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['error'],['error']
Availability,"expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=True) ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 5.72e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qub",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:3910,ERROR,ERROR,3910,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['ERROR'],['ERROR']
Availability,"fe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1182,ERROR,ERROR,1182,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['ERROR'],['ERROR']
Availability,ffmpeg command from User Guide gives an error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/799:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/issues/799,1,['error'],['error']
Availability,fix end condition on mcsolve when using target tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2382:47,toler,tolerance,47,https://qutip.org,https://github.com/qutip/qutip/pull/2382,1,['toler'],['tolerance']
Availability,fix error checking for null matrix in essolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1095:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/1095,1,['error'],['error']
Availability,fmmesolve persistent error?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1663:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/issues/1663,1,['error'],['error']
Availability,"from qutip import *; import numpy as np; import matplotlib.pyplot as plt; import qutip.testing as qt. Here is the part of the code that has error:. H = tensor(sigmaz(),sigmaz(),identity(2)) + tensor(identity(2),sigmaz(),sigmaz()) + 0.05 * tensor(sigmax(), sigmax(),sigmax()); psi0 = basis(8, 0); times = np.linspace(0.0, 10.0, 20.0); result = mesolve(H, psi0, times, [], [sigmaz()]). ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-752e3e5ccdb6> in <module>(); 4 psi0 = basis(8, 0); 5 times = np.linspace(0.0, 10.0, 20.0); ----> 6 result = mesolve(H, psi0, times, [], [sigmaz()]). /Users/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 223 ; 224 if _safe_mode:; --> 225 _solver_safety_check(H, rho0, c_ops, e_ops, args); 226 ; 227 if progress_bar is None:. /Users/lib/python2.7/site-packages/qutip/solver.pyc in _solver_safety_check(H, state, c_ops, e_ops, args); 795 Hdims = H.dims; 796 Htype = H.type; --> 797 _structure_check(Hdims, Htype, state); 798 # Input H is function; 799 elif isinstance(H, (FunctionType, BuiltinFunctionType)):. /Users/lib/python2.7/site-packages/qutip/solver.pyc in _structure_check(Hdims, Htype, state); 870 if Htype == 'oper':; 871 if Hdims[1] != state.dims[0]:; --> 872 raise Exception('Input operator and ket do not share same structure.'); 873 # Input is super and state is ket; 874 elif Htype == 'super':. Exception: Input operator and ket do not share same structure.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/802:140,error,error,140,https://qutip.org,https://github.com/qutip/qutip/issues/802,1,['error'],['error']
Availability,"g()+tm.dag()*c+tm*c.dag()+tm.dag()*d+tm*d.dag()+qm.dag()*d+qm*d.dag()+qm.dag()*a+qm*a.dag(),1j*(sm.dag()*a-sm*a.dag())+1j*(sm.dag()*b-sm*b.dag())+1j*(zm.dag()*b-zm*b.dag())+1j*(zm.dag()*c-zm*c.dag())+1j*(tm.dag()*c-tm*c.dag())+1j*(tm.dag()*d-tm*d.dag())+1j*(qm.dag()*d-qm*d.dag())+1j*(qm.dag()*a-qm*a.dag()),sm+sm.dag()+zm+zm.dag()+tm+tm.dag()+qm+qm.dag(), 1j*(sm-sm.dag())+1j*(zm-zm.dag())+1j*(tm-tm.dag())+1j*(qm-qm.dag())]. # Set optimization parameters; U_0=tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)) # Initial gate; U_targ=mapped # Target gates. # Run the optimization. result = cpo.optimize_pulse_unitary(drift, ctrls, U_0, U_targ, n_ts, evo_time, fid_err_targ=fid_err_targ, min_grad=min_grad, max_iter=max_iter, max_wall_time=max_wall_time, out_file_ext=f_ext, init_pulse_type=p_type, log_level=log_level,gen_stats=True,dyn_params=dict(sparse_eigen_decomp=True)). ```; For N=>3, instead of getting a printout of the optimized controls, I receive the following terminal output error:; ```; Traceback (most recent call last):; File ""MinimalErrorExample.py"", line 59, in <module>; result = cpo.optimize_pulse_unitary(drift, ctrls, U_0, U_targ, n_ts, evo_time, fid_err_targ=fid_err_targ, min_grad=min_grad, max_iter=max_iter, max_wall_time=max_wall_time, out_file_ext=f_ext, init_pulse_type=p_type, log_level=log_level,gen_stats=True,dyn_params=dict(sparse_eigen_decomp=True)); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 829, in optimize_pulse_unitary; gen_stats=gen_stats); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 510, in optimize_pulse; result = optim.run_optimization(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 970, in run_optimization; result = self._create_result(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 375, in _create_result; re",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617:3785,error,error,3785,https://qutip.org,https://github.com/qutip/qutip/issues/1617,1,['error'],['error']
Availability,"g. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Also, the last outcomes have some overlap with the last project. Although I also find this circuit importation very important, I guess two projects should not have overlap if they are both selected.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:2213,error,error,2213,https://qutip.org,https://github.com/qutip/qutip/issues/1184,2,['error'],['error']
Availability,"generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they are used by a solver and inform it when modified. More complex but give the image that it just work. ; - All options instance are read-only. To change a key, you create a new options. Simple for us. To modify an existing options we could make it callable: `updated_options = old_options(atol=1e-5)`.; - Passing bad options keys or wrong options types (`mesolve(..., SeOptions)`) raise error, should we be less strict?; - Should we flatten SolverOptions.ode: ; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt['max_order_ns'] = 10; ```; And associated to it, where do we store default for integrators, per solver or per integrator.; - Do we add more sanity check to options values, or do we move `use_cython` to setting and remove the feature?. **Related PR**; It will cause conflict with #1710 and #1644. **Changelog**; Options classes using inheritance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:3794,error,error,3794,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['error'],['error']
Availability,"ges in `matplotlib` the current implementation is deprecated and will return errors in a few minor releases. We could quickly fix this by passing `shading='auto'` to the call of `ax.pcolor()` in the [visualization.py](https://github.com/qutip/qutip/blob/82c6704c6fea8a2801492865ad1ef7c1d73c8840/qutip/visualization.py#L1313). However, this raises another UserWarning that the center points are not monotonically sorted. The cleanest way to fix this bug would be to pass the edges of the quadrilaterals to `pcolor()`. But we can not calculate them exactly from the given points in `theta, phi`. Hence, we would need to redesign the interface to this function and to related functions like `plot_spin_distribution_3d` and `spin_q_function`. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. j = 5; psi = qt.spin_coherent(j, np.random.rand() * np.pi, np.random.rand() * 2 * np.pi); rho = qt.ket2dm(psi). theta = np.linspace(0, np.pi, 50); phi = np.linspace(0, 2 * np.pi, 50). Q, THETA, PHI = qt.spin_q_function(psi, theta, phi); fig, ax = qt.plot_spin_distribution_2d(Q, THETA, PHI); plt.show(); ```. ### Code Output. ```shell; MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3. Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading']. This will become an error two minor releases later.; ax.pcolor(X, Y, P.real, cmap=cmap); ```. ### Expected Behaviour. I expect the same plot, but without the warning which becomes an error in the future. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+67add84; Numpy Version: 1.21.0; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1973:1762,error,error,1762,https://qutip.org,https://github.com/qutip/qutip/issues/1973,2,['error'],['error']
Availability,ges/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/pyth,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30393,ERROR,ERROR,30393,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"gleton class is to replace `==` tests with `is` tests; the former is structural equality and requires walking the tensor structure, whereas the latter is referential equality, and is true if and only if the two operands are the same object in memory. For example the dimensions test of the `add` operation is now `left.dims is right.dims`, which is the same speed as comparing two integers. Dimension/shape compatibility is solved by attaching size information into the singleton classes. As the dimension objects are singletons, the size of a dimension object is calculated only on creation of the object. All subsequent `Qobj` that are of the same dimensions as one that came earlier will consequently reuse the same dimensions object, which already calculated its size. This avoids (relatively) expensive calls to `np.prod` on Python lists. The current list syntax allows for invalid dimensions to be represented such as `[2, 1]` (should be `[[2], [1]]`, probably). These sorts of failures cannot be represented in the new system. Similarly, `[[2], [1], [1]]` cannot be represented as the `Map` constructor will take only two arguments. ### Problems this does not immediately solve. Since QuTiP uses matrices to represent linear algebra objects, we tie ourselves to working in some particular basis. For example, it is invalid to add a vector in the Pauli-Z basis to one in the Pauli-X basis by element-wise addition, but QuTiP has no way of knowing if this is what the user is doing, and will simply allow it because the dimensions will match. This is still the case if the user used `Qobj.transform` to get from one to the other; it is one case where we have to trust that the user is doing the right thing, rather than enforcing correctness. In the future, the system proposed here could be extended to enforce this; the `dims` parameter would be renamed `basis`, and some unique identifier would be attached to each `Space` object. This would allow us to safely define basis-transformation ""ope",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:5145,failure,failures,5145,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['failure'],['failures']
Availability,"glielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py ___",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21926,ERROR,ERROR,21926,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"h time step, however this seems not to be the case. Code:; ```; from bacon import bacon; import qutip as qt; import numpy as np. #inputs into bacon; spin_coeff = [; 4.8,; 9.5,; 4.82,; ]. coupling_coeff = [; 6.4,; 0,; 6.4; ]. H_input = bacon(; 3,; spin_coeff,; coupling_coeff; ). Hd = H_input.driver(); Hp = H_input.problem(). def init_superpsn(n):; '''; n - number of qubits; '''; state = np.ones((2**n), dtype = int)/np.sqrt(2**n); state = qt.Qobj(state); return state. #forming density matrix; initial_state = init_superpsn(3) * init_superpsn(3).dag(); #commenting out this line gives a different error; #initial_state = qt.Qobj(initial_state, dims = [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]]). grain = 100; anneal_time = 100. # initial coefficients; def d_coeff(t,params): ; return (1-t/params[""T""]); def p_coeff(t,params):; return (t/params[""T""]). Hs = [[Hd, d_coeff], [Hp, p_coeff]]; # ""writes down"" hamiltonian at time t ; H_dyn = qt.QobjEvo(Hs,args={""T"":anneal_time}) ; # solves SE for a particular hamiltonian that we ""wrote down""; s = np.linspace(0, anneal_time, grain); sln = qt.mesolve(H_dyn, initial_state, s) ; states0 = sln.states; ```. Bacon is a class I wrote that forms $H_d$ and $H_d$ Hamiltonians using tensor products. `Hp` is ; ```; Qobj data =; [[ 31.92 0. 0. 0. 0. 0. 0. 0. ]; [ 0. 9.48 0. 0. 0. 0. 0. 0. ]; [ 0. 0. -12.68 0. 0. 0. 0. 0. ]; [ 0. 0. 0. -9.52 0. 0. 0. 0. ]; [ 0. 0. 0. 0. 9.52 0. 0. 0. ]; [ 0. 0. 0. 0. 0. -12.92 0. 0. ]; [ 0. 0. 0. 0. 0. 0. -9.48 0. ]; [ 0. 0. 0. 0. 0. 0. 0. -6.32]]; ```. `Hd` is ; ```; Quantum object: dims = [[2, 2, 2], [2, 2, 2]], shape = (8, 8), type = oper, isherm = True; Qobj data =; [[ 0. -1. -1. 0. -1. 0. 0. 0.]; [-1. 0. 0. -1. 0. -1. 0. 0.]; [-1. 0. 0. -1. 0. 0. -1. 0.]; [ 0. -1. -1. 0. 0. 0. 0. -1.]; [-1. 0. 0. 0. 0. -1. -1. 0.]; [ 0. -1. 0. 0. -1. 0. 0. -1.]; [ 0. 0. -1. 0. -1. 0. 0. -1.]; [ 0. 0. 0. -1. 0. -1. -1. 0.]]; ```. For completeness, here is the class: ; ```; class bacon:; '''; n - number of qubits; spin_coef",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:1662,down,down,1662,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['down'],['down']
Availability,"heir projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projects, even on their own funding resources (most probably together with the development of research projects), in coordination with the lead development team, could help foster development in a more sustainable way. . ## Proposal; I propose to help sustain available projects in a more structural way than what is done now. This is an example of a what we could call a **QEP, or ""QuTiP Enhancement Proposal"".**. - One thing that could be done is to simply expand the existing Wiki. The downside of taking only this action is that only organization members can modify the wiki. So this could work, but mainly as a more static and cleaner staple. . - I propose to integrate the Wiki with Issues that contain the projects, adding a `projects` (or similar) label. This is in the spirit also of other large quantum open source projects such as Qiskit, which has even an ad-hoc `qiskit-community` repository, https://github.com/qiskit-community/. In QuTiP case, we could create a new repository similar to the notebooks one, e.g., https://github.com/qutip/qutip-community/. The downside is that in general the division is subfolders is not advised for easiness of maintainability. So one could just open issues with open projects. Of course, for physics questions, sometimes spilling in to PRs and Issues, qutip already has a Google Group forum, where I advise that this new capabilities may be advertised with a proper thread.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:2484,down,downside,2484,https://qutip.org,https://github.com/qutip/qutip/issues/1132,2,['down'],['downside']
Availability,"hen redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:2029,error,error,2029,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['error'],['error']
Availability,"hi,; i think there was a bug in the computation of gradients for unitary problems. im not sure if i tracked them down correctly, but the gradients seem to be more consistent now. this can be checked with the following code after initialization of an Optimizer object `optim`. ``` python; from scipy.optimize import check_grad; func = optim.fid_err_func_wrapper; grad = optim.fid_err_grad_wrapper; x0 = optim.dynamics.ctrl_amps.flatten(); check_grad(func, grad, x0); ```. also, im new to github and im not sure if im doing this correctly.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/325:113,down,down,113,https://qutip.org,https://github.com/qutip/qutip/pull/325,1,['down'],['down']
Availability,"his limit with the `precompute_memory` option:; ```python; >>> qutip.qfunc(states[0], xs, xs, precompute_memory=0); qutip/qutip/wigner.py:822: UserWarning: Falling back to iterative algorithm due to lack of memory.; Needed 78.52 MB, but only allowed to use 0.00 MB. Increase `precompute_memory` to raise limit, or; set to `None` to suppress warning.; array( ... ); ```; To suppress the warning, and always use the iterative approach, you can set `precompute_memory=None`. Now, even if you're using the `precompute_memory` option, `qfunc` still can't remember its state between calls. This means it's inefficient. Instead, we can use the `QFunc` class, which adds an extra step (set-up and call as opposed to just call), but it encapsulates the state.; ```python; >>> qfunc_calculator = qutip.QFunc(xs, xs); >>> husimiqs = [qfunc_calculator(state) for state in states]; ```; This is much much faster. The class version `QFunc` also takes a memory option, but since this is designed to be the precompute version, it errors out if the amount of memory needed is too great, rather than trying to fall back. This gives users a way to put a limit on the amount of memory used:; ```python; >>> qfunc_calculator_low_memory = qutip.QFunc(xs, xs, memory=0); >>> qfunc_calculator_low_memory(states[0]); MemoryError: Refusing to precompute up to 32 basis states. This would require 78.52 MB, but only 0 MB is allowed.; ```. ## Timings. These benchmarks were taken on a Macbook Pro 2.9GHz i5 (2015) with 8GB of RAM. The different tests had different numbers of phase-space coordinates (the first number in the first column) in each dimension, and the number after 'ket' or 'dm' is the Hilbert space dimension. The columns are:. - `original`: The state of the code before this and the previous commit; - `prev def`: Direct calls of `qutip.qfunc` with the given state and phase-space coordinates, but everything else at the default for #934; - `prev pre`: Calls of `qutip.qfunc(..., precompute=pre)`, where the calcu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583:2805,error,errors,2805,https://qutip.org,https://github.com/qutip/qutip/pull/1583,1,['error'],['errors']
Availability,hms; creating build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/fidcomp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/optimresult.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/pulseoptim.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/io.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/dump.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/optimconfig.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/symplectic.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/stats.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/termcond.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/optimizer.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/errors.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/propcomp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/grape.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/pulsegen.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/tslotcomp.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/loadparams.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; copying qutip/control/dynamics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/control; creating build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/memorycascade.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/transfertensor.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/__init__.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/nonmarkov; copying qutip/nonmarkov/heom.py -> build/lib.macosx-10.9-x86_64-3.7/qutip/no,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:9700,error,errors,9700,https://qutip.org,https://github.com/qutip/qutip/issues/1404,1,['error'],['errors']
Availability,"home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/spmatfuncs.c -o build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1; `. Then, I cloned the qutip/qutip repository, and tried to build a wheel with `python setup.py bdist_wheel` under the qutip directory. Which gave me the follow",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:1745,down,down,1745,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['down'],['down']
Availability,"hon/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29435,ERROR,ERROR,29435,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"hon3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29679,ERROR,ERROR,29679,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"https://github.com/qutip/qutip/blob/8244c7465a9567059574b883dc53838c6d5b7bf4/qutip/qobjevo_codegen.py#L64-L84. I am trying to use propagator in a for loop but after going through the loop 2-3 times, I get the the exception error (line 83). To make it run again I would have to restart the kernel which again would start giving me the same exception after iterating through the loop 2-3 times.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326:223,error,error,223,https://qutip.org,https://github.com/qutip/qutip/issues/1326,1,['error'],['error']
Availability,"hub.com/python-pillow/Pillow/issues/7669"">#7669</a>, <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a>; [radarhere, nulano]</p>; </li>; <li>; <p>Deprecate IptcImagePlugin helpers <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7664"">#7664</a>; [nulano, hugovk, radarhere]</p>; </li>; <li>; <p>Allow uncompressed TIFF images to be saved in chunks <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7650"">#7650</a>; [radarhere]</p>; </li>; <li>; <p>Concatenate multiple JPEG EXIF markers <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7496"">#7496</a>; [radarhere]</p>; </li>; <li>; <p>Changed IPTC tile tuple to match other plugins <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7661"">#7661</a>; [radarhere]</p>; </li>; <li>; <p>Do not assign new fp attribute when exiting context manager <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7566"">#7566</a>; [radarhere]</p>; </li>; <li>; <p>Support arbitrary masks for uncompressed RGB DDS images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7589"">#7589</a>; [radarhere, akx]</p>; </li>; <li>; <p>Support setting ROWSPERSTRIP tag <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7654"">#7654</a>; [radarhere]</p>; </li>; <li>; <p>Apply ImageFont.MAX_STRING_LENGTH to ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7662"">#7662</a>; [radarhere]</p>; </li>; <li>; <p>Optimise <code>ImageColor</code> using <code>functools.lru_cache</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7657"">#7657</a>; [hugovk]</p>; </li>; <li>; <p>Restricted environment keys for ImageMath.eval() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7655"">#7655</a>; [wiredfool, radarhere]</p>; </li>; <li>; <p>Optimise <code>ImageMode.getmode</code> using <code>functools.lru_cache</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:11231,mask,masks,11231,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['mask'],['masks']
Availability,"hub.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issue",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:6667,failure,failure,6667,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['failure'],['failure']
Availability,"ib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:12936,ERROR,ERROR,12936,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"ielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py ______",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:19221,ERROR,ERROR,19221,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"ign(zeta) / 0.25. def H2_coeff(t,args):; zeta = args['zeta']; return np.sqrt(np.abs(0.25 * zeta))**(-3). def H0t(t,args):; global zeta_stored; zeta = args['zeta']; zeta_stored = zeta; print('t =',t); print('zeta =',zeta,'\n'); return H0 + H1_coeff(t,args) * H1 + H2_coeff(t,args) * H2. # Function Based Hamiltonians or Liouvillians. def H_iso(t, args):; return H0t(t, args). def L_iso(t, args):; args['zeta'] = rampFunc(t); H = H_iso(t, args); return qutip.liouvillian(H, []). # Auxiliary Functions and Constants. def zetaLin(t):; global z_f, z_i, tt_f, tt_i; slope = (z_f - z_i) / (tt_f - tt_i); return slope * (t - tt_i) + z_i; # other ramp functions go here; # ... # set ramp function: this function chages zeta in time (linearly, sinusoidaly, ...). def set_rampFunction(rampFunction):; global rampFunc; if rampFunction == 'sin':; rampFunc = zetaSin; elif rampFunction == 'linear':; rampFunc = zetaLin; ; ; ############### Using the solver ##############; z_i = zeta_i; z_f = -8e-5; tt_i = 0; tt_f = 10. div_num = 50; tlist = np.linspace(tt_i, tt_f, div_num); time1 = tt_f - tt_i; zeta_f_1 = z_f. set_rampFunction('linear'); L = L_iso; args = {'dim':dim, 'T':T}; rho_initial = H_DW(zeta_i, dim).eigenstates()[1][0].proj(). nsteps = 1000000; option = solver.Options(nsteps=nsteps); output1 = mesolve(L, rho_initial, tlist, c_ops=[], args=args, options=option, progress_bar=True); ```; The final time that the code prints in not same as the final time ```tt_f``` (which is 10), in this case it yields an error of about 5% in determining the final value of *zeta*:; ```python; zeta_stored; error1 = abs((zeta_stored - zeta_f_1) / zeta_f_1) * 100; print('error ~ %.2f'%error1,'%') #prints error ~ 5.29 %; ```; #### My Environment; ```; QuTiP Version: 4.6.3; Numpy Version: 1.21.2; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.1; Python Version: 3.9.7; Number of CPUs: 16; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1821:2584,error,error,2584,https://qutip.org,https://github.com/qutip/qutip/issues/1821,3,['error'],['error']
Availability,"iler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66660,error,error,66660,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"ilities that are different from their true prefactor in the initial state. The ratio between the sampling frequencies and true prefactors would be weights on the trajectories. This also fixes some things in merging `McResult`s and `NmmcResult`s, and perhaps fixes the target tolerance computation for the ""improved sampling"" option. **Implementation**. A difficulty in the implementation is that the weights depend on the total number of trajectories in different ways. For example, the no-jump trajectory has a fixed weight that never changes, but all other trajectories come with prefactors $(1-p_0) / (N-1)$ where $p_0$ is the probability of the no-jump trajectory, and $N$ the total number of trajectories (including the one no-jump trajectory). For this reason, I separate weights into *absolute weights* (like $p_0$) and *relative weights* (like the others). The average is performed as follows:. $$ \bar\rho = \sum_{T: \text{abs}} w_a(T) w_r(T) \rho(T) + \frac{1}{N_{\text{rel}}} \sum _{T: \text{rel}} w_r(T) \rho(T) $$. where the first sum is over all trajectories T that have absolute weights, and the second sum over all other trajectories. Here, $w_a(T)$ and $w_r(T)$ are the absolute and relative weights, $\rho(T)$ the state associated with a trajectory, and $N_{\text{rel}}$ the number of trajectories that have not been assigned absolute weights. Intuitively, the idea is that absolute weights are for trajectories where the contribution to the full state is known exactly, and the trajectories without absolute weights are the stochastic part. **Things to do**; - [x] Update tests and create new ones; - [x] Update photocurrent to work with weights; - [x] Update target tolerance calculation to work with weights; - [x] Think about how result objects should be added if both contain trajectories with absolute weights; - [x] Double-check that this creates no problems for stochastic solvers; - [x] Towncrier entry. **Related issues or PRs**; https://github.com/qutip/qutip/issues/2235",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2369:2520,toler,tolerance,2520,https://qutip.org,https://github.com/qutip/qutip/pull/2369,1,['toler'],['tolerance']
Availability,"infidelity threshold not reached on Windows tests. It is a strange failure, as the assert_almost_equal would seem to be within tolerance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/599:67,failure,failure,67,https://qutip.org,https://github.com/qutip/qutip/issues/599,2,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:2027,error,error,2027,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"ite-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py:3: in <module>; from numpy.testing import (assert_, run_module_suite, assert_allclose,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ____________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:6673,ERROR,ERROR,6673,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"ithout issue but since they're all CPTP maps they all have dnorm 1; print(IdChoi.dnorm()); print(AmpDampChoi(0).dnorm()); print(AmpDampChoi(0.64).dnorm()). # These trivial diamond norm distances between a channel and itself are also produced; print(IdChoi.dnorm(AmpDampChoi(0))); print(IdChoi.dnorm(IdChoi)); print(AmpDampChoi(0.5).dnorm(AmpDampChoi(0.5))). # If a diamond norm distance between two different channels is sought then we see the error; print(IdChoi.dnorm(AmpDampChoi(0.5))); print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))); ```. Attempting to run either of the final two prints gives the following spiel:. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); TypeError: float() argument must be a string or a number, not 'csr_matrix'. The above exception was the direct cause of the following exception:. ValueError Traceback (most recent call last); <ipython-input-21-add6d3e56036> in <module>; 20 ; 21 # If a diamond norm distance between two different channels is sought then we see the error; ---> 22 print(IdChoi.dnorm(AmpDampChoi(0.5))); 23 print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))). ~/.local/lib/python3.8/site-packages/qutip/qobj.py in dnorm(self, B); 1881 ; 1882 """"""; -> 1883 return mts.dnorm(self, B); 1884 ; 1885 @property. ~/.local/lib/python3.8/site-packages/qutip/metrics.py in dnorm(A, B, solver, verbose, force_solve); 475 shape=J_dat.shape); 476 # Finally, set up and run the problem.; --> 477 problem.solve(solver=solver, verbose=verbose); 478 ; 479 return problem.value. ~/.local/lib/python3.8/site-packages/cvxpy/problems/problem.py in solve(self, *args, **kwargs); 394 else:; 395 solve_func = Problem._solve; --> 396 return solve_func(self, *args, **kwargs); 397 ; 398 @classmethod. ~/.local/lib/python3.8/site-packages/cvxpy/problems/problem.py in _solve(self, solver, warm_start, verbose, gp, qcp, requires_grad, enforce_dpp, **kwargs); 742 return self.value; 743 ; --> 744 data, so",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422:1713,error,error,1713,https://qutip.org,https://github.com/qutip/qutip/issues/1422,1,['error'],['error']
Availability,"its.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/spmatfuncs.c -o build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1; `. Then, I cloned the qutip/qutip repository, and tried to build a wheel with `python setup.py bdist_wheel` under the qutip directory. Which gave me the following log:. `running bdist_wheel; running build; running config_cc; unifing config_cc, config, build_clib, build_ext, build commands --compiler options; running config_fc; unifing config_fc, config, build_clib, build_ext, build commands --fcomp",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:1798,error,error,1798,https://qutip.org,https://github.com/qutip/qutip/issues/639,3,['error'],['error']
Availability,"ivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altive",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67688,error,error,67688,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"ix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > Diagonalization of random two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > Failure: ValueError (invalid literal for int() with base 10: '1post0') ... ERROR; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=True) ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 5.72e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as string list .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:2873,ERROR,ERROR,2873,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['ERROR'],['ERROR']
Availability,"j. def driver(self):; '''; creates drive Hamiltonian, which is the sum of -sigmax_i operators ; ; '''; k = self._n; Hd = np.zeros((2**k, 2**k)); Hd = qt.Qobj(Hd, dims=[[2 for i in range(k)],[2 for i in range(k)]]); for i in range(self._n):; sigmax_i = self.__create_sigma_i(i); Hd -= sigmax_i; return Hd. def problem(self):; '''; creates problem Hamiltonian. '''; # initialise Hp array; p = self._n # to save on writing; Hp = np.zeros((2**p, 2**p)); Hp = qt.Qobj(Hp, dims=[[2 for i in range(p)],[2 for i in range(p)]]). #vertex coefficients; if self._spin_coeff is None:; pass; else:; for i in range(self._n):; sigmaz_i = self.__create_sigma_i(i, sigma = qt.sigmaz()); Hp += self._spin_coeff[i] * sigmaz_i; #coupling coefficients; if self._coupling_coeff is None:; pass; else:; k = -1; for i in range(p):; for j in range(i+1,p):; k += 1; print(str(i), str(j)); sigma_ij = self.__create_sigmaz_ij(i,j); Hp += self._coupling_coeff[k] * sigma_ij; return Hp; ```. The code returns the error `incompatible Liouvillian and state dimensions: [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]] and [[8], [8]]`. Adding the commented line `#initial_state = qt.Qobj(initial_state, dims = [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]])` returns the error `Shapes don't match: (64, 64) @ (64, 1)`. I am confused as to why there is a 64x64 matrix, even though my inputs were 8x8 matrices for `Hd` and `Hp` and the input density matrix is also 8x8. I am inputting an initial spin state $\ket{\psi} = \dfrac{1}{8} (1,1,1,1,1,1,1,1)$, which is the lowest energy eigenstate in the basis of $H_d$. I believe `mesolve` is combining `Hd` and `Hp` into a 64x64 matrix, perhaps computing their tensor product. Why would this be the case? If not, how can I solve my problem using a density matrix as an input, such that the output states at each time step is an 8x8 density matrix? Essentially, I am looking for the correct initial state input. Please let me know if anything needs to be clarified and thank you in advance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:4447,error,error,4447,https://qutip.org,https://github.com/qutip/qutip/issues/1989,2,['error'],['error']
Availability,"jor`), there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:1134,avail,available,1134,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['avail'],['available']
Availability,"k` is missing, and the dependency does not seem to be documented anywhere. Instead, QuTiP silently defaults to a `StrFunctionCoefficient`, i.e., to using `eval`. This behavior comes from here:. https://github.com/qutip/qutip/blob/7892453dd3ae03ce8ac17caffc0457df200a69ec/qutip/core/coefficient.py#L256-L264. The default value of `use_cython` is therefore set to `False` if `filelock` is missing. The result is the following:. ```python; $ git clone git@github.com:qutip/qutip.git .; $ conda create -n qutip-tmp python cython numpy scipy setuptools packaging wheel pytest ipython matplotlib; $ conda activate qutip-tmp; $ python setup.py install; $ cd ~; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	type(coeff); 	> qutip.core.cy.coefficient.StrFunctionCoefficient; 	exit(); ```. Since cython is installed and there was no warning or error, I think it would be reasonable for the user to assume that the coefficient would be compiled, but it is not. Only when `use_cython` is explicitly enabled, we get an error:. ```shell; In [5]: coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)); ---------------------------------------------------------------------------; NameError Traceback (most recent call last); Cell In[5], line 1; ----> 1 coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)). File ~/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/core/coefficient.py:170, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 168 for type_ in coefficient_builders:; 169 if isinstance(base, type_):; --> 170 return coefficient_builders[type_](base, **kwargs); 172 if callable(base):; 173 op = FunctionCoefficient(base, args.copy(), style=function_style). File ~/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/core/coeffici",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:1179,error,error,1179,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['error'],['error']
Availability,"k` package is required for cython-compiling coefficient functions. However, QuTiP currently does not warn if `filelock` is missing, and the dependency does not seem to be documented anywhere. Instead, QuTiP silently defaults to a `StrFunctionCoefficient`, i.e., to using `eval`. This behavior comes from here:. https://github.com/qutip/qutip/blob/7892453dd3ae03ce8ac17caffc0457df200a69ec/qutip/core/coefficient.py#L256-L264. The default value of `use_cython` is therefore set to `False` if `filelock` is missing. The result is the following:. ```python; $ git clone git@github.com:qutip/qutip.git .; $ conda create -n qutip-tmp python cython numpy scipy setuptools packaging wheel pytest ipython matplotlib; $ conda activate qutip-tmp; $ python setup.py install; $ cd ~; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	type(coeff); 	> qutip.core.cy.coefficient.StrFunctionCoefficient; 	exit(); ```. Since cython is installed and there was no warning or error, I think it would be reasonable for the user to assume that the coefficient would be compiled, but it is not. Only when `use_cython` is explicitly enabled, we get an error:. ```shell; In [5]: coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)); ---------------------------------------------------------------------------; NameError Traceback (most recent call last); Cell In[5], line 1; ----> 1 coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)). File ~/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/core/coefficient.py:170, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 168 for type_ in coefficient_builders:; 169 if isinstance(base, type_):; --> 170 return coefficient_builders[type_](base, **kwargs); 172 if callable(base):; 173 op = FunctionCoefficient(base, args.copy(), style=function_style). File ~/minico",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:1007,error,error,1007,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['error'],['error']
Availability,"l/include', '/usr/include']; Supported SIMD extensions in this NumPy install:; baseline = SSE,SSE2,SSE3; found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2; not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL; ```; So numpy itself marks openblas_info as NOT AVAILABLE (evidently using a build-time test, not runtime, which arguably is a pity). It seems to me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates if the attribute was defined, even though it might be empty. Would it be better to replace; ```; hasattr(config,'openblas_info'); ```; in qutip/utilities.py with; ```; hasattr(config,'openblas_info') and config.openblas_info; ```; likewise for blas_mkl_info (not mkl_info) ?. This would be similar to numpy's own usage in `np.show_config()` (i.e. `np.__config__.py.show()`), which [uses](https://github.com/numpy/numpy/blob/3b7672ebd16982b661b8fbcabac80158662a8784/numpy/__config__.py.in#L116) `if not info_dict` to print ""NOT AVAILABLE"". ### Code to Reproduce the Bug. ```shell; import numpy; numpy.show_config(). import qutip; qutip.about(); ```. ### Code Output. ```shell; $ python3; Python 3.10.9 (main, Dec 7 2022, 13:47:07) [GCC 12.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.show_config(); ...; blas_mkl_info:; NOT AVAILABLE; ...; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; ...; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:4135,AVAIL,AVAILABLE,4135,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['AVAIL'],['AVAILABLE']
Availability,"ld-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-lnsaamvm-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /tmp/pip-build-n7ekqm4y/qutip/; `. Then I tried easy_install, which gave me:. `Processing qutip; Writing /home/jakeargent/qutip/setup.cfg; Running setup.py -q bdist_egg --dist-dir /home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:1271,down,down,1271,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['down'],['down']
Availability,"lek/miniconda2/lib/python2.7/site-packages/matplotlib/backend_bases.py"", line 2188, in print_figure; self.figure.dpi = dpi; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 436, in _set_dpi; self.set_size_inches(w, h, forward=forward); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 745, in set_size_inches; manager.resize(int(canvasw), int(canvash)); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backends/backend_tkagg.py"", line 540, in resize; self.canvas._tkcanvas.master.geometry(""%dx%d"" % (width, height)); File ""/Users/tilek/miniconda2/lib/python2.7/lib-tk/Tkinter.py"", line 1668, in wm_geometry; return self.tk.call('wm', 'geometry', self._w, newGeometry); _tkinter.TclError: can't invoke ""wm"" command: application has been destroyed; ```. When I try to execute the code from the User Guide as a complete .py Python file (see below) ; it produces first bloch_0.png file where it is supposed to, but then shows the same error.; ```; import numpy as np; from qutip import *; from scipy import *. def qubit_integrate(w, theta, gamma1, gamma2, psi0, tlist):; # operators and the hamiltonian; sx = sigmax(); sy = sigmay(); sz = sigmaz(); sm = sigmam(); H = w * (cos(theta) * sz + sin(theta) * sx); # collapse operators; c_op_list = []; n_th = 0.5 # temperature; rate = gamma1 * (n_th + 1); if rate > 0.0: c_op_list.append(sqrt(rate) * sm); rate = gamma1 * n_th; if rate > 0.0: c_op_list.append(sqrt(rate) * sm.dag()); rate = gamma2; if rate > 0.0: c_op_list.append(sqrt(rate) * sz). # evolve and calculate expectation values; output = mesolve(H, psi0, tlist, c_op_list, [sx, sy, sz]); return output.expect[0], output.expect[1], output.expect[2]. ## calculate the dynamics; w = 1.0 * 2 * pi # qubit angular frequency; theta = 0.2 * pi # qubit angle from sigma_z axis (toward sigma_x axis); gamma1 = 0.5 # qubit relaxation rate; gamma2 = 0.2 # qubit dephasing rate; # initial state; a = 1.0; psi0 = (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796:1836,error,error,1836,https://qutip.org,https://github.com/qutip/qutip/issues/796,1,['error'],['error']
Availability,"li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056""><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:12668,mask,mask,12668,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['mask'],['mask']
Availability,"lielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:7561,ERROR,ERROR,7561,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"lly has writebackifcopy semantics. ValueError: operands could not be broadcast together with remapped shapes [original->remapped]: (0,4) and requested shape (2,4). <Figure size 360x360 with 1 Axes>. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex file can be easily generated using `qutip.cite()`; ```; The error from a python script seems to shed more light into what is happening: ; ```; /miniconda3/lib/python3.7/site-packages/qutip/bloch.py:631: MatplotlibDeprecationWarning: Passing the block parameter of show() positionally is deprecated since Matplotlib 3.1; the parameter will become keyword-only in 3.3.; plt.show(self.fig); Traceback (most recent call last):; File ""/miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_macosx.py"", line 80, in _draw; self.figure.draw(renderer); File ""/miniconda3/lib/python3.7/site-packages/matplotlib/artist.py"", line 38, in draw_wrapper; return draw(artist, renderer, *args, **kwargs); File ""/miniconda3/lib/python3.7/site-packages/matplotlib/figure.py"", line 1709, in draw; renderer, self, artists, self.suppressComposite); File ""/miniconda3/lib/python3.7/site-packages/matplotlib/image.py"", line 135, in _draw_list_compositing_images; a.draw(renderer); File ""/miniconda3/lib/python3.7/site-packages/matplotlib/artist.py"", line 38, in draw_wrapper; return draw(artist, renderer, *args, **kw",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:5880,error,error,5880,https://qutip.org,https://github.com/qutip/qutip/issues/1027,1,['error'],['error']
Availability,"lve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if expt_callback:; 361 # use callback method; --> 362 output.expect.append(e_ops(t, Qobj(cdata, dims=dims))); ...; ---> 11 H = qt.qobj_list_evaluate(h_t, tau, args); 12 ; 13 # find the M lowest eigenvalues of the system. NameError: name 'qt' is not defined; ```. If I do `import qutip as qt`, a different error occurs:; ```; AttributeError Traceback (most recent call last); <ipython-input-8-ea74e5ab1d35> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 qt.mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:1689,error,error,1689,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['error'],['error']
Availability,m 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/te,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30005,ERROR,ERROR,30005,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"m outside palette <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7515"">#7515</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Seek past the data when skipping a PSD layer <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7483"">#7483</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ImageMath: Inline <code>isinstance</code> check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7623"">#7623</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Update actions/upload-artifact action to v4 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7619"">#7619</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Import plugins relative to the module <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7576"">#7576</a> [<a href=""https://github.com/deliangyang""><code>@​deliangyang</code></a>]</li>; <li>Translate encoder error codes to strings; deprecate <code>ImageFile.raise_oserror()</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7609"">#7609</a> [<a href=""https://github.com/bgilbert""><code>@​bgilbert</code></a>]</li>; <li>Updated readthedocs to latest version of Python <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7611"">#7611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support reading BC4U and DX10 BC1 images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/6486"">#6486</a> [<a href=""https://github.com/REDxEYE""><code>@​REDxEYE</code></a>]</li>; <li>Optimize ImageStat.Stat.extrema <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7593"">#7593</a> [<a href=""https://github.com/florath""><code>@​florath</code></a>]</li>; <li>Handle pathlib.Path in FreeTypeFont <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7578"">#7578</a> [<a href=""https://github.com/radarhere""><c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:6569,error,error,6569,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['error'],['error']
Availability,"m(1), identity(2), identity(2)) * basis(16,1); Traceback (most recent call last):. File ""<ipython-input-160-ae66af2f799c>"", line 1, in <module>; tensor(hadamard_transform(1), hadamard_transform(1), identity(2), identity(2)) * basis(16,1). File ""/home/user/anaconda2/envs/Quantum/lib/python2.7/site-packages/qutip/qobj.py"", line 515, in __mul__; raise TypeError(""Incompatible Qobj shapes""). TypeError: Incompatible Qobj shap; ```. but when i do each part separately as follow I notice that the shapes are compatible:; ```python; tensor(hadamard_transform(1), hadamard_transform(1), identity(2), identity(2)); Out[161]: ; Quantum object: dims = [[2, 2, 2, 2], [2, 2, 2, 2]], shape = (16, 16), type = oper, isherm = True; ```; ```python; basis(16,1); Out[162]: ; Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; ```; The first has shape = (16, 16) and the second has shape = (16, 1), there shouldn't be any problems in performing matrix multiplication.; **Why I got this error and how to solve it.**. My environment is as follow:; ```; ~$ conda info. active environment : Quantum; active env location : /home/user/anaconda2/envs/Quantum; shell level : 1; user config file : /home/user/.condarc; populated config files : /home/user/.condarc; conda version : 4.5.4; conda-build version : 3.10.5; python version : 2.7.15.final.0; base environment : /home/user/anaconda2 (writable); channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; package cache : /home/user/anaconda2/pkgs; /home/user/.conda/pkgs; envs directories : /home/user/anaconda2/envs; /home/user/.conda/en",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/888:2721,error,error,2721,https://qutip.org,https://github.com/qutip/qutip/issues/888,1,['error'],['error']
Availability,matplotlib error while trying to do bloch.save(),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/796,1,['error'],['error']
Availability,"method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_sesolve` removed. They are all less efficient variants of `mcsolve`. `mcsolve` already include the photocurrent in the output. - `general_stochastic`, removed. It is a mostly generic stochastic equation solver. The user to define their equations to integrate, but the results are forced into `Results` with expectation values and dims checks, making it hard to use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1669,avail,available,1669,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['avail'],['available']
Availability,"minated by the admin team among core developers and major contributors, and are voted by the admin team with a majority vote. Prospective Admin Team members can send self-candidatures with their proposed candidature, and two brief statements: one explaining their past involvement with the QuTiP project, and one with their commitment to the QuTiP for the future, e.g., how they would help and support the project in their activity. Emeriti Admin Team members, including previous core contributors, are listed on the QuTiP website (at qutip.org/devs), governance (github.com/qutip/governance) and documentation. **<span style=""text-decoration:underline;"">Decisions</span>**; Each admin team member has a vote in decisions. As much as possible, admins try to take in feedback on changes from the wider community and timely communicate major changes in the software. . **<span style=""text-decoration:underline;"">Communications</span>**; The admin team agrees to keep in touch regularly, through the qutip-admin channel or chosed communication medium, through the repositories’ maintenance, and with regular virtual or in-person meetings. The admin team drafts a report, [once] a year and submits it to the Board to inform it of developments on the project. ### 3. Board; **Members of the Board make sure that the Admin Team and project is well supported financially and logistically.** Thanks to them helping enable the financial and logistics support, through scientific advisory and by keeping an eye on the project, they make the life of the admin team easier. . **<span style=""text-decoration:underline;"">Tasks</span>**; Board members are volunteers that pledge to:. - Meet** [once] **a year to review the development of the project (also online).; - Be consulted for scientific advice by the admins. ; - Help settle conflicts or roadblocks that may arise on the project development. ; - Help review student applications of interns that may volunteer or work on the QuTiP project.; - Try to provide ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:10264,mainten,maintenance,10264,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['mainten'],['maintenance']
Availability,"mputes the correlation for its specific tau, and handles any exceptions that may occur, logging them accordingly.; - **Resource Management**: Used the `cpu_count` from the `os` module to dynamically determine the number of available processors and limited the number of worker processes to avoid overwhelming the host system. This approach helps in balancing load and performance. 2. **Error Handling and Robustness**:; - Enhanced the resilience of the parallel computation by encapsulating the worker function’s body in a try-except block, ensuring that failures in one computation do not impact the overall execution.; - Ensured the stability of the test environment by restoring the original function state after the test execution, preventing side effects on subsequent tests. 3. **Testing**:; - **Extended Test Coverage**: Developed new test cases to validate both the parallel and sequential execution paths of the function. Tests ensure that both modes produce equivalent results, thereby confirming that the parallelization did not introduce computational errors.; - **Integration with Existing Tests**: Integrated the new tests into the existing pytest framework used for QuTiP, making use of fixtures and parameterization to test different scenarios and system setups effectively. ### Implementation Details. - **Concurrency**: The parallel execution is managed through a pool of processes, where each process is responsible for a subset of the total computations. This method is particularly effective for operations that can be divided into independent, smaller tasks.; - **Compatibility**: Ensured that the enhancements are backward-compatible with existing code by modifying only the internal execution strategy of the `correlation_2op_1t` function and by maintaining the original API signature.; - **Performance Considerations**: The parallel implementation can significantly reduce computation times, particularly for larger systems or longer `taulist` arrays, by leveraging multiple C",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395:1961,error,errors,1961,https://qutip.org,https://github.com/qutip/qutip/pull/2395,1,['error'],['errors']
Availability,"multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65846,error,error,65846,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"n any case, returning arrays or tuples depending on whether `excitations` is set seems like an inconsistent interface, so I decided to make it consistent (and faster). I checked that the uses in the code base should not be affected. The algorithm used when the number of excitations is restricted is a slightly more elegant version of the one from my previous pull request (#1594), and is faster by another factor of 5 or more for the ""big"" test cases I looked at. ~~It is still recursive, but quite fast, and I did not find an elegant non-recursive algorithm.~~ I came up with an even faster non-recursive algorithm after all. It's arguably a bit less elegant, but I think still readable, and another 50% or so faster than the previous one (see the second commit below).; - `enr_state_dictionaries` now returns a dictionary and a list instead of two dictionaries. Before, `idx2state` was a dictionary with integer keys from 0 to nstates-1, which behaves essentially like a list. However, before Python 3.7, iteration order was not guaranteed to be insertion order (i.e., iterating over the dictionary could give the indices and states in any order, and it seems to me that `enr_thermal_dm`, which did exactly that, was not guaranteed to work).; - `state_number_index` and `state_index_number` now just call `np.ravel_multi_index` and `np.unravel_index`, which are exactly the same operations (mapping between linear and multi-index in a multidimensional array). These are faster and also include error checking. The previous code had no error checks (such as `state` being allowed for the given dims). . Since the behavior of the code has changed, but the differences should not be noticeable in most cases, I'm not sure if I should do anything else. . **Related issues or PRs**; This is in some sense a follow-up of #1594. . **Changelog**; Speed up state_number_enumerate, state_number_index, state_index_number, and add some error checking; Made enr_state_dictionaries return a list for idx2state.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1604:2413,error,error,2413,https://qutip.org,https://github.com/qutip/qutip/pull/1604,3,['error'],['error']
Availability,"n error. I'm a little bit at a loss as to how to fix it. Is this a version related problem?. ### Code to Reproduce the Bug. ```shell; import qutip as qt; a = qt.create(10); a_dag = a.dag(); n = a_dag * a; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 4; 2 a = qt.create(10); 3 a_dag = a.dag(); ----> 4 n = a_dag * a. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/qutip/qobj.py:497, in Qobj.__mul__(self, other); 495 if self.dims[1] == other.dims[0]:; 496 out = Qobj(); --> 497 out.data = self.data * other.data; 498 dims = [self.dims[0], other.dims[1]]; 499 out.dims = dims. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_matrix.py:44, in spmatrix.__mul__(self, other); 43 def __mul__(self, other):; ---> 44 return self._matmul_dispatch(other). File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_base.py:606, in _spbase._matmul_dispatch(self, other); 604 if other.ndim == 1:; 605 raise ValueError('Cannot yet multiply a 1d sparse array'); --> 606 return self._matmul_sparse(other); 608 # If it's a list or whatever, treat it like an array; 609 other_a = np.asanyarray(other); ...; ---> 43 raise TypeError('fast_csr_matrix allows only int32 indices.'); 44 if args[2].shape[0] and args[1].dtype != np.int32:; 45 raise TypeError('fast_csr_matrix allows only int32 indptr.'). TypeError: fast_csr_matrix allows only int32 indices.; ```. ### Expected Behaviour. The code should run without error. ### Your Environment. ```shell; QuTiP Version: 4.7.6; Numpy Version: 1.26.4; Scipy Version: 1.13.1; Cython Version: None; Matplotlib Version: 3.8.4; Python Version: 3.12.2; Number of CPUs: 12; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/danb2901/anaconda3/envs/danjou/lib/python3.12/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468:1939,error,error,1939,https://qutip.org,https://github.com/qutip/qutip/issues/2468,1,['error'],['error']
Availability,"n in QuTiP. This function computes two-time correlations for quantum systems, which is computationally intensive, especially for large systems or long time arrays. The goal was to enhance performance by parallelizing these computations. ### Enhancements Overview. 1. **Parallel Computing**:; - **Implementation**: Utilized Python’s `concurrent.futures` module, specifically `ProcessPoolExecutor`, to parallelize the computation of correlation values over different tau values (`taulist`). Each tau value computation is independent of others, making this a suitable case for parallel execution.; - **Function Splitting**: Created a helper function `compute_single_tau_correlation` to handle the computation for a single tau. This function manages the setup of the quantum system, computes the correlation for its specific tau, and handles any exceptions that may occur, logging them accordingly.; - **Resource Management**: Used the `cpu_count` from the `os` module to dynamically determine the number of available processors and limited the number of worker processes to avoid overwhelming the host system. This approach helps in balancing load and performance. 2. **Error Handling and Robustness**:; - Enhanced the resilience of the parallel computation by encapsulating the worker function’s body in a try-except block, ensuring that failures in one computation do not impact the overall execution.; - Ensured the stability of the test environment by restoring the original function state after the test execution, preventing side effects on subsequent tests. 3. **Testing**:; - **Extended Test Coverage**: Developed new test cases to validate both the parallel and sequential execution paths of the function. Tests ensure that both modes produce equivalent results, thereby confirming that the parallelization did not introduce computational errors.; - **Integration with Existing Tests**: Integrated the new tests into the existing pytest framework used for QuTiP, making use of fixtures and para",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395:1120,avail,available,1120,https://qutip.org,https://github.com/qutip/qutip/pull/2395,1,['avail'],['available']
Availability,"n/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py ___________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py:6: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError whil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:8477,ERROR,ERROR,8477,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"n/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py _________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:11117,ERROR,ERROR,11117,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"n/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py:6: in <module>; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ________________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:13847,ERROR,ERROR,13847,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"n; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details.; QuTiP Version: 4.4.1; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.12; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\migue\Anaconda\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()` ; ```. and I get this error repeatedly when using the `steadystate` function. . ```; OSError Traceback (most recent call last); <ipython-input-3-4ef4797a881f> in <module>; 30 g2_v = []; 31 for p, x in enumerate(Gamma_vec):; ---> 32 j, z = calculate_avg_photons(N, x); 33 print(p); 34 n_avg.append(j). <ipython-input-3-4ef4797a881f> in calculate_avg_photons(N, Gamma); 18 c_ops.append(np.sqrt(rate)*sm.dag()); 19 ; ---> 20 rho = steadystate(H,c_ops); 21 n_cav = expect(a.dag()*a,rho); 22 g2_cav = expect(a.dag()*a.dag()*a*a,rho)/(n_cav**2). ~\Anaconda\lib\site-packages\qutip\steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 288 if (ss_args['solver'] == 'scipy' and ss_args['sparse']) \; 289 or ss_args['solver'] == 'mkl':; --> 290 return _steadystate_direct_sparse(A, ss_args); 291 else:; 292 return _steadystate_direct_dense(A, ss_args). ~\Anaconda\lib\site-packages\qutip\steadystate.py in _steadystate_direct_sparse(L, ss_args); 458 max_iter_refine=ss_args['max_iter_refine'],; 459 scaling_vectors=ss_args['scaling_ve",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077:1071,error,error,1071,https://qutip.org,https://github.com/qutip/qutip/issues/1077,1,['error'],['error']
Availability,"ncies on Cygwin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7175"">#7175</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved checks in font_render <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7218"">#7218</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Change <code>grabclipboard()</code> to use PNG compression on macOS <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7219"">#7219</a> [<a href=""https://github.com/abey79""><code>@​abey79</code></a>]</li>; <li>Added PyPy 3.10 and removed PyPy 3.8 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7216"">#7216</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added in_place argument to ImageOps.exif_transpose() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7092"">#7092</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected error code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7177"">#7177</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use &quot;not in&quot; <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7174"">#7174</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only call text_layout once in getmask2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7206"">#7206</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed calling putpalette() on L and LA images before load() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7187"">#7187</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused INT64 definition <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7180"">#7180</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Updated xz to 5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:4682,error,error,4682,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['error'],['error']
Availability,"nd ""/home/jakeargent/anaconda3/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-lnsaamvm-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /tmp/pip-build-n7ekqm4y/qutip/; `. Then I tried easy_install, which gave me:. `Processing qutip; Writing /home/jakeargent/qutip/setup.cfg; Running setup.py -q bdist_egg --dist-dir /home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakearg",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:1191,error,error,1191,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability,"nd_direct_eigenbases_match[True-10-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-10-rand_bra]; - test_brtools.py::test_zheevr; I stopped running the tests after these errors appear, and I don't know if it causes other tests to fail as well.; The test_zheevr shows another error, but it fixes when using a previous version of scipy (e.g. 1.3). . The terminal out put is; ```; > fn = getattr(_sparsetools, self.format + '_matmat_pass1'); E AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1'. /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip/fastsparse.py:197: AttributeError; ```. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.0; Scipy Version: 1.3.0 (error fixed); Scipy Version: 1.5.0 (error present); Cython Version: 0.29.20; Matplotlib Version: 3.2.2; Python Version: 3.6.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304:1813,error,error,1813,https://qutip.org,https://github.com/qutip/qutip/issues/1304,2,['error'],['error']
Availability,"ndent functions (e.g. for a Hamiltonian) using Cubic_Spline. This is the case if one has data describing the time-dependent object which is not easy to write analytically. In `brmesolve` the only option is to provide time-dependent functions as strings (or Cubic_Spline). This works fine for the Hamiltonian, but the `a_ops` fail a check in cy/brcodegen.py when using a Cubic_Spline type. **To Reproduce**; ```python; import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic spline representation will also be passed in a string-compatible format. In the string-format, the interpolation ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1188,error,error,1188,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['error'],['error']
Availability,"ne help me with this issue?. The underlying reason for wanting to have MKL is that it allowed me in the past (on the same machine but with a different conda environment I no longer have access to) to calculate the steady states of much larger Liouvillians than I am now able to. I am unfortunately unable to reproduce this environment. Below you can find the outcomes of various installation processes, each in a new conda environment:. **Attempt 1a:** ; Conda install mkl; conda install numpy; conda install scipy; conda install conda-forge::qutip; **Results:** ; QuTiP Version: 	5.0.3; Numpy Version: 	2.0.0; Scipy Version: 	1.14.0; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.12.4; Number of CPUs: 	12; BLAS Info: 		Generic; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1b:**; Conda install mkl; conda install scipy ; conda install conda-forge::qutip; **Results:**; QuTiP Version: 	5.0.3; Numpy Version: 	1.26.4; Scipy Version: 	 1.10.1; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.10.14; Number of CPUs: 	12; BLAS Info: 		INTEL MKL; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1c:**; Conda install mkl; conda install conda-forge::qutip; **Results**; QuTiP Version: 5.0.3; Numpy Version: 2.0.0; Scipy Version: 1.14.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.12.4; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64). **Attempt 2:** ; Conda install conda-forge::qutip; **Results**: obtained errors when importing qutip (ImportError: DLL load failed while importing _arpack: The specified module could not be found.). **Attempt 2b:**; Conda install scipy; conda install conda-forge::qutip; **Results:**; QuTiP Version: 5.0.3; Numpy Version: 1.26.4; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: None; Python Version: 3.10.14; Number of CPUs: 12; BLAS Info: INTEL MKL; INTEL MKL Ext: False; Platform Info: Windows (AMD64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496:2025,error,errors,2025,https://qutip.org,https://github.com/qutip/qutip/issues/2496,1,['error'],['errors']
Availability,"ng_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent images together. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/mpl_toolkits/mplot3d/axes3d.py in draw(self, renderer); 449 for axis in self._get_axis_list()) + 1; 450 collection_zorder = patch_zorder = zorder_offset; --> 451 for artist in sorted(collections_and_patches,; 452 key=do_3d_projection,; 453 reverse=True):. ~/.local/lib/python3.8/site-packages/mpl_toolkits/mplot3d/axes3d.py in do_3d_projection(artist); 424 """"""; 425 try:; --> 426 signature = inspect.signature(artist.do_3d_projection); 427 signature.bind(); 428 # ValueError if `inspect.signature` cannot provide a signature. AttributeError: 'Arrow3D' object has no attribute 'do_3d_projection'; ```. ### Expected Behaviour. The code runs without an error. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.22.2; Scipy Version: 1.8.0; Cython Version: None; Matplotlib Version: 3.5.1; Python Version: 3.8.12; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. This seems to be caused by [this](https://github.com/matplotlib/matplotlib/issues/21688) update in matplotlib. The solution seems to be to add the following method to `Arrow3D`. ```python; def do_3d_projection(self, renderer=None):; xs3d, ys3d, zs3d = self._verts3d; xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M); self.set_positions((xs[0],ys[0]),(xs[1],ys[1])). return np.min(zs); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:2927,error,error,2927,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['error'],['error']
Availability,"nk we pinned it down to iadd in QobjEvo creating an identity matrix based on the dims and not the shape. https://github.com/qutip/qutip/blob/afd160bce00df522b9bcb0f856bc06d63296998d/qutip/core/cy/qobjevo.pyx#L459. though perhaps other issues could arise. ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; N = 4 # number of cavities; M = 2 # number of cavity states; dims = [M] * N; #The number of excitations in the chain; excitations = 1 # total number of excitations; initial_excitiations = 1 # initial number of excitations; #Construct ENR operators and states. d = enr_destroy(dims, excitations); psi0 = enr_fock(dims, excitations, [initial_excitiations if m == 1 else 0 for m in range(N)]). H = sum([dd.dag() * dd for dd in d]). # coupling between cavities; e_ops = [dd.dag() * dd for dd in d]; c_ops = [0.01 * dd for dd in d]; times = np.linspace(0, 250, 1000); result = mesolve(H, psi0, times, c_ops, e_ops). #More minimal failure can be found with running this instead of mesolve:; H=QobjEvo(H); QobjEvo(H+0); ```. ### Code Output. ```shell; line 24, in <module>; QobjEvo(H); File ""qutip/core/cy/qobjevo.pyx"", line 196, in qutip.core.cy.qobjevo.QobjEvo.__init__; File ""qutip/core/cy/qobjevo.pyx"", line 757, in genexpr; File ""/home/neill/anaconda3/envs/qutip5dev/lib/python3.11/site-packages/qutip-5.0.0.dev0+nogit-py3.11-linux-x86_64.egg/qutip/core/qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""/home/neill/anaconda3/envs/qutip5dev/lib/python3.11/site-packages/qutip-5.0.0.dev0+nogit-py3.11-linux-x86_64.egg/qutip/core/qobj.py"", line 408, in __add__; return Qobj(_data.add(self._data, other._data),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""qutip/core/data/dispatch.pyx"", line 583, in qutip.core.data.dispatch.Dispatcher.__call__; File ""qutip/core/data/dispatch.pyx"", line 292, in qutip.core.data.dispatch._constructed_specialisation.prebound; File ""qutip/core/data/add.pyx"", line 122, in qutip.core.data.add.add_csr; File ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2122:1288,failure,failure,1288,https://qutip.org,https://github.com/qutip/qutip/issues/2122,1,['failure'],['failure']
Availability,nosetests segmentation fault in Metrics docstrings,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1013:23,fault,fault,23,https://qutip.org,https://github.com/qutip/qutip/pull/1013,1,['fault'],['fault']
Availability,"not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67007,error,error,67007,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"ns/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29590,ERROR,ERROR,29590,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"numpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; extra options: '-faltivec -I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltive",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65305,error,error,65305,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"o install Qutip on my macOS (m1 pro, Ventura 13.0.1). I typed `pip3 install qutip` in the terminal, and get the following error message:. ``` .... copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-universal2-cpython-39/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.cqobjevo' extension; creating build/temp.macosx-10.9-universal2-cpython-39; creating build/temp.macosx-10.9-universal2-cpython-39/qutip; creating build/temp.macosx-10.9-universal2-cpython-39/qutip/cy; clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot/System/Library/Frameworks/System.framework/PrivateHeaders -iwithsysroot/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I/private/var/folders/8s/46j41bsj6rq3xkzplbcmjm2h0000gn/T/pip-build-env-do4siooe/overlay/lib/python3.9/site-packages/numpy/core/include -I/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -c qutip/cy/cqobjevo.cpp -o build/temp.macosx-10.9-universal2-cpython-39/qutip/cy/cqobjevo.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; qutip/cy/cqobjevo.cpp:38:10: fatal error: 'Python.h' file not found; #include ""Python.h""; ^~~~~~~~~~; 1 error generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects; ```. ### Code to Reproduce the Bug. ```shell; pip3 install qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. It should be installed successfully. ### Your Environment. ```shell; pip version: 22.3.1; ```. ### Additional Context. I tried `pip3 install pyproject` but it doesn't solve the problem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:1303,error,error,1303,https://qutip.org,https://github.com/qutip/qutip/issues/2027,6,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"oeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ............................................................................................................................................................... [ 81%]; .......................................s [100%]. ==================================================== 216 passed, 1 skipped, 5700 deselected, 14 warnings in 59.58s ====================================================; ```. ---. I suggest documenting this dependence in the documentation. Regarding the tests, the concerned tests should probably be skipped if there is a dependency missing? (Just like they already are if cython is missing.) ; In case they are not skipped, the reason for the failure should somehow become more clear. Regarding the actual behavior, qutip could print a warning if `cython` is installed and `filelock` is not, but I am not sure whether that would be a good idea. ---. For completeness, my `qutip.about()` output:. ```; QuTiP Version: 5.0.0.dev0+7892453; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 16; BLAS Info: INTEL MKL; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/paul/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:9178,failure,failure,9178,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['failure'],['failure']
Availability,"oes not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -falt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68981,error,error,68981,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"oes not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66543,error,error,66543,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================== test session starts ===================================================================; platform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.2.0 -- /Applications/Xcode.app/Contents/Developer/usr/bin/python3; cachedir: .pytest_cache; rootdir: /Users/guglielmo2; collected 2814 items / 30 errors / 51 deselected / 2763 selected . ========================================================================= ERRORS =========================================================================; _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:2027,ERROR,ERRORS,2027,https://qutip.org,https://github.com/qutip/qutip/issues/2180,2,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"olve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class. **Expected behavior**; The time evolution of the 0th states. This is it. Am I doing something wrong with it ?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:2299,error,error,2299,https://qutip.org,https://github.com/qutip/qutip/issues/1605,2,['error'],['error']
Availability,"om 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py:5: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; Impor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:9335,ERROR,ERROR,9335,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"om/pypa/wheel/blob/main/docs/news.rst"">wheel's changelog</a>.</em></p>; <blockquote>; <h1>Release Notes</h1>; <p><strong>UNRELEASED</strong></p>; <ul>; <li>Updated vendored <code>packaging</code> to 22.0</li>; </ul>; <p><strong>0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:1177,fault,faulty,1177,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['fault'],['faulty']
Availability,"on Vacuum Rabi oscillations in the Jaynes-cummings model from the example section on [qutip.com](http://qutip.com/). Originally it was working correctly. However, I have come back to it after about a month and I have run into an issue. When I run the code copied straight from the website it returns this error . ""ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". so I increase the nsteps to 100000:; output = mesolve(H, psi0, tlist, c_op_list, [a.dag() * a, sm.dag() * sm], options = Options(nsteps= 10000)). however I get an output that is completely different to what I should be getting. What I should be getting: . ![image](https://user-images.githubusercontent.com/75099190/186995018-26029946-bba2-4b71-888d-74b88361c832.png). What my code is outputting:. ![image](https://user-images.githubusercontent.com/75099190/186995092-75b9d285-f854-487f-bd11-7dffc19d57cb.png). Do you have any idea what could be causing this error?; Any help would be hugely appreciated . my code:. import matplotlib.pyplot as plt; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi # cavity frequency; wa = 1.0 * 2 * np.pi # atom frequency; g = 0.05 * 2 * np.pi # coupling strength; kappa = 0.005 # cavity dissipation rate; gamma = 0.05 # atom dissipation rate; N = 15 # number of cavity fock states; n_th_a = 0.0 # temperature in frequency units; use_rwa = True. tlist = np.linspace(0, 25, 100). psi0 = tensor(basis(N, 0), basis(2, 1)) # start with an excited atom. a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)). if use_rwa:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()); else:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() + a) * (sm + sm.dag()). c_op_list = []. rate = kappa * (1 + n_th_a); if rate > 0.0:; c_op_list.append(np.sqrt(rate) * a). rate = kappa * n_th_a; if rate > 0.0:; c_op_list.append(np.sqrt(rate) * a.dag()). rate = gamma; if rate > 0.0:; c_op_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987:1112,error,error,1112,https://qutip.org,https://github.com/qutip/qutip/issues/1987,1,['error'],['error']
Availability,"onda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; | 3.6 | 22.13% | 1,860 |; | 3.5 | 19.73% | 1,658 |; | 3.4 | 6.00% | 504 |; | 3.3 | 0.35% | 29 |; | 2.6 | 0.18% | 15 |; | 3.7 | 0.05% | 4 |; | 3.2 | 0.02% | 2 |; | Total | | 8,405 |. This information is relevant also regarding #882. About OS:; ### Operating System; #### 2018; | system_name | percent | downloa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:1286,down,downloads,1286,https://qutip.org,https://github.com/qutip/qutip/issues/997,1,['down'],['downloads']
Availability,"ong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well, all of them seem to fail with a similar issue. Whatever is exit status 1. ([This](http://stackoverflow.com/questions/35991403/python-pip-install-gives-command-python-setup-py-egg-info-failed-with-error-c) is the SO solution I followed, it claims that error code is related to operation not permitted or setuptools not being installed. I upgraded the setuptools, pip doesn't work with sudo (I'm guessing it shouldn't)). How can I install qutip?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:5972,error,error-c,5972,https://qutip.org,https://github.com/qutip/qutip/issues/639,2,['error'],"['error', 'error-c']"
Availability,"ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.00035163; E Max relative difference: 0.26008554; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001704, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); /nix/store/dz8lm4h0ivibad5kfc0ya3p3zqyd2fyf-python3-3.11.7/lib/python3.11/contextlib.py:81: AssertionError; =========================== short test summary info ============================;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:2450,toler,tolerance,2450,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['toler'],['tolerance']
Availability,"opying qutip/cy/openmp/br_omp.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/br_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/cqobjevo_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/omp_sparse_utils.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.spmatfuncs' extension; creating build/temp.macosx-10.9-x86_64-3.7; creating build/temp.macosx-10.9-x86_64-3.7/qutip; creating build/temp.macosx-10.9-x86_64-3.7/qutip/cy; creating build/temp.macosx-10.9-x86_64-3.7/qutip/cy/src; gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -Iqutip/cy -I/private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-build-env-ob76l82e/overlay/lib/python3.7/site-packages/numpy/core/include -I/private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-build-env-ob76l82e/overlay/lib/python3.7/site-packages/numpy/core/include -I/Library/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o build/temp.macosx-10.9-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun; error: command 'gcc' failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip which use PEP 517 and cannot be installed directly. Many thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:24086,error,error,24086,https://qutip.org,https://github.com/qutip/qutip/issues/1404,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"or: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ___________________________________________ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initialize_data(arg, dims, copy); qutip/core/qobj.py:295: in _initialize_data; self._data = _data.create(arg, copy=copy); qutip/core/data/convert.pyx:477: in qutip.core.data.convert._create.__call__; return create(arg, shape, copy=copy); qutip/core/data/csr.pyx:139: in qutip.core.data.csr.CSR.__init__; self._scipy = _csr_matrix(data, col_index, row_index, self.shape); qutip/core/data/csr.pyx:56: in qutip.core.data.csr._csr_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; _________________________________________ ERROR collecting qutip/tests/solver/test_integrator.py _________________________________________; qutip/tests/solver/test_integrator.py:16: in <module>; class TestIntegratorCte():; qutip/tests/solver/test_integrator.py:20: in TestIntegratorCte; me_system = qutip.liouvillian(qutip.QobjEvo(qutip.qeye(2)),; qutip/core/superoperator.py:96: in liouvillian; L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:96: in <genexpr>; L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:169: in lindblad_dissipator; ad_b = a.dag() * b; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:2591,ERROR,ERROR,2591,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,"ose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n, d in enumerate(str_list[:3])]); ValueError: invalid literal for int() with base 10: '1post0'; # ; ## ERROR: mesolve: simple time-dependence as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 398, in testMESimpleTDDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 525, in _mesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; ImportError: No module named rhs0; # ; ## ERROR: mesolve: constant decay as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 349, in testMESimpleConstDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 525, in _mesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; ImportError: No module named rhs1. ---. Ran 111 tests in 33.425s. FAILED (errors=3). I can reproduce this on 2 different systems (both 64 bit and 14.04).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:15872,ERROR,ERROR,15872,https://qutip.org,https://github.com/qutip/qutip/issues/126,2,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"ows following the official steps:; 1. Install the Python(X,Y) distribution (tested with version 2.7.3.1). Other Python distributions, such as Enthought Python Distribution or Anaconda CE have also been reported to work.; 2. When installing Python(x,y), explicitly select to include the Cython package in the installation. This package is not selected by default.; 3. Add the following content to the file C:/Python27/Lib/distutils/distutils.cfg (or create the file if it does not already exists):; [build]; compiler = mingw32; [build_ext]; compiler = mingw32; The directory where the distutils.cfg file should be placed might be different if you have installed the Python environment in a different location than in the example above.; 4. Obtain the QuTiP source code and installed it following the instructions given above. However, there are some errors after i run the installation verifying process. Is there anyone came across such errors? How can I repair these errors? The errors are presented as follow:; ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 60, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:985,error,errors,985,https://qutip.org,https://github.com/qutip/qutip/issues/788,5,"['ERROR', 'error', 'repair']","['ERROR', 'errors', 'repair']"
Availability,"p.github.io) and possibly have a development notebook (or in a personal repository) showing them updated, for QuTiP presentations. . * **conda install qutip**: For conda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; | 3.6 | 22.13% | 1,860 |; | 3.5 | 19.73% | 1,658 |; | 3.4 | 6.00% | 504 |; | 3.3 | 0.35% | 29 |; | 2.6 | 0.18% | 15 |; | 3.7 | 0.05% | 4 |; | 3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:1107,down,downloads,1107,https://qutip.org,https://github.com/qutip/qutip/issues/997,2,['down'],['downloads']
Availability,p/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/si,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30480,ERROR,ERROR,30480,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,parallel map raise subprocess error.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1969,1,['error'],['error']
Availability,partial_transpose doesn't work properly if mask is boolean array instead of integer array.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/776:43,mask,mask,43,https://qutip.org,https://github.com/qutip/qutip/pull/776,1,['mask'],['mask']
Availability,"port optimize; from scipy.optimize import minimize_scalar; import random ; ket0=basis(2,0); ket1=basis(2,1); ket00=tensor(ket0,ket0);ket01=tensor(ket0,ket1);ket10=tensor(ket1,ket0);ket11=tensor(ket1,ket1);; angle = np.linspace(0.0, 2 * np.pi, 100); def B1(x):; b1=(cos(x[0]/2)**2+ x[3]**2*sin(x[0]/2)**2)*ket0*ket0.dag()+(1j*(x[1]-1j*x[2])*sin(x[0]/2)*(cos(x[0]/2)-1j*x[3]*sin(x[0]/2)))*ket0*ket1.dag(); -(1j*(x[1]+1j*x[2])*sin(x[0]/2)*(cos(x[0]/2)+1j*x[3]*sin(x[0]/2)))*ket1*ket0.dag()+((x[1]**2+ x[2]**2)*sin(x[0]/2)**2)*ket1*ket1.dag(); return b1. def B2(x):; b2=(cos(x[0]/2)**2+ x[3]**2*sin(x[0]/2)**2)*ket1*ket1.dag()-(1j*(x[1]-1j*x[2])*sin(x[0]/2)*(cos(x[0]/2)-1j*x[3]*sin(x[0]/2)))*ket0*ket1.dag(); +(1j*(x[1]+1j*x[2])*sin(x[0]/2)*(cos(x[0]/2)+1j*x[3]*sin(x[0]/2)))*ket1*ket0.dag()+((x[1]**2+ x[2]**2)*sin(x[0]/2)**2)*ket0*ket0.dag(); return b2. rho=0.25*ket00*ket00.dag()+0.25*ket00*ket11.dag()+0.25*ket01*ket01.dag()+0.25*ket01*ket10.dag()+0.25*ket10*ket01.dag()+0.25*ket10*ket10.dag()+0.25*ket11*ket00.dag()+0.25*ket11*ket11.dag(). def P1(x):; p1=1/(tensor(qeye(2),B1(x))).tr()*tensor(qeye(2),B1(x))*rho*tensor(qeye(2),B1(x)); return p1. def P2(x):; p2=1/(tensor(qeye(2),B2(x))).tr()*tensor(qeye(2),B2(x))*rho*tensor(qeye(2),B2(x)); return p2. def S(x):; p1=1/(tensor(qeye(2),B1(x))).tr()*tensor(qeye(2),B1(x))*rho*tensor(qeye(2),B1(x)); p2=1/(tensor(qeye(2),B2(x))).tr()*tensor(qeye(2),B2(x))*rho*tensor(qeye(2),B2(x)); s=1/(tensor(qeye(2),B1(x))).tr()*entropy_vn(p1)+1/(tensor(qeye(2),B2(x))).tr()*entropy_vn(p2); return s; list3=[];list4=[];list5=[];. for i in range(100):; t=uniform(0,1); y=uniform(0,1); z=uniform(0,1); if t**2+y**2+z**2==1:; continue; list3.append(t); list4.append(y); list5.append(z); #print(t,y,z); for x in zip(angle,list3,list4,list5):; x0=[0,0,0,0]; res = minimize(S,x0, method='Nelder-Mead',options={'xtol': 1e-8, 'disp': True}); print(res.x); ```; In this program error coming for minimize entropy; ""TypeError: can't convert complex to float""; can you help me?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1111:2058,error,error,2058,https://qutip.org,https://github.com/qutip/qutip/issues/1111,1,['error'],['error']
Availability,processor plot tests succeed but return error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"ps://qiskit.org/documentation/stubs/qiskit.quantum_info.average_gate_fidelity.html relating the average gate fidelity to the process fidelity, and https://qiskit.org/documentation/stubs/qiskit.quantum_info.process_fidelity.html#qiskit.quantum_info.process_fidelity to compute that from a superoperator. I think it would be better to use that direct formula if the input is not already in Kraus form!. There is also a function `process_fidelity` in Qutip, but I'm having a hard time understanding what it's intended for. It doesn't seem to be the process fidelity explained in the Qiskit docs above. The arguments of Qutip's `process_fidelity` are called `U1` and `U2` suggesting they are expected to be unitary, but this is not checked. It is computed as `(U1 * U2).tr()`, which is not between 0 and 1, and doesn't give 1 as I'd expect if `U1==U2`. Does someone know the intended use of that function? If not, I'd implement the process fidelity as described in the Qiskit docs here, with several version depending on whether the input is Kraus, a superoperator, and maybe a chi matrix. Lastly, there is an issue with the tests - the lines; ```; class Test_dnorm:; # Skip dnorm tests if we don't have cvxpy or cvxopt available, since it; # depends on them.; cvxpy = pytest.importorskip(""cvxpy""); cvxopt = pytest.importorskip(""cvxopt""); ```; actually skip all the tests in the file if cvxpy is not available, not just the ones in the `Test_dnorm` class. The test output, if `cvxpy` is not installed, is; ```; $ pytest qutip/tests/test_metrics.py ; ============================= test session starts ==============================; platform linux -- Python 3.9.7, pytest-6.2.4, py-1.10.0, pluggy-0.13.1; rootdir: /home/florian/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-10.1; collected 0 items / 1 skipped ; ```; That issue seems to be addressed on the dev.major branch. Would it make sense to take the test file from there and use it in the master branch also?. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1703:1725,avail,available,1725,https://qutip.org,https://github.com/qutip/qutip/issues/1703,2,['avail'],['available']
Availability,ptrace error with large kets,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/828:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/828,1,['error'],['error']
Availability,"python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12] Cythonizing qutip/cy/heom.pyx; [ 4/12] Cythonizing qutip/cy/interpolate.pyx; [ 5/12] Cythonizing qutip/cy/math.pyx; [ 6/12] Cythonizing qutip/cy/ptrace.pyx; [ 7/12] Cythonizing qutip/cy/sparse_utils.pyx; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/state/partition1/local-scratch/kilian/16342884/pip-build-7c5rN_/qutip/setup.py"", line 216, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise CompileError(None, pyx_file); Cython.Compiler.Errors.CompileError: qutip/cy/sparse_utils.pyx; ```. Tested with:; * Cython 0.26; * numpy 1.13.1; * gcc 4.9.1. Any recommendation on how to fix this? . Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:3871,Error,Errors,3871,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['Error'],['Errors']
Availability,qdiag throws incorrect error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/847:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/847,1,['error'],['error']
Availability,qutip 4.7.3 QobjEvo test failures on Python 3.12,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:25,failure,failures,25,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['failure'],['failures']
Availability,"qutip crashes for moderately big tensor products:. In the following example, the result should be identity, and due to operators being stored in a sparse format, I'd expect qutip to handle this without problems. ~~~; >>> import qutip; >>> qutip.__version__; '4.2.0'; >>> factors = [qutip.Qobj([[1, 0], [0, 1]]) for _ in range(40)]; >>> qutip.tensor(*factors); Traceback (most recent call last):; File ""<ipython-input-12-770cf2fe6b16>"", line 1, in <module>; qutip.tensor(*factors); File ""/Users/goerz/anaconda3/lib/python3.5/site-packages/qutip/tensor.py"", line 116, in tensor; out.data = zcsr_kron(out.data, q.data); File ""qutip/cy/spmath.pyx"", line 351, in qutip.cy.spmath.zcsr_kron (qutip/cy/spmath.cpp:10231); File ""qutip/cy/spmath.pyx"", line 625, in qutip.cy.spmath._safe_multiply (qutip/cy/spmath.cpp:12116); OverflowError: value too large; ~~~. I've also seen segmentation faults for examples where not all operators where the identity",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/853:879,fault,faults,879,https://qutip.org,https://github.com/qutip/qutip/issues/853,1,['fault'],['faults']
Availability,"qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.9.6; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================== test session starts ===================================================================; platform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.2.0 -- /Applications/Xcode.app/Contents/Developer/usr/bin/python3; cachedir: .pytest_cache; rootdir: /Users/guglielmo2; collected 2814 items / 30 errors / 51 deselected / 2763 selected . ========================================================================= ERRORS =========================================================================; _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'nump",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:1912,error,errors,1912,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['error'],['errors']
Availability,qutip import now fail with the following error message. ```; /usr/local/lib/python3.3/dist-packages/qutip/cyQ/__init__.py in <module>(); 1 from qutip.cyQ.spmatfuncs import *; ----> 2 from qutip.cyQ.blas_funcs import *. ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_; ```,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/39:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/issues/39,1,['error'],['error']
Availability,qutip testing on ubuntu 14.04: 3 errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:33,error,errors,33,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['error'],['errors']
Availability,qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30800,ERROR,ERROR,30800,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"r does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66292,error,error,66292,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"r the instances, and _not_ `__init__`. The former is effectively a class method, while the latter is an instance method; since we want instances representing the same object to be unique, we don't want it. In order to maintain referential equality, tensor-product operations must move into a canonical form. Calling `Compound(Compound(x, y), z)` must return the same object as `Compound(x, y, z)`. Internally this parsing is easy; if one is using the new object constructors, Python evaluation order guarantees that they will flatten themselves; so long as the `Compound` constructor unpacks `Compound` objects at a depth of 1, the whole object will always be as flat as possible. The tensor product will be expanded by having `Compound` ""thread"" over `Map`. This effectively expands the mathematicians' definition of the tensor product to allows us to continue to represent ""silly"" objects such as; ```python; tensor(qeye(5), basis(2).dag()); ```; which is an odd object that contracts one element of a tensor-product space down to the field and leaves the other. This will report its `Qobj.type` as `'other'`, since it is not a standard operation, but that's ok because we no longer need `Qobj.type` for fast dimension parsing. The `Compound` threading over `Map` goes follows these rules:. - `Compound(Map(x1, y1), Map(x2, y2))` is `Map(Compound(x1, x2), Compound(y1, y2))`; - `Compound(Map(x1, y1), Space(z))` is `Map(Compound(x1, Field), Compound(y1, Space(z)))`. In other words, the `from` and `to` fields inside maps are `Compound`ed with their counterparts, and `Space` is ""promoted"" to `Map(Field, Space)`. This latter object is not actually valid, but `Space` will behave as if it were within `Compound`. Related but different, `Compound(Field, Field)` will exist for the purposes of tensor-product `'bra'` types as the `to` field of `Map` (to allow us to keep track of empty spaces), but a `Qobj` whose dimensions would be a `Compound` made entirely of `Field` will instead become a Python",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:8337,down,down,8337,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['down'],['down']
Availability,"rallel_map and mpi_pmap are basically the same, except that the `multiprocessing.ProcessPoolExecutor` gets replaced by the `mpi4py.MPIPoolExecutor`, and we allow users to provide arbitrary keyword arguments to be passed on to the MPIPoolExecutor. **Detailed list of changes**; * Added `mpi_pmap`. Extracted the common functionality of parallel_map, loky_pmap and mpi_pmap into a `_generic_pmap` function. The behavior of parallel_map and loky_pmap should be unchanged (except for a tiny change in loky_pmap regarding the order in which reduce_func is called).; * Added a section showcasing QuTiP's MPI capabilities in the tutorial notebook ""Non-Markovian Monte Carlo Solver"", see [PR 78](https://github.com/qutip/qutip-tutorials/pull/78) in qutip-tutorials.; * Added `mpi_options` to the options of MultiTrajSolver and all its subclasses. This option only takes effect if the 'map' option is set to 'mpi', in which case the mpi_options are added to the map_kwargs.; * For MultiTrajSolver, all its subclasses and corresponding XXsolve functions, I double-checked that the descriptions of the options in the docstrings correspond to the `solver_options`. That is, I did not touch the solver options except for adding 'mpi_options', but I edited the docstrings in some places in order to reflect the actually available solver options.; * While creating the new section in the tutorial notebook, I noticed some bugs in `MultiTrajResult#__add__` and fixed them.; * Added tests. Tests are skipped if the mpi4py module is not available (like with loky_pmap and the loky module). **Todo**; - [X] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information).; - [x] Finish qutip-tutorials PR. **Related issues or PRs**; Continuing work started in [2280](https://github.com/qutip/qutip/pull/2280)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296:1633,avail,available,1633,https://qutip.org,https://github.com/qutip/qutip/pull/2296,2,['avail'],['available']
Availability,"rary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ____",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:22828,ERROR,ERROR,22828,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"rary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py _____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py:3: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:23730,ERROR,ERROR,23730,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"re is the opportunity for students projects over the winter. I will begin with proposing mine, but this is an opportunity also for mentors to propose their projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projects, even on their own funding resources (most probably together with the development of research projects), in coordination with the lead development team, could help foster development in a more sustainable way. . ## Proposal; I propose to help sustain available projects in a more structural way than what is done now. This is an example of a what we could call a **QEP, or ""QuTiP Enhancement Proposal"".**. - One thing that could be done is to simply expand the existing Wiki. The downside of taking only this action is that only organization members can modify the wiki. So this could work, but mainly as a more static and cleaner staple. . - I propose to integrate the Wiki with Issues that contain the projects, adding a `projects` (or similar) label. This is in the spirit also of other large quantum open source projects such as Qiskit, which has even an ad-hoc `qiskit-community` repository, https://github.com/qiskit-community/. In QuTiP case, we could create a new repository similar to the notebooks one, e.g., https://github.com/qutip/qutip-community/. The downside is that in general the division is subfolders is not advised for easiness of maintainability. So one could just open issues with open projects. Of course, for physics questions, sometimes s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:2255,avail,available,2255,https://qutip.org,https://github.com/qutip/qutip/issues/1132,1,['avail'],['available']
Availability,"re/cy/coefficient.pyx; [ 3/31] Cythonizing qutip/core/cy/math.pyx; [ 4/31] Cythonizing qutip/core/data/add.pyx; [ 5/31] Cythonizing qutip/core/data/base.pyx; [ 6/31] Cythonizing qutip/core/data/csr.pyx; [ 7/31] Cythonizing qutip/core/data/dense.pyx; [ 8/31] Cythonizing qutip/core/data/dia.pyx; [ 9/31] Cythonizing qutip/core/data/dispatch.pyx; [10/31] Cythonizing qutip/core/data/matmul.pyx; [11/31] Cythonizing qutip/core/data/mul.pyx; [12/31] Cythonizing qutip/core/data/norm.pyx; [13/31] Cythonizing qutip/core/data/permute.pyx; [14/31] Cythonizing qutip/core/data/ptrace.pyx; [15/31] Cythonizing qutip/core/data/reshape.pyx; [16/31] Cythonizing qutip/core/data/tidyup.pyx; [17/31] Cythonizing qutip/piqs/_piqs.pyx; [18/31] Cythonizing qutip/core/_brtensor.pyx; [19/31] Cythonizing qutip/core/cy/_element.pyx; [20/31] Cythonizing qutip/core/cy/qobjevo.pyx; [21/31] Cythonizing qutip/core/data/adjoint.pyx; [22/31] Cythonizing qutip/core/data/expect.pyx; [23/31] Cythonizing qutip/core/data/inner.pyx; [24/31] Cythonizing qutip/core/data/kron.pyx; [25/31] Cythonizing qutip/core/data/pow.pyx; [26/31] Cythonizing qutip/core/data/project.pyx; [27/31] Cythonizing qutip/core/data/properties.pyx; [28/31] Cythonizing qutip/core/data/trace.pyx; [29/31] Cythonizing qutip/solver/integrator/explicit_rk.pyx; [30/31] Cythonizing qutip/solver/sode/_sode.pyx; [31/31] Cythonizing qutip/solver/sode/ssystem.pyx; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. </details>. I have also tried to install QuTiP in a virtualenv where I have previously manually installed numpy v 1.24, but it didn't work either. Installing with `pip install ""qutip<5""` succesfully installs qutip 4.7.6. I saw #2322, but I have `g++` installed and available on PATH.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:11048,ERROR,ERROR,11048,https://qutip.org,https://github.com/qutip/qutip/issues/2412,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"remove settings.qutip_graphics flag and conditional imports of matplotlib based on DISPLAY variable, to allow head-less generation of graphics. if matpotlib is unavailable, a warning is given, but no failures until a function that actually uses matplotlib is called",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/235:200,failure,failures,200,https://qutip.org,https://github.com/qutip/qutip/pull/235,1,['failure'],['failures']
Availability,"responding master equation using qutip, $\hat{\dot{\rho}} = i\left[\hat{H},\hat{\rho}\right]$. I have been doing this with a state vector approach, and the code works fine. With my knowledge of density matrices, I would assume that I can simply replace $\ket{\psi}$ with $\hat{\rho} = \ket{\psi}\bra{\psi}$, and use this as my initial state in `mesolve`. This would obtain density matrices for `sln.states` at each time step, however this seems not to be the case. Code:; ```; from bacon import bacon; import qutip as qt; import numpy as np. #inputs into bacon; spin_coeff = [; 4.8,; 9.5,; 4.82,; ]. coupling_coeff = [; 6.4,; 0,; 6.4; ]. H_input = bacon(; 3,; spin_coeff,; coupling_coeff; ). Hd = H_input.driver(); Hp = H_input.problem(). def init_superpsn(n):; '''; n - number of qubits; '''; state = np.ones((2**n), dtype = int)/np.sqrt(2**n); state = qt.Qobj(state); return state. #forming density matrix; initial_state = init_superpsn(3) * init_superpsn(3).dag(); #commenting out this line gives a different error; #initial_state = qt.Qobj(initial_state, dims = [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]]). grain = 100; anneal_time = 100. # initial coefficients; def d_coeff(t,params): ; return (1-t/params[""T""]); def p_coeff(t,params):; return (t/params[""T""]). Hs = [[Hd, d_coeff], [Hp, p_coeff]]; # ""writes down"" hamiltonian at time t ; H_dyn = qt.QobjEvo(Hs,args={""T"":anneal_time}) ; # solves SE for a particular hamiltonian that we ""wrote down""; s = np.linspace(0, anneal_time, grain); sln = qt.mesolve(H_dyn, initial_state, s) ; states0 = sln.states; ```. Bacon is a class I wrote that forms $H_d$ and $H_d$ Hamiltonians using tensor products. `Hp` is ; ```; Qobj data =; [[ 31.92 0. 0. 0. 0. 0. 0. 0. ]; [ 0. 9.48 0. 0. 0. 0. 0. 0. ]; [ 0. 0. -12.68 0. 0. 0. 0. 0. ]; [ 0. 0. 0. -9.52 0. 0. 0. 0. ]; [ 0. 0. 0. 0. 9.52 0. 0. 0. ]; [ 0. 0. 0. 0. 0. -12.92 0. 0. ]; [ 0. 0. 0. 0. 0. 0. -9.48 0. ]; [ 0. 0. 0. 0. 0. 0. 0. -6.32]]; ```. `Hd` is ; ```; Quantum object: dims = [[2, 2, 2], [",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:1221,error,error,1221,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['error'],['error']
Availability,"returning false positives and false negatives. It indicates if the attribute was defined, even though it might be empty. Would it be better to replace; ```; hasattr(config,'openblas_info'); ```; in qutip/utilities.py with; ```; hasattr(config,'openblas_info') and config.openblas_info; ```; likewise for blas_mkl_info (not mkl_info) ?. This would be similar to numpy's own usage in `np.show_config()` (i.e. `np.__config__.py.show()`), which [uses](https://github.com/numpy/numpy/blob/3b7672ebd16982b661b8fbcabac80158662a8784/numpy/__config__.py.in#L116) `if not info_dict` to print ""NOT AVAILABLE"". ### Code to Reproduce the Bug. ```shell; import numpy; numpy.show_config(). import qutip; qutip.about(); ```. ### Code Output. ```shell; $ python3; Python 3.10.9 (main, Dec 7 2022, 13:47:07) [GCC 12.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.show_config(); ...; blas_mkl_info:; NOT AVAILABLE; ...; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; ...; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declaration of BLAS support should match the numpy declaration. If numpy says OpenBLAS is not available, then qutip should probably not say that it is available (even if it is installed). ### Your Environment. ```shell; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shah",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:4537,AVAIL,AVAILABLE,4537,https://qutip.org,https://github.com/qutip/qutip/issues/2053,2,['AVAIL'],['AVAILABLE']
Availability,rhs module load error - testing on Windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/728,1,['error'],['error']
Availability,"ries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries ptf77blas,ptcblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_threads_info'>; NOT AVAILABLE; ; atlas_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries f77blas,cblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries f77blas,cblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries f77blas,cblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_info'>; NOT AVAILABLE; ; FOUND:; extra_compile_args = ['-faltivec', '-I/System/Library/Frameworks/vecLib.framework/Headers']; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; ; /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/distutils/dist.py:274: UserWarning: Unknown distribution option: 'define_macros'; warnings.warn(msg); running bdist_wheel; running build; running config_cc; unifing config_cc, config, build_clib, build_ext, build commands --compiler options; running config_fc; unifing config_fc, config, build_clib, build_ext, build commands --fcompiler options; running build_src; build_src; building py_modules sources; building library ""npymath"" sources; adding 'build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath' to include_dirs.; None - nothing done with h_files = ['build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/npy_math_internal.h']; building library ""npysort"" sources; adding 'build/src.macosx-11.0-arm64-3.9/numpy/core/src/common",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:8112,AVAIL,AVAILABLE,8112,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['AVAIL'],['AVAILABLE']
Availability,"ries lapack_atlas not found in /usr/local/lib; libraries satlas,satlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries satlas,satlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_3_10_info'>; NOT AVAILABLE; ; atlas_threads_info:; Setting PTATLAS=ATLAS; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries ptf77blas,ptcblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries ptf77blas,ptcblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_threads_info'>; NOT AVAILABLE; ; atlas_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries f77blas,cblas,atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries f77blas,cblas,atlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries f77blas,cblas,atlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_info'>; NOT AVAILABLE; ; FOUND:; extra_compile_args = ['-faltivec', '-I/System/Library/Frameworks/vecLib.framework/Headers']; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; ; /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/distutils/dist.py:274: UserWarning: Unknown distribution option: 'define_macros'; warnings.warn(msg); running bdist_wheel; running build; running config_cc; unifing config_cc, config, build_clib, build_ext, build commands --compiler options; running config_fc; unifing config_fc, config, build_clib, build_ext, build commands --fcompiler options; running build_src; build_src; building py_modules sources; building library",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:7625,AVAIL,AVAILABLE,7625,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['AVAIL'],['AVAILABLE']
Availability,"rix to `mesolve` a segmentation fault occurs. A simple proof of concept is included below. `np.random.random` was used to fill the matrix in this case, but the issue was encountered using valid density matricies, and the issue seems to be unrelated to whether the matrix is valid or not as a density matrix. ### Code to Reproduce the Bug. ```shell; import qutip as qtip; import numpy as np. dim = 100 # Small dims don't work. I assume python has some buffer after the array; H = qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_v_ncols=10000, __pyx_v_nrows=<optimised out>, __pyx_v_mat=...) at quti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1277,failure,failure,1277,https://qutip.org,https://github.com/qutip/qutip/issues/1782,2,"['error', 'failure']","['error', 'failure']"
Availability,"rom <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/31",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:2576,down,downstream,2576,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['down'],['downstream']
Availability,"rtionError Traceback (most recent call last); Input In [11], in <cell line: 6>(); 2 return w * np.exp(-w); 4 out = brmesolve(sigmax(), psi0=basis(2,0), tlist=np.arange(0, 1, 0.01), a_ops=[[sigmax(), psd]]); ----> 6 assert len(out.states) == len(out.times), f'{len(out.states)} vs {len(out.times)}'. AssertionError: 10 vs 100; ```. ### Expected Behaviour. As we see, the above code does run and produces an output, but the states list is not the same as the times lists (these should be the same length as they have a 1-1 correspondence). It actually appears it has only given data for the first 10 time-steps in this case.; The same code works fine on Intel chip. ; We can increase the `nsteps` parameter to give the correct number of output states, but they do not agree with Intels output (also see below for related issue), and actually are not always even quantum states, so something in the solver went wrong. Another example, using the cython string formatting:. ```brmesolve([[sigmax(), 'cos(t)']], psi0=basis(2,0), tlist=np.arange(0, 1, 0.01), a_ops=[[sigmax(), '1']])``` works fine on Intel, but gives error ```Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.``` on M1. . Moreover, if I do increase the `nsteps` sufficiently, this does appear to run correctly, but the output states are not the same as we get on Intel (and so I assume are incorrect). ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.9.13; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. A few random observations, hopefully not just an issue on my side due to my local configurations. I installed qutip via conda, and it generally seems to work fine on M1. In the meantime, everything runs as expected with Rosetta.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965:1760,error,error,1760,https://qutip.org,https://github.com/qutip/qutip/issues/1965,2,['error'],['error']
Availability,"running build; running config_cc; unifing config_cc, config, build_clib, build_ext, build commands --compiler options; running config_fc; unifing config_fc, config, build_clib, build_ext, build commands --fcompiler options; running build_src; build_src; building py_modules sources; building extension ""qutip.cy.spmatfuncs"" sources; building extension ""qutip.cy.stochastic"" sources; building extension ""qutip.cy.sparse_utils"" sources; building extension ""qutip.cy.graph_utils"" sources; building extension ""qutip.control.cy_grape"" sources; building data_files sources; build_src: building npy-pkg config files; running build_py; copying qutip/version.py -> build/lib.linux-armv7l-2.7/qutip; copying build/src.linux-armv7l-2.7/qutip/**config**.py -> build/lib.linux-armv7l-2.7/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: arm-linux-gnueabihf-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC. compile options: '-I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/include/python2.7 -c'; extra options: '-w -ffast-math -O3 -march=native -mfpmath=sse'; arm-linux-gnueabihf-gcc: qutip/cy/spmatfuncs.c; arm-linux-gnueabihf-gcc: error: unrecognized command line option '-mfpmath=sse'; arm-linux-gnueabihf-gcc: error: unrecognized command line option '-mfpmath=sse'; error: Command ""arm-linux-gnueabihf-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/include/python2.7 -c qutip/cy/spmatfuncs.c -o build/temp.linux-armv7l-2.7/qutip/cy/spmatfuncs.o -w -ffast-math -O3 -march=native -mfpmath=sse"" failed with exit status 1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/309:1605,error,error,1605,https://qutip.org,https://github.com/qutip/qutip/issues/309,3,['error'],['error']
Availability,"s `'other'`, since it is not a standard operation, but that's ok because we no longer need `Qobj.type` for fast dimension parsing. The `Compound` threading over `Map` goes follows these rules:. - `Compound(Map(x1, y1), Map(x2, y2))` is `Map(Compound(x1, x2), Compound(y1, y2))`; - `Compound(Map(x1, y1), Space(z))` is `Map(Compound(x1, Field), Compound(y1, Space(z)))`. In other words, the `from` and `to` fields inside maps are `Compound`ed with their counterparts, and `Space` is ""promoted"" to `Map(Field, Space)`. This latter object is not actually valid, but `Space` will behave as if it were within `Compound`. Related but different, `Compound(Field, Field)` will exist for the purposes of tensor-product `'bra'` types as the `to` field of `Map` (to allow us to keep track of empty spaces), but a `Qobj` whose dimensions would be a `Compound` made entirely of `Field` will instead become a Python complex number. The dimensions types should be available for advanced users (to allow them to access the full parsing speed-ups), but should not be presented as the standard choice. I propose we place the types inside a nested namespace, such as `qutip.dims` (logically - physically it would be `qutip/core/dims.py`), to allow the form `from qutip.dims import *` where appropriate without forcing the user to do the modern bad practice left over from our MATLAB past `from qutip import *`. ## User impact. In principle, nothing will change for the normal QuTiP user compared to the 4.x branch. You will still be able to supply the `dims` argument to the `Qobj` constructor as lists in the exact same format, and they will be parsed in the same way. Users _do not_ need to type out the new computer-friendly dimensions objects, but they will be available for advanced users who frequently make `Qobj` using the raw constructor with funny dimensions. We will publicly provide `qutip.dims.parse` to turn a list into the new form, so even advanced users do not need to type out all the nonsense. `Qobj`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:9360,avail,available,9360,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['avail'],['available']
Availability,"s not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OF",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68286,error,error,68286,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"s relatively new, so by default pybuild uses setup.py if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build, not PEP517 build); INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```. ### Additional Context. PEP517 support is new for Debian. It is possible the pybuild build tool needs to be adapted to handle setup.py options like `--with-openmp` in the context of PEP517. But I've tried to pose the issue here in terms of the underlying python3 build commands without needing to consider pybuild as such. Is there a different way in which `--with-ope",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:1575,error,error,1575,https://qutip.org,https://github.com/qutip/qutip/issues/1875,1,['error'],['error']
Availability,"s to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. I don't know if the macOS images will run on the new M1 chips, but if not, there's not much that can be done there until GitHub Actions adds the necessary cross-compilation headers and libraries to their CI. ### Examples. You can see the result of this upload on the testing PyPI server: https://test.pypi.org/project/qutip-jakelishman (version 5.0.0a1 failed to upload due to previous testing, and 5.0.0a2 has a broken OpenMP configuration so won't run). I ran the CI action from my fork, with a temporary commit that changed the server to the testing archive (and the package name). Here's a screenshot of what the deployment screen will look like:. <img width=""1440"" alt=""GitHub Actions screen when triggering the build and deploy action"" src=""https://user-images.githubusercontent.com/5968590/106396051-8e49a980-63fd-11eb-867d-48a5ff2527f9.png"">. ### Further action needed. The GitHub Action won't become available until this is merged, _and_ `dev.major` is merged into `master`. This is because GitHub only makes workflows on the default branch available. ~We also need to generate a PyPI secret token with write access to the `qutip` package, and add it to the qutip/qutip repository secrets with the name `PYPI_TOKEN` (as defined in `.github/workflows/build.yml`).~ *edit: Done 2021-02-15.*",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:4350,avail,available,4350,https://qutip.org,https://github.com/qutip/qutip/pull/1429,2,['avail'],['available']
Availability,s/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/sit,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30318,ERROR,ERROR,30318,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"se use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68520,error,error,68520,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,segmentation fault running testing environment,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/1124,1,['fault'],['fault']
Availability,"set size unnecessarily if image fails to open <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7056"">#7056</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7210"">#7210</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused variables <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7205"">#7205</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed signedness comparison warning <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7203"">#7203</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed combining single duration across duplicate APNG frames <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7146"">#7146</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove temporary file when error is raised <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7148"">#7148</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not use temporary file when grabbing clipboard on Linux <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7200"">#7200</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If the clipboard fails to open on Windows, wait and try again <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7141"">#7141</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed saving multiple 1 mode frames to GIF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7181"">#7181</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced absolute PIL import with relative import <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7173"">#7173</a> [<a href=""https://github.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:7078,error,error,7078,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['error'],['error']
Availability,six library not available during Travis tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/378:16,avail,available,16,https://qutip.org,https://github.com/qutip/qutip/issues/378,1,['avail'],['available']
Availability,"sks, then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end.; Job timeout | Ignored | Always completes all tasks anyway, see below. **New behavior**. &nbsp; | `parallel_map` | `loky_pmap`; ---|---|---; Timeout | Finishes currently running tasks, <br> then returns results of all finished tasks. | Aborts currently running tasks, <br> then returns results of all finished tasks.; CTRL+C | First CTRL+C raises `KeyboardInterrupt` | First CTRL+C raises `KeyboardInterrupt`; Task raises <br> exception | `fail_fast`: finishes running tasks, <br> then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end. | `fail_fast`: finishes tasks earlier in the list, then <br> aborts remaining ones and raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end.; Job timeout | Removed from documentation | Removed from documentation. **Job timeout**. Currently, the job timeout parameter is ignored by parallel_map. In loky_pmap, it is not the maximum allowed time for one job, but the maximum time between two job finishes (possibly in different processes). If this time is exceeded, all tasks will still be executed until the end; only the results of the tasks that finished too slowly will be discarded. I do not think that this was the intention of the job timeout parameter?. Unfortunately, both `ProcessPoolExecutor` (which parallel_map is based on) and its loky version do not support timeouts for single tasks, nor do they support aborting single tasks manually. (The loky one supports killing *all* worker processes at once.) If we wanted to have a job timeout parameter, we would need to either use non-public API to obtain references to the worker processes and interrupt them manually, or to completely rewrite parallel_map and base it on e.g. `multiprocessing.pool.Pool`. Maybe better to just remove the job_timeout parameter? If you agree with that, I will then also remove it from the available options for `MultiTrajSolver` and all its subclasses.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2280:3170,avail,available,3170,https://qutip.org,https://github.com/qutip/qutip/pull/2280,1,['avail'],['available']
Availability,"so I am completely new to this, so maybe I did not do the right thing, which is common.; qutip.about() shows me the following things:. --------------------. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.5; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.8; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\***\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. --------------------. What I have done so far:; - installed qutip from source following the instructions; --- the ""zspmv_openmp.cpp"" problem is solved; --- everything is installed without errors. - Updated all packages/spyder/python/anaconda/... - installed Visual Studio Build Tools 2019 (2) Version 16.7.7; --- this includes ""C++ Buildtools"" (maybe not important, but also "".NET Desktop-Buildtools"" and "".NET Core-Buuildtools"". - I checked, whether openmp is installed in anaconda powershell prompt via ""conda install -c conda-forge openmp""; --- it shows ""# All requested packages already installed."" So it seems openmp is already installed. It would be a great help, if you give me a possible solution to this. Thanks in advance!!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378:1602,error,errors,1602,https://qutip.org,https://github.com/qutip/qutip/issues/1378,1,['error'],['errors']
Availability,"ssign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68403,error,error,68403,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"stainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urlli",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:1477,avail,available,1477,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['avail'],['available']
Availability,sts/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30639,ERROR,ERROR,30639,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"sue!. I'm trying to simulate a simple two-level system with a sinusoidally varying external magnetic field. The code is given below:. ```python3; import matplotlib.pyplot as plt; import numpy as np; from qutip import basis, sigmax, sigmay, sigmaz, Options, mesolve, expect; from scipy.constants import physical_constants. g = 2; muB = (physical_constants[""Bohr magneton in eV/T""])[0] ## Bohr-Magneton in eV/Tesla; gamma = 0.5*muB*g #in eV/Tesla. h_inv = (physical_constants[""reduced Planck constant in eV s""][0])**-1. gamma = gamma*h_inv #in sec-1/Tesla; del physical_constants; ## Defining time of evolution; times = np.linspace(0, 6*10**-7, 1000); noe = len(times); B = 1; Bx = -(1*10**-3); ## Create a Quantum 2 state basis; up = basis(2,0) ; down = basis(2,1) ; upd = up * up.dag() ; downd = down * down.dag(); sy = sigmay(); sz = sigmaz(); sx = sigmax(); Hx = gamma*Bx*sx; options = Options(nsteps=10000); H0 = -gamma*B*sz ; resonant_frequency = H0.eigenenergies() ; def Hx_coeff(t, args):; return 1 * np.cos(-2*resonant_frequency[0]*t );. H = [H0,[Hx,Hx_coeff]]; ; result = mesolve(H, downd, times, [], options=options); rh = result.states; upexpect, downexpect = [], []; for r in rh: ; up_e = expect(up*up.dag(), r); down_e = expect(down*down.dag(), r); upexpect.append(up_e); downexpect.append(down_e); plt.plot(times, upexpect, label = ""Upstate"", color='g', linestyle='-.'); plt.plot(times, downexpect, label = ""Downstate"", color='r', linestyle='-.'); plt.title(""Prob v/s Time for B = {}"".format(B)); plt.legend(loc=""best""); plt.xlabel(""Time""); plt.ylabel(""Probability of State""); plt.grid(); plt.show(); ```. The Hamiltonian of the system is hermitian, and theoretically, we don't expect such decay in the amplitude. So, what is happening in the above program that is leading to such a strange evolution? . ![Figure_2](https://user-images.githubusercontent.com/49644300/209442963-3e2a047f-1714-4d5c-b484-fa78e91a8062.png); . As soon as I increase the value of `B` the decay is even faster!?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2051:1110,down,downd,1110,https://qutip.org,https://github.com/qutip/qutip/issues/2051,7,"['Down', 'down']","['Downstate', 'down', 'downd', 'downexpect']"
Availability,"t cause of the following exception:. def testPropHOSteadyPar():; ""Propagator: steady state parallel""; a = destroy(5); H = a.dag()*a; c_op_list = []; kappa = 0.1; n_th = 2; rate = kappa * (1 + n_th); c_op_list.append(np.sqrt(rate) * a); rate = kappa * n_th; c_op_list.append(np.sqrt(rate) * a.dag()); > U = propagator(H,2*np.pi,c_op_list, parallel=True). qutip\qutip\tests\test_propagator.py:86:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; qutip\qutip\propagator.py:195: in propagator; output = parallel_map(_parallel_mesolve, range(N * N),; qutip\qutip\parallel.py:234: in parallel_map; return [ar.get() for ar in async_res]; qutip\qutip\parallel.py:234: in <listcomp>; return [ar.get() for ar in async_res]; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <multiprocessing.pool.ApplyResult object at 0x000001E7390028B0>, timeout = None. def get(self, timeout=None):; self.wait(timeout); if not self.ready():; raise TimeoutError; if self._success:; return self._value; else:; > raise self._value; E ValueError: incompatible Liouvillian and state dimensions: [[[2], [2]], [[2], [2]]] and [[5], [5]]. C:\ ... \Python\Python39\lib\multiprocessing\pool.py:771: ValueError; ----------------------------------------------------- Captured stdout call ------------------------------------------------------ . ```. **To Reproduce**; ```; import qutip.testing. inp = input(""Proceed with full test? [Y/N]: ""); if inp == ""y"" or inp == ""Y"":; qutip.testing.run(). print(""Process Complete!""); ```. System Information:; Windows 10; Python 3.9.6. The error: - incompatible Liouvillian and state dimensions; didn't seem like it was because of missing a requirement, so I'm posting this here. Also, as a side note, to reach 61% it took my system 4 hours, which doesn't sound right (I have a decent system with 8GB ram and core i5). Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1711:3086,error,error,3086,https://qutip.org,https://github.com/qutip/qutip/issues/1711,1,['error'],['error']
Availability,"t gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate0; gate1; gate3, gate4; gate2, gate5; gate6; ```; Notice that gate3 and gate4 commute with gate2, therefore, the order is changed to reduce the number of cycles. **Related issues or PRs**; Solve #1243 . **Changelog**; Add a gate(pulse) scheduler for quantum circuit. **Others**; @sarsid Maybe you will be interested in it. It can be used to determine which gates can be executed at the same time. So maybe we can improve the efficiency of the QubitCircuit by combining several gates together and generate the full matrix using `qutip.qip.expand_operation`. However, writing such scheduler in Python is usually not the most efficient choice and there will be some overhead. I'm not sure if it will bring any real improvement in circuit simulation and where is the threshold. I'm also pinging @tehruhn because I remember you mentioned something similar before (apologize if not). More tests are on the way, but you are very welcome to play with it a bit and see if there is any bug!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:3655,ping,pinging,3655,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['ping'],['pinging']
Availability,"t(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-package",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29759,ERROR,ERROR,29759,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"t19937.pyx has not changed; numpy/random/bit_generator.pyx has not changed; Processing numpy/random/_bounded_integers.pyx; numpy/random/mtrand.pyx has not changed; numpy/random/_generator.pyx has not changed; numpy/random/_pcg64.pyx has not changed; numpy/random/_common.pyx has not changed; Cythonizing sources; blas_opt_info:; blas_mkl_info:; customize UnixCCompiler; libraries mkl_rt not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; blis_info:; libraries blis not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; openblas_info:; libraries openblas not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; atlas_3_10_blas_threads_info:; Setting PTATLAS=ATLAS; libraries tatlas not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; atlas_3_10_blas_info:; libraries satlas not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; atlas_blas_threads_info:; Setting PTATLAS=ATLAS; libraries ptf77blas,ptcblas,atlas not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; atlas_blas_info:; libraries f77blas,cblas,atlas not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; accelerate_info:; libraries accelerate not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; Library accelerate was not found. Ignoring; libraries veclib not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; Library veclib was not found. Ignoring; FOUND:; extra_compile_args = ['-faltivec', '-I/System/Library/Frameworks/vecLib.framework/Headers",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:3536,AVAIL,AVAILABLE,3536,https://qutip.org,https://github.com/qutip/qutip/issues/1740,7,['AVAIL'],['AVAILABLE']
Availability,"te-of-the-art research in open quantum systems using QuTiP. It provides the most comprehensive toolbox to characterize noise and dissipation affecting quantum systems as well as quantum information processing features. QuTiP has been developed and maintained by a group of open-source contributors for several years and has been used for research, teaching and in the emerging quantum technology industry. The QuTiP community has grown immensely with several projects that build on top of it. In this document we refer to the “QuTiP project” or “ the project” with reference to all software developed under the QuTiP Github organization, hosted at “[www.github.com/qutip](www.github.com/qutip)” and all related activities involving its community happening through its official channels. **<span style=""text-decoration:underline;"">The Community</span>**. QuTiP is at the center of a lively ecosystem and creative community. As of October 2020, QuTiP’s large community comprises over 80 code contributors and thousands of users that have downloaded the software over 300’000 times. QuTiP enables an infrastructure of other scientific libraries for the investigation of specific quantum physics or quantum information processing features. . There are several ways through which members of the wider QuTiP community can receive information on QuTiP. This is through any of its official channels: the Google forum; the qutip.org/news webpage tracking the releases on Github, and opening [Issues](https://github.com/qutip/qutip/issues) on Github to file bug reports or discuss and proposed enhancements. Users are encouraged to contribute bug fixes or enhancements to the project with [Pull Requests](https://github.com/qutip/qutip/pulls). **<span style=""text-decoration:underline;"">Governance</span>**. This governance document outlines the governance of the QuTiP project, in order to better serve the community and provide robust liveliness and sustained maintenance for the project. Changes to this docu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:4974,down,downloaded,4974,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['down'],['downloaded']
Availability,"tem/Library/Frameworks/vecLib.framework/Headers']; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; ; FOUND:; extra_compile_args = ['-faltivec', '-I/System/Library/Frameworks/vecLib.framework/Headers']; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; ; non-existing path in 'numpy/distutils': 'site.cfg'; lapack_opt_info:; lapack_mkl_info:; libraries mkl_rt not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; openblas_lapack_info:; libraries openblas not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; openblas_clapack_info:; libraries openblas,lapack not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; flame_info:; libraries flame not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; atlas_3_10_threads_info:; Setting PTATLAS=ATLAS; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries tatlas,tatlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries tatlas,tatlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries tatlas,tatlas not found in /usr/lib; <class 'numpy.distutils.system_info.atlas_3_10_threads_info'>; NOT AVAILABLE; ; atlas_3_10_info:; libraries lapack_atlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries satlas,satlas not found in /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib; libraries lapack_atlas not found in /usr/local/lib; libraries satlas,satlas not found in /usr/local/lib; libraries lapack_atlas not found in /usr/lib; libraries sa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:5600,AVAIL,AVAILABLE,5600,https://qutip.org,https://github.com/qutip/qutip/issues/1740,4,['AVAIL'],['AVAILABLE']
Availability,"tepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-package",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5900,error,error,5900,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/te",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29848,ERROR,ERROR,29848,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py:3: in <module>; from numpy.testing import (; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:10204,ERROR,ERROR,10204,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,they are now available in the qutip/qutip-benchmark repository,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/217:13,avail,available,13,https://qutip.org,https://github.com/qutip/qutip/pull/217,1,['avail'],['available']
Availability,"thon/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ___________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:17432,ERROR,ERROR,17432,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"thon/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py:4: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _____________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:25539,ERROR,ERROR,25539,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"thon/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py ________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:3941,ERROR,ERROR,3941,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"tion purposes. The integral type used as the indices in the `CSR` type is now done by simple typedef in the files `qutip/core/data/base.{pyx,pxd}`, so changes it in those two files at compile-time will allow you to switch between 32-bit and 64-bit. The C++ backing source file `zspmv.cpp` and its associated header are renamed to `matmul_csr_vector` to match the new data-layer naming conventions, but more importantly, the functions are now templated over integral types so they will ""magically"" work at either size. In general, `setuptools` likes to link dynamically (on Linux and Mac, but not Windows), and so the templates have to be made explicit, rather than allowing Cython to generate only the necessary one. _Note:_ I'll make a PR to push deprecation warnings onto `eseries`, `essolve` and all other removals or renames that don't already have one in `master`, ready for when we drop QuTiP 4.6.0. -----------. _Original top comment:_. Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:3274,down,down,3274,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['down'],['down']
Availability,"tions using normal class inheritance. ; `install` options are put back into `settings`, these are most options that the user cannot change, such as the presence of mkl or running in `ipython`. The exceptions is the location of the .qutip folder which is a setting but can be changed. The base for the options is a dict with fixed keys and default values. As before, options can be set as keywork at initialization or when setting items. The default can be changed using context (mainly for tests) or setting items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1259,error,error,1259,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['error'],['error']
Availability,"tip on the command line using Enthought python. No errors... Then when I run I get:. Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. > > > from qutip import *; > > > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > > > Please check your Xcode installation; > > > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > > > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > > > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > > > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > > > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > > > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > > > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > > > compilation terminated.; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 213, in <module>; > > > from qutip.qobj import *; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; > > > from qutip.ptrace import _ptrace; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; > > > from qutip.sparse import sp_reshape; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_6",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:1008,error,error,1008,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['error'],['error']
Availability,"tip.about(); ```. ### Code Output. ```shell; $ python3; Python 3.10.9 (main, Dec 7 2022, 13:47:07) [GCC 12.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.show_config(); ...; blas_mkl_info:; NOT AVAILABLE; ...; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; ...; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declaration of BLAS support should match the numpy declaration. If numpy says OpenBLAS is not available, then qutip should probably not say that it is available (even if it is installed). ### Your Environment. ```shell; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.24.1; Scipy Version: 1.8.1; Cython Version: 0.29.32; Matplotlib Version: 3.6.2; Python Version: 3.10.9; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dis",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:5208,avail,available,5208,https://qutip.org,https://github.com/qutip/qutip/issues/2053,2,['avail'],['available']
Availability,"tomatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; As proposed by @hodgestar, I am splitting #1409 into smaller PRs. This is part 1/3, but contain some change in core that would come later in the Solver PR:. - Add manual cython dispatched function. Used by vern ODE method. - Add `to` to `QobjEvoFunc` and some check. Used by brmesolve rework. - Add a version to string Coefficient, a 'try_parsing' options, partial arguments update and basic cleaning function.; This comes mostly from talk with @jakelishman.; When updating coefficient with new argument, it no longer require all coefficient to be given, but will simply update those available. ; Since those change must overwrite old version of the coefficient, a version tag is added to the coefficient folder and a function to erase the old version. It use it's own `COEFF_VERSION`, not qutip version since I don't expect most qutip update will not touch `coefficient.pyx` so we need not to force user to recompile. But it raise the risk of forgetting to change it when working on them. ; Lastly, I added an option to disable the string coefficient parsing since there seems to have some reservation in the last meeting.; But there is a weakness when using that form if unused args are passed: the `key = args['key']` code could be generated for those extra `args` but will not affect the hash name. . **Related issues or PRs**; Will replace part of #1409.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461:1683,avail,available,1683,https://qutip.org,https://github.com/qutip/qutip/pull/1461,1,['avail'],['available']
Availability,"tories, # cspell:disable-line; ); ```. ### Code Output. ```shell; File ""..."", line 270, in solve_stochastic_schrodinger_equation; result = qutip.ssesolve(; ^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\stochastic.py"", line 461, in ssesolve; return sol.run(; ^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\multitraj.py"", line 198, in run; map_func(; File ""...\.venv\Lib\site-packages\qutip\solver\parallel.py"", line 122, in serial_map; remaining_ntraj = reduce_func(result); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 645, in add ; op(trajectory); File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 519, in _reduce_states; accu + self._to_dm(state); ~~~~~^~~~~~~~~~~~~~~~~~~~; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 408, in __add__ ; return Qobj(_data.add(self._data, other._data),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""qutip\\core\\data\\dispatch.pyx"", line 392, in qutip.core.data.dispatch.Dispatcher.__call__; File ""qutip\\core\\data\\add.pyx"", line 118, in qutip.core.data.add.add_csr; File ""qutip\\core\\data\\add.pyx"", line 154, in qutip.core.data.add.add_csr; File ""qutip\\core\\data\\csr.pyx"", line 159, in qutip.core.data.csr.CSR.copy; File ""qutip\\core\\data\\csr.pyx"", line 542, in qutip.core.data.csr.empty_like; File ""qutip\\core\\data\\csr.pyx"", line 533, in qutip.core.data.csr.empty; MemoryError; ```. ### Expected Behaviour. Code should not have to store the full density matrix, and should not lead to a memory error. ### Your Environment. ```shell; QuTiP Version: 5.0.0a2; Numpy Version: 1.26.3; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.1; Number of CPUs: 4; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: ...; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299:2511,error,error,2511,https://qutip.org,https://github.com/qutip/qutip/issues/2299,1,['error'],['error']
Availability,"tps://redirect.github.com/python-pillow/Pillow/issues/7667"">#7667</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Allow uncompressed TIFF images to be saved in chunks <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7650"">#7650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Concatenate multiple JPEG EXIF markers <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7496"">#7496</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed IPTC tile tuple to match other plugins <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7661"">#7661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not assign new fp attribute when exiting context manager <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7566"">#7566</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support arbitrary masks for uncompressed RGB DDS images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7589"">#7589</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support setting ROWSPERSTRIP tag <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7654"">#7654</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply ImageFont.MAX_STRING_LENGTH to ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7662"">#7662</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Optimise <code>ImageColor</code> using <code>functools.lru_cache</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7657"">#7657</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Restricted environment keys for ImageMath.eval() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7655"">#7655</a> [<a href=""https://github.com",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:2369,mask,masks,2369,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['mask'],['masks']
Availability,"ture using options. . The best signature I believe is `f(t, **args)` since it allows to use more natural function call using kwargs (`f(t, w=0, a=1)`). However, it is the slowest in the #1123 implementation (up to 10x): some items are added to `args` for internal use and they need to be filtered at each call. It could be brought to 2.5x with some work, but no better. `f(t)` is about 2x slower than `f(t, args)`. But it's less agile: if the Hamiltonian use `f(t, w1=0)`, we cannot add a c_ops using `f(t, w2=0)`, both function must accept `w1` and `w2`. `args` could just hide unused items. Which ever we choose as the main one will be 2~3x faster than the other. We can have automatic detection of the signature if we want to be fancy. Which signature do you think is better?. Second, these function can depend on the state with the option `rhs_with_state`. Thus the coefficients are `f(t, state, args)` with `state` a 1D numpy array.; When making QobjEvo, I added special `args`' keys that indicate that the value should be updated with the state: setting `args = {""val=Qobj"":psi0, ""val"":psi0}` would tell `args[""val""]` to be updated with the state at each use in the solver. The state can be obtained as Qobj, np.array or the args could be updated to be the expectation value of another Qobj.; There are some bug for it in master presently but it will work with PR #1127. Using these special keys for this work well but they need to be removed for the new signature candidate (`f(t, **args)`). Also you cannot remove / fix to a constant them once declared. Since they are not used/working yet, now is the time to change to something better. I could see 2 other options:; - reserved keys: `args = {""state_vec"":psi0}`, this will always be the state (np.array) if available.; -- collapse are less practical this way.; - special values: `args = {""state_vec"":qt.feedback(""vec"")}`. This seems the most natural to me since the value is what change. . I would appreciate feedback and ideas on the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136:2348,avail,available,2348,https://qutip.org,https://github.com/qutip/qutip/issues/1136,1,['avail'],['available']
Availability,"ues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:5620,error,error,5620,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['error'],['error']
Availability,"uglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:16525,ERROR,ERROR,16525,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"um]). np.real(R.full()). tlist = np.linspace(0, 15.0, 1000). psi0 = rand_ket(2). e_ops = [sigmax(), sigmay(), sigmaz()]. expt_list = bloch_redfield_solve(R, ekets, psi0, tlist, e_ops). sphere = Bloch(). sphere.add_points([expt_list[0], expt_list[1], expt_list[2]]). sphere.vector_color = ['r']. sphere.add_vectors(np.array([delta, 0, eps0]) / np.sqrt(delta ** 2 + eps0 ** 2)). sphere.make_sphere(). plt.show(). output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]); ```. The code runs fine until the last line which gives the following response:; ```; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-1-79f7f2013969> in <module>; 35 plt.show(); 36; ---> 37 output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]). ~\Anaconda3\envs\qutip-env\lib\site-packages\qutip\bloch_redfield.py in brmesolve(H, psi0, tlist, a_ops, e_ops, c_ops, args, use_secular, sec_cutoff, tol, spectra_cb, options, progress_bar, _safe_mode, verbose); 196; 197 if _safe_mode:; --> 198 _solver_safety_check(H, psi0, a_ops+c_ops, e_ops, args); 199; 200 # check for type (if any) of time-dependent inputs. ~\Anaconda3\envs\qutip-env\lib\site-packages\qutip\solver.py in _solver_safety_check(H, state, c_ops, e_ops, args); 945 _structure_check(Hdims, Htype, _temp_state); 946 else:; --> 947 raise Exception('Invalid td-list element.'); 948 if do_tests:; 949 _structure_check(Hdims, Htype, _temp_state). Exception: Invalid td-list element.; ```. Output of version_table(); ```; Software	Version; QuTiP	4.5.0; Numpy	1.18.1; SciPy	1.4.1; matplotlib	3.1.3; Cython	0.29.15; Number of CPUs	4; BLAS Info	INTEL MKL; IPython	7.13.0; Python	3.8.1 (default, Mar 2 2020, 13:06:26) [MSC v.1916 64 bit (AMD64)]; OS	nt [win32]; Sun Mar 29 21:11:12 2020 GMT Daylight Time; ```. Other examples (like this one https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve.ipynb ) run without errors.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223:2776,error,errors,2776,https://qutip.org,https://github.com/qutip/qutip/issues/1223,1,['error'],['errors']
Availability,umpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30087,ERROR,ERROR,30087,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,unit test failures with 4.7.5 and scipy 1.12 on aarch64 linux,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:10,failure,failures,10,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['failure'],['failures']
Availability,"unt.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67124,error,error,67124,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"urn function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =========================================================; ERROR qutip/tests/core/test_gates.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/core/test_qobjevo.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_integrator.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_mesolve.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ============================================= 17 deselected, 40 warnings, 4 errors in 5.47s ==============================================; ```. ### Expected Behaviour. No errors. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.14.0; Cython Version: 3.0.10; Matplotlib Version: 3.9.0; Python Version: 3.12.4; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/lorenzo/Desktop/virtual-envs/project1/lib/python3.12/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:5564,ERROR,ERROR,5564,https://qutip.org,https://github.com/qutip/qutip/issues/2472,5,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"uting**:; - **Implementation**: Utilized Python’s `concurrent.futures` module, specifically `ProcessPoolExecutor`, to parallelize the computation of correlation values over different tau values (`taulist`). Each tau value computation is independent of others, making this a suitable case for parallel execution.; - **Function Splitting**: Created a helper function `compute_single_tau_correlation` to handle the computation for a single tau. This function manages the setup of the quantum system, computes the correlation for its specific tau, and handles any exceptions that may occur, logging them accordingly.; - **Resource Management**: Used the `cpu_count` from the `os` module to dynamically determine the number of available processors and limited the number of worker processes to avoid overwhelming the host system. This approach helps in balancing load and performance. 2. **Error Handling and Robustness**:; - Enhanced the resilience of the parallel computation by encapsulating the worker function’s body in a try-except block, ensuring that failures in one computation do not impact the overall execution.; - Ensured the stability of the test environment by restoring the original function state after the test execution, preventing side effects on subsequent tests. 3. **Testing**:; - **Extended Test Coverage**: Developed new test cases to validate both the parallel and sequential execution paths of the function. Tests ensure that both modes produce equivalent results, thereby confirming that the parallelization did not introduce computational errors.; - **Integration with Existing Tests**: Integrated the new tests into the existing pytest framework used for QuTiP, making use of fixtures and parameterization to test different scenarios and system setups effectively. ### Implementation Details. - **Concurrency**: The parallel execution is managed through a pool of processes, where each process is responsible for a subset of the total computations. This method is particularl",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395:1283,Error,Error,1283,https://qutip.org,https://github.com/qutip/qutip/pull/2395,4,"['Error', 'Robust', 'failure', 'resilien']","['Error', 'Robustness', 'failures', 'resilience']"
Availability,utip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30721,ERROR,ERROR,30721,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"ve import <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7173"">#7173</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed files and types override <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7194"">#7194</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>10.0.1 (2023-09-15)</h2>; <ul>; <li>; <p>Updated libwebp to 1.3.2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7395"">#7395</a>; [radarhere]</p>; </li>; <li>; <p>Updated zlib to 1.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7344"">#7344</a>; [radarhere]</p>; </li>; </ul>; <h2>10.0.0 (2023-07-01)</h2>; <ul>; <li>; <p>Fixed deallocating mask images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageFont.MAX_STRING_LENGTH <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7244"">#7244</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Fix Windows build with pyproject.toml <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7230"">#7230</a>; [hugovk, nulano, radarhere]</p>; </li>; <li>; <p>Do not close provided file handles with libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7199"">#7199</a>; [radarhere]</p>; </li>; <li>; <p>Convert to HSV if mode is HSV in getcolor() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7226"">#7226</a>; [radarhere]</p>; </li>; <li>; <p>Added alpha_only argument to getbbox() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7123"">#7123</a>; [radarhere. hugovk]</p>; </li>; <li>; <p>Prioritise speed in <em>repr_png</em> <a href=""https://",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:8951,mask,mask,8951,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['mask'],['mask']
Availability,"ve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=True) ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 5.72e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:4066,ERROR,ERROR,4066,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['ERROR'],['ERROR']
Availability,"x_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/.hypothesis/examples'); rootdir: /usr/lib/python3/dist-packages/qutip/tests, configfile: pytest.ini; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:2353,error,error,2353,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"y"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:593: in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:936: in _smesolve_generic; task_args, task_kwargs, **map_kwargs); ../../anaconda3/lib/python3.6/site-packages/qutip/parallel.py:260: in parallel_map; return [ar.get() for ar in async_res]; ../../anaconda3/lib/python3.6/site-packages/qutip/parallel.py:260: in <listcomp>; return [ar.get() for ar in async_res]; ../../anaconda3/lib/python3.6/multiprocessing/pool.py:644: in get; raise self._value; E IndexError: index 0 is out of bounds for axis 0 with size 0; collected 0 items / 1 errors; ==================================== ERRORS ====================================; ______________________ ERROR collecting test_smesolve2.py ______________________; multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:593: in smesolve; res = _smesolve_generic(sso",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:3615,error,errors,3615,https://qutip.org,https://github.com/qutip/qutip/issues/1029,3,"['ERROR', 'error']","['ERROR', 'ERRORS', 'errors']"
Availability,"y-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; =============================================================================================== test session starts ===============================================================================================; platform",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:1806,error,error,1806,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"y/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py:1: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py:2: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ___________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py __",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:4843,ERROR,ERROR,4843,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"y; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ===================================================== 51 deselected, 52 warnings, 30 errors in 0.97s =====================================================`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:31035,ERROR,ERROR,31035,https://qutip.org,https://github.com/qutip/qutip/issues/2180,10,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"ython-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:7805,error,error,7805,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['error'],['error']
Availability,"z Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.0; Scipy Version: 1.7.0; Cython Version: 0.29.23; Matplotlib Version: 3.4.2; Python Version: 3.9.6; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/homebrew/lib/python3.9/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; ```. **Additional context**; No sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-). ```$ sysctl hw; hw.ncpu: 8; hw.byteorder: 1234; hw.memsize: 17179869184; hw.activecpu: 8; hw.optional.amx_version: 2; hw.optional.arm64: 1; hw.optional.armv8_1_atomics: 1; hw.optional.armv8_2_fhm: 1; hw.optional.armv8_2_sha3: 1; hw.optional.armv8_2_sha512: 1; hw.optional.armv8_crc32: 1; hw.optional.breakpoint: 6; hw.optional.floatingpoint: 1; hw.optional.neon: 1; hw.optional.neon_fp16: 1; hw.optional.neon_hpfp: 1; hw.optional.ucnormal_mem: 1; hw.optional.watchpoint: 4; hw.cacheconfig: 8 1 1 0 0 0 0 0 0 0; hw.cachelinesize: 128; hw.cachesize: 3616980992 65536 4194304 0 0 0 0 0 0 0; hw.cpu64bit_capable: 1; hw.cpufamily: 458787763; hw.cpusubfamily: 2; hw.cpusubtype: 2; hw.cputype: 16777228; hw.ephemeral_storage: 0; hw.l1dcachesize: 65536; hw.l1icachesize: 131072; hw.l2cachesize: 4194304; hw.logicalcpu: 8; hw.logicalcpu_max: 8; hw.osenvironment: ; hw.packages: 1; hw.pagesize: 16384; hw.pagesize32: 16384; hw.physicalcpu: 8; hw.physicalc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606:2760,error,error,2760,https://qutip.org,https://github.com/qutip/qutip/issues/1606,1,['error'],['error']
Deployability," (""Monte Carlo Solver""), it describes the algorithm for the monte carlo simulation as:. > I: Choose a random number r between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r, at which point a jump occurs.; > III: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥r. In actuality, through my own reading of the code, **two** random numbers are generated, one for determining if a jump occurs, and another to determine which jump operator was responsible. I suggest the following change (changes highlighted in bold):. > I: Choose a random number **r_1** between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=**r_1**, at which point a jump occurs.; > **III: Choose a random number r_2 between zero and one, used to select which collapse operator was responsible for the jump.**; > IV: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥**r_2**. While this is not an issue in the code, the way the documentation is written at the moment implies that jumps which occur after a short amount of time will primarily be due to collapse operators at the end of the c_ops list, while jumps that happen after a long time will be biased towards collapse operators at the start of the c_ops list. Again, the code is correct, but the documentation does not accurately reflect the algorithm used.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1666:1059,Integrat,Integrate,1059,https://qutip.org,https://github.com/qutip/qutip/issues/1666,1,['Integrat'],['Integrate']
Deployability," (factors of two, pi, gamma, w0, etc.). This makes it very hard to understand how the `lam` parameter is exactly defined. Having a proper understanding of the `lam` parameter is quite essential to properly compare with the results obtained via other methods. I think it would be quite useful to explicitly write down the mathematical formula of the spectral density being used in the documentation. In the mean time, I would also appreciate if anyone with knowledge of the proper definition would be kind enough to share it here. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. I would expect the documentation to make it clear what each parameter controls in the spectral density definition. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.23.1; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.5; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/fc/bin/venvs/qutip/lib/python3.10/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1959:1856,Install,Installed,1856,https://qutip.org,https://github.com/qutip/qutip/issues/1959,2,['Install'],"['Installation', 'Installed']"
Deployability," /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar); 319 types.BuiltinFunctionType, partial)):; 320 res = _sesolve_func_td(H, rho0, tlist,; --> 321 e_ops, args, options, progress_bar); 322 else:; 323 res = _sesolve_const(H, rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_ma",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:1801,integrat,integrate,1801,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Deployability," 0 to t = 3.5 in the units of 1/(Rabi frequency) and the driving is only present between t = pi/2 and t = pi, I get expected results if I do not include any collapse operators (using []), however as soon as I use the usual collapse operator corresponding to the excited state decay it gives me for all the time the initial values of the quantities. It happens even if I set the decay rate to zero! Also, mcsolve works fine in both cases.; Here is the code that I use:; ```; import numpy as np; import pylab as plt; import scipy as scipy; from qutip import *. #System parameters; Omega = 1; Gamma = 0.1. g = basis(2,0); e = basis(2,1); sgg = g * g.dag() #ground state population; see = e * e.dag() #excited state population; sge = g * e.dag() #atomic coherence sigma_ge. #Driving Hamiltonian; H1 = Omega * (sge + sge.dag()). #Time dependence of the drive; def H1_coeff(t,args):; if t > np.pi:; c =0; elif t >= np.pi/2:; c = 1; else:; c = 0; return c. #Complete Hamiltonian; H = [[H1, H1_coeff]]. #Time; tspan = np.linspace(0,3.5,500). #initial state; psi0 = g. #collapse operators; c_ops = [np.sqrt(Gamma) * sge]. #calculated expectation values; e_ops = [sgg, see]; results = mesolve(H, psi0, tspan, c_ops, e_ops). #plotting the results; fig, ax = plt.subplots(1,1); ax.plot(tspan, results.expect[0]); ax.plot(tspan, results.expect[1]); plt.show(); ```; And here is the information about the packages that I'm using; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.1; Scipy Version: 0.19.1; Cython Version: 0.26; Matplotlib Version: 2.0.2; Python Version: 3.6.2; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```; Another funny fact that I noticed is that changing the `elif` condition to t >= 1.4 gives nice results but changing it to t >= 1.5 will again deliver only the initial values.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771:2039,Install,Installed,2039,https://qutip.org,https://github.com/qutip/qutip/issues/771,1,['Install'],['Installed']
Deployability," 0.9; rho=qt.squeezing(a,b,z)*qt.tensor(qt.fock(5,0),qt.fock(5,0)); p=qt.TwoModeQuadratureCorrelation(rho,theta1=0,theta2=0); p.visualize(); ```. ### Code Output. ```shell; TypeError Traceback (most recent call last); Cell In[69], line 44; 39 print(""P quadrature correlation:"", p_corr); 41 # Ensure the correct dimensions are used by TwoModeQuadratureCorrelation; 42 # Calculating two-mode quadrature correlation (if this is the function you mean); 43 # This is a placeholder for any specific function you're calling:; ---> 44 corr = qt.TwoModeQuadratureCorrelation(two_mode_squeezed_state); 45 # print(""Two-mode quadrature correlation:"", corr); File ~/Library/CloudStorage/OneDrive-ETHZurich/PythonScripts/Qutip/TMS_Kerr_simulations/.venv/lib/python3.12/site-packages/qutip/distributions.py:283, in TwoModeQuadratureCorrelation.__init__(self, state, theta1, theta2, extent, steps); 280 self.theta1 = theta1; 281 self.theta2 = theta2; --> 283 self.update(state); File ~/Library/CloudStorage/OneDrive-ETHZurich/PythonScripts/Qutip/TMS_Kerr_simulations/.venv/lib/python3.12/site-packages/qutip/distributions.py:291, in TwoModeQuadratureCorrelation.update(self, state); 286 """"""; 287 calculate probability distribution for quadrature measurement; 288 outcomes given a two-mode wavefunction or density matrix; 289 """"""; 290 if isket(state):; --> 291 self.update_psi(state); 292 else:; 293 self.update_rho(state); ...; 315 i = state_number_index([N, N], [n1, n2]); --> 316 p += kn1 * kn2 * psi.data[i, 0]; 318 self.data = abs(p) ** 2; TypeError: 'qutip.core.data.dense.Dense' object is not subscriptable; ```. ### Expected Behaviour. (<Figure size 800x600 with 2 Axes>,; <Axes: xlabel='$X_1(\\theta_1)$', ylabel='$X_2(\\theta_2)$'>); ![image](https://github.com/user-attachments/assets/4087d55e-5f07-40bd-8b09-8869560817d7). ### Your Environment. ```shell; QuTiP Version: 5.0.4; Numpy Version: 2.1.2; Scipy Version: 1.14.1; Cython Version: None; Matplotlib Version: 3.9.2; Python Version: 3.12.5; Number of ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2546:1589,update,update,1589,https://qutip.org,https://github.com/qutip/qutip/issues/2546,1,['update'],['update']
Deployability," <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot reb",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:4573,Update,Update,4573,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['Update'],['Update']
Deployability," <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1926,release,release,1926,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['release'],['release']
Deployability," > D:\qutip\qutip\core\cy>pycodestyle --first qobjevo.pyx; > qobjevo.pyx:1:1: E265 block comment should start with '# '; > qobjevo.pyx:2:80: E501 line too long (83 > 79 characters); > qobjevo.pyx:20:37: E211 whitespace before '('; > qobjevo.pyx:46:56: W605 invalid escape sequence '\s'; > qobjevo.pyx:190:30: E225 missing whitespace around operator; > qobjevo.pyx:423:5: E303 too many blank lines (2); > qobjevo.pyx:426:5: E301 expected 1 blank line, found 0; > qobjevo.pyx:451:34: E127 continuation line over-indented for visual indent; > qobjevo.pyx:572:21: E128 continuation line under-indented for visual indent; > qobjevo.pyx:987:39: E231 missing whitespace after ','; > qobjevo.pyx:989:20: E124 closing bracket does not match visual indentation; > ```. - [ ] Please add tests to cover your changes if applicable. > The issue was to add `__repr__` function to `QobjEvo` class. Do I need to add a test? If so, can someone help me with it?. - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. > I am not sure in what bracket this issue falls. The issue was labeled as `ENH`. - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). > Related to the previous point. **Description**; Added `__repr__` to `QobjEvo`. It is showing the following attributes: `dims`, `shape`, `type`, `superop` (if a super operator is present), `isconstant` and `num_elements`. Output:; ```; >>> import qutip; >>> qutip.QobjEvo([qutip.qeye(2), lambda t: t]); <QobjEvo dims = [[2], [2]], shape= (2, 2), type = oper, superrep = None, isconstant = False, num_elements = 1>; ```. **Related issues or PRs**; Fix #2099",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111:1373,update,update,1373,https://qutip.org,https://github.com/qutip/qutip/pull/2111,1,['update'],['update']
Deployability," A single callback’s expectation value can be any type, but a callback part of a list must return a number as the expectation value. However, I find that passing a callback function in a list e_ops = [my_callback] gives an exception:. > UnboundLocalError: local variable 'rho_t' referenced before assignment. By contrast, I find that passing a callback function directly as e_ops = my_callback does not cause an issue. This is important because I am unable to pass lists of callback functions which, according to the documentation, I should be able to do. ### Code to Reproduce the Bug. ```shell; # Imports ; import qutip as qt; import numpy as np. # System parameters; w = 1; kappa = 0.1; # Size of the Hilbert space; n_max = 10; # Annihilation operator; a = qt.destroy(n_max); # Callback function; my_callback = lambda t, rho_t : rho_t.purity(). # Hamiltonian; H = w * a.dag() * a; # Initial state; psi_0 = ( qt.fock(n_max, 0) + qt.fock(n_max, 1) ) / np.sqrt(2); rho_0 = qt.ket2dm( psi_0); # Integration times; times = np.linspace(0, 2/kappa, 5000); # Collapse operators; c_ops = [np.sqrt(kappa) * a]; # Observables to compute; e_ops = [my_callback]. # Solve the master equation; output = qt.mesolve(H, rho_0, times, c_ops, e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); Cell In[17], line 29; 26 e_ops = [my_callback]; 28 # Solve the master equation; ---> 29 output = qt.mesolve(H, rho_0, times, c_ops, e_ops); 31 plt.plot(output.expect). File ~/anaconda3/envs/danjou/lib/python3.10/site-packages/qutip/mesolve.py:244, in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 241 v = rho0.full().ravel('F'); 242 func(0., v, *ode_args) + v; --> 244 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops); 248 if e_ops_dict:. File ~/anaconda3/envs/danjou/lib/python3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189:1457,Integrat,Integration,1457,https://qutip.org,https://github.com/qutip/qutip/issues/2189,1,['Integrat'],['Integration']
Deployability," Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.dev0+564c987b (with python setup.py install). Error message (then the code runs anyway):; ```; (qutipdev45) nathans-mbp:Downloads nathanshammah$ python fidel.py; /Users/nathanshammah/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. His qutip.about(): . ```; QuTiP Version: 4.5.0.dev0+f77f7e4a (or others); Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. Notice that in his case OPEN MP seems installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:2036,install,install,2036,https://qutip.org,https://github.com/qutip/qutip/issues/1109,3,"['Install', 'install']","['Installed', 'install', 'installed']"
Deployability," Bug. ```shell; import numpy as np; import qutip as qu. #Let's compute the chi matrix for F(rho) = -i[H, rho] for one qubit ; #We define the channel F(rho) = A_1 rho B^dag_1 + A_2 rho B^dag_2; #where ; #A_1 = -iH, B^dag_1 = Id(2) ; #A_2 = Id(2), B^dag_2 = iH. #With an example Hamiltonian. delta = 0.127; Omega = 0.5; H = qu.Qobj(np.array([[delta, Omega/2], [Omega/2, 0]])). print(H). #We define the Pauli basis as G = (Id(2), sigmax(2), sigmay(2), sigmaz(2))/np.sqrt(2). G = np.array([qu.identity(2), qu.sigmax(), qu.sigmay(), qu.sigmaz()])/np.sqrt(2). #The chi matrix is computed as: chi[i][j] = sum_k Tr(G[i]@A[k]) Tr(G[j]@B^dag[k]). chi = np.zeros([4, 4], dtype=np.complex64); for i in range(4):; for j in range(4):; chi[i,j] = np.trace(G[i]@A[0])*np.trace(G[j]@Bdag[0]) + np.trace(G[i]@A[1])*np.trace(G[j]@Bdag[1]); ; print(chi). #If we compare with the method from qutip, we see that the latter is off by a factor of 2. print(qu.to_chi(qu.liouvillian(H))); ```. ### Code Output. ```shell; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0.127 0.25 ]; [0.25 0. ]]; [[0.+0.j 0.+0.5j 0.+0.j 0.+0.127j]; [0.-0.5j 0.+0.j 0.+0.j 0.+0.j ]; [0.+0.j 0.+0.j 0.+0.j 0.+0.j ]; [0.-0.127j 0.+0.j 0.+0.j 0.+0.j ]]; Quantum object: dims = [[[2], [2]], [[2], [2]]], shape = (4, 4), type = super, isherm = True, superrep = chi; Qobj data =; [[0.+0.j 0.+1.j 0.+0.j 0.+0.254j]; [0.-1.j 0.+0.j 0.+0.j 0.+0.j ]; [0.+0.j 0.+0.j 0.+0.j 0.+0.j ]; [0.-0.254j 0.+0.j 0.+0.j 0.+0.j ]]; ```. ### Expected Behaviour. The result in the Chi representation is off by a factor of 2. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.0; Scipy Version: 1.11.3; Cython Version: None; Matplotlib Version: None; Python Version: 3.11.6; Number of CPUs: 12; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. I don't know if I am missing something here with the dimensions of the objects.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2259:2446,Install,Installed,2446,https://qutip.org,https://github.com/qutip/qutip/issues/2259,1,['Install'],['Installed']
Deployability," I do `import qutip as qt`, a different error occurs:; ```; AttributeError Traceback (most recent call last); <ipython-input-8-ea74e5ab1d35> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 qt.mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if expt_callback:; 361 # use callback method; --> 362 output.expect.append(e_ops(t, Qobj(cdata, dims=dims))); ...; ---> 16 evals_mat[idx[0],:] = qt.real(evals); 17 ; 18 # find the overlap between the eigenstates and psi. AttributeError: module 'qutip' has no attribute 'real'; ```. ### Code to Reproduce the Bug. [This notebook](https://nbviewer.ipython.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb). ### Code Output. _No response_. ### Expected Behaviour. Evolve the system without incurring any error. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.30; Matplotlib Version: 3.3.4; Python Version: 3.7.7; Number of CPUs: 72; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:3537,Install,Installed,3537,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['Install'],['Installed']
Deployability," Using cached scipy-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Using cached scipy-1.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-70.0.0-py3-none-any.whl (863 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:3344,Install,Installing,3344,https://qutip.org,https://github.com/qutip/qutip/issues/2440,2,"['Install', 'install']","['Installing', 'installed']"
Deployability," `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip's evolver, mostly for Verner's method. . ##### progress_bar:; Added a progress bar passed on `tqdm`. `update` no longer need the iteration number. ##### parallel map:; - Added a `loky` based parallel map, hopefully will help windows users.; - Added a `reduce_func` input. Presently the map function is saving all results and the average, std, etc. are only computed at the end. There was no real advantage in saving only average values since all trajectories were in memory at the end of the map. But users expected lower memory usage when asking for only the results average.; - Added `timeout` options to the map, when passed, no error is raised but obtained results are returned. This allow to ask for 30s worth of trajectories instead of fixing a number. **Related issues or PRs**; Build on top of the #1407",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:2517,update,update,2517,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['update'],['update']
Deployability," basis(16,1); Out[162]: ; Quantum object: dims = [[16], [1]], shape = (16, 1), type = ket; Qobj data =; ```; The first has shape = (16, 16) and the second has shape = (16, 1), there shouldn't be any problems in performing matrix multiplication.; **Why I got this error and how to solve it.**. My environment is as follow:; ```; ~$ conda info. active environment : Quantum; active env location : /home/user/anaconda2/envs/Quantum; shell level : 1; user config file : /home/user/.condarc; populated config files : /home/user/.condarc; conda version : 4.5.4; conda-build version : 3.10.5; python version : 2.7.15.final.0; base environment : /home/user/anaconda2 (writable); channel URLs : https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; package cache : /home/user/anaconda2/pkgs; /home/user/.conda/pkgs; envs directories : /home/user/anaconda2/envs; /home/user/.conda/envs; platform : linux-64; user-agent : conda/4.5.4 requests/2.18.4 CPython/2.7.15 Linux/3.13.0-141-generic ubuntu/14.04 glibc/2.19; UID:GID : 1000:1000; netrc file : None; offline mode : False. ```. ```; >>> from qutip import *; >>> about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.1.0; Cython Version: 0.28.3; Matplotlib Version: 2.2.2; Python Version: 2.7.15; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/user/anaconda2/envs/Quantum/lib/python2.7/site-packages/qutip. ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/888:4297,Install,Installed,4297,https://qutip.org,https://github.com/qutip/qutip/issues/888,2,['Install'],"['Installation', 'Installed']"
Deployability," big enough to have a visible effect over the 10^-7 time scale that's being plotted. Right now, I am only plotting state_z_plus so I can focus on the T1 decay from 1 to -1. However, as the animation and graph indicate, it seems to stop short of -1 and I don't see why that should be happening. I appreciate any feedback. %matplotlib inline; import matplotlib.pyplot as plt; import numpy as np; import qutip as q; import cmath; import matplotlib as mpl; from mpl_toolkits.mplot3d import Axes3D. rc_dict = {; ""figure.subplot.bottom"": 0.11,; ""figure.subplot.hspace"": 0.2,; ""figure.subplot.left"": 0.125,; ""figure.subplot.right"": 0.9,; ""figure.subplot.top"": 0.88,; ""figure.subplot.wspace"": 0.2,; ""figure.figsize"":(10,10/1.61),; ""axes.grid"": True,; ""text.usetex"": True,; ""grid.linestyle"": "":"",; ""grid.color"": ""black"", #; ""legend.fontsize"": 20,; ""lines.linewidth"": 2.5,; ""axes.linewidth"": 1.5,; ""font.family"": [""serif""],; ""font.sans-serif"": ""Times New Roman Bold"",; ""font.size"":26,; }; plt.rcParams.update(rc_dict). qutip_options = q.Odeoptions(; store_states=True,; nsteps=20000000; ); si, sx, sy, sz=q.qeye(2), q.sigmax(), q.sigmay(), q.sigmaz(); sp, sm=q.sigmap(), q.sigmam(); state_z_plus=q.basis(2,0); state_z_minus=q.basis(2,1); state_x_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + q.basis(2,1)); state_x_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - q.basis(2,1)); state_y_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + 1j* q.basis(2,1)); state_y_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - 1j* q.basis(2,1)). h = 6.62607015e-34; b = 0.1786195317554453 #magnetic field; b_AC = 3.572390635108906e-05 #oscillating magnetic field; g = 2 #g-factor; u = 9.274E-24 #bohr magneton; w = g*u*b/h #omega ; w0 = 5e9 # omega0 is the rotating frame frequency; print(w); gamma_phi = 44200000; gamma_minus = 100000000. epsilon = g*u*b/h*(2*cmath.pi); Delta = g*u*b_AC/h*(2*cmath.pi). H = ((w-w0)/(w))*epsilon/2 * sz #*+ Delta/2*sy. print(abs(((w-w0)/(w)))*epsilon/2). #note here the final time satisfies: omega*t_final = pi/2; times=np",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1418:1262,update,update,1262,https://qutip.org,https://github.com/qutip/qutip/issues/1418,1,['update'],['update']
Deployability," branch (using `pip install --pre qutip`). ### Code to Reproduce the Bug. ```shell; from qutip import * ; import numpy as np. s_00 = tensor(basis(2,0), basis(2,0)); P_00 = s_00 * s_00.dag(); e_ops = [ ; lambda t, state: (state.ptrace([0,1]) * P_00).tr() ; ]. tlist = np.linspace(0, 2*np.pi, 50); res = mesolve(tensor(identity(2), identity(2), identity(3)),; tensor(P_00, thermal_dm(3,0.1)), ; tlist, ; [],; e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-1-49ed87444849> in <module>; 9 ; 10 tlist = np.linspace(0, 2*np.pi, 50); ---> 11 res = mesolve(tensor(identity(2), identity(2), identity(3)),; 12 tensor(P_00, thermal_dm(3,0.1)),; 13 tlist,. 1 frames; /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 242 func(0., v, *ode_args) + v; 243 ; --> 244 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops). /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 517 for m in range(n_expt_op):; 518 if not isinstance(e_ops[m], Qobj) and callable(e_ops[m]):; --> 519 output.expect[m][t_idx] = e_ops[m](t, rho_t); 520 continue; 521 output.expect[m][t_idx] = expect_rho_vec(e_ops_data[m], r.y,. UnboundLocalError: local variable 'rho_t' referenced before assignment; ```. ### Expected Behaviour. no error. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.22.4; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.5.3; Python Version: 3.9.16; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.9/dist-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2118:2009,Install,Installed,2009,https://qutip.org,https://github.com/qutip/qutip/issues/2118,2,['Install'],"['Installation', 'Installed']"
Deployability," changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than explicitly stated, using globbing; - version information is now stored in a single-line file `VERSION`. This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than att",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:1336,release,releases,1336,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['release'],['releases']
Deployability," code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; As proposed by @hodgestar, I am splitting #1409 into smaller PRs. This is part 1/3, but contain some change in core that would come later in the Solver PR:. - Add manual cython dispatched function. Used by vern ODE method. - Add `to` to `QobjEvoFunc` and some check. Used by brmesolve rework. - Add a version to string Coefficient, a 'try_parsing' options, partial arguments update and basic cleaning function.; This comes mostly from talk with @jakelishman.; When updating coefficient with new argument, it no longer require all coefficient to be given, but will simply update those available. ; Since those change must overwrite old version of the coefficient, a version tag is added to the coefficient folder and a function to erase the old version. It use it's own `COEFF_VERSION`, not qutip version since I don't expect most qutip update will not touch `coefficient.pyx` so we need not to force user to recompile. But it raise the risk of forgetting to change it when working on them. ; Lastly, I added an option to disable the string coefficient parsing since there seems to have some reservation in the last meeting.; But there is a weakness when using that form if unused args are passed: the `key = args['key']` code could be generated for those extra `args` but will not affect the hash name. . **Related issues or PRs**; Will replace part o",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461:1474,update,update,1474,https://qutip.org,https://github.com/qutip/qutip/pull/1461,1,['update'],['update']
Deployability," drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa""><code>6c187ad</code></a> Prepare 2.15 release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347""><code>00b9cb0</code></a> Prepare for release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234""><code>a0824a4</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba""><code>26f9f6c</code></a> Merge pull request <a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a> from rdbende/fix-fromimport-none</li>; <li><a href=""https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc""><code>62b1bbb</code></a> Change token of None after from keyword</li>; <li><a href=""https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac""><code>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/is",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:12179,release,release,12179,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['release'],['release']
Deployability," fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""order"" in SovlerOptions(""sesolve"", method=""dop853""); False; ```; passing options not supported by the options will raise an error. Solver accept options as `dict` or `SolverOptions`. They do not refuse options for other solver.; Solver can support options changes: `my_solver.options['atol'] = 1e-10`, will reset the integrator to use the new value.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:1684,integrat,integrator,1684,https://qutip.org,https://github.com/qutip/qutip/pull/1947,3,['integrat'],"['integrator', 'integrators']"
Deployability," has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2342,integrat,integrator,2342,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Deployability," href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>; <blockquote>; <h2>3.1.3</h2>; <p>This is a fix release for the 3.1.x feature branch.</p>; <ul>; <li>Fix for <a href=""https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>; <li>Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1085,Release,Released,1085,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['Release'],['Released']
Deployability," if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build, not PEP517 build); INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```. ### Additional Context. PEP517 support is new for Debian. It is possible the pybuild build tool needs to be adapted to handle setup.py options like `--with-openmp` in the context of PEP517. But I've tried to pose the issue here in terms of the underlying python3 build commands without needing to consider pybuild as such. Is there a different way in which `--with-openmp` should be configured when using a PEP517 build?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:1964,Install,Installed,1964,https://qutip.org,https://github.com/qutip/qutip/issues/1875,2,['Install'],"['Installation', 'Installed']"
Deployability," in addition to disallowing spaces. Regardless of any validation done by Jinja, user input should never be used as keys to this filter, or must be separately validated first. GHSA-h75v-3vvj-5mfj</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.4</h2>; <p>Released 2024-05-05</p>; <ul>; <li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code>; greater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces.; Regardless of any validation done by Jinja, user input should never be used; as keys to this filter, or must be separately validated first.; :ghsa:<code>h75v-3vvj-5mfj</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/dd4a8b5466d8790540c181590b14db4d4d889d57""><code>dd4a8b5</code></a> release version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb""><code>0668239</code></a> Merge pull request from GHSA-h75v-3vvj-5mfj</li>; <li><a href=""https://github.com/pallets/jinja/commit/d655030770081e2dfe46f90e27620472a502289d""><code>d655030</code></a> disallow invalid characters in keys to xmlattr filter</li>; <li><a href=""https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329""><code>a7863ba</code></a> add ghsa links</li>; <li><a href=""https://github.com/pallets/jinja/commit/b5c98e78c2ee7d2bf0aa06d29ed9bf7082de9cf4""><code>b5c98e7</code></a> start version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/da3a9f0b804199845fcb76f2e08748bdaeba93ee""><code>da3a9f0</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:1877,release,release,1877,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['release'],['release']
Deployability," install qutip from pip with the latest python 3.9 fails. When we run the installations from a fresh conda env (conda 4.8.5) using pip as. ```; pip install qutip; ```; or with conda (using both). ```; conda install -c conda-forge qutip; conda install qutip; ```. we get different errors. The errors do not occur if we use python3.8 while creating the conda environment as. ```; conda create -n py38 python==3.8; ```. Looking at the error it seems there is specification that prohibits python 3.9. @jakelishman @Ericgig any idea about this?. # Steps to reproduce (with conda 4.8.5). ```; conda create -n qutip-test python=3.9; conda activate qutip-test; conda install -c conda-forge qutip; ```. ### Error; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - qutip -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.5,<3.6.0a0|3.4.*']. Your python: python=3.9. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. Note that strict channel priority may have removed packages required for satisfiability.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:1381,install,installation,1381,https://qutip.org,https://github.com/qutip/qutip/issues/1371,1,['install'],['installation']
Deployability," install qutip` fails on a MacBook Pro with M1 Pro running macOS 12.0.1, due to the build dependency `numpy<1.20` failing to build. This happens both with miniconda python 3.9.6 and miniforge python 3.9.7. Same happens if I clone the master branch and build. If I edit `pyproject.toml` and `setup.cfg` to remove the `<1.20` in Numpy, then qutip builds correctly (then I get same problem as Issue #1606 when importing, but that's another story). ### Code to Reproduce the Bug. ```shell; conda create -n qutip_test; pip install qutip; ```. ### Code Output. ```shell; Collecting qutip; Using cached qutip-4.6.2.tar.gz (3.4 MB); Installing build dependencies ... error; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status 'done'; Collecting scipy>=1.0; Using cached sc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:943,install,install,943,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['install'],"['install', 'installed']"
Deployability," lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/4fabec36197735438c80c174d018498be606c46c""><code>4fabec3</code></a> Added release notes for 9.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/02affaa491df37117a7562e6ba6ac52c4c871195""><code>02affaa</code></a> Added delay after opening image with xdg-open</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ca0b58521881b95e47ea49d960d13d1c3dac823d""><code>ca0b585</code></a> Updated formatting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/427221ef5f19157001bf8b1ad7cfe0b905ca8c26""><code>427221e</code></a> In show_file, use os.remove to remove temporary images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c930be0758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare vi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:2438,Update,Updated,2438,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['Update'],['Updated']
Deployability," leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [ra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:11663,Release,Release,11663,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['Release'],['Release']
Deployability," of <code>None</code> (<a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a>)</li>; </ul>; </li>; <li>; <p>Rebol/Red: Don't require script headers (<a href=""https://redirect.github.com/pygments/pygments/issues/2348"">#2348</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2349"">#2349</a>)</p>; </li>; <li>; <p>Spice: Update keywords (<a href=""https://redirect.github.com/pygments/pygments/issues/2336"">#2336</a>)</p>; </li>; <li>; <p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=""https://redirect.github.com/pygments/pygments/issues/2355"">#2355</a>)</p>; </li>; <li>; <p>Terraform: Add <code>hcl</code> alias (<a href=""https://redirect.github.com/pygments/pygments/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa""><code>6c187ad</code></a> Prepare 2.15 release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347""><code>00b9cb0</code></a> Prepare for release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a82",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:11260,Update,Update,11260,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability," of <code>None</code> (<a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a>)</li>; </ul>; </li>; <li>; <p>Rebol/Red: Don't require script headers (<a href=""https://redirect.github.com/pygments/pygments/issues/2348"">#2348</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2349"">#2349</a>)</p>; </li>; <li>; <p>Spice: Update keywords (<a href=""https://redirect.github.com/pygments/pygments/issues/2336"">#2336</a>)</p>; </li>; <li>; <p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=""https://redirect.github.com/pygments/pygments/issues/2355"">#2355</a>)</p>; </li>; <li>; <p>Terraform: Add <code>hcl</code> alias (<a href=""https://redirect.github.com/pygments/pygments/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; <li>; <p>Fix some places where a locale-dependent encoding could unintentionally; be used instead of UTF-8 (<a href=""https://redirect.github.com/pygments/pygments/issues/2326"">#2326</a>).</p>; </li>; <li>; <p>Fix Python traceback handling (<a href=""https://redirect.github.com/pygments/pygments/issues/2226"">#2226</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2329"">#2329</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:5145,Update,Update,5145,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability," or len(col) == 0:; raise ValueError('cannot infer dimensions from zero '; 'sized index arrays'); M = operator.index(np.max(row)) + 1; N = operator.index(np.max(col)) + 1; self._shape = check_shape((M, N)); else:; # Use 2 steps to ensure shape has length 2.; M, N = shape; self._shape = check_shape((M, N)); ; idx_dtype = get_index_dtype(maxval=max(self.shape)); data_dtype = getdtype(dtype, obj, default=float); self.row = np.array(row, copy=copy, dtype=idx_dtype); self.col = np.array(col, copy=copy, dtype=idx_dtype); > self.data = np.array(obj, copy=copy, dtype=data_dtype); E TypeError: can't convert complex to float. /usr/lib/python3/dist-packages/scipy/sparse/coo.py:161: TypeError; ```. Likewise for `TestDicke.test_lindbladian_dims` and `TestDicke.test_liouvillian`. **Your Environment**. qutip 4.5.3 built on Debian unstable. ```; qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li and Jake Lishman.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.3; Numpy Version: 1.19.5; Scipy Version: 1.6.1; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.1; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:4335,Install,Installed,4335,https://qutip.org,https://github.com/qutip/qutip/issues/1451,2,['Install'],"['Installation', 'Installed']"
Deployability," pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1815,Install,Installed,1815,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['Install'],['Installed']
Deployability," pull request for a subpackage for non-Markovian solvers, called `nonmarkov`. This idea was mentioned in issue #384. The subpackage now includes two modules, with two quite different non-Markov solvers:. `transfertensormethod`: This module is an implementation of the ""Transfer Tensor Method"" (TTM) introduced by Cerrillo and Cao in [Phys. Rev. Lett 112, 110401 (2014)](http://journals.aps.org/prl/abstract/10.1103/PhysRevLett.112.110401) ([arXiv link](http://arxiv.org/abs/1307.7743)). TTM is a completely general purpose approach to non-Markovian problems. It takes as input a collection of precomputed dynamical maps for a list of intial ""learning times"", and then tries to extrapolate the non-Markovian dynamics to larger times. `memorycascade`: This module implements the method introduced in [Phys. Rev. Lett 115, 060402 (2015)](http://journals.aps.org/prl/abstract/10.1103/PhysRevLett.115.060402) ([arXiv link](http://arxiv.org/abs/1502.06959)) to integrate the dynamics of open quantum systems coupled to a coherent feedback loop with a time-delay. I decided to refer to this method as the ""memory cascade"" method in qutip. The method essentially maps the non-Markovian problem onto a cascaded chain of identical system, where each system in the chain represents a ""memory"" of a previous version of the system. There is a companion pull request to the qutip-notebooks repo with two new notebooks documenting the usage of these two modules, qutip/qutip-notebooks#21:. examples/example-transfer-tensor-method.ipynb; examples/example-coherent-delayed-feedback.ipynb. Together with code docstrings, these two notebooks should give a good idea of how the modules are to be used. As you will see in the notebooks, the TTM implementation has a user interface that closely mimicks the `mesolve` interface. The solver is called `ttmsolve` and has the following syntax (explained in more detail in the docstring and notebook):. ```; ttmsolve(dynmaps, rho0, times, e_ops=[], learningtimes=None, tensors=",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405:974,integrat,integrate,974,https://qutip.org,https://github.com/qutip/qutip/pull/405,1,['integrat'],['integrate']
Deployability," qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/data/dispatch.pyx; [11/31] Cythonizing qutip/core/data/matmul.pyx; [12/31] Cythonizing qutip/core/data/mul.pyx; [13/31] Cythonizing qutip/core/data/norm.pyx; [14/31] Cythonizing qutip/core/data/reshape.pyx; [15/31] Cythonizing qutip/core/data/tidyup.pyx; [16/31] Cythonizing qutip/piqs/_piqs.pyx; [17/31] Cythonizing qutip/core/cy/_element.pyx; [18/31] Cythonizing qutip/core/cy/qobjevo.pyx; [19/31] Cythonizing qutip/core/data/adjoint.pyx; [20/31] Cythonizing qutip/core/data/expect.pyx; [21/31] Cythonizing qutip/core/data/inner.pyx; [22/31] Cythonizing qutip/core/data/kron.pyx; [23/31] Cythonizing qutip/core/data/permute.pyx; [24/31] Cythonizing qutip/core/data/pow.pyx; [25/31] Cythonizing qutip/core/data/project.pyx; [26/31] Cythonizing qutip/core/data/properties.pyx; [27/31] Cythonizing qutip/core/data/ptrace.pyx; [28/31] Cythonizing qutip/core/data/trace.pyx; [29/31] Cythonizing qutip/solver/integrator/explicit_rk.pyx; [30/31] Cythonizing qutip/solver/sode/_sode.pyx; [31/31] Cythonizing qutip/solver/sode/ssystem.pyx; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Expected Behaviour. qutip installs successfully. ### Your Environment. ```shell; QuTiP Version: 4.7.3 (currently installed, trying to upgrade); Numpy Version: 1.24.4; Scipy Version: 1.10.1; Cython Version: 3.0.10; Matplotlib Version: 3.7.4; Python Version: 3.8.10; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); OS version: Ubuntu 20.04 LTS; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:10440,integrat,integrator,10440,https://qutip.org,https://github.com/qutip/qutip/issues/2440,5,"['Install', 'install', 'integrat', 'upgrade']","['Installed', 'installed', 'installs', 'integrator', 'upgrade']"
Deployability," seed=42)); print(x2:=np.random.rand(5)). print((x1==x2).all()); ```. ### Code Output. ```shell; Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[ 0.81060152-0.22563732j]; [-0.38212135-0.38209455j]]; [0.02058449 0.96990985 0.83244264 0.21233911 0.18182497]; Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[ 0.81060152-0.22563732j]; [-0.38212135-0.38209455j]]; [0.02058449 0.96990985 0.83244264 0.21233911 0.18182497]; True; ```. ### Expected Behaviour. The two `np.random.rand(5)` calls should not have the same random output.; As the example shows only the `rand_ket_haar` function calls are seeded and are thus expected to return the same output. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.5; Numpy Version: 1.24.3; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.8.3; Python Version: 3.11.5; Number of CPUs: 6; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: c:\Users\Admin\Desktop\BFP\quantum-channel-approximation\venv\Lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2438:2909,Install,Installed,2909,https://qutip.org,https://github.com/qutip/qutip/issues/2438,2,['Install'],"['Installation', 'Installed']"
Deployability," support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:1660,release,releasenotes,1660,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['release'],['releasenotes']
Deployability," support. pyproject.toml was introduced in QuTiP 4.6.0 to allow PEP517 build without (directly) using setup.py. But the `--with-openmp` option that previously worked with a setup.py build does not seem to be compatible with a PEP517 build. The problem shows up in the Debian build of the qutip package. Debian provides its own tool (pybuild from the dh-python package) to manage the build of python packages. PEP517 is relatively new, so by default pybuild uses setup.py if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build, not PEP517 build); INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:1063,install,installed,1063,https://qutip.org,https://github.com/qutip/qutip/issues/1875,1,['install'],['installed']
Deployability," that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:2421,Release,Release,2421,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['Release'],['Release']
Deployability," that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/34aebc2824cf8c2bdbe19040b82f98f18557c8ba""><code>34aebc2</code></a> MAINT: Update 1.21.0-notes.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/493b64bfe9c5396498325b87e5e80e1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/07d7e72ab6880c05b5fdd98482cf88982e778393""><code>07d7e72</code></a> MAINT: Remove accidentally created directory.</li>; <li><a href=""https://github.com/numpy/numpy/commit/032fca5e2e9749b152ec56153f476e05efdff287""><code>032fca5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19280"">#19280</a> from charris/backport-19277</li>; <li><a href=""https://github.com/numpy/numpy/commit/7d25b81025a50cc0368f5727c65e875ca769469a""><code>7d25b81</code></a> BUG: Fix refcount leak in ResultType</li>; <li><a href=""https://github.com/numpy/numpy/commit/fa5754e8c159a37fcd9345df261cf82821088ea0""><code>fa5754",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:2535,release,release,2535,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['release'],['release']
Deployability," to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-securi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:4187,Update,Updated,4187,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Update'],['Updated']
Deployability," version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/31c8dacdc727673e9099f1ac86019714cdccec67""><code>31c8dac</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7675"">#7675</a> from python-pillow/pre-commit-ci-update-config</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/40a3f91af2c78870676a13629b5902bab4ab4cf0""><code>40a3f91</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7674"">#7674</a> from nulano/url-example</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cb41b0cc78eeefbd9ed2ce8c10f8d6d4c405a706""><code>cb41b0c</code></a> [pre-commit.ci] pre-commit autoupdate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/de62b25ed318f1604aa4ccd6f942a04c6b2c8b59""><code>de62b25</code></a> fix image url in &quot;Reading from URL&quot; example</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/7c526a6c6bdc7cb947f0aee1d1ee17c266ff6c61""><code>7c526a6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d93a5ad70bf94dbb63bdbfb19491a02976574d6d""><code>d93a5ad</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a> from bgilbert/jpeg-rgb</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aed764fe8404926472499208a39e5bf90d861b2a""><code>aed764f</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from rada",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:14113,Update,Update,14113,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Update'],['Update']
Deployability,"![ce 0](https://user-images.githubusercontent.com/33592789/46414779-505ced80-c73d-11e8-9b03-41cfa1a75bb1.png). I m obtaining this using code:; from numpy import *; from scipy.special import mathieu_cem; import matplotlib.pyplot as plt; from matplotlib import cm; from scipy.integrate import quad. ## Parameters ##; i = 1.0j; x = linspace(-pi,pi,200); p = linspace(-5,5,200); x, p = meshgrid(x, p); y = linspace(-pi, pi, 200). psi = (mathieu_cem(0,-1,(x-y/2)*180/pi)[0]) ; psic = transpose(conj(mathieu_cem(0,-1,(x+y/2)*180/pi)[0])). ## Defining the integral ##; def integrand(y, x, p):; return psic * psi * exp(2 * i * p * y). ## Generate Wigner function ##; def W(x, p):; return quad(integrand, -pi, pi, args=(x, p))[0]. W = vectorize(W); ## Plotting the Distribution ##; fig, axes = plt.subplots(); cont = axes.contourf(x, p, W, 1000, cmap=cm.jet); axes.set_xlabel(r'x'); axes.set_ylabel(r'p', labelpad=-10); cb = fig.colorbar(cont, ax=axes) 			# add colour bar; plt.show(). Any better arrangement?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/792:274,integrat,integrate,274,https://qutip.org,https://github.com/qutip/qutip/issues/792,1,['integrat'],['integrate']
Deployability,""">#7141</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed saving multiple 1 mode frames to GIF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7181"">#7181</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced absolute PIL import with relative import <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7173"">#7173</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed files and types override <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7194"">#7194</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>10.0.1 (2023-09-15)</h2>; <ul>; <li>; <p>Updated libwebp to 1.3.2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7395"">#7395</a>; [radarhere]</p>; </li>; <li>; <p>Updated zlib to 1.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7344"">#7344</a>; [radarhere]</p>; </li>; </ul>; <h2>10.0.0 (2023-07-01)</h2>; <ul>; <li>; <p>Fixed deallocating mask images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageFont.MAX_STRING_LENGTH <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7244"">#7244</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Fix Windows build with pyproject.toml <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7230"">#7230</a>; [hugovk, nulano, radarhere]</p>; </li>; <li>; <p>Do not close provided file handles with libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7199"">#7199</a>; [radarhere]</p>; </li>; <li>; <p>Convert to HSV if mode is HSV in getcolo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:8614,Update,Updated,8614,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Updated']
Deployability,"""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5179,update,updates,5179,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['update'],['updates']
Deployability,"""pip3 install quitp"" fails unless cython is already installed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:6,install,install,6,https://qutip.org,https://github.com/qutip/qutip/issues/1246,2,['install'],"['install', 'installed']"
Deployability,"# Change log; Right now, maintainers need to go through the PRs in `qutip/qutip` to update the changelog. This is quite time consuming. . There may be automated tools to generate the change log. . I propose at minimum to keep a changelog file also in `qutip/qutip`, asking contributors to update it before merging the PR. This makes it simpler than for them to open another PR to `qutip/qutip-doc`. # Classes and functions; As note in the [`release_distribution`](https://github.com/qutip/qutip-doc/blob/master/release_distribution.rst) guidelines, one should check that new functions and classes are included in the `classes.rst` and `functions.rst` files. Having a recipe to check this quickly or automatically, maybe with a script like this [one](https://stackoverflow.com/questions/1796180/how-can-i-get-a-list-of-all-classes-within-current-module-in-python).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1533:84,update,update,84,https://qutip.org,https://github.com/qutip/qutip/issues/1533,2,['update'],['update']
Deployability,"## Changelog; The changelog file is present in `qutip/qutip-doc`. This means that for each new release, the maintainers need to go through the merged PRs and update the file accordingly. . I propose introducing a copy of the changelog file, which would simplify maintenance: each contributor could update their own contribution without opening a PR in the separate repository, which often does not happen. A message of a basic template with checklist could be prompted in the PR for itself. . ## PR template; To prompt these actions, just like for the changelog, [a template](https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors) with suggested checklist could be made in the PRs. . ## Repositories refactoring ; Actually, this is all part of a wider problem for which the `qutip-doc` does not get well updated in general. In Qutip 4.5.0 I added a lot of missing elements to `functions.rst` and `classes.rst` in the api-doc. Moreover, the User guide is seldom updated. Maybe, moving the `qutip-doc` repository in the main `qutip/qutip` repository could help in this regard.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1172:95,release,release,95,https://qutip.org,https://github.com/qutip/qutip/issues/1172,5,"['release', 'update']","['release', 'update', 'updated']"
Deployability,"### Bug Description. 4 tests produce errors (qutip installed with pip in a virtual environment on a Apple M2 pro chip). ### Code to Reproduce the Bug. ```shell; import qutip.testing; qutip.testing.run(); ```. ### Code Output. ```shell; ================================================================= ERRORS =================================================================; ____________________________________________ ERROR collecting qutip/tests/core/test_gates.py _____________________________________________; qutip/tests/core/test_gates.py:109: in <module>; class TestCliffordGroup:; qutip/tests/core/test_gates.py:115: in TestCliffordGroup; clifford = gates.qubit_clifford_group(); qutip/core/gates.py:815: in qubit_clifford_group; X = sigmax(); qutip/core/operators.py:387: in sigmax; return _SIGMAX.to(dtype, True); qutip/core/qobj.py:395: in to; _data.to(data_type, self._data),; qutip/core/data/convert.pyx:395: in qutip.core.data.convert._to.__call__; return self._convert[to_type, from_type](data); qutip/core/data/convert.pyx:101: in qutip.core.data.convert._converter.__call__; arg = self.functions[i](arg); qutip/core/data/dia.pyx:341: in qutip.core.data.dia.from_csr; cpdef Dia from_csr(CSR matrix):; qutip/core/data/dia.pyx:353: in qutip.core.data.dia.from_csr; return Dia((data, diags), shape=matrix.shape, copy=False); qutip/core/data/dia.pyx:134: in qutip.core.data.dia.Dia.__init__; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ___________________________________________ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:51,install,installed,51,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['install'],['installed']
Deployability,"### Bug Description. A new warning is raised when using qutip with numpy 1.25:. `photonic-quantum-circuit-simulator-8sWQjw5Q-py3.9\lib\site-packages\qutip\superop_reps.py:241: DeprecationWarning: product is deprecated as of NumPy 1.25.0, and will be removed in NumPy 2.0. Please use prod instead.; nq = _nq(q_oper.dims)`. Should be a simple fix of renaming `np.product` by `np.prod`. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. No warnings should be raised. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.9.13; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. The whole codebase should be searched for `np.product`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2179:737,Install,Installed,737,https://qutip.org,https://github.com/qutip/qutip/issues/2179,1,['Install'],['Installed']
Deployability,"### Bug Description. Adding (or subtracting) a number from a ket modifies the data of the ket even without an assignment. In the code below, I would expect that `a` is not modified when the expression `a+1` is run, but it is. That is to say, `a+1` has the same effect as `a+=1`. In contrast, the data of the QObj does not change when adding a number to an operator or when multiplying a ket by a number. ### Code to Reproduce the Bug. ```shell; from qutip import basis; a = basis(2); print(a); print(); print(a+1); print(); print(a); ```. ### Code Output. ```shell; Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]; ```. ### Expected Behaviour. First of all, adding a number to a ket is not a well-defined operation, so perhaps it should throw an error. However, I think that the value of `a+1` is not entirely unexpected, so it could be kept. The real issue is that the data of `a` is modified without the code ever explicitly reassigning `a`. This is definitely unexpected. I would expect the output to be:. `Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.23.5; Scipy Version: 1.10.0; Cython Version: 0.29.33; Matplotlib Version: 3.6.2; Python Version: 3.10.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2208:1727,Install,Installed,1727,https://qutip.org,https://github.com/qutip/qutip/issues/2208,1,['Install'],['Installed']
Deployability,"### Bug Description. Call to `b.render()` errors after performing `b.add_vectors(vec)` where `b` is an instance of `qutip.Bloch()`. ### Code to Reproduce the Bug. ```shell; import qutip; b = qutip.Bloch(); b.make_sphere(); b.add_vectors([0,0,1]); b.render(); ```. ### Code Output. ```shell; /tmp/ipykernel_377526/3029128797.py in <module>; 2 b.make_sphere(); 3 b.add_vectors([0,0,1]); ----> 4 b.render(). ~/.conda/envs/myenv/lib/python3.8/site-packages/qutip/bloch.py in render(self); 503 self.plot_annotations(); 504 # Trigger an update of the Bloch sphere if it is already shown:; --> 505 self.fig.canvas.draw(); 506 ; 507 def plot_back(self):. ~/.local/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py in draw(self); 434 (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 435 else nullcontext()):; --> 436 self.figure.draw(self.renderer); 437 # A GUI class may be need to update a window using this draw, so; 438 # don't forget to call the superclass. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 71 @wraps(draw); 72 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 73 result = draw(artist, renderer, *args, **kwargs); 74 if renderer._rasterizing:; 75 renderer.stop_rasterizing(). ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/matplotlib/figure.py in draw(self, renderer); 2808 ; 2809 self.patch.draw(renderer); -> 2810 mimage._draw_list_compositing_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:531,update,update,531,https://qutip.org,https://github.com/qutip/qutip/issues/1817,2,['update'],['update']
Deployability,"### Bug Description. Entering a wrong dissipation operator in `e_ops` can make the Python kernel crash. (No exception raised, no traceback.); In the example below, the user is erroneously entering `state.dag() * state` instead of `state * state.dag()`. The former evaluates to a number (still represented by a `Qobj` though), the latter is a suitable projection operator. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np. H = qt.sigmaz() / 2; state = qt.basis(2,1). tlist = np.linspace(0, 10, 100). print(""start...""). sol = qt.mesolve(; H, ; state, ; tlist, ; e_ops=[state.dag() * state] # ****** this should actually be state * state.dag()); ). print(""DONE!"") # never see this output; within jupyter, kernel crash is reported; ```. ### Code Output. ```shell; start...; ```. ### Expected Behaviour. Raise an exception, ideally with information alerting the user to the fact that the provided jump operator is not a valid operator. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.20.2; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.4.3; Python Version: 3.8.10; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1776:1185,Install,Installed,1185,https://qutip.org,https://github.com/qutip/qutip/issues/1776,1,['Install'],['Installed']
Deployability,"### Bug Description. Following the advice from [this SE post](https://stackoverflow.com/questions/70240506/why-is-numpy-native-on-m1-max-greatly-slower-than-on-old-intel-i5), I have been trying to install QuTiP in a fresh environment along with the BLAS `accelerate` libraries specific to the Apple M1/M2 chips, in order to get a speedup by using a BLAS library designed for my laptop. In a blank environment, I first ran `conda install numpy ""libblas=*=*accelerate""`, followed by `conda install qutip` and got the following error message: . ```; The following specifications were found to be incompatible with your system:. - feature:/osx-arm64::__osx==13.4=0; - feature:|@/osx-arm64::__osx==13.4=0; - qutip -> numpy[version='>=1.22.4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:197,install,install,197,https://qutip.org,https://github.com/qutip/qutip/issues/2273,5,['install'],"['install', 'installed']"
Deployability,"### Bug Description. Hello, I just submitted this report but the system seems to have crashed. I am re-submitting it with a shorter title. If there is a duplicate, please disregard the first one. Thanks!. I have python scripts running qutip a couple of years ago. I never touched my qutip installation. Today I tried to run it again and got an error. It happened with the simple line ""_from qutip import *_"" (See error output in the output field below). So what changed? This happens even when I simply run the script from the command line, or run this command in the web-based Jupyter environment. I tried several solutions suggested on the web and by ChatGPT to uninstall/reinstall and roll back versions etc. Nothing worked. I got the exact same error each time.; The error happens as early as Import qutip. ### Code to Reproduce the Bug. ```shell; from qutip import *; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_5760/2092932745.py in <module>; ----> 1 from qutip import *. ~\Anaconda3\lib\site-packages\qutip\__init__.py in <module>; 31 #; 32 ; ---> 33 from .core import *; 34 from .solver import *; 35 from .solver import nonmarkov. ~\Anaconda3\lib\site-packages\qutip\core\__init__.py in <module>; 1 from .options import *; 2 from .coefficient import *; ----> 3 from .qobj import *; 4 from .cy.qobjevo import *; 5 from .expect import *. ~\Anaconda3\lib\site-packages\qutip\core\qobj.py in <module>; 1806 from qutip.core.superoperator import vector_to_operator, operator_to_vector; 1807 from qutip.core.tensor import tensor_swap, tensor; -> 1808 from qutip.core import metrics as mts. ~\Anaconda3\lib\site-packages\qutip\core\metrics.py in <module>; 17 from .operators import qeye, qeye_like; 18 from .states import ket2dm; ---> 19 from .semidefinite import dnorm_problem, dnorm_sparse_problem; 20 from . import data as _data; 21 . ~\Anaconda3\lib\s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:289,install,installation,289,https://qutip.org,https://github.com/qutip/qutip/issues/2500,1,['install'],['installation']
Deployability,"### Bug Description. Hi there, I'm using qutip 4.7.2. I recently ran into some unitary transformation problem. So I want to use the displacement operator to displace the annihilation operator by 1, so I tried to define my displacement operator, and unitary transform the annihilation operator. I want to compare the result with that of directly adding 1 to the annihilation operator by looking at their trace distance, which is supposed to be 0. However, the result is 5... I don't know where it goes run, and just wonder if anyone knows what's going on?. ### Code to Reproduce the Bug. ```shell; from qutip import *. dim = 10. # Create and destroy operators; a = destroy(dim); D = (a.dag() - a).expm(). # Displaced annihilation operator; a_displaced = D.dag() * a * D. # Check trace distance between the displaced operator and (a + 1); trace_distance = tracedist(a_displaced, a + 1). print(f""The trace distance is {trace_distance}""); ```. ### Code Output. ```shell; The trace distance is 5.00000005039634; ```. ### Expected Behaviour. The trace distance should be 0. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.9; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2495:1288,Install,Installed,1288,https://qutip.org,https://github.com/qutip/qutip/issues/2495,1,['Install'],['Installed']
Deployability,"### Bug Description. I am encountering a TypeError whenever I run any code for the second time. The behaviour is as expected when I run the code for the first time. I am encountering this error only on Linux. It is working fine on my Windows laptop. ### Code to Reproduce the Bug. ```shell; from qutip import *. import numpy as np. import matplotlib.pyplot as plt. qutip.about(); ```. ### Code Output. ```shell; File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 80, in jmat; A = 0.5 * (_jplus(j) + _jplus(j).getH()). TypeError: unsupported operand type(s) for +: 'fast_csr_matrix' and 'fast_csr_matrix'; ```. ### Expected Behaviour. QuTiP Version: 4.7.1; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.33; Matplotlib Version: 3.0.2; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/premkr/.local/lib/python3.7/site-packages/qutip. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.33; Matplotlib Version: 3.0.2; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/premkr/.local/lib/python3.7/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121:852,Install,Installed,852,https://qutip.org,https://github.com/qutip/qutip/issues/2121,4,['Install'],"['Installation', 'Installed']"
Deployability,"### Bug Description. I get `BLAS Info: INTEL MKL` but `INTEL MKL Ext: False` when installing numpy with MKL via conda. The environment is set up with conda on windows. ; ```bash; conda install -c defaults numpy; conda install -c conda-forge qutip; ```. ### Code to Reproduce the Bug. ```shell; >>> qutip.about(); QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\z62369ry\.conda\envs\ollie2\Lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Code Output. _No response_. ### Expected Behaviour. This installs MKL but qutip doesn't correctly indentify the DLL. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. When looking in the conda `Libraries\bin` directory, qutip searches for `mkl_rt.dll` which doesn't e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2159:82,install,installing,82,https://qutip.org,https://github.com/qutip/qutip/issues/2159,3,['install'],"['install', 'installing']"
Deployability,"### Bug Description. I have been running into an issue similar to #806, #1605, and #1623 wherein usage of `mesolve` produces the attached error. It seems as if the majority of the users that reported that error had some suspect input parameters leading to slow convergence in integration; to confirm that this wasn't the case I tried running the [qubit dynamics QuTiP tutorial](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/qubit-dynamics.ipynb), which _still_ produced the same error. My system specs are as follows: `21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101 arm64`. My package installations can be found here: [requirements.txt](https://github.com/qutip/qutip/files/8725390/requirements.txt). These are also listed in the below categories. Any help would be appreciated. ### Code to Reproduce the Bug. ```shell; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; def qubit_integrate(epsilon, delta, g1, g2, solver):. H = epsilon / 2.0 * sigmaz() + delta / 2.0 * sigmax(); ; # collapse operators; c_ops = []. if g1 > 0.0:; c_ops.append(np.sqrt(g1) * sigmam()). if g2 > 0.0:; c_ops.append(np.sqrt(g2) * sigmaz()). e_ops = [sigmax(), sigmay(), sigmaz()]; ; if solver == ""me"":; output = mesolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""es"":; output = essolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""mc"":; ntraj = 250; output = mcsolve(H, psi0, tlist, ntraj, c_ops, [sigmax(), sigmay(), sigmaz()]) ; else:; raise ValueError(""unknown solver""); ; return output.expect[0], output.expect[1], output.expect[2]; epsilon = 0.0 * 2 * np.pi # cavity frequency; delta = 1.0 * 2 * np.pi # atom frequency; g2 = 0.15; g1 = 0.0. # intial state; psi0 = basis(2,0). tlist = np.linspace(0,5,200). # analytics; sx_analytic = np.zeros(shape(tlist)); sy_analytic = -np.sin(2*np.pi*tlist) * np.exp(-tlist * g2); sz_analytic = np.cos(2*np.pi*tlist) * np.exp(-tlist * g2); sx1, sy1, sz1 = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:276,integrat,integration,276,https://qutip.org,https://github.com/qutip/qutip/issues/1896,2,"['install', 'integrat']","['installations', 'integration']"
Deployability,"### Bug Description. I took a qutip script created 3 years ago (named ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb"") and ran it now (exact copied named ""Test.ipynb"") and got different results.; There is a caveat, whether relevant or not. When I ran the duplicated script (Test.ipynb) this time, I got errors keeping me from importing qutip. I submitted a ticket yesterday (#2500), which was kindly addressed, recommending that I uninstall cvxpy to remove conflict. I did that and was able to import qutip.; I then ran the duplicate script, but got a different result from 3 years ago. If you compare the output at block 23, you'll see it deviates significantly from the corresponding block in the old script. I have changed nothing in hte duplicated script, other than uninstalling cvxpy to make it run.; I then reinstalled cvxpy with upgrade and then qutip again. This time I can still import qutip, but with a warning. I ran the script with no problem, but still got the same deviated behavior from 3 years ago. [codes.zip](https://github.com/user-attachments/files/16367713/codes.zip). The 3-year-old script is included only to show the previous results. It is not meant to be run. I suspect if you run it with your likely different setup, you might get the same deviation as I did, or even yet another different deviation. I cannot recall the state of installation I had from 3 years ago. I believe I did it through conda. I just realized that I cannot include qutip scripts with this report. I included a zipped folder containing these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:875,upgrade,upgrade,875,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['upgrade'],['upgrade']
Deployability,"### Bug Description. I try to install Qutip on my macOS (m1 pro, Ventura 13.0.1). I typed `pip3 install qutip` in the terminal, and get the following error message:. ``` .... copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-universal2-cpython-39/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.cqobjevo' extension; creating build/temp.macosx-10.9-universal2-cpython-39; creating build/temp.macosx-10.9-universal2-cpython-39/qutip; creating build/temp.macosx-10.9-universal2-cpython-39/qutip/cy; clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot/System/Library/Frameworks/System.framework/PrivateHeaders -iwithsysroot/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I/private/var/folders/8s/46j41bsj6rq3xkzplbcmjm2h0000gn/T/pip-build-env-do4siooe/overlay/lib/python3.9/site-packages/numpy/core/include -I/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -c qutip/cy/cqobjevo.cpp -o build/temp.macosx-10.9-universal2-cpython-39/qutip/cy/cqobjevo.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; qutip/cy/cqobjevo.cpp:38:10: fatal error: 'Python.h' file not found; #include ""Python.h""; ^~~~~~~~~~; 1 error generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects; ```. ### Code to Reproduce the Bug. ```shell; pip3 install qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. It should be installed successfully. ### Your Environment. ```shell; pip version: 22.3.1; ```. ### Additional Context. I tried `pip3 install pyproject` but it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:30,install,install,30,https://qutip.org,https://github.com/qutip/qutip/issues/2027,2,['install'],['install']
Deployability,"### Bug Description. I updated some old code from v4.7 to v5 this week and found some examples of brmesolve which were substantially slower... going from 30 seconds to 15+ minutes. Fiddling around a little I narrowed it down to at least one issue (though there may be others). This is particularly tricky because I also have examples which are substantially faster in v5. The one issue I found was that bloch_redfield_tensor() always returns a dense bloch-redfield tensor, even if you set br_type to sparse. It does return a sparse one if fock_basis=false, which points at the issue being; https://github.com/qutip/qutip/blob/0b4260e821cf4d095df6fa02ea5a71bc0655516c/qutip/core/_brtensor.pyx#L281; so this call to from_eigbasis() in _brtools always returning a dense object; https://github.com/qutip/qutip/blob/0b4260e821cf4d095df6fa02ea5a71bc0655516c/qutip/core/_brtools.pyx#L290. if i manually convert the tensor back to sparse again, and use it, it speeds up these hard cases by a factor of 5 or 6. Not sure if it resolves my original 30seconds -> 15 minutes problem completely, will check a bit more. In some sense this relates to the old issue of how broadly default_dtype should be applied, but here it seems more specific in that one requests a sparse tensor and gets a dense one. ### Code to Reproduce the Bug. ```shell; R = bloch_redfield_tensor(H, [[Q, Lor]], fock_basis=True, sparse_eigensolver=True, br_dtype='sparse'); print(R.dtype); ```. ### Code Output. ```shell; <class 'qutip.core.data.dense.Dense'>; ```. ### Expected Behaviour. Sparse tensor and fast brmesolve!. ### Your Environment. ```shell; QuTiP Version: 5.1.0.dev0+8efc188; Numpy Version: 2.0.1; Scipy Version: 1.14.0; Cython Version: 3.0.11; Matplotlib Version: 3.9.1.post1; Python Version: 3.10.12; Number of CPUs: 28; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530:23,update,updated,23,https://qutip.org,https://github.com/qutip/qutip/issues/2530,1,['update'],['updated']
Deployability,"### Bug Description. I've encountered this bug when creating a clean environment, and installing `qutip` (and IPython as console) through mamba.; Next, I've opened an IPython console and ran `import qutip`, which resulted in the exception printed below - stating that the `format` attribute of the `fast_csr_matrix` cannot be set. I believe the latest `scipy` [release](https://github.com/scipy/scipy/releases) is the culprit (released 14 hrs ago at the time of writing) - reducing from `scipy==1.11.0` to `scipy==1.10.1` resolves the issue for me. ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; Cell In[1], line 1; ----> 1 import qutip. File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\__init__.py:106; 98 del matplotlib; 101 # -----------------------------------------------------------------------------; 102 # Load modules; 103 #; 104; 105 # core; --> 106 from qutip.qobj import *; 107 from qutip.qobjevo import *; 108 from qutip.states import *. File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\qobj.py:2526; 2523 # TRAILING IMPORTS; 2524 # We do a few imports here to avoid circular dependencies.; 2525 from qutip.eseries import eseries; -> 2526 import qutip.superop_reps as sr; 2527 import qutip.tensor as tensor; 2528 import qutip.operators as ops. File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\superop_reps.py:74; 61 return Qobj(dims=[[[2], [2]], [[2], [2]]],; 62 inpt=array([[1. - pe / 2., 0., 0., 1. - pe],; 63 [0., pe / 2., 0., 0.],; 64 [0., 0., pe / 2., 0.],; 65 [1. - pe, 0., 0., 1. - pe / 2.]]),; 66 superrep='choi'); 69 # CHANGE OF BASIS FUNCTIONS ---------------------------------------------------; 70 # These functions find change of basis matrices, and are useful in converting; 71 # between (for instance) Choi and chi matrices. At some point, these should; 72 # probably be moved out to another module.; ---> 74 _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigma",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182:86,install,installing,86,https://qutip.org,https://github.com/qutip/qutip/issues/2182,4,"['install', 'release']","['installing', 'release', 'released', 'releases']"
Deployability,"### Bug Description. In `qutip.qobjevo.compile`, on line 1646, the `.pyx` file created by qutip is registered into the global variable `coeff_files` containing a `_file_list` object using the method `coeff_files.add(file_)`. The `add` method appends a `.pyx` extension on line 60 to the string `file_`; ```; self.files += [file_ + "".pyx""]; ```; However, the `file_` string generated by `_compiled_coeffs` already has the file extension, judging from the return value of `qutip.qobjevo_codegen._import_str`, on line 54; ```; return coeff_obj, try_file + ext; ```; I believe this causes `coeff_files.clean()` on line 1697 of `qutip.qobjevo.compile` to not delete the `.pyx` files after the cython class has been loaded. ### Code to Reproduce the Bug. ```shell; import qutip as qt; qt.sesolve([qt.identity(2), [qt.sigmax(), 'sin(t)']], qt.basis(2, 0),; tlist=[0, 2]); ```. ### Code Output. ```shell; creates the file cqobjevo_compiled_coeff_6095589624050.pyx in the working directory.; ```. ### Expected Behaviour. The `.pyx` file in the working directory should be deleted. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.25.2; Scipy Version: 1.11.2; Cython Version: 0.29.36; Matplotlib Version: 3.7.2; Python Version: 3.10.12; Number of CPUs: 4; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2231:1295,Install,Installed,1295,https://qutip.org,https://github.com/qutip/qutip/issues/2231,1,['Install'],['Installed']
Deployability,"### Bug Description. In a fresh conda environment with python 3.10, qutip installation from pip fails. It seems that this was due to people jumping to Python 3.10 too early https://github.com/numpy/numpy/issues/20039. Since October this issue is resolved and we can install Numpy from pip with Python 3.10. However, trying to install qutip with Python 3.10 still leads to this error. Even if I had Numpy (numpy==1.21.4) already installed, qutip tries to build Numpy again. I cannot install numpy 1.20.0 with Python 3.10 and so downgrading my Python to 3.9 is the only solution for now. @hodgestar @jakelishman We should try to find a fix for this ASAP . Any thoughts on this?. ### Code to Reproduce the Bug. ```shell; conda create -n py310 python=3.10; conda activate py310; pip install qutip; ```. ### Code Output. ```shell; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ```; ```. ### Expected Behaviour. Qutip should have got installed after installing the dependencies. ### Your Environment. ```shell; N/A.; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732:74,install,installation,74,https://qutip.org,https://github.com/qutip/qutip/issues/1732,9,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"### Bug Description. In a fresh virtual environment, doing `pip install qutip` will cause the error. ```; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:64,install,install,64,https://qutip.org,https://github.com/qutip/qutip/issues/2412,6,"['Install', 'install', 'upgrade']","['Installing', 'install', 'installation', 'installed', 'upgrade']"
Deployability,### Bug Description. In https://github.com/qutip/qutip-tutorials/pull/42#pullrequestreview-1119409348 @BoxiLi noticed that `qutip.ipynbtools` imports Cython without a `try: ... except: ...` around the import. This results in `qutip.ipynbtools.version_table()` failing even though Cython isn't a required dependency of QuTiP. We should do a thorough clean up of this module in dev-major and fix this particular issue while we're there. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. `qutip.ipynbtools.version_table()` can be called without Cython installed. ### Your Environment. ```shell; QuTiP version: 5.0.0.dev; ```. ### Additional Context. _No response_,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2001:601,install,installed,601,https://qutip.org,https://github.com/qutip/qutip/issues/2001,1,['install'],['installed']
Deployability,"### Bug Description. In master equation solver, the case where **collapse operator = None** vs the case where **collapse operator = [0 * some matrix]** outputs different results. This behavior can be found [here](https://github.com/EeshGupta/Multimode-Conditional-Displacements/blob/main/hpc_runs/two_mode_ecd/Qutip%20Batch%20Optimizer%20Inconsistency/Qutip%20Collapse%20Operator%20Bug.ipynb). ### Code to Reproduce the Bug. ```shell; from qutip import *. initial = tensor(basis(2, 0)); target = tensor(basis(2,0)). c_ops1 = None; c_ops2 = [0*qeye(2)]. T = 10; times = [i for i in range(T)]; opts = Options(store_states=True, store_final_state=True,nsteps = 4000,max_step = 10). #collapse ops = None; output1 = mesolve(sigmax(), initial , times, c_ops1, [], options =opts); rho1 = output1.states[-1] #final state ; #collapse ops = 0*matrix; output2 = mesolve(H, initial , times, c_ops, [], options =opts); rho2 = output2.states[-1]. fid1 = rho1.overlap(target); fid2 = rho2.overlap(target). print('fid1: ' + str(fid1)); print('fid2: ' + str(fid2)); print('Is fid1 = fid2? ' + str(fid1==fid2)); ```. ### Code Output; `fid1: 0.911130904224875; fid2: 0.8301538149349885; Is fid1 = fid2? False`; ### Expected Behaviour. Both cases should give the same output, say x.; ```; fid1: x; fid2: x; Is fid1 = fid2? True; ```. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.18.5; Scipy Version: 1.4.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1985:1535,Install,Installed,1535,https://qutip.org,https://github.com/qutip/qutip/issues/1985,1,['Install'],['Installed']
Deployability,"### Bug Description. In my opinion the use of `qset.openmp_thresh` in `qobjevo.py`. if all(qset.openmp_thresh < nz for nz in nnz):; omp = 0. is wrong. Like this, if all the `nz` in `nnz` are larger than the threshold, the OpenMP will be disabled, ; which is not compatible with the documentation. Shouldn't it be rather a `>` ?; With this code, I have to set `openmp_thresh` in `~/.qutip/qutiprc` larger than the smallest `nz` in `nnz`; to enable OpenMP. And then it works like a charm ;-). ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. If any of the `nz` in `nnz` is larger than the threshold, the OpenMP should be enabled. ; One could use. if all(qset.openmp_thresh > nz for nz in nnz):; omp = 0. ### Your Environment. ```shell; QuTiP Version: 4.7.6; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: 0.29.37; Matplotlib Version: 3.8.4; Python Version: 3.10.10; Number of CPUs: 256; BLAS Info: Generic; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2487:980,Install,Installed,980,https://qutip.org,https://github.com/qutip/qutip/issues/2487,1,['Install'],['Installed']
Deployability,"### Bug Description. In some rare cases, like the example below, simdiag does not return orthonormal eigenvectors, despite this always being possible. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import simdiag, Qobj. a = np.array([[1, 0, 1, -1, 0],; [0, 4, 0, 0, 1],; [1, 0, 4, 1, 0],; [-1, 0, 1, 4, 0],; [0, 1, 0, 0, 4]]). b = np.eye(5). evals, evecs = simdiag([Qobj(a), Qobj(b)]); evecs = np.array([evec.full() for evec in evecs]).squeeze(). # Check that eigenvectors form an othonormal basis (<=> matrix of eigenvectors is unitary); deviation_from_unitarity = np.linalg.norm(evecs@evecs.conj().T - np.eye(len(evecs))); assert np.isclose(deviation_from_unitarity, 0); ```. ### Code Output. ```shell; AssertionError; ```. ### Expected Behaviour. Since by requirement of simdiag all input matrices must be hermitian and commute, the common eigenvectors should always be orthonormal. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.6; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. The fix is simple: ; Here; ```python; subspace = vecs.conj().T @ ops[i].full() @ vecs; eigvals, eigvecs = la.eig(subspace); ```; `la.eig` has to be replaced by `la.eigh`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2268:1131,Install,Installed,1131,https://qutip.org,https://github.com/qutip/qutip/issues/2268,1,['Install'],['Installed']
Deployability,"### Bug Description. In the ""return"" statement of enr_destroy, we have `return [Qobj(a, dims=[dims, dims]) for a in a_ops]`. Then, when attempting to create the Qobjs in this return statement, we have the following conditional statement:. ```; if (self._data.shape[0] > np.prod(np.hstack(self.dims[0])) or; self._data.shape[1] > np.prod(np.hstack(self.dims[1]))) and \; self.type != 'super':. raise ValueError(f""Qobj has smaller dims {self.dims} "" +; f""than underlying shape {self._data.shape}""); ```; ; Because np.prod assumes that the input numbers are 32 bit integers, there is a possibility for an overflow, causing the result to be negative and hence this ValueError will always be raised. ### Code to Reproduce the Bug. ```shell; from qutip import enr_destroy. enr_destroy([12]*12,2); ```. ### Code Output. ```shell; ValueError: Qobj has smaller dims [[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]] than underlying shape (91, 91); ```. ### Expected Behaviour. enr_destroy would work. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.20.1; Scipy Version: 1.9.3; Cython Version: 0.29.21; Matplotlib Version: 3.6.2; Python Version: 3.8.6; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. This can be easily fixed by doing np.prod(np.hstack(self.dims[0])**, dtype = np.int64**) instead of what is currently being done.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2249:1265,Install,Installed,1265,https://qutip.org,https://github.com/qutip/qutip/issues/2249,1,['Install'],['Installed']
Deployability,"### Bug Description. Installing `qutip` with `pip` on Python 3.11 fails at the ""Getting the requirements to build the wheel"" stage. Potentially related to [these changes](https://github.com/pypa/packaging/pull/407) in `packaging`, introduced in the latest update to `22.0`. ### Code to Reproduce the Bug. ```shell; pip install qutip --no-cache-dir; ```. ### Code Output. ```shell; Collecting qutip; Downloading qutip-4.7.0.tar.gz (3.6 MB); ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 18.2 MB/s eta 0:00:00; Installing build dependencies ... done; Getting requirements to build wheel ... error; error: subprocess-exited-with-error; ; × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> [20 lines of output]; Traceback (most recent call last):; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 351, in <module>; main(); File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 333, in main; json_out['return_val'] = hook(**hook_input['kwargs']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 118, in get_requires_for_build_wheel; return hook(config_settings); ^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:21,Install,Installing,21,https://qutip.org,https://github.com/qutip/qutip/issues/2036,4,"['Install', 'install', 'update']","['Installing', 'install', 'update']"
Deployability,"### Bug Description. Installing qutip with `pip install qutip` fails on a MacBook Pro with M1 Pro running macOS 12.0.1, due to the build dependency `numpy<1.20` failing to build. This happens both with miniconda python 3.9.6 and miniforge python 3.9.7. Same happens if I clone the master branch and build. If I edit `pyproject.toml` and `setup.cfg` to remove the `<1.20` in Numpy, then qutip builds correctly (then I get same problem as Issue #1606 when importing, but that's another story). ### Code to Reproduce the Bug. ```shell; conda create -n qutip_test; pip install qutip; ```. ### Code Output. ```shell; Collecting qutip; Using cached qutip-4.6.2.tar.gz (3.4 MB); Installing build dependencies ... error; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:21,Install,Installing,21,https://qutip.org,https://github.com/qutip/qutip/issues/1740,4,"['Install', 'install']","['Installing', 'install']"
Deployability,"### Bug Description. It appears that the fidelity function is off by a power of 2. It returns the square root of the conventionally accepted definition of fidelity. For example, we expect that the fidelity between the states |0> and |+> is 0.5, but executing the code below returns the square root of this. ### Code to Reproduce the Bug. ```shell; from qutip import basis, fidelity, ket2dm; import numpy as np. a = basis(2,0); b = (basis(2,0)+basis(2,1)) / np.sqrt(2); fidelity(a,b). a, b = ket2dm(a), ket2dm(b); fidelity(a,b); ```. ### Code Output. ```shell; 0.7071067811865475; 0.7071067811865475; ```. ### Expected Behaviour. The expected output for both is 0.5. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.4; Scipy Version: 1.9.3; Cython Version: None; Matplotlib Version: 3.6.1; Python Version: 3.11.0; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2102:885,Install,Installed,885,https://qutip.org,https://github.com/qutip/qutip/issues/2102,1,['Install'],['Installed']
Deployability,### Bug Description. My CI builds are suddenly erroring out:. ```python; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/my_code.py:14: in <module>; import qutip; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/qutip/__init__.py:64: in <module>; import qutip.cy.pyxbuilder as _pyxbuilder; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/qutip/cy/pyxbuilder.py:17: in <module>; old_get_distutils_extension = pyximport.pyximport.get_distutils_extension; E AttributeError: module 'pyximport.pyximport' has no attribute 'get_distutils_extension'; ```. ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. no exception. ### Your Environment. ```shell; I'm using `qutip-4.7.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl`.; ```. ### Additional Context. This exact same environment was working in yesterday's CI build. We speculate that `Cython`'s major release [yesterday](https://pypi.org/project/Cython/#history) is related.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2198:961,release,release,961,https://qutip.org,https://github.com/qutip/qutip/issues/2198,1,['release'],['release']
Deployability,"### Bug Description. QuTiP Qobj has a `tinyup()` method that sets to 0 all values lower than a certain threshold defined by `settings.auto_tidyup_atol`:. https://github.com/qutip/qutip/blob/f5bdb6dda3f121c253a4862235674fa8980b7681/qutip/qobj.py#L1383. As explained in [here](https://qutip.org/docs/latest/guide/guide-settings.html), the user should be able to change this value. . Playing with this options I realized that changing the `qutip.settings.auto_tidyup` to False works, but changing the `qutip.settings.auto_tidyup_atol` value doesn't. ### Code to Reproduce the Bug. ```shell; import qutip. qutip.settings.auto_tidyup_atol = 1e-30; a = qutip.Qobj(1); print(a * 1e-15); qutip.settings.auto_tidyup = False; print(a * 1e-15); ```. ### Code Output. ```shell; Quantum object: dims = [[1], [1]], shape = (1, 1), type = bra; Qobj data =; [[0.]]; Quantum object: dims = [[1], [1]], shape = (1, 1), type = bra; Qobj data =; [[1.e-15]]; ```. ### Expected Behaviour. The first print should have been:; ```; Quantum object: dims = [[1], [1]], shape = (1, 1), type = bra; Qobj data =; [[1.e-15]]; ```. When multiplying `a * 1e-15`, QuTiP calls the `__mul__` magic method, where `out.tidyup()` is called:. https://github.com/qutip/qutip/blob/f5bdb6dda3f121c253a4862235674fa8980b7681/qutip/qobj.py#L581. Tidyup contains one argument set to `settings.auto_tidyup_atol` by default. This value should change to 1e-30 when running `qutip.settings.auto_tidyup_atol = 1e-30`, but this never happens. Consequently, the output value is set to 0. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.22.3; Scipy Version: 1.8.0; Cython Version: None; Matplotlib Version: 3.5.1; Python Version: 3.10.2; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1829:1753,Install,Installed,1753,https://qutip.org,https://github.com/qutip/qutip/issues/1829,1,['Install'],['Installed']
Deployability,"### Bug Description. Some tests of qutip.testing.run() fail on master on a MacBook Pro (2021) with M1. Qutip was installed on a miniforge python 3.9.9 distribution. ### Code to Reproduce the Bug. ```shell; import qutip.testing; qutip.testing.run(); ```. ### Code Output. ```shell; ============================================================================================= FAILURES ==============================================================================================; _________________________________________________________________________________________ test_dqd_current __________________________________________________________________________________________. def test_dqd_current():; ""Counting statistics: current and current noise in a DQD model""; ; G = 0; L = 1; R = 2; ; sz = qutip.projection(3, L, L) - qutip.projection(3, R, R); sx = qutip.projection(3, L, R) + qutip.projection(3, R, L); sR = qutip.projection(3, G, R); sL = qutip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current[n], noise[n] = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops); ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:113,install,installed,113,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['install'],['installed']
Deployability,"### Bug Description. String form QobjEvos cannot be created.; The error is due to a missing file: `intdtype.h` is missing from `/home/xavier/anaconda3/envs/qutip5-bench/lib/python3.10/site-packages/qutip/core/data/src/`. ### Code to Reproduce the Bug. ```shell; import qutip ; n = qutip.num(5); string_form= qutip.QobjEvo([n, 'cos(t)']); ```. ### Code Output. ```shell; [1/1] Cythonizing /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.pyx; running build_ext; building 'qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab' extension; gcc -pthread -B /home/xavier/anaconda3/envs/qutip5-bench/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/xavier/anaconda3/envs/qutip5-bench/include -fPIC -O2 -isystem /home/xavier/anaconda3/envs/qutip5-bench/include -fPIC -I/home/xavier/anaconda3/envs/qutip5-bench/lib/python3.10/site-packages/numpy/core/include -I/home/xavier/anaconda3/envs/qutip5-bench/include/python3.10 -c /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.cpp -o build/temp.linux-x86_64-cpython-310/home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.o -w -O3 -funroll-loops; /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.cpp:749:10: fatal error: src/intdtype.h: No such file or directory; 749 | #include ""src/intdtype.h""; | ^~~~~~~~~~~~~~~~; compilation terminated.; error: command '/usr/bin/gcc' failed with exit code 1; ```. ### Expected Behaviour. I was expecting a string form QobjEvo object to be created. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+0a19bf9; Numpy Version: 1.22.4; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.5; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. Qutip was installed using `pip install git+https://github.com/qutip/qutip@dev.major` in a conda environment.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1960:1885,install,installed,1885,https://qutip.org,https://github.com/qutip/qutip/issues/1960,2,['install'],"['install', 'installed']"
Deployability,"### Bug Description. The ReadTheDocs build fails with:; ```; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```; See https://readthedocs.org/projects/qutip/builds/23361676/ for the full build log (not sure if this is publicly visible -- if not, I can add QuTiP admins as maintainers on readthedocs.org if they give me their username). The QuTiP ReadTheDocs configuration is at: https://github.com/qutip/qutip/blob/master/.readthedocs.yaml. Probably this can be fixed by adding an appropriate dependency to https://github.com/qutip/qutip/blob/master/doc/rtd-environment.yml. ### Code to Reproduce the Bug. ```shell; Attempt to build the documentation on ReadTheDocs.; ```. ### Code Output. ```shell; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```. ### Expected Behaviour. ReadTheDocs builds successfully. ### Your Environment. ```shell; QuTiP version: master branch; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2317:891,configurat,configuration,891,https://qutip.org,https://github.com/qutip/qutip/issues/2317,1,['configurat'],['configuration']
Deployability,"### Bug Description. The `hinton` visualization method doesn't have the correct square area scaling. ### Code to Reproduce the Bug. ```shell; import qutip as qt; u = qt.Qobj([[0.1, 0.1],; [1.0, 0.1]]); qt.hinton(u); ```. ### Code Output. _No response_. ### Expected Behaviour. Output:; ![6ec9b5de-a6b1-4ed1-a730-e35e158c8ae3](https://user-images.githubusercontent.com/38159029/197496789-7cf89a2e-a395-43ad-a21d-87d1734d8cea.png). Expected (including the matrix transpose correction, see also issue #2009):; ![bafa400f-c2c3-4b71-8ff7-fefec3a8c9ce](https://user-images.githubusercontent.com/38159029/197497261-6b4a310a-041e-49c0-965a-75847901873c.png). ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.23.1; Scipy Version: 1.9.0; Cython Version: None; Matplotlib Version: 3.5.2; Python Version: 3.9.9; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am happy to help fixing this if you confirm the issue, I think the `w_max` should not be computed from the diagonal but rather from all matrix elements: https://github.com/qutip/qutip/blob/8118ee8e1a96d45dcf9187a71f7ec1413e55b22f/qutip/visualization.py#L306. Suggested correction:; ```python; w_max = 1.25 * max(abs(np.array(W)).flatten()); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2010:869,Install,Installed,869,https://qutip.org,https://github.com/qutip/qutip/issues/2010,1,['Install'],['Installed']
Deployability,"### Bug Description. The `hinton` visualization method plots the transpose of the matrix instead of the matrix itself. ### Code to Reproduce the Bug. ```shell; import qutip as qt; u = qt.Qobj([[1.0, 1.0],; [0.0, 1.0]]); qt.hinton(u); ```. ### Code Output. _No response_. ### Expected Behaviour. Output:; ![7c46ebe9-df8a-4246-898c-adb88b07fd01](https://user-images.githubusercontent.com/38159029/197494500-d3b3ab8a-59a7-4bee-b55e-94a5e44f02ba.png). Expected:; ![eeda621e-7720-42bd-b320-19ac9f2dc772](https://user-images.githubusercontent.com/38159029/197494815-885be8c9-dc3f-4b4c-a594-234220c06b41.png). ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.23.1; Scipy Version: 1.9.0; Cython Version: None; Matplotlib Version: 3.5.2; Python Version: 3.9.9; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am happy to help fixing this if you confirm the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2009:821,Install,Installed,821,https://qutip.org,https://github.com/qutip/qutip/issues/2009,1,['Install'],['Installed']
Deployability,"### Bug Description. The `plot_spin_distribution_2d` function allows to project a spin distribution function from the surface of a unit sphere to the unit disk. QuTiP uses `matplotlib.pyplot.pcolor` to perform this task and calculates a meshgrid `X, Y` to plot the function to. Due to some changes in `matplotlib` the current implementation is deprecated and will return errors in a few minor releases. We could quickly fix this by passing `shading='auto'` to the call of `ax.pcolor()` in the [visualization.py](https://github.com/qutip/qutip/blob/82c6704c6fea8a2801492865ad1ef7c1d73c8840/qutip/visualization.py#L1313). However, this raises another UserWarning that the center points are not monotonically sorted. The cleanest way to fix this bug would be to pass the edges of the quadrilaterals to `pcolor()`. But we can not calculate them exactly from the given points in `theta, phi`. Hence, we would need to redesign the interface to this function and to related functions like `plot_spin_distribution_3d` and `spin_q_function`. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. j = 5; psi = qt.spin_coherent(j, np.random.rand() * np.pi, np.random.rand() * 2 * np.pi); rho = qt.ket2dm(psi). theta = np.linspace(0, np.pi, 50); phi = np.linspace(0, 2 * np.pi, 50). Q, THETA, PHI = qt.spin_q_function(psi, theta, phi); fig, ax = qt.plot_spin_distribution_2d(Q, THETA, PHI); plt.show(); ```. ### Code Output. ```shell; MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3. Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading']. This will become an error two minor releases later.; ax.pcolor(X, Y, P.real, cmap=cmap); ```. ### Expected Behaviour. I expect the same plot, but without the warning which becomes an error in the future. ### Your Environment. ```shell; QuTiP Version: 5.0.0.de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1973:393,release,releases,393,https://qutip.org,https://github.com/qutip/qutip/issues/1973,1,['release'],['releases']
Deployability,"### Bug Description. The act of the CNOT gate is not what it is expected. In particular it changes the target qubit when the control qubit is in the ground state instead of excited state given that in qutip basis(2,1) is the ground state. If this is on purpose it needs to be clearly stated in the tutorials or the documentation. ### Code to Reproduce the Bug. ```shell; from qutip import *; from qutip_qip.circuit import QubitCircuit; from qutip_qip.operations import (Gate, berkeley, cnot, cphase, csign, fredkin,; gate_sequence_product, globalphase, iswap,; molmer_sorensen, phasegate, qrot, rx, ry, rz,; snot, sqrtiswap, sqrtnot, sqrtswap, swap,; swapalpha, toffoli); test=cnot()*tensor(basis(2,1),basis(2,1)); print(test); ```. ### Code Output. ```shell; Quantum object: dims=[[2, 2], [1, 1]], shape=(4, 1), type='ket', dtype=Dense; Qobj data =; [[0.]; [0.]; [1.]; [0.]]; ```. ### Expected Behaviour. Quantum object: dims=[[2, 2], [1, 1]], shape=(4, 1), type='ket', dtype=Dense; Qobj data =; [[0.]; [0.]; [0.]; [1.]]. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.0; Python Version: 3.11.0; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/anaconda3/lib/python3.11/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2494:1288,Install,Installation,1288,https://qutip.org,https://github.com/qutip/qutip/issues/2494,1,['Install'],['Installation']
Deployability,"### Bug Description. The concurrence measure does not work with density matrix objects. ### Code to Reproduce the Bug. ```shell; import qutip. dm = qutip.maximally_mixed_dm(4); print(dm); print(qutip.entropy.concurrence(dm)); ```. ### Code Output. ```shell; Quantum object: dims = [[4], [4]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0.25 0. 0. 0. ]; [0. 0.25 0. 0. ]; [0. 0. 0.25 0. ]; [0. 0. 0. 0.25]]. raise Exception(""Density matrix must be tensor product of two qubits.""); Exception: Density matrix must be tensor product of two qubits.; ```. ### Expected Behaviour. One of two things is happening:; 1. The concurrence method is not compatible with the density matrix Qobj objects. I am not certain why this concurrence method requires [[2, 2], [2, 2]] dimensions instead of [4,4] if the concurrence method is acting on 2 qubit systems.; 2. The density matrix generators are not producing matrices which are consistent with the qutip required format. I tried this on other matrices by just casting numpy arrays to Qobj objects and I got the same error. . ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.21.5; Scipy Version: 1.9.1; Cython Version: 0.29.32; Matplotlib Version: 3.5.2; Python Version: 3.9.13; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2058:1301,Install,Installed,1301,https://qutip.org,https://github.com/qutip/qutip/issues/2058,1,['Install'],['Installed']
Deployability,"### Bug Description. The documentation of the [`StochasticSolverOptions`](https://qutip.org/docs/latest/apidoc/classes.html#qutip.stochastic.StochasticSolverOptions) class states that the `average_states` option can be passed through the `options` keyword and that it will be used:. > options:; > Generic solver options. Only `options.average_states` and `options.store_states` are used. However, it does not seem that this option is working when passed to `ssesolve`, i.e., the states are never averaged. I attach an example code to reproduce the behaviour. ### Code to Reproduce the Bug. ```shell; ## IMPORTS. import matplotlib.pyplot as plt; import numpy as np; import qutip as qt. # Inline plotting; %matplotlib inline. ## PARAMETERS. # Maximum number of photons; n_max = 50. # Resonator frequency; w_r = 10; # Resonator leakage rate; kappa = 1. # Drive parameters; w_d = 12; t_cut = 10/kappa; t_ramp = 0.05/kappa; drive_pars = {""w_d"": w_d, ""t_cut"": t_cut, ""t_ramp"": t_ramp}. # Integration parameters; dt = (2*np.pi/w_d)/30; T = 3/kappa; times = np.arange(0, T, dt). ## FREE HAMILTONIAN. # Annihilation operator; a = qt.destroy(n_max). # Number operator; n = a.dag() * a. # Free Hamiltonian; H_0 = w_r * n. ## DRIVE HAMILTONIAN. # Define drive pulse; def smooth_square_pulse(t, t0, tf, w):; pulse = (1 + np.tanh((tf - t)/w))/2; pulse = pulse * (1 + np.tanh((t-t0)/w))/2; return pulse; def pulse(t, args):; w_d = args[""w_d""]; t_cut = args[""t_cut""]; t_ramp = args[""t_ramp""]; drive = smooth_square_pulse(t, 0, t_cut, t_ramp); drive = drive * np.sin(w_d * t); return drive. # Generate of the drive; V_d_gen = -1j * (a-a.dag()). ## STOCHASTIC COLLAPSE OPERATORS; sc_ops = [np.sqrt(kappa) * a]. ## HAMILTONIAN TO FEED TO THE SOLVER; H = [H_0, [V_d_gen, pulse]]. ## INITIAL STATE; psi_0 = qt.fock(n_max, 0). ## STOCHASTIC SOLVER KWARGS AND OPTIONS; options = qt.Options(); options.average_states = True; kwargs = {""sc_ops"": sc_ops, ""args"": drive_pars, ""ntraj"": 500, ""method"": ""heterodyne"", ""store_measure",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2216:982,Integrat,Integration,982,https://qutip.org,https://github.com/qutip/qutip/issues/2216,1,['Integrat'],['Integration']
Deployability,"### Bug Description. The issue appears when I try to plot some wavefunction in spherical harmonics generated by the `qutip.orbital` function. When using `qutip.sphereplot` for plotting wrong image is shown. . From the source code, it seems the `qutip.orbital` function is using ; ```; phi_mesh, theta_mesh = np.meshgrid(phi, theta); ``` ; to generate the meshgrid, while `qutip.sphereplot` does the opposite:; ```; thetam, phim = np.meshgrid(theta, phi); ```; Personally I would also prefer the latter one in writing my own plotting function. ### Code to Reproduce the Bug. ```shell; theta = np.linspace(0, np.pi, 100); phi = np.linspace(0, 2*np.pi, 100); sphereplot( theta, phi, np.abs( orbital(theta, phi, basis(3,0)) ) ); ```. ### Code Output. _No response_. ### Expected Behaviour. correct image should be shown, which is the case when I also use `phi_mesh, theta_mesh = np.meshgrid(phi, theta)` in my custom plotting function. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.9.3; Cython Version: 0.29.32; Matplotlib Version: 3.6.2; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. ![orbital_bug](https://user-images.githubusercontent.com/28942302/225354063-f010a4b9-abee-4465-abd1-0db682494161.png); ![orbital_correct](https://user-images.githubusercontent.com/28942302/225354098-18a68dd9-7bf2-4d28-8125-9697c07bbdfb.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2123:1155,Install,Installed,1155,https://qutip.org,https://github.com/qutip/qutip/issues/2123,1,['Install'],['Installed']
Deployability,"### Bug Description. The qutip documentation at https://qutip.org/docs/4.0.2/guide/dynamics/dynamics-master.html#unitary-evolution has the code; ```; In [1]: H = 2 * np.pi * 0.1 * sigmax(). In [2]: psi0 = basis(2, 0). In [3]: times = np.linspace(0.0, 10.0, 20.0). In [4]: result = mesolve(H, psi0, times, [], [sigmaz()]); ```; This does not work with recent versions of numpy. In particular `np.linspace(0.0, 10.0, 20.0)` generates the exception `TypeError: 'float' object cannot be interpreted as an integer`. ### Code to Reproduce the Bug. ```shell; import numpy as np; np.linspace(0.0, 10.0, 20.0); ```. ### Code Output. _No response_. ### Expected Behaviour. Documenation examples should be able to execute. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.0.dev0+7425775; Numpy Version: 1.21.6; Scipy Version: 1.8.0; Cython Version: 0.29.30; Matplotlib Version: 3.5.1; Python Version: 3.10.0; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: c:\projects\misc\qutip\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. None",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1944:1509,Install,Installed,1509,https://qutip.org,https://github.com/qutip/qutip/issues/1944,2,['Install'],"['Installation', 'Installed']"
Deployability,### Bug Description. This bug was introduced n #1813 and reported by @nleehone in a post-release review of https://github.com/qutip/qutip/pull/1813#pullrequestreview-950335153. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. The file suffix should be added if it is not present. ### Your Environment. ```shell; QuTiP version: 4.7.0; ```. ### Additional Context. _No response_,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1877:89,release,release,89,https://qutip.org,https://github.com/qutip/qutip/issues/1877,1,['release'],['release']
Deployability,"### Bug Description. This issue originates from a [problem in the Help Group](https://groups.google.com/g/qutip/c/F7tOoZzMjto). Calculating the entropy of a density matrix in the Dicke basis leads to -Inf, while the standard calculation with ""entropy_vn"" returns a finite (more logical) result. ; I already tracked down the problem to the calculation of eigenvalues in `dicke_trace_function`. Due to numerical behaviour some eigenvalues have very small negative values, which lead to -Inf entropy. If these values are rounded to zero, the problem disappears. However, I am not sure, which way is the best way to perform this rounding. ; @nathanshammah @quantshah . ### Code to Reproduce the Bug. ```shell; from qutip import *; from qutip.piqs import *; import numpy as np; import numpy.random; from scipy.linalg import eig; from scipy.sparse import block_diag. N = 10; system = Dicke(N); [jx, jy, jz] = jspin(N,basis=""dicke""); jx=jx*2; jy=jy*2; jz=jz*2. V=3; g=1; system.emission = 1; system.hamiltonian = V/(2*(N-1)) * jz*jz + g/2 * jx; D_tls = system.liouvillian(); rho_ss = steadystate(D_tls,method='eigen',); vn_dicke=entropy_vn_dicke(rho_ss); vn_dicke_over=entropy_vn(Qobj(block_diag(dicke_blocks_full(rho_ss)))). print(vn_dicke,vn_dicke_over); ```. ### Code Output. ```shell; -inf 0.006061297461844266; ```. ### Expected Behaviour. The value for the entropy should not depend on the way it is calculated. I.e., we should have `vn_dicke == vn_dicke_over` up to numerical uncertainty. ### Your Environment. ```shell; uTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.21.0; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919:1723,Install,Installed,1723,https://qutip.org,https://github.com/qutip/qutip/issues/1919,1,['Install'],['Installed']
Deployability,"### Bug Description. Time evolution based on the Lindblad master equation for a time-independent Hamiltonian is guaranteed to be completely positive and trace preserving (CPTP). However, the flag `iscptp` returns `False` for the Liouvillian when calling `propagator` for a time-independent Hamiltonian and including a collapse operator. ### Code to Reproduce the Bug. ```shell; from qutip import sigmaz, qeye, propagator, tensor, sigmam. c_ops = [0.00001 * tensor(sigmam(), qeye(2))]; H0 = tensor(sigmaz(), qeye(2)) + tensor(qeye(2), sigmaz()); H = H0; prop = propagator(H, 1.0, c_ops); print(prop.iscptp); ```. ### Code Output. ```shell; False; ```. ### Expected Behaviour. I expect `prop.iscptp` to be `True`. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.4.2; Python Version: 3.7.7; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1901:934,Install,Installed,934,https://qutip.org,https://github.com/qutip/qutip/issues/1901,1,['Install'],['Installed']
Deployability,"### Bug Description. Two words in the docstring contain typos. See below. ### Code to Reproduce the Bug. ```shell; from qutip import expect; print(expect.__doc__); ```. ### Code Output. ```shell; Parameters; ----------; oper : qobj/array-like; A single or a `list` or operators for expectation value. state : qobj/array-like; A single or a `list` of quantum states or density matrices. Returns; -------; expt : float/complex/array-like; Expectation value. ``real`` if `oper` is Hermitian, ``complex``; otherwise. A (nested) array of expectaction values of state or operator; are arrays.; ```. ### Expected Behaviour. Parameters; ----------; oper : qobj/array-like; A single or a `list` **~~or~~** **_of_** operators for expectation value. state : qobj/array-like; A single or a `list` of quantum states or density matrices. Returns; -------; expt : float/complex/array-like; Expectation value. ``real`` if `oper` is Hermitian, ``complex``; otherwise. A (nested) array of expectaction values **~~of~~** **_if_** state or operator; are arrays. ### Your Environment. ```shell; QuTiP Version: 4.7.5; Numpy Version: 1.26.4; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.3; Python Version: 3.12.2; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2331:1261,Install,Installed,1261,https://qutip.org,https://github.com/qutip/qutip/issues/2331,1,['Install'],['Installed']
Deployability,"### Bug Description. Using `Python 3.12.2` and `Poetry 1.7.1`, when adding `qutip` as a dependency, the installation fails. ### Code to Reproduce the Bug. ```shell; poetry add qutip; ```. ### Code Output. ```shell; Updating dependencies; Resolving dependencies... (0.2s). Package operations: 4 installs, 0 updates, 0 removals. • Installing numpy (1.26.4); • Installing packaging (23.2); • Installing scipy (1.12.0); • Installing qutip (4.7.5): Failed. ChefBuildError. Backend subprocess exited when trying to invoke build_wheel. [...]. building 'qutip.cy.cqobjevo_factor' extension; error: Microsoft Visual C++ 14.0 or greater is required. Get it with ""Microsoft C++ Build Tools"": https://visualstudio.microsoft.com/visual-cpp-build-tools/. at ~\AppData\Roaming\pypoetry\venv\Lib\site-packages\poetry\installation\chef.py:164 in _prepare; 160│; 161│ error = ChefBuildError(""\n\n"".join(message_parts)); 162│; 163│ if error is not None:; → 164│ raise error from None; 165│; 166│ return path; 167│; 168│ def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:. Note: This error originates from the build backend, and is likely not a problem with poetry but with qutip (4.7.5) not supporting PEP 517 builds. You can verify this by running 'pip wheel --no-cache-dir --use-pep517 ""qutip (==4.7.5)""'.; ```. ### Expected Behaviour. Installing qutip successfully. ### Your Environment. ```shell; QuTiP version: 4.7.5; Python version: 3.12.2; Poetry version: 1.7.1; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322:104,install,installation,104,https://qutip.org,https://github.com/qutip/qutip/issues/2322,9,"['Install', 'install', 'update']","['Installing', 'installation', 'installs', 'updates']"
Deployability,"### Bug Description. When initializing an `EnhancedTextProgressBar` object the `__init__` method is calling the `start` method of it's super class instead of it's own. When then using `update` (without calling `start` manually again) there will be an `AttributeError` because `width` is not getting initialized by `__init__`. ### Code to Reproduce the Bug. ```shell; from qutip.ui.progressbar import *. n = 10; a = EnhancedTextProgressBar(n); # a.start(n); for i in range(n):; a.update(i); a.finished(); ```. ### Code Output. ```shell; Traceback (most recent call last):; File ""C:\Users\Name\Desktop\qutip_bug.py"", line 6, in <module>; a.update(i); File ""C:\Users\Name\AppData\Local\Programs\Python\Python311\Lib\site-packages\qutip\ui\progressbar.py"", line 96, in update; all_full = self.width - 2; ^^^^^^^^^^; AttributeError: 'EnhancedTextProgressBar' object has no attribute 'width'; ```. ### Expected Behaviour. Proper initialization of the `width` attribute by `EnhancedTextProgressBar.__init__`. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.11.0; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. Currently in master the `__init__` for both `TextProgressBar` and `EnhancedTextProgressBar` have been commented out and made to just pass. See https://github.com/qutip/qutip/blob/af49884aa1db47a980626ac00adfe83277d8d261/qutip/ui/progressbar.py#L66 and https://github.com/qutip/qutip/blob/af49884aa1db47a980626ac00adfe83277d8d261/qutip/ui/progressbar.py#L94. I would suggest making them both call their own `start` method to omit an additional call of start by the user right after initialization. This would also make both classes be in line with the usage suggested by the docstring of `BaseProgressBar.` Otherwise I would suggest to include the call to start in said docstr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2148:185,update,update,185,https://qutip.org,https://github.com/qutip/qutip/issues/2148,4,['update'],['update']
Deployability,"### Bug Description. When installing on ubuntu 20.04, the build fails with `ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19` this is due to the fact that on this platform `oldest-supported-numpy` (from `pyproject.toml`) defaults to 1.17.3, but `setup.cfg` requires `numpy>=1.19`. ### Code to Reproduce the Bug. ```shell; python -m pip install -v --upgrade qutip; ```. ### Code Output. ```shell; Using pip 24.0 from /home/defreule/.local/lib/python3.8/site-packages/pip (python 3.8); Defaulting to user installation because normal site-packages is not writeable; Requirement already satisfied: qutip in /usr/local/lib/python3.8/dist-packages (4.7.3); Link requires a different Python (3.8.10 not in: '>=3.9'): https://files.pythonhosted.org/packages/73/73/abcc185174ac6dbc7965e5aeb9418c163eafda704008ee795ee9cdc75e4a/qutip-5.0.2.tar.gz (from https://pypi.org/simple/qutip/) (requires-python:>=3.9); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-70.0.0-py3-none-any.whl.metadata (5.9 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:26,install,installing,26,https://qutip.org,https://github.com/qutip/qutip/issues/2440,4,"['install', 'upgrade']","['install', 'installation', 'installing', 'upgrade']"
Deployability,"### Bug Description. When one uses the `floquet_modes` function, the Floquet modes can sometimes come out non-orthogonal. **More info** . I think the problem occurs when some quasienergies are almost degenerate. This could be related to the fact that `floquet_modes` uses `eig` from numpy to diagonalise the propagator U, which in turn does not guarantee orthogonality of the eigenvectors according to the [numpy docs. ](https://numpy.org/doc/stable/reference/generated/numpy.linalg.eig.html). I tried to come up with a simple example of the problem. I also tested what happens if one changes the precision of the numerical integrator used in the `propagator` function within `floquet modes`, and it does affect the result a lot. The `floquet_modes_mod` function that appears in the code below is exactly `floquet_modes`, only I modified it to also accept Options that are then passed to `propagator` (by the way, is there a smarter way to do this without defining this new function?). . ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; import numpy.linalg as la; from numpy import angle, pi. # create a modified floquet_modes that also accepts Options; def floquet_modes_mod(H, T, args=None, sort=False, U=None, options=None):; """"""; Calculate the initial Floquet modes Phi_alpha(0) for a driven system with; period T. Returns a list of :class:`qutip.qobj` instances representing the Floquet; modes and a list of corresponding quasienergies, sorted by increasing; quasienergy in the interval [-pi/T, pi/T]. The optional parameter `sort`; decides if the output is to be sorted in increasing quasienergies or not. Parameters; ----------. H : :class:`qutip.qobj`; system Hamiltonian, time-dependent with period `T`. args : dictionary; dictionary with variables required to evaluate H. T : float; The period of the time-dependence of the hamiltonian. The default value; 'None' indicates that the 'tlist' spans a single period of the driving. U : :class:`qutip.qobj`; The p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:624,integrat,integrator,624,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['integrat'],['integrator']
Deployability,"### Bug Description. When passing sesolve a time independent Hamiltonian, there is still time-dependent evolution returned. It seems to depend on the number of time steps passed to the solver, with more time steps giving more drastic time-dependent evolution. . ### Code to Reproduce the Bug. ```shell; import matplotlib.pyplot as plt; import numpy as np; from qutip import *. qubit_freq = 5000. # operators; a = destroy(2). # Basis States; z_p = basis(2,0); z_m = basis(2,1); x_p = (z_p + z_m)/np.sqrt(2); x_m = (z_p - z_m)/np.sqrt(2); y_p = (z_p + 1j*z_m)/np.sqrt(2); y_m = (z_p - 1j*z_m)/np.sqrt(2) . psi0 = x_p. # Hamiltonian; H = qubit_freq*2*np.pi * (a.dag() * a + 1/2). tlist = np.linspace(0, 0.1, 100000). output1 = sesolve(H, psi0, tlist, e_ops=[a.dag()*a]); n_a = output1.expect[0]. # Plot Occupation with respect to time; fig, axes = plt.subplots(1, 1, figsize=(10,6)); axes.plot(tlist, n_a, label=""Qubit""); axes.legend(loc=0); axes.set_xlabel('Time'); axes.set_ylabel('Occupation probability'); plt.show(); ```. ### Code Output. _No response_. ### Expected Behaviour. The graph provided should be a flat line, indicating no time evolution. . ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.23.5; Scipy Version: 1.11.4; Cython Version: 3.0.6; Matplotlib Version: 3.7.1; Python Version: 3.10.12; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. ![image](https://github.com/qutip/qutip/assets/112031379/cfee4cd8-6b7a-4b9c-87b3-a81d45128132). This plot shows a loss in population when beginning in the x state of a simple two level system. Playing around with the code, I find the slope of this line changes as you give a different number of points in tlist. This also happens with mesolve and mcsolve with no collapse operators (although I suspect this is because behind the scenes, it's just using sesolve).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2275:1376,Install,Installed,1376,https://qutip.org,https://github.com/qutip/qutip/issues/2275,1,['Install'],['Installed']
Deployability,"### Bug Description. When trying to reproduce the [code for the quip-qip paper](https://github.com/boxili/qutip-qip-paper), I'm running into an; ~~~; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ~~~. The full stacktrace indicates that the problem is in the QuTiP code, so I'm reporting it here. Looks like https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725 also ran into this. ### Code to Reproduce the Bug. ```shell; goerz@ophelia(r) main:~/Documents/qutipqip/> python3.8 -m venv venv; goerz@ophelia(r) main:~/Documents/qutipqip/qutip-qip> ../venv/bin/python -m pip install -e .[full]; goerz@ophelia(r) main:~/Documents/qutipqip/qutip-qip> ../venv/bin/python -m pip install joblib; goerz@ophelia(r) main:~/Documents/qutipqip/qutip-qip-paper> ../venv/bin/python dj_algorithm.py; ```. ### Code Output. ```shell; Traceback (most recent call last):; File ""dj_algorithm.py"", line 28, in <module>; from qutip_qip.device import OptPulseProcessor, LinearSpinChain, SCQubits; File ""/Users/goerz/Documents/qutipqip/qutip-qip/src/qutip_qip/device/__init__.py"", line 4, in <module>; from .processor import Processor, Model; File ""/Users/goerz/Documents/qutipqip/qutip-qip/src/qutip_qip/device/processor.py"", line 9, in <module>; import qutip; File ""/Users/goerz/Documents/qutipqip/venv/lib/python3.8/site-packages/qutip/__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""/Users/goerz/Documents/qutipqip/venv/lib/python3.8/site-packages/qutip/utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ```. ### Expected Behaviour. It should run the example :-). ### Your Environment. ```shell; goerz@ophelia(r) main:~/Documents/qutipqip/qutip-qip-paper> ../venv/bin/pip freeze; attrs==21.4.0; cycler==0.11.0; fonttools==4.28.5; iniconfig==1.1.1; joblib==1.1.0; kiwisolver==1.3.2; matplotlib==3.5.1; numpy==1.22.0; packag",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1753:614,install,install,614,https://qutip.org,https://github.com/qutip/qutip/issues/1753,2,['install'],['install']
Deployability,"### Bug Description. When two QobjEvo objects are added up that have time dependence with the same parameter names but with different values in the arg dictionary, the combined QObjEvo merges the dictionaries, resulting in the wrong time dependence for some of the Hamiltonians. ### Code to Reproduce the Bug. ```shell; a = destroy(3); n = a.dag()*a. w0 = 1; g = 0.1; H0 = w0*n; es0 = H0.eigenstates(); def Hdr(wdr) :; return QobjEvo([[a + a.dag(),'2*cos(w*t)']], args=dict({'w':wdr})). SE0 = sesolve(H0+g*Hdr(w0),es0[1][0],np.linspace(0,np.pi/2/g,101)); SE1 = sesolve(H0+g*Hdr(w0)+0*Hdr(2*w0),es0[1][0],np.linspace(0,np.pi/2/g,101)); [plt.plot(expect(n,s.states)) for s in [SE0, SE1]]; SE0.states[-1].overlap(SE1.states[-1]); ```. ### Code Output. _No response_. ### Expected Behaviour. SE0 and SE 1 should have been the same. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.4.1; Cython Version: 0.29.26; Matplotlib Version: 3.2.2; Python Version: 3.7.12; Number of CPUs: 1; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.7/dist-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1765:1050,Install,Installed,1050,https://qutip.org,https://github.com/qutip/qutip/issues/1765,2,['Install'],"['Installation', 'Installed']"
Deployability,"### Bug Description. When using qutip integrators with `mcsolve`, parallelizing fails with both `parallel` and `loky` map methods when one doesn't use improved sampling. Also, a side note - memory consumption seems to have gotten worse in setting up the mcsolve problem in v5.0 as compared to v4.7. I can provide some benchmarks later, but I am unable to go to similar truncation sizes as I could before. ### Code to Reproduce the Bug. ```py; import qutip as qp; import numpy as np; N = 2; a1 = qp.tensor(qp.destroy(N), qp.qeye(N)); a2 = qp.tensor(qp.qeye(N), qp.destroy(N)); H = -1j * 0.4 * ((a1.dag()*a1.dag() - a1 * a1) + (a2.dag()*a2.dag() - a2*a2)); psi01 = qp.tensor(qp.states.basis(N, 0), qp.states.basis(N, 0)); tlist = np.linspace(0.0, 30.0, 501); c_ops = [np.sqrt(5)*a1*a1, np.sqrt(5)*a2*a2]; result = qp.mcsolve(H, psi01, tlist, c_ops, ntraj=500, options=dict(map=""parallel"", method=""vern9"", improved_sampling=False)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; _RemoteTraceback Traceback (most recent call last); _RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/lib/python3.10/multiprocessing/queues.py"", line 245, in _feed; obj = _ForkingPickler.dumps(obj); File ""/lib/python3.10/multiprocessing/reduction.py"", line 51, in dumps; cls(buf, protocol).dump(obj); File ""<stringsource>"", line 2, in View.MemoryView._memoryviewslice.__reduce_cython__; TypeError: no default __reduce__ due to non-trivial __cinit__; ```. ### Expected Behaviour. Parallelizing should work independently of the sampling method. . ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.9.0; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450:38,integrat,integrators,38,https://qutip.org,https://github.com/qutip/qutip/issues/2450,1,['integrat'],['integrators']
Deployability,"### Bug Description. `Bloch` raises an error when used in jupyter notebook. This seems to be due to the output of `print_figure` in `_repr_svg_` not being bytecode (maybe it was in the past?) it then defaults to `_repr_png_` and renders correctly the bloch sphere. ### Code to Reproduce the Bug. ```shell; import qutip; qutip.Bloch(); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~/.virtualenvs/qutip4/lib/python3.10/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. ~/git_repo/qutip/qutip4/qutip/bloch.py in _repr_svg_(self); 293 from IPython.core.pylabtools import print_figure; 294 self.render(); --> 295 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 296 plt.close(self.fig); 297 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```. ### Expected Behaviour. The Bloch sphere should be plotted correctly without any Error. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.22.3; Scipy Version: 1.8.1; Cython Version: None; Matplotlib Version: 3.5.2; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1912:1357,Install,Installed,1357,https://qutip.org,https://github.com/qutip/qutip/issues/1912,1,['Install'],['Installed']
Deployability,"### Bug Description. `UnboundLocalError: local variable 'rho_t' referenced before assignment` is thrown when `mesolve` is used with callable `e_ops`. Note, it seems to be fixed on the 5.x branch (using `pip install --pre qutip`). ### Code to Reproduce the Bug. ```shell; from qutip import * ; import numpy as np. s_00 = tensor(basis(2,0), basis(2,0)); P_00 = s_00 * s_00.dag(); e_ops = [ ; lambda t, state: (state.ptrace([0,1]) * P_00).tr() ; ]. tlist = np.linspace(0, 2*np.pi, 50); res = mesolve(tensor(identity(2), identity(2), identity(3)),; tensor(P_00, thermal_dm(3,0.1)), ; tlist, ; [],; e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-1-49ed87444849> in <module>; 9 ; 10 tlist = np.linspace(0, 2*np.pi, 50); ---> 11 res = mesolve(tensor(identity(2), identity(2), identity(3)),; 12 tensor(P_00, thermal_dm(3,0.1)),; 13 tlist,. 1 frames; /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 242 func(0., v, *ode_args) + v; 243 ; --> 244 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops). /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 517 for m in range(n_expt_op):; 518 if not isinstance(e_ops[m], Qobj) and callable(e_ops[m]):; --> 519 output.expect[m][t_idx] = e_ops[m](t, rho_t); 520 continue; 521 output.expect[m][t_idx] = expect_rho_vec(e_ops_data[m], r.y,. UnboundLocalError: local variable 'rho_t' referenced before assignment; ```. ### Expected Behaviour. no error. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.22.4; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.5.3; Python Version: 3.9.16; Number of CPUs: 2; BLAS Info: OPENBLAS;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2118:207,install,install,207,https://qutip.org,https://github.com/qutip/qutip/issues/2118,1,['install'],['install']
Deployability,"### Bug Description. `isherm` in `Qobj` and function `check_herm() `will not generate the correct result. ### Code to Reproduce the Bug. ```shell; from qutip import Qobj. a = Qobj([[0, 0, 1], [1, 0, 0], [0, 1, 0]]); a.check_herm(); a.isherm; ```. ### Code Output. ```shell; True; ```. ### Expected Behaviour. False. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.9.16; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2211:537,Install,Installed,537,https://qutip.org,https://github.com/qutip/qutip/issues/2211,1,['Install'],['Installed']
Deployability,"### Bug Description. qutip has functions to detect the available of BLAS libraries. For instance on my system (debian unstable), `python3 -c ""import qutip; qutip.about()""` reports; ```; BLAS Info: OPENBLAS; ```. However, I think the logic behind BLAS Info is not robust. For context, debian builds packages against generic libblas.so (libblas-dev package). The various optimised BLAS implementations are supposed to be binary compatible, such that the system administrator can install the preferred implementation for use at runtime (the identity of libblas.so is controlled using debian's alternatives mechanism). On my system, OpenBLAS is indeed installed. But taking a closer look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:477,install,install,477,https://qutip.org,https://github.com/qutip/qutip/issues/2053,4,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,"### Bug Description. qutip keeps configuration (e.g. for openmp) in a config file handled in configrc.py. The default location is in the home dir, with; https://github.com/qutip/qutip/blob/d2f1ed57d13bd35055d72f3f6b3418c962491bd9/qutip/configrc.py#L36; setting the dir to `~/.qutip` and; https://github.com/qutip/qutip/blob/d2f1ed57d13bd35055d72f3f6b3418c962491bd9/qutip/configrc.py#L38; setting the config file to `~/.qutip/qutiprc`. This forces Linux distributions to do more work when building in a chroot. For instance Debian build chroots set the ""home"" directory to `/nonexistent`, and then building docs fails with; ```; PermissionError: [Errno 13] Permission denied: '/nonexistent'; ```; since it can't create `/nonexistent/.qutip`. In practice that's not a great problem since when building docs for the package, we can set `HOME=$BUILDDIR` to place the config location in the build dir (which is writable) instead of `/nonexistent`. However there is a standardized location for config files which might be worth considering instead. The freedesktop.org specification at https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html identifies locations for config and data files. Config files can be located under (one of) `$XDG_CONFIG_DIRS` for system configuration, or under `$XDG_CONFIG_HOME` for user configuration. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. In python XDG is accessible from the xdg package (in debian, the python3-xdg package). So the XDG equivalent of ; ```; qutip_conf_dir = os.path.join(os.path.expanduser(""~""), '.qutip'); ```; could be done with; ```; from xdg import XDG_CONFIG_HOME; ...; qutip_conf_dir = os.path.join(XDG_CONFIG_HOME, '.qutip'); ```; A more sophisticated method could be set up to also check XDG_CONFIG_DIRS instead (XDG_CONFIG_HOME is the first entry in the list defined in XDG_CONFIG_DIRS). ### Your Environment. ```shell; QuTiP Version: 4.7.0; ```. ### Additional Conte",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1876:33,configurat,configuration,33,https://qutip.org,https://github.com/qutip/qutip/issues/1876,1,['configurat'],['configuration']
Deployability,"### Bug Description. read_qasm() worked until very recently. Now it returns:. ```; ---------------------------------------------------------------------------; NameError Traceback (most recent call last); [<ipython-input-62-59d98246d544>](https://localhost:8080/#) in <cell line: 1>(); ----> 1 circuit_qutip = read_qasm(qasm, strmode=True); 2 zero_state = tensor(basis(2, 0), basis(2, 0)); 3 result = circuit_qutip.run(state=zero_state); 4 state = result; 5 print(state). NameError: name 'read_qasm' is not defined; ```. ### Code to Reproduce the Bug. ```shell; circuit = read_qasm(qasm_string, strmode=True); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; NameError Traceback (most recent call last); <ipython-input-62-59d98246d544> in <cell line: 1>(); ----> 1 circuit_qutip = read_qasm(qasm, strmode=True); 2 zero_state = tensor(basis(2, 0), basis(2, 0)); 3 result = circuit_qutip.run(state=zero_state); 4 state = result; 5 print(state). NameError: name 'read_qasm' is not defined; ```. ### Expected Behaviour. This worked properly until very recently. No code changed on my end. ### Your Environment. ```shell; QuTiP Version: 4.7.5; Numpy Version: 1.23.5; Scipy Version: 1.11.4; Cython Version: 3.0.8; Matplotlib Version: 3.7.1; Python Version: 3.10.12; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334:1367,Install,Installed,1367,https://qutip.org,https://github.com/qutip/qutip/issues/2334,1,['Install'],['Installed']
Deployability,"### Bug Description. setup.py manages a `--with-openmp` build option to provide openmp support. pyproject.toml was introduced in QuTiP 4.6.0 to allow PEP517 build without (directly) using setup.py. But the `--with-openmp` option that previously worked with a setup.py build does not seem to be compatible with a PEP517 build. The problem shows up in the Debian build of the qutip package. Debian provides its own tool (pybuild from the dh-python package) to manage the build of python packages. PEP517 is relatively new, so by default pybuild uses setup.py if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:653,install,installed,653,https://qutip.org,https://github.com/qutip/qutip/issues/1875,2,['install'],['installed']
Deployability,"### Describe the Issue!. As briefly described in #1910 there are some functions in `Bloch` class that are not fully tested. Besides, there are a few other changes that may benefit `Bloch`. I would like to list them here and provide more information on the change for discussion. . The main changes I propose to do in the Bloch class are: ; - [x] clean-up of the code in `add_points` and `plot_points` methods (addressed in #1909).; - [x] Clean import statements.; - [x] clean-up of the code in `add_vectors` and `plot_vectors` methods (#1917).; - [ ] clean-up of the code in `add_state` method. ; - [ ] make the plot functions (`plot_points, plot_vectors, ...`) private as they are meant to be used only in the render method (the do not even have a docstring). This _breaks backwards compatibility_ but I imagine it will be ok as I do not expect anyone using these methods.; - [x] Test `_repr_svg_` and `_repr_png_` (there seems to be a bug in `_repr_svg_` #1912).; - [ ] We have `render` and `make_sphere` methods that do _exactly_ the same (`make_sphere` calls `render`) I would vote to deprecate `make_sphere` for QuTiP 5.0.; - [ ] Make the interface consistent among the methods `add_state`, `add_vector`, `add_points`, `add_arc` and `add_line`. (This would address #1105 ); - [ ] Address #1106.; - [ ] Update documentation AND notebooks with changes. These task are planned to be addressed each in a separate PR. I plan to finish these tasks myself but feel free to tackle any of these (or add a new one) if no PR is open and you mention it in this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1913:1307,Update,Update,1307,https://qutip.org,https://github.com/qutip/qutip/issues/1913,1,['Update'],['Update']
Deployability,"### Describe the Issue!. Calculation of 2-time correlation is understandably slow. There are two things that can improve `_correlation_3op_dm(solver, state0, tlist, taulist, A, B, C)` a bit. 1. In my experience `tlist` is usually chosen so that at `tlist[-1]` all correlations are already gone. Calculate them up to `tlist[-1] + taulist[-1]` is often superfluous. An option can be passed to make last `tau` dependent on `t` to make each subsequent simulation shorter. An example could be something like this (but with more thinking about edge cases):; ```python; _correlation_3op_dm(solver, state0, tlist, taulist, A, B, C, shorten_tau=False):; ...; for t_idx, rho in enumerate(rho_t):; t = tlist[t_idx]; if shorten_tau:; last_tau_index = sum(np.array(taulist) <= t); this_step_taulist = taulist[last_tau_index:]; else:; this_step_taulist = taulist + t; corr_mat[t_idx, :] = solver.run(; C(t) @ rho @ A(t),; this_step_taulist,; e_ops=B; ).expect[0]; progress_bar.update(); progress_bar.finished(); ```; 2. Even better way would be to make simulations along `taulist` in parallel. It seems that it's possible to have different runs of mcsolve at the same time, so here the same framework could be used.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2315:963,update,update,963,https://qutip.org,https://github.com/qutip/qutip/issues/2315,1,['update'],['update']
Deployability,"### Describe the Issue!. Cython is getting close to release a new major release. It bring 2 changes that we must asses to be compatible with it.; - The order of the `nogil` and `except` keyword. In cython 0.29, both `nogil except ...` and `except ... nogil` are supported. From 3.0, a warning is raised when the first is used. We used the first order almost everywhere. We need to reorder them all... ; - Cython 0.29 do not use reverse operations such as `__rmatmul__` and `__rmul__`, but call `__mul__` with reverse order (`__mul__(other, self)`). With cython 3, `__rmul__` is used and `self` is always the first input. This breaks some of our tests. The failing tests are related to `Coefficient.__mul__` in qutip/core/cy/coefficient.pyx, `Data.__mul__` in qutip/core/data/base.pyx and `_ConstantElement.__matmul__` and `_EvoElement.__matmul__` both in qutip/core/cy/_element.pyx. While never used, the `__mul__` methods in the last file would break if called in the wrong order.; - One of the automated tests in github action should run using cython 3. ps. This could be solved in 2 PR, an easy one for the first bullet point and another one more involved for the 2 others.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2117:52,release,release,52,https://qutip.org,https://github.com/qutip/qutip/issues/2117,2,['release'],['release']
Deployability,"### Describe the Issue!. Dysolve algorithm proposed in paper [""Fast and differentiable simulation of driven quantum systems""](https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.3.033266) by Ross Shillito et.al, ; behaves much faster than standard numerical integrators in time-evolve driven quantum systems. ; Is there any plan to implement it in the qutip, or it has been implemented in qutip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2394:275,integrat,integrators,275,https://qutip.org,https://github.com/qutip/qutip/issues/2394,1,['integrat'],['integrators']
Deployability,"### Describe the Issue!. Hello,. I'm not able to see the latex expression of a QObj inside Visual Studio Code. For example, if I run in one cell. ```python; >> qutip.destroy(2). Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = False\begin{equation*}\left(\begin{array}{{11}c}0.0 & 1.0\0.0 & 0.0\\end{array}\right)\end{equation}; ```. while I'm able to correctly show it in web Jupyter Lab. Here, there are my system properties. ```; QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: [/home/alberto/anaconda3/envs/physics/lib/python3.9/site-packages/qutip](); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809:647,Install,Installed,647,https://qutip.org,https://github.com/qutip/qutip/issues/1809,2,['Install'],"['Installation', 'Installed']"
Deployability,"### Describe the Issue!. Hi all, I am a brand new qutip user, and am having some issues after running the qutip install. I installed with. `pip3 install qutip`. After running. `import qutip.testing; qutip.testing.run()`. I get the following lengthy output. Does anyone have an idea of what is going on?. >>> import qutip.testing; >>> qutip.testing.run(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.9.6; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================== test session starts ===================================================================; platform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.2.0 -- /Applications/Xcode.app/Contents/Developer/usr/bin/python3; cachedir: .pytest_cache; rootdir: /Users/guglielmo2; collected 2814 items / 30 errors / 51 deselected / 2763 selected . ================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:112,install,install,112,https://qutip.org,https://github.com/qutip/qutip/issues/2180,3,['install'],"['install', 'installed']"
Deployability,"### Describe the Issue!. I have installed Qutip version 5.0.2, and I've been trying to use the parfor method (see https://qutip.org/docs/4.0.2/guide/guide-parfor.html). When calling it, I get the error: ""NameError: name 'parfor' is not defined"".; I'm not trying to do anything exotic yet, I was just testing the rudimentary example from the webpage:. from qutip import *; def func1(x): ; return x, x**2, x**3; a, b, c = parfor(func1, range(10)); print(a)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2551:32,install,installed,32,https://qutip.org,https://github.com/qutip/qutip/issues/2551,1,['install'],['installed']
Deployability,"### Describe the Issue!. I install Qutip from source by following the instruction.; After installing the build requirements, I ran the following command,. qutip.testing.run() ; At around 14%, the test halt, giving no report. i tried few times but same results.; (anaconda3/lib/site-packages/qutip/tests/test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls PASSED [ 14%]; anaconda3/lib/site-packages/qutip/tests/test_correlation.py::TestTimeDependence::test_correlation_c_ops_td[me] PASSED [ 14%]; anaconda3/lib/site-packages/qutip/tests/test_correlation.py::TestTimeDependence::test_correlation_c_ops_td[mc] ). ![pyTest](https://github.com/qutip/qutip/assets/125566140/725c9acc-d29d-4bbd-a337-e4979a844151); ![pyth](https://github.com/qutip/qutip/assets/125566140/cb641e22-f5c9-4afa-bf98-e990d144bd48)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2245:27,install,install,27,https://qutip.org,https://github.com/qutip/qutip/issues/2245,2,['install'],"['install', 'installing']"
Deployability,"### Describe the Issue!. The `filelock` package is required for cython-compiling coefficient functions. However, QuTiP currently does not warn if `filelock` is missing, and the dependency does not seem to be documented anywhere. Instead, QuTiP silently defaults to a `StrFunctionCoefficient`, i.e., to using `eval`. This behavior comes from here:. https://github.com/qutip/qutip/blob/7892453dd3ae03ce8ac17caffc0457df200a69ec/qutip/core/coefficient.py#L256-L264. The default value of `use_cython` is therefore set to `False` if `filelock` is missing. The result is the following:. ```python; $ git clone git@github.com:qutip/qutip.git .; $ conda create -n qutip-tmp python cython numpy scipy setuptools packaging wheel pytest ipython matplotlib; $ conda activate qutip-tmp; $ python setup.py install; $ cd ~; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	type(coeff); 	> qutip.core.cy.coefficient.StrFunctionCoefficient; 	exit(); ```. Since cython is installed and there was no warning or error, I think it would be reasonable for the user to assume that the coefficient would be compiled, but it is not. Only when `use_cython` is explicitly enabled, we get an error:. ```shell; In [5]: coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)); ---------------------------------------------------------------------------; NameError Traceback (most recent call last); Cell In[5], line 1; ----> 1 coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)). File ~/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/core/coefficient.py:170, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 168 for type_ in coefficient_builders:; 169 if isinstance(base, type_):; --> 170 return coefficient_builders[type_](base, **kwargs); 172 if callable(base):; 173 op = FunctionCoefficient(base, args.copy(), ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:791,install,install,791,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['install'],['install']
Deployability,"### Describe the Issue!. The document of QuTiP said installing from the source code by `python setup.py install --with-openmp` doesn't support for macOS. But this is actually easy to deal with. . Step 1. Install GNU GCC and OpenMP from home-brew; ``; $ brew install gcc libomp; ``. Step 2. Export environment CC CXX instead of `/usr/bin/gcc` by `/usr/local/bin/gcc-13`; ``; $ export CC=`which gcc-13`; $ export CXX=`which g++-13`; ``. Now it is worked in my environment that `python setup.py build --with-openmp` generates a OpenMP edition QuTiP. And as for INTEL MKL supporting info, the judgment for macOS is different, you can find the way [here](https://mruss.dev/2020/04/23/numpy-mkl/) to get this information rather than `hasattr(config,'mkl_info')`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2274:52,install,installing,52,https://qutip.org,https://github.com/qutip/qutip/issues/2274,4,"['Install', 'install']","['Install', 'install', 'installing']"
Deployability,"### Describe the Issue!. We still have matplotlib minimum version requirement at 1.2.1.; We added animations functions, updated the bloch sphere etc. since that version was set and it's probably no longer sufficient.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2414:120,update,updated,120,https://qutip.org,https://github.com/qutip/qutip/issues/2414,1,['update'],['updated']
Deployability,### Problem Description. Currently the documentation PDF has to be built locally for each release. ### Proposed Solution. Build the documentation in a GitHub action either for each push or when deploying a release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1858:90,release,release,90,https://qutip.org,https://github.com/qutip/qutip/issues/1858,3,"['deploy', 'release']","['deploying', 'release']"
Deployability,"### Problem Description. Currently the most time consuming part of making releases is managing the change log (#1055 , #1108, #1533). In addition to the time taken, the release manager is often poorly placed to write change log entries for the PRs involved (the PRs might have been merged some time ago, and the release manager might not have been the author). ### Proposed Solution. [Towncrier](https://pypi.org/project/towncrier/) is a Python package used by Python itself and many other libraries to manage the change log. I propose that we configure towncrier and ensure that each PR adds a towncrier entry. This includes:; - [x] Add suitable towncrier configuration to the respository.; - [x] Update the release documentation with instructions for using towncrier to update the change log.; - [x] Update the development documentation to include the requirement to add towncrier entries for each PR.; - [x] Update the GitHub PR template to mention the requirement to add a towncrier entry.; - [x] Add a check to the GitHub action tests workflow that checks that a towncrier entry was added. ### Alternate Solutions. There are a few other tools that do similar things to towncrier, and we could use one of those instead if they are better. I would recommend that we not roll our own solution. The problem is fairly simple, but writing and documenting our own solution and fixing the inevitable bugs is a lot of work. Plus, I would prefer to have a solution that has already made choices that work, rather than us having to make all of those choices ourselves. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1894:74,release,releases,74,https://qutip.org,https://github.com/qutip/qutip/issues/1894,9,"['Update', 'configurat', 'release', 'update']","['Update', 'configuration', 'release', 'releases', 'update']"
Deployability,"### Problem Description. Currently, there is no great support for working with direct product spaces in qutip. For that reason, both the HEOM solver and qutip-qoc contain code manipulating data layer matrices directly. Most commonly, direct product spaces arise because of coupled differential equations. For example, we might have two states $|\psi\rangle$ and $|\psi'\rangle$ satisfying. $$ \partial_t \begin{pmatrix} |\psi\rangle \\\\ |\psi'\rangle \end{pmatrix} = -i \begin{pmatrix} H & 0 \\\\ H' & H \end{pmatrix} \begin{pmatrix} |\psi\rangle \\\\ |\psi'\rangle \end{pmatrix} $$. then the object $( |\psi\rangle, |\psi'\rangle )$ is a direct product. Some applications:; * HEOM is a coupled differential equation for the state $\rho$ of an open system, and a number of auxiliary density operators $\rho_{\mathbf n}$.; * The goat algorithm in qutip-qoc works by integrating coupled Schroedinger equations for two ore more unitary operators.; * In full counting statistics, we can find the first n derivatives of a moment-generating function by solving coupled Lindblad equations for n+1 operators.; * A direct product state could potentially be used instead of a tensor product state in cases where we know that two systems are only coupled classically and there will never be any coherences between them. ### Proposed Solution. I think that we would need the following:; * A way to construct objects such as $( |\psi\rangle, |\psi'\rangle )$ and the matrix in the equation above from their constituents.; * A way to describe the dimensions of these objects.; * A way to extract the constituents from these objects at the end of the calculation.; * The differential equations mentioned in the applications above should be solvable with `sesolve` and/or `mesolve`.; * Note that in the first three applications, we actually have direct products of operator spaces (which might make things complicated?). ### Alternate Solutions. If all the involved Hilbert spaces have the same dimension, then $\mat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384:866,integrat,integrating,866,https://qutip.org,https://github.com/qutip/qutip/issues/2384,1,['integrat'],['integrating']
Deployability,"### Problem Description. From version 5.0, the subpackage `qutip.qip` will be removed and replaced by a separate package `qutip-qip`. To make it easier for others to migrate from 4.7 to 5.0, we can set up `qutip-qip` as an optional plug-in for qutip, so that if `qutip-qip` is installed, the `qutip.qip` name space can be used as before. ### Expected behaviour; - If only `qutip` is installed, importing `qutip.qip` will raise an `ImportError` with instruction for installing `qutip_qip`.; - If `qutip-qip` is installed, using `qutip.qip` will automatically use the `qutip_qip` namespace, with no difference in the user interface.; - Update `setup.cfg` so that `pip install qutip[qip]` will automatically install `qutip_qip`. E.g. the following should work if `qutip`-5.0 and `qutip-qip` are both installed; ```python; # The following should be the same; from qutip.qip.circuit import QubitCircuit; from qutip_qip.circuit import QubitCircuit; ```. ### Proposed Solution. See https://github.com/qutip/qutip/discussions/1500 for ideals on the implementation. **Note: The implementation should be done against the `dev.major` branch of qutip.**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1893:277,install,installed,277,https://qutip.org,https://github.com/qutip/qutip/issues/1893,8,"['Update', 'install']","['Update', 'install', 'installed', 'installing']"
Deployability,"### Problem Description. Now that qutip-qip has moved to another package, gates are not available in the main repo. This is inconvenient for examples such as the control optimization ones, where one would need to install the qutip-qip package just to access say the Hadamard or CNOT for instance. ### Proposed Solution. The easiest solution would be just to copy the `gates.py` file from the QIP package into the main repo. Perhaps might confuse imports in qip? Also, I think that file has func defs that refer to 'controls' that might not make sense in this repo. ### Alternate Solutions. Have a file called `operations.py`. Just have a subset of the gates (operations), the most typical named unitaries - sounds less QIP like and would avoid import confusion. I think also `hadamard_transform` could be shortened to `hadamard`, but also include the original name. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2389:213,install,install,213,https://qutip.org,https://github.com/qutip/qutip/issues/2389,1,['install'],['install']
Deployability,"### Problem Description. String based coefficients with time-dependent Hamiltonians in qutip 4.7 causes compiled files (.so, .o, .cpp files) to be stored into a hidden folder `.pyxbld` in the user's home directory. This is a problem because, when using qutip on an HPC cluster (the cluster uses Red Hat Enterprise Linux 8), I submit multiple qutip simulation jobs to the cluster, each of which generating cached file in my home directory and using up my storage. Qutip is not aware of these files and they are never deleted. The root cause of the problem is in the top level __init__.py, on line 72, `_pyxbuilder.install()`, which calls the install() function in qutip.cy.pyxbuilder, on line 47:. ```; def install():; """"""Install the pyximport interface.""""""; return pyximport.install(setup_args={'include_dirs': [np.get_include()]}); ```; Since the `build_dir` keyword argument is not supplied to `pyximport.install`, the default path is used. ### Proposed Solution. Supply an option in `qutip.settings`, or `qutiprc`, or `qutip.solver.Options` to specify a custom path for the compiled files. This path is then passed to `pyximport.install` as the `build_dir` argument when `__init__.py` is run, upon first import of qutip. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2230:613,install,install,613,https://qutip.org,https://github.com/qutip/qutip/issues/2230,7,"['Install', 'install']","['Install', 'install']"
Deployability,"### Problem Description. There are a few issues with graphic capacities in Qutip. 1. Most are not tested. Only Bloch.py has some tests associated. While testing graphs is not evident, matplotlib has testing functions to compare graphs etc. and just running it to ensure that no errors are raised would be a nice start. Here are some files and their coverage:; - tomography.py 50%; - visualization.py 8%; - distribution.py 23%; - bloch.py 55%; - bloch3d.py 8%. 2. The interface is not uniform. Most functions take 'fig' and 'ax', but `hilton` only takes 'ax' but no 'fig'. Maybe one third of the function in visualization accepts 'title' and half a 'figsize'. The order of these options is also inconsistent, 'fig', 'ax' can be the first parameters or the last... As seen in #1573, some want more control so `matrix_histogram` accepts `options`. I am all for more control, but being available for only one function feels wrong. On the bloch side, there is a mismatch between `add_vectors`, `add_points`, which takes `color` and `alpha` as input, and `add_arc`, `add_line` which takes `**kwargs`. 3. The colorblind mode should works everywhere, but presently only `hilton` support it. ### Proposed Solution. So for v5 release, the interface of all these should be clean and uniform, with proper tests. . ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1910:1216,release,release,1216,https://qutip.org,https://github.com/qutip/qutip/issues/1910,1,['release'],['release']
Deployability,"### Problem Description. Update user guide content of documentation to QuTiP 5, which contains many changes that may not be captured by the latest versions of the documentation, e.g., the content in https://qutip.org/docs/latest/guide/guide.html. . ### Proposed Solution. - Read the documentation files on the QuTiP 5 branch, at https://github.com/qutip/qutip/tree/dev.major; - Build locally the documentation on the branch and make sure it builds; - Read the documentation files and check that they match with qutip-5 branch code, so that the documentation matches the actual existing code, similarly to what happens for QuTiP 4.7, https://qutip.org/docs/latest/guide/guide.html and locally test ; - Make changes where needed. . ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1898:25,Update,Update,25,https://qutip.org,https://github.com/qutip/qutip/issues/1898,1,['Update'],['Update']
Deployability,"### Problem Description. `master` has qutip/qutip/cy/openmp/src/[zspmv_openmp.hpp](https://github.com/qutip/qutip/blob/master/qutip/cy/openmp/src/zspmv_openmp.hpp), for csr @ dense product with openmp, but we did not have the time to add when making the data layer for `dev.major`. In v4, to use openmp, the user needs to compile from source locally with `python setup.py install --with-openmp` and then an option has to be passed to the solver at run time to use it. For v5, it would be great if openMP was part of the Data layer and used without much thought by the user. (No need to pass `Options(use_openmp=True)` to `mesolve`). We would probably keep a flag and threshold as an option in core or settings so we can run tests with and without. We should add support for cython's `prange`. Presently, using it breaks mac's tests. If made available, there are quite a few functions for the data layer that could gain from it. While openmp is available in v4, it was not used much since it can only be used when compiling locally and the options isn't well known. Ideally, it would be packaged in the wheels (for all but Mac?) instead of needing a local installation. However it does not seems easy, [scipy decided against it](https://github.com/scipy/scipy/blob/38261c1141b8aa80bceeef419911fb4f31df5372/doc/source/dev/toolchain.rst#openmp-support), because it does not mix well with [other parallel environments](https://github.com/scipy/scipy/issues/10239#issuecomment-795030817). It may be possible with conda since it has a openmp package. . ### Proposed Solution. Tasks:; - Restore the compilation option for openmp and have `matmul_csr_dense_dense` use `zspmvpy_openmp`.; - Add options in core to control openmp. In `parallel_map`, turn it of when using multiprocessing.; - Add `prange` in a function (`mul_dense`) and ensure that tests passes and wheels build.; - Add `prange` elsewhere where useful. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1904:372,install,install,372,https://qutip.org,https://github.com/qutip/qutip/issues/1904,2,['install'],"['install', 'installation']"
Deployability,"#1347 changed the setup of the tests, but it went unnoticed (sorry!) that the Python version wasn't set correctly; we've been silently testing everything against python-latest since then. That wasn't an issue as long as Python 3.8 was the latest, but the release of Python 3.9 (and the fact we haven't rebuilt a binary distribution of QuTiP for 3.9) caused all Linux builds to break. Mac builds were unaffected because they set `$_PYTHON_VERSION` to a string literal. The Linux Python version was not set correctly because it attempted to set it to the definition of `$TRAVIS_PYTHON_VERSION` _as defined during the `env` stage of the Travis build_. Unfortunately, this environment variable isn't defined until after that stage, which caused us to pass an empty constraint on the Python version to conda, resulting in us getting the latest version. This moves this part of the environment setup into the pre-install phase so `TRAVIS_PYTHON_VERSION` is now set, and guards it with a conditional so the mac builds can still neatly override the standard setup. **Changelog**; Fix Python version setting in CI tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1381:255,release,release,255,https://qutip.org,https://github.com/qutip/qutip/pull/1381,2,"['install', 'release']","['install', 'release']"
Deployability,"#1496 updated the Bloch sphere to prevent distortion in matplotlib 3.3+. This appears to have inadvertantly pinned the effective matplotlib dependency to `matplotlib>=3.3`, because it uses `Axes3D.set_box_aspect` which didn't exist before then. We might need to add a small version-dependent switch beacuse matplotlib 3.3 is under a year old, so it's a very recent version to be depending on. I would like to keep the optional matplotlib dependency to at least `matplotlib>=3` if at all possible, since I don't think we're using much cutting-edge stuff. Note we now have `packaging` as a run-time dependency, which will make any version comparisons much easier (e.g. ; ```python; from packaging.version import parse as parse_version. if parse_version(matplotlib.__version__) > parse_version('3.3'):; ...; else:; ...; ```. @BoxiLi: do you have thoughts?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1502:6,update,updated,6,https://qutip.org,https://github.com/qutip/qutip/issues/1502,1,['update'],['updated']
Deployability,"#5924</a> from radarhere/cves</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://gith",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:14779,release,release,14779,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['release'],['release']
Deployability,"'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017: includes a comment on buggy behaviour caused by `__array__`. Note that the solution given there (`np.asarray(..., dtype=object)`) will no longer work with numpy 1.20.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:1390,release,release,1390,https://qutip.org,https://github.com/qutip/qutip/issues/1433,2,"['patch', 'release']","['patch', 'release']"
Deployability,"(<a href=""https://redirect.github.com/pallets/jinja/issues/1918"">#1918</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895""><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>; <li><a href=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3600,update,updates,3600,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['update'],['updates']
Deployability,"* import + sesolve. * psi in args part 1. * psi in args part 2. * state in args part3. * dyn args test1. * dyn args test2. * args debug. * ready for tests. * s/mesolve pass tests. * mcsolve rework. * mcsolve rework part 2. * mcsolve cython cleaning. * mcsolve working. * mcsolve cython as object. * mcsolve pass all test. * automated test almost passing. * pass all tests. * docs and cleaning. * diag ok. * clean propagator. * clean propagator 2. * clean floquet. * clean floquet 2. * mcsolve serial_map bugfix. * object args bug correction. * dense cQobjEvo bugfix. * spliting PR. * merge priority correction. * merge priority correction. * mcsolve based on qoevo. * better rouchon citation. * final state avg?. * faster postprocessing. * final_state average flag. * final state runs as property. * Some patches for qip.Gate (#995). * remove repetitive assignment. * move description to class def. Doc won't show it if it's under __init__. * check invalid input for targets and control. * all must be integer. * NotImplemented is not callable, use NotImplementedError. * add whitespace. * refactor. * format correction",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1043:805,patch,patches,805,https://qutip.org,https://github.com/qutip/qutip/pull/1043,1,['patch'],['patches']
Deployability,**Changelog**; Added packaging to the requirements in `installation.rst`.; Update requirements.txt with the information in setup.cfg.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715:55,install,installation,55,https://qutip.org,https://github.com/qutip/qutip/pull/1715,2,"['Update', 'install']","['Update', 'installation']"
Deployability,**Changelog**; Update readme adding Boxi Li to authors and badges of NumFOUCS and Unitary Fund.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1228:15,Update,Update,15,https://qutip.org,https://github.com/qutip/qutip/pull/1228,1,['Update'],['Update']
Deployability,"**Checklist**. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Fixes the rendering problem, upon going over matplotlib docs and discussions around [similar issues](https://github.com/matplotlib/matplotlib/issues/13728), I discovered that zsort was not set in when calling the ax.bar3d , I have set the sort to max which fixes the bars being rendered incorrectly. @BoxiLi The PR is up for review , it should fix the rendering issue . **Related issues or PRs**; fixes #2400",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442:435,update,update,435,https://qutip.org,https://github.com/qutip/qutip/pull/2442,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; This PR is supposed to mark on-going additions to a new class `qutip.qip.circuit.Measurement` as well as an elementary `qutip.qip.circuit.Measurement.QubitCircuit.run()` function to exactly simulate quantum circuits. The major functions added right now are:. - `Measurement.density_measurement(self, measurement_ops, state)` : This adds generalized state/density matrix measurements given a list of observables. Still needs addition of checks to see if the list of observables is valid ; - `Measurement.measurement_comp_basis(self, state)` : This adds measurement statistics for specific qubit measurements in the computational basis and also returns the collapsed states (without changing the dimensions). ; - `QubitCircuit.run(self, state, cbits)`: Given a ket input to the circuit, applies gates and measurements from the circuit and returns the resultant ket. . Right now, the measurement module is very bare-bones and splintered between the previous code ; from @hodgestar and the new code added by me. The eigenstate based meas",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274:496,update,update,496,https://qutip.org,https://github.com/qutip/qutip/pull/1274,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2139:219,update,update,219,https://qutip.org,https://github.com/qutip/qutip/pull/2139,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; This PR is supposed to address the OpenQASM output functionality. It introduces the class `QasmOutput` and the primary functions:. - `print_qasm(qc)` : prints the QASM output of `QubitCircuit`.; - `save_qasm(qc, file_loc)` : saves the QASM output of `QubitCircuit` to a file. Two [OpenQASM](https://github.com/Qiskit/openqasm) features are missing from this PR that might need to be addressed in a future PR, the possibility of exporting gates with classical control and exporting QuTiP's user-defined gates. . **Related issues or PRs**; This is a companion to PR #1291 and includes the code from it. **Changelog**; Added QASM output functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1318:615,update,update,615,https://qutip.org,https://github.com/qutip/qutip/pull/1318,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1438:615,update,update,615,https://qutip.org,https://github.com/qutip/qutip/pull/1438,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1270:620,update,update,620,https://qutip.org,https://github.com/qutip/qutip/pull/1270,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [] Please add tests to cover your changes if applicable.; - [ x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; Updating tests in the metrics,superop_reps and tensor modules to pytests. **Changelog**; - Updating unittests to pytests; - Rechecking environment dependent expected failure cases",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487:616,update,update,616,https://qutip.org,https://github.com/qutip/qutip/pull/1487,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [X] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [X] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [X] Please add tests to cover your changes if applicable.; - [X] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [X] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). **Description**; Added an argument `bc_type` to allow users to specify boundary conditions for interpolating `QobjEvo`. **Related issues or PRs**; [fix #2098 ](https://github.com/qutip/qutip/issues/2098)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2114:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2114,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; This PR presents a prototype for emitting Quantum Intermediate Representation (QIR) modules from `qutip.qip.QubitCircuit` objects, making it easier to interoperate QuTiP with other quantum software tools and platforms. The prototype in this PR uses the [PyQIR](https://qir-alliance.github.io/pyqir/) library for Python to handle QIR generation, isolating QIR generation functionality as an optional dependency. . **Changelog**. - Support for emitting QIR from circuit objects.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1781:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/1781,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Moved HTMLProgressBar from `qutip/ipynbtools.py` to `qutip/ui/progressbar.py`. **Related issues or PRs**; Fix #2108",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2112:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2112,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**. I am adding an efficient module for calculating the wave function that uses a recurrence for it in Cython, and I am applying one of its functions in the update method of the HarmonicOscillatorWaveFunction class in the distribution.py module. This module is an adaptation of one of the modules from the package I developed for efficient wave function calculation: Fast Wave. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2553:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2553,2,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Do the same change for plot_wigner_sphere and matrix_histogram as #2170 did.; #2170 ; 1. The arguments in plot_wigner_sphere is now similar to those of other functions. Of course, it change its color as users set qutip.settings.colorblind_safe=True.; ```; def plot_wigner_sphere(wigner, reflections=False, *, cmap=None,; colorbar=True, fig=None, ax=None):; ```; 2. matrix_histogram and matrix_histogram_complex combined into one function. The new matrix_histogram can change bar_style and color_style. Here is an example.; <img width=""894"" alt=""matrix_histogram"" src=""https://github.com/qutip/qutip/assets/72233550/a4c94bba-06f8-474f-b6cf-88e0385d7d5a"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2193,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). **Description**; Add tests for ui.progressbar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2127,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). **Description**; sphereplot and plot_spin_distribution accepts a matrix of values, theta and phi, but the order of them is different and not intuitive to users.; ```; def sphereplot(theta, phi, values, ...; ```; ```; def plot_spin_distribution(P, THETA, PHI, ...; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2219:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2219,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Add a new store_density_matricies option to Result. **Related issues or PRs**; Fixes #2299",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2303:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2303,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Add the sparse COO format. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2314:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2314,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Deleted _solve and use _data.solve. **Related issues or PRs**; #2109",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2120:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2120,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; This is part of the Google Summer of Code project. My contribution consists of two parts.; One part is organizing arguments of functions in visualization.py. This change helps users to set arguments without referencing documents frequently.; For example, hinton does not have figsize, but other functions such as plot_energy_level do. Also, the order of the arguments varies from function to function, so the user had to see the official document.; I addressed these issues by making the following modifications; First, arguments that many functions should have in common, such as fig and ax, are now keyword arguments.; Second, the order of the argume",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2170:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2170,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; pytest for #2170",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2192:611,update,update,611,https://qutip.org,https://github.com/qutip/qutip/pull/2192,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; There are three major parts to this PR (more or less interlinked): . - Adds `Simulator` class to abstract away circuit run functionality. This enables future contributors to add to exact simulation (and potentially other ways of simulation) easily. It also has a `step` function which allows to go over the circuit step-by-step which could enable interesting visualisations.; - Adds `Result` class as a wrapper around results obtained from circuit simulations. ; - Adds a more efficient mode to `gate_sequence_product` function which allows for faster pre-computation of unitaries. **Changelog**; Added `Simulator`, `Result` class ; Added new mode to `gate_sequence_product`, `QubitCircuit.propagators`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1331:615,update,update,615,https://qutip.org,https://github.com/qutip/qutip/pull/1331,1,['update'],['update']
Deployability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Fix one warning of #1389 , the others have already been fixed in the main branch. **Related issues or PRs**; Fixes #1389 . **Changelog**; Fix one installation warning.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1390:615,update,update,615,https://qutip.org,https://github.com/qutip/qutip/pull/1390,2,"['install', 'update']","['installation', 'update']"
Deployability,"**Checklist**; This rewrite the stochastic solver to use the class interface. - `smesolve`, `ssesolve` have been rewritten to match other solver with matching class interface `SMESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:758,integrat,integration,758,https://qutip.org,https://github.com/qutip/qutip/pull/2131,2,['integrat'],['integration']
Deployability,"**Describe the bug**. When I try to make a tensor profuct of a large number of qubits, I get a segmentation fault. **To Reproduce**. ```python; from qutip import *; tensor([basis(2,0) for i in range(31)]); ```. The terminal out put is; ```; Fatal Python error: Segmentation fault. Current thread 0x000000011b71be00 (most recent call first):; File ""/Users/evanphilip/opt/miniforge3/lib/python3.8/site-packages/qutip/tensor.py"", line 116 in tensor; File ""<stdin>"", line 1 in <module>; zsh: segmentation fault python3 -q -X faulthandler; ```. **Your Environment**. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: None; Matplotlib Version: 3.3.2; Python Version: 3.8.6; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/evanphilip/opt/miniforge3/lib/python3.8/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406:1221,Install,Installed,1221,https://qutip.org,https://github.com/qutip/qutip/issues/1406,2,['Install'],"['Installation', 'Installed']"
Deployability,"**Describe the bug**; ""fmmesolve"" gives wrong expectation values with ""e_ops"". **To Reproduce**. Use tutorial in https://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html. ```python. output = fmmesolve(H, psi0, tlist, [sigmax()], [num(2)], [noise_spectrum], T, args); p_ex = output.expect[0]. ```. This p_ex is different from what computed above. **Expected behavior**; The expectation values are the same as the one without ""e_ops"" and manually computed. **Your Environment**; QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.15; Matplotlib Version: 3.3.4; Python Version: 3.7.6; Number of CPUs: 52; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/user1/anaconda3/envs/env1/lib/python3.7/site-packages/qutip-4.5.0-py3.7-linux-x86_64.egg/qutip. **Additional context**; Suspected the issues comes from floquet.py:829 , where the transformation is ""False""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1653:678,Install,Installed,678,https://qutip.org,https://github.com/qutip/qutip/issues/1653,2,['Install'],"['Installation', 'Installed']"
Deployability,"**Describe the bug**; As described in the title, ``file_`` in ``_file_list().add(file_)`` already has the extension ``'.pyx'`` (this is done by _import_str() in qobjevo_codegen.py), it is unnecessary to add yet another suffix. **To Reproduce**; This can be verified by add a line printing out ``file_`` in ``_file_list().clean()`` ; then run any test that can trigger it (for example ``test_QobjEvo_with_state()``) and observe the output. **Expected behavior**; Should only have a single ``'.pyx'`` in ``file_``. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.0.dev0+8e181cc4; Numpy Version: 1.19.1; Scipy Version: 1.5.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.1; Python Version: 3.8.5; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\berry\PycharmProjects\qutip\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. **Additional context**; I discovered this when dealing with some test failures in windows, it seems that there are multiple problems in ``qobjevo.py`` (actually, what I really wanted to figure out in the first place was that some compiled modules would be deleted before being imported). Anyway, I will update this issue whenever I make any progress.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1354:1216,Install,Installed,1216,https://qutip.org,https://github.com/qutip/qutip/issues/1354,3,"['Install', 'update']","['Installation', 'Installed', 'update']"
Deployability,"**Describe the bug**; AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1' . **To Reproduce**; Install the latest version of scipy 1.5.0, install qutip, and run the tests. The following fail due to the AttributeError specified above:; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[True-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[True-10-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-10-rand_bra]; - test_brtools.py::test_zheevr; I stopped running the tests after these errors appear, and I don't know if it causes other tests to fail as well.; The test_zheevr shows another error, but it fixes when using a previous version of scipy (e.g. 1.3). . The terminal out put is; ```; > fn = getattr(_sparsetools, self.format + '_matmat_pass1'); E AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1'. /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip/fastsparse.py:197: AttributeError; ```. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.0; Scipy Version: 1.3.0 (error fixed); Scipy Version: 1.5.0 (error present); Cython Version: 0.29.20; Matplotlib Version: 3.2.2; Python Version: 3.6.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: Fal",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304:129,Install,Install,129,https://qutip.org,https://github.com/qutip/qutip/issues/1304,2,"['Install', 'install']","['Install', 'install']"
Deployability,"**Describe the bug**; Currently qutip is requiring scipy > 1.12 and in the CI checks scipy <1.5 is being checked. There was a bug in scipy 1.4 See [.Stackoverflow error](https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an) , [bug report ](scipy/scipy#8205) that has been fixed by this [solution](scipy/scipy#11304) in the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoper",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:394,release,release,394,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['release'],['release']
Deployability,"**Describe the bug**; Hello, I test my qutip installation state using ``qutip.testing.run()`` after importing ``import qutip.testing``. And the result showed that ``AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)``. **To Reproduce**. ```python; import qutip.testing; qutip.testing.run(); ```; The terminal out put is; ```; AttributeError Traceback (most recent call last); <ipython-input-26-02a40f5288b4> in <module>; ----> 1 import qutip.testing; 2 qutip.testing.run(). D:\useful tools\anaconda\lib\site-packages\qutip\__init__.py in <module>; 42 try:; 43 __IPYTHON__; ---> 44 qutip.settings.ipython = True; 45 except NameError:; 46 qutip.settings.ipython = False. AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import). ```. **Expected behavior**; Normally test the installation of qutip. **Your Environment**. ```QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.20.1; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: D:\useful tools\anaconda\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1650:45,install,installation,45,https://qutip.org,https://github.com/qutip/qutip/issues/1650,2,['install'],['installation']
Deployability,"**Describe the bug**; Hi world, I can't install qutip on my computer with this features:; System information; Python	3.7.6 (default, Jan 8 2020, 13:42:34) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	Darwin Version 10.15.7; CPUs	8; Memory (Gb)	16.0; Wed Dec 09 15:00:15 2020 EST. Any help?. Building wheels for collected packages: qutip; Building wheel for qutip (PEP 517) ... error; ERROR: Command errored out with exit status 1:; command: /Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py build_wheel /var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/tmpxkq1pgdg; cwd: /private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-install-ehditow9/qutip; Complete output (299 lines):; running bdist_wheel; running build; running build_py; creating build; creating build/lib.macosx-10.9-x86_64-3.7; creating build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/cite.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/permute.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/three_level_atom.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/version.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/bloch.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/rhs_generate.py -> build/lib.macosx-10.9-x86_64-3.7/qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:40,install,install,40,https://qutip.org,https://github.com/qutip/qutip/issues/1404,2,['install'],"['install', 'install-']"
Deployability,"**Describe the bug**; I am simply trying to run the code published on the qutip documentation website for the [https://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html](url). I copied the code under the section: Pre-computing the Floquet modes for one period,; and that worked fine, but then at the end of the section they point towards the function 'fsesolve' which would be the 'all-in-one' version of the code given previously, however it doesnt work and i get the error:. ```; ~\anaconda3\lib\site-packages\qutip\sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 297 if ode_args:; 298 r.set_f_params(*ode_args); --> 299 r.set_initial_value(initial_vector, tlist[0]); 300 ; 301 e_ops_data = []. KeyError: 0; ```. The code:. ```; import numpy as np; from matplotlib import pyplot; import qutip. delta = 0.0 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 0.25 * 2*np.pi; omega = 1.0 * 2*np.pi; T = 2*np.pi / omega; tlist = np.linspace(0.0, 10 * T, 101); psi0 = qutip.thermal_dm(2,0). H0 = - delta/2.0 * qutip.sigmax() - eps0/2.0 * qutip.sigmaz(); H1 = A/2.0 * qutip.sigmax(); args = {'w': omega}; H = [H0, [H1, lambda t, args: np.sin(args['w'] * t)]]. output = qutip.fsesolve(H, psi0, tlist, [], args); p_ex = output.expect[0]; ```. **Your Environment**; QuTiP Version: 4.5.3; Numpy Version: 1.18.5; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.2.2; Python Version: 3.8.3; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64). **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1663:1491,Install,Installed,1491,https://qutip.org,https://github.com/qutip/qutip/issues/1663,1,['Install'],['Installed']
Deployability,"**Describe the bug**; I think there is a mistake in the Hamiltonian's part inside the `liouvillian` function:; https://github.com/qutip/qutip/blob/c62a8e99f503b864933cd6bb31e259d47770b95a/qutip/superoperator.py#L122-L127. However, according to [Linblad equation](https://en.wikipedia.org/wiki/Lindbladian#Definition) it should be:; ```python; data = -1j * zcsr_kron(H.data, spI); data += 1j * zcsr_kron(spI, Ht); ```. **To Reproduce**; Comparison of qutip vs. numpy:. ```python; import numpy as np; import qutip. n_H = 2 # the dimension of the Hilbert space. # qutip's liouvillian; H_qutip = qutip.sigmaz(); L_qutip = qutip.liouvillian(H_qutip, []). # numpy's liouvillian; H_np = np.diag([1, -1]); L_np = -1j * (np.kron(H_np, np.eye(n_H)) - np.kron(np.eye(n_H), H_np.T)). # comparison; print('1. H_qutip == H_np:', np.array_equal(H_qutip, H_np)); print('2. L_qutip == L_np:', np.array_equal(L_qutip, L_np)); print('3. L_qutip == -L_np:', np.array_equal(L_qutip, -L_np)); ```; The terminal out put is; ```; 1. H_qutip == H_np: True; 2. L_qutip == L_np: False; 3. L_qutip == -L_np: True; ```; (The construction of the Liouvillian with numpy is based on eq. (A6) in:; https://arxiv.org/pdf/1909.11619.pdf#page=16). **Expected behavior**; 1 is True as expected.; 2 should be True and 3 should be False, but the opposite happens because of the sign mistake. **Your Environment**; ```; QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.15; Matplotlib Version: 3.1.3; Python Version: 3.7.6; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); ```; (Probably irrelevant.). **Additional context**; Please let me know that you approve the change in the description and I will make a quick PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1285:1570,Install,Installed,1570,https://qutip.org,https://github.com/qutip/qutip/issues/1285,1,['Install'],['Installed']
Deployability,"**Describe the bug**; In qobj.py, on line 1699 in the image below, ket was a QObj when using numpy v1.19 but in numpy v1.20 it's a numpy array. **To Reproduce**; ![image](https://user-images.githubusercontent.com/16978018/108094096-4d73a680-7033-11eb-9448-46199697e14c.png). **Expected behavior**; In line 1699 in the image above, ket should not be a numpy array but rather stay a QObj. **Your Environment**; QuTiP Version: 4.5.2; Numpy Version: 1.20.1; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.7.8; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64). **Additional context**; Working with @marcolincs on this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1442:597,Install,Installed,597,https://qutip.org,https://github.com/qutip/qutip/issues/1442,1,['Install'],['Installed']
Deployability,"**Describe the bug**; Installing the qutip on ubuntu 20.04.1 shows the following warnings:; ```; $ sudo apt install python3-qutip ; …; Entpacken von python3-qutip (4.4.1-6build1) ...; python3-qutip (4.4.1-6build1) wird eingerichtet ...; /usr/lib/python3/dist-packages/qutip/_mkl/spmv.py:53: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; if x.ndim is 1:; /usr/lib/python3/dist-packages/qutip/qobjevo.py:776: SyntaxWarning: ""is no; t"" with a literal. Did you mean ""!=""?; if self.compiled and self.compiled.split()[2] is not ""cte"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1045: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; elif op1.type is ""array"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1070: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; elif self.ops[_set[0]].type is ""string"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1079: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; elif self.ops[_set[0]].type is ""array"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1534: SyntaxWarning: ""is n; ot"" with a literal. Did you mean ""!=""?; for key in self.__dict__ if key is not ""compiled_qobjevo""}; ```. **To Reproduce**; Install qutip on ubuntu 20.04.1 via `sudo apt install python3-qutip`. **Expected behavior**; No warnings during the installation of qutip. **Your Environment**; ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.4.1; Numpy Version: 1.17.4; Scipy Version: 1.4.1; Cython Version: 0.29.14; Matplotlib Version: 3.1.2; Python Version: 3.8.5; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1389:22,Install,Installing,22,https://qutip.org,https://github.com/qutip/qutip/issues/1389,2,"['Install', 'install']","['Installing', 'install']"
Deployability,"**Describe the bug**; It looks like the pypi package doesn't have cython as a dependency?. **To Reproduce**; Do a ""pip3 install cython"" on a fresh ubuntu 20.04 install (i had already installed numpy and scipy). ** This is what happens when I try it**; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Downloading qutip-4.5.0.tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:120,install,install,120,https://qutip.org,https://github.com/qutip/qutip/issues/1246,9,['install'],"['install', 'install-', 'installed']"
Deployability,"**Describe the bug**; Qutip can't handle number smaller than about 1e-15 in its operators?. **To Reproduce**; Please provide a minimal working example. For instance:. ```; import qutip. hbar = 1.05e-34. #this one makes sense; print(qutip.sigmaz()); #Result; # Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; # Qobj data =; # [[ 1. 0.]; # [ 0. -1.]]. # this is zero?; Sz = hbar*qutip.sigmaz(); print(Sz); # Result; # Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; # Qobj data =; # [[ 0. 0.]; # [ 0. 0.]]. # looks like it really is zero; print(1e34*Sz); # Result; # Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; # Qobj data =; # [[ 0. 0.]; # [ 0. 0.]]; ```; **Expected behavior**; I would have thought that you could store any double precision number in qutip array. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.18.3; Scipy Version: 1.4.1; Cython Version: 0.29.17; Matplotlib Version: 3.2.1; Python Version: 3.8.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/jevon/.local/lib/python3.8/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1247:1541,Install,Installed,1541,https://qutip.org,https://github.com/qutip/qutip/issues/1247,2,['Install'],"['Installation', 'Installed']"
Deployability,"**Describe the bug**; Running Qutip on an **M1** MacBook Pro on import I can get the following error:. File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/__init__.py"", line 144, in <module>; info = qutip.hardware_info.hardware_info(); File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/hardware_info.py"", line 123, in hardware_info; out = _mac_hardware_info(); File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/hardware_info.py"", line 48, in _mac_hardware_info; results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); IndexError: list index out of range. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.4; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.3; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip. **Additional context**; I was able to ""fix"" the issue by simply commenting out lines 48 and 49 in Qutip's hardware_info.py.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395:663,update,update,663,https://qutip.org,https://github.com/qutip/qutip/issues/1395,3,"['Install', 'update']","['Installation', 'Installed', 'update']"
Deployability,"**Describe the bug**; When plotting the Bloch sphere with qutip and matplotlib >=3.3.0 the sphere appears deformed in z-direction.; This is a result of a change in matplotlib Axes3D: https://matplotlib.org/3.3.0/users/whats_new.html#d-axes-improvements. **To Reproduce**. ```python; import qutip; b = qutip.Bloch(); b.show(); ```. **Work around**; 1) downgrade to matplotlib 3.2.2; or; 2) set aspect ratio manually; ```python; import qutip; b = qutip.Bloch(); b.show(); if hasattr(b.axes, 'set_box_aspect'):; b.axes.set_box_aspect([1,1,1]); ```. **Environment**; QuTiP Version: 4.5.2; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.9; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1385:753,Install,Installed,753,https://qutip.org,https://github.com/qutip/qutip/issues/1385,1,['Install'],['Installed']
Deployability,**Describe the bug**; `test_fileio` is failing on Windows because this use of `tempfile.NamedTemporaryFile` doesn't work on windows. The temporary files cannot be opened twice on Windows according to https://docs.python.org/3.8/library/tempfile.html#tempfile.NamedTemporaryFile.; https://github.com/qutip/qutip/blob/9e82f5b81955952833e25bb3eeff3fa24d36556b/qutip/tests/conftest.py#L194-L197; followed by; https://github.com/qutip/qutip/blob/9e82f5b81955952833e25bb3eeff3fa24d36556b/qutip/fileio.py#L70; results in a permission error. **To Reproduce**; Run `test_fileio.py` on windows. **Your Environment**; QuTiP Version: 4.6.0.dev0+6ad7f2b8; Numpy Version: 1.18.2; Scipy Version: 1.4.1; Cython Version: 0.29.20; Matplotlib Version: 3.2.1; Python Version: 3.7.2; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64). Do you have any idea on a replacement @jakelishman ?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1311:811,Install,Installed,811,https://qutip.org,https://github.com/qutip/qutip/issues/1311,1,['Install'],['Installed']
Deployability,**Describe the bug**; calling ptrace(0) should simply return the object. Instead it fails with an error. **To Reproduce**; import qutip as qp; qp.sigmax().ptrace(0). **Expected behavior**; expect it to return the existing object. **Your Environment**; QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.16; Matplotlib Version: 3.2.1; Python Version: 3.7.6; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Lior Ella\scoop\apps\miniconda3\4.5.12\envs\tfenv\lib\site-packages\qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1239:440,Install,Installed,440,https://qutip.org,https://github.com/qutip/qutip/issues/1239,2,['Install'],"['Installation', 'Installed']"
Deployability,"**Describe the bug**; qutip fails to import with the following error:; ```; Python 3.9.6 (default, Jun 28 2021, 19:24:41) ; [Clang 12.0.5 (clang-1205.0.22.9)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/homebrew/lib/python3.9/site-packages/qutip/__init__.py"", line 115, in <module>; info = qutip.hardware_info.hardware_info(); File ""/opt/homebrew/lib/python3.9/site-packages/qutip/hardware_info.py"", line 133, in hardware_info; out = _mac_hardware_info(); File ""/opt/homebrew/lib/python3.9/site-packages/qutip/hardware_info.py"", line 50, in _mac_hardware_info; results.update({'cpu_freq': int(float(os.popen('sysctl hw.cpufrequency'); IndexError: list index out of range; ```. This appears to be caused by Apple having removed hw.cpufrequency from the list of sysctl's (see below). **To Reproduce**; Installed qutip using homebrew/pip3 (after using the workaround of specifying OPENBLAS properly before building scipy etc... so that part is all sorted). Then python3 and import qutip. ```python; from qutip import identity; print(identity(2)); ```; The terminal output (aftrer I hacked up a workaround for this issue):; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[1. 0.]; [0. 1.]]; ```. **Expected behavior**; qutip successfully initializes :-). **Your Environment**; Please use `qutip.about()` to get the information about your environment and paste it here.; ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead deve",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606:710,update,update,710,https://qutip.org,https://github.com/qutip/qutip/issues/1606,2,"['Install', 'update']","['Installed', 'update']"
Deployability,"**Describe the bug**; qutip.random_objects.rand_ket does not work as intended; rand_ket(N=0, density=1, dims=None, seed=None) should be to figure out what N is, given dims is assigned when N is set to be 0 or None. **To Reproduce**. ```python; from qutip.random_objects import rand_ket; rand_ket(None, dims=[[2],[1]]); ```; The terminal out put is; ```; ---------------------------------------------------------------------------; NameError Traceback (most recent call last); <ipython-input-61-18d662b8b1db> in <module>; ----> 1 rand_ket(None, dims=[[2],[1]]). ~\Anaconda3\envs\quspin_env\lib\site-packages\qutip\random_objects.py in rand_ket(N, density, dims, seed); 326 _check_dims(dims, N, 1); 327 elif dims:; --> 328 N = prod(dims[0]); 329 _check_dims(dims, N, 1); 330 else:. NameError: name 'prod' is not defined; ```. **Expected behavior**; rand_ket should give you the same answer as rand_ket(2, dims=[[2],[1]]). **Your Environment**; QuTiP Version: 4.6.0; Numpy Version: 1.19.2; Scipy Version: 1.6.2; Cython Version: None; Matplotlib Version: 3.3.4; Python Version: 3.7.10; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1504:1130,Install,Installed,1130,https://qutip.org,https://github.com/qutip/qutip/issues/1504,1,['Install'],['Installed']
Deployability,"**Describe the issue**; Hi there! Actually, I'm new to QuTiP, so I'm not sure about this, but here's my issue. . I tried to install it from source by following the [documentation](https://qutip.org/docs/latest/installation.html#direct-setuptools-source-builds). ; After installing the build requirements, I ran the following command,; ```; qutip.testing.run() ; ```. At around 61%, the testPropHOSteadyPar test failed and gave the following report. ```; ______________________________________________________ testPropHOSteadyPar ______________________________________________________ ; multiprocessing.pool.RemoteTraceback:; """"""; Traceback (most recent call last):; File ""C:\ ... \Python\Python39\lib\multiprocessing\pool.py"", line 125, in worker; result = (True, func(*args, **kwds)); File ""c:\ ... \qutip\qutip\propagator.py"", line 279, in _parallel_mesolve ; output = mesolve(; File ""c:\ ... \qutip\qutip\mesolve.py"", line 237, in mesolve; func, ode_args = ss.makefunc(ss, rho0, args, e_ops, options); File ""c:\ ... \qutip\qutip\mesolve.py"", line 323, in _qobjevo_set; _test_liouvillian_dimensions(H_td.cte.dims, rho0.dims); File ""c:\ ... \qutip\qutip\mesolve.py"", line 304, in _test_liouvillian_dimensions; raise ValueError("""".join([; ValueError: incompatible Liouvillian and state dimensions: [[[2], [2]], [[2], [2]]] and [[5], [5]]. The above exception was the direct cause of the following exception:. def testPropHOSteadyPar():; ""Propagator: steady state parallel""; a = destroy(5); H = a.dag()*a; c_op_list = []; kappa = 0.1; n_th = 2; rate = kappa * (1 + n_th); c_op_list.append(np.sqrt(rate) * a); rate = kappa * n_th; c_op_list.append(np.sqrt(rate) * a.dag()); > U = propagator(H,2*np.pi,c_op_list, parallel=True). qutip\qutip\tests\test_propagator.py:86:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; qutip\qutip\propagator.py:195: in propagator; output = parallel_map(_parallel_mesolve, range(N * N),;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1711:124,install,install,124,https://qutip.org,https://github.com/qutip/qutip/issues/1711,3,['install'],"['install', 'installation', 'installing']"
Deployability,"**Description**. - Add the `reset` function to `qutip.settings` that is described in the documentation but was never implemented. ; - Add `save`, `load` to `qutip.settings`, allowing to save in alternate files.; - The list of configuration that can be saved in qutiprc is generated when loading the module.; - Ungraded the `configrc` functionalities to allow other filenames and support more than a few hard coded `qutip.settings`'s keys.; - Reading `qutiprc` will raise warning instead of errors when unknown keys. So if we remove keys in v5, old file will not cause crashes when importing qutip for the few that use qutiprc. . **Changelog**; Add `reset` to `qutip.settings`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1289:226,configurat,configuration,226,https://qutip.org,https://github.com/qutip/qutip/pull/1289,1,['configurat'],['configuration']
Deployability,"**Description**. - Allow imports of `qutip.qip` seamlessly as imports of `qutip_qip`; - Test the import behaviour when `qutip_qip` is installed and when not. **Related issues or PRs**; Incorporates the ideas in the discussion of #1500.; Fixes #1893. **Todos and questions**; - [ ] ~~Have `qutip-qip` be an optional dependency~~ (will be left for a future PR); - [ ] ~~Add installation of `qutip-qip` to the CI workflow~~. I have a draft of these changes locally, but they fail due to a dependency conflict: `qutip_qip` currently requires `qutip<5 and >=4.6 ` while these changes are being implemented in `v5.0.0.dev`, ie `>5`. This will cause the unit test where `qutip_qip` is installed to be skipped. Any ideas on how to get around this?. **Edit**: Uses a stub for the `qutip_qip` package in the units tests instead, which removes the need of having `qutip-qip` installed. **Changelog**. Allow imports of `qutip.qip` seamlessly as imports of `qutip_qip`.; Have `qutip-qip` be an optional dependency.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920:134,install,installed,134,https://qutip.org,https://github.com/qutip/qutip/pull/1920,4,['install'],"['installation', 'installed']"
Deployability,"**Description**. - Fixed some errors in the transcription of the husimi Q and Wigner W functions for spins into code.; - Ensure Q and W functions are normalized over (theta, phi).; - Add tests for correctness and normalization of spin Q function.; - Add tests for normalization and real-ness of spin W function. Correctness is established by comparing the overlap of two states and the overlap of their Wigner functions.; - Spin Q function tests take ~11s to complete, spin Wigner tests take ~10s to complete on my laptop. **To do**; - [x] Decide if the `spin_wigner` function should return only real values be default (as is currently done for the `spin_q_function`).; - [x] Find a simple test for correctness of the spin W function.; - [x] Decide whether to integrate the W function normalization in `_rho_kq` rather than at the top level. We divide all terms by `(2*j + 1)` only to end up multiplying it back out at the end which is a waste of time (`_rho_kq` is called `d**2` times, `d=2*j+1`) . The benefit of leaving it as-is is that it reads like most definitions in literature.; - [x] Update docstring for spin Q function.; - [x] Decide if normalization factor for Wigner and spin Q function should be included (Davis et al. suggest the normalization factor is only introduced during integration: Eq 14 https://arxiv.org/abs/2008.10167). **Related issues or PRs**; This issue was raised in another PR #1195 which didn't resolve this issue as intended. The original issue this fixes was #1128. **Changelog**; Fixed error for calculation of Husimi `spin_q_function` and `spin_wigner`.; Added tests to `tests/test_wigner.py` for these functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632:760,integrat,integrate,760,https://qutip.org,https://github.com/qutip/qutip/pull/1632,3,"['Update', 'integrat']","['Update', 'integrate', 'integration']"
Deployability,**Description**. @ajgpitch noticed that search is not working on our ReadTheDocs site. Some digging revealed that this was broken in sphinx-rtd-theme before 1.2.1 (https://github.com/readthedocs/sphinx_rtd_theme/pull/1448/). This PR updates the documentation builds to use version 1.2.1. We'll need to merge this change to all release branches for search to work correctly on those builds. **Related issues or PRs**; - https://github.com/readthedocs/sphinx_rtd_theme/pull/1448/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2375:233,update,updates,233,https://qutip.org,https://github.com/qutip/qutip/pull/2375,2,"['release', 'update']","['release', 'updates']"
Deployability,**Description**. Add a short note about the availability of v5.0.0a1 on PyPI with link to the changelog in both the README and the installation instruction from the documentation.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2080:131,install,installation,131,https://qutip.org,https://github.com/qutip/qutip/pull/2080,1,['install'],['installation']
Deployability,"**Description**. Currently QuTiP's build requirements specify `numpy>=1.16.6<1.20` but this was really a guess at the correct numpy to build with and importantly, is the wrong guess for Python 3.10 which is only supported by numpy 1.20 and later. Instead we now depend on the `oldest-supported-numpy` package, which is maintained by the numpy and SciPy folk and should always provide the correct version of numpy to build with on a given platform. A previous version of this PR #1735 attempted to simultaneously add support for Python 3.10, but that turned out to be tricky because conda did not yet provide a pre-compiled SciPy for Python 3.10. This PR should allow QuTiP to be built locally for Python 3.10, but does not yet add official Python 3.10 builds. - [x] Remove the restriction to `numpy<1.20` in `setup.cfg` (numpy >= 1.20 is required by Python 3.10); - [x] Update the build process to explicitly build with the lowest supported numpy; - [x] While we're here, update to a more recent version of ciwheelbuild. . **Related issues or PRs**; * Fixes #1732; * Fixes #1720; * Fixes #1740; * We also need to update our conda-forge feedstock -- https://github.com/conda-forge/qutip-feedstock/pull/72; * Alternative very similar implementation from @henryiii in #1738 (thank you!); * Previous attempt in #1735 (that . **Changelog**; * Updated the build process to support building on Python 3.10 by removing the build requirement for `numpy < 1.20` and replacing it with a requirement on `oldest-supported-numpy`.; * Update the version of cibuildwheel used to build wheels to 2.3.0.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1747:870,Update,Update,870,https://qutip.org,https://github.com/qutip/qutip/pull/1747,5,"['Update', 'update']","['Update', 'Updated', 'update']"
Deployability,"**Description**. Edited the user guide documentation for Stochastic solvers. Text, equations, and example updated. **Related issues or PRs**; Related to issue #1706. **Changelog**. - Improved explanation of stochastic equation solvers.; - Added links for notebooks with examples for stochastic solvers.; - Added links to API documentation for smesolve, ssesolve, general_stochastic.; - New example highlighting the differences between result.expect and result.measurement.; - Added reference to Quantum Measurement and Control, Wiseman & Milburn (2009).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1743:106,update,updated,106,https://qutip.org,https://github.com/qutip/qutip/pull/1743,1,['update'],['updated']
Deployability,"**Description**. In the recently released numpy 1.22.0 the `__config__` attribute for the; published wheels (at least on the linux platforms I'm using) have; removed the `blas_opt_info` attribute and are instead publishing; identical information in the `blas_ilp64_opt_info` attribute. Running; qutip with the latest numpy release on these platforms was causing an; attribute error when `_blas_info()` is called as; `numpy.__config__.blas_opt_info` doesn't exist in the installed numpy.; This commit fixes this by first checking if the new name exists and; using that to get the blas opt info, and then trying the name available; in previous releases. This should maintain compatibility with older; numpy releases but fix the issue when running with 1.22.0. **Changelog**. Fix compatibility with numpy configuration in numpy's 1.22.0 release",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752:33,release,released,33,https://qutip.org,https://github.com/qutip/qutip/pull/1752,7,"['configurat', 'install', 'release']","['configuration', 'installed', 'release', 'released', 'releases']"
Deployability,"**Description**. Merge master at after #1847 into `dev.major`. **Notes**. - qip's changes are not kept, this part is still the same state as it was before the merge. Any improvement that were added to master should instead be pushed to qutip/qutip-qip.; - The tests now consider warning as error, this cause other tests to fail, but they run fine without this. ; - Documentation is still at master's state.; - When needed, change from fastsparse to data layer where made as minimally as possible: steadystate, steadystate_floquet, floquet, krylovsolve, etc. use rough shims. **Todo**. - [x] Add back .coveragerc; - [x] Turn off warnings-are-errors flag in tests; - [x] Fix steadystate tests (@AGaliciaMartinez); - [x] Merge in #1837 from master (adding transparency options to points and vectors on the Bloch sphere).; - [x] Fix [qutip/core/cy/openmp/src/zspmv_openmp.cpp](https://github.com/qutip/qutip/pull/1850/files#diff-df17c9d6ec3977033ce197f9a782cd99c0573131ab691cc8fbeeb4b3f0a5c943). **Todo (post PR merge)**. - [x] HEOM: Files where pulled, but any issue was dealt by commenting the code. All related tests are skipped. (@hodgestar); - [x] HEOM: Documentation plots were commented out -- check all docs thoroughly. (@hodgestar); - [x] Steadystate: Test fails, there seems to be ~3 bugs that I could not fix in time.; - [x] Update documentation to build on QuTiP 5 (@hodgestar); - [ ] Thoroughly check Bloch and Bloch3d. (@hodgestar); - [x] Remove _pyxbuilder.py (@ericgig); - [x] Remove legacy bloch_redfield solver (@ericgig); - [x] Fix test warnings and turn warnings-are-errors back on; - [x] Fix doc warnings and turn warnings-are-errors back on; - [x] QIP: Remove qip and qip docs. (@BoxiLi); - [x] Get to the bottom of the Windows PermissionErrors when compiling string coefficients",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850:1332,Update,Update,1332,https://qutip.org,https://github.com/qutip/qutip/pull/1850,1,['Update'],['Update']
Deployability,**Description**. Prepare the 4.6.1 release. **Related issues or PRs**. * PR #1498 (fixed a bug in old Scipy/MKL eigh combinations) - https://github.com/qutip/qutip/pull/1498; * PR #1501 (fixed some errors in QIP gate definitions) - https://github.com/qutip/qutip/pull/1501; * PR #1505 (fixed some documentation build errors) - https://github.com/qutip/qutip/pull/1505; * PR #1506 (fixed some test warnings) - https://github.com/qutip/qutip/pull/1506; * PR #1510 (added the [full] pip install target) - https://github.com/qutip/qutip/pull/1510; * PR #1511 (updated the README) - https://github.com/qutip/qutip/pull/1511; * PR #1513 (graft qutip-doc into qutip) - https://github.com/qutip/qutip/pull/1513; * PR #1541 (fix sdist release) https://github.com/qutip/qutip/pull/1541; * PR #1542 (add Simon as author) https://github.com/qutip/qutip/pull/1542. **Changelog**. Version 4.6.1.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1543:35,release,release,35,https://qutip.org,https://github.com/qutip/qutip/pull/1543,4,"['install', 'release', 'update']","['install', 'release', 'updated']"
Deployability,"**Description**. Python 3.6 tests fail to build cvxopt, there was a new version released last week.; This simply run these tests without it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2215:80,release,released,80,https://qutip.org,https://github.com/qutip/qutip/pull/2215,1,['release'],['released']
Deployability,"**Description**. The aim of this project is to enhance the capabilities of qutip's HEOM implementation by introducing a set of tools that offer the option to simulate arbitrary spectral densities or correlation functions. . To achieve this the main idea is to fit our wanted spectral density by a set of underdamped Drude-Lorentz spectral densities or correlation functions. The idea is that the user will supply his desired spectral density or correlation function and the tools will automatically do the fit and construct the corresponding HEOM bath. Guesses ffor the fit and the number of terms will be decided automatically if the user does not specify them. To decided on the number of terms, we will used the normalized root mean square error as a measure of the goodness of the fit. . I also added functions to bosonic bath to quickly obtain the correlation function, power spectrum and spectral density for the existing bosonic baths . **Note**. Those tests fail because mpmath is not in the requirements, it is needed because the scipy version of the Rienmann zeta function doesn't take complex arguments (https://github.com/scipy/scipy/issues/9182). **Related issues or PRs**. The Qutip tutorial notebooks are updated to show this new functionality in (https://github.com/qutip/qutip-tutorials/pull/72)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260:1220,update,updated,1220,https://qutip.org,https://github.com/qutip/qutip/pull/2260,1,['update'],['updated']
Deployability,"**Description**. Update the documentation of guide-random to fit the next interface with `seed`, `dtype`, `distribution` etc.; Remove some method no longer existing for `Qobj` listed in guide-random.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2024:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2024,1,['Update'],['Update']
Deployability,"**Description**. Update the interface of random functions:; - The first input is `dimensions` instead of `N`. It act the same way as the input of `qeye`. (#1838); ```; qutip.rand_herm(N).dims == [[N], [N]]; qutip.rand_herm(dims).dims == [dims, dims]. qutip.rand_super(N).dims == [[[N], [N]], [[N], [N]]]; qutip.rand_super([N, M]).dims == [[[N, M], [N, M]], [[N, M], [N, M]]]; qutip.rand_super([[N], [N]]).dims == [[[N], [N]], [[N], [N]]]; ```; - Random Qobj creation use numpy new random interface. The seed now also accept `numpy.random.SeedSequence` or `numpy.random.Generator`.; - We had `unitary = (1j*rand_herm(N, density)).expm()`, therefore the resulting density for `rand_unitary` (and `rand_dm`) used to be denser than what was entered. I changed the density keyword to correspond to the density of output object. I do this by creating a smaller dense matrices and shuffling them together.; - Random super operator function now accept a `superrep` keyword and return the object in that representation. This work for `super`, `chi` and `choi` representation, but not `kraus` since it's not a `Qobj` and this cause issue with the `dtype` keyword.; - Lastly I merged some similar functions: `rand_unitary_haar` is now included as `rand_unitary(N, distribution=""haar"")`, etc. We had a few functions that returned the same type of object, but with different algorithm. I found this confusing, so I merged them to show they are equivalent. The algorithms having a reference to a paper are used as the defaults. I did not keep the previous functions, but we could keep them with a deprecation warning. Lastly I merged the `test_rand` and `test_random` files. Tests in those files where overlapping. **Related issues or PRs**; fix #1838",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1976:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1976,1,['Update'],['Update']
Deployability,**Description**. Updated steadystate solvers to use ` _dims[0].oper ` (instead of `dims[0]`) to get the dimensions of the returned state from the Liouvillian. This should fix the issue with enr states and steadystate solvers. . Also updated the svd method a little bit to be more consistent with the others. Added a basic test of just the default steadystate solver method. **Related issues or PRs**; fixes #2386,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2387:17,Update,Updated,17,https://qutip.org,https://github.com/qutip/qutip/pull/2387,2,"['Update', 'update']","['Updated', 'updated']"
Deployability,**Description**. We allow scipy version 1.12 (released about 2 months ago) to be used with qutip. Scipy 1.12 is already tested in the build matrix https://github.com/qutip/qutip/blob/master/.github/workflows/tests.yml#L93,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2354:46,release,released,46,https://qutip.org,https://github.com/qutip/qutip/pull/2354,1,['release'],['released']
Deployability,"**Description**. With the inclusion of the new dimensions class, stored in Qobj()'s _dims property, the properties of ENR states are described by ENRspace(). However, when using ENR states with mesolve, Liouvillian, sum() and other functions these _dim properties would be discarded. This PR is a draft attempt to get things working, largely by subbing in _dims instead of dims in various places, and a test to check ENR+mesolve() works for a simple case. All tests pass, but since this is just some bodging to get things working, and messes a little bit with some core functions maybe its also good to check the tutorial notebooks also pass. edit: forgot to mention, this is not exhaustive; e.g., sprepost() has not been updated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2341:722,update,updated,722,https://qutip.org,https://github.com/qutip/qutip/pull/2341,1,['update'],['updated']
Deployability,"**Description**; - Add a test for progress bars.; - Make `start` private. `start` was mostly used right after the initialization. The docstring indicated that it was not needed, but it was for most bars. #2148; - Remove the iteration argument in update.; - Have `HTMLProgressBar` import ipython. **Related issues or PRs**; Fix the issue #2148 for master.; Replace #2127",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2150:246,update,update,246,https://qutip.org,https://github.com/qutip/qutip/pull/2150,1,['update'],['update']
Deployability,"**Description**; - Added a job that update to testpypi when the ""test"" is entered as the branch name.; - Removed the check that stopped release with `dev` in the version number.; - Added a token for testpypi. While it's a draft PR, the action will only print, not run the upload command.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2069:36,update,update,36,https://qutip.org,https://github.com/qutip/qutip/pull/2069,2,"['release', 'update']","['release', 'update']"
Deployability,**Description**; - Improve the documentation and use more understandable variable names.; - Add mcsolve as an optional solver for `Processor`; - The figure plotted by ``Processor.plot_pulse`` now has a better look; ![Figure_1](https://user-images.githubusercontent.com/12125783/80918476-7efdd880-8d65-11ea-8ff1-8e573cd1b3e6.png). **Changelog**; A few updates to the device simulator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1245:351,update,updates,351,https://qutip.org,https://github.com/qutip/qutip/pull/1245,1,['update'],['updates']
Deployability,"**Description**; - In `SeSolver`, `MeSolver`, `McSolver`, only capitalized 2 letters while `BRSolver` and `HEOMSolver` capitalized all abbreviated terms. Changed it use the same capitalization everywhere: `SESolver`, `MESolver`, `MCSolver`. - Update dynamics-master for v5. Only changing a few links is needed. No reference to the class interface is added since it comes before the explanation to time dependent system. - Updated dynamics-monte: Add description for new results, with photocurrent, average and runs version of expect and state. The class interface was quickly introduced in the `Reusing Hamiltonian Data` section.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2042:243,Update,Update,243,https://qutip.org,https://github.com/qutip/qutip/pull/2042,2,['Update'],"['Update', 'Updated']"
Deployability,"**Description**; - Integrate scheduler into the compiler. The compiler can now schedule quantum gates to reduce the duration of the compiled pulses.; - Improve the structure and readability of the `Compiler` class. The compiler class was separated for clarity when the `Processor` class was built upon old code in `qutip.qip`. But it has never been opened as a public API. This PR improves the readability and, most importantly, makes it easier for users to customize the compiler class.; - Add a map `pulse_dict` between the pulse label and the indices in `Processor`, so that customizing class becomes much easier. **Files description**; - `scheduler.py` is moved to compiler folder and split to two files : `instruction.py` and `scheduler.py` for clarity.; - Changes in `gatecompiler.py`, `cavityqedcompiler.py` and `spinchaincompiler.py` are for integrating the scheduler.; - Others are adaptations. **Changelog**; Integrate the scheduler into the compiler",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:19,Integrat,Integrate,19,https://qutip.org,https://github.com/qutip/qutip/pull/1444,3,"['Integrat', 'integrat']","['Integrate', 'integrating']"
Deployability,"**Description**; - The plotting method is made more robust.; - Add `pulse_mode` as a wrapper for spline_kind, for discrete and continuous pulses. They are more friendly names for experimentalists.; - Add `num_qubits` as a replacement for `N`. In QuTiP capital letter are used for operators, like `H` for Hamiltonian. Due to historical reason, `N` is used in `qip` for the number of qubits. We would like to replace it with `num_qubits` in `qutip_qip`. Start from this wrapper and promoting the usage of this in notebooks guide. **Changelog**; Minor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446:127,continuous,continuous,127,https://qutip.org,https://github.com/qutip/qutip/pull/1446,1,['continuous'],['continuous']
Deployability,"**Description**; - Update versions in requirements.txt; - Update the contributor list and add Paul to the developers team.; - I used the list generated by git, thus only authors of merged commit in `master` are present, with their `git.config` name instead of github name.; - Unified changelog title format.; - Before towncrier, the title used `Version X.X.X`, which was changed to `QuTiP X.X.X`. ; - Also the title formating (`+++`) was not caught as a section and did not appear into the table of content.; - Removed the gallery: it was empty zip files.; - Removed the `qutip_tree` image. It was fancy, but useless and was still at 4.6.; - Improved look of the apidoc.; - Ensure each property take a line, not side by side.; - Added type hints aliases (`DimensionsLike`, ...); - Added support for aliases in more files (`import annotations`); - Split long signature into multiple lines, one per parameter. We have some long signature, made longer with type hints, this make them a lot more readable. (The readthedocs style was not great for that, so it was patched in site.ccs.); - Another options would be not to include the hints in the signature of the apidoc, they are already listed in each entry of the parameter section.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2523:19,Update,Update,19,https://qutip.org,https://github.com/qutip/qutip/pull/2523,3,"['Update', 'patch']","['Update', 'patched']"
Deployability,"**Description**; - [x] Remove the restriction to `numpy<1.20` in `setup.cfg` (numpy >= 1.20 is required by Python 3.10); - [x] Update the build process to explicitly build with the lowest supported numpy; - [x] While we're here, update to a more recent version of ciwheelbuild. ; - [x] Build documentation on Python 3.9. **Related issues or PRs**; * Fixes #1732; * Fixes #1720; * Fixes #1740; * We also need to update our conda-forge feedstock -- https://github.com/conda-forge/qutip-feedstock/pull/72; * Alternative implementation from @henryiii in #1738. **Changelog**; * Updated the build process to support building on Python 3.10 by removing the install requirement for `numpy < 1.20`.; * Update the version of cibuildwheel used to build wheels to 2.3.0.; * Update the version of Python used in documentation builds to Python 3.9.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735:127,Update,Update,127,https://qutip.org,https://github.com/qutip/qutip/pull/1735,7,"['Update', 'install', 'update']","['Update', 'Updated', 'install', 'update']"
Deployability,"**Description**; - setuptools is used for cython coefficient compilation, but was not in the requirements.; - The readme still had a note saying that v5 was in alpha, now that it is released, it should be removed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2377:182,release,released,182,https://qutip.org,https://github.com/qutip/qutip/pull/2377,1,['release'],['released']
Deployability,"**Description**; A test was failing since the numpy 2.1 release on windows. ; It seems to be related the the way low level libraries are linked, a lower precision was used on windows... Loosening the ODE tolerance fix the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2516:56,release,release,56,https://qutip.org,https://github.com/qutip/qutip/pull/2516,1,['release'],['release']
Deployability,"**Description**; Add `krylov` method as an `Integrator` for `SeSolver` porting `krylovsolve` to v5 format. The state evolution code was rewritten to use the qutip's data object instead of numpy arrays, but is otherwise the same. Since an integrator can be used without knowing the length of the evolution, some changes where as to when the krylov matrices are recomputed. Instead of choosing the step length so the error of the whole evolution is under `atol`, it is chosen so each steps stays under it and an options is available to compute it only once or at each step. A default `krylov_dim` was needed for the integrator, so I set it the scale as the square root of the size of the system. This is not ideal, but seems to work fine. When using it through `krylovsolve`, `krylov_dim`is a required parameter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:44,Integrat,Integrator,44,https://qutip.org,https://github.com/qutip/qutip/pull/1986,3,"['Integrat', 'integrat']","['Integrator', 'integrator']"
Deployability,"**Description**; Add `pyproject.toml` to specify build-system as standardized in PEP 518. This enables building qutip in an emtpy environment i.e. without `setuptools`, `Cython`, `numpy` and `scipy` being pre-installed. If you have a new minimal debian install you sould be able to install this version with; ```; # apt-get install python3-pip; $ pip3 install $PATH_TO_QUTIP; ```; I only veryfied this in WSL so please test :). **Related issues or PRs**; This solves #1246 and #1174 and makes CI for packages that depend on qutip a lot easier. **Changelog**; Add `pyproject.toml` so qutip can be built without prerequisites",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309:209,install,installed,209,https://qutip.org,https://github.com/qutip/qutip/pull/1309,5,['install'],"['install', 'installed']"
Deployability,"**Description**; Add a `Solver` class for better task distribution in `sesolve` and `mesolve`. `sesolve`, `mesolve`, etc. are presently mostly independent: each create their time dependant system, the function to integrator with scipy's ode solver, loop over the `tlist` and store results. With this PR, the `[se/me]solve` functions will reuse most of the code and be more modular.; We already have a `Result` class to manage e_ops and store result, `Integrator` to solve the ode system. `QobjEvo` can support any time-dependant format we support. This PR introduce a new class `Solver` to join all these. Basis usage looks like:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); result = solver.run(psi, tlist, e_ops=e_ops); result.expect; ```. It can also do step evolution:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); solver.start(psi, t0); psi_t1 = solver.step(t1); psi_t2 = solver.step(t2, args=new_args) # Can be inefficient depending on integrator.; psi_t3 = solver.step(t3, options=new_opt) # Inefficient but supported.; ```; When stepping, the output is always the state as `Qobj`. The solver class promote ket state to density matrices when the rhs is a super-operator. `rhs` support `Qobj` and `QobjEvo`, but not list or function. This PR also add `MeSolver` and `SeSolver` classes, but they are very light:; `MeSolver(H, c_ops)` is equivalent to `Solver(liouvillian(H, c_ops))`. `Solver` store a list of available `Integrator` as a class property. `Solver.avail_integrator` has all integrators available to all solvers. `SeSolver.avail_integrator` has all these with those registered directly to `SeSolver`. This is to allow Integrator for specific system. We could think for the floquet sesolve method to be made into an integrator specific to `SeSolver`. . The interface for `sesolve` and `mesolve` is mostly unchanged, but `progress_bar` keyword is moved to an options and the `_safe_mode` keyword is removed. **Changelog**; Added `Solver` class.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1700:213,integrat,integrator,213,https://qutip.org,https://github.com/qutip/qutip/pull/1700,7,"['Integrat', 'integrat']","['Integrator', 'integrator', 'integrators']"
Deployability,"**Description**; Add data layer functions needed to update `steadystate` to use qutip's data layer. Most of `steadystate`'s methods solve the system `L(rho_ss) = 0` using different solver from numpy, scipy, mkl.; This add the `solve` dispatched function to wraps this operation at the data layer level.; For the `CSR` version, it gives access to all methods available in `scipy.sparse.linalg` and our mkl version.; For the `Dense` version, `solve` and `lstsq` from `numpy.linalg` are made available.; Options supported by numpy / scipy for each function are pass through:; `qutip.data.solve(A, B, method, options)` call `scipy.sparse.linalg.method(A, B, **options)`. Other methods of `steadystate` decompose the Liouvillian with either `eigen` or `svd`.; `svd` was added as a dispatched function, but only with specialization for `Dense`. ; I made a sparse version, but `svds` can't readily compute all singular values and does not respond well to splitting the problem into 2 like it was done for sparse eigensolver. . This PR only include the new dispatched functions, not updated `steadystate` using them or `Qobj` interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002:52,update,update,52,https://qutip.org,https://github.com/qutip/qutip/pull/2002,2,['update'],"['update', 'updated']"
Deployability,"**Description**; Add options to annotate the cython files at installation.; I used it when updating the stochastic solvers, but do not what to include it in that PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2130:61,install,installation,61,https://qutip.org,https://github.com/qutip/qutip/pull/2130,1,['install'],['installation']
Deployability,"**Description**; Add some `skipif` to bypass tests that were failing (segmentation faults) during the local testing of `qutip.testing.run()` that was failing in the zip version of #1241. I am on Mac with generic BLAS and no MKL. ; I have been installing it on a fresh conda environment with; ```; pip install -e .[development]; ```; which I think is better than ; ```; python setup.py develop; ```; and by the way maybe this is something that can be updated in the readme and docs.; ; My qutip.about reads:; ```; QuTiP Version: 4.5.1; Numpy Version: 1.15.4; Scipy Version: 1.4.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.2; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/github/qutip-4.5.1/qutip; ```; This PR could be included in the 4.5.1 version @Ericgig. . **Related issues or PRs**; This PR is related to #1241. **Changelog**; Add `skipif`in `pytest` on Mac with generic BLAS, avoiding segmentation fault during `qutip.testing.run()`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1255:243,install,installing,243,https://qutip.org,https://github.com/qutip/qutip/pull/1255,10,"['Install', 'install', 'update']","['Installation', 'Installed', 'install', 'installing', 'updated']"
Deployability,"**Description**; Add support for the up comming numpy v2:. - Allows qutip to be compiled with numpy 2, and pass tests.; - Test that binaries compiled with numpy 2 are compatible with numpy 1 at runtime. I did not update the requirement yet, it must be installed in `--no-build-isolation`.; When it's officially released, we will need to update `pyproject.toml` and `setup.cfg`, and possibly add test for np2 on windows and mac. Here are the changes that affect us:; - `np.array(.., copy=False)` no longer mean copy only if needed. `copy=None` was added for that.; - `np.trapz` was replaced by `np.trapezoid`. Since there are no overlaps, I opted to use `scipy.integrate.trapezoid` instead.; - `np.array(1, np.int32) * 2**33` will enforce the integer type and overflow.; - `Py_intptr_t` from `python.h` is no longer available through numpy cython interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421:213,update,update,213,https://qutip.org,https://github.com/qutip/qutip/pull/2421,5,"['install', 'integrat', 'release', 'update']","['installed', 'integrate', 'released', 'update']"
Deployability,**Description**; Add the PR from @BoxiLi 's Lattice bug on windows. @jakelishman's #1312 is not be added since the tests upgrade to pytest are not in the release. (yet?). **Related issues or PRs**; apply #1313 to 4.5.2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1314:121,upgrade,upgrade,121,https://qutip.org,https://github.com/qutip/qutip/pull/1314,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"**Description**; Add the capacity of stochastic solver to run from know noise or measurements.; In the lab, the measurement can be obtained, but that measurements is a mix of and expectation values and noise. The stochastic solver can be used to split these components to study the system. The new method for this is `SMESolver.run_from_experiment`. It works similarly to `run` of deterministic solver: it compute a single trajectory. It can take either `dW` or `measurement` as the noise input. (`dW` is the default). `dW` input is available with every integration method, but measurement input is limited to `euler`, `milstein`, `pred_corr`, `platen`. The measurement is `expect(m_ops, state_t) + dW / dt`. For `run_from_experiment` it has no choice but to take `state_t` at the start of the interval, but for the result for `smesovle`, it was taken at the end of the interval. I updated the `store_measurement` options to allow the user the choose where it is taken between `start`, `end` and `middle`. When `start` is used, the `run`'s result's measurement can be feed back to `run_from_experiment` to recompute the same trajectory. (The theory is the integral of the expectation value over the interval.). Another change in this PR is to keep the dW in the wiener and result class. We used to sum them into `W`, but the `dW` are what we use so it just end up being extra calls to `np.cumsum` and `np.diff`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2318:554,integrat,integration,554,https://qutip.org,https://github.com/qutip/qutip/pull/2318,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"**Description**; Add tools for easier install on pip with missing dependancies. **Related issues or PRs**; #1309, #1303, #1316",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1317:38,install,install,38,https://qutip.org,https://github.com/qutip/qutip/pull/1317,1,['install'],['install']
Deployability,"**Description**; Add type hints to function that create `Qobj` (`states.py`, `operators.py`, `gates.py` and `random_object.py`).; I also ran `mypy` on these files and fixed easy issues (`Qobj * Qobj` -> `Qobj @ Qobj`). Some points to look at more closely: ; - We have a lot of `int, list of int, list of list of int, Space` etc. But what is actually accepted can change:; - `basis` can take super operators dimension to create an `operator-ket`, but not if `offset` is used.; Should we raise an error and officially not support these case or arrange it so offset is `supported`?; - Is `SpaceLike` an alias useful for these case or just confusing?; - Array of Qobj output have been changed to list of Qobj.; - I did not update most docstring. `qdiags` dims are `DimensionLike` in type hints, but `list` in the docstring.; - `jmat` return a single `Qobj` or a list of `Qobj`... For typing, it would be nicer if it always returned a single operator. There is also no advantage to computing the operators together.; - `numbers.Number` is not a valid type according to mypy etc. (`Qobj.__mul__` is always raising errors...)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2473:719,update,update,719,https://qutip.org,https://github.com/qutip/qutip/pull/2473,1,['update'],['update']
Deployability,"**Description**; Added a einsum, a numpy.einsum (Evaluates the Einstein summation convention on the operands.) version for Qobj dimensions. **Related issues or PRs**; fixes #2340. ** Question: Not sure if I should update the documentation and how. Just in case I did not modify the docs yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2545:214,update,update,214,https://qutip.org,https://github.com/qutip/qutip/pull/2545,1,['update'],['update']
Deployability,**Description**; Added last minute patch: support for scipy 1.14.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2471:35,patch,patch,35,https://qutip.org,https://github.com/qutip/qutip/pull/2471,1,['patch'],['patch']
Deployability,"**Description**; Added two features in `bloch.py`:; 1. `add_arc`: Adds an arc between two specified points.; 2. `add_line`: Adds a dashed line between two specified points. I have attached a figure where I have used the above two functions.; ![qutip_PR](https://user-images.githubusercontent.com/33507538/137644612-3536c185-3b23-4c7a-b798-07955fbc035d.png). **Related issues or PRs**; #1683 , #1685 . Modified `add_arc` as suggested by @AGaliciaMartinez in PR #1685 . ***Other minor changes***. In `def show(self)`, the plot was not being displayed using the previous lines of code in the function, so I have commented them out and changed it to; ```; if self.fig:; plt.show(self.fig); ```; **To-Do:**; - [ ] Update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). (will do after the changes/additions are reviewed). **Changelog**. 1. Added option for visualizing an arc on a Bloch sphere using `add_arc`.; 2. Added option for visualizing a line segment on a Bloch sphere using `add_line`.; 3. fixed `def show(self)`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690:709,Update,Update,709,https://qutip.org,https://github.com/qutip/qutip/pull/1690,1,['Update'],['Update']
Deployability,"**Description**; Adds a --with-idxint-64 compilation option for building with 64-bit integer indices in the data layer. (Alternative to #1727); Instead of using a compile time environment variable, it contains files for both 32 and 64 int and choose at setup which to use. This way has the advantage that cython can keep track of the version used and recompile all file depending on it when changed.; With compile time environment variable, you can have file compiled with different type of int and only get error when trying to use them. Also 'cimporting' data is simpler since you don't need to define the variable. However, changing all the import location made diff a lot bigger than #1727. `qutip.settings.install['intsize']` will return 32 or 64 depending on the size of int used. **Changelog**; Added a compilation option for compiling with 64-bit integer.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1874:711,install,install,711,https://qutip.org,https://github.com/qutip/qutip/pull/1874,1,['install'],['install']
Deployability,"**Description**; Another cython release, another fix needed... The missing type definition in `dia.diags_` was causing an error during the cythonize step. The other changes are related to the new ""performance hint"".; `nogil` and `except *` do not work well together.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2247:32,release,release,32,https://qutip.org,https://github.com/qutip/qutip/pull/2247,1,['release'],['release']
Deployability,**Description**; Automatic built of the PDF documentation using the GitHub Action for the documentation. **Related issues or PRs**; #1858 . **Changelog**; Update documentation CI,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1883:155,Update,Update,155,https://qutip.org,https://github.com/qutip/qutip/pull/1883,1,['Update'],['Update']
Deployability,"**Description**; Change numpy_backend to contain the numpy implementation in an attribute instead of reading it from the settings each time. This is done by making the options work as a property, when it is set, it update the `np` instance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2509:215,update,update,215,https://qutip.org,https://github.com/qutip/qutip/pull/2509,1,['update'],['update']
Deployability,"**Description**; Changelog for v5 release.; I used the alpha 1 release changelog and merged in changes since then. @pmenczel I added a section for nm_mcsolve, but it's quite short do you want to add anything more?; @hodgestar There was no mention of HEOM improvement in the alpha 1 changelog and only few PRs since then...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2364:34,release,release,34,https://qutip.org,https://github.com/qutip/qutip/pull/2364,2,['release'],['release']
Deployability,"**Description**; Completed the guide page of the settings to include missing entries as well as options included in `settings.core` and `settings.compile`. Added `CoreOptions` and `CompileOptions` to the apidoc and completed the docstrings. I also removed settings that are no longer used anywhere. Lastly I changed the default for `accept_float` compile option. Presently, if an args is a float it cannot be updated to a complex:; ```; >>> a = qutip.coefficient(""A"", args={""A"": 1.}); >>> a(0, A=1j); TypeError: must be real number, not complex; ```; Creating a new coefficient work would be needed. This will certainly cause an issue eventually, but updating it to complex automatically would cause some error with brmesolve spectra: (`w > w0`) as complex cannot be compared. Without types, string are not any better than functions so removing them altogether is not ideal. So I changed it to use complex when no comparison are done and float otherwise. **Related issues or PRs**; fix #1524",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2403:409,update,updated,409,https://qutip.org,https://github.com/qutip/qutip/pull/2403,1,['update'],['updated']
Deployability,"**Description**; Cython 3 has been released, but has a bug that stop us from using it. See #2151.; This fix the version to 0.29.X",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2197:35,release,released,35,https://qutip.org,https://github.com/qutip/qutip/pull/2197,1,['release'],['released']
Deployability,"**Description**; Documenation-Bibliography: Watrous (Theory of Quantum Information) link updated, as the old one is not working anymore. **Changelog**; Documenation-Bibliography: Watrous link (Theory of Quantum Information) updated",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1840:89,update,updated,89,https://qutip.org,https://github.com/qutip/qutip/pull/1840,2,['update'],['updated']
Deployability,"**Description**; Enables use of `mcsolve` and `nm_mcsolve` with mixed initial conditions. Added functions `run_mixed` to the MCSolver and NonMarkovianMCSolver classes. Instead of an initial pure state, these functions take either a density matrix or a list of `(psi_i, p_i)` where `psi_i` are pure initial states and `p_i` are the weights for the average over the initial states. In the latter case, the `ntraj` parameter can be a list specifying the number of trajectories to be used for each initial state. The trajectories automatically obtain correction weights if the fraction of trajectories starting in `psi_i` does not match `p_i`. The functions `mcsolve` and `nm_mcsolve` take either a pure state or a density matrix as the initial state, and call either `run` or `run_mixed` of the solver, respectively. The stochastic solvers also inherit the `run_mixed` functions, but I don't know if there is any use case for that. The most complicated issue here was the combination of a mixed initial state with ""improved sampling"". In this case, run_mixed first runs the no-jump trajectories for all initial states (potentially using `parallel_map` etc) and then runs all other trajectories (using `parallel_map` again, this means that there are two progress bars...). **Todo**; - [X] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [x] Include the changelog in a file named: `doc/changes/<PR number>.<type>`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2437:1429,update,update,1429,https://qutip.org,https://github.com/qutip/qutip/pull/2437,1,['update'],['update']
Deployability,**Description**; Ensure qutip works with cython 3.0.; - `nogil` must come after `except`.; - Set the options `c_api_binop_methods=True` to keep previous behaviour of operators.; - Have one of the test case use cython 3. There is a bug in cython 3.0.0b2 with `overflowcheck` that makes it unable to compile qutip. I works with 3.0.0.b1 and should work with the next release. See cython#5358. **Related issues or PRs**; close #2117,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2151:365,release,release,365,https://qutip.org,https://github.com/qutip/qutip/pull/2151,1,['release'],['release']
Deployability,**Description**; Fail with a more descriptive message when trying to install from source without numpy. Hopefully will not be used with #1309. **Related issues or PRs**; Discussion in dev-core,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1316:69,install,install,69,https://qutip.org,https://github.com/qutip/qutip/pull/1316,1,['install'],['install']
Deployability,"**Description**; First part of rework of solver for dev.major. It allows QobjEvo to support any data types for both itself and the state. And reuse the QobjEvoFunc of #1123 so function can be used in any solver. . - Update `cQobjEvo` to use `Data` object instead of `CSR` matrices only.; - Split `cQobjEvo.matmul` and `expect`: used to accept only `Dense` state, now accept any data type and use Jake's dispatcher. But added `matmul_dense` and `expect_dense` to do operation inplace when possible. Dispatche on `inplace` out parameter is not possible and such operation are mostly limited to `Dense`.; - Compiling string coefficients will now create the build directory in `.qutip` folder instead of current active directory.; - array coefficients addition will add array when possible.; - `scipy.special` had a cython interface... added it to string coefficient's cimport as `cython_special`.; - Added an inplace addition for `Dense` object and inplace multiplication with a scalar for both `Dense` and `CSR`.; - Added `Dense` specialization for `expect`.; - Added `project_dense`.; - Added `QobjEvoFunc`, a wrapper for function `f(t: float, args: dict) -> Qobj` to be used like `QobjEvo` in solver.; - Added the method `to` to QobjEvo to control data types.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1407:216,Update,Update,216,https://qutip.org,https://github.com/qutip/qutip/pull/1407,1,['Update'],['Update']
Deployability,"**Description**; Fix failing `test_stochastic.test_deprecation_warnings`.; It used to catch the first warnings, the one we tested for, and stop.; An update in pytest, made it continue to catch another warning (step rounded to 0) later and failing. This PR fix the test to raise only the desired warnings.; It add a warnings for when the step in rounded to 0 and a test for that warning.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2313:149,update,update,149,https://qutip.org,https://github.com/qutip/qutip/pull/2313,1,['update'],['update']
Deployability,"**Description**; Fix for the numpy 1.25 release.; - `np.product` deprecated, `np.prod` suggested instead.; - Single elements array can no longer be implicitly converted to scalar: `a[i] = bra @ ket` raise a warning since `bra @ ket` is a one elements array.; - Some tests where removed since they expected one element array to be used as a scalar.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2177:40,release,release,40,https://qutip.org,https://github.com/qutip/qutip/pull/2177,1,['release'],['release']
Deployability,**Description**; Fix specifying of wheel to install during post build verification. When we switched to a newer cibuildwheel the tags of the built Linux wheels changed and broke the pre-upload to PyPI verification step. This fixes the name of the wheel to match that of the ones built by the newer cibuildwheel. . **Related issues or PRs**; - None. **Changelog**; Fix specifying of wheel to install during post build verification.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1863:44,install,install,44,https://qutip.org,https://github.com/qutip/qutip/pull/1863,2,['install'],['install']
Deployability,"**Description**; Fix the parameters in the call to fsesolve in the floquet guide. The fsesolve parameters were updated at some point, but the guide wasn't. **Related issues or PRs**; Fixes #1663 . **Changelog**; Fixed the parameters in the call to fsesolve in the floquet guide.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1675:111,update,updated,111,https://qutip.org,https://github.com/qutip/qutip/pull/1675,1,['update'],['updated']
Deployability,"**Description**; Fix warnings and errors coming from matplotlip 3.8 release.; - Close figure in errors tests. Lot of empty figures were created and never closed.; - `plt.contourf` can be used as an artist instead of extracting the artists list from it.; - `color` cannot be a numpy array anymore, convert the arrays to list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2238:68,release,release,68,https://qutip.org,https://github.com/qutip/qutip/pull/2238,1,['release'],['release']
Deployability,"**Description**; For solving issue qutip/qutip-qip#51, I have added an `about` functionality for `qutip_qip`. Will also make the necessary PR in the qutip-qip repository for completing this issue. **Related issues or PRs**; fixes qutip/qutip-qip#51. **Changelog**; Added a parameter to `qutip`'s about function which defaults to ""qutip"". `qutip`'s about can be called from `qutip_qip` with the argument of ""qutip_qip"" which will display information about `qutip_qip`.; Displaying `qutip_qip`'s version and installation path.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1870:506,install,installation,506,https://qutip.org,https://github.com/qutip/qutip/pull/1870,1,['install'],['installation']
Deployability,"**Description**; For the new release, lattice support in lattice should be moved to it's own module.; This is removing these files from the next major version of qutip.; https://github.com/qutip/qutip-lattice replacing them and ready for a v0.1.0 release.; * The documentation is still inside qutip's documentation. @sbisw002 do you want to be a contributor on qutip/qutip-lattice, your commit history is lost by the move. @nathanshammah, I set the _authors_ of the new repository as Saumya, you, me and Clement, and I kept the same support (numfocus and unitaryfund). Are you fine with that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1324:29,release,release,29,https://qutip.org,https://github.com/qutip/qutip/pull/1324,2,['release'],['release']
Deployability,"**Description**; I optimized the dispatched by only supporting positional arguments for matrix to dispatch on:. The dispatcher was supporting any signature for dispatched functions.; Since each dispatchers is an instance of the `Dispatcher` class and cython does not support patching methods, it had to find the inputs matrix to convert from `__call__(*args, **kwargs)` and re-implemented the `_bind` method to do so.; But all our dispatched functions have the matrix as the first positional argument, by embracing this we get a nice speed up for small matrices. Also when the specialization existed, it would not call it directly, but call a `_constructed_specialisation` that called ti. Adding another unneeded layer to each calls. This was changed so it would call the function directly. For a 2x2 matrix:; | | Before | After |; |------------------|--------|-------|; | data.add_dense | 214ns | 210ns |; | data.add (dense) | 774ns | 388ns |; | data.add[Dense, Dense] | 541ns | 182ns |; | data.add_csr | 429ns | 447ns |; | data.add (csr) | 986ns | 649ns |; | data.add[CSR. CSR] | 744ns | 401ns |; | numpy | 473ns | - |. Sadly it will not improve the benchmarks that much since the `Qobj` operations overhead is quite large:; | | Before | After |; |------------------|--------|-------|; | Qboj + Qobj (dense) | 2430ns | 2070ns |; | Qboj + Qobj (csr) | 3070ns | 2330ns |",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2135:275,patch,patching,275,https://qutip.org,https://github.com/qutip/qutip/pull/2135,1,['patch'],['patching']
Deployability,"**Description**; In #1812, I worked on removing the tree structure of option and having options per solver instead of having them together.; This way, we don't need to pass `mcsolve` specific options to `mesolve`, etc. and it makes it simpler to know which options are used by which solver. That PR is getting quite large and went through multiple revision, so I am replacing it with two smaller ones. In this PR, I simplify the options in core. `install` options are put back into `settings`, these are most options that the user cannot change, such as the presence of mkl or running in `ipython`. The exceptions is the location of the .qutip folder which is a setting but can be changed. Most of these settings are properties of the object and only computed when being called instead of at import in `__init__.py`. . `CoreOptions` and `CompilationOptions` are now both made from a simpler `QutipOptions` class instead of the `optionsclass` which generated many method at import. Some options have been moved around: `debug`, `log_handler`, `colorblind_safe` and `use_cython` has been moved to `CoreOptions`. Since instance of `CoreOptions` cannot be passed to functions using it. It supports context:; ```; with CoreOptions(auto_tidyup=False):; op = sparse1 + sparse2; ```; and global options change using:; ```; qutip.settings.core['atol'] = 1e-6; ```. `CompilationOptions` instance must be passed to `coefficient` to be used. `configrc` was removed. It was used to store settings in a file that would be read when importing qutip. This was mainly used to store the openmp threshold. Without openmp, we don't have any settings to store between sessions. Some test related to mkl had to be fixed, it seems that they were always skipped before these changes. **Related issues or PRs**; Replace #1812. **Changelog**; Simplify settings and core options.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1924:447,install,install,447,https://qutip.org,https://github.com/qutip/qutip/pull/1924,1,['install'],['install']
Deployability,"**Description**; In #2120, `countstat` was updated to use `data.solve`.; `countstat` would sometime try to solve a system with singular matrix and has a fallback for it using `try: ... except:`; However, while numpy raises an error when the matrix is singular, `scipy.sparse` raises a warnings, thus the tests only pass because we use the warnings as error flags... Without it, the singular matrix would not be caught and the solution from `countstat` would contain a `NaN` and the tests would fail... - Redirect the warning from scipy sparse and numpy's `LinAlgError` to a `ValueError`to allow easy catching of these case.; - Add the small `1e-15` in `countstat` with `auto_tidyup` turned off.; - Add support for the method `lstsq` and `solve` for `data.solve_csr`. These methods are supported by numpy, jax, tensorflow, scipy.sparse is the exception which use `spsolve` and `lsqr` instead, probably to avoid name collision the the dense version they also have.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2144:43,update,updated,43,https://qutip.org,https://github.com/qutip/qutip/pull/2144,1,['update'],['updated']
Deployability,**Description**; In #2413 I updated `setup.cfg` but forgot `pyproject.toml`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2417:28,update,updated,28,https://qutip.org,https://github.com/qutip/qutip/pull/2417,1,['update'],['updated']
Deployability,"**Description**; In #2513, I forgot to update `CoreOptions.__setattr__` which was newly created when adding type hints.; All our tests changed options only using context, so it was missed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2518:39,update,update,39,https://qutip.org,https://github.com/qutip/qutip/pull/2518,1,['update'],['update']
Deployability,"**Description**; In #2523, I updated versions for the sphinx build in `doc/requirements.txt`, but readthedocs has it's own version requirements in `doc/rtd-environment.yml` which I forgot to update.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2526:29,update,updated,29,https://qutip.org,https://github.com/qutip/qutip/pull/2526,2,['update'],"['update', 'updated']"
Deployability,"**Description**; In cython code, signals (Keyboard Interrupt) are not automatically checked.; And when checked, if error are not properly passed (`expect *`) the signal can be last. This happened in the Runge Kutta integrator, which did not properly passed errors and only when back to python space at time in `tlist` which can be far apart. The stochastic solver stop on (Keyboard Interrupt), the `except` are not needed since the output is a class. I made it explicit for clarity. Doing a few tests, I saw that the error was often caught in the `Qobj.data` property called by `QobjEvo.matmul`. This means more back and forth between python and cython was done than needed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2169:215,integrat,integrator,215,https://qutip.org,https://github.com/qutip/qutip/pull/2169,1,['integrat'],['integrator']
Deployability,"**Description**; In general, operation between sparse and dense return dense. This is not ideal for the kron product which output would be sparser than the sparse input. The dispatcher does not have fine control for these cases, (Jake plan to add it but never had the time to get to it), so I added wrapper specialisation for these cases. . I had to patch `expand_operator` since it used `dense` priority to work.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2391:350,patch,patch,350,https://qutip.org,https://github.com/qutip/qutip/pull/2391,1,['patch'],['patch']
Deployability,"**Description**; In solvers, we often wrap `Qobj` into `QobjEvo` to remove code duplication while allowing support for time-dependant operators even when constant case are the norm (`e_ops`). Doing so we lose the `isherm` flag, which can sometime be nice to have. ; This PR allow the flag to be kept when calling the `QobjEvo` in such case:; ```; >>> QobjEvo(qeye(N))(0)._isherm; True; ```. This will be useful for the `diag` integration method which need compute the eigenstates of a constant `QobjEvo`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2000:426,integrat,integration,426,https://qutip.org,https://github.com/qutip/qutip/pull/2000,1,['integrat'],['integration']
Deployability,**Description**; Installing `dev.major` is raising warnings because of errors in MANIFEST.in:; ```; ...; reading manifest file 'qutip.egg-info/SOURCES.txt'; reading manifest template 'MANIFEST.in'; warning: no files found matching 'qutip.bib' <=====; warning: no files found matching '*.qasm' under directory 'qutip/tests/qasm_files' <=====; adding license file 'LICENSE.txt'; writing manifest file 'qutip.egg-info/SOURCES.txt'; running build_ext; ...; ```; qutip.bib was renamed to CITATION.bib in #1662 ; qasm files were removed in #1890 and are now only included with qutip-qip. **Changelog**; Update MANIFEST.in to reflect changes in #1662 and #1890,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1926:17,Install,Installing,17,https://qutip.org,https://github.com/qutip/qutip/pull/1926,2,"['Install', 'Update']","['Installing', 'Update']"
Deployability,**Description**; Integrate the scheduler into Processor. Users can choose to first schedule the circuit/control pulses before running the simulation. **Changelog**; Supports Processor with the scheduler.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:17,Integrat,Integrate,17,https://qutip.org,https://github.com/qutip/qutip/pull/1365,1,['Integrat'],['Integrate']
Deployability,"**Description**; Introducing support for multiple coupling operators in `fmmesolve`. Additionally, I fixed the bug with the rate integration as described in #1961. . **Related issues or PRs**; #1961",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1962:129,integrat,integration,129,https://qutip.org,https://github.com/qutip/qutip/pull/1962,1,['integrat'],['integration']
Deployability,"**Description**; It has already been 6 weeks since 5.0.1 release. There are quite a lot of small issues that were fixed. Cherry-pick the following PRs:. - 2371, 2380, 2381, 2382, 2387, 2388, 2392, 2393, 2397, 2398, 2399, 2401, 2402, 2404, 2407, 2408, 2409, 2413, 2417, 2418, 2424, 2425, 2427. and updated the changelog.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2429:57,release,release,57,https://qutip.org,https://github.com/qutip/qutip/pull/2429,2,"['release', 'update']","['release', 'updated']"
Deployability,"**Description**; Mac tests have been failing for a while because of MKL. ; Set the mac test to run with openblas, skipping failing tests.; Added `rcond=None` to `linalg.lstsq` to remove a warning. I also updated versions of github action as some where raising warnings.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2019:204,update,updated,204,https://qutip.org,https://github.com/qutip/qutip/pull/2019,1,['update'],['updated']
Deployability,"**Description**; Make `choi_to_kraus` rely on eigenstate solver for Hermitian matrices if the Choi matrix is Hermitian. Basically, this adapts what is done in qutip 5, while waiting for its release. **Related issues or PRs**; #2263",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2276:190,release,release,190,https://qutip.org,https://github.com/qutip/qutip/pull/2276,1,['release'],['release']
Deployability,"**Description**; Make and upgrade a few class commonly used by solvers. All solver's core is a loop that progress between time in `tlist` and take a snapshot of the state at these time. The work of this loop have been moved to 2 classes: `Result` and `Evolver`. . `Result` was previously just a container of the solver output. It now does the snapshot: compute the expectation values, save the state, compute trajectories average, etc. . `Evolver` is qutip's ODE solver interface: the states are `Data` object and the function is `QovjEvo`(or `QobjEvoFunc`). There are multiple type of evolver wrapping different scipy's ode solver and a few of our own. The wrapper around scipy's zvode that was previously used in qutip's is `EvolverScipyZvode`, but we now have our own cython solver based on [Verner's method](http://people.math.sfu.ca/~jverner/) that accept any Data type as state. Different evolver based on different ODE method are interchangeable and have their dispatcher `evolver_collection`, allowing to easily add new methods. . With this, time-dependent system are managed by `QobjEvo`, ODE by `Evolver`, therefore the solvers can concentrate more closely on the physic. **Evolver:**; Method supported with this PR: `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:26,upgrade,upgrade,26,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['upgrade'],['upgrade']
Deployability,"**Description**; Make our integrator re-entrant. Scipy'ode is can only have one active instance active for some of the methods. This cuased no issue when the whole integration is done at once as when used in `mesolve`. But with solver as class, this mean using them will have side effect on other solver instances. This PR make the check for concurrent integrator usage before scipy does and force a reset if needed. Switching between system will be inefficient, but will return the expected results. In lsoda's integrator's `_backstep` we are catching a warning before acting on it, but catching the warnings still printed them at the end of tests, bloating the output. In this PR, I also do the check before scipy does so the warning is never raised. **Related issues or PRs**; Point raised in discussion with @hodgestar and @AGaliciaMartinez on #1710 . **Changelog**; Front run some safety check in scipy.ode",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1734:26,integrat,integrator,26,https://qutip.org,https://github.com/qutip/qutip/pull/1734,4,['integrat'],"['integration', 'integrator']"
Deployability,**Description**; Making 4.5.1 up-to-date for next week release. **Changelog**; Moved test to 3.8; `randint`'s dtype fixed for seed generation; Mac pool use spawn; corrected heterodyne's m_ops (by eliegenois),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1241:55,release,release,55,https://qutip.org,https://github.com/qutip/qutip/pull/1241,1,['release'],['release']
Deployability,"**Description**; Many of the operator functions did not set the `isherm` flag.; Not having the flag set would cause issue with `jax.jit`. - Set the `isherm` flag for almost every functions in `operators.py` and `gates.py`. ; - `qdiags` flags are only set when only one diagonal in used.; - I did not touch functions creating operators from other operators ( `commutator`, `squeezing`); - Set the `isunitary` flags for all these also.; - Updated the gates `dtype` parameter to use the `default_dtype` settings.; - Updated the sigma operators to have a `dtype` parameter.; - Added tests for all of these.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2388:437,Update,Updated,437,https://qutip.org,https://github.com/qutip/qutip/pull/2388,2,['Update'],['Updated']
Deployability,**Description**; Merge `master` into `qutip-5.0.X`.; Update version number to 5.0.0a2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2227:53,Update,Update,53,https://qutip.org,https://github.com/qutip/qutip/pull/2227,1,['Update'],['Update']
Deployability,**Description**; Merge latest changes to qutip-5.0.X branch for a v5 release soon.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2360:69,release,release,69,https://qutip.org,https://github.com/qutip/qutip/pull/2360,1,['release'],['release']
Deployability,**Description**; Merge master into qutip-5.0.X for a beta release for a full release soon.; Version and classifiers updated.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2346:58,release,release,58,https://qutip.org,https://github.com/qutip/qutip/pull/2346,3,"['release', 'update']","['release', 'updated']"
Deployability,**Description**; Micro release 5.0.4 to add support for numpy 2.1.X,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2521:23,release,release,23,https://qutip.org,https://github.com/qutip/qutip/pull/2521,1,['release'],['release']
Deployability,"**Description**; Move `ttmsolve` to `qutip/solver` and update it. No class interface was created, `ttmsolve` work differently to other solver and would be hard to force into the `Solver` mould. Changed the interface a little, `learningtimes` needed use the first values `times` to be valid, it was replaced by an options for the number of values in ``times`` to use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2142:55,update,update,55,https://qutip.org,https://github.com/qutip/qutip/pull/2142,1,['update'],['update']
Deployability,**Description**; New release to exclude scipy (and other bugfix),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2385:21,release,release,21,https://qutip.org,https://github.com/qutip/qutip/pull/2385,1,['release'],['release']
Deployability,**Description**; Our documentation was being build with a ludicrously outdated version of Sphinx. This updates the builds to use the current Sphinx and matplotlib versions. **Related issues or PRs**; - None,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149:103,update,updates,103,https://qutip.org,https://github.com/qutip/qutip/pull/2149,1,['update'],['updates']
Deployability,**Description**; Preparation PR for the 5.0.3 micro release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2464:52,release,release,52,https://qutip.org,https://github.com/qutip/qutip/pull/2464,1,['release'],['release']
Deployability,**Description**; Prepare 4.7.0 release. **Related issues or PRs**; - See milestone https://github.com/qutip/qutip/milestone/12?closed=1. **Changelog**; Prepare 4.7.0 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1856:31,release,release,31,https://qutip.org,https://github.com/qutip/qutip/pull/1856,2,['release'],['release']
Deployability,**Description**; Prepare 4.7.4 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2292:31,release,release,31,https://qutip.org,https://github.com/qutip/qutip/pull/2292,1,['release'],['release']
Deployability,**Description**; Prepare QuTiP 4.7.1 release. **Related issues or PRs**; - See #2045 for changelog update.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2046:37,release,release,37,https://qutip.org,https://github.com/qutip/qutip/pull/2046,2,"['release', 'update']","['release', 'update']"
Deployability,**Description**; Prepare the 4.6.X branch for the 4.6.3 release. **Related issues or PRs**; - Milestone [4.6.3](https://github.com/qutip/qutip/milestone/19); - Changelog update: #1793. **Changelog**; Prepare the 4.6.3 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1795:56,release,release,56,https://qutip.org,https://github.com/qutip/qutip/pull/1795,3,"['release', 'update']","['release', 'update']"
Deployability,"**Description**; Qobj support Dense representation, but there are still no easy way to create dense matrix. So this add a keyword only `dtype` options to most function of qutip.states, qutip.operators and qutip.random_object. To make them, I made 2 new dispatched function: `diag` and `one_element`. `diag` has the same use than @jakelishman #1419 function, but I fall back on scipy quickly... So I will switch to his version as soon as it is merged. . To make the `dtype` more user friendly than seeking the type in `qutip.core.data`, I changed `to` to accept the string representation of the name (case insensitive). Only `to` accept string, `dispatch` is not really user facing so there is no reason to touch it. I also updated the `create` to use `add_creators` and make `Dense` out of `numpy array`. Jake, I am not sure of what were your plans for this. So if I am messing your plans, please tell me. . Tests are not all created yet and it will create a conflict with #1419 and #1407. **Related issues or PRs**; #1419",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1420:723,update,updated,723,https://qutip.org,https://github.com/qutip/qutip/pull/1420,1,['update'],['updated']
Deployability,"**Description**; Re-implement entropy_relative. This function was implemented in March 2012, but then removed a month later. After some digging, it appears that the reason the function was removed is that it assumed the eigenvectors of the density matrices were identical (and in the same order). After some reading of Nielsen & Chuang, I have re-implemented it to address the issue. **Still todo**; - [x] Update the documentation.; - [ ] Add an example to an example notebook.; - [x] Add some tests for specific cases where we know what the answer should be.; - [x] Stretch goal: Vectorize the calculation of P_ij and the rest of the loop as much as we can (but let's make sure the answers are correct first). **Changelog**; Re-implement entropy_relative which returns the quantum relative entropy between two density matrices.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1553:406,Update,Update,406,https://qutip.org,https://github.com/qutip/qutip/pull/1553,1,['Update'],['Update']
Deployability,"**Description**; Remove coercion of coefficient values to complex in `Coefficient` and `QobjEvo` allowing to use `tf.Variable` as coefficient to enable auto-differentiation to be used in solver.; It is build on top of #1644 since it include integration method using our data object. Coefficient creation is no longer hard coded, but use a dict of `type: callable`, each type is associated to a function that create a coefficient, allowing to add support for other coefficient types per project such as qutip-tensorflow. Also, function based coefficient no longer cast to complex, but the check in the coefficient function is still there. Since other type are not supported without new data layer, this feels like a proper balance. `QobjEvo` cython casting of coefficient's value to complex as been removing.; No tests are added since other types of coefficient are not supported by data layer.; But here is an example of auto differentiation with this branch:. ```; import qutip as qt; import numpy as np; import qutip_tensorflow as qtf; import tensorflow as tf; from qutip.core.coefficient import Coefficient, coefficient_builders; from qutip.solver.sesolve import SeSolver. # Create a new Coefficient for tf.Variable, ; # This should be added to qutip-tensorflow,; # Here I use a step interpolation.; class TfVarArgsCoefficient(Coefficient):; def __init__(self, variable, tlist, **_):; self.variable = variable; self._tlist = tlist; ; def __call__(self, t, _args=None, **_):; if t <= self._tlist[0]:; return self.variable[0]; if t >= self._tlist[-1]:; return self.variable[-1]; idx = np.searchsorted(self._tlist, t, 'right') - 1; return self.variable[idx]. coefficient_builders[tf.Variable] = TfVarArgsCoefficient. # Create a Coefficient as normal.; variable = tf.Variable(np.linspace(0.1,0.9,6), dtype=tf.complex128); coeff1 = qt.coefficient(variable, tlist=np.linspace(0,0.5,6)). N = 5; a = qt.destroy(N, dtype='tftensor'); num = qt.num(N, dtype='tftensor'); H = qt.qeye(N, dtype='tftensor') + qt.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1816:241,integrat,integration,241,https://qutip.org,https://github.com/qutip/qutip/pull/1816,1,['integrat'],['integration']
Deployability,"**Description**; Remove tests using python 3.6 and 3.7 and openmp tests.; SInce we need to add a new job for each python version, we also need to remove older jobs so the whole test suite don't get bloated. Numpy has a suggestion for version support in scientific project in [NEP29](https://numpy.org/neps/nep-0029-deprecation_policy.html) which we can follow to decide when we can remove some tests and if it's fine to use newer feature forcing us to improve our requirements. I added a note in the contributing and release guides to refer to this when adding a change using feature of newer version of package we use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941:517,release,release,517,https://qutip.org,https://github.com/qutip/qutip/pull/1941,1,['release'],['release']
Deployability,"**Description**; Removed `mpi4py` from `full`. ; It is hard to install locally (for the users) and in readthedocs, where it is not actually used (#2317). I am not sure what it is the best practice for this. `full` should normally include every optional dependency, but mpi4py is too specialized and not useful for most users. If it makes qutip harder to install since `pip install qutip[full]` would fail for most, maybe it's better to leave it out. Also updated some versions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2319:63,install,install,63,https://qutip.org,https://github.com/qutip/qutip/pull/2319,4,"['install', 'update']","['install', 'updated']"
Deployability,"**Description**; Restore the feedback capacities of the solver.; In v4, this was done by using special names for the `args`, but this was confusing. . For v5, I propose to do it using a `add_feedback` method of the solver:; ```; H = QobjEvo([op, lambda t, ket: bra @ ket]); solver = SESolver(H); solver.add_feedback(""ket"", ""qobj""); solver.run(...); ```; With this, `args[""ket""]` will be updated with the state during the evolution. Most solver support it, the exception are floquet, nm_mcsolve. ; HEOM support it, but the state will be seen as a single ket.; @hodgestar , is that fine?. Available form are as `Qobj`, as `Data`, `expect(oper, data)`.; `mcsolve` also has the collapse and `stochastic` the wiener process.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210:387,update,updated,387,https://qutip.org,https://github.com/qutip/qutip/pull/2210,1,['update'],['updated']
Deployability,"**Description**; Rewrite `mcsolve` as a class for dev.major. Main addition:; - `MultitrajSolver` class as a base class for solver computing trajectory from a seed: it uses custom ; - It uses custom integrator using a generator which `MultitrajSolver` provide. ; - Stepping run one trajectory at a time.; - Use numpy.random new interface with `SeedSequence` and `Generator`.; - `run` can end on number of trajectories reached, timeout reached, or error bars on expectation values under a certain tolerance.; - `McSolver` class for mcsolve class interface.; - Support closed and open system. For open systems. `H` must be a Liouvillian. The `c_ops` are computed stochasticly and are used for collapse. Dissipation terms to be used in a deterministic way can be added as Lindblad dissipators to the liouvillian.; - McSolver's results include the photocurrent.; - McSolver need a layer between the solver interface and the integrator. In #1710, this was a trajectory solver, but here I use a pseudo integrator. This makes `MultitrajSolver` easier to use with stochastic which need custom integrator and thus a trajectory solver did very little. Other fixes:; - `MultiTrajResult` keep the `dtype` of expect.; - `MultiTrajResult` can merge instance with no states stored. **Related issues or PRs**; Replace #1710",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1972:198,integrat,integrator,198,https://qutip.org,https://github.com/qutip/qutip/pull/1972,4,['integrat'],['integrator']
Deployability,"**Description**; Rewrite the main solvers with a more object approach.; The `Solver` class manage inputs and create the system (-i*H, liouvillian, ...).; The `Evolver` (#1409 do the evolution for each time in tlist.; The computation of `e_ops` and storing of states is done by the `Result` class. Updated function are moved from qutip/solve to qutip/solver. - The [..]solve function are matched with a [..]Solver class.; ```; solver = MeSolver(H, c_ops, times=..., options=..., args=..., e_ops=...); solver.run(rho, tlist). solver.start(rho, t0); solver.step(t1); ```; This remove the `rhs_reuse` options and come with a step function. The step function always return the state (it does not compute e_ops). . - Dynamic_args / feedback is no longer merged with normal args but entered in a `feedback_args` solver argument.; The input format is `feedback_args = {key: ""Qobj""}` will have args[key] be updated with the state as a Qobj at each system call.; ( no longer the magic keyword method). - With the class interface, array coefficient times are given independently from the `tlist`. - `mcsolve` result include the photocurrent, removing the need of `photocurrent_sesolve`.; - `MeMcSolver` (in progress) could replace `photocurrent_mesolve`. It does the save computation using Monte-Carlo algorithm.; - `mcsolve` code that compute collapse was moved from cython to python. I did not benchmark the effect on the speed, be expect it to be small and the overall evolution to be faster with improvement in the map function (do not need to store every states before computing average) and `Evolver` (better backstep for adam method).; ; - `SteadyState` use a `SteadyStateOptions` instead of a bunch of kwargs. **Related issues or PRs**; Build from #1409.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1455:297,Update,Updated,297,https://qutip.org,https://github.com/qutip/qutip/pull/1455,2,"['Update', 'update']","['Updated', 'updated']"
Deployability,**Description**; Run mac test with openblas instead of MKL to skip the tests failing with pardiso. Update github action version since they are raising deprecation warning. **Related issues or PRs**; #2019,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2020:99,Update,Update,99,https://qutip.org,https://github.com/qutip/qutip/pull/2020,1,['Update'],['Update']
Deployability,"**Description**; Scipy 1.12 rename a variable in linalg solver: `tol` to `rtol` and raise a deprecation warning with the old name.; Scipy 1.11 does not accept `rtol`. This parameter is passed thought `**kwargs` in steadystate and is not used elsewhere, so only the test need to be updated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2301:281,update,updated,281,https://qutip.org,https://github.com/qutip/qutip/pull/2301,1,['update'],['updated']
Deployability,"**Description**; Set minimum python version to 3.9 for v5. While we don't use many feature that prevent previous version, we don't test them and pip install does not work because of conflict with `oldest-supported-numpy` (see #2412). Improve `installation.rst`, it still listed requirement for v4, openmp support and instruction on installing v5's pre-releases. [Exclude numpy 2 from requirements.](https://numpy.org/devdocs/dev/depending_on_numpy.html#numpy-2-0-specific-advice) We don't know if we are compatible yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2413:149,install,install,149,https://qutip.org,https://github.com/qutip/qutip/pull/2413,4,"['install', 'release']","['install', 'installation', 'installing', 'releases']"
Deployability,"**Description**; Splitting #1409, part 2/3.; Contain the non Integrator/Evoler part of the PR. ##### Options; Add move some options around and add a class for ODE options. ; parallel_map and progress_bar will become options, not arguments to the `solve` function.; `store_states` default is None so that `store_states=False` is not overwritten when no e_ops given. (#1437). ##### Result; With this version, the `Result` object is responsible to know if states are stored and to compute expectation values, in the method `add(t, state: Qobj)`. The solver will be responsible to create the `Qobj` for the state.; (#1460): The type of the expectation value [float, complex] is set by the `expect` function, `QobjEvo.expect` or user provided expect function. ; (#1238): Multiple callback function can be given as expectation: `e_ops=expect_func`, `e_ops=[expect_func1, expect_func2]`, are both valid.; `mcsolve` (and probably stochactic) use `MultiTrajResult` or `MultiTrajResultAveraged`. They have both `average_state` and `run_states` instead of `states` which content change depending on options. They can also compute the `photocurrent` from the collapse. (making photocurrent_sesolve useless). ##### parallel; Add a `reduce_func` which allows to treat a results without waiting for all task to be done. Presently even when using `average_states`, all states are saved and the average is only computed at the end, which is not the behaviour expected by the users. ; (#1092 ) Add a loky based parallel map. It does not pickle object the same way as multiprocessing. ##### progress bar; Add a bar based on `tqdm`, which is a standard progress bar in python.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1462:61,Integrat,Integrator,61,https://qutip.org,https://github.com/qutip/qutip/pull/1462,1,['Integrat'],['Integrator']
Deployability,"**Description**; Test for the bloch sphere require matplotlib and ipython to pass, but these were not installed with `qutip[tests]`.; These tests are now skipped when these packages are missing instead of failing. Also add `loky` and `tqdm` to extra require as they can now be used in solvers.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2095:102,install,installed,102,https://qutip.org,https://github.com/qutip/qutip/pull/2095,1,['install'],['installed']
Deployability,**Description**; Tests would fail to run if `matplotlib` or `ipython` were not installed.; This add `pytest.importskip` to skip instead or failing the the packages are missing.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2311:79,install,installed,79,https://qutip.org,https://github.com/qutip/qutip/pull/2311,1,['install'],['installed']
Deployability,"**Description**; The PR provides a way to characterize thermal environments for open quantum systems, The user can now construct Thermal environments by specifying The spectral density, or the correlation function , or the power spectrum and the Temperature. Once specified the other two are calculated. We hope once integrated with the solvers, this PR will allow for a more systematic way of comparing different approaches, and easier simulations by quickly obtaining the quantities needed from the bath objects. The PR also provides exponential approximations of the environment via a fit of the correlation function, and a fit of the spectral density in terms of underdamped modes, the PR allows for incorporation of more approximation methods, which will be added in the future. . **Related issues or PRs**; This PR is a generalization of #2260 . Special Thanks to @pmenczel for improving the code significantly and valuable suggestions!. **TODO:**. I think perhaps those are better finished once we have decided that this structure for the environments is the way to go. However, the most important missing bits are . - [x] Finish documentation in the User's guide; - [x] Add relevant tests for the HEOM solver using the enviroment class; - [ ] Finish tests for environment.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534:317,integrat,integrated,317,https://qutip.org,https://github.com/qutip/qutip/pull/2534,1,['integrat'],['integrated']
Deployability,"**Description**; The `4.x` documentation suggests that the user test the installation by; ```python; import qutip.testing; qutip.testing.run(); ```; and when something fails (e.g. due to missing `matplotlib`), the obvious reaction would be to re-execute `qutip.testing.run()`. However, this does not currently work, because passing a `zip` generator to `pytest.parametrize` limits that test case to be executed only once. This PR does nothing but allowing tests to be executed multiple times in one Python session. P.S. I would recommend backporting the new shell testing command `pytest qutip/qutip/tests` to the `4.x` documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2538:73,install,installation,73,https://qutip.org,https://github.com/qutip/qutip/pull/2538,1,['install'],['installation']
Deployability,"**Description**; The `dataclass` inspired tree structure options we have in `dev.major` is more complex than needed.; The tree structure allow to split `mcsolve` specific options from the other, but they are still present in those passed to `sesolve` etc. This redo options using normal class inheritance. ; `install` options are put back into `settings`, these are most options that the user cannot change, such as the presence of mkl or running in `ipython`. The exceptions is the location of the .qutip folder which is a setting but can be changed. The base for the options is a dict with fixed keys and default values. As before, options can be set as keywork at initialization or when setting items. The default can be changed using context (mainly for tests) or setting items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solve",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:309,install,install,309,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['install'],['install']
Deployability,"**Description**; The internal processing of noise is simplified. instead of adding Pulse object to the pulse list, Noisy dynamics are added to a dummy pulse object called systematic noise. Update the test. The test was not correctly collected by `pytest`, because the name was `Test` with capital T. **Changelog**; Improve noise processing in qutip.qip",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1445:189,Update,Update,189,https://qutip.org,https://github.com/qutip/qutip/pull/1445,1,['Update'],['Update']
Deployability,"**Description**; The mkl finding was sometime missing the library even when available.; Sometime the library can has a version number in the file name:; `libmkl_rt.so.2`, `mkl_rt.2.dll`, with or without a symbolic link to the version less name.; Also it ouly look for it if it's found in numpy's config, but the module mkl is available an could be installed even if numpy does not link to it. Our use using ctypes does not require numpy to be using it to work. So I changed the lookup function to look for the library without checking is numpy uses it. I also added a new setting, `settings.mkl_lib_location`, which is not read only and allow users to enter the path to their mkl implementation. We only look inside the python library path, this would allow to use libraries installed at the OS level. Also fixed a bug in mkl spsolve with scipy 1.14 that was missed since mkl tests were skipped. **Related issues or PRs**; fix #2496",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2497:348,install,installed,348,https://qutip.org,https://github.com/qutip/qutip/pull/2497,2,['install'],['installed']
Deployability,**Description**; The numerical integration for the `X` matrix uses the rectangular rule with a fixed number of time steps `nT = 100`. I changed `nT` to vary with the given `kmax` since the integrands frequency increases with `kmax`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961:31,integrat,integration,31,https://qutip.org,https://github.com/qutip/qutip/pull/1961,1,['integrat'],['integration']
Deployability,**Description**; The towncrier check was failing when installing the module since we used the OS python and which is not managed by pip:; ```; python -m pip install towncrier; error: externally-managed-environment; ```,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2542:54,install,installing,54,https://qutip.org,https://github.com/qutip/qutip/pull/2542,2,['install'],"['install', 'installing']"
Deployability,**Description**; The website now direct to readthedocs for documentation.; I updated the `release_distribution` guide to not copy the docs file into qutip.github.io but update the readthedocs links.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2399:77,update,updated,77,https://qutip.org,https://github.com/qutip/qutip/pull/2399,2,['update'],"['update', 'updated']"
Deployability,"**Description**; This PR fixed #2535 by adding a check for which matplotlib version is installed, similar to the custom `_axes3D`. Tested with `matplotlib==3.9.2` and `matplotlib==3.8.3`. **Related issues or PRs**; Fix for #2535",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2544:87,install,installed,87,https://qutip.org,https://github.com/qutip/qutip/pull/2544,1,['install'],['installed']
Deployability,"**Description**; This add documentation of the new BoFiN-based HEOM solver added in #1601. **Todo**; - [x] Rework the documentation structure.; - [x] Update the introduction; - [x] Update the bosonic example; - [x] Update the fermionic example; - [x] Add a short history of the HEOM implementation; - [x] Mention that the old HEOM implementation is available as `dl_heom`; - [x] Add a link to the HEOM notebooks.; - [x] Update `.run(..., ado_init=True)` to accept an instance of `HierarchyADOsState` since this is what `.run(..., ado_return=True)` returns. Add tests for `ado_init=True`. **Related PRs**; - #1601; - #1726. **Changelog**; Add and rework the HEOM documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1724:150,Update,Update,150,https://qutip.org,https://github.com/qutip/qutip/pull/1724,4,['Update'],['Update']
Deployability,"**Description**; This change solver's options to be per solver. Thus mcsolve specific options are not included in options passed to sesolve etc.; It also simplify the options class which is now closer to a `dict` than to a `dataclass`. `SovlerOptions` take a new optional parameter `solver` to know which options to support. By passing it, it will fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""ord",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:388,update,update,388,https://qutip.org,https://github.com/qutip/qutip/pull/1947,1,['update'],['update']
Deployability,**Description**; This pull request introduces a new `NumpyBackend `class that enables dynamic selection of the numpy_backend used in `qutip`. The class facilitates switching between different numpy implementations ( `numpy` and `jax.numpy` mainly) based on the configuration specified in the `settings.core` dictionary. . Made changes in `entropy` and `metrics` to make them `jax` enabled,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2490:261,configurat,configuration,261,https://qutip.org,https://github.com/qutip/qutip/pull/2490,1,['configurat'],['configuration']
Deployability,**Description**; This sets up the towncrier utility to manage the changelog. - Add suitable towncrier configuration to the respository.; - Update the release documentation with instructions for using towncrier to update the change log.; - Update the development documentation to include the requirement to add towncrier entries for each PR.; - Update the GitHub PR template to mention the requirement to add a towncrier entry.; - Add a check to the GitHub action tests workflow that checks that a towncrier entry was added. **Related issues or PRs**; #1894. **Changelog**; See doc/changes/1927.doc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927:102,configurat,configuration,102,https://qutip.org,https://github.com/qutip/qutip/pull/1927,6,"['Update', 'configurat', 'release', 'update']","['Update', 'configuration', 'release', 'update']"
Deployability,**Description**; Update HEOM for v5. **Related issues or PRs**; - One of the todos from #1850. **Changelog**; Update HEOM for v5.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1868:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1868,2,['Update'],['Update']
Deployability,"**Description**; Update HEOM for v5. Other changes:; - This resulted in a bit of a refactor of the Result class (#1907); - I found a few places where QobjEvo did not correctly set `.type` and fixed those (they were breaking the HEOM tests). Todos and questions:; - [X] Should HierarchyADOsState store ado_state as a Data object rather than a numpy array? (it can't be stored as a Data object because the ADOs have shape `n_ado, n, n` and the Data layer only supports 2-d arrays).; - [X] How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). (implemented); - [X] What should be done with the steady_state method? I guess it can just stay. Should other solvers also have this? (it should just stay, I think); - [x] Recheck the time-dependent case. (I also simplified the time-dependent case so that the Liouvillian is never added and so doesn't have to be subtracted off).; - [X] The HEOM can't really take new QObjEvo arguments each time `run` is called because calculating the RHS again is quite expensive. Maybe something can be done? (implemented -- passing new args to .run is now supported); - [X] In the base solver the new options seem to be set after retrieving the integrator -- is this right? (fixed); - [X] Compare performance to the HEOM in 4.7. (looks faster, yay!); - [X] We could also implement `.start()` and `.step()` for the HEOMSolver. Not quite sure of the use case yet though. (implemented and tested -- the implementation came for free after sorting out having .run inherit from the base solver).; - [x] Add some direct tests for the QobjEvo type errors that have been fixed.; - [x] Moved solver into `qutip.solver.heom`. . **Related issues or PRs**; - One of the todos from #1850; - In #1907 the Result class was changed largely to support extension by the HEOMSolver. **Changelog**; Update HEOM for v5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1869,3,"['Update', 'integrat']","['Update', 'integrator']"
Deployability,**Description**; Update `imul_csr` and `imul_dense` to use blas instead of a loop.; blas is faster and it makes a visible difference when timing the stochastic integration.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2125:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2125,2,"['Update', 'integrat']","['Update', 'integration']"
Deployability,**Description**; Update changelog for 4.6.3 release. **Related issues or PRs**; - Milestone: [4.6.3](https://github.com/qutip/qutip/milestone/19). **Changelog**; Update changelog for 4.6.3 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1793:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1793,4,"['Update', 'release']","['Update', 'release']"
Deployability,**Description**; Update changelog for 4.7.0. **Related issues or PRs**; - See https://github.com/qutip/qutip/milestone/12?closed=1. **Changelog**; Update changelog for 4.7.0.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1852:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1852,2,['Update'],['Update']
Deployability,**Description**; Update changelog for 4.7.1. **Related issues or PRs**; - None,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2045:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2045,1,['Update'],['Update']
Deployability,"**Description**; Update correlation functions to use v5 solvers.; The interface remain the mostly the same, I only made a few changes:; - Support for mcsolve as a back-end is removed. It was very slow, had a low precision and the saved memory is not as useful as it was 10 years ago. Removing it simplify the code a lot, but i can add it back if there is demand for it.; - Time-dependent Hamiltonian no longer support numpy array format: some correlation have 2 times list: `tlist` and `taulist`. It was not clear which one was to be used when using that format. `QobjEvo` input are supported, so building it before passing it to the correlation function is the way to go.; - `a_op`, `b_op`, `c_op` can be `QobjEvo`. Spectrum functions have been moved to their own file, but are mostly unchanged. I added `correlation_3op` which work as other correlation functions, but take a `Solver` instead of an Hamiltonian and `c_ops`. This allows any solver able to evolve density matrices to be used (`BRSolver`, `HEOMSolver`). It is only one function that support it directly: adding support of `Solver` to existing function would make the interface quite complicated, and changing it would break a lot of code and calling them using `H` is useful. . Fixed a small bugs in brmesolve and heom. I added data type option for the eigen solver of the diag integrator as it would otherwise sometime fail with cases in correlation (system and state not hermitian.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1997:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1997,2,"['Update', 'integrat']","['Update', 'integrator']"
Deployability,**Description**; Update dev.major CI tests setup from master. This also merges the build changes needed to support Python 3.10 (which is tested in the latest CI test setup from master). **Related issues or PRs**; * Brings in: #1777. **Changelog**; Update dev.major CI tests setup from master.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1791,2,['Update'],['Update']
Deployability,**Description**; Update minimum version supported ; - python >= 3.10; - numpy >= 1.22; - scipy >= 1.8; - matplotlib >= 3.5. According to scientific python spec 0. Cython 3.0.3 does not support python under 3.9. The changelog does not seems to indicate if it is intentional or not.; It also simplify some parts where we branch over module versions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2241:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2241,1,['Update'],['Update']
Deployability,"**Description**; Update tests in `test_steadystate` to use pytest.; Improve coverage by adding tests for previously untested method and options and tests for raised errors. It will not reach full coverage: no tests use `debug=True`, `pinv2` is deprecated on `scipy` side, some checks are redundant, etc. Some work on `steadystate.py` will be needed, but this is for another time, possibly for dev.major. **Changelog**; Update steadystates tests to pytest for better coverage.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1679:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1679,2,['Update'],['Update']
Deployability,"**Description**; Update tests in `test_utilities.py` to `pytest` and add test for previouly untested function.; I removed 2 functions:; `linspace_with`: never used, almost equivalent to `np.linspace`.; `view_methods`: supposed to print methods of a `Qobj`, but broken... **Changelog**; Update tests in test_utilities.py to pytest.; Remove broken qutip.utilities.view_methods.; Remove qutip.utilities.linspace_with (use numpy.linspace instead).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1680:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1680,2,['Update'],['Update']
Deployability,**Description**; Update the guide for setting to list options still available in v5 and add an example with the using newly added context.; Removed the `auto_herm` options which was removed with `Qobj.isherm` being a property.; `auto_tidyup_dims` is not used anywhere but I left if since it could be useful with the dimensions class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2025:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2025,1,['Update'],['Update']
Deployability,"**Description**; Update the guides for solver options, results and time-dependent system.; In `dynamics-data`, I added example of the `e_data` property and explained the difference between results for one and multiple trajectories. `dynamics-time` as been mostly rewritten to explain how to use `QobjEvo`. It explain most features needed to use them in solvers, but it's quite dry.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2028:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2028,1,['Update'],['Update']
Deployability,**Description**; Update the roadmap and ideas to show completed work as of August 2022. **Related issues or PRs**; None.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1967:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1967,1,['Update'],['Update']
Deployability,**Description**; Update the superop reps tests to use pytest and parameterized tests. Thank you for contributing these @MrRobot2211. **Related issues or PRs**; - Originally submitted as part of #1491 which also added support for rectangular superops. **Changelog**; Update the superop reps tests to use pytest and parameterized tests. Contributed by @MrRobot2211),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1825:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/1825,2,['Update'],['Update']
Deployability,**Description**; Update version number and changelog.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2310:17,Update,Update,17,https://qutip.org,https://github.com/qutip/qutip/pull/2310,1,['Update'],['Update']
Deployability,"**Description**; Updated Issues templates (Bug Report, Feature Request, Others). **Related issues or PRs**; Fixes issue #1266. **Changelog**; Update the issue templates.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1728:17,Update,Updated,17,https://qutip.org,https://github.com/qutip/qutip/pull/1728,2,['Update'],"['Update', 'Updated']"
Deployability,"**Description**; Updated the test matrix, removing test using older version of python, scipy and numpy to add new versions.; Matrix include all python versions from 3.9 to 3.12, all scipy from 1.8 to 1.12, all numpy from 1.22 to 1.26.; I keep test with no cython, cython 0.X and 3.X. With and without mkl and all 3 os. Added python 3.12 to the list of build wheels, but removed 3.8. Increase minimum version of scipy and numpy in requirement to match those we actually tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2309:17,Update,Updated,17,https://qutip.org,https://github.com/qutip/qutip/pull/2309,1,['Update'],['Updated']
Deployability,"**Description**; Upgrade from 4.5.1 to 4.5.2.; Include cherry picked commit from the following PR:. #1307 Fix zcsr_proj for bras with unsorted indices; #1306 Fix quadratic complexity in zcsr_inner; #1302 Enforce a CI test with scipy<1.5; #1301 Fix brtools zheevr test; #1298 Support scipy >= 1.5 in fast_csr_matrix matmul and legacy.ptrace; #1283 Milstein's heterodyne index fix; #1271 Remove duplicate line in setup.py; #1264 Remove incorrect use of 'is' in comparisons. Code from #1288 was added manually to evade conflict and related test were reinstalled. (removed in 4.5.1, not in master). #1269 and #1242 are not included since they depend on #1209 which is more that a bugfix and is not in 4.5.0. **Changelog**; Bug Fixes; -------; - `zcsr_proj` does not fail with unsorted indices (by **Jake Lishman**); - Fixed Milstein's heterodyne errors (by **Eric Giguère**); - Removed risky code (by **Jake Lishman**); <!-- - Fix `add_circuit` and `remove_gate` (by **Canoming**) -->. Improvements; -------; - Faster `zcsr_inner` (by **Jake Lishman**); - Support for Scipy 1.5 (by **Jake Lishman**)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1310:17,Upgrade,Upgrade,17,https://qutip.org,https://github.com/qutip/qutip/pull/1310,1,['Upgrade'],['Upgrade']
Deployability,"**Description**; User-facing changes:; - Solver's `Options` defaults can be set `qutip.settings.options`.; - Add the `save`, `load`, `reset` method to Options.; - The default `Options` are read from ""qutiprc"" when loading qutip.; - Options object can be initiated from a saved configuration. Example:; ```; import qutip.setting as qset; from qutip.solver import Options; qset.options.atol = 1e-10; qset.options.max_step = 1; qset.save(); print(Options().atol); >>> 1e-10; ```; `atol = 1e-10` and `max_step = 1` will be kept as default in future sessions. `qset.options.reset` to go back to qutip's default. I believe that loading custom settings when importing qutip will be appreciated with support of both `dense` and `sparse` most researchers will have a preference depending on their domain. This also brings all settings in one place: `qutip.settings...` even if we split the code in ""core"", ""solver"", ""qip?"", etc. Lastly, creating and moving around an `Options` object is no longer needed, changing the default before using the solver has the same effect. . For developers:; Principally @jakelishman as I expect you to add settings for core. ; I went with an implementation similar to python `dataclass`. To add `core`'s settings to `qutip.settings` you would do ""; ```; from qutip.settings import QtOptionClass. @QtOptionClass(""core""); class CoreOptions:; basetype = ""Dense""; auto_tidyup = True; ...; ```; And it would create the `__init__`, `__repr__`, `save`, `load` and `reset` methods, and create the default instance as `qutip.settings.core`. All attributes that do not start with ""_"" and are one of `bool`, `str`, `int`, `float`, `complex` will be in tagged to be saved and loaded. Those are the only types available now, but other can be added if needed. In `__init__` all these + properties with a setter can be initiated as keyword arguments. '__repr__' 'print' all the saved attributes and properties.; This is for the likes of `has_openmp`, I would make it a read only property. Anot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297:277,configurat,configuration,277,https://qutip.org,https://github.com/qutip/qutip/pull/1297,1,['configurat'],['configuration']
Deployability,"**Description**; We are interested in a HPC-boosted QuTiP version, both for generally dynamical equation solvers and quantum circuit simulation. The idea would be to enable multiprocessing on single node (which should be easier) and then MPI for multi-node simulation. Also consider an integration with CuPy and GPU computation. **Possible approach**; For what concerns the equation solvers, we had a look at qutip.mesolve and qutip.sesolve and we have seen that at the core of the integration method there is scipy.integrate.ode. ; Our first (maybe trivial) idea was to replace scipy.integrate.ode with a solver that would enable single node multiprocessing.; For what concerns the possibility of using MPI for multiple nodes.. this would probably require a greater effort and significant changes in the code.; For the quantum circuit simulation, we are not able to simulate a QFT circuit with more than 14 qubits.. maybe one first step would be to use a sparse matrix representation of unitaries instead of storing the full (2^N x 2^N) matrix. . **Additional context**; You can find info and specifications about our HPC infrastructure here https://www.hpc.cineca.it/content/hardware; The machines we will be using for this project are Marconi100 https://www.hpc.cineca.it/hardware/marconi100 and Galileo100 https://www.hpc.cineca.it/hardware/galileo100",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671:286,integrat,integration,286,https://qutip.org,https://github.com/qutip/qutip/issues/1671,4,['integrat'],"['integrate', 'integration']"
Deployability,**Description**; We fixed cybuildwheel version to a version prior to 3.12 release. To build wheels for 3.12 we need to update it.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2367:74,release,release,74,https://qutip.org,https://github.com/qutip/qutip/pull/2367,2,"['release', 'update']","['release', 'update']"
Deployability,"**Description**; We have warnings for actions using deprecated node.js version, such as:; ```; Node.js 16 actions are deprecated. Please update the following actions to use Node.js 20: actions/download-artifact@v3, actions/setup-python@v4. For more information see: https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/.; ```; Updating the tools from v3 to v4 should fix the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2430:137,update,update,137,https://qutip.org,https://github.com/qutip/qutip/pull/2430,1,['update'],['update']
Deployability,"**Description**; We updated the signature for arguments in coefficient from dict to keyword format, changing call from `coeff(t, args)` to `coeff(t, **args)`. However `QobjEvo`, which have a similar call taking time and argument still took the new args as dictionary instead of keyword. Added keywork support for `QobjEvo.__call__` and `QobjEvo.arguments` . The `__init__` still take argument as a dict since it already takes a lot of parameters. **Related issues or PRs**; Follow up to #1633 . **Changelog**; QobjEvo call accept keywords for new args.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1884:20,update,updated,20,https://qutip.org,https://github.com/qutip/qutip/pull/1884,1,['update'],['updated']
Deployability,"**Description**; When I released QuTiP 4.6.1 I forgot to update the version number in the documentation configuration, `conf.py`. This PR updates `conf.py` to read the version and release from the `VERSION` file in an attempt to remove the possibility of such mistakes in future releases. I've also deleted the `doc/sphinxext/requirements.txt` which appears to be no longer necessary. **Changelog**; Read documentation version and release from the VERSION file.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1546:24,release,released,24,https://qutip.org,https://github.com/qutip/qutip/pull/1546,7,"['configurat', 'release', 'update']","['configuration', 'release', 'released', 'releases', 'update', 'updates']"
Deployability,"**Description**; When I updated correlation to use the data layer in #1997. `spectrum` was moved to its own file, but was left mostly unchanged.; This update `spectrum` to use the data layer,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2050:24,update,updated,24,https://qutip.org,https://github.com/qutip/qutip/pull/2050,2,['update'],"['update', 'updated']"
Deployability,"**Description**; When building the documentation for the action (on locally on my side), we install with `pip`, however with readthedocs, we use manba. Some packages versions are not available on conda-forge, just pypi, causing the rtd build to fall with #2526...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2527:92,install,install,92,https://qutip.org,https://github.com/qutip/qutip/pull/2527,1,['install'],['install']
Deployability,"**Description**; When cython 3 is installed, qutip will run in no cython mode and a warnings will be raised. I also removed the `rhs_generate` function. It was only used in an example in the documentation which no longer do what it says. (See #2202 for my tries in making home made runtime compilation works with cython 3.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2207:34,install,installed,34,https://qutip.org,https://github.com/qutip/qutip/pull/2207,1,['install'],['installed']
Deployability,"**Description**; When merging #1874, the 64 bits version of `intdtype.h` was added. ; But it should have been the 32 bits versions since it's the default version. Adding it to the gitignore would make it impossible to install with build systems not using setup.py (#1815) instead of defaulting to int32. . **Related issues or PRs**; Fix a mistake in #1874",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1886:218,install,install,218,https://qutip.org,https://github.com/qutip/qutip/pull/1886,1,['install'],['install']
Deployability,**Description**; While trying to reproduce #1229. I found that the progress bar would raise an error (`OverflowError: date value out of range`) if `update` was called too often.; Now when the bar goes over 100% it says 0 sec remaining.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2374:148,update,update,148,https://qutip.org,https://github.com/qutip/qutip/pull/2374,1,['update'],['update']
Deployability,"**Description**; With the update of correlation to v5 in #1997, the need for `shift` in `QobjEvo` and `Coefficient` disappeared.; `ShiftCoefficient`, `QobjEvo._insert_time_shift` and related tests are removed. I also restored the correlation tests on windows hoping they are now fast enough to not timeout. **Related issues or PRs**; #1997",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2016:26,update,update,26,https://qutip.org,https://github.com/qutip/qutip/pull/2016,1,['update'],['update']
Deployability,"**Description**; `IntergratorScipylsoda.mcstep` read the integration range from the scipy solver's `rwork`. However `rwork` is initialized to 0 when initializing the state and only take the expected value when the first step in done. Therefore it would fail when starting from time other than `0`. `IntergratorScipyZvode` also used `rwork` in an unsafe way. Fix that and add a test. . **Related issues or PRs**; Similar improvement where first made in https://github.com/qutip/qutip/pull/1710, splitting it to made that PR simpler. **Changelog**; `IntergratorScipylsoda` safe for starting at any time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1880:57,integrat,integration,57,https://qutip.org,https://github.com/qutip/qutip/pull/1880,1,['integrat'],['integration']
Deployability,"**Description**; `Options` and `SolverOptions` are objects that list all available options and pass them a solver. However in v5, with the choice of integrators, the supported options are not fixed. Most integration methods support `""atol""`, but `order` or `beta`, etc. are specific to some methods. SInce new integrators could be added by project such as qutip-cupy, `Options` can no longer be the place to list all supported options. It become little more that a dict. So I propose deprecating it. The documentation of `sesolve`, `mesolve`, etc. now list the options used by the solver and most common ode options and link the the integrator documentation. The class interface has the options property which document the options used by the solver and the integrators have the same. In the online documentation, the integrator api entries only contain the description of the method and the supported options. Since users don't need to call them directly, other methods are hidden and will be included in the dev documentation only. Usage will look like this, for functions:; ```; sesolve(H, psi, tlist, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); ```; and for the class interface:; ```; solver = SeSolver(H, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); solver.run(...); solver.options[""atol""] = 1e-9; solver.run(...) # run with the new tol.; solver.options = {""atol"": 1e-2} # only change the affected items. ; solver.run(...) # Also run with the new tol.; solver.options[""method""] = ""adams"" # reset all ode options, including ""atol"" supported by both.; solver.options = {""method"": ""bdf"", ""atol"": 1e-2} # reset all ode options then apply the new atol ; ```. Inside solvers, options are stored in a `_SolverOptions` which is a dict with frozen keys and feedback (chaging atol will reset the integrator).; ; Some `Intergrator` are slip so one method correspond to one integrator. Otherwise, `method` was an options used by both the solver to know which integr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1955:149,integrat,integrators,149,https://qutip.org,https://github.com/qutip/qutip/pull/1955,6,['integrat'],"['integration', 'integrator', 'integrators']"
Deployability,"**Description**; `Solver` create the integrator at `__init__` instead of in `run` and `start`.; `step` and `run` no longer take an `options` parameter. `solver.options = new_options` will now reset the integrator to use the new options. However changing options will always reset the integrator. **Related issues or PRs**; Similar improvement where first made in #1710, splitting it to made that PR simpler. **Changelog**; Sovlers manage options as a property instead of method's parameter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1879:37,integrat,integrator,37,https://qutip.org,https://github.com/qutip/qutip/pull/1879,3,['integrat'],['integrator']
Deployability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. (but not on retry).; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). - Upload to different artifacts per OS.; - Merge artifacts when downloading.; - Add test that all wheels and source are available before pypi release.; - For test build, built artifacts are listed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2476:118,release,release,118,https://qutip.org,https://github.com/qutip/qutip/pull/2476,2,['release'],['release']
Deployability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. ; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). I also updated cibuildwheel version, we did it in qutip-5.0.X to build wheels for py3.12, but did not push it yet to master. I also merged the jobs to publish or pypi and testpypi, only some environment variables changed and they could get out of synchronization. Lastly I added a check that all wheels are available before uploading to pypi. With 5.0.3's first try, only linux's wheel were published,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477:118,release,release,118,https://qutip.org,https://github.com/qutip/qutip/pull/2477,2,"['release', 'update']","['release', 'updated']"
Deployability,**Description**; pip 22.1 broke support for `oldest-supported-numpy` when using `--no-build-isolation` by complaining that oldest-supported-numpy was not installed. Later versions of pip fixed this check. **Related issues or PRs**; - #1897 was the equivalent PR for dev.major. **Changelog**; Build documentation with latest pip version.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1906:154,install,installed,154,https://qutip.org,https://github.com/qutip/qutip/pull/1906,1,['install'],['installed']
Deployability,"**Description**; refactor with fstring to format string to make code more Pythonic. **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2281:695,update,update,695,https://qutip.org,https://github.com/qutip/qutip/pull/2281,1,['update'],['update']
Deployability,"**Issue**; Currently, to develop qutip from source (e.g., installing from)the installation guide says to do ; ```; python setup.py develop; ```; However, it is [suggested](https://stackoverflow.com/questions/30306099/pip-install-editable-vs-python-setup-py-develop) to use the command; ```; pip -e .[development]; ```; This currently is not supported as there is no `development_requirements.txt` file. Also, in dev mode, one needs to install pytest, otherwise the `qt.run()` fails. If pytest as well as cython numpy and scipy were specified in such file, this should be done automatically. . Additionally, it may be ideal to pin only minor versions with tilde, stuff like `numpy~=1.18.1`, which should update micro releases but not minor. . **Describe the solution you'd like**; Add a `development_requirements.txt` file and in setup add; ```; extras_require={; 'development': set(dev_requirements),; 'test': dev_requirements,; ```; the set option should be needed for how pypi wants it given. . Add tildes pinning.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1263:58,install,installing,58,https://qutip.org,https://github.com/qutip/qutip/issues/1263,6,"['install', 'release', 'update']","['install', 'install-editable-vs-python-setup-py-develop', 'installation', 'installing', 'releases', 'update']"
Deployability,**Update My Binder link to indexipynb**; Update the my binder link like in qutip-notebooks. Maybe @IvanIsCoding can help. One needs just to copy the link there and substitute it in the Readme.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1279:2,Update,Update,2,https://qutip.org,https://github.com/qutip/qutip/issues/1279,2,['Update'],['Update']
Deployability,"++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7""><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>; <li><a href=""https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b""><code>1b12148</code></a> Update ossf/scorecard-action ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:2127,Release,Release,2127,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['Release'],['Release']
Deployability,", but somehow it does not work.; I have never tried to use openmp, so I am completely new to this, so maybe I did not do the right thing, which is common.; qutip.about() shows me the following things:. --------------------. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.5; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.8; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\***\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. --------------------. What I have done so far:; - installed qutip from source following the instructions; --- the ""zspmv_openmp.cpp"" problem is solved; --- everything is installed without errors. - Updated all packages/spyder/python/anaconda/... - installed Visual Studio Build Tools 2019 (2) Version 16.7.7; --- this includes ""C++ Buildtools"" (maybe not important, but also "".NET Desktop-Buildtools"" and "".NET Core-Buuildtools"". - I checked, whether openmp is installed in anaconda powershell prompt via ""conda install -c conda-forge openmp""; --- it shows ""# All requested packages already installed."" So it seems openmp is already installed. It would be a great hel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378:966,Install,Installed,966,https://qutip.org,https://github.com/qutip/qutip/issues/1378,2,['Install'],"['Installation', 'Installed']"
Deployability,", qeye(2)) + tensor(qeye(2), sigmaz()); 5 H = H0; ----> 6 prop = propagator(H, 1.0, c_ops). /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/propagator.py in propagator(H, t, c_op_list, args, options, unitary_mode, parallel, progress_bar, _safe_mode, **kwargs); 240 shape=(N, N), dtype=complex)); 241 output = mesolve(H, rho0, tlist, c_op_list, [], args, options,; --> 242 _safe_mode=False); 243 for k, t in enumerate(tlist):; 244 u[:, n, k] = mat2vec(output.states[k].full()).T. /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 263 raise Exception(""Invalid H type""); 264 ; --> 265 func, ode_args = ss.makefunc(ss, rho0, args, e_ops, options); 266 ; 267 if _safe_mode:. /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in _qobjevo_set(HS, rho0, args, e_ops, opt); 349 # Should be caught earlier in mesolve.; 350 raise ValueError(""rho0 must be a ket, density matrix or superoperator""); --> 351 _test_liouvillian_dimensions(H_td.cte.dims, rho0.dims); 352 return func, (); 353 . /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in _test_liouvillian_dimensions(L_dims, rho_dims); 332 raise ValueError("""".join([; 333 ""incompatible Liouvillian and state dimensions: "",; --> 334 str(L_dims), "" and "", str(rho_dims),; 335 ])); 336 . ValueError: incompatible Liouvillian and state dimensions: [[[2, 2], [2, 2]], [[2, 2], [2, 2]]] and [[4], [4]]; ```. ### Expected Behaviour. In my given input, vectorization of `rho` is not taken into account. However the documentation could use clarification how input must be provided to avoid this error. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.7.11; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1899:2697,Install,Installed,2697,https://qutip.org,https://github.com/qutip/qutip/issues/1899,1,['Install'],['Installed']
Deployability,", rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_matrix to numpy.ndarray; ```. Is it expected? (in this case the doc may be misleading). I tried to trace it down, but could not get any luck for the moment. EDIT: Actually, it seems that in such a case, one has to pass a density matrix and not a state as initial state, and that the liouvillian callback should return a `.data` item.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:2143,integrat,integrate,2143,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Deployability,", which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because I now install _all_ optional dependencies in most runners, so slightly more gets tested than before. Currently there's also a slowdown on several machines because `cvxpy` doesn't build many wheels, and none at all for Linux, on `pip`. I install all our dependencies except BLAS/LAPACK stuff that way, since it's easiest to read out the dependencies like that. We can potentially save some build time (maybe ~3 minutes?) if we install that from conda-forge instead. I also fixed a minor point of how environment variables are read within `setup.py` (in the end I didn't actually use the new behaviour in the action, but I did during testing), and added a warning filter on dnorm tests to account for a deprecated Numpy alias being used within `cvxpy` code. Also of note: this [should allow us to have commits that skip the testing stages](https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/) (though possibly not codeclimate). You should be able to put `[skip ci]` in the commit message to avoid it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:2238,install,install,2238,https://qutip.org,https://github.com/qutip/qutip/pull/1551,2,['install'],['install']
Deployability,",1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. Therefore the expectation value should be time-independent. Using sesolve one obtains a wrong result. There seems to be an error when using state vectors instead of density matrices, as is seen by using the mesolve function instead. . I was not able to pinpoint the error in the code, but I checked the result with essolve and using an initial state vector. This raises an exception: ; > Exception: Operator and state do not have same tensor structure: [2, 2, 2] and [2]. essolve works as intended by using a density matrix instead, which should again indicate that there is some bug when using state vectors. Note however that the essolve bug might not be directly related to the sesolve bug, since essolve seems to work correctly when using a different initial state:; `psi0 = tensor([(basis(2,0) + 0.5*(-1j)**i *basis(2,1)).unit() for i in range(0,N)])`. I am using the newest versions of the necessary libraries: . > QuTiP Version: 4.2.0; > Numpy Version: 1.11.3; > Scipy Version: 1.0.0; > Cython Version: 0.27.3; > Matplotlib Version: 2.0.2; > Python Version: 3.6.4; > Number of CPUs: 4; > BLAS Info: OPENBLAS; > OPENMP Installed: False; > INTEL MKL Ext: False; > Platform Info: Linux (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:3126,Install,Installed,3126,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['Install'],['Installed']
Deployability,- Fixed num_cpus not properly set for multiprocessing.; - Fixed compiler args not recognized by clang.; - Avoid data copy in cy_expect_psi_csr.; - Add ability to reuse seeds [Options(seeds=xxx)].; - Clean up numpy imports.; - Fast reset of scipy zvode integrator and change stepping mode.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264:252,integrat,integrator,252,https://qutip.org,https://github.com/qutip/qutip/pull/264,1,['integrat'],['integrator']
Deployability,"- Moved functions that enhance matplotlib (colormaps, normalizations; etc.) to new module. Module is imported with try-except statement since; functions require matplotlib which may or may not be present.; - Updated wigner_cmap to allow for custom colors that can be defined in; any format acceptable to the Matplotib.colors.ColorConverter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/249:208,Update,Updated,208,https://qutip.org,https://github.com/qutip/qutip/pull/249,1,['Update'],['Updated']
Deployability,- Remove dependence on networkx for graph_degree test.; - Add test to check list input for ntraj in mcsolver.; - Added fidelity and trace distance tests.; - Shorten names of tests that are longer than 80 chars.; - Updated installation and release notes.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/280:214,Update,Updated,214,https://qutip.org,https://github.com/qutip/qutip/pull/280,3,"['Update', 'install', 'release']","['Updated', 'installation', 'release']"
Deployability,"- Remove the README.txt for CPC from the repository: only needed for CPC submission, and no need to keep it here; - update meta info in debial/control",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/186:116,update,update,116,https://qutip.org,https://github.com/qutip/qutip/pull/186,1,['update'],['update']
Deployability,- This is Py3 as to not avoid conflicts with the built in Python.; - Installs master branch of qutip.; - Shamelessly adapted from the SciPy Superpack.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279:69,Install,Installs,69,https://qutip.org,https://github.com/qutip/qutip/pull/279,1,['Install'],['Installs']
Deployability,"-----------------; TypeError Traceback (most recent call last); Cell In [7], line 1; ----> 1 spre(A)*operator_to_vector(sigmax()). File /gnu/store/7yfab8d83bbkicklsf19cpwi53594gpl-profile/lib/python3.10/site-packages/qutip/qobj.py:555, in Qobj.__mul__(self, other); 552 return out.tidyup() if settings.auto_tidyup else out; 554 else:; --> 555 raise TypeError(""Incompatible Qobj shapes""); 557 elif isinstance(other, np.ndarray):; 558 if other.dtype == 'object':. TypeError: Incompatible Qobj shapes; ```. while in qutip 5.0.0a1. ```; In [3]: spre(A); Out[3]: ; Quantum object: dims=[[[3], [2]], [[3], [2]]], shape=(9, 6), type='super', isherm=False; Qobj data =; [[1. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 1. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 1. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]]; ```. So at the very least the behavior of spre has changed for nonsquare operators. I haven't installed the master branch to see what the current behavior is there but if I'm reading [this commit](https://github.com/qutip/qutip/commit/8d6883da7c373dc65fc3adb88b74c2b27e350db6#diff-53b46f507cc9fff2a9bd96162758693033d4d57ad7e06ea2b58ad3dcee2205d1) correctly, then it appears as though the master branch will just throw a `ValueError(""Can't create and identity like a non square matrix."")`. From searching throw past issues, it looks like these are the relevant pull requests:; - https://github.com/qutip/qutip/pull/1098; - https://github.com/qutip/qutip/pull/1491. For `sprepost` for rectangular operators, it's clear that the expected behavior should correspond to a supoperator taking density matrices in an input hilbert space to one in a potentially different dimensional output hilbert space. However, I think that it's not completely clear what behavior one should expect of `spre` (and `spost`) for rectangular operators. One potentially sensible behavior would be to view `spre` and `spost` as special cases of `sprepost` where one uses the ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2171:2145,install,installed,2145,https://qutip.org,https://github.com/qutip/qutip/issues/2171,1,['install'],['installed']
Deployability,"-based-time-dependence), but removing the collapse operators and multiplying the constant hamiltonian with a very small value (and changing the time vector accordingly). More specifically, I create two different hamiltonians by multiplying `H0` by 1e-12 and 1e-13 respectively. After computing the `mesolve` for both hamiltonians, one can see that in the second case all values have been set to 0. . ### Code to Reproduce the Bug. ```shell; from qutip import basis, tensor, qeye, destroy, num, mesolve, settings; import numpy as np. settings.auto_tidyup = False. ustate = basis(3, 0); excited = basis(3, 1); ground = basis(3, 2). N = 2 # Set where to truncate Fock state for cavity; sigma_ge = tensor(qeye(N), ground * excited.dag()) # |g><e|; sigma_ue = tensor(qeye(N), ustate * excited.dag()) # |u><e|; a = tensor(destroy(N), qeye(3)); ada = tensor(num(N), qeye(3)). t = np.linspace(-15, 15 * 1e11, 10) # Define time vector; psi0 = tensor(basis(N, 0), ustate) # Define initial state. g = 5 # coupling strength; H0 = -g * (sigma_ge.dag() * a + a.dag() * sigma_ge) # time-independent term; H1 = (sigma_ue.dag() + sigma_ue) # time-dependent term. def H1_coeff(t, args):; return 9 * np.exp(-(t / 5.) ** 2). H_0 = [H0 * 1e-12, [H1, H1_coeff]]; H_1 = [H0 * 1e-13, [H1, H1_coeff]]; output_1 = mesolve(H_0, psi0, t, e_ops=[ada]); output_2 = mesolve(H_1, psi0, t, e_ops=[ada]); print(output_1.expect[0]); print(output_2.expect[0]); ```. ### Code Output. ```shell; [0. 0.48307748 0.87367156 0.3158159 0.03202178 0.64420957; 0.8108019 0.1667205 0.12343592 0.77580413]; [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]; ```. ### Expected Behaviour. The second print should NOT have been all 0s. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.22.3; Scipy Version: 1.8.0; Cython Version: None; Matplotlib Version: 3.5.1; Python Version: 3.10.2; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1831:2213,Install,Installed,2213,https://qutip.org,https://github.com/qutip/qutip/issues/1831,1,['Install'],['Installed']
Deployability,"-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 335, in run_setup; exec(code, locals()); File ""<string>"", line 247, in <module>; File ""<string>"", line 46, in process_options; File ""<string>"", line 130, in _determine_version; AttributeError: module 'packaging.version' has no attribute 'LegacyVersion'; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> See above for output. note: This error originates from a subprocess, and is likely not a problem with pip.; ```. ### Expected Behaviour. Should install `qutip` without errors. ### Your Environment. ```shell; QuTip Version: 4.7.0; Python version: 3.11.0; `packaging` version: 22.0; `pip` version: 22.3.1; ```. ### Additional Context. I explicitly mention Python 3.11 because I failed to replicate the issue on a fresh Python 3.10 environment. . EDIT: Looking deeper into the [qutip built distributions](https://pypi.org/project/qutip/#files), the reason why this is failing only for Python 3.11 is because earlier versions of Python have built distributions, unlike Python 3.11. . This indicates that building the wheel from source is generally broken, which I confirmed by forcing an installation from source on Python 3.10 with; ```bash; pip install qutip --no-cache-dir --no-binary :all:; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:2700,install,install,2700,https://qutip.org,https://github.com/qutip/qutip/issues/2036,3,['install'],"['install', 'installation']"
Deployability,". This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. I don't know if the macOS images will run on the new M1 chips, but if not, there's not much that can be done there until GitHub Actions adds the necessary cross-compilation headers and libraries to their CI. ### Examples. You can see the result of this upload on the testing PyPI server: https://test.pypi.org/project/qutip-jakelishman (version 4.6.0a1 is the current state of `master`). I ran the CI action from my fork, with a temporary commit that changed the server to the testing archive (and the package name). Here's a screenshot of what the deployment screen will look like:. <img width=""1440"" alt=""GitHub Actions screen when triggering the build and deploy action"" src=""https://user-images.githubusercontent.com/5968590/106396051-8e49a980-63fd-11eb-867d-48a5ff2527f9.png"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:3617,update,updated,3617,https://qutip.org,https://github.com/qutip/qutip/pull/1465,3,"['deploy', 'update']","['deploy', 'deployment', 'updated']"
Deployability,". t = 0.0, args = {'op': CSR(shape=(3, 3), nnz=3)}. > ???; E NameError: name 'expect_csr' is not defined. <string>:4: NameError; ======================================================================= short test summary info =======================================================================; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py::test_CoeffOptions; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py::test_advance_use; =============================================== 2 failed, 214 passed, 1 skipped, 5700 deselected, 13 warnings in 1.17s ================================================; ```. (Note that the second failing test only fails because without cython, there is no `cimport`.). ---. If we install filelock, everything works as expected:. ```shell; $ conda install filelock; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	> [1/1] Cythonizing qtcoeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ............................................................................................................................................................... [ 81%]; .......................................s [100%]. ==========",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:7725,install,install,7725,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['install'],['install']
Deployability,...C files in release dists,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/191:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/pull/191,1,['release'],['release']
Deployability,".22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:4426,Update,Update,4426,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['Update'],['Update']
Deployability,".4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incorrect"" environment uses the `accelerate` numpy install, and qutip installed with pip. Each environment has the same `qutip.about()` return string. In reality, my use case is more complex than this, but I managed to boil down the error to faulty matrix diagonlization. I also want to add that I do indeed get a factor of ~4 speedup in pure numpy examples (like those linked in the SE post), so it's only when integrating with QuTiP that something goes awry. It might be the case that there really is some compatibility issue, and using `pip` doesn't really fix anything. I'm mainly wondering whether this behavior is expected, or if there is a correct way of getting QuTiP and the `accelerate` BLAS to work together that I am missing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:1949,install,install,1949,https://qutip.org,https://github.com/qutip/qutip/issues/2273,5,"['install', 'integrat']","['install', 'installed', 'integrating']"
Deployability,".; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pypa/wheel/blob/main/docs/news.rst"">wheel's changelog</a>.</em></p>; <blockquote>; <h1>Release Notes</h1>; <p><strong>UNRELEASED</strong></p>; <ul>; <li>Updated vendored <code>packaging</code> to 22.0</li>; </ul>; <p><strong>0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:1055,install,install,1055,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['install'],['install']
Deployability,".QobjEvo(hamiltonian, args={'jumps': qt.MCSolver.CollapseFeedback()}). result = qt.mcsolve(H, qt.basis(2, 1), tlist,; c_ops=[qt.sigmam()], e_ops=[qt.sigmaz()],; ntraj=2, options={'keep_runs_results': True, 'map': 'serial'}); ```. ### Code Output. ```shell; ##### FIRST TRAJECTORY. 0.0 , []; 2.109452934261477e-12 , []; ...; 0.6212424849699398 , []; 0.6086836025648399 , [(0.6086836025648399, 0)]; ...; 1.6032064128256511 , [(0.6086836025648399, 0)]; 1.6024822039345563 , [(0.6086836025648399, 0), (1.6024822039345563, 0)]; ...; 10.0 , [(0.6086836025648399, 0), (1.6024822039345563, 0), (5.151302705262849, 0)]. ##### SECOND TRAJECTORY. 0.0 , [(0.6086836025648399, 0), (1.6024822039345563, 0), (5.151302705262849, 0)]; 1.0547264671307385e-12 , [(0.6086836025648399, 0), (1.6024822039345563, 0), (5.151302705262849, 0)]; ...; 10.0 , [(0.6086836025648399, 0), (1.6024822039345563, 0), (5.151302705262849, 0)]; ```. ### Expected Behaviour. On the second trajectory, the list of collapses should have been reset to `[]` and then updated during the run of that trajectory. ### Your Environment. ```shell; QuTiP Version: 5.1.0.dev0+d8c6584; Numpy Version: 1.26.3; Scipy Version: 1.12.0; Cython Version: 3.0.8; Matplotlib Version: 3.8.2; Python Version: 3.12.1; Number of CPUs: 20; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. I have tracked the source of the problem as follows:; * The `MCIntegrator` [correctly calls](https://github.com/qutip/qutip/blob/d8c6584ffa74ee40bda88bb44e04ba5d9026bced/qutip/solver/mcsolve.py#L240); ```python; self.collapses = []; self.system._register_feedback(""CollapseFeedback"", self.collapses); ```; at the beginning of every trajectory.; * `_register_feedback` of `QobjEvo` is [defined](https://github.com/qutip/qutip/blob/d8c6584ffa74ee40bda88bb44e04ba5d9026bced/qutip/core/cy/qobjevo.pyx#L465) as follows:; ```python; new_args = {}; for key, feed in self._solver_only_feedback.items():; # [...]; new_args[key] = solv",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2422:1513,update,updated,1513,https://qutip.org,https://github.com/qutip/qutip/issues/2422,1,['update'],['updated']
Deployability,".com/python-pillow/Pillow/issues/7483"">#7483</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ImageMath: Inline <code>isinstance</code> check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7623"">#7623</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Update actions/upload-artifact action to v4 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7619"">#7619</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Import plugins relative to the module <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7576"">#7576</a> [<a href=""https://github.com/deliangyang""><code>@​deliangyang</code></a>]</li>; <li>Translate encoder error codes to strings; deprecate <code>ImageFile.raise_oserror()</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7609"">#7609</a> [<a href=""https://github.com/bgilbert""><code>@​bgilbert</code></a>]</li>; <li>Updated readthedocs to latest version of Python <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7611"">#7611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support reading BC4U and DX10 BC1 images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/6486"">#6486</a> [<a href=""https://github.com/REDxEYE""><code>@​REDxEYE</code></a>]</li>; <li>Optimize ImageStat.Stat.extrema <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7593"">#7593</a> [<a href=""https://github.com/florath""><code>@​florath</code></a>]</li>; <li>Handle pathlib.Path in FreeTypeFont <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7578"">#7578</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use list comprehensions to create transformed lists <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7597"">#7597</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Added suppo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:6801,Update,Updated,6801,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Update'],['Updated']
Deployability,.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/build_src.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/__init__.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/sdist.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/build_scripts.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/bdist_rpm.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/install_clib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/build_clib.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/autodist.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/egg_info.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/install.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/develop.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; copying numpy/distutils/command/install_data.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/command; creating build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/gnu.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/compaq.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/intel.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/none.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/nag.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; copying numpy/distutils/fcompiler/pg.py -> build/lib.macosx-11.0-arm64-3.9/numpy/distutils/fcompiler; co,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:24075,install,install,24075,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install']
Deployability,".py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```. **Additional context**. The first thing to check for is whether plots are being closed. But TestPlot already uses `plt.clf()`. Evidently it is not enough.; Replacing `plt.clf()` with `plt.close('all')` seems to work, allowing tests to be registered as successful without error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:6793,Install,Installed,6793,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,['Install'],"['Installation', 'Installed']"
Deployability,".whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; C",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4091,install,installed,4091,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['install'],['installed']
Deployability,"//github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br /",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:4723,Update,Update,4723,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['Update'],['Update']
Deployability,"/6009"">#6009</a> [radarhere]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.1 (2022-02-03)</h2>; <ul>; <li>; <p>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/4fabec36197735438c80c174d018498be606c46c""><code>4fabec3</code></a> Added release notes for 9.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/02affaa491df37117a7562e6ba6ac52c4c871195""><code>02affaa</code></a> Added delay after opening image with xdg-open</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ca0b58521881b95e47ea49d960d13d1c3dac823d""><code>ca0b585</code></a> Updated formatting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/427221ef5f19157001bf8b1ad7cfe0b905ca8c26""><code>427221e</code></a> In show_file, use os.remove to remove temporary images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c930be0758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/com",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:1934,Update,Update,1934,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['Update'],['Update']
Deployability,"/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > > > cmd_obj.run(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > > > _build_ext.build_ext.run(self); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > > > self.build_extensions(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > > > self.build_extension(ext); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > > > depends=ext.depends); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > > > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > > > raise CompileError, msg; > > > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > > > import numpy as np; > > > ; > > > from qutip import *; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 62, in <module>; > > > qutip.settings.ipython = False; > > > AttributeError: 'module' object has no attribute 'settings'; ###### . This seems similar to the build error in Installation on OS X with Homebrew script error #348. Is this a bug in qutip ? Is there a way to fix this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:5210,Install,Installation,5210,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['Install'],['Installation']
Deployability,"/a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15517,update,updates,15517,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['update'],['updates']
Deployability,"/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status 'done'; Collecting scipy>=1.0; Using cached scipy-1.7.3-1-cp39-cp39-macosx_12_0_arm64.whl (27.0 MB); Collecting pyparsing!=3.0.5,>=2.0.2; Using cached pyparsing-3.0.6-py3-none-any.whl (97 kB); Building wheels for collected packages: numpy; Building wheel for numpy (pyproject.toml): started; Building wheel for numpy (pyproject.toml): finished with status 'error'; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmp8u8pmfcw_in_process.py build_wheel /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmpcrdfx79e; cwd: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; Complete output (881 lines):; Running fr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:1685,Install,Installing,1685,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['Install'],['Installing']
Deployability,"/bin/clang' failed with exit status 1` on Python 3.5. It works fine if I don't to the conversion from the function to the array. The Cython program that is being generated and that fails to compile is this:; ~~~; # This file is generated automatically by QuTiP.; # (C) 2011 and later, QuSTaR. import numpy as np; cimport numpy as np; cimport cython; np.import_array(); cdef extern from ""numpy/arrayobject.h"" nogil:; void PyDataMem_NEW_ZEROED(size_t size, size_t elsize); void PyArray_ENABLEFLAGS(np.ndarray arr, int flags). from qutip.cy.spmatfuncs cimport spmvpy; from qutip.cy.interpolate cimport interp, zinterp; from qutip.cy.math cimport erf; cdef double pi = 3.14159265358979323. include '/Users/goerz/Documents/Programming/github/krotov/.venv/py36/lib/python3.6/site-packages/qutip/cy/complex_math.pxi'. @cython.cdivision(True); @cython.boundscheck(False); @cython.wraparound(False); def cy_td_ode_rhs(; double t,; complex[::1] vec,; complex[::1] data0,int[::1] idx0,int[::1] ptr0,; complex[::1] data1,int[::1] idx1,int[::1] ptr1,; np.ndarray[np.float64_t, ndim=1] _td_array_0):; ; cdef size_t row; cdef unsigned int num_rows = vec.shape[0]; cdef double complex * out = <complex *>PyDataMem_NEW_ZEROED(num_rows,sizeof(complex)); ; spmvpy(&data0[0], &idx0[0], &ptr0[0], &vec[0], 1.0, out, num_rows); spmvpy(&data1[0], &idx1[0], &ptr1[0], &vec[0], (0 if (t > 10.000000) else _td_array_0[int(round(999 * (t/10.000000)))]), out, num_rows); cdef np.npy_intp dims = num_rows; cdef np.ndarray[complex, ndim=1, mode='c'] arr_out = np.PyArray_SimpleNewFromData(1, &dims, np.NPY_COMPLEX128, out); PyArray_ENABLEFLAGS(arr_out, np.NPY_OWNDATA); return arr_out ; ~~~. Program versions are; ~~~; CPython 3.6.7; IPython 7.1.1. qutip 4.3.1; numpy 1.15.4; scipy 1.1.0; cython 0.29. compiler : GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final); system : Darwin; release : 18.0.0; machine : x86_64; processor : i386; CPU cores : 4; interpreter: 64bit; ~~~; I also tried this with Python 3.5 and qutip 4.2",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932:2960,release,release,2960,https://qutip.org,https://github.com/qutip/qutip/issues/932,1,['release'],['release']
Deployability,"/code></a> Backport GHSA-v845-jxx5-vc9f (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3139"">#3139</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8""><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49""><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0""><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3058"">#3058</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa""><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dep",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:4280,Release,Release,4280,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['Release'],['Release']
Deployability,"/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:11479,upgrade,upgrade,11479,https://qutip.org,https://github.com/qutip/qutip/pull/2434,3,['upgrade'],['upgrade']
Deployability,"/h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://githu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:2536,release,releasenotes,2536,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['release'],['releasenotes']
Deployability,"/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 474, in get_fidelity_prenorm; dyn.compute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1421, in compute_evolution; self.tslot_computer.recompute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/tslotcomp.py"", line 299, in recompute_evolution; prop_comp._compute_prop_grad(k, j); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/propcomp.py"", line 272, in _compute_prop_grad; dyn._ensure_decomp_curr(k); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1437, in _ensure_decomp_curr; self._spectral_decomp(k); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1654, in _spectral_decomp; dims=self.dyn_dims); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py"", line 292, in __init__; _tmp = sp.csr_matrix(inpt, dtype=complex, copy=do_copy); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 88, in __init__; self._set_self(self.__class__(coo_matrix(arg1, dtype=dtype))); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/coo.py"", line 191, in __init__; self.row, self.col = M.nonzero(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/base.py"", line 287, in __bool__; raise ValueError(""The truth value of an array with more than one ""; ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). ```. I am using the following QuTiP environment:; QuTiP Version: 4.4.1; Numpy Version: 1.21.0; Scipy Version: 1.4.1; Cython Version: 0.29.15; Matplotlib Version: 3.4.2; Python Version: 3.7.6; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64). Thank you for your help.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617:7067,Install,Installed,7067,https://qutip.org,https://github.com/qutip/qutip/issues/1617,1,['Install'],['Installed']
Deployability,"/redirect.github.com/python-pillow/Pillow/issues/7928"">#7928</a> from python-pillow/lcms</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aeb51cbb169eb3285818ba1390ddf2771d897e6e""><code>aeb51cb</code></a> Merge branch 'main' into lcms</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b""><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2""><code>cac6ffa</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7927"">#7927</a> from python-pillow/imagemath</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c""><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by comment",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:14722,release,release,14722,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['release'],['release']
Deployability,"/versions/miniconda3-latest/envs/qutip_testing_env/bin/python setup.py install); /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m qutip.about; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ~~~. The resulting output is:; ~~~; ...; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+d377c997; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: None; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+; d377c997-py3.7-macosx-10.9-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+d377c997-py3.7-macos; x-10.9-x86_64.egg/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:1483,Install,Installed,1483,https://qutip.org,https://github.com/qutip/qutip/issues/1093,2,['Install'],"['Installation', 'Installed']"
Deployability,"0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:1366,Update,Updated,1366,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Update'],['Updated']
Deployability,"1. _Non-compound Hilbert spaces_: For state `A` on a simple non-compound Hilbert space, we should have `A.ptrace(0) == A` always. This has appeared as something useful in a few users' scripts (see #1239, #1413). This patch fixes the underlying bug in `_ptrace_dense` which caused this to fail (even though the logic should have supported it), and adds fast-paths to the dense and sparse partial trace functions to avoid doing work if all subspaces are being kept. Fix #1239; Fix #1413. 2. _Unsorted selections_: the tracing logic already ignores the order of the selection terms, this just fixes sparse ptrace's `dims` output. Fix #1325",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1414:217,patch,patch,217,https://qutip.org,https://github.com/qutip/qutip/pull/1414,1,['patch'],['patch']
Deployability,"1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy); Using cached ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:2063,install,install,2063,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['install'],['install']
Deployability,"2 improvement to Qobj:; - `inv` method. (close #1102); - faster `ptrace` using dense matrix (taken from #1076); Both dense and sparse method are kept. Default is use sparse method when the matrix density in under 10%. `inv` method also has a sparse and dense version, but sparse is almost always slower. Some improvement to random Qobj to remove edge case. Tests are updated. (Not merge ready yet.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1113:367,update,updated,367,https://qutip.org,https://github.com/qutip/qutip/pull/1113,1,['update'],['updated']
Deployability,"245](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=244) progress_bar, dims=rho0.dims); [246](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=245) res.num_collapse = len(c_ops); [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4878,integrat,integration,4878,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['integrat'],['integration']
Deployability,"2b1bbbe6e329268eaa4c68f0e3eb8867c450acc""><code>62b1bbb</code></a> Change token of None after from keyword</li>; <li><a href=""https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac""><code>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:13665,Update,Update,13665,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability,"3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic spline representation will also be passed in a string-compatible format. In the string-format, the interpolation function is compiled into c-code, and thus is quite fast. This is the default method if no other time-dependent terms are present."" <br/>. If my understanding is incorrect and brmesolve can not accept Cubic_Spline objects, it means it is currently impossible to use this function with non-analytic functions (i.e. only ones we can write out explicitly such as 'exp(-w)'), and seems a major drawback (considering all other solvers in QuTiP are more flexible in what can be accepted to specify time-dependence). **Your Environment**; QuTiP Version: 4.6.2; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.24; Matplotlib Version: 3.1.3; Python Version: 3.7.6; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:2902,Install,Installed,2902,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['Install'],['Installed']
Deployability,3.1 release updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/297:4,release,release,4,https://qutip.org,https://github.com/qutip/qutip/pull/297,2,"['release', 'update']","['release', 'updates']"
Deployability,3.1.0 updates.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/201:6,update,updates,6,https://qutip.org,https://github.com/qutip/qutip/pull/201,1,['update'],['updates']
Deployability,"3.8/site-packages/qutip/correlation.py in spectrum(H, wlist, c_ops, a_op, b_op, solver, use_pinv); 541 ; 542 if solver == ""es"":; --> 543 return _spectrum_es(H, wlist, c_ops, a_op, b_op); 544 elif solver == ""pi"":; 545 return _spectrum_pi(H, wlist, c_ops, a_op, b_op, use_pinv). ~/.local/lib/python3.8/site-packages/qutip/correlation.py in _spectrum_es(H, wlist, c_ops, a_op, b_op); 1185 ; 1186 # correlation; -> 1187 corr_es = expect(a_op, es); 1188 ; 1189 # covariance. ~/.local/lib/python3.8/site-packages/qutip/expect.py in expect(oper, state); 75 ; 76 elif isinstance(oper, Qobj) and isinstance(state, eseries):; ---> 77 return _single_eseries_expect(oper, state); 78 ; 79 elif isinstance(oper, (list, np.ndarray)):. ~/.local/lib/python3.8/site-packages/qutip/expect.py in _single_eseries_expect(oper, state); 130 out = eseries(); 131 ; --> 132 if isoper(state.ampl[0]):; 133 out.rates = state.rates; 134 out.ampl = np.array([expect(oper, a) for a in state.ampl]). IndexError: index 0 is out of bounds for axis 0 with size 0; ```. **Expected behavior**; The expecter behavior is the normal returns of the spectrum, as it happens with other values of coupling. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.3; Scipy Version: 1.4.1; Cython Version: 0.29.21; Matplotlib Version: 3.2.1; Python Version: 3.8.5; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/alberto/.local/lib/python3.8/site-packages/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388:2434,Install,Installed,2434,https://qutip.org,https://github.com/qutip/qutip/issues/1388,2,['Install'],"['Installation', 'Installed']"
Deployability,"4-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```; The codes however run fine. Here's the output from my qutip.about(). ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.dev0+564c987b (with python setup.py install). Error message (then the code runs anyway):; ```; (qutipdev45) nathans-mbp:Downloads nathanshammah$ python fidel.py; /Users/nathanshammah/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error:; 'src/zspmv_o",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:1192,Install,Installed,1192,https://qutip.org,https://github.com/qutip/qutip/issues/1109,2,['Install'],"['Installation', 'Installed']"
Deployability,4.2 release ready,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/732:4,release,release,4,https://qutip.org,https://github.com/qutip/qutip/pull/732,1,['release'],['release']
Deployability,4.3 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889:4,release,release,4,https://qutip.org,https://github.com/qutip/qutip/pull/889,1,['release'],['release']
Deployability,4.6.1 release preparation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1543:6,release,release,6,https://qutip.org,https://github.com/qutip/qutip/pull/1543,1,['release'],['release']
Deployability,"4.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4220,Install,Installing,4220,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['Install'],['Installing']
Deployability,"45f0bd6c45528fa16132f09dd3570a8234""><code>a0824a4</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba""><code>26f9f6c</code></a> Merge pull request <a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a> from rdbende/fix-fromimport-none</li>; <li><a href=""https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc""><code>62b1bbb</code></a> Change token of None after from keyword</li>; <li><a href=""https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac""><code>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. Yo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:13281,Update,Update,13281,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability,"5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.whl size=17905114 sha256=3f461cbc07b40c0de96b709ea20bca495c7ffe1b6060a533a1ab733107c161ab; Stored in directory: /home/jevon/.cache/pip/wheels/3a/4d/bf/1c8e9f7874f26a6510d78790d3ba518c98e674e5771110fe1e; Successf",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1363,install,install,1363,https://qutip.org,https://github.com/qutip/qutip/issues/1246,1,['install'],['install']
Deployability,"517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than explicitly stated, using globbing; - version information is now stored in a single-line file `VERSION`. This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. I don't know if the macOS images will run on the new M1 chips, but if not, there's not much that can be done there until GitHub Actions adds the necessary cross-compilation headers and libraries to their CI. ### Examples. You can see the result of this upload on the testing PyPI server: https://test.pyp",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:2653,release,release,2653,https://qutip.org,https://github.com/qutip/qutip/pull/1429,2,['release'],['release']
Deployability,"62ae327036e3c6658c517b05638""><code>8450366</code></a> Update release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a0afe89990f5ba40a019afc2f22e1b656f8cfd03""><code>a0afe89</code></a> Update test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b""><code>9e08eb8</code></a> Raise ValueError if color specifier is too long</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/bd5cf7db87c6abf7c3510a50170851af5538249f""><code>bd5cf7d</code></a> FLI tests for Oss-fuzz crash.</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/94a0cf1b14f09626c7403af83fa9fef0dfc9bb47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:8465,release,release,8465,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['release'],['release']
Deployability,"63496876 -0.87459622]; E-value: [ 4.46602374 -0.73195683 0.28172253]; E-value: [ 4.559515 0.33078172 -0.64515643]; E-value: [ 4.63877517 -0.37108524 0.82463744]; E-value: [ 5.46271073 -0.15759687 0.500013 ]; E-value: [ 4.60573553 0.42088337 -0.86184648]; E-value: [ 4.85255845 0.72066688 -0.44991021]; E-value: [ 4.95333863 -0.89975462 0.42454032]; E-value: [4.27421937 1.13664227 0.06540866]; E-value: [ 3.62355797 0.92034471 -1.65694779]; ```. **Expected behavior**; The eigenvalues must be non-negative. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.1; Scipy Version: 1.7.0; Cython Version: None; Matplotlib Version: 3.4.2; Python Version: 3.8.11; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\acer\anaconda3\envs\learning_qutip\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. **Additional context**; I separately tried the function '_rand_herm_dense', and it works perfectly fine. I was not able to spot the negative values show up when I keep density > 0.5; rand_herm function given here: https://qutip.org/docs/latest/modules/qutip/random_objects.html#rand_herm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1640:1774,Install,Installed,1774,https://qutip.org,https://github.com/qutip/qutip/issues/1640,2,['Install'],"['Installation', 'Installed']"
Deployability,"6a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5255,update,updates,5255,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['update'],['updates']
Deployability,"758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3737,update,updates,3737,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['update'],['updates']
Deployability,"78 # NOTE: This is slow as can be.; 79 # TODO: Make this sparse. CSR format was causing problems for the [idx, :]; 80 # slicing below.; 81 B = zeros((4 ** nq, 4 ** nq), dtype=complex). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\operators.py:508, in identity(dims); 492 def identity(dims):; 493 """"""Identity operator. Alternative name to :func:`qeye`.; 494; 495 Parameters; (...); 506 Identity operator Qobj.; 507 """"""; --> 508 return qeye(dims). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\operators.py:488, in qeye(dimensions); 452 """"""; 453 Identity operator.; 454; (...); 485; 486 """"""; 487 size, dimensions = _implicit_tensor_dimensions(dimensions); --> 488 return Qobj(fast_identity(size),; 489 dims=dimensions, isherm=True, isunitary=True). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\fastsparse.py:389, in fast_identity(N); 387 ptr = np.arange(N+1, dtype=np.int32); 388 ptr[-1] = N; --> 389 return fast_csr_matrix((data,ind,ptr),shape=(N,N)). File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\fastsparse.py:55, in fast_csr_matrix.__init__(self, args, shape, dtype, copy); 53 self.dtype = complex; 54 self.maxprint = 50; ---> 55 self.format = 'csr'. AttributeError: property 'format' of 'fast_csr_matrix' object has no setter; ```. ### Expected Behaviour. I expected to be able to import qutip :) . ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.11.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.11.4; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. The environment above was generated with `scipy==1.10.1` (which still worked); I've changed the Scipy version to `1.11.0` manually in that list. Forcing `scipy==1.10.1`, resolves the problem. Hence, I'm under the impression that the recent bump of `scipy` to `1.11.0` is causing the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182:3645,Install,Installed,3645,https://qutip.org,https://github.com/qutip/qutip/issues/2182,1,['Install'],['Installed']
Deployability,"7b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19` this is due to the fact that on this platform `oldest-supported-numpy` (from `pyproject.toml`) defaults to 1.17.3, but `setup.cfg` requires `numpy>=1.19`. ### Code to Reproduce the Bug. ```shell; python -m pip install -v --upgrade qutip; ```. ### Code Output. ```shell; Using pip 24.0 from /home/defreule/.local/lib/python3.8/site-packages/pip (python 3.8); Defaulting to user installation because normal site-packages is not writeable; Requirement already satisfied: qutip in /usr/local/lib/python3.8/dist-packages (4.7.3); Link requires a different Python (3.8.10 not in: '>=3.9'): https://files.pythonhosted.org/packages/73/73/abcc185174ac6dbc7965e5aeb9418c163eafda704008ee795ee9cdc75e4a/qutip-5.0.2.tar.gz (from https://pypi.org/simple/qutip/) (requires-python:>=3.9); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-70.0.0-py3-none-any.whl.metadata (5.9 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl.metadata (2.0 kB); INFO: pip is looking at multiple versions of scipy to determine which version is compatible with other requirements. This could take a whil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:1203,install,install,1203,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['install'],['install']
Deployability,"8); sz=qutip.sigmaz(); ez = solver(HH, initial_state, times, e_ops=[sz]).expect[0]. plt.figure(20); plt.clf(); plt.plot(times, ez, "".-b"", label=""sz""). times = np.linspace(0,700, 800); sz=qutip.sigmaz(); ez = solver(HH, initial_state, times, e_ops=[sz]).expect[0]. plt.figure(30); plt.clf(); plt.plot(times, ez, "".-b"", label=""sz""); ```. ### Code Output. ![image](https://user-images.githubusercontent.com/883786/176169606-57e34d9d-0dc1-4c6e-94cf-397d66c39dcd.png). ### Expected Behaviour. The output of the minimal example has oscillations in the first and third case (plot number 10 and 30), but is flat for the second case. . The second case should look like the first and third one, or a warning/exception should be generated indicating a problem. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.0.dev0+7425775; Numpy Version: 1.21.6; Scipy Version: 1.8.0; Cython Version: 0.29.30; Matplotlib Version: 3.5.1; Python Version: 3.10.0; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: c:\projects\misc\qutip\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1945:2239,Install,Installed,2239,https://qutip.org,https://github.com/qutip/qutip/issues/1945,2,['Install'],"['Installation', 'Installed']"
Deployability,"9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-70.0.0-py3-none-any.whl (863 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:3685,install,installed,3685,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['install'],['installed']
Deployability,"912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2487,update,updates,2487,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['update'],['updates']
Deployability,"9e6eee0e9edf010034b63b""><code>d725a9b</code></a> Add Python 3.10 to GitHub Actions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/339ad34c677c98fd9ad008de1d8bbeb9dbf34381""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3120,update,updates,3120,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['update'],['updates']
Deployability,": <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Mer",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1484,release,release,1484,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['release'],['release']
Deployability,":\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 337, in run; self.build_extensions(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 473, in compile; self.initialize(); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 383, in initialize; vc_env = query_vcvarsall(VERSION, plat_spec); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 271, in query_vcvarsall; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module qutip.cy.spmatfuncs failed: ['DistutilsPlatformError: Unable to find vcvarsall.bat\n']. I tried testing to see if it was installed correctly by typing import qutip.testing as qt and I get. Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-3-ae6395ba7937>"", line 1, in <module>; import qutip.testing as qt; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'. I have also tried downloading the file, putting it in the folder Anaconda\pkgs, opening a command window, setting the path and installing it there. I don't get any error messages but I still cannot seem to import QuTiP. What am I doing wrong?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:4271,install,installed,4271,https://qutip.org,https://github.com/qutip/qutip/issues/343,2,['install'],"['installed', 'installing']"
Deployability,":eyes: Some source code analysis tools can help to find opportunities for improving software components.; :thought_balloon: I propose to [increase the usage of augmented assignment statements](https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements ""Augmented assignment statements"") accordingly. Would you like to integrate anything from a transformation result which can be generated by a command like the following?; (:point_right: Please check also for questionable change suggestions because of an evolving search pattern.); ```; lokal$ perl -p -i.orig -0777 -e 's/^(?<indentation>\s+)(?<target>\S+)\s*=\s*\k<target>[ \t]*(?<operator>[+\-%&|^@]|\*\*?|\/\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find ~/Projekte/QuTiP/lokal -name '*.py'); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714:345,integrat,integrate,345,https://qutip.org,https://github.com/qutip/qutip/issues/1714,1,['integrat'],['integrate']
Deployability,"; **The Admin Team leads technical code development and manages directly QuTiP-related activities.** It’s thanks to their work and the broader community that the QuTiP project keeps lively, the software is maintained and the features keep expanding and improving. . **<span style=""text-decoration:underline;"">Tasks</span>**. The admin team is listed on the qutip website and specific areas of competence are shown. Members of the admin team pledge to volunteer to:. - Maintain the project through software release updates and bug fixes (core code development, documentation, notebooks, website, other Github-related things). . **- Make decisions about specific technical issues, features, bugs and pull requests. They are the primary mechanism of guiding the code review process and merging pull requests. This includes closing pull requests or issues that are inactive for long or deemed not relevant. **. - Develop new features in qutip/qutip and qutip/other-libraries. ; - Help keep a steady pace of qutip library releases (e.g., ~2 minor releases/year). ; - Actively participate / respond to the qutip-dev internal forum.; - Help in the Q&A support group, qutip public forum. ; - Volunteer time for remote mentorship.; - Discuss code developments.; - Once a year, on a rotation basis, one admin team member is responsible for drafting a report for the QuTiP board.; - **For each subproject that is not qutip/qutip, at least one admin should actively be watching the repository.**. - If there are new projects that wish to come under the umbrella of qutip/, either one of the existing admins should get involved with the project, or the maintainer/developer of the new project joins the admin team upon a consensus reached by the existing admins. **<span style=""text-decoration:underline;"">Composition</span>**; Admin Team members are Team members with [Owner rights](https://github.com/orgs/qutip/people?query=role%3Aowner#) in QuTiP’s main Github Repository (qutip/qutip) that have been active i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:8144,release,releases,8144,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['release'],['releases']
Deployability,"; >>> ket0 = qutip.basis(2, 0); >>> (ket0.dag() * ket0) ** 2; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_131052/3984076164.py in <module>; ----> 1 (ket0.dag() * ket0) ** 2. ~\Anaconda3\envs\<redacted>\lib\site-packages\qutip\qobj.py in __pow__(self, n, m); 727 """"""; 728 if self.type not in ['oper', 'super']:; --> 729 raise Exception(""Raising a qobj to some power works only for "" +; 730 ""operators and super-operators (square matrices).""); 731 . Exception: Raising a qobj to some power works only for operators and super-operators (square matrices).; ```. **Expected behavior**; A 1 × 1 operator is square, such that exponentiating should act similarly to scalar exponentiation. **Your Environment**; ```. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: None; Matplotlib Version: None; Python Version: 3.9.7; Number of CPUs: 32; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\cgran\Anaconda3\envs\<redcacted>\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1691:1785,Install,Installed,1785,https://qutip.org,https://github.com/qutip/qutip/issues/1691,2,['Install'],"['Installation', 'Installed']"
Deployability,"; [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:5530,integrat,integration,5530,https://qutip.org,https://github.com/qutip/qutip/issues/1896,3,"['Install', 'integrat']","['Installation', 'Installed', 'integration']"
Deployability,"<!-- **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->; **Description**. This PR reduced the qutip import time by setting the logger names explicitly. . **Related issues or PRs**. See #1980 for more details.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1981:616,update,update,616,https://qutip.org,https://github.com/qutip/qutip/pull/1981,1,['update'],['update']
Deployability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**. Return `TypeError` in `sesolve` when the argument `H` is of incorrect type.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1942:617,update,update,617,https://qutip.org,https://github.com/qutip/qutip/pull/1942,1,['update'],['update']
Deployability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**. This PR updates the scipy requirements to version 1.4+. The 1.4 version was released December 2019.; Versions before 1.4 would not have worked with dev.major as an import of functools was missing. With the updated requirements we can remove the version checks in qutip.solve.steadystate which speeds up import times a bit.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1982:617,update,update,617,https://qutip.org,https://github.com/qutip/qutip/pull/1982,4,"['release', 'update']","['released', 'update', 'updated', 'updates']"
Deployability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; Importing qutip takes a long time. On a Windows system import takes almost 4 seconds. The import time can be analyzed with [importtime-waterfall](https://github.com/asottile/importtime-waterfall). A large part of the time is spend in importing external packages (scipy, IPython, matplotilib), but also qutip itself adds to the import time. This PR reduces the import time by setting the logger names in 4 submodules explicitly. ; Benchmark:; ```; python -c ""import time; import matplotlib; import IPython; import scipy; t0=time.time(); import qutip; dt=time.time()-t0; print(f'{dt*1e3:.2f} ms')""; ``` ; Results:; ```; dev.major: 1996.52 m",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1980:617,update,update,617,https://qutip.org,https://github.com/qutip/qutip/pull/1980,1,['update'],['update']
Deployability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; As proposed by @hodgestar, I am splitting #1409 into smaller PRs. This is part 1/3, but contain some change in core that would come later in the Solver PR:. - Add manual cython dispatched function. Used by vern ODE method. - Add `to` to `QobjEvoFunc` and some check. Used by brmesolve rework. - Add a version to string Coefficient, a 'try_parsing' options, partial arguments update and basic cleaning function.; This comes mostly from talk with @jakelishman.; When updating coefficient with new argument, it no longer require all coefficient to be given, but will simply update those available. ; Since those change must overwrite old version of the coefficient, a version tag is added to the coefficient folder and a function to erase the old version. It use it's own `COEFF_VERSION`, not qutip version since I don't expect most qutip update will not touch `coefficient.pyx` so we need not to force us",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461:621,update,update,621,https://qutip.org,https://github.com/qutip/qutip/pull/1461,1,['update'],['update']
Deployability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; Index error in stochastic `smesolve` made `milstein` solver with `heterodyne` method converge only O(0.5) instead of the O(1) expected. This fix it. **Changelog**; Fixed typo in stochastic code affecting `heterodyne` detection efficiency.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1283:621,update,update,621,https://qutip.org,https://github.com/qutip/qutip/pull/1283,1,['update'],['update']
Deployability,"</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/34aebc2824cf8c2bdbe19040b82f98f18557c8ba""><code>34aebc2</code></a> MAINT: Update 1.21.0-notes.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/493b64bfe9c5396498325b87e5e80e1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/07d7e72ab6880c05b5fdd98482cf88982e778393""><code>07d7e72</code></a> MAINT: Remove accidentally created directory.</li>; <li><a href=""https://github.com/numpy/numpy/commit/032fca5e2e9749b152ec56153f476e05efdff287""><code>032fca5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19280"">#19280</a> from charris/backport-19277</li>; <li><a href=""https://github.com/numpy/numpy/commit/7d25b81025a50cc0368f5727c65e875ca769469a""><code>7d25b81</code></a> BUG: Fix refcount leak in ResultType</li>; <li><a href=""https://github.com/numpy/numpy/commit/fa5754e8c159a37fcd9345df261cf82821088ea0""><code>fa5754e</code></a> BUG: Add missing DECREF in new path</li>; <li><a href=""https://github.com/numpy/numpy/commit/61127bb4d46d523b699da1b63abaa5035670da27""><code>61127bb</code></a> Merge pull request <a href=""https://github-redirect.depen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:2829,Update,Update,2829,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['Update'],['Update']
Deployability,"</ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c""><code>e34d346</code></a> Updated order</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0""><code>a62f240</code></a> 10.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35""><code>d50250d</code></a> Added release notes for 10.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056""><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](htt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:12084,Update,Updated,12084,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Updated']
Deployability,"<code>@​radarhere</code></a>]</li>; <li>Corrected error code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7177"">#7177</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use &quot;not in&quot; <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7174"">#7174</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only call text_layout once in getmask2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7206"">#7206</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed calling putpalette() on L and LA images before load() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7187"">#7187</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused INT64 definition <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7180"">#7180</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Updated xz to 5.4.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7136"">#7136</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed saving TIFF multiframe images with LONG8 tag types <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7078"">#7078</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not set size unnecessarily if image fails to open <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7056"">#7056</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7210"">#7210</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused variables <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7205"">#7205</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>F",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:5652,Update,Updated,5652,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Updated']
Deployability,"<li><a href=""https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8""><code>87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""https://redirect.github.com/psf/requests/issues/6416"">#6416</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71""><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=""https://redirect.github.com/psf/requests/issues/6418"">#6418</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7597,update,updates,7597,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['update'],['updates']
Deployability,"= np.linspace(0, 25.0, 1001). # This works; result = qutip.mesolve(H, psi0, t_list, c_ops=c_ops, e_ops=[a]) . # This works and can be used to reproduce the above result. Note the kwarg is c_ops_list instead; # of c_ops as in mesolve.; U = qutip.propagator(H, t_list, c_op_list=c_ops). # This does not work as intended but it gets executed. That is because c_ops in interpreted as being part of kwargs. ; # The biggest issue is that no error is raised.; U1 = qutip.propagator(H, t_list, c_ops=c_ops); ```. **Expected behavior**; Functions in QuTiP should use the same name for the argument `c_ops`. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+5c73300; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/kaladin/Documents/git/qutip/qutip4/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. **Additional context**; See https://groups.google.com/g/qutip/c/GPm8e702HN4 for the full discussion.; There may also be other functions in QuTiP that suffer from the same inconsistency problem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1716:2479,Install,Installed,2479,https://qutip.org,https://github.com/qutip/qutip/issues/1716,2,['Install'],"['Installation', 'Installed']"
Deployability,"=""https://redirect.github.com/python-pillow/Pillow/issues/7235"">#7235</a>; [radarhere]</p>; </li>; <li>; <p>Use --config-settings instead of deprecated --global-option <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7171"">#7171</a>; [radarhere]</p>; </li>; <li>; <p>Better C integer definitions <a href=""https://redirect.github.com/python-pillow/Pillow/issues/6645"">#6645</a>; [Yay295, hugovk]</p>; </li>; <li>; <p>Fixed finding dependencies on Cygwin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7175"">#7175</a>; [radarhere]</p>; </li>; <li>; <p>Changed grabclipboard() to use PNG instead of JPG compression on macOS <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7219"">#7219</a>; [abey79, radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c""><code>e34d346</code></a> Updated order</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0""><code>a62f240</code></a> 10.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35""><code>d50250d</code></a> Added release notes for 10.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056""><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:11300,Update,Updated,11300,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Updated']
Deployability,"===============""); print(""\nValue of the average_states option: {}."".format(options.average_states)); print(""\nAvailable solver attributes:""); print(solution.__dict__.keys()); print(""\nCheck the type of the avg_states attribute""); print(type(solution.avg_states)); print(""\nThe states have not been averaged over. The shape of the output is {}, with the first dimension labelling the {} trajectories."".format(np.array(solution.states).shape, solution.ntraj)); ```. ### Code Output. ```shell; 10.0%. Run time: 1.02s. Est. time left: 00:00:00:09; 20.0%. Run time: 2.04s. Est. time left: 00:00:00:08; 30.0%. Run time: 3.10s. Est. time left: 00:00:00:07; 40.0%. Run time: 4.10s. Est. time left: 00:00:00:06; 50.0%. Run time: 5.11s. Est. time left: 00:00:00:05; 60.0%. Run time: 6.11s. Est. time left: 00:00:00:04; 70.0%. Run time: 7.19s. Est. time left: 00:00:00:03; 80.0%. Run time: 8.20s. Est. time left: 00:00:00:02; 90.0%. Run time: 9.21s. Est. time left: 00:00:00:01; Total run time: 10.22s; ==========================================; ==========================================. Value of the average_states option: True. Available solver attributes:; dict_keys(['solver', 'times', 'states', 'expect', 'num_expect', 'num_collapse', 'ntraj', 'seeds', 'col_times', 'col_which', 'ss', 'measurement', 'noise', 'traj_states', 'avg_states', 'se']). Check the type of the avg_states attribute; <class 'NoneType'>. The states have not been averaged over. The shape of the output is (500, 172, 50, 1), with the first dimension labelling the 500 trajectories.; ```. ### Expected Behaviour. I expect the states to be averaged over when the average_states option is passed. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.35; Matplotlib Version: 3.7.1; Python Version: 3.10.6; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2216:4113,Install,Installed,4113,https://qutip.org,https://github.com/qutip/qutip/issues/2216,1,['Install'],['Installed']
Deployability,"==========================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ```. I'm unsure what is going on here. I tried reinstalling qutip without any change. Prior I had a lot of errors referring to xcrun but I fixed that by installing xcode. Is there something else I need to get this working?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:2881,install,installing,2881,https://qutip.org,https://github.com/qutip/qutip/issues/1124,1,['install'],['installing']
Deployability,"================================================================; FAILED tests/test_countstat.py::test_dqd_current - AssertionError: ; FAILED tests/test_scheduler.py::test_scheduling_gates3[circuit2 ALAP no shuffle] - assert 4 == 5; FAILED tests/test_steadystate.py::test_driven_cavity[power-gmres] - ValueError: Invalid preconditioning method.; FAILED tests/test_steadystate.py::test_driven_cavity[power-bicgstab] - ValueError: Invalid preconditioning method.; ======================================================== 4 failed, 2845 passed, 120 skipped, 67 deselected, 4 warnings in 130.89s (0:02:10) =========================================================; ```. ### Expected Behaviour. Tests should succeed. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+3ff3f42; Numpy Version: 1.20.3; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: None; Python Version: 3.9.9; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:18033,Install,Installed,18033,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['Install'],"['Installation', 'Installed']"
Deployability,">; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/9c2c2307dd1d6af504e09aac0326d86ee3597a0b""><code>9c2c230</code></a> Release 1.26.18 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3159"">#3159</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:1908,update,updates,1908,https://qutip.org,https://github.com/qutip/qutip/pull/2246,1,['update'],['updates']
Deployability,"></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2494,update,updates,2494,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['update'],['updates']
Deployability,"></p>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting the authority component.</li>; </ul>; <p><strong>If you or your organization rely on urllib3 consider supporting us via <a href=""https://github.com/sponsors/urllib3"">GitHub Sponsors</a></strong></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/main/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.5 (2021-05-26)</h2>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting; the authority component.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d1616473df94b94f0f5ad19d2a6608cfe93b7cdf""><code>d161647</code></a> Release 1.26.5</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec""><code>2d4a3fe</code></a> Improve performance of sub-authority splitting in URL</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2698537d52f8ff1f0bbb1d45cf018b118e91f637""><code>2698537</code></a> Update vendored six to 1.16.0</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/07bed791e9c391d8bf12950f76537dc3c6f90550""><code>07bed79</code></a> Fix deprecation warnings for Python 3.10 ssl module</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d725a9b56bb8baf87c9e6eee0e9edf010034b63b""><code>d725a9b</code></a> Add Python 3.10 to GitHub Actions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/339ad34c677c98fd9ad008de1d8bbeb9dbf34381""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09dd",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:1487,Release,Release,1487,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['Release'],['Release']
Deployability,"@Ericgig @nathanshammah @hodgestar ; Hi. All. I need help with creating PR for the qutip-lattice repo. Not quite sure how to do it separately. This is try 1. The lattice.py and topology.py are moved from qutip/ to qutip/lattice which also contains the qutip/lattice/tests/test_lattice.py with all the test functions for the new functions. Usage examples for the new functions can be found in https://github.com/sbisw002/qutip.lattice-notebooks; You'll know how I imported the module and understand the examples. . I still need to learn how the separate repository can be updated, please help with that.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2014:571,update,updated,571,https://qutip.org,https://github.com/qutip/qutip/pull/2014,1,['update'],['updated']
Deployability,"@ajgpitch @jakelishman,; Moving the discussion we had last week here. #### The `Options` object.; It contains the options used by the solvers:; - Scipy's solver options (`atol`, `method`, ...); - Output (`store_states`, `average_states`, ...); - To deprecate (`rhs_reuse`, `ntraj`, ...). But making the solver objects, I added new base solver (`solve_ivp`, `dop853`) which require new options. Eventually, using `dense` vs `sparse` matrix should also be added somewhere.; So I have a few issues about it:; 1. Increasing number of options being confusing.; 2. Some options are no longer used, or used only in specific solver. `seeds` is used by mcsolve, but the stochastic solver use a `noise` keyword arguments, not the options' value.; 3. No way to change the default. #### `qutip.settings`; It has some installation settings: `has_mkl`, `has_openmp` and some Qobj options, `auto_herm`, `auto_tidyup_atol`.; I am adding a new value: `path`, which set the path to where the compiled string code are saved. Here also there is no easy way to change the default. If it was possible, I would have the default matrix data type set here. #### `qutiprc`; File saved in the users home ""~/.qutip/qutiprc"". If qutip is installed with openmp, it contains the matrix size over which it is worth to use the openmp version of spmv.; Under used. I would propose:; - A function in settings that save a new default to qutiprc.; - Something similar for options.; - Splitting the options object into a few ones: output options, solver options, mcsolver options?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1234:805,install,installation,805,https://qutip.org,https://github.com/qutip/qutip/issues/1234,2,['install'],"['installation', 'installed']"
Deployability,"@ajgpitch,. Could you take a look at these patches, with this set I've tried to keep this backwards compatible. With this set, the helper function `create_pulse_optimizer` has been updated to accept the new drifts.; `optimize_pulse` currently creates an array of constant drift amplitudes, adding yet a another `PulseGen` parameter to an already excessive amount seemed counter productive. There are no examples in this patch, that's something I'll look at if wanted. Thanks; Ian",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/396:43,patch,patches,43,https://qutip.org,https://github.com/qutip/qutip/pull/396,3,"['patch', 'update']","['patch', 'patches', 'updated']"
Deployability,@hodgestar @Ericgig @nathanshammah . Updated the functions. I hope all functions work now.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1698:37,Update,Updated,37,https://qutip.org,https://github.com/qutip/qutip/pull/1698,1,['Update'],['Updated']
Deployability,@nathanshammah please can you merge this and redo the sdist after before making the 4.5.1 release.; Thanks. Alex,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1193:90,release,release,90,https://qutip.org,https://github.com/qutip/qutip/pull/1193,1,['release'],['release']
Deployability,"@quantshah spotted that the function visualisation tree was out-of-date in qutip/qutip-doc#63. Thanks for that.; @nathanshammah and I spent some time updating it yesterday, but was quite a rigmarole, and the solution is sub-optimal:; 1. Update modules and functions in `QuTiP_tree_plot/qutip-structure.py`; 2. Run `QuTiP_tree_plot/qutip-structure.py`, which updates `QuTiP_tree_plot/d3_data/qutip.json`; 3.a. Open `QuTiP_tree_plot/qutip_org.html` (this only seemed to work with Firefox browser); 3.b. Print to PDF, save as `guide/doc/qutip_tree.pdf`; 4. Somehow crop `qutip_tree.pdf` and export as `guide/figures/qutip_tree.png`. In general we would like to automate this process, so that when the docs are built, the tree is rebuilt automatically. Task 1: make `qutip_org.html` open in all browsers. Task 2: Auto-generate the `qutip.json` when the API docs are built.; The API function docs are built from `apidoc/functions.rst`. It would be much better if we only needed to add new functions in this doc, and it output the `qutip.json` when it gets built. Task 3: embed `qutip_org.html` in the HTML docs and somehow in the PDF docs; Now it would be much better if when the `guide-overview.rst` were build that the HTML in `qutip_org.html` were embedded in the resulting `guide-overview.html` rather than the PNG as is now. More tricky is how this can be embedded in the PDF docs. Task 4: link to the API docs (this is probably quite tricky); If Task 2 is possible, then I guess it should be possible to add links to the API docs. Task 5: Have something similar to the function tree for classes. All in all this is far to hard to be worth doing just for the QuTiP docs, but I assume that lots of other projects would like to have this function tree in their docs, so you might think someone would add this feature to Sphinx. Maybe someone already has. I would suggest that a good first step would be to investigate this, and if not ask a question on their Github; https://github.com/sphinx-doc/sphinx",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525:237,Update,Update,237,https://qutip.org,https://github.com/qutip/qutip/issues/1525,2,"['Update', 'update']","['Update', 'updates']"
Deployability,"@tehruhn and I found that trying to install qutip from pip with the latest python 3.9 fails. When we run the installations from a fresh conda env (conda 4.8.5) using pip as. ```; pip install qutip; ```; or with conda (using both). ```; conda install -c conda-forge qutip; conda install qutip; ```. we get different errors. The errors do not occur if we use python3.8 while creating the conda environment as. ```; conda create -n py38 python==3.8; ```. Looking at the error it seems there is specification that prohibits python 3.9. @jakelishman @Ericgig any idea about this?. # Steps to reproduce (with conda 4.8.5). ```; conda create -n qutip-test python=3.9; conda activate qutip-test; conda install -c conda-forge qutip; ```. ### Error; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - qutip -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.5,<3.6.0a0|3.4.*']. Your python: python=3.9. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. Note that strict channel priority may have removed packages",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:36,install,install,36,https://qutip.org,https://github.com/qutip/qutip/issues/1371,6,['install'],"['install', 'installations']"
Deployability,"A collection of updates at do the following:; - Restore ability to set Q.isherm, Q.type, and Q.superrep explicitly.; - Q.transform now works properly for arrays directly from sp_eigs (or eig).; - Q.groundstate now checks for degenercy.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/418:16,update,updates,16,https://qutip.org,https://github.com/qutip/qutip/pull/418,1,['update'],['updates']
Deployability,A collection of updates that I can find while going through the docs and code.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/440:16,update,updates,16,https://qutip.org,https://github.com/qutip/qutip/pull/440,1,['update'],['updates']
Deployability,A faster way to get the cdef'ed version of numpy arrays. Only updated the spmatfuncs module since the others have some compatibility issues that should be addressed first.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/576:62,update,updated,62,https://qutip.org,https://github.com/qutip/qutip/pull/576,1,['update'],['updated']
Deployability,"A few proposed changes to internals of the MultiTrajSolver and its subclasses. The changes are (a) to increase consistency between the monte carlo solvers and the stochastic solvers, (b) to reduce repeating code from MultiTrajSolver in the subclasses, (c) to fix some documentation. * Renamed `_MTSystem` and `_MCSystem` into `_MultiTrajRHS` and `_MCRHS` to make them analogous to `_StochasticRHS`. Removed distinction between `.system` and `.rhs` which seemed unnecessary and confusing to me (please tell me if I'm wrong).; * Made `_integrate_one_traj` use the integrator's run method (which doesn't do anything special currently, but I imagine that it could potentially be implemented more efficiently than repeated calls to integrate). Made subclasses use `_run_one_traj`, `_integrate_one_traj` etc of the parent class where possible, instead of duplicating logic.; * The docstring of MCSolver.run was not documenting its parameters, instead referring to the docstring of MultiTrajSolver.run, but MultiTrajSolver is not included in the docs.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2359:562,integrat,integrator,562,https://qutip.org,https://github.com/qutip/qutip/pull/2359,2,['integrat'],"['integrate', 'integrator']"
Deployability,A number of posts have appeared recently on the Google group reporting problems with installing QuTiP on MS Windows 8 or 10 64 bit editions. I have also experienced problems when trying to install on a colleagues laptop. Mainly these seem to be compilation related issues. Is there anything we can do to the code or the instructions to help avoid these issues?. Is there any value in creating an Anaconda install package?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377:85,install,installing,85,https://qutip.org,https://github.com/qutip/qutip/issues/377,3,['install'],"['install', 'installing']"
Deployability,"A representation of a quantum circuit consiting of qubit initialisation (I), controlled NOT gates (C) and measurements (M) with respect to different bases. According to [1], the transformation of a circuit to the ICM representation provides a cannonical form for an exact and fault-tolerant, error corrected circuit needed for optimization prior to final implementation on a hardware model. The algorithm consists of magic qubit initializations, gate teleportation and conditional measurements on qubits. It can be a starting point for topological descriptions of quantum cirucuits important for fault-tolerant quantum computation and can become a part of a pipeline for optimization of topological quantum computing circuits. Check out the game (MeQuanics)[http://www.mequanics.com.au] which aims to do so using crowd sourcing. Several proposals exist for circuit optimizations once we have the topological circuit model (Machine learning, monte carlo search etc) and the ICM model can be a good starting point to get to the initial topological circuit (as far as I could understand). . The algorithm can be roughly described as follows : . ```; Require: Circuit C composed from {Toffoli,CNOT,H,P,T}; Replace the Toffoli gates with their decomposition; Replace the H gates with P V P (already implemented using `resolve_gates`); Implement P V P using gate teleportation outlined in [1]; ```. The final output is a quantum circuit only using qubit initialisations, CNOT and conditional measurements/correction. Once that is complete, maybe another addition can be a conversion to the topological model and visualizations. This is a work in progress. TODO; ------; [ ] Fix code errors; [ ] Write tests; [ ] Update examples and docs. References; ----------; .. [1] arXiv:1509.03962v1 [quant-ph]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603:658,pipeline,pipeline,658,https://qutip.org,https://github.com/qutip/qutip/pull/603,2,"['Update', 'pipeline']","['Update', 'pipeline']"
Deployability,"A user was confused because they were on the readthedocs website, thought that was the main qutip website, and couldn't find the tutorial notebooks. I added a link to the main qutip website and the tutorials section to the landing page of the readthedocs. I also used the opportunity to update the list of admins in several places to match the admin team as listed on the qutip website. Meaning, mostly, I added @AGaliciaMartinez , myself, and @flowerthrower . Let me know in case that isn't okay and I will undo it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2439:287,update,update,287,https://qutip.org,https://github.com/qutip/qutip/pull/2439,1,['update'],['update']
Deployability,"According to pep8 comparisons should be. ```; if Object is None:; ```. instead of . ```; if Object == None:; ```. I'm not 100% sure whether changing the comparisons will break anything so I left it untouched for now. If you have pep8 installed you can check for this error with. ```; pep8 --select=E711 *.py; ```. inside the qutip dir, which currently yields. ./bloch.py:443:17: E711 comparison to None should be 'if cond is None:'; ./bloch_redfield.py:141:16: E711 comparison to None should be 'if cond is None:'; ./bloch_redfield.py:176:14: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:106:10: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:117:13: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:119:16: E711 comparison to None should be 'if cond is not None:'; ./correlation.py:130:14: E711 comparison to None should be 'if cond is None:'; ./correlation.py:180:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:198:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:227:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:257:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:307:13: E711 comparison to None should be 'if cond is None:'; ./eseries.py:230:22: E711 comparison to None should be 'if cond is None:'; ./essolve.py:73:18: E711 comparison to None should be 'if cond is None:'; ./fileio.py:48:17: E711 comparison to None should be 'if cond is None:'; ./fileio.py:141:17: E711 comparison to None should be 'if cond is None:'; ./fileio.py:155:27: E711 comparison to None should be 'if cond is None:'; ./floquet.py:492:24: E711 comparison to None should be 'if cond is None:'; ./floquet.py:651:16: E711 comparison to None should be 'if cond is None:'; ./floquet.py:703:14: E711 comparison to None should be 'if cond is not None:'; ./floquet.py:815:10: E711 comparison to None should be",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/10:234,install,installed,234,https://qutip.org,https://github.com/qutip/qutip/issues/10,1,['install'],['installed']
Deployability,"Add a `Coefficient` object to encapsulate the coefficients of the QobjEvo.; `Coefficient`s replace qobjevo's codegen. Their advantages are; - Coefficient are always 'compiled'. String are compiled to cython code at initialization.; - Have cython decorator: taking the conjugate does no longer require new compilation.; - String coefficient are saved to reuse with basic pattern matching: ""cos(a*t)"" and ""cos( w1 *t )"" will use the same compiled object. This object is compiled once and kept between session.; - Cleaner compilation using `setuptools` instead of a monkey patched `pyximport`.; - `QobjEvo` is always compiled.; - `ObjeEvo` does not need to keep track of type making the code simpler. There are shims to make `Pulse` and qip tests work since they used `QobjEvo.tlist` and `QobjEvo.ops.coeff`.; @BoxiLi, the new QobjEvo can be added even if coefficient's tlist are different, but you cannot get back the tlist and the array from them. Also for _step_func_coeff, before the first time, `Coefficient` return the first value of the array, not 0 as expected in pulse.py.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1336:570,patch,patched,570,https://qutip.org,https://github.com/qutip/qutip/pull/1336,1,['patch'],['patched']
Deployability,"Add a wrapper for function returning `Qobj` to be treated as `QobjEvo`: `QobjEvoFunc`; Wrapped function have access to all method of `QobjEvo` therefore only one version of the code should be sufficient for time dependant problems using both list format and function.; Any callable is considered a function, allowing for class method etc. The new function `qobjevo_maker` can take any valid time dependant quantum object and make it a `QobjEvo` like object. Added wrapper for function using the old `rhs_with_state` format and using no `args`. . Tests for `QobjEvoFunc` have been added but not for `qobjevo_maker`. Solver are not updated to use it yet. @ajgpitch I added it last minute in stochastic, but did not tried it yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1123:630,update,updated,630,https://qutip.org,https://github.com/qutip/qutip/pull/1123,1,['update'],['updated']
Deployability,Add additional unit tests + updated release and install notes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/280:28,update,updated,28,https://qutip.org,https://github.com/qutip/qutip/pull/280,3,"['install', 'release', 'update']","['install', 'release', 'updated']"
Deployability,Add annotate cython files options when installing the module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2130:39,install,installing,39,https://qutip.org,https://github.com/qutip/qutip/pull/2130,1,['install'],['installing']
Deployability,"Add new ODE integration methods:; `vern7`, `vern9` and `diag`. Verner 's methods are high order Runge-Kutta method with variable step size and dense output. (http://people.math.sfu.ca/~jverner/). Having our own qutip's implementation allow the state to be a qutip data-layer, instead of numpy arrays, which could be useful for gpu or auto differentiation. . `diag` method diagonalize a constant system and solve it analytically, similar to what `essolve` did.; The states are numpy arrays since we don't have vectorized functions for our data layer. Benchmark of these method are included with those of #1643.; Verner method tend to be faster than `adams` method for smaller systems and `diag` is also very fast. For a diff with #1643, see https://github.com/Ericgig/qutip/pull/5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644:12,integrat,integration,12,https://qutip.org,https://github.com/qutip/qutip/pull/1644,1,['integrat'],['integration']
Deployability,Add package to Ubuntu 16.04 release channel,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472:28,release,release,28,https://qutip.org,https://github.com/qutip/qutip/issues/472,1,['release'],['release']
Deployability,Add parallelization support for `verN` integrators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2454:39,integrat,integrators,39,https://qutip.org,https://github.com/qutip/qutip/pull/2454,1,['integrat'],['integrators']
Deployability,Add pre release installation instruction,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2080:8,release,release,8,https://qutip.org,https://github.com/qutip/qutip/pull/2080,2,"['install', 'release']","['installation', 'release']"
Deployability,Add release number to 'About this Documentation',MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1546:4,release,release,4,https://qutip.org,https://github.com/qutip/qutip/pull/1546,1,['release'],['release']
Deployability,Add scipy 1.14 support patch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2469:23,patch,patch,23,https://qutip.org,https://github.com/qutip/qutip/pull/2469,1,['patch'],['patch']
Deployability,Add signal check in vern integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2169:25,integrat,integrator,25,https://qutip.org,https://github.com/qutip/qutip/pull/2169,1,['integrat'],['integrator']
Deployability,"Added ARPACK eigensolver, updated power method to use RCM, start from; maximally mixed state, and not recalculate LU factors everytime solver; is called.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/166:26,update,updated,26,https://qutip.org,https://github.com/qutip/qutip/pull/166,1,['update'],['updated']
Deployability,Added changes from master for new release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/732:34,release,release,34,https://qutip.org,https://github.com/qutip/qutip/pull/732,1,['release'],['release']
Deployability,Added packaging to the installation.rst requirements.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715:23,install,installation,23,https://qutip.org,https://github.com/qutip/qutip/pull/1715,1,['install'],['installation']
Deployability,"Added the option to import string to python instead of compiling to cython for QobjEvo.; This is default if no cython, or set manually if cython available. `QobjEvoInstance.use_cython = False`; Added test and updated docstring.; Work in parallel.; Did not do any benchmark yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082:209,update,updated,209,https://qutip.org,https://github.com/qutip/qutip/pull/1082,1,['update'],['updated']
Deployability,"Added transparency values as a parameter to the add methods. **Checklist**; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Adding the option to set point and vector transparency in bloch.py. **Related issues or PRs**; fix #1287 . **Changelog**; added optional transparency alpha value as a parameter in bloch.add_points(), bloch.add_vectors() and bloch.add_states()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1836:226,update,update,226,https://qutip.org,https://github.com/qutip/qutip/pull/1836,1,['update'],['update']
Deployability,"After installing qutip via conda (conda install qutip) on Mac 10.15.1 High Sierra, I ran the testing script using:. >> import qutip.testing as qt ; >> qt.run(). I am getting the following error: . Qobj subtraction ... python(4259,0x119a26dc0) malloc: Incorrect checksum for freed object 0x7fdbb05c5910: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(4259,0x119a26dc0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6. Does anyone know what is causing this, how to fix it, or what kinds of problems it might cause later? Thank you!. Sacha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120:6,install,installing,6,https://qutip.org,https://github.com/qutip/qutip/issues/1120,2,['install'],"['install', 'installing']"
Deployability,"After installing qutip, in order to test qutip installation, I type ""python"" in terminal and then type ""import qutip.testing as qt"", getteing to the following error. import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'qutip'; >>> qt.run(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'qt' is not defined. If anyone can help to solve the problem?; Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391:6,install,installing,6,https://qutip.org,https://github.com/qutip/qutip/issues/1391,2,['install'],"['installation', 'installing']"
Deployability,Also updated the mac hardware_info func.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/393:5,update,updated,5,https://qutip.org,https://github.com/qutip/qutip/pull/393,1,['update'],['updated']
Deployability,"An issue has come when calculating eigenstates with the sparse = True option, which did not happen before. This issue has appeared in two different computers (both Linux), and with fresh installations of qutip. An example that illustrates the issue is:. import qutip as qt; A = qt.tensor(qt.sigmax(),qt.sigmay()); A.eigenstates(sparse = True, eigvals = 1). When this runs, the Kernel dies:. ![Screenshot from 2021-11-02 17-28-16](https://user-images.githubusercontent.com/48872344/139960518-9708a7f9-5f6f-4be3-a5f0-1db498736d9b.png). I'm not sure what the source of the issue is. I have used the sparse=True option many times before without any problem. Any suggestions are appreciated. This is the output of qutip.about() for one of the computers:. QuTiP: Quantum Toolbox in Python; -------------------------------------------------; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.4.3; Python Version: 3.8.12; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/shemian29/anaconda3/envs/Tokyo38/lib/python3.8/site-packages/qutip; -------------------------------------------------; Please cite QuTiP in your publication.; -------------------------------------------------; For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705:187,install,installations,187,https://qutip.org,https://github.com/qutip/qutip/issues/1705,3,"['Install', 'install']","['Installation', 'Installed', 'installations']"
Deployability,Anaconda install on OS X no fortran compiler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/391:9,install,install,9,https://qutip.org,https://github.com/qutip/qutip/issues/391,1,['install'],['install']
Deployability,Applying fix from #660 to the release branch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/662:30,release,release,30,https://qutip.org,https://github.com/qutip/qutip/pull/662,1,['release'],['release']
Deployability,"As before, options can be set as keywork at initialization or when setting items. The default can be changed using context (mainly for tests) or setting items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are f",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1579,integrat,integrator,1579,https://qutip.org,https://github.com/qutip/qutip/pull/1812,2,['integrat'],['integrator']
Deployability,"As discussed in #1673, this PR is an initial draft of what instrument support could look like to get feedback and discussion going on the API and functionality. As such, code style, documentation, unit testing and so forth still need to be addressed (see check list below). **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; This PR adds a new class, `QInstrument`, that wraps a decomposition of a quantum instrument into completely positive trace non-increasing maps (subnormalized channels). This new class can be used to predict measurement outcomes and post-measurement states for a variety of different quantum systems:. ```python; >>> import qutip; >>> H = qutip.operations.hadamard_transform(); >>> ket_plus = H * qutip.basis(2, 0); >>> z_instrument = qutip.QInstrument.basis_measurement(2); >>> (H * z_instrument)(ket_plus); {Seq(0,): Outcome(probability=0.5000000000000002, output_state=Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687:885,update,update,885,https://qutip.org,https://github.com/qutip/qutip/pull/1687,1,['update'],['update']
Deployability,"As of now the preferred way to install qutip on Mac OS X is using MacPorts. . Could you add a formula to [Homebrew](http://brew.sh/), ; https://github.com/mxcl/homebrew ?. By most users, Homebrew is considered better solution than MacPorts. See e.g. here http://apple.stackexchange.com/questions/32724/what-are-pros-and-cons-for-macports-fink-and-homebrew.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62:31,install,install,31,https://qutip.org,https://github.com/qutip/qutip/issues/62,1,['install'],['install']
Deployability,"As raised in #426, QuTiP currently does not install correctly if listed in the requirements.txt for an external project unless the target environment already has numpy installed. This is due to the use of `numpy.distutils` in the current `setup.py`, such that this PR attempts to solve the issue by falling back to setuptools and then distutils when numpy is missing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489:44,install,install,44,https://qutip.org,https://github.com/qutip/qutip/pull/489,2,['install'],"['install', 'installed']"
Deployability,"At present the only known working option that works with the runtime compile features (e.g. string type time-dependence) requires Visual Studio 2015 with C++ options. The community edition is fine, which has no monetary cost, but it does come with a considerable install time and disk space (11GB) cost. . According to the [Python wiki on Windows compilers](https://wiki.python.org/moin/WindowsCompilers) These [build tools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017) are supposed to work, but so far I did not succeed. Not tried in a while, as I don't have very easy access to a Windows machine I can play with. So if someone else wants to give a try, then that would be just great. This issue would ideally be closed after a merging of a PR updating the installation instructions in https://github.com/qutip/qutip-doc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/954:263,install,install,263,https://qutip.org,https://github.com/qutip/qutip/issues/954,2,['install'],"['install', 'installation']"
Deployability,Automate or simplify documentation release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1533:35,release,release,35,https://qutip.org,https://github.com/qutip/qutip/issues/1533,2,['release'],['release']
Deployability,BUG: Minor updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/651:11,update,updates,11,https://qutip.org,https://github.com/qutip/qutip/pull/651,1,['update'],['updates']
Deployability,BUG: Qutip fails to install on Ubuntu 18.04 via pip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1086:20,install,install,20,https://qutip.org,https://github.com/qutip/qutip/issues/1086,1,['install'],['install']
Deployability,BUG: Updates to MKL solver and steady state module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/720:5,Update,Updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/720,1,['Update'],['Updates']
Deployability,"Badges tell some features of a project, such as code coverage, build status, downloads. ; A comprehensive list of badges can be generated on [shields.io](https://shields.io).; Not any badge that can be generated is interesting to be displayed, but some badges might be cool and informative. ; Anaconda provides some of them at https://anaconda.org/conda-forge/qutip/badges. ; Recently the `conda-forge` download counter was added to Readme.md: [![Anaconda-Server Badge](https://anaconda.org/conda-forge/qutip/badges/downloads.svg)](https://anaconda.org/conda-forge/qutip).; It could be interesting to add meaningful badges from shields.io. On https://github.com/badges/shields it is even possible to generate new badges (one could eventually think of badges providing information about the integration with the quantum-tech ecosystem).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983:790,integrat,integration,790,https://qutip.org,https://github.com/qutip/qutip/issues/983,1,['integrat'],['integration']
Deployability,Better handling of scipy ode in integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1734:32,integrat,integrator,32,https://qutip.org,https://github.com/qutip/qutip/pull/1734,1,['integrat'],['integrator']
Deployability,"Better way to permute Qobj. Captured a bug where old permute didn't permute dimensions.; UPDATE: Now works for super objects (including operator-bra); Benchmark (permute 1st and last qubits):; <img width=""520"" alt=""unknown-1"" src=""https://cloud.githubusercontent.com/assets/4971779/26755844/811dbbce-4896-11e7-89b8-c11251b5a550.png"">; <img width=""520"" alt=""unknown-2"" src=""https://cloud.githubusercontent.com/assets/4971779/26755847/87cbe928-4896-11e7-8143-73ddcc77cd36.png"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/701:89,UPDATE,UPDATE,89,https://qutip.org,https://github.com/qutip/qutip/pull/701,1,['UPDATE'],['UPDATE']
Deployability,Bloch update for QuTiP 5.0,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1913:6,update,update,6,https://qutip.org,https://github.com/qutip/qutip/issues/1913,1,['update'],['update']
Deployability,"Boxi and I decided to hold off on 4.6.0 until after the next admin meeting - it was too rushed to finish off all the features, and there are deprecations to be discussed. This is a proposed patch release on the 4.5.X branch that purely adds the fixes for NumPy 1.20. The base of this PR is the code state at 4.5.2, so this PR is a complete list of changes from 4.5.2 to 4.5.3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448:190,patch,patch,190,https://qutip.org,https://github.com/qutip/qutip/pull/1448,2,"['patch', 'release']","['patch', 'release']"
Deployability,Build the documentation PDF either on every commit or as part of deployment.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1858:65,deploy,deployment,65,https://qutip.org,https://github.com/qutip/qutip/issues/1858,1,['deploy'],['deployment']
Deployability,Bumping micro after pypi release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/899:25,release,release,25,https://qutip.org,https://github.com/qutip/qutip/pull/899,1,['release'],['release']
Deployability,"Bumps [babel](https://github.com/python-babel/babel) from 2.9.0 to 2.9.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-babel/babel/releases"">babel's releases</a>.</em></p>; <blockquote>; <h2>Version 2.9.1</h2>; <h1>Bugfixes</h1>; <ul>; <li>The internal locale-data loading functions now validate the name of the locale file to be loaded and only allow files within Babel's data directory. Thank you to Chris Lyne of Tenable, Inc. for discovering the issue!</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-babel/babel/blob/master/CHANGES"">babel's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.9.1</h2>; <p>Bugfixes</p>; <pre><code>; * The internal locale-data loading functions now validate the name of the locale file to be loaded and only; allow files within Babel's data directory. Thank you to Chris Lyne of Tenable, Inc. for discovering the issue!; </code></pre>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-babel/babel/commit/a99fa2474c808b51ebdabea18db871e389751559""><code>a99fa24</code></a> Use 2.9.0's setup.py for 2.9.1</li>; <li><a href=""https://github.com/python-babel/babel/commit/60b33e083801109277cb068105251e76d0b7c14e""><code>60b33e0</code></a> Become 2.9.1</li>; <li><a href=""https://github.com/python-babel/babel/commit/412015ef642bfcc0d8ba8f4d05cdbb6aac98d9b3""><code>412015e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/782"">#782</a> from python-babel/locale-basename</li>; <li><a href=""https://github.com/python-babel/babel/commit/5caf717ceca4bd235552362b4fbff88983c75d8c""><code>5caf717</code></a> Disallow special filenames on Windows</li>; <li><a href=""https://github.com/python-babel/babel/commit/3a700b5b8b53606fd98ef8294a56f9510f7290f8""><code>3a700b5</code></a> Run locale identifiers through <code>o",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:95,Release,Release,95,https://qutip.org,https://github.com/qutip/qutip/pull/1695,3,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [idna](https://github.com/kjd/idna) from 3.4 to 3.7.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/releases"">idna's releases</a>.</em></p>; <blockquote>; <h2>v3.7</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:80,Release,Release,80,https://qutip.org,https://github.com/qutip/qutip/pull/2392,3,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.22.0 to 7.31.1.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/e321e760a4aefbe872e1703b24a19a28f87619c9""><code>e321e76</code></a> release 7.31.1</li>; <li><a href=""https://github.com/ipython/ipython/commit/67ca2b3aa9039438e6f80e3fccca556f26100b4d""><code>67ca2b3</code></a> Merge pull request from GHSA-pq7m-3gw7-gq5x</li>; <li><a href=""https://github.com/ipython/ipython/commit/27943302db129464b33bae8cb6cfa552b52b46c2""><code>2794330</code></a> back to dev</li>; <li><a href=""https://github.com/ipython/ipython/commit/be343e755af76193909f13027d87561b1765b5ae""><code>be343e7</code></a> release 7.31.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/0fcf2c43facb7ba5144cdcc47118aa1e55085c20""><code>0fcf2c4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13428"">#13428</a> from meeseeksmachine/auto-backport-of-pr-13427-on-7.x</li>; <li><a href=""https://github.com/ipython/ipython/commit/b8db9b1371fff1b89d0f058e19a48a4ca7b93c51""><code>b8db9b1</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13427"">#13427</a>: wn 731</li>; <li><a href=""https://github.com/ipython/ipython/commit/7f253dcf7b1c3a791a98d44b0dfc848d62bd27df""><code>7f253dc</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:243,release,release,243,https://qutip.org,https://github.com/qutip/qutip/pull/1780,2,['release'],['release']
Deployability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.31.1 to 8.10.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/15ea1ed5a886d6c19c1cc4856f2cf04a2a547c57""><code>15ea1ed</code></a> release 8.10.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/560ad109197c0f8373865896af369bb3b36fd229""><code>560ad10</code></a> DOC: Update what's new for 8.10 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:243,release,release,243,https://qutip.org,https://github.com/qutip/qutip/pull/2085,3,"['Update', 'release']","['Update', 'release']"
Deployability,"Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>; <blockquote>; <h2>3.1.3</h2>; <p>This is a fix release for the 3.1.x feature branch.</p>; <ul>; <li>Fix for <a href=""https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>; <li>Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:91,Release,Release,91,https://qutip.org,https://github.com/qutip/qutip/pull/2291,4,"['Release', 'release']","['Release', 'release', 'releases']"
Deployability,"Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.3 to 3.1.4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>; <blockquote>; <h2>3.1.4</h2>; <p>This is the Jinja 3.1.4 security release, which fixes security issues and bugs but does not otherwise change behavior and should not result in breaking changes.</p>; <p>PyPI: <a href=""https://pypi.org/project/Jinja2/3.1.4/"">https://pypi.org/project/Jinja2/3.1.4/</a>; Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-4"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-4</a></p>; <ul>; <li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code> greater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces. Regardless of any validation done by Jinja, user input should never be used as keys to this filter, or must be separately validated first. GHSA-h75v-3vvj-5mfj</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.4</h2>; <p>Released 2024-05-05</p>; <ul>; <li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code>; greater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces.; Regardless of any validation done by Jinja, user input should never be used; as keys to this filter, or must be separately validated first.; :ghsa:<code>h75v-3vvj-5mfj</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/dd4a8b5466d8790540c181590b14db4d4d889d57""><code>dd4a8b5</code></a> release version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb""><",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:91,Release,Release,91,https://qutip.org,https://github.com/qutip/qutip/pull/2418,4,"['Release', 'release']","['Release', 'release', 'releases']"
Deployability,"Bumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/numpy/numpy/releases"">numpy's releases</a>.</em></p>; <blockquote>; <h2>v1.21.0</h2>; <h1>NumPy 1.21.0 Release Notes</h1>; <p>The NumPy 1.21.0 release highlights are</p>; <ul>; <li>continued SIMD work covering more functions and platforms,</li>; <li>initial work on the new dtype infrastructure and casting,</li>; <li>universal2 wheels for Python 3.8 and Python 3.9 on Mac,</li>; <li>improved documentation,</li>; <li>improved annotations,</li>; <li>new <code>PCG64DXSM</code> bitgenerator for random numbers.</li>; </ul>; <p>In addition there are the usual large number of bug fixes and other; improvements.</p>; <p>The Python versions supported for this release are 3.7-3.9. Official; support for Python 3.10 will be added when it is released.</p>; <p>:warning: Warning: there are unresolved problems compiling NumPy 1.21.0 with gcc-11.1 .</p>; <ul>; <li>Optimization level <code>-O3</code> results in many wrong warnings when running the tests.</li>; <li>On some hardware NumPy will hang in an infinite loop.</li>; </ul>; <h2>New functions</h2>; <h3>Add PCG64DXSM BitGenerator</h3>; <p>Uses of the PCG64 BitGenerator in a massively-parallel context have; been shown to have statistical weaknesses that were not apparent at the; first release in numpy 1.17. Most users will never observe this weakness; and are safe to continue to use PCG64. We have introduced a new; PCG64DXSM BitGenerator that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:90,Release,Release,90,https://qutip.org,https://github.com/qutip/qutip/pull/1767,7,"['Release', 'release']","['Release', 'release', 'released', 'releases']"
Deployability,"Bumps [numpy](https://github.com/numpy/numpy) from 1.21.0 to 1.22.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/numpy/numpy/releases"">numpy's releases</a>.</em></p>; <blockquote>; <h2>v1.22.0</h2>; <h1>NumPy 1.22.0 Release Notes</h1>; <p>NumPy 1.22.0 is a big release featuring the work of 153 contributors; spread over 609 pull requests. There have been many improvements,; highlights are:</p>; <ul>; <li>Annotations of the main namespace are essentially complete. Upstream; is a moving target, so there will likely be further improvements,; but the major work is done. This is probably the most user visible; enhancement in this release.</li>; <li>A preliminary version of the proposed Array-API is provided. This is; a step in creating a standard collection of functions that can be; used across application such as CuPy and JAX.</li>; <li>NumPy now has a DLPack backend. DLPack provides a common interchange; format for array (tensor) data.</li>; <li>New methods for <code>quantile</code>, <code>percentile</code>, and related functions. The; new methods provide a complete set of the methods commonly found in; the literature.</li>; <li>A new configurable allocator for use by downstream projects.</li>; </ul>; <p>These are in addition to the ongoing work to provide SIMD support for; commonly used functions, improvements to F2PY, and better documentation.</p>; <p>The Python versions supported in this release are 3.8-3.10, Python 3.7; has been dropped. Note that 32 bit wheels are only provided for Python; 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of; Ubuntu, Fedora, and other Linux distributions dropping 32 bit support.; All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix; the occasional problems encountered by folks using truly huge arrays.</p>; <h2>Expired deprecations</h2>; <h3>Deprecated numeric style dtype strings have been removed</h3>; <p>Using the strings <code>&quot;Bytes0&",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:90,Release,Release,90,https://qutip.org,https://github.com/qutip/qutip/pull/1940,6,"['Release', 'release']","['Release', 'release', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 10.0.1 to 10.2.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>10.2.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a> [<a href=""https://github.com/bgilbert""><code>@​bgilbert</code></a>]</li>; <li>Trim negative glyph offsets in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Removed unnecessary &quot;pragma: no cover&quot; <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7668"">#7668</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Trim glyph size in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7669"">#7669</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix loading IPTC images and update test <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7667"">#7667</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Allow uncompressed TIFF images to be saved in chunks <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7650"">#7650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Concatenate multiple JPEG EXIF markers <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7496"">#7496</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed IPTC tile tuple to match other plugins <a href=""https://redirect.github",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:100,Release,Release,100,https://qutip.org,https://github.com/qutip/qutip/pull/2302,5,"['Release', 'release']","['Release', 'releasenotes', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 10.2.0 to 10.3.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>10.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>CVE-2024-28219: Use strncpy to avoid buffer overflow <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7928"">#7928</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use <code>functools.lru_cache</code> for <code>hopper()</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7912"">#7912</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Raise ValueError if seeking to greater than offset-sized integer in TIFF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7883"">#7883</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improve speed of loading QOI images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7925"">#7925</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added RGB to I;16N conversion <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7920"">#7920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add --report argument to <strong>main</strong>.py to omit supported formats <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7818"">#7818</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Added RGB to I;16, I;16L and I;16B conversion <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7918"">#7918</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix editable installation with custom build backend and configurati",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:100,Release,Release,100,https://qutip.org,https://github.com/qutip/qutip/pull/2381,5,"['Release', 'release']","['Release', 'releasenotes', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 8.2.0 to 8.3.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>8.3.2</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html</a></p>; <h2>Security</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF dat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/1654,5,"['Release', 'release']","['Release', 'releasenotes', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.0.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Restrict builtins for ImageMath.eval() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/1760,5,"['Release', 'release']","['Release', 'releasenotes', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.0.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>, <a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a> [radarhere]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.1 (2022-02-03)</h2>; <ul>; <li>; <p>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/1835,5,"['Release', 'release']","['Release', 'releasenotes', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.1 to 9.3.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>; <li>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Acti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/2023,5,"['Release', 'release']","['Release', 'releasenotes', 'releases']"
Deployability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.4.0 to 10.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>10.0.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Updated libwebp to 1.3.2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7395"">#7395</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Updated zlib to 1.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7344"">#7344</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <h2>10.0.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Fixed deallocating mask images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageFont.MAX_STRING_LENGTH <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7244"">#7244</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix Windows build with pyproject.toml <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7230"">#7230</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Do not close provided file handles with libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7199"">#7199</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert to HSV if mode is HSV in getcolor() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7226"">#7226</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:99,Release,Release,99,https://qutip.org,https://github.com/qutip/qutip/pull/2237,9,"['Release', 'Update', 'release']","['Release', 'Updated', 'releasenotes', 'releases']"
Deployability,"Bumps [pygments](https://github.com/pygments/pygments) from 2.14.0 to 2.15.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pygments/pygments/releases"">pygments's releases</a>.</em></p>; <blockquote>; <h2>2.15.0</h2>; <ul>; <li>; <p>Added lexers:</p>; <ul>; <li>Carbon (<a href=""https://redirect.github.com/pygments/pygments/issues/2362"">#2362</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2365"">#2365</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2366"">#2366</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2367"">#2367</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2368"">#2368</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2369"">#2369</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2370"">#2370</a>)</li>; <li>Dax (<a href=""https://redirect.github.com/pygments/pygments/issues/2335"">#2335</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2345"">#2345</a>)</li>; <li>MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/827"">#827</a>)</li>; <li>PostgreSQL Explain (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li>WGSL (WebGPU Shading Language) (<a href=""https://redirect.github.com/pygments/pygments/issues/2386"">#2386</a>)</li>; <li>X++ (<a href=""https://redirect.github.com/pygments/pygments/issues/2339"">#2339</a>)</li>; </ul>; </li>; <li>; <p>Updated lexers:</p>; <ul>; <li>; <p>AMDGPU: Add support for <code>scratch_</code> instructions, the <code>attr*.*</code> argument,; as well as the <code>off</code> modifier (<a href=""https://redirect.github.com/pygments/pygments/issues/2327"">#2327</a>).</p>; </li>; <li>; <p>APDL: Miscellaneous improvements (<a href=""https://redirect.github.com/pygments/pygments/issues/2314"">#2314</a>)</p>; </li>; <li>; <p>bash/tcsh",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:99,Release,Release,99,https://qutip.org,https://github.com/qutip/qutip/pull/2201,3,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [requests](https://github.com/psf/requests) from 2.28.2 to 2.31.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/releases"">requests's releases</a>.</em></p>; <blockquote>; <h2>v2.31.0</h2>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> headers to destination servers when; following HTTPS redirects.</p>; <p>When proxies are defined with user info (<a href=""https://user:pass@proxy:8080"">https://user:pass@proxy:8080</a>), Requests; will construct a <code>Proxy-Authorization</code> header that is attached to the request to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>v2.30.0</h2>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urll",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:94,Release,Release,94,https://qutip.org,https://github.com/qutip/qutip/pull/2164,3,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [requests](https://github.com/psf/requests) from 2.31.0 to 2.32.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/releases"">requests's releases</a>.</em></p>; <blockquote>; <h2>v2.32.0</h2>; <h2>2.32.0 (2024-05-20)</h2>; <h2>🐍 PYCON US 2024 EDITION 🐍</h2>; <p><strong>Security</strong></p>; <ul>; <li>Fixed an issue where setting <code>verify=False</code> on the first request from a; Session will cause subsequent requests to the <em>same origin</em> to also ignore; cert verification, regardless of the value of <code>verify</code>.; (<a href=""https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56"">https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56</a>)</li>; </ul>; <p><strong>Improvements</strong></p>; <ul>; <li><code>verify=True</code> now reuses a global SSLContext which should improve; request time variance between first and subsequent requests. It should; also minimize certificate load time on Windows systems when using a Python; version built with OpenSSL 3.x. (<a href=""https://redirect.github.com/psf/requests/issues/6667"">#6667</a>)</li>; <li>Requests now supports optional use of character detection; (<code>chardet</code> or <code>charset_normalizer</code>) when repackaged or vendored.; This enables <code>pip</code> and other projects to minimize their vendoring; surface area. The <code>Response.text()</code> and <code>apparent_encoding</code> APIs; will default to <code>utf-8</code> if neither library is present. (<a href=""https://redirect.github.com/psf/requests/issues/6702"">#6702</a>)</li>; </ul>; <p><strong>Bugfixes</strong></p>; <ul>; <li>Fixed bug in length detection where emoji length was incorrectly; calculated in the request content-length. (<a href=""https://redirect.github.com/psf/requests/issues/6589"">#6589</a>)</li>; <li>Fixed deserialization bug in JSONDecodeError. (<a href=""https://redirect.github.com/psf/requests/issues/6629"">#6629</a>)</li>; <li>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:94,Release,Release,94,https://qutip.org,https://github.com/qutip/qutip/pull/2434,3,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.14 to 1.26.17.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.17</h2>; <ul>; <li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>; </ul>; <h2>1.26.16</h2>; <ul>; <li>Fixed thread-safety issue where accessing a <code>PoolManager</code> with many distinct origins would cause connection pools to be closed while requests are in progress (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2954"">#2954</a>)</li>; </ul>; <h2>1.26.15</h2>; <ul>; <li>Fix socket timeout value when HTTPConnection is reused (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2645"">urllib3/urllib3#2645</a>)</li>; <li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2899"">urllib3/urllib3#2899</a>)</li>; <li>Fix IDNA handling of 'x80' byte (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2901"">urllib3/urllib3#2901</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/main/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h1>1.26.17 (2023-10-02)</h1>; <ul>; <li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (<code>[#3139](https://github.com/urllib3/urllib3/issues/3139) &lt;https://github.com/urllib3/urllib3/pull/3139&gt;</code>_)</li>; </ul>; <h1>1.26.16 (2023-05-23)</h1>; <ul>; <li>Fixed thread-safety issue where accessing a ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/2236,3,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.17 to 1.26.18.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.18</h2>; <ul>; <li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/main/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h1>1.26.18 (2023-10-17)</h1>; <ul>; <li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/9c2c2307dd1d6af504e09aac0326d86ee3597a0b""><code>9c2c230</code></a> Release 1.26.18 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3159"">#3159</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as lo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/2246,4,"['Release', 'release']","['Release', 'releases']"
Deployability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.18 to 1.26.19.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.19</h2>; <h2>🚀 urllib3 is fundraising for HTTP/2 support</h2>; <p><a href=""https://sethmlarson.dev/urllib3-is-fundraising-for-http2-support"">urllib3 is raising ~$40,000 USD</a> to release HTTP/2 support and ensure long-term sustainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed ha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:98,Release,Release,98,https://qutip.org,https://github.com/qutip/qutip/pull/2458,4,"['Release', 'release']","['Release', 'release', 'releases']"
Deployability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.4 to 1.26.5.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.5</h2>; <p>:warning: <strong>IMPORTANT: urllib3 v2.0 will drop support for Python 2</strong>: <a href=""https://urllib3.readthedocs.io/en/latest/v2-roadmap.html"">Read more in the v2.0 Roadmap</a></p>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting the authority component.</li>; </ul>; <p><strong>If you or your organization rely on urllib3 consider supporting us via <a href=""https://github.com/sponsors/urllib3"">GitHub Sponsors</a></strong></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/main/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.5 (2021-05-26)</h2>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting; the authority component.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d1616473df94b94f0f5ad19d2a6608cfe93b7cdf""><code>d161647</code></a> Release 1.26.5</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec""><code>2d4a3fe</code></a> Improve performance of sub-authority splitting in URL</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2698537d52f8ff1f0bbb1d45cf018b118e91f637""><code>2698537</code></a> Update vendored six to 1.16.0</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/07bed791e9c391d8bf12950f76537dc3c6f90550""><code>07bed79</code></a> Fix deprecation warnings for Py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:96,Release,Release,96,https://qutip.org,https://github.com/qutip/qutip/pull/1563,4,"['Release', 'Update', 'release']","['Release', 'Updated', 'releases']"
Deployability,"Bumps [wheel](https://github.com/pypa/wheel) from 0.37.0 to 0.38.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pypa/wheel/blob/main/docs/news.rst"">wheel's changelog</a>.</em></p>; <blockquote>; <h1>Release Notes</h1>; <p><strong>UNRELEASED</strong></p>; <ul>; <li>Updated vendored <code>packaging</code> to 22.0</li>; </ul>; <p><strong>0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DAT",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:245,Release,Release,245,https://qutip.org,https://github.com/qutip/qutip/pull/2052,3,"['Release', 'Update', 'install']","['Release', 'Updated', 'install']"
Deployability,"By installing qutip via. pip2 install qutip==4.3.1. (I had another problem with qutip 4.4.1 with the python2.7 interpreter) I ran into a problem with cython - several ""Error compiling Cython file"" messages. Here I have cython v. 0.23.4 and the minimum requirement is displayed as 0.21. I guess this minimum requirement should be changed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129:3,install,installing,3,https://qutip.org,https://github.com/qutip/qutip/issues/1129,2,['install'],"['install', 'installing']"
Deployability,"C integer definitions <a href=""https://redirect.github.com/python-pillow/Pillow/issues/6645"">#6645</a>; [Yay295, hugovk]</p>; </li>; <li>; <p>Fixed finding dependencies on Cygwin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7175"">#7175</a>; [radarhere]</p>; </li>; <li>; <p>Changed grabclipboard() to use PNG instead of JPG compression on macOS <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7219"">#7219</a>; [abey79, radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c""><code>e34d346</code></a> Updated order</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0""><code>a62f240</code></a> 10.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35""><code>d50250d</code></a> Added release notes for 10.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056""><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:11606,release,release,11606,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['release'],['release']
Deployability,"CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:12813,Update,Update,12813,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Update']
Deployability,Cannot import qutip after latest scipy release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182:39,release,release,39,https://qutip.org,https://github.com/qutip/qutip/issues/2182,1,['release'],['release']
Deployability,Cannot import qutip after update!,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694:26,update,update,26,https://qutip.org,https://github.com/qutip/qutip/issues/694,1,['update'],['update']
Deployability,Cannot install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:7,install,install,7,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['install'],['install']
Deployability,Change tests/test_metrics.py so that only dnorm tests are skipped if cvxpy is not installed,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1704:82,install,installed,82,https://qutip.org,https://github.com/qutip/qutip/pull/1704,1,['install'],['installed']
Deployability,Changelog update for v4.6.2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1564:10,update,update,10,https://qutip.org,https://github.com/qutip/qutip/pull/1564,1,['update'],['update']
Deployability,Changelog updates for v4.6.2.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1564:10,update,updates,10,https://qutip.org,https://github.com/qutip/qutip/pull/1564,1,['update'],['updates']
Deployability,"Changing keyword argument for Qobj.expm from bool to str, and adding support for using scpys sparse/dense expm function in addition to the existing qutip implementations. Default choice updated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/184:186,update,updated,186,https://qutip.org,https://github.com/qutip/qutip/pull/184,1,['update'],['updated']
Deployability,Citation generator updated,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/902:19,update,updated,19,https://qutip.org,https://github.com/qutip/qutip/pull/902,1,['update'],['updated']
Deployability,Conda installation of qutip crashes on import,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674:6,install,installation,6,https://qutip.org,https://github.com/qutip/qutip/issues/674,1,['install'],['installation']
Deployability,Consider using pytest xdist in continuous integration,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1267:31,continuous,continuous,31,https://qutip.org,https://github.com/qutip/qutip/issues/1267,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Continuous integration software: Travis CI, CirceCI, etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959:0,Continuous,Continuous,0,https://qutip.org,https://github.com/qutip/qutip/issues/959,2,"['Continuous', 'integrat']","['Continuous', 'integration']"
Deployability,Core update for solver in v5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1407:5,update,update,5,https://qutip.org,https://github.com/qutip/qutip/pull/1407,1,['update'],['update']
Deployability,Core update for solvers.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461:5,update,update,5,https://qutip.org,https://github.com/qutip/qutip/pull/1461,1,['update'],['update']
Deployability,"Currently it's not easy to interrupt the mcsolve solver. Ctrl-C does not work well either because child processes are not killed when the controlling process receive the STOP or KILLL signals. This is especially problematic when using mcsolve from within the IPython notebook, but this problem also occurs when running a program directly from the prompt using the python interpreter. For next release we should try to make interrupting mcsolve a bit smoother.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/21:393,release,release,393,https://qutip.org,https://github.com/qutip/qutip/issues/21,1,['release'],['release']
Deployability,"Currently, _correlation_me_2op_2t calculates <A(t+tau)B(t)> when reverse=True, and <A(t)B(t+tau)>. This is the opposite of what it should be, and causes qutip.correlation.correlation and qutip.correlation.correlation_2op_2t to give incorrect results when using the ""me"" solver. This patch fixes the problem, making the behaviour of _correlation_me_2op_2t consistent with the other qutip.correlation functions and with the documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/27:283,patch,patch,283,https://qutip.org,https://github.com/qutip/qutip/pull/27,1,['patch'],['patch']
Deployability,"Currently, running `make html` produces a `_build/html` directory that is 50MB large. This causes problems with the qutip/qutip.github.io repository, because currently part of our deployment process involves copying this directory in a new folder in this repo every time we do a minor release. The `docs` folder of the website is already 239MB (and `downloads` is another `154M`, but that's a separate problem - we need to start releasing the PDF documentation in GitHub Releases from this repo and hot-linking to fix that), which is already somewhat beyond ""reasonable"" for a website. There are two main problems causing this right now:; 1. we repackage 13MB of static assets every time we rebuild. Some of these are sensible (we _should_ repackage our styles), but we have 9MB of webfonts (we could link to Google's webfonts CDN) and another 0.5MB of jquery and underscore JavaScript libraries that we could also use versioned hotlinks to.; 2. certain images (e.g. `guide-visualization-6.pdf`) are generated as ultra-high resolution PDFs, which takes up a lot of space (4.6MB for that particular one, though it's the worst offender) and also makes a PDF that can choke some of the weaker PDF readers out there. Both of these are quite fixable I think, but may require us patching/intercepting the output of Sphinx. This can be sensibly done within the `Makefile`, but it's a very nontrivial task.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1539:180,deploy,deployment,180,https://qutip.org,https://github.com/qutip/qutip/issues/1539,4,"['Release', 'deploy', 'patch', 'release']","['Releases', 'deployment', 'patching', 'release']"
Deployability,Cython updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/515:7,update,updates,7,https://qutip.org,https://github.com/qutip/qutip/pull/515,1,['update'],['updates']
Deployability,"Dear developers,. I'm failing to install qutip on Ubuntu 18.04 via pip. The error output says:; ```bash; error: invalid command 'bdist_wheel'; ; ----------------------------------------; Failed building wheel for qutip; ```. How can I solve this issue?. Regards. PS: The relevant software versions are; python3 3.6.8; python3-venv 3.6.7; qutip 4.4.1 (The version I tried to install.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1086:33,install,install,33,https://qutip.org,https://github.com/qutip/qutip/issues/1086,2,['install'],['install']
Deployability,"Dear qutip developers,. In the documentation of version 4.5 the c_ops argument is said to support callback functions, however they are not implemented in that version and as far as I can tell neither in the current branch. It would be nice to have this feature added to allow for arbitrary time-dependent Lindbladians to be implemented. There are cases where Lindbladians cannot simply be described as the product of a time-dependent scalar and a time-independent Lindbladian, this is where the callback becomes useful. I envisage a single callback passed to c_ops as being useful, where the user has to manually add multiple decoherence channels. This way, arbitrary data can be passed through the args parameter of the callback to build the operators at a given time step. I believe this would also allow channel cross-correlations to be implemented too. I have hacked my local copy of qutip 4.5 to check this can in principle be done with mesolve, and it has worked. Here is a link to a patch file that shows the changes I made to get this working:; https://pastebin.com/iZCgBbNQ. I am happy to add this functionality properly to a clone and make a pull request.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1254:990,patch,patch,990,https://qutip.org,https://github.com/qutip/qutip/issues/1254,1,['patch'],['patch']
Deployability,Deleted text file containing release notes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/431:29,release,release,29,https://qutip.org,https://github.com/qutip/qutip/pull/431,1,['release'],['release']
Deployability,Docstring updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/516:10,update,updates,10,https://qutip.org,https://github.com/qutip/qutip/pull/516,1,['update'],['updates']
Deployability,Documenation-Bibliography: Watrous link updated,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1840:40,update,updated,40,https://qutip.org,https://github.com/qutip/qutip/pull/1840,1,['update'],['updated']
Deployability,"Document Continuous Variables, Countstat, and Distributions Modules",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1522:9,Continuous,Continuous,9,https://qutip.org,https://github.com/qutip/qutip/issues/1522,1,['Continuous'],['Continuous']
Deployability,Doesn't install matplotlib when installing on windows.; And then produces errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878:8,install,install,8,https://qutip.org,https://github.com/qutip/qutip/issues/878,2,['install'],"['install', 'installing']"
Deployability,"Due to the fact that this flag is hard-coded to the `setup.py`, I am completely unable to install QuTiP to the cluster environment. The only way to overcome it is clone the repo and remove it by hands. Closes #920",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/949:90,install,install,90,https://qutip.org,https://github.com/qutip/qutip/pull/949,1,['install'],['install']
Deployability,During test control.pulseoptim: Hadamard gate (loading config from file) this deprecation warning sometimes happens:; control.pulseoptim: Hadamard gate (loading config from file) ... C:\Users\Paul\A; naconda2\lib\site-packages\qutip\control\loadparams.py:92: DeprecationWarning: Y; ou passed a bytestring as `filenames`. This will not work on Python 3. Use `cp.r; ead_file()` or switch to using Unicode strings across the board.; Reported on pip install of 4.0.1 on macOS; Not able to reproduce on Linux (py2 or py3).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/598:446,install,install,446,https://qutip.org,https://github.com/qutip/qutip/issues/598,1,['install'],['install']
Deployability,ENH: About updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421:11,update,updates,11,https://qutip.org,https://github.com/qutip/qutip/pull/421,1,['update'],['updates']
Deployability,ENH: BR solver updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/789:15,update,updates,15,https://qutip.org,https://github.com/qutip/qutip/pull/789,1,['update'],['updates']
Deployability,ENH: CFLAGS updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/559:12,update,updates,12,https://qutip.org,https://github.com/qutip/qutip/pull/559,1,['update'],['updates']
Deployability,ENH: Collection of minor updates (in progress),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/440:25,update,updates,25,https://qutip.org,https://github.com/qutip/qutip/pull/440,1,['update'],['updates']
Deployability,ENH: Minor updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/673:11,update,updates,11,https://qutip.org,https://github.com/qutip/qutip/pull/673,1,['update'],['updates']
Deployability,ENH: Update `qcircuit` version for LaTeX circuit visualization and consider `Quantikz`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096:5,Update,Update,5,https://qutip.org,https://github.com/qutip/qutip/issues/1096,1,['Update'],['Update']
Deployability,ENH: Update cython aralloc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/576:5,Update,Update,5,https://qutip.org,https://github.com/qutip/qutip/pull/576,1,['Update'],['Update']
Deployability,ENH: Update to Wigner Clenshaw,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/527:5,Update,Update,5,https://qutip.org,https://github.com/qutip/qutip/pull/527,1,['Update'],['Update']
Deployability,ENH: Updated Cython sparse structs,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/641:5,Update,Updated,5,https://qutip.org,https://github.com/qutip/qutip/pull/641,1,['Update'],['Updated']
Deployability,ENH: Use OPENMP for tidyup if installed.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/733:30,install,installed,30,https://qutip.org,https://github.com/qutip/qutip/pull/733,1,['install'],['installed']
Deployability,ENH: contributors update Change log with merged PR,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1055:18,update,update,18,https://qutip.org,https://github.com/qutip/qutip/issues/1055,1,['update'],['update']
Deployability,"ES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3""><code>2444cdd</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> from hugovk/security-samples_per_pixel-sec</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/744f455830871d61a8de0a5e629d4c2e33817cbb""><code>744f455</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/0846bfae48513f2f51ca8547ed3b8954fa501fda""><code>0846bfa</code></a> Add to release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-ve",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:14346,release,release,14346,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['release'],['release']
Deployability,Ensure progress bars don't break on too many update,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2374:45,update,update,45,https://qutip.org,https://github.com/qutip/qutip/pull/2374,2,['update'],['update']
Deployability,Error Pip Install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739:10,Install,Install,10,https://qutip.org,https://github.com/qutip/qutip/issues/739,1,['Install'],['Install']
Deployability,Errors in installation verifying process,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:10,install,installation,10,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['install'],['installation']
Deployability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623:15,integrat,integration,15,https://qutip.org,https://github.com/qutip/qutip/issues/1623,1,['integrat'],['integration']
Deployability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:15,integrat,integration,15,https://qutip.org,https://github.com/qutip/qutip/issues/806,2,['integrat'],['integration']
Deployability,"First remove the completely unnecessary triplicated calls to `_Indexer.single()` by caching the results. An otherwise sensible use of the sparse code would get ruined by vastly over-using the call, which is exactly what the special-case is trying to avoid. Second, fix a buggy line: in `_dimensions_csr_sparse` there used to be the lines (229--230) that's hard to spot in the diff because of the release of the GIL in this commit:; ```python; if n:; out.row_index[index.single(row) + 1] = len; ```; where the assignment should have been `n`, not `len`. `len` is the longest row seen before now, so the first row seen would also be zeroed out by this function. Also, a matrix with some rows having more elements in that others would set the wrong values in later short rows, probably causing a segfault. Release the GIL when we don't need it for iteration - that's often a free speedup in Cython code. Fixes #1382.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1384:396,release,release,396,https://qutip.org,https://github.com/qutip/qutip/pull/1384,2,"['Release', 'release']","['Release', 'release']"
Deployability,Fix bug in `IntergratorScipyZvode` when starting integration at time other than `0`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1880:49,integrat,integration,49,https://qutip.org,https://github.com/qutip/qutip/pull/1880,1,['integrat'],['integration']
Deployability,Fix for Qtrl Qobj integration,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/401:18,integrat,integration,18,https://qutip.org,https://github.com/qutip/qutip/pull/401,1,['integrat'],['integration']
Deployability,Fix for installing on OSX 10.14,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/922:8,install,installing,8,https://qutip.org,https://github.com/qutip/qutip/pull/922,1,['install'],['installing']
Deployability,"Fix handling of ""release"" flag in sdist",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541:17,release,release,17,https://qutip.org,https://github.com/qutip/qutip/pull/1541,1,['release'],['release']
Deployability,Fix specifying of wheel to install during post build verification,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1863:27,install,install,27,https://qutip.org,https://github.com/qutip/qutip/pull/1863,1,['install'],['install']
Deployability,Fix the pipeline after latests changes in #2476. Now distribution is in wheels folder too.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2478:8,pipeline,pipeline,8,https://qutip.org,https://github.com/qutip/qutip/pull/2478,1,['pipeline'],['pipeline']
Deployability,Fix version_table to work without Cython installed,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2110:41,install,installed,41,https://qutip.org,https://github.com/qutip/qutip/pull/2110,1,['install'],['installed']
Deployability,Fix warning at installation from broken link in manifest.in,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1926:15,install,installation,15,https://qutip.org,https://github.com/qutip/qutip/pull/1926,1,['install'],['installation']
Deployability,Floquet rates integration,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961:14,integrat,integration,14,https://qutip.org,https://github.com/qutip/qutip/pull/1961,1,['integrat'],['integration']
Deployability,"For some reason the wheels for scipy has disappeared from the astropy server, so our travis setup fails because installing and building scipy from source takes too long time. Perhaps this will resolve itself at some point, or maybe we have to find an alternative source for a scipy wheel for linux to use on travis.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/298:112,install,installing,112,https://qutip.org,https://github.com/qutip/qutip/issues/298,1,['install'],['installing']
Deployability,Gitter integration for QuTiP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/564:7,integrat,integration,7,https://qutip.org,https://github.com/qutip/qutip/issues/564,1,['integrat'],['integration']
Deployability,Handle change in configuration attributes for numpy 1.22.0,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752:17,configurat,configuration,17,https://qutip.org,https://github.com/qutip/qutip/pull/1752,2,['configurat'],['configuration']
Deployability,"Hard-coding compiler flag `-march=native` in setup.py completely destroys possibility to set up Qutip on heterogeneous cluster. In general, it brings a lot of problems for people that don't have a good experience in debugging ""illegal instruction"" errors, that often happen, if you compile the module on different machine than you use. If you are sure you need optimized build for localhost, you might use; ```; export CFLAGS=""-O3 -march=native""; export CXXFLAGS=""$CFLAGS""; pip install qutip; ```; instead or provide separate option for setup.py script.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/920:478,install,install,478,https://qutip.org,https://github.com/qutip/qutip/issues/920,1,['install'],['install']
Deployability,"Hello Dear community, ; i'm trying to install qutip using the "" pip install qutip "" command on ubuntu 16.04 , however at each time i get this error ""Command python setup.py egg_info failed with error code 1 in /tmp/pip_build"" ; i have tried many versions of ubuntu ( 14, 15 ...) and many tricks in the net ( upgrading pip; upgrading python... ) trying to bypass this problem however all my tries failed..; i'll appreciate any help dear community...; sincerly yours; Amine Ch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739:38,install,install,38,https://qutip.org,https://github.com/qutip/qutip/issues/739,2,['install'],['install']
Deployability,"Hello everyone, I tried to install qutip via pip on windows 10. I got an error stating that building the wheel failed because I didn't have Virtual Studio. I don't want to install that, so I just downloaded the wheel from this site: https://www.lfd.uci.edu/~gohlke/pythonlibs/#qutip; It installed fine, I thought. If I start a python interpreter in the command line, I can import qutip, and its functions work fine as far as I can tell. Now the problem: when I try to run a .py script, I get the error `AttributeError: module 'qutip' has no attribute 'states'`. So for some reason, python can't always locate the package correctly. Other packages work fine though. Does anyone know how to solve this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/839:27,install,install,27,https://qutip.org,https://github.com/qutip/qutip/issues/839,3,['install'],"['install', 'installed']"
Deployability,Hello!!!. I installed python using anaconda on my mac and then installed qutip. When I run the installation test I always get. Fortran mcsolver: False. How can I install the Fortran compiler needed. Thanks. Regards!!. Sebastian,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/391:12,install,installed,12,https://qutip.org,https://github.com/qutip/qutip/issues/391,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Hello, ; I wish to install QuTiP with the INTEL MKL ext. set to True. I have been having issues with this on various laptops (MacBook Pro M1, as well as a Windows i7). I have set below the information I obtained on the Windows i7 machine following various installation attempts in different conda environments. Sometimes I manage for ‘BLAS Info’ to show INTEL MKL, but the ‘INTEL MKL Ext’ flag remains False. It is unclear to me how I should obtain this result, could anyone help me with this issue?. The underlying reason for wanting to have MKL is that it allowed me in the past (on the same machine but with a different conda environment I no longer have access to) to calculate the steady states of much larger Liouvillians than I am now able to. I am unfortunately unable to reproduce this environment. Below you can find the outcomes of various installation processes, each in a new conda environment:. **Attempt 1a:** ; Conda install mkl; conda install numpy; conda install scipy; conda install conda-forge::qutip; **Results:** ; QuTiP Version: 	5.0.3; Numpy Version: 	2.0.0; Scipy Version: 	1.14.0; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.12.4; Number of CPUs: 	12; BLAS Info: 		Generic; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1b:**; Conda install mkl; conda install scipy ; conda install conda-forge::qutip; **Results:**; QuTiP Version: 	5.0.3; Numpy Version: 	1.26.4; Scipy Version: 	 1.10.1; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.10.14; Number of CPUs: 	12; BLAS Info: 		INTEL MKL; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1c:**; Conda install mkl; conda install conda-forge::qutip; **Results**; QuTiP Version: 5.0.3; Numpy Version: 2.0.0; Scipy Version: 1.14.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.12.4; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64). **Attempt 2:** ; Conda install conda-forge::qutip",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496:19,install,install,19,https://qutip.org,https://github.com/qutip/qutip/issues/2496,7,['install'],"['install', 'installation']"
Deployability,"Hello, ; when trying to run the examples from the User Guides in the Bloch-Redfield master equation section; ( http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) I get an error . I'm running the code in a conda environment using ipython on Windows 10, the details of the packages installed at the end of the post. To reproduce the error:; ```; import numpy as np; import matplotlib.pyplot as plt; from qutip import *. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; gamma1 = 0.5; H = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); def ohmic_spectrum(w):; 	if w == 0.0: # dephasing inducing noise; 		return gamma1; 	else: # relaxation inducing noise; 		return gamma1 / 2 * (w / (2 * np.pi)) * (w > 0.0). R, ekets = bloch_redfield_tensor(H, [sigmax()], [ohmic_spectrum]). np.real(R.full()). tlist = np.linspace(0, 15.0, 1000). psi0 = rand_ket(2). e_ops = [sigmax(), sigmay(), sigmaz()]. expt_list = bloch_redfield_solve(R, ekets, psi0, tlist, e_ops). sphere = Bloch(). sphere.add_points([expt_list[0], expt_list[1], expt_list[2]]). sphere.vector_color = ['r']. sphere.add_vectors(np.array([delta, 0, eps0]) / np.sqrt(delta ** 2 + eps0 ** 2)). sphere.make_sphere(). plt.show(). output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]); ```. The code runs fine until the last line which gives the following response:; ```; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-1-79f7f2013969> in <module>; 35 plt.show(); 36; ---> 37 output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]). ~\Anaconda3\envs\qutip-env\lib\site-packages\qutip\bloch_redfield.py in brmesolve(H, psi0, tlist, a_ops, e_ops, c_ops, args, use_secular, sec_cutoff, tol, spectra_cb, options, progress_bar, _safe_mode, verbose); 196; 197 if _safe_mode:; --> 198 _solver_safety_check(H, psi0, a_ops+c_ops, e_ops, args); 199; 200 # check for type (if any) of time-dependent inputs. ~\Anaconda3\envs\qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223:303,install,installed,303,https://qutip.org,https://github.com/qutip/qutip/issues/1223,1,['install'],['installed']
Deployability,"Hello, I posted this issue on the QuTiP Tutorials GitHub repo, but it doesn't look like anyone is monitoring it. I've tried googling, but I only find stuff about making sure Imagemagick and Ghostscript are installed and they both are. I also made sure texlive was installed. When I try to generate a circuit diagram as follows:. > %matplotlib inline; > from qutip import *; > from qutip.qip.models.circuitprocessor import *; > from qutip.qip.models.spinchain import *; > ; > N = 3; > qc = QubitCircuit(N); > ; > qc.add_gate(""CNOT"", targets=[0], controls=[2]); > ; > qc.png; > . I get a stack trace. > FileNotFoundError Traceback (most recent call last); > <ipython-input-2-4489e338191c> in <module>(); > 4 qc.add_gate(""CNOT"", targets=[0], controls=[2]); > 5 ; > ----> 6 qc.png; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit.py in png(self); > 1012 def png(self):; > 1013 from IPython.display import Image; > -> 1014 return Image(self._repr_png_(), embed=True); > 1015 ; > 1016 @property; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit.py in _repr_png_(self); > 1004 ; > 1005 def _repr_png_(self):; > -> 1006 return _latex_compile(self.latex_code(), format=""png""); > 1007 ; > 1008 def _repr_svg_(self):; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); > 60 os.system(""convert -density %s %s.pdf %s.png"" % (100, filename,; > 61 filename)); > ---> 62 with open(""%s.png"" % filename, ""rb"") as f:; > 63 result = f.read(); > 64 else:; > ; > FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'; > . I'm using. My configuration information is as follows:. > Software	Version; > QuTiP	4.1.0; > Numpy	1.11.3; > SciPy	0.18.1; > matplotlib	2.0.0; > Cython	0.25.2; > Number of CPUs	4; > BLAS Info	INTEL MKL; > IPython	5.1.0; > Python	3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00) [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]; > OS	posix [lin",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702:206,install,installed,206,https://qutip.org,https://github.com/qutip/qutip/issues/702,2,['install'],['installed']
Deployability,"Hello,. I'm trying to make ""OPENMP Installed: False"" to ""OPENMP Installed: True"", but somehow it does not work.; I have never tried to use openmp, so I am completely new to this, so maybe I did not do the right thing, which is common.; qutip.about() shows me the following things:. --------------------. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.5; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.8; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\***\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. --------------------. What I have done so far:; - installed qutip from source following the instructions; --- the ""zspmv_openmp.cpp"" problem is solved; --- everything is installed without errors. - Updated all packages/spyder/python/anaconda/... - installed Visual Studio Build Tools 2019 (2) Version 16.7.7; --- this includes ""C++ Buildtools"" (maybe not important, but also "".NET Desktop-Buildtools"" and "".NET Core-Buuildtools"". - I checked, whether openmp is installed in anaconda powershell prompt via ""conda install -c conda-forge openmp""; --- it shows ""# All requested packages alre",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378:35,Install,Installed,35,https://qutip.org,https://github.com/qutip/qutip/issues/1378,2,['Install'],['Installed']
Deployability,"Hello,. I'm using qutip alongside another library, which does something like this:; ```py; import logging; logger = logging.getLogger(); logger.setLevel(logging.DEBUG); ```; Im not entirely sure why it does so, but nevertheless debug messages don't show up anywhere, since the root logger doesn't print anything without it being configured. If you run the above code in Ipython but add `import qutip` before it, `logging.debug(""foo"")` prints to the stderr (without qutip it doesn't). So when I started using the library with qutip, suddenly all debug messages started getting printed to stderr. Apparently, this is somewhat on purpose, by looking at the code [here](https://github.com/qutip/qutip/blob/eff1c3a606cad64b8d16f3232181b0463d65d746/qutip/logging_utils.py#L99). I'm not entirely sure what tho think about that, because as shown above this causes something unexpected. Nevertheless, I thought I could work around this by setting `log_handler = ""null""` in my settings file, but that in turn causes qutip to crash, because the rc loader [expects](https://github.com/qutip/qutip/blob/eff1c3a606cad64b8d16f3232181b0463d65d746/qutip/configrc.py#L97) `log_handler` to be a boolean for some reason. Also, it took me a while to find this, since the `log_handler` option is [not documented](http://qutip.org/docs/latest/guide/guide-settings.html?highlight=log). I'm using python 3.7.4 and QuTiP 4.4.1 installed with pip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156:1401,install,installed,1401,https://qutip.org,https://github.com/qutip/qutip/issues/1156,1,['install'],['installed']
Deployability,"Hello,. I'm using the following system and versions:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details.; QuTiP Version: 4.4.1; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.12; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\migue\Anaconda\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()` ; ```. and I get this error repeatedly when using the `steadystate` function. . ```; OSError Traceback (most recent call last); <ipython-input-3-4ef4797a881f> in <module>; 30 g2_v = []; 31 for p, x in enumerate(Gamma_vec):; ---> 32 j, z = calculate_avg_photons(N, x); 33 print(p); 34 n_avg.append(j). <ipython-input-3-4ef4797a881f> in calculate_avg_photons(N, Gamma); 18 c_ops.append(np.sqrt(rate)*sm.dag()); 19 ; ---> 20 rho = steadystate(H,c_ops); 21 n_cav = expect(a.dag()*a,rho); 22 g2_cav = expect(a.dag()*a.dag()*a*a,rho)/(n_cav**2). ~\Anaconda\lib\site-packages\qutip\steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 288 if (ss_args['solver'] == 'scipy' and ss_args['sparse']) \; 289 or ss_args['solver'] == 'mkl':; --> 290 return _steadystate_direct_sparse(A, ss_args); 291 else:; 292 return _steadystate_direct_dense(A, ss_args). ~\Anaconda\lib\site-packages\qutip\steadystate.py in _steadystate_direct_sparse(L, ss_args)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077:625,Install,Installed,625,https://qutip.org,https://github.com/qutip/qutip/issues/1077,2,['Install'],"['Installation', 'Installed']"
Deployability,"Hello,; I'm the Lead developer of [netket](https://github.com/netket/netket), a jax-based framework for using Machine-Learning techiques to study quantum systems (open and closed). We are finalising the next release and as I am a big fan of extensibility, I would like our two frameworks to coexist and provide a sensible, easy api to work together.; Mainly, what I would like to do is provide an easy-to-use no-documentation-needed to convert NetKet's types to Qutip, so that it becomes easy to use it to check our variational calculations. TLDR: I propose creating and documenting a `__qobj__` interface so that arbitrary objects having this method will support conversion to a QuTiP Qobj. --. NetKet has mainly three types that are concerned: hilbert spaces, operators and variational states. ; Hilbert spaces describe the space every object is defined upon, and can be easily converted to your `dims` format. Operators are used to represent operators and super-operators acting on hilbert spaces. We use a very custom format roughly corresponding to a lazy kronecker product. Those object satisfy the numpy `__array__` interface and can be converted by calling `np.array(netket_operator)` or `np.asarray(netket_operator)`. We can also obtain sparse representations (but there is no nice api to do that, so we simply provide a method `netket_operator.to_sparse()`. Variational states can also be converted to vectors or matrices (kets and density operators) as they also support the `__array__` interface. I would like our users to be able to call `Qobj(netket_operator)` or `Qobj(netket_state)` and obtain the corresponding qutip object. We could, in principle support a `netket_operator.to_qobj()` conversion method, but I am strongly opposed to that as this is an ugly design pattern: a way to construct a `Qobj` already exists, it's `Qobj(...)`, and the simplest-to-use api is, in my opinion, to overload this constructor to perform the conversion.; This is a standard design pattern in Julia, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:208,release,release,208,https://qutip.org,https://github.com/qutip/qutip/issues/1508,1,['release'],['release']
Deployability,"Here is a parallel version of the spmv_csr function that we use almost everywhere. I get quite a bit of speedup as the dimensionality of the system goes above ~500 or so states (depends on the problem though). Here is a plot of the speedup from serial for a spin-chain. ![parallel_spmv](https://cloud.githubusercontent.com/assets/1249193/14974780/82bc2754-10b6-11e6-94cb-35c046be5f97.png). It uses the openmp from cython so the GCC is required. On linux this is fine, but on OSX the GCC needs to come from homebrew or macports as the builtin clang does not support openmp. On Win, my guess is that the intel compiler could be used. Integrating this into the various solvers will be done in the next couple of days.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/470:632,Integrat,Integrating,632,https://qutip.org,https://github.com/qutip/qutip/pull/470,1,['Integrat'],['Integrating']
Deployability,"Hey QiTiP community,; I wanted to make a simple bloch sphere animation, but can only get one image from the save() function.; Only the first .png image has a bloch sphere in it, the others are empty. ; ..............................................................; bloch_0.png; ![bloch_0](https://cloud.githubusercontent.com/assets/8253676/5883346/bca4bdf6-a351-11e4-8d04-9f1ba385a42c.png); ..............................................................; bloch_1.png; ![bloch_3](https://cloud.githubusercontent.com/assets/8253676/5883348/bca8d08a-a351-11e4-88b6-8c97800aedc3.png); ..............................................................; bloch_2.png; ![bloch_2](https://cloud.githubusercontent.com/assets/8253676/5883349/bca9d25a-a351-11e4-8b10-eacea1b7437f.png); ..............................................................; bloch_3.png; ![bloch_1](https://cloud.githubusercontent.com/assets/8253676/5883347/bca637ee-a351-11e4-8495-b5f12557ad6d.png); .............................................................. Here is my simple piece of code mainly coped from the tutorial. ```; import numpy as np; from qutip import *; from scipy import *. b = Bloch(). for i in range(30):; print i; b.add_vectors([np.sin(i),0,np.cos(i)]); b.save(dirc='temp'); ```. I would be glad if someone could help me. ```; >>> about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; Paul D. Nation & Robert J. Johansson. QuTiP Version: 3.1.0.dev-23e5259; Numpy Version: 1.8.2; Scipy Version: 0.14.0; Cython Version: 0.21.1; Matplotlib Version: 1.3.1; Fortran mcsolver: False; scikits.umfpack: False; Python Version: 2.7.8; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python2.7/dist-packages/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/304:1661,Install,Installation,1661,https://qutip.org,https://github.com/qutip/qutip/issues/304,1,['Install'],['Installation']
Deployability,"Hey,. It seems the sigmam() operator incorrectly returns True when tested with isherm. I think this is only an issue in the developer version 3.2.0.dev- (it does not happen with the stable release). The following code reproduces the issue:. ``` python; import qutip as qu. print(""My version:""); print(qu.version.version). mysigmam = qu.basis(2,1) * qu.basis(2,0).dag(); print(""My sigmam:""); print(mysigmam); print(""is hermitian?:""); print(mysigmam.isherm). print(""Qutip sigmam:""); print(qu.operators.sigmam()); print(""is hermitian?:""); print(qu.operators.sigmam().isherm); ```. Which returns, on my machine:. ```; My version:; 3.2.0.dev-; My sigmam:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = False; Qobj data =; [[ 0. 0.]; [ 1. 0.]]; is hermitian?:; False; Qutip sigmam:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0. 0.]; [ 1. 0.]]; is hermitian?:; True; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/482:189,release,release,189,https://qutip.org,https://github.com/qutip/qutip/issues/482,1,['release'],['release']
Deployability,"Hi QuTip team and community! I just installed QuTiP on my Mac and I am very excited to try it out. I started playing with this section of QuTiP User Guide [Plotting on the Bloch Sphere; ](http://qutip.org/docs/4.1/guide/guide-bloch.html), but encountered an error. This code works well if I run it in Python console:; ```; from qutip import *; bloch = Bloch(); bloch.show(); ```; But the following code in Python console shows an error; ```; bloch.save(); ```. ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/qutip/bloch.py"", line 663, in save; '.' + format); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 1834, in savefig; self.canvas.print_figure(fname, **kwargs); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backend_bases.py"", line 2188, in print_figure; self.figure.dpi = dpi; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 436, in _set_dpi; self.set_size_inches(w, h, forward=forward); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 745, in set_size_inches; manager.resize(int(canvasw), int(canvash)); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backends/backend_tkagg.py"", line 540, in resize; self.canvas._tkcanvas.master.geometry(""%dx%d"" % (width, height)); File ""/Users/tilek/miniconda2/lib/python2.7/lib-tk/Tkinter.py"", line 1668, in wm_geometry; return self.tk.call('wm', 'geometry', self._w, newGeometry); _tkinter.TclError: can't invoke ""wm"" command: application has been destroyed; ```. When I try to execute the code from the User Guide as a complete .py Python file (see below) ; it produces first bloch_0.png file where it is supposed to, but then shows the same error.; ```; import numpy as np; from qutip import *; from scipy import *. def qubit_integrate(w, theta, gamma1, gamma2, psi0, tlist):; # operators and the hamiltoni",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796:36,install,installed,36,https://qutip.org,https://github.com/qutip/qutip/issues/796,1,['install'],['installed']
Deployability,"Hi QuTip team,. when I run multiple `mesolve` calculations in parallel using. `enumerate(pool.imap(parallel_calculation, taus))`. I sometimes get the following error. ` ZVODE-- At current T (=R1), MXSTEP (=I1) steps; taken on this call before reaching TOUT; In above message, I1 = 1000; In above message, R1 = 0.9633584757678D+00; D:\...\Anaconda3\lib\site-packages\scipy\integrate\_ode.py:869: UserWarning: zvode: Excess work done on this call. (Perhaps wrong MF.); 'Unexpected istate=%s' % istate))`. Interestingly this only happens sometimes and as far as I can tell not in the single-threaded case...; Any ideas? Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822:372,integrat,integrate,372,https://qutip.org,https://github.com/qutip/qutip/issues/822,1,['integrat'],['integrate']
Deployability,"Hi again,. In the documents [there is an example](http://qutip.org/docs/4.1/guide/guide-bloch.html#animating-with-the-bloch-sphere) of how to do an animation of a Bloch sphere by saving the frames of the movie using a for loop like so:. ```python; b = Bloch(); b.vector_color = ['r']; b.view = [-40,30]; for i in range(len(sx)):; b.clear(); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(dirc='temp'); ```. With `b.clear()` we erase the points and vectors in the image, which is nice for updating the data, but What if I want to update also the attributes of the Bloch sphere?. To give an example let's say that I want the viewing angle of the Bloch sphere to smoothly change throughout the animation. I can define a function like so:. ```python; def bloch_camera_path(t, dt, azim_0, azim_f, elev_0, elev_f):; azim = ((azim_f-azim_0)/dt)*t+azim_0; elev = ((elev_f-elev_0)/dt)*t+elev_0; return [azim, elev]; ```. This function changes the viewing angle across time from the initial `[azim_0, elev_0]` configuration to the final `[azim_f, elev_f]` configuration in a linear manner. So I thought that by doing. ```python; b = Bloch(); b.vector_color = ['r']; for i in range(len(t)):; b.clear(); b.view = bloch_camera_path(t[i], t[-1]-t[0], -80, -70, 45, 40); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(dirc='temp'); ```; My animation would had that change in position of the ""camera"", but the result is just as if `b.view` wouldn't update. The only way I can make this work is by making a new bloch sphere on each iteration and defining all the attributes again and again (which I find highly inconvenient in terms of speed), like so;. ```python; import os. for i in range(len(t)):; b = Bloch(); b.vector_color = ['r']; b.view = bloch_camera_path(t[i], t[-1]-t[0], -80, -70, 45, 40); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(os.getcwd()+'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1106:581,update,update,581,https://qutip.org,https://github.com/qutip/qutip/issues/1106,1,['update'],['update']
Deployability,"Hi devs,. I've been running into an issue installing the most recent dev version. The _blas_info() method is throwing the following error:. ```; Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 26 2016, 10:47:25) ; [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/__init__.py"", line 174, in <module>; import qutip._mkl; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/_mkl/__init__.py"", line 3, in <module>; _set_mkl(); File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/_mkl/utilities.py"", line 47, in _set_mkl; if _blas_info() == 'INTEL MKL':; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/utilities.py"", line 405, in _blas_info; if hasattr(config,'mkl_info') or any('mkl' in lib for lib in blas_info['libraries']):; KeyError: 'libraries'; ```. It seems this method was changed most recently in commit d7bb119 to include a line containing `blas_info['libraries']`. For reference I am doing a basic installation with just numpy (1.11.2), scipy (0.18.1), and cython (0.24.1), and not with any of the fortran MC stuff. I'm using Mac OSX 10.11, and Python 3.5.2. [I've also been able to successfully install using a commit from before this, a31f7fc.] . Please let me know if there is just something I've missed here. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552:42,install,installing,42,https://qutip.org,https://github.com/qutip/qutip/issues/552,3,['install'],"['install', 'installation', 'installing']"
Deployability,"Hi there! You people have done an incredible work with Qutip, but I still think there are many small settings that could be added probably without much effort;. When saving a Bloch sphere. ```python; from qutip import *. b = Bloch(); b.save(dirc = 'temp'); ```. It would be awesome to have a way to specify the resolution of the png image just like in pyplot. Something like this. ```python; b.save(dirc = 'temp', dpi = 600); ```. Not having this option currently forbids these images to be added to conference posters or HD animations since the resolution is too low. Is there any quick workaround for this? I really need to know how to do it if there's a way. ----------------------------------------------; I guess this is a more complicated thing for the next Qutip update since it would be good to not just increase the resolution of the saved image but also the number of polygons making the sphere (which I guess would look smoother when zooming in the image).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1103:770,update,update,770,https://qutip.org,https://github.com/qutip/qutip/issues/1103,1,['update'],['update']
Deployability,"Hi!. I'd like to report an installation issue on CentOS/RHEL platforms. I've tested various Python versions (2.7, 3.4) on both RHEL 6.x and 7.x, and the error is consistent, and happens during compilation of some Cython files. The error is: `ambiguous overloaded method` referring to the `abs()` function, and happens in two different places. Full installation output:; ```; $ pip install qutip; Collecting qutip; Using cached qutip-4.1.0.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef double * col_sum = <double *>PyDataMem_NEW_ZEROED(ncols, sizeof(double)); cdef double max_col = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:27,install,installation,27,https://qutip.org,https://github.com/qutip/qutip/issues/723,3,['install'],"['install', 'installation']"
Deployability,"Hi, . I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):. TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc. ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png). Here is the about() information:. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.4.0.dev0; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.11; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip. I would appreciate it if you can give me some advice to help me pass the testing codes!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039:8,install,installed,8,https://qutip.org,https://github.com/qutip/qutip/issues/1039,3,"['Install', 'install']","['Installation', 'Installed', 'installed']"
Deployability,"Hi, I'm wondering if it's possible to control the precision of 'predictor-corrector' solver of the photocurrent_mesolve? Seems like the 'tol' has no effect on the 'predictor-corrector' solver. Here's my code. I was trying to use stochastic master equation to generate the outcome photon sequence from a CPT set up, but I got a diverged outcome sometimes. ```; from qutip import *; import matplotlib.pyplot as plt; import numpy as np; import matplotlib as mpl. params = {; 	'axes.labelsize': 12,; 	'legend.fontsize': 10,; 	'xtick.labelsize': 10,; 	'ytick.labelsize': 10,; 	'figure.figsize': [3*1.4/1.2, 2.8/1.2],#2.3; 	'lines.linewidth' : 1,; 	'axes.linewidth':0.9,; 	'figure.subplot.left':0,; 	'figure.subplot.right':1,; 	'figure.subplot.bottom':0,; 	'figure.subplot.top':1,; 	'grid.linestyle':'--',; 	'axes.grid':False,; 	""font.family"":""serif"",; 	""xtick.direction"":""in"",; 	""ytick.direction"":""in"",. 	}; mpl.rcParams.update(params). T = 100; N = 100000; Gamma = 2*np.pi*13; Omega = 2*np.pi*2. times = np.linspace(0,T,N); ge = fock(3, 0) * fock(3, 1).dag(); se = fock(3, 2) * fock(3, 1).dag(); ss = fock(3, 2) * fock(3, 2).dag(); ee = fock(3, 1) * fock(3, 1).dag(); dark = (fock(3, 2) - fock(3, 0)).unit(); dd = dark*dark.dag(). bias = 2*np.pi*0.1. psi0 = dark. H = Omega * (ge + ge.dag() + se + se.dag()) + bias*ss. result_sme = photocurrent_mesolve(H, psi0, times, c_ops = [],sc_ops = [np.sqrt(Gamma/2)*ge + np.sqrt(Gamma/2)*se]\; 	, e_ops = [dd, ee], store_measurement=True, options=Options(store_states=True), nsubsteps=100, \; 	solver='predictor-corrector'). hermitian = [(result_sme.states[0][i]).isherm for i in range(N)]. plt.plot(times, result_sme.expect[0], color = 'orange', label='dark'); plt.plot(times, result_sme.expect[1], color = 'black', label='e'); plt.plot(times, hermitian, color = 'blue'); plt.xlim(0,100); plt.xlabel('Time'); plt.ylabel('Population'); plt.savefig('sme.pdf',bbox_inches='tight',pad_inches=0); plt.close(). ```; And the result,; [sme.pdf](https://github.com/qutip/q",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1357:916,update,update,916,https://qutip.org,https://github.com/qutip/qutip/issues/1357,1,['update'],['update']
Deployability,"Hi, I've been starting to learn qutip to write my dissertation on Quantum computing. I was running the script on Vacuum Rabi oscillations in the Jaynes-cummings model from the example section on [qutip.com](http://qutip.com/). Originally it was working correctly. However, I have come back to it after about a month and I have run into an issue. When I run the code copied straight from the website it returns this error . ""ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". so I increase the nsteps to 100000:; output = mesolve(H, psi0, tlist, c_op_list, [a.dag() * a, sm.dag() * sm], options = Options(nsteps= 10000)). however I get an output that is completely different to what I should be getting. What I should be getting: . ![image](https://user-images.githubusercontent.com/75099190/186995018-26029946-bba2-4b71-888d-74b88361c832.png). What my code is outputting:. ![image](https://user-images.githubusercontent.com/75099190/186995092-75b9d285-f854-487f-bd11-7dffc19d57cb.png). Do you have any idea what could be causing this error?; Any help would be hugely appreciated . my code:. import matplotlib.pyplot as plt; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi # cavity frequency; wa = 1.0 * 2 * np.pi # atom frequency; g = 0.05 * 2 * np.pi # coupling strength; kappa = 0.005 # cavity dissipation rate; gamma = 0.05 # atom dissipation rate; N = 15 # number of cavity fock states; n_th_a = 0.0 # temperature in frequency units; use_rwa = True. tlist = np.linspace(0, 25, 100). psi0 = tensor(basis(N, 0), basis(2, 1)) # start with an excited atom. a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)). if use_rwa:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()); else:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() + a) * (sm + sm.dag()). c_op_list = []. rate = kappa * (1 + n_th_a); if rate > 0.0:; c_op_list.append(np.sqrt(rate) * a). rate = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987:428,integrat,integration,428,https://qutip.org,https://github.com/qutip/qutip/issues/1987,1,['integrat'],['integration']
Deployability,"Hi, thank you for the amazing work that you do. When using qutip to diagonalise two simultaneously diagonalizible, hermitian operators it continues to throw this error:. ![Screen Shot 2019-08-08 at 11 29 59](https://user-images.githubusercontent.com/19754061/62691897-e0a83680-b9cf-11e9-8a92-a88a3716ae99.png). Which comes from `qutip.simdiag.py` in `simdiag(ops, evals)`:. ![Screen Shot 2019-08-08 at 11 27 34](https://user-images.githubusercontent.com/19754061/62691786-a76fc680-b9cf-11e9-8f99-7a9ba78db518.png). My installed packages:; QuTiP Version: 4.4.0; Numpy Version: 1.16.4; Scipy Version: 1.3.0; Cython Version: 0.29.12; Matplotlib Version: 3.1.0; Python Version: 3.7.3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067:518,install,installed,518,https://qutip.org,https://github.com/qutip/qutip/issues/1067,1,['install'],['installed']
Deployability,"Hi, we now have an arXiv entry for PIQS: https://arxiv.org/abs/1805.05129. This version adds `pisolve` a custom solver for diagonal initial state and is updated to be synced with the latest version in the paper. We have also made some documentation in [piqs.readthedocs.io](piqs.readthedocs.io). Corresponding notebooks and docs will be added too. @nathanshammah @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861:153,update,updated,153,https://qutip.org,https://github.com/qutip/qutip/pull/861,1,['update'],['updated']
Deployability,"Hi,. As raised by someone on the mailing-list, there is a missing return in `qutip.ipynbtools.plot_animation` helper, leading to a `RuntimeError` when trying to execute the `JC-model-wigner-function.ipynb` example notebook. This commit should address this issue. Moreover, the previously mentionned notebook should be updated as well, but I am not sure where the source is. The `plot_result` function should read. ```python; cb = None. def plot_result(result, n, fig=None, axes=None):; ; global cb; ; if fig is None or axes is None:; fig, ax = plot_setup(result); ; axes.cla(). # trace out the atom; rho_cavity = ptrace(result.states[n], 0). W = wigner(rho_cavity, xvec, xvec); ; surf = axes.plot_surface(X, Y, W, rstride=1, cstride=1, cmap=cm.jet,; alpha=1.0, linewidth=0.05, vmax=0.25, vmin=-0.25). ax.set_xlim3d(-5, 5); ax.set_ylim3d(-5, 5); ax.set_zlim3d(-0.25, 0.25). if not cb:; cb = plt.colorbar(surf, shrink=0.65, aspect=20). return surf,; ```. It might be worth noting also that with proper documentation this notebook could potentially fix https://github.com/qutip/qutip/issues/544 as well. Thanks,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/783:318,update,updated,318,https://qutip.org,https://github.com/qutip/qutip/pull/783,1,['update'],['updated']
Deployability,"Hi,. I have a problem when trying to visualize the quantum circuit with the command ""q.png"".; I have installed ImageMagick, Perl, and Ghostscript as explained in the tutorial: https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb. However, I still receive the next error message:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. The pdf file is generated but for some reason, is not converted to a .png file. Thanks a lot,; Ariel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888:101,install,installed,101,https://qutip.org,https://github.com/qutip/qutip/issues/1888,1,['install'],['installed']
Deployability,"Hi,. I think the import order is not correct in `setup.py`, importing `numpy` at the beginning of the file, before giving a chance to `setuptools` to actually install it (because it is in required packages). This line is faulty https://github.com/qutip/qutip/blob/master/setup.py#L34 and results in. ``` zsh; % pip install qutip; Collecting qutip; Downloading qutip-3.1.0.tar.gz (800kB); 100% |████████████████████████████████| 802kB 595kB/s ; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-w53v9c3b/qutip/setup.py"", line 34, in <module>; import numpy as np; ImportError: No module named 'numpy'; ```. Then, instead of `pip install qutip`, one has to `pip install numpy; pip install qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426:159,install,install,159,https://qutip.org,https://github.com/qutip/qutip/issues/426,5,['install'],['install']
Deployability,"Hi,. I was trying to run some simulations with [Floquet formalism in Qutip](http://qutip.org/docs/4.1/guide/dynamics/dynamics-floquet.html) in a Jupyter notebook, when I ran into a ""The kernel appears to died unexpectedly, it will restart"" error message. I tried to understand what is happening, and it seems it is due to a segmentation fault. It happens also when run in CPython 3.5.2. `gdb` was not super useful, and I could not get it to output any interesting backtrace. Manually tracking the issue down, it seems that `qutip.floquet.floquet_modes` call `qutip.propagator.propagator` which itself calls `sesolve`. As far as I could track the error down for the moment, it seems to happen in [this call](https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L159-L160). My code is quite lengthy, and I did not yet manage to isolate a small snippet to reproduce the error :/ Not sure what is the best way to debug this either :/. ```python; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 0.19.1; Cython Version: 0.27.1; Matplotlib Version: 2.0.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip; ```. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761:1301,Install,Installed,1301,https://qutip.org,https://github.com/qutip/qutip/issues/761,2,['Install'],"['Installation', 'Installed']"
Deployability,"Hi,. I'm having some trouble installing QuTiP onto my computer. I'm running Python 2.7 on Windows 7 and using Anaconda 2.10 64 bit and PyCharm 4.0.4.; I tried installing QuTiP in PyCharm by using file->settings->project interpreter and that successfully installed. However, when I go to the python console and type; from qutip import \* I get the following error message:. Backend Qt4Agg is interactive backend. Turning interactive mode on.; Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-2-674d9281af88>"", line 1, in <module>; from qutip import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""C:\Program Files (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:29,install,installing,29,https://qutip.org,https://github.com/qutip/qutip/issues/343,3,['install'],"['installed', 'installing']"
Deployability,"Hi,. Thanks a lot for this great package. Here are two patches I would like to suggest:; - support for numpy arrays as cython args to allow time dependence using arrays. I use this in the following way: H.append([op/1e9, '(0 if (t<0 or t>100) else ch0[round(t)])']), where ch0 is a numpy array containing the actual waveform. It will be in the args dictionary given to mesolve/sesolve. Tensor:; - Add back support for the following: tensor([1, Qobj(...)]), which makes life easier when constructing operators programmatically (and used to work in earlier versions). I'd be happy to hear what you think. Regards,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141:55,patch,patches,55,https://qutip.org,https://github.com/qutip/qutip/pull/141,1,['patch'],['patches']
Deployability,"Hi,. There is a [manual integration](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L602-L624) using rectangles method in `qutip.floquet` file which sometimes fail. Problem is that the number of timesteps, `nT`, is hardcoded and not accessible to the user. In my case, `nT = 100` does not seem to be enough and the integral is wrong. A quick and dirty fix is to have an extra `nT=100` keyword argument to `floquet_master_equation_rates`, so that user can overload it. Still, it does not seem to be the most efficient way of doing it. I have a quick fix I can contribute which is using `scipy.integrate.simps` instead. This requires keeping an array of values to integrate in memory (which is less memory-efficient) but I could keep `nT=100` and get the correct integral by using this method. I guess the best option would be to use [`scipy.integrate.quad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad), as it uses an adaptive algorithm. I can contribute a fix for this, just looking for feedback on the best available option :). Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:24,integrat,integration,24,https://qutip.org,https://github.com/qutip/qutip/issues/767,6,['integrat'],"['integrate', 'integration']"
Deployability,"Hi,; I just recently installed qutip on Canopy using a Windows Binary. When I try to run one of the tests, e.g. test_wigner.py, I get this error:. ---. AttributeError Traceback (most recent call last); C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in <module>(); 37 from numpy.testing import assert_, run_module_suite, assert_equal; 38 ; ---> 39 from qutip.states import coherent, fock; 40 from qutip.wigner import wigner; 41 from qutip.random_objects import rand_dm, rand_ket. C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in <module>(); 60 qutip.settings.ipython = True; 61 except:; ---> 62 qutip.settings.ipython = False; 63 ; 64 # -----------------------------------------------------------------------------. AttributeError: 'module' object has no attribute 'settings' . The AttributeError also appears when I simply try to import qutip from the command line. I'm not too familiar with Python scripting so any assistance on the matter would be greatly appreciated. Thank you!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469:21,install,installed,21,https://qutip.org,https://github.com/qutip/qutip/issues/469,1,['install'],['installed']
Deployability,"Hi,; I was just starting out with Stochastic Solver and ran into a problem that might be something about definition. As an example, I can't understand the meaning of the expectation_values when solving with Stochastic Solver.[this notebook](https://nbviewer.org/urls/qutip.org/qutip-tutorials/tutorials-v4/time-evolution/015_smesolve-heterodyne.ipynb); In my understanding, the Stochastic Solver solution yields ntraj trajectories, and the average of these trajectories is (or approximates) its expectation (solved by mesolve). But in the example in the notebook, the expectation_values(result_ref.expect[1]) and the trajectory mean(np.array(result.measurement).mean(axis=0)[:, 0].real) obviously do not refer to the same thing. . I originally thought that this expectation value meant the master equation solution (but not Stochastic Master Equation), but Figure 2 compares this expectation with the expectation of the mesolve solution. Although the two are similar, this also means that the two are not the same thing, at least not solved by the same method. So I'm wondering what exactly the expected value of the smesolve refers to. Or is this expectation value what I originally suspected that the system did not make continuous measurements, but used Schrödinger or the main equation to solve the expected value (but the solution process is different)?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194:1223,continuous,continuous,1223,https://qutip.org,https://github.com/qutip/qutip/issues/2194,1,['continuous'],['continuous']
Deployability,"Hi,; I'm running qutip on the latest Ubuntu LTS version in 64 bit. All required packages (gfortran etc.) are installed from the repository. No matter if I use the qutip package from the repository or compile it from source, the testing results into 3 errors:. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Consistency between transformations of kets and denstity matrices ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.84e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > correlation: compare spectrum obtained for eseries and fft methods ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > >",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:109,install,installed,109,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['install'],['installed']
Deployability,Homebrew installation scripts,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279:9,install,installation,9,https://qutip.org,https://github.com/qutip/qutip/pull/279,1,['install'],['installation']
Deployability,Homebrew or Pip for MacOSX install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62:27,install,install,27,https://qutip.org,https://github.com/qutip/qutip/issues/62,1,['install'],['install']
Deployability,How to get a QuTiP install with 'INTEL MKL Ext' set to True?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496:19,install,install,19,https://qutip.org,https://github.com/qutip/qutip/issues/2496,1,['install'],['install']
Deployability,"However, I think the logic behind BLAS Info is not robust. For context, debian builds packages against generic libblas.so (libblas-dev package). The various optimised BLAS implementations are supposed to be binary compatible, such that the system administrator can install the preferred implementation for use at runtime (the identity of libblas.so is controlled using debian's alternatives mechanism). On my system, OpenBLAS is indeed installed. But taking a closer look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:1219,install,installed,1219,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['install'],['installed']
Deployability,"I am having some trouble with the function mesolve. The situation is the following: I have a collection of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:281,integrat,integration,281,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['integrat'],['integration']
Deployability,"I am installing on Mac OS Catalina using the following command:. python setup.py develop --with-openmp. However, I am getting the following error:. clang: error: unsupported option '-fopenmp'; error: command 'g++' failed with exit status 1. could you please elaborate?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230:5,install,installing,5,https://qutip.org,https://github.com/qutip/qutip/issues/1230,1,['install'],['installing']
Deployability,"I am new to Qutip and I installed 4.3.1, and I was just trying to run the steady state solvers optomechanical script that was on Qutip's example notebooks. Running the cell ""Run Steady State Solvers"" Gives me this error:; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-14-e1b88270a1b6> in <module>; 8 use_rcm = False; 9 rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; ---> 10 use_rcm=use_rcm, tol=1e-15, return_info=True); 11 print(ss,'solution time =',info['solution_time']); 12 rho_mech = ptrace(rho_ss, 1). /anaconda3/lib/python3.6/site-packages/qutip/steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 271 else:; 272 raise Exception(; --> 273 ""Invalid keyword argument '""+key+""' passed to steadystate.""); 274 ; 275 # Set column perm to NATURAL if using RCM and not specified by user. Exception: Invalid keyword argument 'use_precond' passed to steadystate. and I cannot seem to get around it. I am not sure why its not working, I tried to install 4.3.0 instead and it still did not function. It runs if I comment out the use_precond but I am not sure why its giving me this error and how to proceed from here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1015:24,install,installed,24,https://qutip.org,https://github.com/qutip/qutip/issues/1015,2,['install'],"['install', 'installed']"
Deployability,"I am new to quantum computing and I want to use Qutip to calculate the entanglement entropy on my M1 MacBook Pro. However, I cannot import the Qutip library into either Jupyter notebook or Python3.9. The error message as shown in follow. May I ask how to solve this problem? Thank you. . ```python; IndexError Traceback (most recent call last); <ipython-input-4-82c62ef8635d> in <module>; ----> 1 from qutip import *. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/__init__.py in <module>; 145 # if num_cpu is 0 set it to the available number of cores; 146 import qutip.hardware_info; --> 147 info = qutip.hardware_info.hardware_info(); 148 if 'cpus' in info:; 149 qutip.settings.num_cpus = info['cpus']. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in hardware_info(); 121 """"""; 122 if sys.platform == 'darwin':; --> 123 out = _mac_hardware_info(); 124 elif sys.platform == 'win32':; 125 out = _win_hardware_info(). /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in _mac_hardware_info(); 46 l[1].strip('.\n '); 47 results.update({'cpus': int(info['physicalcpu'])}); ---> 48 results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); 49 .readlines()[0].split('@')[1][:-4])*1000)}); 50 results.update({'memsize': int(int(info['memsize']) / (1024 ** 2))}). IndexError: list index out of range; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473:1169,update,update,1169,https://qutip.org,https://github.com/qutip/qutip/issues/1473,3,['update'],['update']
Deployability,"I am running an iterative method that requires calling mesolve many times.; At some point, the program crashes. It seems that every time mesolve is called, the list of arguments passed to the gcc complier grows. Eventually that list is too big for gcc and returns errors and stops the program. I wrote a simplified code that eventually leads to that problem. It took close to 2 hours to reproduce, and but maybe you can figure out a way to reach that point faster (faster calls ? more arguments passed to gcc to make it reach that point faster?). The screen capture shows how many calls were required in my case, how many seconds had elapsed since the program started, as well as how the error manifests. [test_qutip_error.txt](https://github.com/qutip/qutip/files/2973153/test_qutip_error.txt); <img width=""982"" alt=""Screen Shot"" src=""https://user-images.githubusercontent.com/28269924/54465696-b1034400-4739-11e9-91ab-be1fff21f057.png"">. I experienced this problem a while ago, both on my laptop and amazon instances, on Qutip 4.2.0 with Python 2.7.15. Both with the Anaconda and pip installs. Are there any ways to fix this? I need this for my research. Thank you very much !",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966:1086,install,installs,1086,https://qutip.org,https://github.com/qutip/qutip/issues/966,1,['install'],['installs']
Deployability,I am running ubuntu 16.4. The following code:; rho = rand_dm(5); hinton(rho);; produces the following figure:; ![download](https://cloud.githubusercontent.com/assets/9404272/21955048/107afc22-da6b-11e6-894c-f7e03d0b7eb8.png); I am unsure as to where the issue lies since I have latex installed and the bras and kets are displayed correctly inline with jupyter.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/633:284,install,installed,284,https://qutip.org,https://github.com/qutip/qutip/issues/633,1,['install'],['installed']
Deployability,"I am starting to use qutip and would like to draw 3D bloch spheres but cannot import Bloch3d() because of mayavi. I installe dmayavi from anaconda but now there;s some issue with ""vtk""; My qutip version is - 4.2.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/908:116,install,installe,116,https://qutip.org,https://github.com/qutip/qutip/issues/908,1,['install'],['installe']
Deployability,"I am trying to install qutip 3.1.0 on my MS Windows following the official steps:; 1. Install the Python(X,Y) distribution (tested with version 2.7.3.1). Other Python distributions, such as Enthought Python Distribution or Anaconda CE have also been reported to work.; 2. When installing Python(x,y), explicitly select to include the Cython package in the installation. This package is not selected by default.; 3. Add the following content to the file C:/Python27/Lib/distutils/distutils.cfg (or create the file if it does not already exists):; [build]; compiler = mingw32; [build_ext]; compiler = mingw32; The directory where the distutils.cfg file should be placed might be different if you have installed the Python environment in a different location than in the example above.; 4. Obtain the QuTiP source code and installed it following the instructions given above. However, there are some errors after i run the installation verifying process. Is there anyone came across such errors? How can I repair these errors? The errors are presented as follow:; ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 60, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; rais",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:15,install,install,15,https://qutip.org,https://github.com/qutip/qutip/issues/788,7,"['Install', 'install']","['Install', 'install', 'installation', 'installed', 'installing']"
Deployability,"I am trying to install qutip with the fortran monte-carlo solver. I'm installing over a version of qutip which did not have this option, so my installation command is:. pip install --upgrade --no-deps --force-reinstall qutip --install-option=--with-f90mc. The build fails as below. It is looking for libraries which do not exist in the MKL distribution I am using. Perhaps they existed in an earlier version ? Can anyone advise how to achieve a succesful build - I think I need to modify the link line. . Any suggestions gratefully received.; Colin. /cm/shared/apps/gcc/4.8.1/bin/gfortran -Wall -g -Wall -g -shared build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/qutip/fortran/qutraj_runmodule.o build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/fortranobject.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_precision.o build/temp.linux-x86_64-2.7/qutip/fortran/mt19937.o build/temp.linux-x86_64-2.7/qutip/fortran/linked_list.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_general.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_hilbert.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_evolve.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_linalg.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_run.o build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/qutip/fortran/qutraj_run-f2pywrappers2.o -L/cm/shared/apps/intel/composer_xe/2013_sp1.3.174/mkl/lib/intel64 -L/cm/shared/apps/python/2.7.9/lib -Lbuild/temp.linux-x86_64-2.7 -lzvode -lmkl_lapack32 -lmkl_lapack64 -lmkl_rt -lpthread -lmkl_lapack32 -lmkl_lapack64 -lmkl_rt -lpthread -lpython2.7 -lgfortran -o build/lib.linux-x86_64-2.7/qutip/fortran/qutraj_run.so; /usr/bin/ld: cannot find -lmkl_lapack32; collect2: error: ld returned 1 exit status",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/491:15,install,install,15,https://qutip.org,https://github.com/qutip/qutip/issues/491,6,"['install', 'upgrade']","['install', 'install-option', 'installation', 'installing', 'upgrade']"
Deployability,"I am trying to learn to use qutip and I made a local environment. As per the instruction guide, I ran the qutip testing environment and got the following: . ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.4.1; Numpy Version: 1.17.3; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/nathanholman/opt/anaconda3/envs/qutip/lib/python3.7/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:759,Install,Installed,759,https://qutip.org,https://github.com/qutip/qutip/issues/1124,2,['Install'],"['Installation', 'Installed']"
Deployability,"I am trying to run this code to test mcsolve():; ```; import numpy as np; from qutip import *. def hamiltonian_t(t, args):; #; # evaluate the hamiltonian at time t. ; #; H0 = args['H0']; H1 = args['H1']; w = args['w']. return H0 + H1 * np.sin(w*t). N = 2 # set where to truncate Fock state for cavity; a = destroy(N); psi0 = basis(N, 0) # define initial state. w_c = 1.0 * 2 * np.pi # cavity frequency; w = w_c; kappa = 0.001 * 2 * np.pi. H0 = w_c * a.dag()*a # time-independent term; H1 = kappa*(a.dag() + a) # time-dependent term. c_ops = [] # Build collapse operators; c_ops.append(np.sqrt(kappa) * a). args = {'H0': H0, 'H1': H1, 'w': w}. times = np.linspace(0, 10, 100) # define time vector. output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); ```. I am getting this error:; ```; Traceback (most recent call last):; File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 365, in run_test; rhs, ode_args = self.ss.makefunc(ss); NameError: name 'ss' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""mc_solve_example2.py"", line 33, in <module>; output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 223, in mcsolve; mc.run_test(); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 368, in run_test; raise Exception(""Error calculating H""); Exception: Error calculating H; ```. Here is the output of qutip.about(); ```; QuTiP Version: 4.5.1; Numpy Version: 1.18.4; Scipy Version: 1.4.1; Cython Version: 0.29.19; Matplotlib Version: 3.2.1; Python Version: 3.6.8; Number of CPUs: 112; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. Any advice how to fix that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:1745,Install,Installed,1745,https://qutip.org,https://github.com/qutip/qutip/issues/1368,1,['Install'],['Installed']
Deployability,I am trying to use heterodyne simulation using built in milstein solver. It gives me error. . Looking at the code it seems that internally milstein solver is converting heterodyne problem into two homodyne problems. Which is fine. But not quite implemented correctly. Can you please update me on this? I will be willing to provide a patch.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/239:283,update,update,283,https://qutip.org,https://github.com/qutip/qutip/issues/239,2,"['patch', 'update']","['patch', 'update']"
Deployability,"I am unable to find the list of states returned by the essolve function. For example:. ```python; import qutip as qt; test = qt.essolve(qt.qeye(2), qt.ket2dm(qt.basis(2, 0)), [1,2,3], c_op_list=[], e_ops=[]); ```; Returns the message; ```; Result object with essolve data.; --------------------------------; states = True, expect = True; num_expect = 0, num_collapse = 0; ```; but if I try to access the states; ```; test.states; >>> []; ```; Should this contain a list of states like mesolve()? It seems a similar issue has been raised before: https://groups.google.com/forum/#!topic/qutip/st3i6STPrQY. Here's my environment details:. ```; QuTiP: Quantum Toolbox in Python; ================================; QuTiP Version: 4.5.0; Numpy Version: 1.16.4; Scipy Version: 1.1.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\chris\Anaconda3\lib\site-packages\qutip; ============================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1262:897,Install,Installed,897,https://qutip.org,https://github.com/qutip/qutip/issues/1262,2,['Install'],"['Installation', 'Installed']"
Deployability,"I am using Anaconda on windows 10 and installed qutip from conda-forge package, I don't have VS-15 on my system, Is it possible that that I could run qutip with VS-15 runtime liberaries instead of complete installation of visual studio. If it is possible please guide me.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826:38,install,installed,38,https://qutip.org,https://github.com/qutip/qutip/issues/826,2,['install'],"['installation', 'installed']"
Deployability,"I am using anaconda and qutip on Win10 system with VS2015 (community version). When solving Hamiltonian with time dependent coefficients, I get an ""ImportError"" that caused by cython which does not occur on linux. I've re-installed VS2015 and qutip many times, but this problem still exists. Is there any way to solve it? Here is my error message. **ImportError: Building module rhs22280 failed: [""distutils.errors.CompileError: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\bin\\\\cl.exe' failed with exit status 2\n""]**. [error_message.txt](https://github.com/qutip/qutip/files/3317876/error_message.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:222,install,installed,222,https://qutip.org,https://github.com/qutip/qutip/issues/1026,1,['install'],['installed']
Deployability,"I can't quite figure out if this is simply due to the DeprecationWarnings or something else but all tests are failing due to `atol` not being set for the gmres solver. I will try to set `atol` and check if the tests pass. Error log: https://api.travis-ci.org/v3/job/379109482/log.txt.; ```; scipy/sparse/linalg/isolve/iterative.py:2: DeprecationWarning: scipy.sparse.linalg.bicgstab called without specifying `atol`. The default value will be changed in a future release. For compatibility, specify a value for `atol` explicitly, e.g., ``bicgstab(..., atol=0)``, or to retain the old behavior ``bicgstab(..., atol='legacy')``. ```. ```; ..................................................; ======================================================================; ERROR: Steady state: Thermal qubit - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/Users/shahnawaz/dev/qutip/qutip/tests/test_steadystate.py"", line 145, in test_qubit_power_gmres; rho_ss = steadystate(H, c_op_list, method='power-gmres'); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 298, in steadystate; return _steadystate_power(A, ss_args); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 863, in _steadystate_power; v = v / la.norm(v, np.inf); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/scipy/linalg/misc.py"", line 137, in norm; a = np.asarray_chkfinite(a); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/numpy/lib/function_base.py"", line 1233, in asarray_chkfinite; ""array must not contain infs or NaNs""); ValueError: array must not contain infs or NaNs. ----------------------------------------------------------------------; Ran 561 tests in 576.175s. FAILED (SKIP=19, errors=1); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:463,release,release,463,https://qutip.org,https://github.com/qutip/qutip/issues/862,1,['release'],['release']
Deployability,I couldn't install qutip after commit a748fdcf9e9e15e16816d3304d3f448d3efd084b. These changes helped but I don't really have a clue what I'm doing :),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/42:11,install,install,11,https://qutip.org,https://github.com/qutip/qutip/pull/42,1,['install'],['install']
Deployability,"I did this previously a handful of commits ago in b7df1b5, but the; tolerances chosen there weren't ideal. This is only especially relevant for cases where we have to use generic; eigenvalue solvers in place of Hermitian ones (e.g. when the Hermitian; ones have temperamental segfaults). I ran test_diag_liou_mult for all; dimensions from 2 to 99 inclusive 2000 times, and measured the maximum; absolute and relative tolerance for each case. I found that 3 times out; of 2000 the absolute tolerance exceeded 1e-10, and 12 times out of 2000; the relative tolerance exceeded 1e-7. The max values seen were 4.24e-10; and 3.12e-7 respectively. This updates the tolerances to 1e-9 (absolute) and 1e-6 (relative),; which still seem like reasonable tolerances, and should ensure that; we're testing correctly. See also #1474.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:645,update,updates,645,https://qutip.org,https://github.com/qutip/qutip/pull/1486,1,['update'],['updates']
Deployability,"I followed instruction on http://qutip.org/docs/4.1/installation.html and used pip to install qutip in my python3.5.2 virtualenv directory. All required packages listed under ""General Requirements"" were also installed. pip commands completed fine. I then cd into a directory peer to ""python3.5.2 virtualenv directory"" and launched jupyter notebook. Ran two import commands. Both failed. Any suggestions on how to debug these failures? I restarted firefox and jupyter notebook several times. 1. ""import qutip.testing as qt"" to verify installation; lib/python3.5/site-packages/qutip/__init__.py; 169 ; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. lib/python3.5/site-packages/qutip/qobj.py; 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. lib/python3.5/site-packages/qutip/fastsparse.py; 35 from scipy.sparse import (_sparsetools, isspmatrix, isspmatrix_csr,; 36 csr_matrix, coo_matrix, csc_matrix, dia_matrix); ---> 37 from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; 38 getdtype, isscalarlike, IndexMixin, get_index_dtype); 39 from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning. ImportError: cannot import name 'IndexMixin'. 2. ""from qutip import *""; lib/python3.5/site-packages/qutip/__init__.py in <module>; 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-2-82c62ef8635d> in <module>; ----> 1 from qutip import *. lib/python3.5/site-packages/qutip/__init__.py in <module>; 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 . AttributeError: module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018:52,install,installation,52,https://qutip.org,https://github.com/qutip/qutip/issues/1018,4,['install'],"['install', 'installation', 'installed']"
Deployability,"I get the following warnings when importing qutip:. ```; /usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py:839: ResourceWarning: subprocess 606 is still running; ResourceWarning, source=self); /usr/local/lib/python3.7/site-packages/qutip/hardware_info.py:44: ResourceWarning: unclosed file <_io.TextIOWrapper name=3 encoding='UTF-8'>; for l in [l.split(':') for l in os.popen('sysctl hw').readlines()[1:]]:; /usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py:839: ResourceWarning: subprocess 607 is still running; ResourceWarning, source=self); /usr/local/lib/python3.7/site-packages/qutip/hardware_info.py:48: ResourceWarning: unclosed file <_io.TextIOWrapper name=3 encoding='UTF-8'>; results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/916:794,update,update,794,https://qutip.org,https://github.com/qutip/qutip/issues/916,1,['update'],['update']
Deployability,I had forgotten to do this version bump in the setup.py file after the version release. This PR needs to be merged before any other PR.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1171:79,release,release,79,https://qutip.org,https://github.com/qutip/qutip/pull/1171,1,['release'],['release']
Deployability,"I had tried many times to install the anaconda3.5 3.6 and 3.7, for installing qutip 4.4.0or4.4.1. But when I verifying the Installation, some similar errors always occur, as indicated below; ![QQ截图20190831230327](https://user-images.githubusercontent.com/54746315/64065880-d92e2300-cc45-11e9-9672-f13fca2ffb36.png); ps: I have install vs2015 and option for c++ compiler; in addition, there are some installation information as below; ![QQ截图20190831224652](https://user-images.githubusercontent.com/54746315/64065902-26aa9000-cc46-11e9-9c60-6796fc1deff7.png); the red underline has indicated some problem, is it matter?; who can give some advice for dealing with it? ; Thanks a lot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079:26,install,install,26,https://qutip.org,https://github.com/qutip/qutip/issues/1079,5,"['Install', 'install']","['Installation', 'install', 'installation', 'installing']"
Deployability,"I have recently released a package, [sequencing](https://github.com/sequencing-dev/sequencing), which provides an ""experimentalist-friendly"" layer on top of QuTiP for constructing and simulating time-dependent Hamiltonians, especially those composed of sequences of pulses. - Repo: https://github.com/sequencing-dev/sequencing; - Docs: https://sequencing.readthedocs.io/en/latest/. I think this package could be of great use to many QuTiP users who are interested in simulating realistic pulse sequences acting on noisy devices. There is some conceptual overlap with `qutip.qip`, but the implementation is rather different. I'm not sure if GH issues is the right forum on which to share this information - I apologize if it's not. What would be the best way to share this project with the QuTiP community?. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1439:16,release,released,16,https://qutip.org,https://github.com/qutip/qutip/issues/1439,1,['release'],['released']
Deployability,"I have some detail information for the GSoC 2020 project ""Error mitigation in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub Wiki page. I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be fo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:380,release,release,380,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['release'],['release']
Deployability,"I have such error whenever my the ratio between j or h for my hamiltonian and the total duration time(now in the following code is 0.1) is a certain number and above, mesolve produces this error. However, I need this ratio to be a certain number and above which produces the error. What do you recommend that I do? Thank you so much!. Here is the code:. j = 1000; h = 100000. \begin{equation}; H= j \sum_{\langle ij\rangle} \sigma_i^x\sigma_j^x +h \sum_i \sigma_i^z; \end{equation}. psi0=tensor(basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0)). times = np.linspace(0.0, 0.1, 100). result3 = mesolve(H, psi0, times, [], []); ; print fidelity(result3.states[99],psi0). ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-25-49de88b6cc71> in <module>(); 8 times = np.linspace(0.0, 0.1, 100); 9 ; ---> 10 result3 = mesolve(H, psi0, times, [], []); 11 ; 12 print fidelity(result3.states[99],psi0). /Users/anaconda/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 341 else:; 342 res = _sesolve_const(H, rho0, tlist,; --> 343 e_ops, args, options, progress_bar); 344 ; 345 if e_ops_dict:. /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _sesolve_const(H, psi0, tlist, e_ops, args, opt, progress_bar); 325 #; 326 return _generic_ode_solve(r, psi0, tlist, e_ops, opt,; --> 327 progress_bar, dims=psi0.dims); 328 ; 329 . /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, dims); 689 ; 690 if not r.successful():; --> 691 raise Exception(""ODE integration error: Try to increase ""; 692 ""the allowed number of substeps by increasing ""; 693 ""the nsteps parameter in the Options class.""). **Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:1713,integrat,integration,1713,https://qutip.org,https://github.com/qutip/qutip/issues/806,2,['integrat'],['integration']
Deployability,"I installed anaconda on windows 10. ; I used then ""pip install qutip"", and I get this error : ; File ""\lib\distutils\cygwinccompiler.py"" line 129, in __init__; if self.ld_version >= ""2.10.90"" : ; TypeError: '>=' not supported between instances of 'NoneType' and 'str'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860:2,install,installed,2,https://qutip.org,https://github.com/qutip/qutip/issues/860,2,['install'],"['install', 'installed']"
Deployability,"I installed qutip through Anaconda on MacBook M1. The installation was successful but when I tried to verify the installation through `from qutip import *`, I received following error:; `Traceback (most recent call last):; File ""/Users/akhil/opt/anaconda3/lib/python3.8/site-packages/qutip/__init__.py"", line 46, in <module>; __IPYTHON__; NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/akhil/opt/anaconda3/lib/python3.8/site-packages/qutip/__init__.py"", line 49, in <module>; qutip.settings.ipython = False; AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396:2,install,installed,2,https://qutip.org,https://github.com/qutip/qutip/issues/1396,3,['install'],"['installation', 'installed']"
Deployability,"I just built and installed Qutip on the command line using Enthought python. No errors... Then when I run I get:. Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. > > > from qutip import *; > > > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > > > Please check your Xcode installation; > > > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > > > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > > > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > > > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > > > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > > > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > > > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > > > compilation terminated.; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 213, in <module>; > > > from qutip.qobj import *; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; > > > from qutip.ptrace import _ptrace; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; > > > from qutip.sparse import sp_reshape; > > > File ""/Users/rjmag",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:17,install,installed,17,https://qutip.org,https://github.com/qutip/qutip/issues/382,2,['install'],"['installation', 'installed']"
Deployability,"I just pulled from https://github.com/qutip/qutip.git to update my qutip. The main setup.py (in the root directory of qutip) have the following lines:. ```; # all information about QuTiP goes here-------; MAJOR = 3; MINOR = 1; MICRO = 0; ISRELEASED = False; ```. However, qutip.about() returns. ```; In [19]: qutip.about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; Paul D. Nation & Robert J. Johansson. QuTiP Version: 3.0.0.dev-7eb81e7; Numpy Version: 1.7.1; Scipy Version: 0.12.0; Cython Version: 0.19; Matplotlib Version: 1.2.1; Fortran mcsolver: True; scikits.umfpack: False; Python Version: 2.7.4; Platform Info: Darwin (x86_64); Installation path: /Users/arnelg/git/qutip/qutip; ```. I thought the latest version on github was 3.0.1?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/236:57,update,update,57,https://qutip.org,https://github.com/qutip/qutip/issues/236,2,"['Install', 'update']","['Installation', 'update']"
Deployability,"I just updated to qutip 4.1.0 on archlinux and now code that ran fine before simply fails. The smallest example I managed to boil it down to is multiplying a daggered state with an operator:; ```; import qutip as qt; import numpy as np. N = 10; x = qt.Qobj(np.ones(N, complex)/(N**(1/2))); op = qt.destroy(N) + qt.create(N). for i in range(10):; print(x.dag()*op); ```; which randomly yields different results, e.g.; ```; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+241j; 5.37624943e+241 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; 0.94868330+0.j ]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; 0.94868330+0.j ]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +0.00000000e+000j 0.00000000e+000 +5.29328215e+180j; 5.29328215e+180 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+24",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:7,update,updated,7,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['update'],['updated']
Deployability,"I managed to successfully install QuTiP in conda, however, installation verification resulted in a FAILED test: test_steadystate.py::test_driven_cavity_power_gmres - Exception: power-gmres failed to find solution in 1000 iterations. Instead of getting a test report I also got an infinite loop returning what you can see on the image below. I installed qutip using:; ```; conda config --append channels conda-forge; conda install qutip. import qutip.testing; qutip.testing.run(). ```; Any ideas why this would happen?; Any tips will be highly appreciated:); ![imagen](https://user-images.githubusercontent.com/85493516/148128436-33f94558-327e-4bed-a921-7bff732bc5d5.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:26,install,install,26,https://qutip.org,https://github.com/qutip/qutip/issues/1750,4,['install'],"['install', 'installation', 'installed']"
Deployability,"I posted this issue on the QuTiP Tutorials GitHub repo, but it doesn't look like anyone is monitoring it. I've tried googling, but I only find stuff about making sure Imagemagick and Ghostscript are installed and they both are. I also made sure texlive was installed. When I try to generate a circuit diagram as follows:. > %matplotlib inline; > from qutip import *; > from qutip.qip.models.circuitprocessor import *; > from qutip.qip.models.spinchain import *; > ; > N = 3; > qc = QubitCircuit(N); > ; > qc.add_gate(""CNOT"", targets=[0], controls=[2]); > ; > qc.png; > . I get a stack trace. > FileNotFoundError Traceback (most recent call last); > <ipython-input-2-4489e338191c> in <module>(); > 4 qc.add_gate(""CNOT"", targets=[0], controls=[2]); > 5 ; > ----> 6 qc.png; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit.py in png(self); > 1012 def png(self):; > 1013 from IPython.display import Image; > -> 1014 return Image(self._repr_png_(), embed=True); > 1015 ; > 1016 @property; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit.py in _repr_png_(self); > 1004 ; > 1005 def _repr_png_(self):; > -> 1006 return _latex_compile(self.latex_code(), format=""png""); > 1007 ; > 1008 def _repr_svg_(self):; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); > 60 os.system(""convert -density %s %s.pdf %s.png"" % (100, filename,; > 61 filename)); > ---> 62 with open(""%s.png"" % filename, ""rb"") as f:; > 63 result = f.read(); > 64 else:; > ; > FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'; > . I'm using. My configuration information is as follows:. > Software	Version; > QuTiP	4.1.0; > Numpy	1.11.3; > SciPy	0.18.1; > matplotlib	2.0.0; > Cython	0.25.2; > Number of CPUs	4; > BLAS Info	INTEL MKL; > IPython	5.1.0; > Python	3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00) [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]; > OS	posix [linux]; >",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702:1666,configurat,configuration,1666,https://qutip.org,https://github.com/qutip/qutip/issues/702,1,['configurat'],['configuration']
Deployability,"I see that qutip announced a new version, but after my update,It breaks down:; `from qutip import *`; the error occurs: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E; After google the error,I find a possible solution :` pip install qutip`; Then the error changes to : ; `---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-3-0a5c3f9bc976> in <module>(); 3 import matplotlib.pyplot as plt; 4 from tqdm import tnrange,tqdm_notebook; ----> 5 from qutip import *. /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------. AttributeError: module 'qutip' has no attribute 'settings'`. PS:I'm using Google Computing platform. The system is Ubuntu .However,it works fine on my mac...........",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694:55,update,update,55,https://qutip.org,https://github.com/qutip/qutip/issues/694,2,"['install', 'update']","['install', 'update']"
Deployability,"I tried to calculate the inverse of an operator as following:; ```; >>> import qutip as qt; >>> from scipy.sparse.linalg import inv; >>> inv(qt.sigmaz().data); C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\dsolve\linsolve.py:296: SparseEfficiencyWarning: splu requires CSC matrix format; warn('splu requires CSC matrix format', SparseEfficiencyWarning); C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\dsolve\linsolve.py:203: SparseEfficiencyWarning: spsolve is more efficient when sparse b is in the CSC matrix format; 'is in the CSC matrix format', SparseEfficiencyWarning); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\matfuncs.py"", line 78, in inv ; Ainv = spsolve(A, I); File ""C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\dsolve\linsolve.py"", line 223, in spsolve; shape=b.shape, dtype=A.dtype); File ""C:\Users\username\Miniconda3\lib\site-packages\qutip\fastsparse.py"", line 59, in __init__; if args[1].shape[0] and args[1].dtype != np.int32:; AttributeError: 'tuple' object has no attribute 'shape'; ```; I don't know why this doesn't work.; Although I can convert it to be dense, and use `scipy.linalg.inv` to do the same job,; the super operaters to be inverted in my actual problems are extremely large and sparse, and the inverses are also expected to be sparse.; So I want to find a way without converting them to dense.; But I didn't find any function in QuTiP to do that. Or maybe I missed it?. BTW, the version I use is:; ```; QuTiP Version: 4.4.1; Numpy Version: 1.16.5; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\username\Miniconda3\lib\site-packages\qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1102:1795,Install,Installed,1795,https://qutip.org,https://github.com/qutip/qutip/issues/1102,2,['Install'],"['Installation', 'Installed']"
Deployability,I try to `pip install qutip==4.0.2` (all the latest versions cannot be installed and have even more complicated error). The error seems to be easier to diagnosed. But I still cannot find out which part goes wrong and why the error happened. The error is:; ```; Collecting qutip==4.0.2; Using cached https://files.pythonhosted.org/packages/c1/de/2efee1b7f6cadd45426ef7b0759cdc3e522672a509d1c75bb317cc4be6cb/qutip-4.0.2.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ; DTYPE = np.float64; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ; DTYPE = np.float64; ctypedef np.float64_t DTYPE_t; ; ITYPE = np.int32; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t; ; ITYPE = np.int32; ctypedef np.int32_t ITYPE_t; ; CTYPE = np.complex128; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t; ; CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t; ; CTYPE = np.int64; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; ```; Thank you very much.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/911:14,install,install,14,https://qutip.org,https://github.com/qutip/qutip/issues/911,2,['install'],"['install', 'installed']"
Deployability,I updated the use of Iterable and now there is no warning for it in the tests mentioned in #1003.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1007:2,update,updated,2,https://qutip.org,https://github.com/qutip/qutip/pull/1007,1,['update'],['updated']
Deployability,"I want to install qutip on the linux (ubuntu 18.04 LTS), but I got the following issue. I wonder whether anyone has encountered this problem before. . ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205:10,install,install,10,https://qutip.org,https://github.com/qutip/qutip/issues/1205,1,['install'],['install']
Deployability,"I want to use parallel.parfor to speed up the calculation, but the parfor function seems not working on windows. I have installed the qutip and other packages. And I have tested my code on linux based python, it works well. So I wonder if anyone can tell me why and how to fix this problem? Thanks.; The following is my test code.; ```python; from qutip import *; import numpy as np; import matplotlib.pyplot as plt; import matplotlib; import time. L = 5; gamma = np.linspace(0, 1, L); Population = np.zeros(L); def evolution(gamma,Omega=1, omega=1):; H = Omega*sigmaz() + omega*sigmax(); result = mesolve(H, basis(2,1), np.linspace(0, np.pi/2/omega, 200), [np.sqrt(gamma)*sigmam()], [sigmaz()]); return result.expect[0][-1]; result = parfor(evolution, gamma,Omega=1.0, omega=1.0)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/849:120,install,installed,120,https://qutip.org,https://github.com/qutip/qutip/issues/849,1,['install'],['installed']
Deployability,"I was helping someone with an install on windows 7 yesterday.; We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary. @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423:30,install,install,30,https://qutip.org,https://github.com/qutip/qutip/issues/423,3,['install'],"['install', 'installed', 'installing']"
Deployability,"I was recently helping a colleague install qutip on his macbook. We had a lot of trouble installing the requisites scipy and cython, with issues relating to their dependencies (gcc). We were following the instructions in INSTALL.txt and using Mac Ports version 2.3.2 on OSX Yosemite and Xcode 6.1. In the end we had to use 'brew' to install these packages. I know that this is not an issue with qutip, but rather scipy / cython. However, I am sure that we not like to put off mac users, so perhaps offering alternative INSTALL instructions to 'brew' rather than 'port' might help. . As a disclaimer, please note I have very limited experience on mac.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265:35,install,install,35,https://qutip.org,https://github.com/qutip/qutip/issues/265,5,"['INSTALL', 'install']","['INSTALL', 'install', 'installing']"
Deployability,"I'm still fairly new to QuTiP but I've found that `mesolve` allows `H` and `rho0` to have different dimensions. Of course getting it right is the users responsibility, an informative warning may be useful. A minimal example is as follows:. ```; from qutip import *; import numpy as np. N = 3; a = tensor(destroy(N),identity(2)); sz = tensor(identity(N),sigmaz()). H = sz*a.dag() + sz.dag()*a; collapse = [a]; tlist = np.linspace(0,1,100); solution = mesolve(H, basis(2,0), tlist, collapse, [a.dag()*a]); ```. which gives a numerical integration error:; `UserWarning: zvode: Repeated convergence failures. (Perhaps bad Jacobian supplied or wrong choice of MF or tolerances.)`; Rather than a more direct warning about the (more likely) problem of mis-matched Hilbert spaces. I'm happy to add a check to the `mesolve` function and submit a PR, but I wanted to be sure that I'm not missing some use case where `H` and `rho0` should be allowed to differ.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479:533,integrat,integration,533,https://qutip.org,https://github.com/qutip/qutip/issues/479,1,['integrat'],['integration']
Deployability,"I'm teaching a course where we use QuTiP, but recently we cannot import QuTiP anymore : /. The procedure to reproduce the error is to open a new notebook in [colab](http://colab.research.google.com/), install QuTiP with . !pip install qutip. and then just. import qutip. The error in this case is . AttributeError Traceback (most recent call last); /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-6-e01d5608f34f> in <module>(); ----> 1 import qutip. /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------. AttributeError: module 'qutip' has no attribute 'settings'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008:201,install,install,201,https://qutip.org,https://github.com/qutip/qutip/issues/1008,2,['install'],['install']
Deployability,"I'm trying to run qutip's test suite locally on my Macbook. From a clean checkout of the `master` branch, I'm doing the following:. ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y blas=*=openblas numpy scipy nose cython ipython pytest; mkdir qutip_testing; cd qutip_testing; rm -rf /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip*; rm -rf ../build ../dist/ ../qutip.egg-info/; (cd ../ && /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python setup.py install); /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m qutip.about; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ~~~. The resulting output is:; ~~~; ...; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+d377c997; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: None; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+; d377c997-py3.7-macosx-10.9-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated u",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:195,install,install,195,https://qutip.org,https://github.com/qutip/qutip/issues/1093,2,['install'],['install']
Deployability,"I'm using [solus](https://solus-project.com) 64-bit, and anaconda for my python. anaconda cannot find any qutip package, so I tried to install with pip. It gives the following error:. `Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-lnsaamvm-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /tmp/pip-build-n7ekqm4y/qutip/; `. Then I tried easy_install, which gave me:. `Processing qutip; Writing /home/jakeargent/qutip/setup.cfg; Running setup.py -q bdist_egg --dist-dir /home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:135,install,install,135,https://qutip.org,https://github.com/qutip/qutip/issues/639,4,"['Install', 'install']","['Installing', 'install', 'install-record']"
Deployability,"I'm using qutip to simulate lindblad dynamics. However, compared to the method I wrote myself with scipy, the one I wrote with qutip mesolve() was much slower. Did I do something wrong or it's expected?; Here's my code. ```python; def simulate_lind (self, t):; 		""""""simulate the lindblad dynamics; 		Arguments:; 			t -- time for propagation; 		""""""; 		if self.impl == 'direct':#my implementation; 			rho0 = np.reshape(self.psi0, (self.n)**2); 			r = ode(self.__lind).set_integrator('zvode', method='bdf'); 			r.set_initial_value(rho0, 0); 			r.set_f_params(self.H, self.gamma, self.A, self.n); 			r.integrate(r.t); 			rhot = r.y; 			rhot = np.reshape(rhot, (self.n, self.n)); 		elif self.impl == 'qutip': #with qutip; 			rho0 = Qobj(self.psi0); 			rhot = mesolve(Qobj(self.H), rho0, [0, t], [np.sqrt(self.gamma) * Qobj(self.A)]).states[-1].full(); 		self.psi0 = rhot; 		return self.psi0; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1180:598,integrat,integrate,598,https://qutip.org,https://github.com/qutip/qutip/issues/1180,1,['integrat'],['integrate']
Deployability,"If you run the documentation build twice, you will get several megabytes of diff between the two runs. This is a problem for us deploying to the website, because our website is managed in a git repository, and updates to large binary files need to persist in the `.git` directory forever. Our `.git` directory for qutip.github.io is getting huge as it is (257MB on my machine right now), and it gets bigger every time we change and rebuild. The biggest problem I can think of immediately is that there are lots of graphs and images in the QuTiP guide that rely on generating random data (the `mcsolve` guide, for example). This means that the graphs generated each time are subtly different, but since they're binary files, `git` mostly has to store a complete change. This adds up to several megabytes of changes to be stored every time the docs are deployed to the website. We could do with fixing all random seeds, probably for every single plotting command, so that the pictures are byte-for-byte exact between runs. This is a separate problem to qutip/qutip#1539; that's about setting up some sort of static CDN/hotlinking to heavy resources. This one is about ensuring that the resources _we_ create don't arbitrarily change every documentation build.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1540:128,deploy,deploying,128,https://qutip.org,https://github.com/qutip/qutip/issues/1540,3,"['deploy', 'update']","['deployed', 'deploying', 'updates']"
Deployability,"Importing after conda install with lastest:. /Users/paul/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:626:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:22,install,install,22,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['install'],['install']
Deployability,Improve and update documentation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2523:12,update,update,12,https://qutip.org,https://github.com/qutip/qutip/pull/2523,1,['update'],['update']
Deployability,"In #1339 I pointed out that the test files were being incorrectly counted in the coverage statistics when running on Travis. This transpired to be because `coverage.py` wasn't able to find our `.coveragerc` file correctly when `pytest` was called in the manner it is on Travis. This PR then does a couple of things:; 1. correctly locates the `.coveragerc` file; 2. excludes the Cython bootstrapping code from being part of the coverage; 3. correctly locates the pytest configuration file `pytest.ini` (although now we have a `pyproject.toml`, we could move that configuration there); 4. completely reorganises `.travis.yml` to remove dead configs, properly share common setups, and generally make it a bit easier to read and see what's going on; 5. fixes file reporting in Coveralls (look at the ""tree"" tab in the Coveralls web report compared to the current `master`); you can now click on the files and get proper line-by-line detail on what was covered and what wasn't, e.g. [here's the report for `mcsolve.py`](https://coveralls.io/builds/32982136/source?filename=qutip/mcsolve.py). We _don't_ enable Cython line-tracing and coverage analysis. This is actually [quite easily possible](https://cython.readthedocs.io/en/latest/src/tutorial/profiling_tutorial.html#enabling-coverage-analysis), but enabling full tracing including on `nogil` functions absolutely tanks performance to the degree where the coverage Travis run would take well in excess of two hours to complete (I think Travis actually just kills things that run longer than 2 hours). I might return to the Cython elements to see how much of them when _can_ reasonably do coverage analysis on. My prediction about actual test coverage dropping once the test files are correctly omitted, which I mentioned in #1339, came true though not _quite_ as cataclysmically (`coverage.py` uses statements, not SLOC as its metric); coverage drops from ~71% to ~63%. Technically the true percentage is higher because the Cython code is generally ver",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1347:469,configurat,configuration,469,https://qutip.org,https://github.com/qutip/qutip/pull/1347,2,['configurat'],['configuration']
Deployability,In .travis.yml: replaced nose installation lines with pytest installation lines.; Suggested in issue #958.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/972:30,install,installation,30,https://qutip.org,https://github.com/qutip/qutip/pull/972,2,['install'],['installation']
Deployability,"In QuTiP 4.5.0 conda release on Mac, I get an error if I call a quantum circuit to print in jupyter notebook. However, the circuit is printed after the message. . This did not happen with QuTiP 4.4.1. Imagemagick is installed. This issue may be related to the closed issues #1179 and #702. ```; ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit.py in _repr_svg_(self); 1117 ; 1118 def _repr_svg_(self):; -> 1119 return _latex_compile(self.latex_code(), format=""svg""); 1120 ; 1121 @property. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 64 else:; 65 os.system(""pdf2svg %s.pdf %s.svg"" % (filename, filename)); ---> 66 with open(""%s.svg"" % filename) as f:; 67 result = f.read(); 68 . FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.svg'; ```; <img width=""1137"" alt=""Screenshot 2020-02-26 17 44 05"" src=""https://user-images.githubusercontent.com/14573436/75327357-9af58180-58bf-11ea-9989-6892f5b7af41.png"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185:21,release,release,21,https://qutip.org,https://github.com/qutip/qutip/issues/1185,2,"['install', 'release']","['installed', 'release']"
Deployability,"In moving to c++, we did not update the Cython cleanup routine. Also, using Visual Studio leads to a different set of temp files than GCC. Here, I take advantage of the fact that all the temp files start with 'tdname' and then just walk the dir to clean them, regardless of extension and what not.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/655:29,update,update,29,https://qutip.org,https://github.com/qutip/qutip/pull/655,1,['update'],['update']
Deployability,"In response to #920, and following the discussion in #949, we need some way to make the compile flags optional during setup. The `-march=native` is the probable cause of issues with the conda-forge build #647, and also causes problems for some installing in a cluster environment. However, for most people installing on a local machine, `-march=native` is likely to have significant performance advantages. The suggestion is then to have some cmd line option to choose compile flags where the default is 'optimal', which would include `-march=native`. @Ericgig we can discuss this next week",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/951:244,install,installing,244,https://qutip.org,https://github.com/qutip/qutip/issues/951,2,['install'],['installing']
Deployability,"In this issue #580 we discussed ways to make the `import qutip` lighter. This can up again today when discussing the `qip` module with @BoxiLi during our mentor meeting. It would seem like a good idea to only import to level functions (that is not module functions in sub-folders) when ; ```; from qutip import *; ```; is used. This would be in-line with how SciPy works for instance. A lot of people use the * import, so we should give warning, and should probably only do this in a major release. So the suggestion is that when we release the new QIP features that we move to V5. Arguably we could have done this for the solver changes in 4.4.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071:490,release,release,490,https://qutip.org,https://github.com/qutip/qutip/issues/1071,2,['release'],['release']
Deployability,Install optionals dep with runtime numpy version,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2463:0,Install,Install,0,https://qutip.org,https://github.com/qutip/qutip/pull/2463,1,['Install'],['Install']
Deployability,Install problem with fortran monte-carlo option,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/491:0,Install,Install,0,https://qutip.org,https://github.com/qutip/qutip/issues/491,1,['Install'],['Install']
Deployability,"Install qutip from pypi instead of github, which makes it always point to the most current release.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/284:0,Install,Install,0,https://qutip.org,https://github.com/qutip/qutip/pull/284,2,"['Install', 'release']","['Install', 'release']"
Deployability,"Installation error: ""ambiguous overloaded method""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['Install'],['Installation']
Deployability,Installation fails on Ubuntu 20.04 / Python 3.8,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['Install'],['Installation']
Deployability,Installation failure on linux (solus 64 bit),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['Install'],['Installation']
Deployability,Installation issues on MS Windows 8 and 10 64 bit,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/377,1,['Install'],['Installation']
Deployability,Installation of qutip shows various warnings on ubuntu 20.04.1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1389:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/1389,1,['Install'],['Installation']
Deployability,Installation on OS X with Homebrew script error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/348,1,['Install'],['Installation']
Deployability,Installing QuTiP fails in Poetry,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/2322,1,['Install'],['Installing']
Deployability,"Installing `qutip` as an external dependency fails if `cython` is not installed since it's imported without checks in [`setup.py`.](https://github.com/qutip/qutip/blob/0f412cd4bf983a3b497d54406103d0209b553a7a/setup.py#L52-53). From what I can tell, this was an issue before (#426) and was subsequently fixed (#489) but then again broken (https://github.com/qutip/qutip/commit/82e209512927a0d6086de31364004fdb0da8c59a). Sidestepping this would be great since for instance readthedocs to my knowledge doesn't allow running custom commands (like `pip install cython`) before installing dependencies when building a documentation that requires `qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1174:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1174,4,"['Install', 'install']","['Installing', 'install', 'installed', 'installing']"
Deployability,Installing as external dependency fails if Cython is missing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1174:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1174,1,['Install'],['Installing']
Deployability,Installing from conda gives fatal error for missing spmv_openmp.hpp,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['Install'],['Installing']
Deployability,"Installing qutip via the conda package and then importing it produces a crash for me:. goerz@mlhpc2:~> conda create -y -c conda-forge -m -n qutiptest python=3.5 qutip; Using Anaconda Cloud api site https://api.anaconda.org; Fetching package metadata: ........; Solving package specifications: ......... Package plan for installation in environment /home/goerz/.conda/envs/qutiptest:. The following NEW packages will be INSTALLED:. certifi: 2017.1.23-py35_0; cython: 0.25.2-py35_1; libgfortran: 3.0.0-1; mkl: 2017.0.1-0; ncurses: 5.9-10 numpy: 1.12.1-py35_0; openssl: 1.0.2k-1; pip: 9.0.1-py35_1; python: 3.5.3-1; qutip: 4.1.0-np112py35_1; readline: 6.2-2 (soft-link); scipy: 0.19.0-np112py35_0; setuptools: 33.1.1-py35_0; sqlite: 3.13.0-1; tk: 8.5.19-1; wheel: 0.29.0-py35_0; xz: 5.2.2-1; zlib: 1.2.11-0. Linking packages ...; [ COMPLETE ]|##########################| 100%; #; # To activate this environment, use:; # $ source activate qutiptest; #; # To deactivate this environment, use:; # $ source deactivate; #; goerz@mlhpc2:~> source activate qutiptest; discarding /home/goerz/.conda/envs/default/bin from PATH; prepending /home/goerz/.conda/envs/qutiptest/bin to PATH; (qutiptest)goerz@mlhpc2:~> python; Python 3.5.3 | packaged by conda-forge | (default, Feb 9 2017, 14:37:12); [GCC 4.8.2 20140120 (Red Hat 4.8.2-15)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; /home/goerz/.conda/envs/qutiptest/lib/python3.5/site-packages/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Illegal instruction (core dumped); (qutiptest)goerz@mlhpc2:~>. Let me know if you need further information on my setup in order to reproduce this",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/674,3,"['INSTALL', 'Install', 'install']","['INSTALLED', 'Installing', 'installation']"
Deployability,Integrate scheduler into the compiler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:0,Integrat,Integrate,0,https://qutip.org,https://github.com/qutip/qutip/pull/1444,1,['Integrat'],['Integrate']
Deployability,Integrate the pulse scheduler into Processor,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:0,Integrat,Integrate,0,https://qutip.org,https://github.com/qutip/qutip/pull/1365,1,['Integrat'],['Integrate']
Deployability,"Introduce a common ODE integrator interface for qutip's solver. Presently qutip's solver use `scipy.integratre.ode`'s zvode ODE solver, which support `adams` and `bdf` methods.; These are great method in most case, but not always optimal.; This PR introduce, a common interface to allow other ODE method to be used by solvers.; It also add 2 new scipy ODE solvers: `lsoda` and `dop853`.; `lsoda` detect if the system is stiff and switch between `adams` and `bdf`.; `dop853` is a 8th order Runge-Kutta method. The `Integrator` use `Data` as state and return the state as a pair `(t, state)`.; Often solver's run only compute the expectation values, so there is no need to create a `Qobj`.; Returning the time with the state is for `mcsolve` which have the integration advancing with one internal step and the run loop is cleaner in solver. . I did some benchmark and `adams` method is often the best scipy method.; Sparse system: loglog plot of time in function of system size.; ![image](https://user-images.githubusercontent.com/17770236/131005186-aa51aa86-8ecf-4c03-8ba4-eeddcd65af30.png). Dense time-dependent system.; ![image](https://user-images.githubusercontent.com/17770236/131005465-5c0a9e8e-9ec7-4409-8cda-70aab5129e1f.png). *`vern7`, `vern9`, and `diag` method will be introduced in another PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643:23,integrat,integrator,23,https://qutip.org,https://github.com/qutip/qutip/pull/1643,4,"['Integrat', 'integrat']","['Integrator', 'integration', 'integrator', 'integratre']"
Deployability,Is Python Headers a package? How to install? It is required for the following reason.; Python Headers 2.7+ Linux only. Needed for compiling Cython files; http://qutip.org/docs/latest/installation.html; Thanks~,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222:36,install,install,36,https://qutip.org,https://github.com/qutip/qutip/issues/1222,2,['install'],"['install', 'installation']"
Deployability,Is it possible to create a Hamiltonian which has continuous operators such as spatial differential operator? Perhaps this would be done using Sympy in some way?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/635:49,continuous,continuous,49,https://qutip.org,https://github.com/qutip/qutip/issues/635,1,['continuous'],['continuous']
Deployability,"Is there any performance reason why we should not compile the extensions using C++ ?. We are having issues with the conda forge packages:; conda-forge/qutip-feedstock#16; I am sure than this problem would not occur if we were compiling using MS compilers.; We are receiving lots of support requests on the Google group for help installing on Windows; We do not have a solution for python>=3.5 on Windows. I posted a question on the Cython help group asking about accessing complex functions on Windows. One suggestion was to try C++, importing functions from `complex` rather than `complex.h`. I made a small test project that imported `conj` and it compiled using MS compilers and worked on Windows 10 with both Python 2.7 and 3.5. We only have one small C source file. I guess it could be rewritten in C++ quite easily.; I can do further tests to check performance if we consider C++ compilation is an option for qutip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647:328,install,installing,328,https://qutip.org,https://github.com/qutip/qutip/issues/647,1,['install'],['installing']
Deployability,Issue #905 and #892; Numpy Requirements updated to 1.12 from 1.8 and Optional Dependency for Matplotlib added.; MacOS test is failing as mentioned in #963,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/967:40,update,updated,40,https://qutip.org,https://github.com/qutip/qutip/pull/967,1,['update'],['updated']
Deployability,"It is about time that we made the 4.3 release, @ajgpitch @nonhermitian. Could you please check and merge this? I will build the 4.3 dist and the documentation and then update pip and the conda-forge version. We have the new scattering module and PIQS in this version.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889:38,release,release,38,https://qutip.org,https://github.com/qutip/qutip/pull/889,2,"['release', 'update']","['release', 'update']"
Deployability,"It is possible that someone having trouble compiling qutip extensions may wish to set CFLAGS, CPATH, C_INCLUDE_PATH. Currently these would not be used in the qutip installation / building or extensions generally. I had a scenario where I was trying to install qutip on machines which I did not have sudo access on. They did not have cython or pydev. So I managed to install pydev and cython into the home folder. For the latter I had to set the C_INCLUDE_PATH to the local install of the C headers, or maybe I used the -I switch with CFLAGS. This did not work for qutip, so I made some changes to the `setup.py` files, and also the `pyximport` in `__init__.py`. However, none of it worked due to disk space issues in the end. Clearly, if there had been enough disk space, then Anaconda would have been a much better solution. So, the question are: ; 1. Is there any value in making a PR from the changes I made (in a local copy) to use the CFLAGS, CPATH, C_INCLUDE_PATH env vars if they are set?. 2. If so should the qutip pyximport extend or prepend the CFLAGS or should it not set CFLAGS at all if the user has set values?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/571:164,install,installation,164,https://qutip.org,https://github.com/qutip/qutip/issues/571,4,['install'],"['install', 'installation']"
Deployability,"It seems like I could change or remove the option if I could find it. Here is a dump of my issue with setup.py: . $ sudo python setup.py install; Installing without the fortran mcsolver.; running install; running build; running config_cc; unifing config_cc, config, build_clib, build_ext, build commands --compiler options; running config_fc; unifing config_fc, config, build_clib, build_ext, build commands --fcompiler options; running build_src; build_src; building py_modules sources; building extension ""qutip.cy.spmatfuncs"" sources; building extension ""qutip.cy.stochastic"" sources; building extension ""qutip.cy.sparse_utils"" sources; building extension ""qutip.cy.graph_utils"" sources; building extension ""qutip.control.cy_grape"" sources; building data_files sources; build_src: building npy-pkg config files; running build_py; copying qutip/version.py -> build/lib.linux-armv7l-2.7/qutip; copying build/src.linux-armv7l-2.7/qutip/**config**.py -> build/lib.linux-armv7l-2.7/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: arm-linux-gnueabihf-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC. compile options: '-I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/include/python2.7 -c'; extra options: '-w -ffast-math -O3 -march=native -mfpmath=sse'; arm-linux-gnueabihf-gcc: qutip/cy/spmatfuncs.c; arm-linux-gnueabihf-gcc: error: unrecognized command line option '-mfpmath=sse'; arm-linux-gnueabihf-gcc: error: unrecognized command line option '-mfpmath=sse'; error: Command ""arm-linux-gnueabihf-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/309:137,install,install,137,https://qutip.org,https://github.com/qutip/qutip/issues/309,3,"['Install', 'install']","['Installing', 'install']"
Deployability,"It seems that over the last year, nearly all packages in the scientific Python ecosystem have started to provide wheels. This is great news, as it make installation on platforms that don't have the necessary compilers installed very easy, and it's also extremely fast. So far, `conda` has been the only realistic option to install qutip outside of Linux development workstation, and it's not without caveats (https://github.com/qutip/qutip/issues/674). Conda has also been getting extremely slow; (https://github.com/conda/conda/issues/7239), which causes problem with continuous integration services or readthedocs (together with the fact that setting up conda on these services isn't entirely trivial, and, for readthedocs, buggy: https://github.com/rtfd/readthedocs.org/issues/3925, https://github.com/rtfd/readthedocs.org/issues/3829). If qutip were to provide wheels, this might alleviate all of these problems. Depending on how complicated the process is compared compared to a conda package, it might then even be ok to drop conda support.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933:152,install,installation,152,https://qutip.org,https://github.com/qutip/qutip/issues/933,5,"['continuous', 'install', 'integrat']","['continuous', 'install', 'installation', 'installed', 'integration']"
Deployability,"It seems the new macOS can not compile QuTiP, it can not find `<complex>`. The headers do present in `/usr/include` (however it required a header package installation on the new macOS)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/919:154,install,installation,154,https://qutip.org,https://github.com/qutip/qutip/issues/919,1,['install'],['installation']
Deployability,"It would be really nice if qutip coud support the numba jit compiler (https://numba.pydata.org/) in some future releases. This would also enable, to perform calculations using the GPU very easily.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/900:112,release,releases,112,https://qutip.org,https://github.com/qutip/qutip/issues/900,1,['release'],['releases']
Deployability,"Just a minor update where the diags of the sparse matrix are grabbed directly rather than converting the matrix to dense form. For larger density matrices, this method outperforms the dense method due to the time it takes to convert the format and do the multiplication.; - Also added more Wigner unit tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/527:13,update,update,13,https://qutip.org,https://github.com/qutip/qutip/pull/527,1,['update'],['update']
Deployability,Krylov as an integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:13,integrat,integrator,13,https://qutip.org,https://github.com/qutip/qutip/pull/1986,1,['integrat'],['integrator']
Deployability,"Last week we added numpy 2 support but did not update the requirements in `setup.cfg`. This update dependency to build using numpy 2 instead of oldest-supported-numpy.; I also increased the minimum requirements for matplotlib and scipy to version tested. I added more test using numpy 2, only one tests build and run using numpy 1.X.; I added more windows / mac tests. Using these os for testing numpy versions and no cython.; `cvxopt` (`dnorm`) does not run with numpy 2 yet, so it's only tested with older numpy version. Fix sqrtm needing copy. This mean that the test intended to run with numpy 2 previouly did not...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2457:47,update,update,47,https://qutip.org,https://github.com/qutip/qutip/pull/2457,2,['update'],['update']
Deployability,"Looking into the function `_mc_alg_evolve` in the source code of mcsolve, I have two questions in mind:; 1. Why do you divide the interval into each `tlist[k]` (`while ODE.t < tlist[k]:`) and run the ode internal step `ODE.integrate(tlist[k], step=1)` one at a time and evaluate `if norm2_psi <= rand_vals[0]:`?; Alternatively, can I run the ode `ODE.integrate(tlist, step=n)` without collapse until `norm2_psi <= rand_vals[0]`? It seems to be faster if `ODE.integrate(tlist, step=n)` can store the state. In this way I ignore `tlist[k]` totally.; 2. After `if norm2_psi <= rand_vals[0]:`, you find the collapse time to within specified tolerance. Can I just take the collapse time as the time immediately after `ODE.integrate(tlist[k], step=1)`? Since the step in the `ODE` should be small enough, would it make a lot difference by ignoring the steps of finding the collapse time to within specified tolerance?. Thank you very much.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503:223,integrat,integrate,223,https://qutip.org,https://github.com/qutip/qutip/issues/503,4,['integrat'],['integrate']
Deployability,"MESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1128,Integrat,Integrator,1128,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['Integrat'],['Integrator']
Deployability,"MacOS Mojave deliberately deleted the `user/include` folder so when compiling cython code, gcc cannot find the headers. I struggled a bit after suddenly updating to the latest MacOS and could find the solution here:. https://programmer.help/blogs/how-to-resolve-pip-install-twisted-error-limits.h-no-such-file-or-directory.html. Just do . ```; open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg; ```. In case others also update and end up with this error. @nathanshammah",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030:266,install,install-twisted-error-limits,266,https://qutip.org,https://github.com/qutip/qutip/issues/1030,2,"['install', 'update']","['install-twisted-error-limits', 'update']"
Deployability,Manual integration in floquet.floquet_master_equation_rates fail sometimes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:7,integrat,integration,7,https://qutip.org,https://github.com/qutip/qutip/issues/767,1,['integrat'],['integration']
Deployability,Matplotlib update broke qpt_plot_combined,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2233:11,update,update,11,https://qutip.org,https://github.com/qutip/qutip/issues/2233,1,['update'],['update']
Deployability,Minor homebrew script update,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/284:22,update,update,22,https://qutip.org,https://github.com/qutip/qutip/pull/284,1,['update'],['update']
Deployability,Minor updates to guide overview and guide basic operations,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1757:6,update,updates,6,https://qutip.org,https://github.com/qutip/qutip/pull/1757,2,['update'],['updates']
Deployability,New Integrator methods,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644:4,Integrat,Integrator,4,https://qutip.org,https://github.com/qutip/qutip/pull/1644,1,['Integrat'],['Integrator']
Deployability,"New schemes for the options. All options's default value can be set and seen in qutip.settings:; ```; >>> from qutip import settings; >>> settings.solver[""atol""] = 1e-10; >>> settings.core[""auto_tidyup""] = False; >>> settings.solver.mcsolve[""norm_tol""] = 1e-4; >>> settings.save(); >>> print(qutip.settings); qutip.settings.install:; debug : False; log_handler : 'default'; colorblind_safe : False; tmproot : '/home/eric/.qutip/coeffs'; mkl_lib : None; has_mkl : False; ipython : True; _logger : <Logger qutip.installsettings (WARNING)>; eigh_unsafe : False. qutip.settings.core:; auto_tidyup : False; auto_tidyup_dims : True; auto_herm : True; atol : 1e-12; auto_tidyup_atol : 1e-12; ...; ```. The main changes are; - `settings` is an object in `qutip/settings.py`.; - Actual options are accessed as dictionary values instead of attributes.; - `settings`'s values are read from qutiprc at import.; - Easy saving of settings; - `reset` function as described in documentation but not available yet.; - solver `Options` renamed and split, some options removed (`rhs_with_state`, ...). @jakelishman, I commented out most of the openmp stuff, I expect you to pass behind me and clean when you re-implement it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1337:324,install,install,324,https://qutip.org,https://github.com/qutip/qutip/pull/1337,2,['install'],"['install', 'installsettings']"
Deployability,"Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1328:370,release,release,370,https://qutip.org,https://github.com/qutip/qutip/pull/1328,1,['release'],['release']
Deployability,Not installing cvxpy will do this.; This is to deal with #880,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/881:4,install,installing,4,https://qutip.org,https://github.com/qutip/qutip/pull/881,1,['install'],['installing']
Deployability,Now it is an actual progressbar. It uses the '\r' character; in order to erase the entire line before each update. It works in the IPython notebook as well. Tested in 3.4. It should work in 2.7. Not sure about 2.6 (because of // division operator?),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121:107,update,update,107,https://qutip.org,https://github.com/qutip/qutip/pull/121,1,['update'],['update']
Deployability,"Numpy 1.20 officially deprecated use of `np.int` and other things like `np.complex`. These were just thin aliases to Python types anyway, so that replacement is safe. Swap `float` and `complex` to `np.float64` and `np.complex128`; these still match Python precision (and standard double-precision floats), but more importantly we assume at all points in Cython code that we're dealing with double-precision arithmetic. Anything else would be a larger problem for us. In cases where `np.int` was used as a type check, we actually care more about checking for Integral typing, rather than specifically the int class; super weird constructs like; ```python; isinstance(np.int64(1), int) == False; ```; so taking indices out of an ndarry may lead to incorrect results when this sort of test is used. Better to use the abstract; ```python; isinstance(..., numbers.Integral); ```. See: https://numpy.org/doc/stable/release/1.20.0-notes.html#using-the-aliases-of-builtin-types-like-np-int-is-deprecated",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1432:909,release,release,909,https://qutip.org,https://github.com/qutip/qutip/pull/1432,1,['release'],['release']
Deployability,ODE Integration Error in Tutorial Code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4,Integrat,Integration,4,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['Integrat'],['Integration']
Deployability,"ORY.md"">requests's changelog</a>.</em></p>; <blockquote>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> headers to destination servers when; following HTTPS redirects.</p>; <p>When proxies are defined with user info (<a href=""https://user:pass@proxy:8080"">https://user:pass@proxy:8080</a>), Requests; will construct a <code>Proxy-Authorization</code> header that is attached to the request to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>2.29.0 (2023-04-26)</h2>; <p><s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:3817,deploy,deployed,3817,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['deploy'],['deployed']
Deployability,"On the page of the documentation talking about qutip.mcsolve (""Monte Carlo Solver""), it describes the algorithm for the monte carlo simulation as:. > I: Choose a random number r between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r, at which point a jump occurs.; > III: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥r. In actuality, through my own reading of the code, **two** random numbers are generated, one for determining if a jump occurs, and another to determine which jump operator was responsible. I suggest the following change (changes highlighted in bold):. > I: Choose a random number **r_1** between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=**r_1**, at which point a jump occurs.; > **III: Choose a random number r_2 between zero and one, used to select which collapse operator was responsible for the jump.**; > IV: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥**r_2**. While this is not an issue in the code, the way the documentation is written at the moment implies that jumps which occur after a short amount of time will primarily be due to collapse operators at the end of the c_ops list, while jumps that happen after a long time will be biased towards collapse operators at the start of the c_ops list. Again, the code is correct, but the do",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1666:264,Integrat,Integrate,264,https://qutip.org,https://github.com/qutip/qutip/issues/1666,1,['Integrat'],['Integrate']
Deployability,"Once a Pull Request is merged to QuTiP, the contributor could add a short description to the Changelog, which contains changes of each [version release](http://qutip.org/docs/latest/changelog.html). ; It could be in the style of current changelog:. * A one-liner for **minor changes**, with a descriptive text and the author's name. ; * A short paragraph for **major changes**. . This guideline could be added to the contribution [how-to](https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md ).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1055:144,release,release,144,https://qutip.org,https://github.com/qutip/qutip/issues/1055,1,['release'],['release']
Deployability,"Once pull #648 is merged I am keen to get a v4.1 released.; The conda-forge packages for Windows currently do work. I am very keen to resolve this. ; Also very keen to get a solution for qutip on MS Windows with Python >= 3.5 out there.; I am happy to do the admin work for the release. The installation documentation will need updating, I am happy to this.; Is there anything else we would like to finish off, that can be done quickly, that we would like to get into a release of 4.1?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649:49,release,released,49,https://qutip.org,https://github.com/qutip/qutip/issues/649,4,"['install', 'release']","['installation', 'release', 'released']"
Deployability,PIQS module and updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861:16,update,updates,16,https://qutip.org,https://github.com/qutip/qutip/pull/861,1,['update'],['updates']
Deployability,Parallelizing `mcsolve` doesn't work with qutip Integrators with `improved_sampling=False`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450:48,Integrat,Integrators,48,https://qutip.org,https://github.com/qutip/qutip/issues/2450,1,['Integrat'],['Integrators']
Deployability,Patch metrics,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/130:0,Patch,Patch,0,https://qutip.org,https://github.com/qutip/qutip/pull/130,1,['Patch'],['Patch']
Deployability,Patch qutip.entropy.concurrence for pure states,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/143:0,Patch,Patch,0,https://qutip.org,https://github.com/qutip/qutip/pull/143,1,['Patch'],['Patch']
Deployability,Patches visualization,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/102:0,Patch,Patches,0,https://qutip.org,https://github.com/qutip/qutip/pull/102,1,['Patch'],['Patches']
Deployability,"Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b""><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2""><code>cac6ffa</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7927"">#7927</a> from python-pillow/imagemath</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c""><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recrea",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15039,Update,Update,15039,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Update'],['Update']
Deployability,"Possible solution to automating changelog/release notes, and adding PR templates",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1108:42,release,release,42,https://qutip.org,https://github.com/qutip/qutip/issues/1108,1,['release'],['release']
Deployability,Prepare 4.6.2 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1565:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/pull/1565,1,['release'],['release']
Deployability,Prepare 4.7.0 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1856:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/pull/1856,1,['release'],['release']
Deployability,Prepare QuTiP 4.7.1 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2046:20,release,release,20,https://qutip.org,https://github.com/qutip/qutip/pull/2046,1,['release'],['release']
Deployability,Prepare release 4.7.5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2310:8,release,release,8,https://qutip.org,https://github.com/qutip/qutip/pull/2310,1,['release'],['release']
Deployability,"Previously .render(...) took fig and axes arguments and overwrote self.fig and self.axes if the arguments were None. The actual values of the arguments were completely discarded (!!). In addition, not supplying a value for fig and axes would overwrite the values passed to the constructor as Bloch(..., fig=fig, axes=axes). The new behaviour is as follows:. * If an external figure is passed to the constructor it is retained. * If no figure is supplied, .render() will create a figure if one has not been created yet, or if the figure has been closed, will recreate it. As a special case, it will *not* recreate *closed* figures inside Jupyter notebooks using the inline backend, because that closes figures at the end of every cell and displays closed figures quite happily. . * .render() will always call self.fig.canvas.update() to ensure that any existing figure that is already shown will be updated. * .show() will now always render the figure and call `IPython.display.display` (if running in an IPython terminal) or `fig.plot()` otherwise. Previously it was possible to cause .render() to raise obscure exceptions by, e.g., calling .render(), closing the figure, calling; .render() again. See, for example, https://github.com/qutip/qutip/issues/1616. Previously when running in an IPython shell `.show()` would have to be called twice to have any effect if no figure was passed in. Now it only needs to be called once. The external figure tracking was backported from Qiskit's copy of Bloch and was inspired by PR https://github.com/Qiskit/qiskit-terra/pull/1091/. **Related issues or PRs**. * fixes #1616; * inspired by https://github.com/Qiskit/qiskit-terra/pull/1091/; * issue with `.show()` under `IPython` mentioned in #1690. **Changelog**. More carefully track the state of the Bloch sphere figure and axes to prevent exceptions during rendering.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619:824,update,update,824,https://qutip.org,https://github.com/qutip/qutip/pull/1619,2,['update'],"['update', 'updated']"
Deployability,"Previously, all tests in `test_metrics.py` were skipped if cvxpy or cvxopt were not installed. Addresses part 1 of https://github.com/qutip/qutip/issues/1703. **Changelog**; Only skip the dnorm tests if cvxpy is not installed (previously all metrics tests were skipped).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1704:84,install,installed,84,https://qutip.org,https://github.com/qutip/qutip/pull/1704,2,['install'],['installed']
Deployability,Problems installing qutip on OSX Yosemite,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265:9,install,installing,9,https://qutip.org,https://github.com/qutip/qutip/issues/265,1,['install'],['installing']
Deployability,Proposal for 4.4.1 Mostly to fix the bugs reported since 4.4.0's release but include small improvements. Bug Fixes; -------------. - Fixed the pickling but that made solver unable to run in parallel on Windows. (Thank **lrunze** for reporting); - Removed warning when mesolve fall back on sesolve (by **Michael Goerz**).; - Fixed dimension check and confusing documentation in random ket (by **Yariv Yanay**).; - Fixed Qobj isherm not working after using Qobj.permute. (Thank **llorz1207** for reporting); - Correlation functions call now properly handle multiple time dependant functions. (Thank **taw181** for reporting); - Removed mutable default values in mesolve/sesolve (by **Michael Goerz**); - Fixed simdiag bug (Thank **Croydon-Brixton** for reporting); - Better support of constant QobjEvo. (by **Boxi Li**). Improvements; ------------------. - QobjEvo do not need to start from 0 anymore. (by **Eric Giguere**); - Add a quantum object purity function. (by **Nathan Shammah** and **Shahnawaz Ahmed**); - Add step function interpolation for array time-coefficient. (by **Boxi Li**),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1069:65,release,release,65,https://qutip.org,https://github.com/qutip/qutip/pull/1069,1,['release'],['release']
Deployability,"Pursuant to discussions over the build failures observed in #359, this PR migrates Travis CI support to their new container-based configuration. I've observed that the builds with this configuration are more reliable, but they are slower for some reason. In the [instructions](http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade#Faster-builds) they provide, Travis say that this configuration should be faster, and to let them know if our build is slower; that might be worth doing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360:130,configurat,configuration,130,https://qutip.org,https://github.com/qutip/qutip/pull/360,4,"['configurat', 'upgrade']","['configuration', 'upgrade']"
Deployability,"Py 1.21.0 release highlights are</p>; <ul>; <li>continued SIMD work covering more functions and platforms,</li>; <li>initial work on the new dtype infrastructure and casting,</li>; <li>universal2 wheels for Python 3.8 and Python 3.9 on Mac,</li>; <li>improved documentation,</li>; <li>improved annotations,</li>; <li>new <code>PCG64DXSM</code> bitgenerator for random numbers.</li>; </ul>; <p>In addition there are the usual large number of bug fixes and other; improvements.</p>; <p>The Python versions supported for this release are 3.7-3.9. Official; support for Python 3.10 will be added when it is released.</p>; <p>:warning: Warning: there are unresolved problems compiling NumPy 1.21.0 with gcc-11.1 .</p>; <ul>; <li>Optimization level <code>-O3</code> results in many wrong warnings when running the tests.</li>; <li>On some hardware NumPy will hang in an infinite loop.</li>; </ul>; <h2>New functions</h2>; <h3>Add PCG64DXSM BitGenerator</h3>; <p>Uses of the PCG64 BitGenerator in a massively-parallel context have; been shown to have statistical weaknesses that were not apparent at the; first release in numpy 1.17. Most users will never observe this weakness; and are safe to continue to use PCG64. We have introduced a new; PCG64DXSM BitGenerator that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:1400,release,release,1400,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['release'],['release']
Deployability,PyPi release done. Bump 4.2.0 to 4.2.1. @ajgpitch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/744:5,release,release,5,https://qutip.org,https://github.com/qutip/qutip/pull/744,1,['release'],['release']
Deployability,Python 3.10 breaks qutip install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732:25,install,install,25,https://qutip.org,https://github.com/qutip/qutip/issues/1732,1,['install'],['install']
Deployability,"Python 3.8 was released awhile ago, so I thought I'd try activate its travis build and see if it passes.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170:15,release,released,15,https://qutip.org,https://github.com/qutip/qutip/pull/1170,1,['release'],['released']
Deployability,QIP module extension and integration with other modules,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441:25,integrat,integration,25,https://qutip.org,https://github.com/qutip/qutip/issues/441,1,['integrat'],['integration']
Deployability,Qcircuit update to version 2.6,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187:9,update,update,9,https://qutip.org,https://github.com/qutip/qutip/pull/1187,1,['update'],['update']
Deployability,Qobj updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/418:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/418,1,['update'],['updates']
Deployability,"QuTiP 4.5.3 fails to build from source distribution on PyPI, e.g. on Windows:; ```; c1xx: fatal error C1083: Cannot open source file: 'qutip/cy/openmp/src/zspmv_openmp.cpp': No such file or directory; ```; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449:821,update,update,821,https://qutip.org,https://github.com/qutip/qutip/pull/1449,1,['update'],['update']
Deployability,"QuTiP activities. QuTiP project members and contributors agree to abide by it and to build an inclusive community where criticism is provided and taken constructively and with empathy. Admin team members are responsible to enforce the Code of Conduct. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at qutip-admin@googlegroups.com _[activate this or alternate email]_. . ### 2. Admin Team; **The Admin Team leads technical code development and manages directly QuTiP-related activities.** It’s thanks to their work and the broader community that the QuTiP project keeps lively, the software is maintained and the features keep expanding and improving. . **<span style=""text-decoration:underline;"">Tasks</span>**. The admin team is listed on the qutip website and specific areas of competence are shown. Members of the admin team pledge to volunteer to:. - Maintain the project through software release updates and bug fixes (core code development, documentation, notebooks, website, other Github-related things). . **- Make decisions about specific technical issues, features, bugs and pull requests. They are the primary mechanism of guiding the code review process and merging pull requests. This includes closing pull requests or issues that are inactive for long or deemed not relevant. **. - Develop new features in qutip/qutip and qutip/other-libraries. ; - Help keep a steady pace of qutip library releases (e.g., ~2 minor releases/year). ; - Actively participate / respond to the qutip-dev internal forum.; - Help in the Q&A support group, qutip public forum. ; - Volunteer time for remote mentorship.; - Discuss code developments.; - Once a year, on a rotation basis, one admin team member is responsible for drafting a report for the QuTiP board.; - **For each subproject that is not qutip/qutip, at least one admin should actively be watching the repository.**. - If there are new projects that wish to come under the umbr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:7633,release,release,7633,https://qutip.org,https://github.com/qutip/qutip/issues/1373,2,"['release', 'update']","['release', 'updates']"
Deployability,"QuTiP cannot be imported after updating Scipy package to version 1.3.0. . Python 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""D:\Python\Python36\lib\site-packages\qutip\__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""D:\Python\Python36\lib\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""D:\Python\Python36\lib\site-packages\qutip\fastsparse.py"", line 37, in <module>; from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; ImportError: cannot import name 'IndexMixin'; >>>. I've consulted the problem with the Scipy team and they suggested that:; IndexMixin got moved and changed in gh-7827. It was private though, so QuTiP should not be using it. So would it be possible to update the QuTiP and to fix this problem? Thanks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019:1014,update,update,1014,https://qutip.org,https://github.com/qutip/qutip/issues/1019,1,['update'],['update']
Deployability,"QuTiP currently uses QCircuit 2 (version of 2011) to generate LaTeX circuits that are printed to screen or saved to file. A newer version of QCircuit is available, 2.6.0 (2018) https://www.ctan.org/pkg/qcircuit. * `qcircuit` could be updated to the latest version . * Also, the use of this open source package could be highlighted more evidently in the documentation. * Another package has been recently released, https://arxiv.org/abs/1809.03842, Quantikz, which has some features related to noise that could be useful especially with regard to PR #1065, Google Summer of Code project by @BoxiLi on noise modeling in QIP. As this other package is very young, maybe an option to draw the circuit with this package, instead of qcircuit, could be given, also to avoid issues.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096:234,update,updated,234,https://qutip.org,https://github.com/qutip/qutip/issues/1096,2,"['release', 'update']","['released', 'updated']"
Deployability,"QuTiP development is now based on a large community of continuous users and a smaller group of sporadic developers. Some developers continuously contribute to the development. . The nature of QuTiP, at the frontier of quantum physics research, implies that the development of new modules sometimes overlaps or stems from research projects. It could be nice to enhance the rate of contribution and mentoring from the users community in the spirit of openness and scalability. . ## GSoC and Wiki; An example of project ideas has been provided by the [Google Summer of Code 2019](https://numfocus.org/programs/google-summer-code), for which various researchers and coders, even if not directly part of the lead development team, proposed new projects on the [Wiki](https://github.com/qutip/qutip/wiki//Google-Summer-of-Code-2019). Two of these ideas were eventually brought forth by two students to develop their own projects over the summer. . The details are here https://gsoc2019-boxili.blogspot.com/ and here https://latticemodelfunctions.blogspot.com/. ## KWoC; I applied to the Kharagpur Winter of Code ([KWoC](https://kwoc.kossiitkgp.org/)) where mainly BSc and also MSc / PhDs can participate over the winter to a project on QuTiP. QuTiP just got selected and there is the opportunity for students projects over the winter. I will begin with proposing mine, but this is an opportunity also for mentors to propose their projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projec",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:55,continuous,continuous,55,https://qutip.org,https://github.com/qutip/qutip/issues/1132,2,['continuous'],"['continuous', 'continuously']"
Deployability,QuTiP executive error due to update of scipy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019:29,update,update,29,https://qutip.org,https://github.com/qutip/qutip/issues/1019,1,['update'],['update']
Deployability,QuTiP install for latest Python (3.9) on fresh conda env fails,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:6,install,install,6,https://qutip.org,https://github.com/qutip/qutip/issues/1371,1,['install'],['install']
Deployability,QuTiP installation test - FAILED test power-gmres,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:6,install,installation,6,https://qutip.org,https://github.com/qutip/qutip/issues/1750,1,['install'],['installation']
Deployability,"QuTiP is currently distributed through both Anaconda's conda-forge channel (`conda install qutip`) and PyPI (`pip install qutip`).; It could be helpful to the maintainers to have the project also on the test channel of PyPI, https://test.pypi.org, testing the distribution before uploading a new release on the actual PyPI channel. The [instructions](https://packaging.python.org/guides/using-testpypi/) are straightforward. Placing this as a memo for v. 4.4. Testing this would be helpful also as we attempt the wheels configuration (#933), which, as I understood from @Ericgig, might not be so straightforward given the low-level calls that QuTiP makes in some functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/992:83,install,install,83,https://qutip.org,https://github.com/qutip/qutip/issues/992,4,"['configurat', 'install', 'release']","['configuration', 'install', 'release']"
Deployability,"QuTiP is hosted on Anaconda's conda-forge channel and on PyPI. I would like to showcase downloads on the [website](https://github.com/qutip/qutip.github.io) and possibly have a development notebook (or in a personal repository) showing them updated, for QuTiP presentations. . * **conda install qutip**: For conda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:241,update,updated,241,https://qutip.org,https://github.com/qutip/qutip/issues/997,5,"['install', 'update']","['install', 'updated']"
Deployability,Qutip 4.4.x release ready,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1037:12,release,release,12,https://qutip.org,https://github.com/qutip/qutip/pull/1037,1,['release'],['release']
Deployability,Qutip does not install on M1 mac due to build Numpy requirement,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:15,install,install,15,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install']
Deployability,Qutip fails to install on Python 3.11.0,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:15,install,install,15,https://qutip.org,https://github.com/qutip/qutip/issues/2036,1,['install'],['install']
Deployability,"Qutip works fine with numpy 1.21.1, but fails on import with 1.22 numpy, released Dec 31st. Tested on ubuntu and MacOS. ```; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ```. Failure occurs here,. https://github.com/qutip/qutip/blob/52d01da181a21b810c3407812c670f35fdc647e8/qutip/utilities.py#L340. which is kind of mysterious since line 339 explicitly checks that the 'blas_opt_info' attribute exists, and then fails at line 340 because the attribute doesn't exist.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766:73,release,released,73,https://qutip.org,https://github.com/qutip/qutip/issues/1766,1,['release'],['released']
Deployability,"RCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:70451,install,install,70451,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install']
Deployability,"ROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1096,Install,Installing,1096,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['Install'],['Installing']
Deployability,Rand updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/419:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/419,1,['update'],['updates']
Deployability,"Referencing this : https://github.com/qutip/qutip-doc/pull/70. 1. Having manually compiled the changelog for v4.4.1 and v4.5.x today, I think that maybe we should try automating the release notes/changelogs with something like this : https://github.com/github-tools/github-release-notes; I'm attaching release notes generated by this for QuTiP.; [RELEASE_NOTES.txt](https://github.com/qutip/qutip/files/3728179/RELEASE_NOTES.txt). 2. We could also, in pursuit of having an automated release notes/changelog system start with making commits in more of a standard format, using some pre-decided keywords like [bugfix] or [improvement] in the commit message. I understand that this is a rather ambitious thing to say, but we can then use `grep` and `git log` itself to generate these in markdown. As a first step, I am proposing to use **Pull request /Issue** templates, something like this for instance : https://github.com/angular-translate/angular-translate/blob/master/.github/ISSUE_TEMPLATE.md; This way, all our Pull Requests and Issues will be homogeneously formatted.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1108:182,release,release,182,https://qutip.org,https://github.com/qutip/qutip/issues/1108,4,['release'],"['release', 'release-notes']"
Deployability,Release 3.1 code cleanup,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/292:0,Release,Release,0,https://qutip.org,https://github.com/qutip/qutip/pull/292,2,['Release'],['Release']
